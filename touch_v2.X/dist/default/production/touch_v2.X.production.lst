

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar 14 03:16:45 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1,inline
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=4,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=4,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=4,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=4,class=CODE,delta=1
   108                           	psect	text87,global,reloc=4,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=4,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=4,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=4,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=4,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=4,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=4,class=CODE,delta=1
   122                           	psect	text101,global,reloc=4,class=CODE,delta=1
   123                           	psect	text102,global,reloc=4,class=CODE,delta=1
   124                           	psect	text103,global,reloc=4,class=CODE,delta=1
   125                           	psect	text104,global,reloc=4,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   130                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   133                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   134  0000                     
   135                           ; Version 2.05
   136                           ; Generated 20/12/2018 GMT
   137                           ; 
   138                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   139                           ; All rights reserved.
   140                           ; 
   141                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   142                           ; 
   143                           ; Redistribution and use in source and binary forms, with or without modification, are
   144                           ; permitted provided that the following conditions are met:
   145                           ; 
   146                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   147                           ;        conditions and the following disclaimer.
   148                           ; 
   149                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   150                           ;        of conditions and the following disclaimer in the documentation and/or other
   151                           ;        materials provided with the distribution.
   152                           ; 
   153                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   154                           ;        software without specific prior written permission.
   155                           ; 
   156                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   157                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   158                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   159                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   160                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   161                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   162                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   163                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   164                           ; 
   165                           ; 
   166                           ; Code-generator required, PIC18F57K42 Definitions
   167                           ; 
   168                           ; SFR Addresses
   169  0000                     
   170 ;;_mode	offset	0
   171 ;;_rxData	offset	0
   172 ;;_t_link	offset=-1 (param)
   173 ;;_stream	offset=-6 (param)
   174 ;;_function	offset=-7 (param)
   175 ;;_f	offset	0
   176 ;;_ap	offset	5
   177 ;;_s	offset=-2 (param)
   178 ;;_fmt	offset=-3 (param)
   179 ;;_rxData	offset	0
   180 ;;_r_link	offset=-1 (param)
   181 ;;_k	offset	0
   182 ;;_checksum	offset	2
   183 ;;_i	offset	4
   184 ;;_byte_block	offset=-2 (param)
   185 ;;_length	offset=-3 (param)
   186 ;;_fake	offset=-4 (param)
   187 ;;_i	offset	0
   188 ;;_sum	offset	2
   189 ;;_byte_block	offset=-2 (param)
   190 ;;_byte_count	offset=-4 (param)
   191 ;;_bufData	offset=-1 (param)
   192 ;;_txData	offset=-1 (param)
   193 ;;_rxData	offset	0
   194 ;;_m_link	offset=-1 (param)
   195 ;;_byte_block	offset=-1 (param)
   196 ;;_clear	offset=-2 (param)
   197 ;;_numMilliseconds	offset=-2 (param)
   198 ;;_timer	offset=-1 (param)
   199 ;;_timer	offset=-1 (param)
   200 ;;_count	offset=-3 (param)
   201 ;;_readValue	offset	0
   202 ;;_readValue	offset	0
   203 ;;_cmd	offset=-1 (param)
   204 ;;_cmd	offset=-1 (param)
   205 ;;_data	offset=-1 (param)
   206 ;;__this	offset=-2 (param)
   207 ;;_r	offset=-1 (param)
   208 ;;_c	offset=-2 (param)
   209 ;;_strPtr	offset=-3 (param)
   210 ;;_strPtr	offset=-1 (param)
   211 ;;_cmd	offset=-1 (param)
   212 ;;_strPtr	offset=-1 (param)
   213 ;;_delay	offset=-4 (param)
   214 ;;__this	offset=-2 (param)
   215 ;;_clearBuffer	offset=-3 (param)
   216 ;;_s	offset	0
   217 ;;_k	offset	2
   218 ;;_dest	offset=-2 (param)
   219 ;;_c	offset=-4 (param)
   220 ;;_n	offset=-6 (param)
   221 ;;_ap	offset	0
   222 ;;_fmt	offset=-2 (param)
   223 ;;_cfmt	offset	0
   224 ;;_fp	offset=-2 (param)
   225 ;;_fmt	offset=-3 (param)
   226 ;;_ap	offset=-5 (param)
   227 ;;_ll	offset	0
   228 ;;_cp	offset	8
   229 ;;_c	offset	10
   230 ;;_fp	offset=-2 (param)
   231 ;;_fmt	offset=-4 (param)
   232 ;;_ap	offset=-6 (param)
   233 ;;_r	offset	0
   234 ;;_l	offset	1
   235 ;;__l	offset=-1 (param)
   236 ;;__r	offset=-2 (param)
   237 ;;_n	offset=-4 (param)
   238 ;;_nuls	offset	0
   239 ;;_l	offset	7
   240 ;;_p	offset	9
   241 ;;_cp	offset	11
   242 ;;_w	offset	13
   243 ;;_i	offset	15
   244 ;;_fp	offset=-2 (param)
   245 ;;_s	offset=-4 (param)
   246 ;;_dtoa$3835	offset	0
   247 ;;_n	offset	2
   248 ;;_i	offset	10
   249 ;;_s	offset	12
   250 ;;_w	offset	14
   251 ;;_p	offset	16
   252 ;;_fp	offset=-2 (param)
   253 ;;_d	offset=-10 (param)
   254 ;;_a	offset=-2 (param)
   255 ;;_sign	offset	0
   256 ;;_counter	offset	1
   257 ;;_dividend	offset=-8 (param)
   258 ;;_divisor	offset=-16 (param)
   259 ;;_quotient	offset	0
   260 ;;_sign	offset	8
   261 ;;_counter	offset	9
   262 ;;_dividend	offset=-8 (param)
   263 ;;_divisor	offset=-16 (param)
   264 ;;_w	offset	0
   265 ;;_fp	offset=-2 (param)
   266 ;;_c	offset=-3 (param)
   267 ;;_w	offset	0
   268 ;;_i	offset	2
   269 ;;_fp	offset=-2 (param)
   270 ;;_buf	offset=-4 (param)
   271 ;;_p	offset=-6 (param)
   272 ;;_a	offset	0
   273 ;;_s	offset=-2 (param)
   274 ;;_i	offset	0
   275 ;;_c	offset	2
   276 ;;_s	offset=-2 (param)
   277 ;;_fp	offset=-4 (param)
   278 ;;_c	offset=-2 (param)
   279 ;;_fp	offset=-4 (param)
   280 ;;_c	offset=-1 (param)
   281 ;;__this	offset=-2 (param)
   282 ;;_c	offset=-3 (param)
   283 ;;_InterruptHandler	offset=-3 (param)
   284 ;;_InterruptHandler	offset=-3 (param)
   285 ;;_InterruptHandler	offset=-3 (param)
   286 ;;_InterruptHandler	offset=-3 (param)
   287 ;;_InterruptHandler	offset=-3 (param)
   288 ;;_InterruptHandler	offset=-3 (param)
   289 ;;_state	offset	0
   290 ;;_InterruptHandler	offset=-3 (param)
   291 ;;_InterruptHandler	offset=-3 (param)
   292 ;;_InterruptHandler	offset=-3 (param)
   293 ;;_InterruptHandler	offset=-3 (param)
   294 ;;_i	offset	0
   295 ;;_timerVal	offset=-2 (param)
   296                           
   297                           	psect	idataCOMRAM
   298  006182                     __pidataCOMRAM:
   299                           	opt callstack 0
   300                           
   301                           ;initializer for r_protocol@retry
   302  006182  03                 	db	3
   303                           
   304                           	psect	idataBANK0
   305  00615E                     __pidataBANK0:
   306                           	opt callstack 0
   307                           
   308                           ;initializer for stoa@F1144
   309  00615E  28                 	db	40
   310  00615F  6E                 	db	110
   311  006160  75                 	db	117
   312  006161  6C                 	db	108
   313  006162  6C                 	db	108
   314  006163  29                 	db	41
   315  006164  00                 	db	0
   316                           
   317                           	psect	idataBANK1
   318  004D74                     __pidataBANK1:
   319                           	opt callstack 0
   320                           
   321                           ;initializer for _H10
   322  004D74  0000               	dw	0
   323  004D76  0001               	dw	1
   324  004D78  0000               	dw	0
   325  004D7A  01                 	db	1
   326  004D7B  80                 	db	128
   327  004D7C  01                 	db	1
   328  004D7D  81                 	db	129
   329  004D7E  00                 	db	0
   330  004D7F  00                 	db	0
   331  004D80  0A                 	db	10
   332  004D81  0000               	dw	0
   333  004D83  00                 	db	0
   334  004D84  00                 	db	0
   335  004D85  00                 	db	0
   336  004D86  00                 	db	0
   337  004D87  00                 	db	0
   338  004D88  00                 	db	0
   339  004D89  00                 	db	0
   340  004D8A  00                 	db	0
   341  004D8B  00                 	db	0
   342  004D8C  00                 	db	0
   343  004D8D  0A                 	db	10
   344  004D8E  0000               	dw	0
   345  004D90  0001               	dw	1
   346  004D92  0000               	dw	0
   347  004D94  01                 	db	1
   348  004D95  80                 	db	128
   349  004D96  00                 	db	0
   350  004D97  01                 	db	1
   351  004D98  00                 	db	0
   352  004D99  00                 	db	0
   353  004D9A  0A                 	db	10
   354  004D9B  0000               	dw	0
   355  004D9D  0001               	dw	1
   356  004D9F  0000               	dw	0
   357  004DA1  01                 	db	1
   358  004DA2  80                 	db	128
   359  004DA3  01                 	db	1
   360  004DA4  81                 	db	129
   361  004DA5  00                 	db	0
   362  004DA6  80                 	db	128
   363  004DA7  0A                 	db	10
   364  004DA8  0000               	dw	0
   365  004DAA  0001               	dw	1
   366  004DAC  0000               	dw	0
   367  004DAE  01                 	db	1
   368  004DAF  80                 	db	128
   369  004DB0  11                 	db	17
   370  004DB1  82                 	db	130
   371  004DB2  00                 	db	0
   372  004DB3  00                 	db	0
   373  004DB4  0A                 	db	10
   374                           
   375                           ;initializer for _H27
   376  004DB5  0000               	dw	0
   377  004DB7  00                 	db	0
   378  004DB8  00                 	db	0
   379  004DB9  00                 	db	0
   380  004DBA  00                 	db	0
   381  004DBB  00                 	db	0
   382  004DBC  00                 	db	0
   383  004DBD  00                 	db	0
   384  004DBE  00                 	db	0
   385  004DBF  00                 	db	0
   386  004DC0  00                 	db	0
   387  004DC1  00                 	db	0
   388  004DC2  00                 	db	0
   389  004DC3  00                 	db	0
   390  004DC4  00                 	db	0
   391  004DC5  00                 	db	0
   392  004DC6  00                 	db	0
   393  004DC7  00                 	db	0
   394  004DC8  0001               	dw	1
   395  004DCA  0000               	dw	0
   396  004DCC  01                 	db	1
   397  004DCD  80                 	db	128
   398  004DCE  0D                 	db	13
   399  004DCF  81                 	db	129
   400  004DD0  00                 	db	0
   401  004DD1  80                 	db	128
   402  004DD2  1B                 	db	27
   403                           
   404                           ;initializer for _H12
   405  004DD3  0000               	dw	0
   406  004DD5  00                 	db	0
   407  004DD6  01                 	db	1
   408  004DD7  0001               	dw	1
   409  004DD9  0000               	dw	0
   410  004DDB  01                 	db	1
   411  004DDC  80                 	db	128
   412  004DDD  02                 	db	2
   413  004DDE  01                 	db	1
   414  004DDF  00                 	db	0
   415  004DE0  00                 	db	0
   416  004DE1  0C                 	db	12
   417  004DE2  0000               	dw	0
   418  004DE4  00                 	db	0
   419  004DE5  01                 	db	1
   420  004DE6  0001               	dw	1
   421  004DE8  0000               	dw	0
   422  004DEA  01                 	db	1
   423  004DEB  80                 	db	128
   424  004DEC  0D                 	db	13
   425  004DED  81                 	db	129
   426  004DEE  00                 	db	0
   427  004DEF  00                 	db	0
   428  004DF0  0C                 	db	12
   429                           
   430                           ;initializer for _H24
   431  004DF1  0000               	dw	0
   432  004DF3  41                 	db	65
   433  004DF4  20                 	db	32
   434  004DF5  30                 	db	48
   435  004DF6  31                 	db	49
   436  004DF7  30                 	db	48
   437  004DF8  39                 	db	57
   438  004DF9  31                 	db	49
   439  004DFA  31                 	db	49
   440  004DFB  30                 	db	48
   441  004DFC  38                 	db	56
   442  004DFD  34                 	db	52
   443  004DFE  36                 	db	54
   444  004DFF  30                 	db	48
   445  004E00  30                 	db	48
   446  004E01  0001               	dw	1
   447  004E03  0000               	dw	0
   448  004E05  01                 	db	1
   449  004E06  80                 	db	128
   450  004E07  12                 	db	18
   451  004E08  02                 	db	2
   452  004E09  00                 	db	0
   453  004E0A  00                 	db	0
   454  004E0B  18                 	db	24
   455                           
   456                           ;initializer for _H17
   457  004E0C  0000               	dw	0
   458  004E0E  00                 	db	0
   459  004E0F  01                 	db	1
   460  004E10  00                 	db	0
   461  004E11  01                 	db	1
   462  004E12  21                 	db	33
   463  004E13  02                 	db	2
   464  004E14  01                 	db	1
   465  004E15  0001               	dw	1
   466  004E17  0000               	dw	0
   467  004E19  01                 	db	1
   468  004E1A  80                 	db	128
   469  004E1B  0E                 	db	14
   470  004E1C  01                 	db	1
   471  004E1D  00                 	db	0
   472  004E1E  00                 	db	0
   473  004E1F  11                 	db	17
   474                           
   475                           ;initializer for _H14
   476  004E20  0000               	dw	0
   477  004E22  00                 	db	0
   478  004E23  41                 	db	65
   479  004E24  11                 	db	17
   480  004E25  01                 	db	1
   481  004E26  0001               	dw	1
   482  004E28  0000               	dw	0
   483  004E2A  01                 	db	1
   484  004E2B  80                 	db	128
   485  004E2C  04                 	db	4
   486  004E2D  01                 	db	1
   487  004E2E  00                 	db	0
   488  004E2F  00                 	db	0
   489  004E30  0E                 	db	14
   490                           
   491                           ;initializer for _H13
   492  004E31  0000               	dw	0
   493  004E33  00                 	db	0
   494  004E34  01                 	db	1
   495  004E35  21                 	db	33
   496  004E36  0001               	dw	1
   497  004E38  0000               	dw	0
   498  004E3A  01                 	db	1
   499  004E3B  80                 	db	128
   500  004E3C  0C                 	db	12
   501  004E3D  06                 	db	6
   502  004E3E  00                 	db	0
   503  004E3F  00                 	db	0
   504  004E40  0D                 	db	13
   505                           
   506                           	psect	idataBANK2
   507  005A62                     __pidataBANK2:
   508                           	opt callstack 0
   509                           
   510                           ;initializer for _H53
   511  005A62  0000               	dw	0
   512  005A64  00                 	db	0
   513  005A65  00                 	db	0
   514  005A66  00                 	db	0
   515  005A67  00                 	db	0
   516  005A68  00                 	db	0
   517  005A69  00                 	db	0
   518  005A6A  00                 	db	0
   519  005A6B  00                 	db	0
   520  005A6C  00                 	db	0
   521  005A6D  00                 	db	0
   522  005A6E  00                 	db	0
   523  005A6F  00                 	db	0
   524  005A70  00                 	db	0
   525  005A71  00                 	db	0
   526  005A72  00                 	db	0
   527  005A73  00                 	db	0
   528  005A74  00                 	db	0
   529  005A75  00                 	db	0
   530  005A76  00                 	db	0
   531  005A77  00                 	db	0
   532  005A78  00                 	db	0
   533  005A79  00                 	db	0
   534  005A7A  00                 	db	0
   535  005A7B  00                 	db	0
   536  005A7C  00                 	db	0
   537  005A7D  00                 	db	0
   538  005A7E  00                 	db	0
   539  005A7F  00                 	db	0
   540  005A80  00                 	db	0
   541  005A81  00                 	db	0
   542  005A82  00                 	db	0
   543  005A83  00                 	db	0
   544  005A84  00                 	db	0
   545  005A85  00                 	db	0
   546  005A86  00                 	db	0
   547  005A87  00                 	db	0
   548  005A88  00                 	db	0
   549  005A89  00                 	db	0
   550  005A8A  00                 	db	0
   551  005A8B  46                 	db	70
   552  005A8C  01                 	db	1
   553  005A8D  41                 	db	65
   554  005A8E  00                 	db	0
   555  005A8F  0001               	dw	1
   556  005A91  0000               	dw	0
   557  005A93  01                 	db	1
   558  005A94  80                 	db	128
   559  005A95  03                 	db	3
   560  005A96  8A                 	db	138
   561  005A97  00                 	db	0
   562  005A98  00                 	db	0
   563  005A99  35                 	db	53
   564  0000                     _IVTADL	set	14493
   565  0000                     _IVTADH	set	14494
   566  0000                     _IVTADU	set	14495
   567  0000                     _PIE8bits	set	14744
   568  0000                     _PIR8bits	set	14760
   569  0000                     _SCANPR	set	14839
   570  0000                     _DMA2PR	set	14836
   571  0000                     _DMA1PR	set	14835
   572  0000                     _MAINPR	set	14834
   573  0000                     _ISRPR	set	14833
   574  0000                     _PIE2bits	set	14738
   575  0000                     _PIR2bits	set	14754
   576  0000                     _PIE9bits	set	14745
   577  0000                     _PIR9bits	set	14761
   578  0000                     _PIE6bits	set	14742
   579  0000                     _PIE3bits	set	14739
   580  0000                     _PMD7	set	14791
   581  0000                     _PMD6	set	14790
   582  0000                     _PMD5	set	14789
   583  0000                     _PMD4	set	14788
   584  0000                     _PMD3	set	14787
   585  0000                     _PMD2	set	14786
   586  0000                     _PMD1	set	14785
   587  0000                     _PMD0	set	14784
   588  0000                     _OSCTUNE	set	14814
   589  0000                     _OSCFRQ	set	14815
   590  0000                     _OSCEN	set	14813
   591  0000                     _OSCCON3	set	14811
   592  0000                     _OSCCON1	set	14809
   593  0000                     _IPR8bits	set	14728
   594  0000                     _IPR9bits	set	14729
   595  0000                     _IPR7bits	set	14727
   596  0000                     _IPR5bits	set	14725
   597  0000                     _IPR1bits	set	14721
   598  0000                     _IPR3bits	set	14723
   599  0000                     _IPR6bits	set	14726
   600  0000                     _IPR2bits	set	14722
   601  0000                     _PIE7bits	set	14743
   602  0000                     _PIE5bits	set	14741
   603  0000                     _PIE1bits	set	14737
   604  0000                     _PIR7bits	set	14759
   605  0000                     _PIR5bits	set	14757
   606  0000                     _PIR1bits	set	14753
   607  0000                     _PLLR	set	118496
   608  0000                     _SPI1SDIPPS	set	15071
   609  0000                     _RC6PPS	set	14870
   610  0000                     _RC5PPS	set	14869
   611  0000                     _RA6PPS	set	14854
   612  0000                     _RA5PPS	set	14853
   613  0000                     _RA4PPS	set	14852
   614  0000                     _SPI1SCKPPS	set	15070
   615  0000                     _U1RXPPS	set	15077
   616  0000                     _INT1PPS	set	15041
   617  0000                     _INT2PPS	set	15042
   618  0000                     _INT0PPS	set	15040
   619  0000                     _RC3PPS	set	14867
   620  0000                     _RB6PPS	set	14862
   621  0000                     _U2RXPPS	set	15080
   622  0000                     _SLRCONF	set	14995
   623  0000                     _SLRCONE	set	14979
   624  0000                     _SLRCOND	set	14963
   625  0000                     _SLRCONC	set	14947
   626  0000                     _SLRCONB	set	14931
   627  0000                     _SLRCONA	set	14915
   628  0000                     _ODCOND	set	14962
   629  0000                     _ODCONC	set	14946
   630  0000                     _ODCONB	set	14930
   631  0000                     _ODCONA	set	14914
   632  0000                     _ODCONF	set	14994
   633  0000                     _ODCONE	set	14978
   634  0000                     _WPUC	set	14945
   635  0000                     _WPUA	set	14913
   636  0000                     _WPUB	set	14929
   637  0000                     _WPUE	set	14977
   638  0000                     _WPUF	set	14993
   639  0000                     _WPUD	set	14961
   640  0000                     _ANSELA	set	14912
   641  0000                     _ANSELF	set	14992
   642  0000                     _ANSELE	set	14976
   643  0000                     _ANSELB	set	14928
   644  0000                     _ANSELC	set	14944
   645  0000                     _ANSELD	set	14960
   646  0000                     _DMA1SSA	set	15353
   647  0000                     _DMA1DSZ	set	15342
   648  0000                     _DMA1SSZ	set	15351
   649  0000                     _DMA1DSA	set	15344
   650  0000                     _DMA1CON0bits	set	15356
   651  0000                     _DMA1CON1bits	set	15357
   652  0000                     _DMA1CON0	set	15356
   653  0000                     _DMA1AIRQ	set	15358
   654  0000                     _DMA1SIRQ	set	15359
   655  0000                     _DMA1CON1	set	15357
   656  0000                     _CLC1CON	set	15476
   657  0000                     _CLC1GLS3	set	15485
   658  0000                     _CLC1GLS2	set	15484
   659  0000                     _CLC1GLS1	set	15483
   660  0000                     _CLC1GLS0	set	15482
   661  0000                     _CLC1SEL3	set	15481
   662  0000                     _CLC1SEL2	set	15480
   663  0000                     _CLC1SEL1	set	15479
   664  0000                     _CLC1SEL0	set	15478
   665  0000                     _CLC1POL	set	15477
   666  0000                     _CLKRCON	set	15589
   667  0000                     _CLKRCLK	set	15590
   668  0000                     _MD1CARL	set	15613
   669  0000                     _MD1CARH	set	15614
   670  0000                     _MD1SRC	set	15612
   671  0000                     _MD1CON1bits	set	15611
   672  0000                     _MD1CON0bits	set	15610
   673  0000                     _SPI1INTFbits	set	15642
   674  0000                     _SPI1RXB	set	15632
   675  0000                     _SPI1TXB	set	15633
   676  0000                     _SPI1TCNTL	set	15634
   677  0000                     _SPI1CON0	set	15636
   678  0000                     _SPI1CLK	set	15644
   679  0000                     _SPI1BAUD	set	15641
   680  0000                     _SPI1CON2	set	15638
   681  0000                     _SPI1CON1	set	15637
   682  0000                     _U2RXB	set	15824
   683  0000                     _U2TXB	set	15826
   684  0000                     _U2ERRIE	set	15842
   685  0000                     _U2ERRIR	set	15841
   686  0000                     _U2UIR	set	15840
   687  0000                     _U2FIFO	set	15839
   688  0000                     _U2BRGH	set	15838
   689  0000                     _U2BRGL	set	15837
   690  0000                     _U2CON2	set	15836
   691  0000                     _U2CON1	set	15835
   692  0000                     _U2CON0	set	15834
   693  0000                     _U2P3L	set	15832
   694  0000                     _U2P2L	set	15830
   695  0000                     _U2P1L	set	15828
   696  0000                     _U1RXB	set	15848
   697  0000                     _U1TXB	set	15850
   698  0000                     _U1ERRIE	set	15866
   699  0000                     _U1ERRIR	set	15865
   700  0000                     _U1UIR	set	15864
   701  0000                     _U1FIFO	set	15863
   702  0000                     _U1BRGH	set	15862
   703  0000                     _U1BRGL	set	15861
   704  0000                     _U1CON2	set	15860
   705  0000                     _U1CON1	set	15859
   706  0000                     _U1CON0	set	15858
   707  0000                     _U1P3H	set	15857
   708  0000                     _U1P3L	set	15856
   709  0000                     _U1P2H	set	15855
   710  0000                     _U1P2L	set	15854
   711  0000                     _U1P1H	set	15853
   712  0000                     _U1P1L	set	15852
   713  0000                     _ADCON0	set	16120
   714  0000                     _ADCLK	set	16127
   715  0000                     _ADACT	set	16126
   716  0000                     _ADREF	set	16125
   717  0000                     _ADSTAT	set	16124
   718  0000                     _ADCON3	set	16123
   719  0000                     _ADCON2	set	16122
   720  0000                     _ADCON1	set	16121
   721  0000                     _ADPREH	set	16119
   722  0000                     _ADPREL	set	16118
   723  0000                     _ADCAP	set	16117
   724  0000                     _ADACQH	set	16116
   725  0000                     _ADACQL	set	16115
   726  0000                     _ADPCH	set	16113
   727  0000                     _ADRPT	set	16108
   728  0000                     _ADACCU	set	16106
   729  0000                     _ADSTPTH	set	16101
   730  0000                     _ADSTPTL	set	16100
   731  0000                     _ADUTHH	set	16097
   732  0000                     _ADUTHL	set	16096
   733  0000                     _ADLTHH	set	16095
   734  0000                     _ADLTHL	set	16094
   735  0000                     _NCO1CONbits	set	16190
   736  0000                     _NCO1INCL	set	16187
   737  0000                     _NCO1INCH	set	16188
   738  0000                     _NCO1INCU	set	16189
   739  0000                     _NCO1ACCL	set	16184
   740  0000                     _NCO1ACCH	set	16185
   741  0000                     _NCO1ACCU	set	16186
   742  0000                     _NCO1CLK	set	16191
   743  0000                     _NCO1CON	set	16190
   744  0000                     _LATCbits	set	16316
   745  0000                     _LATDbits	set	16317
   746  0000                     _PORTBbits	set	16331
   747  0000                     _LATEbits	set	16318
   748  0000                     _T5CONbits	set	16282
   749  0000                     _T5CON	set	16282
   750  0000                     _TMR5L	set	16280
   751  0000                     _TMR5H	set	16281
   752  0000                     _T5CLK	set	16285
   753  0000                     _T5GATE	set	16284
   754  0000                     _T5GCON	set	16283
   755  0000                     _T6CON	set	16276
   756  0000                     _T6TMR	set	16274
   757  0000                     _T6PR	set	16275
   758  0000                     _T6RST	set	16279
   759  0000                     _T6HLT	set	16277
   760  0000                     _T6CLKCON	set	16278
   761  0000                     _TRISD	set	16325
   762  0000                     _TRISC	set	16324
   763  0000                     _TRISB	set	16323
   764  0000                     _TRISA	set	16322
   765  0000                     _TRISF	set	16327
   766  0000                     _TRISE	set	16326
   767  0000                     _LATC	set	16316
   768  0000                     _LATB	set	16315
   769  0000                     _LATF	set	16319
   770  0000                     _LATA	set	16314
   771  0000                     _LATD	set	16317
   772  0000                     _LATE	set	16318
   773  0000                     _IVTLOCKbits	set	16340
   774  0000                     _IVTLOCK	set	16340
   775  0000                     _INTCON0bits	set	16338
   776  0000                     _GIE	set	130711
   777                           
   778                           	psect	smallconst
   779  002000                     __psmallconst:
   780                           	opt callstack 0
   781  002000  00                 	db	0
   782  002001                     STR_15:
   783  002001  20                 	db	32
   784  002002  52                 	db	82	;'R'
   785  002003  25                 	db	37
   786  002004  64                 	db	100	;'d'
   787  002005  20                 	db	32
   788  002006  54                 	db	84	;'T'
   789  002007  25                 	db	37
   790  002008  64                 	db	100	;'d'
   791  002009  20                 	db	32
   792  00200A  46                 	db	70	;'F'
   793  00200B  52                 	db	82	;'R'
   794  00200C  25                 	db	37
   795  00200D  64                 	db	100	;'d'
   796  00200E  20                 	db	32
   797  00200F  46                 	db	70	;'F'
   798  002010  53                 	db	83	;'S'
   799  002011  25                 	db	37
   800  002012  64                 	db	100	;'d'
   801  002013  20                 	db	32
   802  002014  23                 	db	35
   803  002015  00                 	db	0
   804  002016                     STR_11:
   805  002016  20                 	db	32
   806  002017  4C                 	db	76	;'L'
   807  002018  4F                 	db	79	;'O'
   808  002019  47                 	db	71	;'G'
   809  00201A  20                 	db	32
   810  00201B  4D                 	db	77	;'M'
   811  00201C  4F                 	db	79	;'O'
   812  00201D  44                 	db	68	;'D'
   813  00201E  45                 	db	69	;'E'
   814  00201F  20                 	db	32
   815  002020  25                 	db	37
   816  002021  6C                 	db	108	;'l'
   817  002022  64                 	db	100	;'d'
   818  002023  20                 	db	32
   819  002024  20                 	db	32
   820  002025  20                 	db	32
   821  002026  20                 	db	32
   822  002027  20                 	db	32
   823  002028  23                 	db	35
   824  002029  00                 	db	0
   825  00202A                     STR_9:
   826  00202A  45                 	db	69	;'E'
   827  00202B  20                 	db	32
   828  00202C  52                 	db	82	;'R'
   829  00202D  25                 	db	37
   830  00202E  64                 	db	100	;'d'
   831  00202F  20                 	db	32
   832  002030  54                 	db	84	;'T'
   833  002031  25                 	db	37
   834  002032  64                 	db	100	;'d'
   835  002033  20                 	db	32
   836  002034  45                 	db	69	;'E'
   837  002035  25                 	db	37
   838  002036  64                 	db	100	;'d'
   839  002037  20                 	db	32
   840  002038  41                 	db	65	;'A'
   841  002039  25                 	db	37
   842  00203A  64                 	db	100	;'d'
   843  00203B  20                 	db	32
   844  00203C  23                 	db	35
   845  00203D  00                 	db	0
   846  00203E                     STR_5:
   847  00203E  20                 	db	32
   848  00203F  48                 	db	72	;'H'
   849  002040  4F                 	db	79	;'O'
   850  002041  53                 	db	83	;'S'
   851  002042  54                 	db	84	;'T'
   852  002043  20                 	db	32
   853  002044  4D                 	db	77	;'M'
   854  002045  4F                 	db	79	;'O'
   855  002046  44                 	db	68	;'D'
   856  002047  45                 	db	69	;'E'
   857  002048  20                 	db	32
   858  002049  25                 	db	37
   859  00204A  6C                 	db	108	;'l'
   860  00204B  64                 	db	100	;'d'
   861  00204C  20                 	db	32
   862  00204D  20                 	db	32
   863  00204E  20                 	db	32
   864  00204F  23                 	db	35
   865  002050  00                 	db	0
   866  002051                     STR_1:
   867  002051  20                 	db	32
   868  002052  52                 	db	82	;'R'
   869  002053  56                 	db	86	;'V'
   870  002054  49                 	db	73	;'I'
   871  002055  20                 	db	32
   872  002056  48                 	db	72	;'H'
   873  002057  4F                 	db	79	;'O'
   874  002058  53                 	db	83	;'S'
   875  002059  54                 	db	84	;'T'
   876  00205A  20                 	db	32
   877  00205B  54                 	db	84	;'T'
   878  00205C  45                 	db	69	;'E'
   879  00205D  53                 	db	83	;'S'
   880  00205E  54                 	db	84	;'T'
   881  00205F  45                 	db	69	;'E'
   882  002060  52                 	db	82	;'R'
   883  002061  00                 	db	0
   884  002062                     STR_4:
   885  002062  20                 	db	32
   886  002063  46                 	db	70	;'F'
   887  002064  47                 	db	71	;'G'
   888  002065  42                 	db	66	;'B'
   889  002066  40                 	db	64	;'@'
   890  002067  4D                 	db	77	;'M'
   891  002068  43                 	db	67	;'C'
   892  002069  48                 	db	72	;'H'
   893  00206A  50                 	db	80	;'P'
   894  00206B  20                 	db	32
   895  00206C  46                 	db	70	;'F'
   896  00206D  41                 	db	65	;'A'
   897  00206E  42                 	db	66	;'B'
   898  00206F  34                 	db	52	;'4'
   899  002070  00                 	db	0
   900  002071                     STR_6:
   901  002071  20                 	db	32
   902  002072  53                 	db	83	;'S'
   903  002073  25                 	db	37
   904  002074  64                 	db	100	;'d'
   905  002075  46                 	db	70	;'F'
   906  002076  25                 	db	37
   907  002077  64                 	db	100	;'d'
   908  002078  20                 	db	32
   909  002079  23                 	db	35
   910  00207A  20                 	db	32
   911  00207B  20                 	db	32
   912  00207C  20                 	db	32
   913  00207D  20                 	db	32
   914  00207E  00                 	db	0
   915  00207F                     STR_2:
   916  00207F  20                 	db	32
   917  002080  56                 	db	86	;'V'
   918  002081  65                 	db	101	;'e'
   919  002082  72                 	db	114	;'r'
   920  002083  73                 	db	115	;'s'
   921  002084  69                 	db	105	;'i'
   922  002085  6F                 	db	111	;'o'
   923  002086  6E                 	db	110	;'n'
   924  002087  20                 	db	32
   925  002088  25                 	db	37
   926  002089  73                 	db	115	;'s'
   927  00208A  00                 	db	0
   928  00208B                     STR_8:
   929  00208B  20                 	db	32
   930  00208C  4F                 	db	79	;'O'
   931  00208D  4B                 	db	75	;'K'
   932  00208E  20                 	db	32
   933  00208F  23                 	db	35
   934  002090  00                 	db	0
   935  002091                     STR_7:
   936  002091  20                 	db	32
   937  002092  4F                 	db	79	;'O'
   938  002093  4B                 	db	75	;'K'
   939  002094  51                 	db	81	;'Q'
   940  002095  23                 	db	35
   941  002096  00                 	db	0
   942  002097                     STR_3:
   943  002097  30                 	db	48	;'0'
   944  002098  2E                 	db	46
   945  002099  37                 	db	55	;'7'
   946  00209A  32                 	db	50	;'2'
   947  00209B  41                 	db	65	;'A'
   948  00209C  00                 	db	0
   949  00209D                     STR_19:
   950  00209D  6C                 	db	108	;'l'
   951  00209E  64                 	db	100	;'d'
   952  00209F  00                 	db	0
   953  0020A0                     STR_23:
   954  0020A0  6C                 	db	108	;'l'
   955  0020A1  69                 	db	105	;'i'
   956  0020A2  00                 	db	0
   957  0020A3                     STR_17:
   958  0020A3  25                 	db	37
   959  0020A4  63                 	db	99	;'c'
   960  0020A5  00                 	db	0
   961  0000                     
   962                           ; #config settings
   963  0020A6  00                 	db	0	; dummy byte at the end
   964  0000                     
   965                           	psect	cinit
   966  004E42                     __pcinit:
   967                           	opt callstack 0
   968  004E42                     start_initialization:
   969                           	opt callstack 0
   970  004E42                     __initialization:
   971                           	opt callstack 0
   972                           
   973                           ; Initialize objects allocated to BANK2 (56 bytes)
   974                           ; load TBLPTR registers with __pidataBANK2
   975  004E42  0E62               	movlw	low __pidataBANK2
   976  004E44  6EF6               	movwf	tblptrl,c
   977  004E46  0E5A               	movlw	high __pidataBANK2
   978  004E48  6EF7               	movwf	tblptrh,c
   979  004E4A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   980  004E4C  6EF8               	movwf	tblptru,c
   981  004E4E  EE00  F2C0         	lfsr	0,__pdataBANK2
   982  004E52  EE20 F038          	lfsr	2,56
   983  004E56                     copy_data0:
   984  004E56  0009               	tblrd		*+
   985  004E58  006F FFD7 FFEE     	movff	tablat,postinc0
   986  004E5E  50DD               	movf	postdec2,w,c
   987  004E60  50D9               	movf	fsr2l,w,c
   988  004E62  E1F9               	bnz	copy_data0
   989                           
   990                           ; Initialize objects allocated to BANK1 (205 bytes)
   991                           ; load TBLPTR registers with __pidataBANK1
   992  004E64  0E74               	movlw	low __pidataBANK1
   993  004E66  6EF6               	movwf	tblptrl,c
   994  004E68  0E4D               	movlw	high __pidataBANK1
   995  004E6A  6EF7               	movwf	tblptrh,c
   996  004E6C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   997  004E6E  6EF8               	movwf	tblptru,c
   998  004E70  EE00  F100         	lfsr	0,__pdataBANK1
   999  004E74  EE20 F0CD          	lfsr	2,205
  1000  004E78                     copy_data1:
  1001  004E78  0009               	tblrd		*+
  1002  004E7A  006F FFD7 FFEE     	movff	tablat,postinc0
  1003  004E80  50DD               	movf	postdec2,w,c
  1004  004E82  50D9               	movf	fsr2l,w,c
  1005  004E84  E1F9               	bnz	copy_data1
  1006                           
  1007                           ; Initialize objects allocated to BANK0 (7 bytes)
  1008                           ; load TBLPTR registers with __pidataBANK0
  1009  004E86  0E5E               	movlw	low __pidataBANK0
  1010  004E88  6EF6               	movwf	tblptrl,c
  1011  004E8A  0E61               	movlw	high __pidataBANK0
  1012  004E8C  6EF7               	movwf	tblptrh,c
  1013  004E8E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1014  004E90  6EF8               	movwf	tblptru,c
  1015  004E92  EE00  F0F2         	lfsr	0,__pdataBANK0
  1016  004E96  EE20 F007          	lfsr	2,7
  1017  004E9A                     copy_data2:
  1018  004E9A  0009               	tblrd		*+
  1019  004E9C  006F FFD7 FFEE     	movff	tablat,postinc0
  1020  004EA2  50DD               	movf	postdec2,w,c
  1021  004EA4  50D9               	movf	fsr2l,w,c
  1022  004EA6  E1F9               	bnz	copy_data2
  1023                           
  1024                           ; Initialize objects allocated to COMRAM (1 bytes)
  1025                           ; load TBLPTR registers with __pidataCOMRAM
  1026  004EA8  0E82               	movlw	low __pidataCOMRAM
  1027  004EAA  6EF6               	movwf	tblptrl,c
  1028  004EAC  0E61               	movlw	high __pidataCOMRAM
  1029  004EAE  6EF7               	movwf	tblptrh,c
  1030  004EB0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1031  004EB2  6EF8               	movwf	tblptru,c
  1032  004EB4  0009               	tblrd		*+	;fetch initializer
  1033  004EB6  006F FFD4  F05D    	movff	tablat,__pdataCOMRAM
  1034                           
  1035                           ; Clear objects allocated to BANK3 (198 bytes)
  1036  004EBC  EE00  F300         	lfsr	0,__pbssBANK3
  1037  004EC0  0EC6               	movlw	198
  1038  004EC2                     clear_0:
  1039  004EC2  6AEE               	clrf	postinc0,c
  1040  004EC4  06E8               	decf	wreg,f,c
  1041  004EC6  E1FD               	bnz	clear_0
  1042                           
  1043                           ; Clear objects allocated to BANK2 (192 bytes)
  1044  004EC8  EE00  F200         	lfsr	0,__pbssBANK2
  1045  004ECC  0EC0               	movlw	192
  1046  004ECE                     clear_1:
  1047  004ECE  6AEE               	clrf	postinc0,c
  1048  004ED0  06E8               	decf	wreg,f,c
  1049  004ED2  E1FD               	bnz	clear_1
  1050                           
  1051                           ; Clear objects allocated to BANK1 (32 bytes)
  1052  004ED4  EE00  F1CD         	lfsr	0,__pbssBANK1
  1053  004ED8  0E20               	movlw	32
  1054  004EDA                     clear_2:
  1055  004EDA  6AEE               	clrf	postinc0,c
  1056  004EDC  06E8               	decf	wreg,f,c
  1057  004EDE  E1FD               	bnz	clear_2
  1058                           
  1059                           ; Clear objects allocated to BANK0 (146 bytes)
  1060  004EE0  EE00  F060         	lfsr	0,__pbssBANK0
  1061  004EE4  0E92               	movlw	146
  1062  004EE6                     clear_3:
  1063  004EE6  6AEE               	clrf	postinc0,c
  1064  004EE8  06E8               	decf	wreg,f,c
  1065  004EEA  E1FD               	bnz	clear_3
  1066                           
  1067                           ; Clear objects allocated to COMRAM (58 bytes)
  1068  004EEC  EE00  F001         	lfsr	0,__pbssCOMRAM
  1069  004EF0  0E3A               	movlw	58
  1070  004EF2                     clear_4:
  1071  004EF2  6AEE               	clrf	postinc0,c
  1072  004EF4  06E8               	decf	wreg,f,c
  1073  004EF6  E1FD               	bnz	clear_4
  1074                           
  1075                           ;
  1076                           ; Setup IVTBASE
  1077                           ;
  1078  004EF8  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1079  004EFA  6ED5               	movwf	213,c
  1080  004EFC  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1081  004EFE  6ED6               	movwf	214,c
  1082  004F00  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1083  004F02  6ED7               	movwf	215,c
  1084  004F04                     end_of_initialization:
  1085                           	opt callstack 0
  1086  004F04                     __end_of__initialization:
  1087                           	opt callstack 0
  1088  004F04  0100               	movlb	0
  1089  004F06  EF54  F010         	goto	_main	;jump to C main() function
  1090                           
  1091                           	psect	bssCOMRAM
  1092  000001                     __pbssCOMRAM:
  1093                           	opt callstack 0
  1094  000001                     secs_II_message@block:
  1095                           	opt callstack 0
  1096  000001                     	ds	7
  1097  000008                     _ADCC_ADI_InterruptHandler:
  1098                           	opt callstack 0
  1099  000008                     	ds	3
  1100  00000B                     _UART1_TxInterruptHandler:
  1101                           	opt callstack 0
  1102  00000B                     	ds	3
  1103  00000E                     _UART1_RxInterruptHandler:
  1104                           	opt callstack 0
  1105  00000E                     	ds	3
  1106  000011                     _UART2_TxInterruptHandler:
  1107                           	opt callstack 0
  1108  000011                     	ds	3
  1109  000014                     _UART2_RxInterruptHandler:
  1110                           	opt callstack 0
  1111  000014                     	ds	3
  1112  000017                     _INT2_InterruptHandler:
  1113                           	opt callstack 0
  1114  000017                     	ds	3
  1115  00001A                     _INT1_InterruptHandler:
  1116                           	opt callstack 0
  1117  00001A                     	ds	3
  1118  00001D                     _INT0_InterruptHandler:
  1119                           	opt callstack 0
  1120  00001D                     	ds	3
  1121  000020                     _width:
  1122                           	opt callstack 0
  1123  000020                     	ds	2
  1124  000022                     _prec:
  1125                           	opt callstack 0
  1126  000022                     	ds	2
  1127  000024                     _flags:
  1128                           	opt callstack 0
  1129  000024                     	ds	2
  1130  000026                     TMR5_ISR@CountCallBack:
  1131                           	opt callstack 0
  1132  000026                     	ds	2
  1133  000028                     _timer5ReloadVal:
  1134                           	opt callstack 0
  1135  000028                     	ds	2
  1136  00002A                     t_protocol@requeue:
  1137                           	opt callstack 0
  1138  00002A                     	ds	1
  1139  00002B                     t_protocol@retry:
  1140                           	opt callstack 0
  1141  00002B                     	ds	1
  1142  00002C                     r_protocol@rxData_l:
  1143                           	opt callstack 0
  1144  00002C                     	ds	1
  1145  00002D                     m_protocol@rxData_l:
  1146                           	opt callstack 0
  1147  00002D                     	ds	1
  1148  00002E                     _mode_sw:
  1149                           	opt callstack 0
  1150  00002E                     	ds	1
  1151  00002F                     _uart2RxCount:
  1152                           	opt callstack 0
  1153  00002F                     	ds	1
  1154  000030                     _uart2RxTail:
  1155                           	opt callstack 0
  1156  000030                     	ds	1
  1157  000031                     _uart2RxHead:
  1158                           	opt callstack 0
  1159  000031                     	ds	1
  1160  000032                     _uart2TxBufferRemaining:
  1161                           	opt callstack 0
  1162  000032                     	ds	1
  1163  000033                     _uart2TxTail:
  1164                           	opt callstack 0
  1165  000033                     	ds	1
  1166  000034                     _uart2TxHead:
  1167                           	opt callstack 0
  1168  000034                     	ds	1
  1169  000035                     _uart1RxCount:
  1170                           	opt callstack 0
  1171  000035                     	ds	1
  1172  000036                     _uart1RxTail:
  1173                           	opt callstack 0
  1174  000036                     	ds	1
  1175  000037                     _uart1RxHead:
  1176                           	opt callstack 0
  1177  000037                     	ds	1
  1178  000038                     _uart1TxBufferRemaining:
  1179                           	opt callstack 0
  1180  000038                     	ds	1
  1181  000039                     _uart1TxTail:
  1182                           	opt callstack 0
  1183  000039                     	ds	1
  1184  00003A                     _uart1TxHead:
  1185                           	opt callstack 0
  1186  00003A                     	ds	1
  1187                           
  1188                           	psect	dataCOMRAM
  1189  00005D                     __pdataCOMRAM:
  1190                           	opt callstack 0
  1191  00005D                     r_protocol@retry:
  1192                           	opt callstack 0
  1193  00005D                     	ds	1
  1194                           
  1195                           	psect	bssBANK0
  1196  000060                     __pbssBANK0:
  1197                           	opt callstack 0
  1198  000060                     _r_block:
  1199                           	opt callstack 0
  1200  000060                     	ds	13
  1201  00006D                     _spi_link:
  1202                           	opt callstack 0
  1203  00006D                     	ds	12
  1204  000079                     _tickCount:
  1205                           	opt callstack 0
  1206  000079                     	ds	12
  1207  000085                     t_protocol@block:
  1208                           	opt callstack 0
  1209  000085                     	ds	7
  1210  00008C                     wdtdelay@dcount:
  1211                           	opt callstack 0
  1212  00008C                     	ds	4
  1213  000090                     _TMR5_InterruptHandler:
  1214                           	opt callstack 0
  1215  000090                     	ds	3
  1216  000093                     _TMR6_InterruptHandler:
  1217                           	opt callstack 0
  1218  000093                     	ds	3
  1219  000096                     _nout:
  1220                           	opt callstack 0
  1221  000096                     	ds	2
  1222  000098                     run_checksum@sum:
  1223                           	opt callstack 0
  1224  000098                     	ds	2
  1225  00009A                     _V:
  1226                           	opt callstack 0
  1227  00009A                     	ds	88
  1228                           
  1229                           	psect	dataBANK0
  1230  0000F2                     __pdataBANK0:
  1231                           	opt callstack 0
  1232  0000F2                     stoa@F1144:
  1233                           	opt callstack 0
  1234  0000F2                     	ds	7
  1235                           
  1236                           	psect	bssBANK1
  1237  0001CD                     __pbssBANK1:
  1238                           	opt callstack 0
  1239  0001CD                     _dbuf:
  1240                           	opt callstack 0
  1241  0001CD                     	ds	32
  1242                           
  1243                           	psect	dataBANK1
  1244  000100                     __pdataBANK1:
  1245                           	opt callstack 0
  1246  000100                     _H10:
  1247                           	opt callstack 0
  1248  000100                     	ds	65
  1249  000141                     _H27:
  1250                           	opt callstack 0
  1251  000141                     	ds	30
  1252  00015F                     _H12:
  1253                           	opt callstack 0
  1254  00015F                     	ds	30
  1255  00017D                     _H24:
  1256                           	opt callstack 0
  1257  00017D                     	ds	27
  1258  000198                     _H17:
  1259                           	opt callstack 0
  1260  000198                     	ds	20
  1261  0001AC                     _H14:
  1262                           	opt callstack 0
  1263  0001AC                     	ds	17
  1264  0001BD                     _H13:
  1265                           	opt callstack 0
  1266  0001BD                     	ds	16
  1267                           
  1268                           	psect	bssBANK2
  1269  000200                     __pbssBANK2:
  1270                           	opt callstack 0
  1271  000200                     _uart2RxBuffer:
  1272                           	opt callstack 0
  1273  000200                     	ds	64
  1274  000240                     _uart1RxBuffer:
  1275                           	opt callstack 0
  1276  000240                     	ds	64
  1277  000280                     _uart1TxBuffer:
  1278                           	opt callstack 0
  1279  000280                     	ds	64
  1280                           
  1281                           	psect	dataBANK2
  1282  0002C0                     __pdataBANK2:
  1283                           	opt callstack 0
  1284  0002C0                     _H53:
  1285                           	opt callstack 0
  1286  0002C0                     	ds	56
  1287                           
  1288                           	psect	bssBANK3
  1289  000300                     __pbssBANK3:
  1290                           	opt callstack 0
  1291  000300                     _uart2TxBuffer:
  1292                           	opt callstack 0
  1293  000300                     	ds	64
  1294  000340                     _ring_buf2:
  1295                           	opt callstack 0
  1296  000340                     	ds	67
  1297  000383                     _ring_buf1:
  1298                           	opt callstack 0
  1299  000383                     	ds	67
  1300                           
  1301                           	psect	cstackCOMRAM
  1302  00005B                     __pcstackCOMRAM:
  1303                           	opt callstack 0
  1304  00005B                     ??_TMR6_ISR:
  1305  00005B                     
  1306                           ; 1 bytes @ 0x0
  1307  00005B                     	ds	1
  1308  00005C                     ??_TMR5_ISR:
  1309                           
  1310                           ; 1 bytes @ 0x1
  1311  00005C                     	ds	1
  1312                           
  1313 ;;
  1314 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1315 ;;
  1316 ;; *************** function _main *****************
  1317 ;; Defined at:
  1318 ;;		line 282 in file "main.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  mode            1  [STACK] enum E16895
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  1  [STACK] void 
  1325 ;; Registers used:
  1326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 4/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1336 ;;Total ram usage:        0 bytes
  1337 ;; Hardware stack levels required when called:   14
  1338 ;; This function calls:
  1339 ;;		_SYSTEM_Initialize
  1340 ;;		_UART1_put_buffer
  1341 ;;		_WaitMs
  1342 ;;		_eaDogM_WriteCommand
  1343 ;;		_eaDogM_WriteStringAtPos
  1344 ;;		_init_display
  1345 ;;		_m_protocol
  1346 ;;		_r_protocol
  1347 ;;		_sprintf
  1348 ;;		_t_protocol
  1349 ;;		_wait_lcd_done
  1350 ;; This function is called by:
  1351 ;;		Startup code after reset
  1352 ;; This function uses a reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text0
  1356  0020A8                     __ptext0:
  1357                           	opt callstack 0
  1358  0020A8                     _main:
  1359                           	opt callstack 0
  1360                           
  1361                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1362  0020A8  52E6               	movf	postinc1,f,c
  1363                           
  1364                           ;main.c: 284:  UI_STATES mode;;main.c: 287:  SYSTEM_Initialize();
  1365                           
  1366                           ;incstack = 0
  1367  0020AA  EC55  F02C         	call	_SYSTEM_Initialize	;wreg free
  1368                           
  1369                           ; BSR set to: 60
  1370                           ;main.c: 290:  (INTCON0bits.GIEH = 1);
  1371  0020AE  8ED2               	bsf	16338,7,c	;volatile
  1372                           
  1373                           ; BSR set to: 60
  1374                           ;main.c: 293:  (INTCON0bits.GIEL = 1);
  1375  0020B0  8CD2               	bsf	16338,6,c	;volatile
  1376                           
  1377                           ; BSR set to: 60
  1378                           ;main.c: 295:  V.ui_state = UI_STATE_INIT;
  1379  0020B2  0100               	movlb	0	; () banked
  1380  0020B4  6B9B               	clrf	(_V+1)& (0+255),b
  1381                           
  1382                           ; BSR set to: 0
  1383                           ;main.c: 296:  if (PORTBbits.RB0) {
  1384  0020B6  A0CB               	btfss	16331,0,c	;volatile
  1385  0020B8  D004               	goto	l8297
  1386                           
  1387                           ; BSR set to: 0
  1388                           ;main.c: 297:   mode = UI_STATE_HOST;
  1389                           ;stkvar	_mode @ sp[(-1)+0]
  1390  0020BA  0EFF               	movlw	-1
  1391  0020BC  6AE3               	clrf	plusw1,c
  1392  0020BE  2AE3               	incf	plusw1,f,c
  1393                           
  1394                           ;main.c: 298:  } else {
  1395  0020C0  D004               	goto	l8299
  1396  0020C2                     l8297:
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;main.c: 299:   mode = UI_STATE_LOG;
  1400                           ;stkvar	_mode @ sp[(-1)+0]
  1401  0020C2  0EFF               	movlw	-1
  1402  0020C4  6AE3               	clrf	plusw1,c
  1403  0020C6  80E3               	bsf	plusw1,0,c
  1404  0020C8  82E3               	bsf	plusw1,1,c	;indir
  1405  0020CA                     l8299:
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;main.c: 302:  if (mode == UI_STATE_LOG) {
  1409                           ;stkvar	_mode @ sp[(-1)+0]
  1410  0020CA  0EFF               	movlw	-1
  1411  0020CC  006F FF8C  F03B    	movff	plusw1,btemp
  1412  0020D2  0E03               	movlw	3
  1413  0020D4  183B               	xorwf	btemp,w,c
  1414  0020D6  A4D8               	btfss	status,2,c
  1415  0020D8  D003               	goto	l1220
  1416                           
  1417                           ; BSR set to: 0
  1418                           
  1419                           ;main.c: 303:   do { LATDbits.LATD0 = 1; } while(0);
  1420  0020DA  80BD               	bsf	16317,0,c	;volatile
  1421                           
  1422                           ; BSR set to: 0
  1423                           
  1424                           ;main.c: 304:   do { LATDbits.LATD1 = 1; } while(0);
  1425  0020DC  82BD               	bsf	16317,1,c	;volatile
  1426  0020DE  D22D               	goto	l8471
  1427  0020E0                     l1220:
  1428                           
  1429                           ; BSR set to: 0
  1430  0020E0  90BD               	bcf	16317,0,c	;volatile
  1431                           
  1432                           ; BSR set to: 0
  1433                           
  1434                           ;main.c: 307:   do { LATDbits.LATD1 = 0; } while(0);
  1435  0020E2  92BD               	bcf	16317,1,c	;volatile
  1436  0020E4  D22A               	goto	l8471
  1437  0020E6                     l8301:
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;main.c: 313:    init_display();
  1441  0020E6  ECDC  F025         	call	_init_display	;wreg free
  1442                           
  1443                           ; BSR set to: 61
  1444                           ;main.c: 314:    eaDogM_WriteCommand(0b00001100);
  1445  0020EA  0E0C               	movlw	12
  1446  0020EC  6EE6               	movwf	postinc1,c
  1447  0020EE  EC66  F030         	call	_eaDogM_WriteCommand	;wreg free
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;main.c: 316:    V.ui_state = mode;
  1451                           ;stkvar	_mode @ sp[(-1)+0]
  1452  0020F2  0EFF               	movlw	-1
  1453  0020F4  006F FF8C  F09B    	movff	plusw1,_V+1
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;main.c: 317:    V.s_state = SEQ_STATE_INIT;
  1457  0020FA  6B9A               	clrf	_V& (0+255),b
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;main.c: 346:    sprintf(V.buf, " RVI HOST TESTER");
  1461  0020FC  0E51               	movlw	STR_1& (0+255)
  1462  0020FE  6EE6               	movwf	postinc1,c
  1463  002100  0E9A               	movlw	_V& (0+255)
  1464  002102  0F05               	addlw	5
  1465  002104  6EE6               	movwf	postinc1,c
  1466  002106  0E02               	movlw	2
  1467  002108  6EE6               	movwf	postinc1,c
  1468  00210A  EC85  F027         	call	_sprintf	;wreg free
  1469                           
  1470                           ; BSR set to: 0
  1471                           ;main.c: 347:    wait_lcd_done();
  1472  00210E  ECF5  F02F         	call	_wait_lcd_done	;wreg free
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;main.c: 348:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1476  002112  0E9A               	movlw	_V& (0+255)
  1477  002114  0F05               	addlw	5
  1478  002116  6EE6               	movwf	postinc1,c
  1479  002118  0E00               	movlw	0
  1480  00211A  6EE6               	movwf	postinc1,c
  1481  00211C  0E00               	movlw	0
  1482  00211E  6EE6               	movwf	postinc1,c
  1483  002120  EC63  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1484                           
  1485                           ; BSR set to: 59
  1486                           ;main.c: 349:    sprintf(V.buf, " Version %s", "0.72A");
  1487  002124  0E97               	movlw	STR_3& (0+255)
  1488  002126  6E46               	movwf	btemp+11,c
  1489  002128  0060  F11B  FFE6   	movff	btemp+11,postinc1
  1490  00212E  0E20               	movlw	high __smallconst
  1491  002130  6EE6               	movwf	postinc1,c
  1492  002132  0E7F               	movlw	STR_2& (0+255)
  1493  002134  6EE6               	movwf	postinc1,c
  1494  002136  0E9A               	movlw	_V& (0+255)
  1495  002138  0F05               	addlw	5
  1496  00213A  6EE6               	movwf	postinc1,c
  1497  00213C  0E04               	movlw	4
  1498  00213E  6EE6               	movwf	postinc1,c
  1499  002140  EC85  F027         	call	_sprintf	;wreg free
  1500                           
  1501                           ; BSR set to: 0
  1502                           ;main.c: 350:    wait_lcd_done();
  1503  002144  ECF5  F02F         	call	_wait_lcd_done	;wreg free
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;main.c: 351:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1507  002148  0E9A               	movlw	_V& (0+255)
  1508  00214A  0F05               	addlw	5
  1509  00214C  6EE6               	movwf	postinc1,c
  1510  00214E  0E00               	movlw	0
  1511  002150  6EE6               	movwf	postinc1,c
  1512  002152  0E01               	movlw	1
  1513  002154  6EE6               	movwf	postinc1,c
  1514  002156  EC63  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1515                           
  1516                           ; BSR set to: 59
  1517                           ;main.c: 352:    sprintf(V.buf, " FGB@MCHP FAB4");
  1518  00215A  0E62               	movlw	STR_4& (0+255)
  1519  00215C  6EE6               	movwf	postinc1,c
  1520  00215E  0E9A               	movlw	_V& (0+255)
  1521  002160  0F05               	addlw	5
  1522  002162  6EE6               	movwf	postinc1,c
  1523  002164  0E02               	movlw	2
  1524  002166  6EE6               	movwf	postinc1,c
  1525  002168  EC85  F027         	call	_sprintf	;wreg free
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;main.c: 353:    wait_lcd_done();
  1529  00216C  ECF5  F02F         	call	_wait_lcd_done	;wreg free
  1530                           
  1531                           ; BSR set to: 0
  1532                           ;main.c: 354:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1533  002170  0E9A               	movlw	_V& (0+255)
  1534  002172  0F05               	addlw	5
  1535  002174  6EE6               	movwf	postinc1,c
  1536  002176  0E00               	movlw	0
  1537  002178  6EE6               	movwf	postinc1,c
  1538  00217A  0E02               	movlw	2
  1539  00217C  6EE6               	movwf	postinc1,c
  1540  00217E  EC63  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1541                           
  1542                           ; BSR set to: 59
  1543                           ;main.c: 356:    WaitMs(3000);
  1544  002182  0EB8               	movlw	184
  1545  002184  6EE6               	movwf	postinc1,c
  1546  002186  0E0B               	movlw	11
  1547  002188  6EE6               	movwf	postinc1,c
  1548  00218A  ECBA  F02D         	call	_WaitMs	;wreg free
  1549                           
  1550                           ;main.c: 357:    break;
  1551  00218E  D1E9               	goto	l1263
  1552  002190                     l1230:
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;main.c: 361:     V.r_l_state = LINK_STATE_IDLE;
  1556  002190  6B9D               	clrf	(_V+3)& (0+255),b
  1557                           
  1558                           ;main.c: 362:     V.t_l_state = LINK_STATE_IDLE;
  1559  002192  6B9E               	clrf	(_V+4)& (0+255),b
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;main.c: 363:     V.s_state = SEQ_STATE_RX;
  1563  002194  0E01               	movlw	1
  1564  002196  6F9A               	movwf	_V& (0+255),b
  1565                           
  1566                           ;main.c: 364:     if (!V.error && !V.abort) {
  1567  002198  51E9               	movf	(_V+79)& (0+255),w,b
  1568  00219A  A4D8               	btfss	status,2,c
  1569  00219C  D024               	goto	l8341
  1570                           
  1571                           ; BSR set to: 0
  1572  00219E  51EA               	movf	(_V+80)& (0+255),w,b
  1573  0021A0  A4D8               	btfss	status,2,c
  1574  0021A2  D021               	goto	l8341
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;main.c: 365:      sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1578  0021A4  0060  F37F  FFE6   	movff	_V+69,postinc1
  1579  0021AA  0060  F383  FFE6   	movff	_V+70,postinc1
  1580  0021B0  0060  F387  FFE6   	movff	_V+71,postinc1
  1581  0021B6  0060  F38B  FFE6   	movff	_V+72,postinc1
  1582  0021BC  0E3E               	movlw	STR_5& (0+255)
  1583  0021BE  6EE6               	movwf	postinc1,c
  1584  0021C0  0E9A               	movlw	_V& (0+255)
  1585  0021C2  0F05               	addlw	5
  1586  0021C4  6EE6               	movwf	postinc1,c
  1587  0021C6  0E06               	movlw	6
  1588  0021C8  6EE6               	movwf	postinc1,c
  1589  0021CA  EC85  F027         	call	_sprintf	;wreg free
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;main.c: 366:      V.buf[16] = 0;
  1593  0021CE  6BAF               	clrf	(_V+21)& (0+255),b
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;main.c: 367:      wait_lcd_done();
  1597  0021D0  ECF5  F02F         	call	_wait_lcd_done	;wreg free
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;main.c: 368:      eaDogM_WriteStringAtPos(2, 0, V.buf);
  1601  0021D4  0E9A               	movlw	_V& (0+255)
  1602  0021D6  0F05               	addlw	5
  1603  0021D8  6EE6               	movwf	postinc1,c
  1604  0021DA  0E00               	movlw	0
  1605  0021DC  6EE6               	movwf	postinc1,c
  1606  0021DE  0E02               	movlw	2
  1607  0021E0  6EE6               	movwf	postinc1,c
  1608  0021E2  EC63  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1609  0021E6                     l8341:
  1610                           
  1611                           ;main.c: 371:     WaitMs(50);
  1612  0021E6  0E32               	movlw	50
  1613  0021E8  6EE6               	movwf	postinc1,c
  1614  0021EA  0E00               	movlw	0
  1615  0021EC  6EE6               	movwf	postinc1,c
  1616  0021EE  ECBA  F02D         	call	_WaitMs	;wreg free
  1617                           
  1618                           ;main.c: 372:     UART1_put_buffer(0x05);
  1619  0021F2  0E05               	movlw	5
  1620  0021F4  6EE6               	movwf	postinc1,c
  1621  0021F6  ECA5  F02D         	call	_UART1_put_buffer	;wreg free
  1622                           
  1623                           ;main.c: 374:     break;
  1624  0021FA  D0C9               	goto	l8407
  1625  0021FC                     l8345:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;main.c: 379:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1629  0021FC  0E9A               	movlw	_V& (0+255)
  1630  0021FE  0F03               	addlw	3
  1631  002200  6EE6               	movwf	postinc1,c
  1632  002202  EC01  F01A         	call	_r_protocol	;wreg free
  1633  002206  0E04               	movlw	4
  1634  002208  183B               	xorwf	btemp,w,c
  1635  00220A  A4D8               	btfss	status,2,c
  1636  00220C  D02F               	goto	l8365
  1637                           
  1638                           ;main.c: 380:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1639  00220E  0100               	movlb	0	; () banked
  1640  002210  51E8               	movf	(_V+78)& (0+255),w,b
  1641  002212  6EE6               	movwf	postinc1,c
  1642  002214  0E00               	movlw	0
  1643  002216  6EE6               	movwf	postinc1,c
  1644  002218  51E7               	movf	(_V+77)& (0+255),w,b
  1645  00221A  6EE6               	movwf	postinc1,c
  1646  00221C  0E00               	movlw	0
  1647  00221E  6EE6               	movwf	postinc1,c
  1648  002220  0E71               	movlw	STR_6& (0+255)
  1649  002222  6EE6               	movwf	postinc1,c
  1650  002224  0E9A               	movlw	_V& (0+255)
  1651  002226  0F05               	addlw	5
  1652  002228  6EE6               	movwf	postinc1,c
  1653  00222A  0E06               	movlw	6
  1654  00222C  6EE6               	movwf	postinc1,c
  1655  00222E  EC85  F027         	call	_sprintf	;wreg free
  1656                           
  1657                           ; BSR set to: 0
  1658                           ;main.c: 381:      V.buf[11] = 0;
  1659  002232  6BAA               	clrf	(_V+16)& (0+255),b
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;main.c: 382:      wait_lcd_done();
  1663  002234  ECF5  F02F         	call	_wait_lcd_done	;wreg free
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;main.c: 383:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1667  002238  0E9A               	movlw	_V& (0+255)
  1668  00223A  0F05               	addlw	5
  1669  00223C  6EE6               	movwf	postinc1,c
  1670  00223E  0E00               	movlw	0
  1671  002240  6EE6               	movwf	postinc1,c
  1672  002242  0E00               	movlw	0
  1673  002244  6EE6               	movwf	postinc1,c
  1674  002246  EC63  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1675                           
  1676                           ; BSR set to: 59
  1677                           ;main.c: 385:      WaitMs(5);
  1678  00224A  0E05               	movlw	5
  1679  00224C  6EE6               	movwf	postinc1,c
  1680  00224E  0E00               	movlw	0
  1681  002250  6EE6               	movwf	postinc1,c
  1682  002252  ECBA  F02D         	call	_WaitMs	;wreg free
  1683                           
  1684                           ;main.c: 387:      if (V.wbit) {
  1685  002256  0100               	movlb	0	; () banked
  1686  002258  A3F0               	btfss	(_V+86)& (0+255),1,b
  1687  00225A  D006               	goto	l8363
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;main.c: 388:       V.s_state = SEQ_STATE_TX;
  1691  00225C  0E02               	movlw	2
  1692  00225E  6F9A               	movwf	_V& (0+255),b
  1693                           
  1694                           ;main.c: 389:       V.failed_send = 0;
  1695  002260  0E87               	movlw	-121
  1696  002262  17F0               	andwf	(_V+86)& (0+255),f,b
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;main.c: 390:       V.t_l_state = LINK_STATE_IDLE;
  1700  002264  6B9E               	clrf	(_V+4)& (0+255),b
  1701                           
  1702                           ;main.c: 391:      } else {
  1703  002266  D002               	goto	l8365
  1704  002268                     l8363:
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;main.c: 392:       V.s_state = SEQ_STATE_TRIGGER;
  1708  002268  0E03               	movlw	3
  1709  00226A  6F9A               	movwf	_V& (0+255),b
  1710  00226C                     l8365:
  1711                           
  1712                           ;main.c: 395:     if (V.r_l_state == LINK_STATE_ERROR)
  1713  00226C  0E06               	movlw	6
  1714  00226E  0100               	movlb	0	; () banked
  1715  002270  199D               	xorwf	(_V+3)& (0+255),w,b
  1716  002272  A4D8               	btfss	status,2,c
  1717  002274  D08C               	goto	l8407
  1718  002276                     u5390:
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;main.c: 396:      V.s_state = SEQ_STATE_ERROR;
  1722  002276  0E06               	movlw	6
  1723  002278  6F9A               	movwf	_V& (0+255),b
  1724  00227A  D089               	goto	l8407
  1725  00227C                     l8369:
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;main.c: 402:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1729  00227C  0E9A               	movlw	_V& (0+255)
  1730  00227E  0F04               	addlw	4
  1731  002280  6EE6               	movwf	postinc1,c
  1732  002282  EC57  F01E         	call	_t_protocol	;wreg free
  1733  002286  0E04               	movlw	4
  1734  002288  183B               	xorwf	btemp,w,c
  1735  00228A  A4D8               	btfss	status,2,c
  1736  00228C  D003               	goto	l8373
  1737                           
  1738                           ;main.c: 403:      V.s_state = SEQ_STATE_TRIGGER;
  1739  00228E  0E03               	movlw	3
  1740  002290  0100               	movlb	0	; () banked
  1741  002292  6F9A               	movwf	_V& (0+255),b
  1742  002294                     l8373:
  1743                           
  1744                           ;main.c: 405:     if (V.t_l_state == LINK_STATE_ERROR)
  1745  002294  0E06               	movlw	6
  1746  002296  0100               	movlb	0	; () banked
  1747  002298  199E               	xorwf	(_V+4)& (0+255),w,b
  1748  00229A  B4D8               	btfsc	status,2,c
  1749  00229C  D7EC               	goto	u5390
  1750  00229E  D077               	goto	l8407
  1751  0022A0                     l1241:
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;main.c: 409:     if (V.queue) {
  1755  0022A0  A9F1               	btfss	(_V+87)& (0+255),4,b
  1756  0022A2  D01C               	goto	l8387
  1757                           
  1758                           ; BSR set to: 0
  1759  0022A4  A4BE               	btfss	16318,2,c	;volatile
  1760  0022A6  D002               	goto	u5430
  1761  0022A8  0E01               	movlw	1
  1762  0022AA  D001               	goto	u5436
  1763  0022AC                     u5430:
  1764  0022AC  0E00               	movlw	0
  1765  0022AE                     u5436:
  1766  0022AE  0AFF               	xorlw	255
  1767  0022B0  6E46               	movwf	btemp+11,c
  1768  0022B2  4646               	rlncf	btemp+11,f,c
  1769  0022B4  4646               	rlncf	btemp+11,f,c
  1770  0022B6  50BE               	movf	16318,w,c	;volatile
  1771  0022B8  1846               	xorwf	btemp+11,w,c
  1772  0022BA  0BFB               	andlw	-5
  1773  0022BC  1846               	xorwf	btemp+11,w,c
  1774  0022BE  6EBE               	movwf	16318,c	;volatile
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;main.c: 411:      V.r_l_state = LINK_STATE_IDLE;
  1778  0022C0  6B9D               	clrf	(_V+3)& (0+255),b
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;main.c: 412:      V.t_l_state = LINK_STATE_IDLE;
  1782  0022C2  6B9E               	clrf	(_V+4)& (0+255),b
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;main.c: 413:      V.s_state = SEQ_STATE_TX;
  1786  0022C4  0E02               	movlw	2
  1787  0022C6  6F9A               	movwf	_V& (0+255),b
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;main.c: 414:      sprintf(V.buf, " OKQ#");
  1791  0022C8  0E91               	movlw	STR_7& (0+255)
  1792  0022CA  6EE6               	movwf	postinc1,c
  1793  0022CC  0E9A               	movlw	_V& (0+255)
  1794  0022CE  0F05               	addlw	5
  1795  0022D0  6EE6               	movwf	postinc1,c
  1796  0022D2  0E02               	movlw	2
  1797  0022D4  6EE6               	movwf	postinc1,c
  1798  0022D6  EC85  F027         	call	_sprintf	;wreg free
  1799                           
  1800                           ;main.c: 415:     } else {
  1801  0022DA  D00B               	goto	l8391
  1802  0022DC                     l8387:
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;main.c: 416:      V.s_state = SEQ_STATE_DONE;
  1806  0022DC  0E05               	movlw	5
  1807  0022DE  6F9A               	movwf	_V& (0+255),b
  1808                           
  1809                           ; BSR set to: 0
  1810                           ;main.c: 417:      sprintf(V.buf, " OK #");
  1811  0022E0  0E8B               	movlw	STR_8& (0+255)
  1812  0022E2  6EE6               	movwf	postinc1,c
  1813  0022E4  0E9A               	movlw	_V& (0+255)
  1814  0022E6  0F05               	addlw	5
  1815  0022E8  6EE6               	movwf	postinc1,c
  1816  0022EA  0E02               	movlw	2
  1817  0022EC  6EE6               	movwf	postinc1,c
  1818  0022EE  EC85  F027         	call	_sprintf	;wreg free
  1819  0022F2                     l8391:
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;main.c: 419:     wait_lcd_done();
  1823  0022F2  ECF5  F02F         	call	_wait_lcd_done	;wreg free
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;main.c: 420:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  1827  0022F6  0E9A               	movlw	_V& (0+255)
  1828  0022F8  0F05               	addlw	5
  1829  0022FA  6EE6               	movwf	postinc1,c
  1830  0022FC  0E0B               	movlw	11
  1831  0022FE  6EE6               	movwf	postinc1,c
  1832  002300  0E00               	movlw	0
  1833  002302  6EE6               	movwf	postinc1,c
  1834  002304  EC63  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1835                           
  1836                           ;main.c: 421:     break;
  1837  002308  D042               	goto	l8407
  1838  00230A                     l1246:
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;main.c: 423:     V.s_state = SEQ_STATE_INIT;
  1842  00230A  6B9A               	clrf	_V& (0+255),b
  1843                           
  1844                           ;main.c: 424:     break;
  1845  00230C  D040               	goto	l8407
  1846  00230E                     l1248:
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;main.c: 427:     V.s_state = SEQ_STATE_INIT;
  1850  00230E  6B9A               	clrf	_V& (0+255),b
  1851                           
  1852                           ; BSR set to: 0
  1853                           ;main.c: 428:     sprintf(V.buf, "E R%d T%d E%d A%d #", V.r_l_state, V.t_l_state, V.erro
      +                          r, V.abort);
  1854  002310  51EA               	movf	(_V+80)& (0+255),w,b
  1855  002312  6EE6               	movwf	postinc1,c
  1856  002314  0E00               	movlw	0
  1857  002316  6EE6               	movwf	postinc1,c
  1858  002318  51E9               	movf	(_V+79)& (0+255),w,b
  1859  00231A  6EE6               	movwf	postinc1,c
  1860  00231C  0E00               	movlw	0
  1861  00231E  6EE6               	movwf	postinc1,c
  1862  002320  519E               	movf	(_V+4)& (0+255),w,b
  1863  002322  6EE6               	movwf	postinc1,c
  1864  002324  0E00               	movlw	0
  1865  002326  6EE6               	movwf	postinc1,c
  1866  002328  519D               	movf	(_V+3)& (0+255),w,b
  1867  00232A  6EE6               	movwf	postinc1,c
  1868  00232C  0E00               	movlw	0
  1869  00232E  6EE6               	movwf	postinc1,c
  1870  002330  0E2A               	movlw	STR_9& (0+255)
  1871  002332  6EE6               	movwf	postinc1,c
  1872  002334  0E9A               	movlw	_V& (0+255)
  1873  002336  0F05               	addlw	5
  1874  002338  6EE6               	movwf	postinc1,c
  1875  00233A  0E0A               	movlw	10
  1876  00233C  6EE6               	movwf	postinc1,c
  1877  00233E  EC85  F027         	call	_sprintf	;wreg free
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;main.c: 429:     V.buf[16] = 0;
  1881  002342  6BAF               	clrf	(_V+21)& (0+255),b
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;main.c: 430:     wait_lcd_done();
  1885  002344  ECF5  F02F         	call	_wait_lcd_done	;wreg free
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;main.c: 431:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  1889  002348  0E9A               	movlw	_V& (0+255)
  1890  00234A  0F05               	addlw	5
  1891  00234C  6EE6               	movwf	postinc1,c
  1892  00234E  0E00               	movlw	0
  1893  002350  6EE6               	movwf	postinc1,c
  1894  002352  0E02               	movlw	2
  1895  002354  6EE6               	movwf	postinc1,c
  1896  002356  EC63  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1897                           
  1898                           ;main.c: 432:     break;
  1899  00235A  D019               	goto	l8407
  1900  00235C                     l8405:
  1901                           
  1902                           ; BSR set to: 0
  1903  00235C  519A               	movf	_V& (0+255),w,b
  1904  00235E  6E45               	movwf	btemp+10,c
  1905  002360  6A46               	clrf	btemp+11,c
  1906                           
  1907                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1908                           ; Switch size 1, requested type "simple"
  1909                           ; Number of cases is 1, Range of values is 0 to 0
  1910                           ; switch strategies available:
  1911                           ; Name         Instructions Cycles
  1912                           ; simple_byte            4     3 (average)
  1913                           ;	Chosen strategy is simple_byte
  1914  002362  5046               	movf	btemp+11,w,c
  1915  002364  0A00               	xorlw	0	; case 0
  1916  002366  A4D8               	btfss	status,2,c
  1917  002368  D7D2               	goto	l1248
  1918                           
  1919                           ; BSR set to: 0
  1920                           ; Switch size 1, requested type "simple"
  1921                           ; Number of cases is 6, Range of values is 0 to 6
  1922                           ; switch strategies available:
  1923                           ; Name         Instructions Cycles
  1924                           ; simple_byte           19    10 (average)
  1925                           ;	Chosen strategy is simple_byte
  1926  00236A  5045               	movf	btemp+10,w,c
  1927  00236C  0A00               	xorlw	0	; case 0
  1928  00236E  B4D8               	btfsc	status,2,c
  1929  002370  D70F               	goto	l1230
  1930  002372  0A01               	xorlw	1	; case 1
  1931  002374  B4D8               	btfsc	status,2,c
  1932  002376  D742               	goto	l8345
  1933  002378  0A03               	xorlw	3	; case 2
  1934  00237A  B4D8               	btfsc	status,2,c
  1935  00237C  D77F               	goto	l8369
  1936  00237E  0A01               	xorlw	1	; case 3
  1937  002380  B4D8               	btfsc	status,2,c
  1938  002382  D78E               	goto	l1241
  1939  002384  0A06               	xorlw	6	; case 5
  1940  002386  B4D8               	btfsc	status,2,c
  1941  002388  D7C0               	goto	l1246
  1942  00238A  0A03               	xorlw	3	; case 6
  1943  00238C  D7C0               	goto	l1248
  1944  00238E                     l8407:
  1945                           
  1946                           ;main.c: 434:    if (!V.error && !V.abort) {
  1947  00238E  0100               	movlb	0	; () banked
  1948  002390  51E9               	movf	(_V+79)& (0+255),w,b
  1949  002392  A4D8               	btfss	status,2,c
  1950  002394  D0E6               	goto	l1263
  1951                           
  1952                           ; BSR set to: 0
  1953  002396  51EA               	movf	(_V+80)& (0+255),w,b
  1954  002398  A4D8               	btfss	status,2,c
  1955  00239A  D0E3               	goto	l1263
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;main.c: 435:     sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1959  00239C  0060  F37F  FFE6   	movff	_V+69,postinc1
  1960  0023A2  0060  F383  FFE6   	movff	_V+70,postinc1
  1961  0023A8  0060  F387  FFE6   	movff	_V+71,postinc1
  1962  0023AE  0060  F38B  FFE6   	movff	_V+72,postinc1
  1963  0023B4  0E3E               	movlw	STR_5& (0+255)
  1964  0023B6  6EE6               	movwf	postinc1,c
  1965  0023B8  0E9A               	movlw	_V& (0+255)
  1966  0023BA  0F05               	addlw	5
  1967  0023BC  6EE6               	movwf	postinc1,c
  1968  0023BE  0E06               	movlw	6
  1969  0023C0  6EE6               	movwf	postinc1,c
  1970  0023C2  EC85  F027         	call	_sprintf	;wreg free
  1971  0023C6                     l8413:
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;main.c: 436:     V.buf[16] = 0;
  1975  0023C6  6BAF               	clrf	(_V+21)& (0+255),b
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;main.c: 437:     wait_lcd_done();
  1979  0023C8  ECF5  F02F         	call	_wait_lcd_done	;wreg free
  1980                           
  1981                           ; BSR set to: 0
  1982                           ;main.c: 438:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  1983  0023CC  0E9A               	movlw	_V& (0+255)
  1984  0023CE  0F05               	addlw	5
  1985  0023D0  6EE6               	movwf	postinc1,c
  1986  0023D2  0E00               	movlw	0
  1987  0023D4  6EE6               	movwf	postinc1,c
  1988  0023D6  0E02               	movlw	2
  1989  0023D8  6EE6               	movwf	postinc1,c
  1990  0023DA  EC63  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1991  0023DE  D0C1               	goto	l1263
  1992  0023E0                     l1252:
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;main.c: 444:     V.m_l_state = LINK_STATE_IDLE;
  1996  0023E0  6B9C               	clrf	(_V+2)& (0+255),b
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;main.c: 445:     V.s_state = SEQ_STATE_RX;
  2000  0023E2  0E01               	movlw	1
  2001  0023E4  6F9A               	movwf	_V& (0+255),b
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;main.c: 446:     V.uart = 0;
  2005  0023E6  9FF1               	bcf	(_V+87)& (0+255),7,b
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;main.c: 447:     sprintf(V.buf, " LOG MODE %ld     #", V.ticks);
  2009  0023E8  0060  F37F  FFE6   	movff	_V+69,postinc1
  2010  0023EE  0060  F383  FFE6   	movff	_V+70,postinc1
  2011  0023F4  0060  F387  FFE6   	movff	_V+71,postinc1
  2012  0023FA  0060  F38B  FFE6   	movff	_V+72,postinc1
  2013  002400  0E16               	movlw	STR_11& (0+255)
  2014  002402  6EE6               	movwf	postinc1,c
  2015  002404  0E9A               	movlw	_V& (0+255)
  2016  002406  0F05               	addlw	5
  2017  002408  6EE6               	movwf	postinc1,c
  2018  00240A  0E06               	movlw	6
  2019  00240C  6EE6               	movwf	postinc1,c
  2020  00240E  EC85  F027         	call	_sprintf	;wreg free
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;main.c: 448:     V.buf[16] = 0;
  2024  002412  6BAF               	clrf	(_V+21)& (0+255),b
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;main.c: 449:     wait_lcd_done();
  2028  002414  ECF5  F02F         	call	_wait_lcd_done	;wreg free
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;main.c: 450:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2032  002418  0E9A               	movlw	_V& (0+255)
  2033  00241A  0F05               	addlw	5
  2034  00241C  6EE6               	movwf	postinc1,c
  2035  00241E  0E00               	movlw	0
  2036  002420  6EE6               	movwf	postinc1,c
  2037  002422  0E02               	movlw	2
  2038  002424  6EE6               	movwf	postinc1,c
  2039  002426  EC63  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2040                           
  2041                           ;main.c: 451:     break;
  2042  00242A  D06F               	goto	l8461
  2043  00242C                     l8431:
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;main.c: 456:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  2047  00242C  0E9A               	movlw	_V& (0+255)
  2048  00242E  0F02               	addlw	2
  2049  002430  6EE6               	movwf	postinc1,c
  2050  002432  ECE6  F012         	call	_m_protocol	;wreg free
  2051  002436  0E04               	movlw	4
  2052  002438  183B               	xorwf	btemp,w,c
  2053  00243A  A4D8               	btfss	status,2,c
  2054  00243C  D02B               	goto	l8445
  2055                           
  2056                           ;main.c: 457:      V.ticks++;
  2057  00243E  0E01               	movlw	1
  2058  002440  0100               	movlb	0	; () banked
  2059  002442  27DF               	addwf	(_V+69)& (0+255),f,b
  2060  002444  0E00               	movlw	0
  2061  002446  23E0               	addwfc	(_V+70)& (0+255),f,b
  2062  002448  23E1               	addwfc	(_V+71)& (0+255),f,b
  2063  00244A  23E2               	addwfc	(_V+72)& (0+255),f,b
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;main.c: 458:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  2067  00244C  51E8               	movf	(_V+78)& (0+255),w,b
  2068  00244E  6EE6               	movwf	postinc1,c
  2069  002450  0E00               	movlw	0
  2070  002452  6EE6               	movwf	postinc1,c
  2071  002454  51E7               	movf	(_V+77)& (0+255),w,b
  2072  002456  6EE6               	movwf	postinc1,c
  2073  002458  0E00               	movlw	0
  2074  00245A  6EE6               	movwf	postinc1,c
  2075  00245C  0E71               	movlw	STR_6& (0+255)
  2076  00245E  6EE6               	movwf	postinc1,c
  2077  002460  0E9A               	movlw	_V& (0+255)
  2078  002462  0F05               	addlw	5
  2079  002464  6EE6               	movwf	postinc1,c
  2080  002466  0E06               	movlw	6
  2081  002468  6EE6               	movwf	postinc1,c
  2082  00246A  EC85  F027         	call	_sprintf	;wreg free
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;main.c: 459:      V.buf[11] = 0;
  2086  00246E  6BAA               	clrf	(_V+16)& (0+255),b
  2087                           
  2088                           ; BSR set to: 0
  2089                           ;main.c: 460:      wait_lcd_done();
  2090  002470  ECF5  F02F         	call	_wait_lcd_done	;wreg free
  2091                           
  2092                           ; BSR set to: 0
  2093                           ;main.c: 461:      eaDogM_WriteStringAtPos(V.uart, 0, V.buf);
  2094  002474  0E9A               	movlw	_V& (0+255)
  2095  002476  0F05               	addlw	5
  2096  002478  6EE6               	movwf	postinc1,c
  2097  00247A  0E00               	movlw	0
  2098  00247C  6EE6               	movwf	postinc1,c
  2099  00247E  AFF1               	btfss	(_V+87)& (0+255),7,b
  2100  002480  D002               	goto	u5470
  2101  002482  0E01               	movlw	1
  2102  002484  D001               	goto	u5476
  2103  002486                     u5470:
  2104  002486  0E00               	movlw	0
  2105  002488                     u5476:
  2106  002488  6EE6               	movwf	postinc1,c
  2107  00248A  EC63  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2108                           
  2109                           ; BSR set to: 59
  2110                           ;main.c: 462:      V.s_state = SEQ_STATE_TRIGGER;
  2111  00248E  0E03               	movlw	3
  2112  002490  0100               	movlb	0	; () banked
  2113  002492  6F9A               	movwf	_V& (0+255),b
  2114  002494                     l8445:
  2115                           
  2116                           ;main.c: 464:     if (V.m_l_state == LINK_STATE_ERROR)
  2117  002494  0E06               	movlw	6
  2118  002496  0100               	movlb	0	; () banked
  2119  002498  199C               	xorwf	(_V+2)& (0+255),w,b
  2120  00249A  A4D8               	btfss	status,2,c
  2121  00249C  D036               	goto	l8461
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;main.c: 465:      V.s_state = SEQ_STATE_ERROR;
  2125  00249E  0E06               	movlw	6
  2126  0024A0  6F9A               	movwf	_V& (0+255),b
  2127  0024A2  D033               	goto	l8461
  2128  0024A4                     l8449:
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;main.c: 468:     V.s_state = SEQ_STATE_DONE;
  2132  0024A4  0E05               	movlw	5
  2133  0024A6  6F9A               	movwf	_V& (0+255),b
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;main.c: 469:     sprintf(V.buf, " OK #");
  2137  0024A8  0E8B               	movlw	STR_8& (0+255)
  2138  0024AA  6EE6               	movwf	postinc1,c
  2139  0024AC  0E9A               	movlw	_V& (0+255)
  2140  0024AE  0F05               	addlw	5
  2141  0024B0  6EE6               	movwf	postinc1,c
  2142  0024B2  0E02               	movlw	2
  2143  0024B4  6EE6               	movwf	postinc1,c
  2144  0024B6  EC85  F027         	call	_sprintf	;wreg free
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;main.c: 470:     wait_lcd_done();
  2148  0024BA  ECF5  F02F         	call	_wait_lcd_done	;wreg free
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;main.c: 471:     eaDogM_WriteStringAtPos(V.uart, 11, V.buf);
  2152  0024BE  0E9A               	movlw	_V& (0+255)
  2153  0024C0  0F05               	addlw	5
  2154  0024C2  6EE6               	movwf	postinc1,c
  2155  0024C4  0E0B               	movlw	11
  2156  0024C6  6EE6               	movwf	postinc1,c
  2157  0024C8  AFF1               	btfss	(_V+87)& (0+255),7,b
  2158  0024CA  D002               	goto	u5490
  2159  0024CC  0E01               	movlw	1
  2160  0024CE  D001               	goto	u5496
  2161  0024D0                     u5490:
  2162  0024D0  0E00               	movlw	0
  2163  0024D2                     u5496:
  2164  0024D2  6EE6               	movwf	postinc1,c
  2165  0024D4  EC63  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2166                           
  2167                           ;main.c: 472:     break;
  2168  0024D8  D018               	goto	l8461
  2169  0024DA                     l1258:
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;main.c: 474:     V.s_state = SEQ_STATE_INIT;
  2173  0024DA  6B9A               	clrf	_V& (0+255),b
  2174                           
  2175                           ;main.c: 475:     break;
  2176  0024DC  D016               	goto	l8461
  2177  0024DE                     l8459:
  2178                           
  2179                           ; BSR set to: 0
  2180  0024DE  519A               	movf	_V& (0+255),w,b
  2181  0024E0  6E45               	movwf	btemp+10,c
  2182  0024E2  6A46               	clrf	btemp+11,c
  2183                           
  2184                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2185                           ; Switch size 1, requested type "simple"
  2186                           ; Number of cases is 1, Range of values is 0 to 0
  2187                           ; switch strategies available:
  2188                           ; Name         Instructions Cycles
  2189                           ; simple_byte            4     3 (average)
  2190                           ;	Chosen strategy is simple_byte
  2191  0024E4  5046               	movf	btemp+11,w,c
  2192  0024E6  0A00               	xorlw	0	; case 0
  2193  0024E8  A4D8               	btfss	status,2,c
  2194  0024EA  D7F7               	goto	l1258
  2195                           
  2196                           ; BSR set to: 0
  2197                           ; Switch size 1, requested type "simple"
  2198                           ; Number of cases is 5, Range of values is 0 to 6
  2199                           ; switch strategies available:
  2200                           ; Name         Instructions Cycles
  2201                           ; simple_byte           16     9 (average)
  2202                           ;	Chosen strategy is simple_byte
  2203  0024EC  5045               	movf	btemp+10,w,c
  2204  0024EE  0A00               	xorlw	0	; case 0
  2205  0024F0  B4D8               	btfsc	status,2,c
  2206  0024F2  D776               	goto	l1252
  2207  0024F4  0A01               	xorlw	1	; case 1
  2208  0024F6  B4D8               	btfsc	status,2,c
  2209  0024F8  D799               	goto	l8431
  2210  0024FA  0A02               	xorlw	2	; case 3
  2211  0024FC  B4D8               	btfsc	status,2,c
  2212  0024FE  D7D2               	goto	l8449
  2213  002500  0A06               	xorlw	6	; case 5
  2214  002502  B4D8               	btfsc	status,2,c
  2215  002504  D7EA               	goto	l1258
  2216  002506  0A03               	xorlw	3	; case 6
  2217  002508  D7E8               	goto	l1258
  2218  00250A                     l8461:
  2219                           
  2220                           ;main.c: 481:    sprintf(V.buf, " LOG MODE %ld     #", V.ticks);
  2221  00250A  0060  F37F  FFE6   	movff	_V+69,postinc1
  2222  002510  0060  F383  FFE6   	movff	_V+70,postinc1
  2223  002516  0060  F387  FFE6   	movff	_V+71,postinc1
  2224  00251C  0060  F38B  FFE6   	movff	_V+72,postinc1
  2225  002522  0E16               	movlw	STR_11& (0+255)
  2226  002524  6EE6               	movwf	postinc1,c
  2227  002526  0E9A               	movlw	_V& (0+255)
  2228  002528  0F05               	addlw	5
  2229  00252A  6EE6               	movwf	postinc1,c
  2230  00252C  0E06               	movlw	6
  2231  00252E  6EE6               	movwf	postinc1,c
  2232  002530  EC85  F027         	call	_sprintf	;wreg free
  2233  002534  D748               	goto	l8413
  2234  002536                     l1262:
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;main.c: 488:    V.ui_state = UI_STATE_INIT;
  2238  002536  6B9B               	clrf	(_V+1)& (0+255),b
  2239                           
  2240                           ;main.c: 489:    break;
  2241  002538  D014               	goto	l1263
  2242  00253A                     l8471:
  2243  00253A  0100               	movlb	0	; () banked
  2244  00253C  519B               	movf	(_V+1)& (0+255),w,b
  2245  00253E  6E45               	movwf	btemp+10,c
  2246  002540  6A46               	clrf	btemp+11,c
  2247                           
  2248                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2249                           ; Switch size 1, requested type "simple"
  2250                           ; Number of cases is 1, Range of values is 0 to 0
  2251                           ; switch strategies available:
  2252                           ; Name         Instructions Cycles
  2253                           ; simple_byte            4     3 (average)
  2254                           ;	Chosen strategy is simple_byte
  2255  002542  5046               	movf	btemp+11,w,c
  2256  002544  0A00               	xorlw	0	; case 0
  2257  002546  A4D8               	btfss	status,2,c
  2258  002548  D7F6               	goto	l1262
  2259                           
  2260                           ; BSR set to: 0
  2261                           ; Switch size 1, requested type "simple"
  2262                           ; Number of cases is 4, Range of values is 0 to 4
  2263                           ; switch strategies available:
  2264                           ; Name         Instructions Cycles
  2265                           ; simple_byte           13     7 (average)
  2266                           ;	Chosen strategy is simple_byte
  2267  00254A  5045               	movf	btemp+10,w,c
  2268  00254C  0A00               	xorlw	0	; case 0
  2269  00254E  B4D8               	btfsc	status,2,c
  2270  002550  D5CA               	goto	l8301
  2271  002552  0A01               	xorlw	1	; case 1
  2272  002554  B4D8               	btfsc	status,2,c
  2273  002556  D702               	goto	l8405
  2274  002558  0A02               	xorlw	2	; case 3
  2275  00255A  B4D8               	btfsc	status,2,c
  2276  00255C  D7C0               	goto	l8459
  2277  00255E  0A07               	xorlw	7	; case 4
  2278  002560  D7EA               	goto	l1262
  2279  002562                     l1263:
  2280  002562  82BE               	bsf	16318,1,c	;volatile
  2281                           
  2282                           ;main.c: 492:   sprintf(V.buf, " R%d T%d FR%d FS%d #", V.r_l_state, V.t_l_state, V.faile
      +                          d_receive, V.failed_send);
  2283  002564  0100               	movlb	0	; () banked
  2284  002566  31F0               	rrcf	(_V+86)& (0+255),w,b
  2285  002568  32E8               	rrcf	wreg,f,c
  2286  00256A  32E8               	rrcf	wreg,f,c
  2287  00256C  0B0F               	andlw	15
  2288  00256E  6EE6               	movwf	postinc1,c
  2289  002570  0E00               	movlw	0
  2290  002572  6EE6               	movwf	postinc1,c
  2291  002574  51F1               	movf	(_V+87)& (0+255),w,b
  2292  002576  0B0F               	andlw	15
  2293  002578  6EE6               	movwf	postinc1,c
  2294  00257A  0E00               	movlw	0
  2295  00257C  6EE6               	movwf	postinc1,c
  2296  00257E  519E               	movf	(_V+4)& (0+255),w,b
  2297  002580  6EE6               	movwf	postinc1,c
  2298  002582  0E00               	movlw	0
  2299  002584  6EE6               	movwf	postinc1,c
  2300  002586  519D               	movf	(_V+3)& (0+255),w,b
  2301  002588  6EE6               	movwf	postinc1,c
  2302  00258A  0E00               	movlw	0
  2303  00258C  6EE6               	movwf	postinc1,c
  2304  00258E  0E01               	movlw	STR_15& (0+255)
  2305  002590  6EE6               	movwf	postinc1,c
  2306  002592  0E9A               	movlw	_V& (0+255)
  2307  002594  0F05               	addlw	5
  2308  002596  6EE6               	movwf	postinc1,c
  2309  002598  0E0A               	movlw	10
  2310  00259A  6EE6               	movwf	postinc1,c
  2311  00259C  EC85  F027         	call	_sprintf	;wreg free
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;main.c: 493:   V.buf[16] = 0;
  2315  0025A0  6BAF               	clrf	(_V+21)& (0+255),b
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;main.c: 494:   wait_lcd_done();
  2319  0025A2  ECF5  F02F         	call	_wait_lcd_done	;wreg free
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;main.c: 495:   if (mode != UI_STATE_LOG)
  2323                           ;stkvar	_mode @ sp[(-1)+0]
  2324  0025A6  0EFF               	movlw	-1
  2325  0025A8  006F FF8C  F03B    	movff	plusw1,btemp
  2326  0025AE  0E03               	movlw	3
  2327  0025B0  183B               	xorwf	btemp,w,c
  2328  0025B2  B4D8               	btfsc	status,2,c
  2329  0025B4  D009               	goto	l8483
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;main.c: 496:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  2333  0025B6  0E9A               	movlw	_V& (0+255)
  2334  0025B8  0F05               	addlw	5
  2335  0025BA  6EE6               	movwf	postinc1,c
  2336  0025BC  0E00               	movlw	0
  2337  0025BE  6EE6               	movwf	postinc1,c
  2338  0025C0  0E01               	movlw	1
  2339  0025C2  6EE6               	movwf	postinc1,c
  2340  0025C4  EC63  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2341  0025C8                     l8483:
  2342  0025C8  92BE               	bcf	16318,1,c	;volatile
  2343  0025CA  D7B7               	goto	l8471
  2344  0025CC                     __end_of_main:
  2345                           	opt callstack 0
  2346                           
  2347 ;; *************** function _t_protocol *****************
  2348 ;; Defined at:
  2349 ;;		line 312 in file "gemsecs.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  t_link          1  [STACK] PTR enum E16164
  2352 ;;		 -> V(88), 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  rxData          1  [STACK] unsigned char 
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  1  [STACK] enum E16902
  2357 ;; Registers used:
  2358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2368 ;;Total ram usage:        0 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    5
  2371 ;; This function calls:
  2372 ;;		_StartTimer
  2373 ;;		_TimerDone
  2374 ;;		_UART1_Read
  2375 ;;		_UART1_Write
  2376 ;;		_UART1_is_rx_ready
  2377 ;;		_UART1_put_buffer
  2378 ;;		_WaitMs
  2379 ;;		_secs_II_message
  2380 ;;		_secs_send
  2381 ;; This function is called by:
  2382 ;;		_main
  2383 ;; This function uses a reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text1
  2387  003CAE                     __ptext1:
  2388                           	opt callstack 0
  2389  003CAE                     _t_protocol:
  2390                           	opt callstack 0
  2391                           
  2392                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2393  003CAE  52E6               	movf	postinc1,f,c
  2394                           
  2395                           ;gemsecs.c: 312: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 313: {;gemsecs.
      +                          c: 314:  uint8_t rxData;;gemsecs.c: 315:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          316:  static response_type block;;gemsecs.c: 318:  switch (*t_link) {
  2396                           
  2397                           ;incstack = 0
  2398  003CB0  D11E               	goto	l8269
  2399  003CB2                     l1636:
  2400                           
  2401                           ;gemsecs.c: 320:   V.error = LINK_ERROR_NONE;
  2402  003CB2  0100               	movlb	0	; () banked
  2403  003CB4  6BE9               	clrf	(_V+79)& (0+255),b
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;gemsecs.c: 321:   retry = 3;
  2407  003CB6  0E03               	movlw	3
  2408  003CB8  6E2B               	movwf	t_protocol@retry,c
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;gemsecs.c: 322:   UART1_Write(0x05);
  2412  003CBA  0E05               	movlw	5
  2413  003CBC  6EE6               	movwf	postinc1,c
  2414  003CBE  EC96  F02C         	call	_UART1_Write	;wreg free
  2415                           
  2416                           ; BSR set to: 57
  2417                           ;gemsecs.c: 323:   StartTimer(TMR_T2, 2000);
  2418  003CC2  0ED0               	movlw	208
  2419  003CC4  6EE6               	movwf	postinc1,c
  2420  003CC6  0E07               	movlw	7
  2421  003CC8  6EE6               	movwf	postinc1,c
  2422  003CCA  0E02               	movlw	2
  2423  003CCC  6EE6               	movwf	postinc1,c
  2424  003CCE  EC13  F02D         	call	_StartTimer	;wreg free
  2425                           
  2426                           ;gemsecs.c: 324:   *t_link = LINK_STATE_ENQ;
  2427                           ;stkvar	_t_link @ sp[(-1)+-1]
  2428  003CD2  0EFE               	movlw	-2
  2429  003CD4  50E3               	movf	plusw1,w,c
  2430  003CD6  6ED9               	movwf	fsr2l,c
  2431  003CD8  6ADA               	clrf	fsr2h,c
  2432  003CDA  0E01               	movlw	1
  2433  003CDC  6EDF               	movwf	indf2,c
  2434                           
  2435                           ;gemsecs.c: 326:   WaitMs(5);
  2436  003CDE  0E05               	movlw	5
  2437  003CE0  6EE6               	movwf	postinc1,c
  2438  003CE2  0E00               	movlw	0
  2439  003CE4  6EE6               	movwf	postinc1,c
  2440  003CE6  ECBA  F02D         	call	_WaitMs	;wreg free
  2441                           
  2442                           ;gemsecs.c: 327:   UART1_put_buffer(0x04);
  2443  003CEA  0E04               	movlw	4
  2444  003CEC  6EE6               	movwf	postinc1,c
  2445  003CEE  ECA5  F02D         	call	_UART1_put_buffer	;wreg free
  2446                           
  2447                           ;gemsecs.c: 329:   break;
  2448  003CF2  D11E               	goto	l8271
  2449  003CF4                     l8181:
  2450                           
  2451                           ;gemsecs.c: 331:   if (TimerDone(TMR_T2)) {
  2452  003CF4  0E02               	movlw	2
  2453  003CF6  6EE6               	movwf	postinc1,c
  2454  003CF8  EC71  F02F         	call	_TimerDone	;wreg free
  2455  003CFC  503B               	movf	btemp,w,c
  2456  003CFE  B4D8               	btfsc	status,2,c
  2457  003D00  D01A               	goto	l8191
  2458                           
  2459                           ;gemsecs.c: 332:    if (!retry--) {
  2460  003D02  062B               	decf	t_protocol@retry,f,c
  2461  003D04  282B               	incf	t_protocol@retry,w,c
  2462  003D06  A4D8               	btfss	status,2,c
  2463  003D08  D00D               	goto	l8189
  2464                           
  2465                           ;gemsecs.c: 333:     V.error = LINK_ERROR_T2;
  2466  003D0A  0E02               	movlw	2
  2467  003D0C  0100               	movlb	0	; () banked
  2468  003D0E  6FE9               	movwf	(_V+79)& (0+255),b
  2469                           
  2470                           ;gemsecs.c: 334:     V.failed_send = 1;
  2471  003D10  51F0               	movf	(_V+86)& (0+255),w,b
  2472  003D12  0B87               	andlw	-121
  2473  003D14  0908               	iorlw	8
  2474  003D16  6FF0               	movwf	(_V+86)& (0+255),b
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;gemsecs.c: 335:     *t_link = LINK_STATE_NAK;
  2478                           ;stkvar	_t_link @ sp[(-1)+-1]
  2479  003D18  0EFE               	movlw	-2
  2480  003D1A  50E3               	movf	plusw1,w,c
  2481  003D1C  6ED9               	movwf	fsr2l,c
  2482  003D1E  6ADA               	clrf	fsr2h,c
  2483  003D20  0E05               	movlw	5
  2484  003D22  D0E3               	goto	L2
  2485  003D24                     l8189:
  2486                           
  2487                           ;gemsecs.c: 337:     StartTimer(TMR_T2, 2000);
  2488  003D24  0ED0               	movlw	208
  2489  003D26  6EE6               	movwf	postinc1,c
  2490  003D28  0E07               	movlw	7
  2491  003D2A  6EE6               	movwf	postinc1,c
  2492  003D2C  0E02               	movlw	2
  2493  003D2E  6EE6               	movwf	postinc1,c
  2494  003D30  EC13  F02D         	call	_StartTimer	;wreg free
  2495  003D34  D0FD               	goto	l8271
  2496  003D36                     l8191:
  2497                           
  2498                           ;gemsecs.c: 340:    if (UART1_is_rx_ready()) {
  2499  003D36  ECAB  F030         	call	_UART1_is_rx_ready	;wreg free
  2500  003D3A  503B               	movf	btemp,w,c
  2501  003D3C  B4D8               	btfsc	status,2,c
  2502  003D3E  D0F8               	goto	l8271
  2503                           
  2504                           ;gemsecs.c: 341:     rxData = UART1_Read();
  2505  003D40  ECD4  F02C         	call	_UART1_Read	;wreg free
  2506                           
  2507                           ;stkvar	_rxData @ sp[(-1)+0]
  2508  003D44  0EFF               	movlw	-1
  2509  003D46  0060  F0EF  FFE3   	movff	btemp,plusw1
  2510                           
  2511                           ; BSR set to: 57
  2512                           ;gemsecs.c: 342:     if (rxData == 0x04) {
  2513                           ;stkvar	_rxData @ sp[(-1)+0]
  2514  003D4C  0EFF               	movlw	-1
  2515  003D4E  006F FF8C  F03B    	movff	plusw1,btemp
  2516  003D54  0E04               	movlw	4
  2517  003D56  183B               	xorwf	btemp,w,c
  2518  003D58  A4D8               	btfss	status,2,c
  2519  003D5A  D00E               	goto	l8201
  2520                           
  2521                           ; BSR set to: 57
  2522                           ;gemsecs.c: 343:      StartTimer(TMR_T3, 5000);
  2523  003D5C  0E88               	movlw	136
  2524  003D5E  6EE6               	movwf	postinc1,c
  2525  003D60  0E13               	movlw	19
  2526  003D62  6EE6               	movwf	postinc1,c
  2527  003D64  0E03               	movlw	3
  2528  003D66  6EE6               	movwf	postinc1,c
  2529  003D68  EC13  F02D         	call	_StartTimer	;wreg free
  2530                           
  2531                           ;gemsecs.c: 344:      *t_link = LINK_STATE_EOT;
  2532                           ;stkvar	_t_link @ sp[(-1)+-1]
  2533  003D6C  0EFE               	movlw	-2
  2534  003D6E  50E3               	movf	plusw1,w,c
  2535  003D70  6ED9               	movwf	fsr2l,c
  2536  003D72  6ADA               	clrf	fsr2h,c
  2537  003D74  0E02               	movlw	2
  2538  003D76  6EDF               	movwf	indf2,c
  2539  003D78                     l8201:
  2540                           
  2541                           ;gemsecs.c: 346:     if (rxData == 0x05) {
  2542                           ;stkvar	_rxData @ sp[(-1)+0]
  2543  003D78  0EFF               	movlw	-1
  2544  003D7A  006F FF8C  F03B    	movff	plusw1,btemp
  2545  003D80  0E05               	movlw	5
  2546  003D82  183B               	xorwf	btemp,w,c
  2547  003D84  A4D8               	btfss	status,2,c
  2548  003D86  D0D4               	goto	l8271
  2549                           
  2550                           ;gemsecs.c: 347:      UART1_put_buffer(0x04);
  2551  003D88  0E04               	movlw	4
  2552  003D8A  6EE6               	movwf	postinc1,c
  2553  003D8C  ECA5  F02D         	call	_UART1_put_buffer	;wreg free
  2554  003D90                     l8205:
  2555                           
  2556                           ;gemsecs.c: 348:      *t_link = LINK_STATE_DONE;
  2557                           ;stkvar	_t_link @ sp[(-1)+-1]
  2558  003D90  0EFE               	movlw	-2
  2559  003D92  50E3               	movf	plusw1,w,c
  2560  003D94  6ED9               	movwf	fsr2l,c
  2561  003D96  6ADA               	clrf	fsr2h,c
  2562  003D98  0E04               	movlw	4
  2563  003D9A  D0A7               	goto	L2
  2564  003D9C                     l8207:
  2565                           
  2566                           ;gemsecs.c: 354:   if (!requeue)
  2567  003D9C  502A               	movf	t_protocol@requeue,w,c
  2568  003D9E  A4D8               	btfss	status,2,c
  2569  003DA0  D010               	goto	l8211
  2570                           
  2571                           ;gemsecs.c: 355:    block = secs_II_message(V.stream, V.function);
  2572  003DA2  0100               	movlb	0	; () banked
  2573  003DA4  51E8               	movf	(_V+78)& (0+255),w,b
  2574  003DA6  6EE6               	movwf	postinc1,c
  2575  003DA8  51E7               	movf	(_V+77)& (0+255),w,b
  2576  003DAA  6EE6               	movwf	postinc1,c
  2577  003DAC  ECE1  F020         	call	_secs_II_message	;wreg free
  2578  003DB0  EE20  F085         	lfsr	2,t_protocol@block
  2579  003DB4  0E06               	movlw	6
  2580  003DB6                     u5241:
  2581  003DB6  52E5               	movf	postdec1,f,c
  2582  003DB8  006F FF9F FFDB     	movff	indf1,plusw2
  2583  003DBE  06E8               	decf	wreg,f,c
  2584  003DC0  E2FA               	bc	u5241
  2585  003DC2                     l8211:
  2586                           
  2587                           ;gemsecs.c: 357:   if (V.abort == LINK_ERROR_ABORT) {
  2588  003DC2  0E07               	movlw	7
  2589  003DC4  0100               	movlb	0	; () banked
  2590  003DC6  19EA               	xorwf	(_V+80)& (0+255),w,b
  2591  003DC8  A4D8               	btfss	status,2,c
  2592  003DCA  D017               	goto	l8219
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;gemsecs.c: 358:    secs_send((uint8_t*) block.header, block.length, 0);
  2596  003DCC  0E00               	movlw	0
  2597  003DCE  6EE6               	movwf	postinc1,c
  2598  003DD0  5187               	movf	(t_protocol@block+2)& (0+255),w,b
  2599  003DD2  6EE6               	movwf	postinc1,c
  2600  003DD4  0060  F217  FFE6   	movff	t_protocol@block,postinc1
  2601  003DDA  0060  F21B  FFE6   	movff	t_protocol@block+1,postinc1
  2602  003DE0  EC22  F023         	call	_secs_send	;wreg free
  2603                           
  2604                           ;gemsecs.c: 359:    V.failed_send = 2;
  2605  003DE4  0100               	movlb	0	; () banked
  2606  003DE6  51F0               	movf	(_V+86)& (0+255),w,b
  2607  003DE8  0B87               	andlw	-121
  2608  003DEA  0910               	iorlw	16
  2609  003DEC  6FF0               	movwf	(_V+86)& (0+255),b
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;gemsecs.c: 360:    *t_link = LINK_STATE_ERROR;
  2613                           ;stkvar	_t_link @ sp[(-1)+-1]
  2614  003DEE  0EFE               	movlw	-2
  2615  003DF0  50E3               	movf	plusw1,w,c
  2616  003DF2  6ED9               	movwf	fsr2l,c
  2617  003DF4  6ADA               	clrf	fsr2h,c
  2618  003DF6  0E06               	movlw	6
  2619  003DF8  D02C               	goto	L3
  2620  003DFA                     l8219:
  2621                           
  2622                           ; BSR set to: 0
  2623                           ;gemsecs.c: 362:    if (!requeue) {
  2624  003DFA  502A               	movf	t_protocol@requeue,w,c
  2625  003DFC  A4D8               	btfss	status,2,c
  2626  003DFE  D012               	goto	l1650
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;gemsecs.c: 363:     secs_send((uint8_t*) block.header, block.length, 0);
  2630  003E00  0E00               	movlw	0
  2631  003E02  6EE6               	movwf	postinc1,c
  2632  003E04  5187               	movf	(t_protocol@block+2)& (0+255),w,b
  2633  003E06  6EE6               	movwf	postinc1,c
  2634  003E08  0060  F217  FFE6   	movff	t_protocol@block,postinc1
  2635  003E0E  0060  F21B  FFE6   	movff	t_protocol@block+1,postinc1
  2636  003E14  EC22  F023         	call	_secs_send	;wreg free
  2637                           
  2638                           ;gemsecs.c: 364:     if (V.queue)
  2639  003E18  0100               	movlb	0	; () banked
  2640  003E1A  A9F1               	btfss	(_V+87)& (0+255),4,b
  2641  003E1C  D011               	goto	l8229
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;gemsecs.c: 365:      requeue = 1;
  2645  003E1E  0E01               	movlw	1
  2646  003E20  6E2A               	movwf	t_protocol@requeue,c
  2647  003E22  D00E               	goto	l8229
  2648  003E24                     l1650:
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;gemsecs.c: 367:     requeue = 0;
  2652  003E24  6A2A               	clrf	t_protocol@requeue,c
  2653                           
  2654                           ;gemsecs.c: 368:     V.queue = 0;
  2655  003E26  99F1               	bcf	(_V+87)& (0+255),4,b
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;gemsecs.c: 369:     secs_send((uint8_t*) block.reply, block.reply_length, 0);
  2659  003E28  0E00               	movlw	0
  2660  003E2A  6EE6               	movwf	postinc1,c
  2661  003E2C  518A               	movf	(t_protocol@block+5)& (0+255),w,b
  2662  003E2E  6EE6               	movwf	postinc1,c
  2663  003E30  0060  F223  FFE6   	movff	t_protocol@block+3,postinc1
  2664  003E36  0060  F227  FFE6   	movff	t_protocol@block+4,postinc1
  2665  003E3C  EC22  F023         	call	_secs_send	;wreg free
  2666  003E40                     l8229:
  2667                           
  2668                           ;gemsecs.c: 371:    if (V.error == LINK_ERROR_NONE) {
  2669  003E40  0100               	movlb	0	; () banked
  2670  003E42  51E9               	movf	(_V+79)& (0+255),w,b
  2671  003E44  A4D8               	btfss	status,2,c
  2672  003E46  D007               	goto	l8233
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;gemsecs.c: 372:     *t_link = LINK_STATE_ACK;
  2676                           ;stkvar	_t_link @ sp[(-1)+-1]
  2677  003E48  0EFE               	movlw	-2
  2678  003E4A  50E3               	movf	plusw1,w,c
  2679  003E4C  6ED9               	movwf	fsr2l,c
  2680  003E4E  6ADA               	clrf	fsr2h,c
  2681  003E50  0E03               	movlw	3
  2682  003E52                     L3:
  2683  003E52  6EDF               	movwf	indf2,c
  2684                           
  2685                           ;gemsecs.c: 373:    } else {
  2686  003E54  D004               	goto	l8237
  2687  003E56                     l8233:
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;gemsecs.c: 374:     V.failed_send = 3;
  2691  003E56  51F0               	movf	(_V+86)& (0+255),w,b
  2692  003E58  0B87               	andlw	-121
  2693  003E5A  0918               	iorlw	24
  2694  003E5C  D7C7               	goto	L4
  2695  003E5E                     l8237:
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;gemsecs.c: 379:   WaitMs(5);
  2699  003E5E  0E05               	movlw	5
  2700  003E60  6EE6               	movwf	postinc1,c
  2701  003E62  0E00               	movlw	0
  2702  003E64  6EE6               	movwf	postinc1,c
  2703  003E66  ECBA  F02D         	call	_WaitMs	;wreg free
  2704                           
  2705                           ;gemsecs.c: 380:   UART1_put_buffer(0x06);
  2706  003E6A  0E06               	movlw	6
  2707  003E6C  6EE6               	movwf	postinc1,c
  2708  003E6E  ECA5  F02D         	call	_UART1_put_buffer	;wreg free
  2709                           
  2710                           ;gemsecs.c: 382:   break;
  2711  003E72  D05E               	goto	l8271
  2712  003E74                     l8241:
  2713                           
  2714                           ;gemsecs.c: 384:   if (TimerDone(TMR_T3)) {
  2715  003E74  0E03               	movlw	3
  2716  003E76  6EE6               	movwf	postinc1,c
  2717  003E78  EC71  F02F         	call	_TimerDone	;wreg free
  2718  003E7C  503B               	movf	btemp,w,c
  2719  003E7E  B4D8               	btfsc	status,2,c
  2720  003E80  D007               	goto	l8247
  2721                           
  2722                           ;gemsecs.c: 385:    V.error = LINK_ERROR_T3;
  2723  003E82  0E03               	movlw	3
  2724  003E84  0100               	movlb	0	; () banked
  2725  003E86  6FE9               	movwf	(_V+79)& (0+255),b
  2726                           
  2727                           ;gemsecs.c: 386:    V.failed_send = 4;
  2728  003E88  51F0               	movf	(_V+86)& (0+255),w,b
  2729  003E8A  0B87               	andlw	-121
  2730  003E8C  0920               	iorlw	32
  2731  003E8E  D743               	goto	L5
  2732  003E90                     l8247:
  2733                           
  2734                           ;gemsecs.c: 389:    if (UART1_is_rx_ready()) {
  2735  003E90  ECAB  F030         	call	_UART1_is_rx_ready	;wreg free
  2736  003E94  503B               	movf	btemp,w,c
  2737  003E96  B4D8               	btfsc	status,2,c
  2738  003E98  D04B               	goto	l8271
  2739                           
  2740                           ;gemsecs.c: 390:     rxData = UART1_Read();
  2741  003E9A  ECD4  F02C         	call	_UART1_Read	;wreg free
  2742                           
  2743                           ;stkvar	_rxData @ sp[(-1)+0]
  2744  003E9E  0EFF               	movlw	-1
  2745  003EA0  0060  F0EF  FFE3   	movff	btemp,plusw1
  2746                           
  2747                           ; BSR set to: 57
  2748                           ;gemsecs.c: 391:     if (rxData == 0x06) {
  2749                           ;stkvar	_rxData @ sp[(-1)+0]
  2750  003EA6  0EFF               	movlw	-1
  2751  003EA8  006F FF8C  F03B    	movff	plusw1,btemp
  2752  003EAE  0E06               	movlw	6
  2753  003EB0  183B               	xorwf	btemp,w,c
  2754  003EB2  A4D8               	btfss	status,2,c
  2755  003EB4  D03D               	goto	l8271
  2756                           
  2757                           ; BSR set to: 57
  2758                           ;gemsecs.c: 392:      V.failed_send = 0;
  2759  003EB6  0E87               	movlw	-121
  2760  003EB8  0100               	movlb	0	; () banked
  2761  003EBA  17F0               	andwf	(_V+86)& (0+255),f,b
  2762  003EBC  D769               	goto	l8205
  2763  003EBE                     l8257:
  2764                           
  2765                           ;gemsecs.c: 399:   *t_link = LINK_STATE_ERROR;
  2766                           ;stkvar	_t_link @ sp[(-1)+-1]
  2767  003EBE  0EFE               	movlw	-2
  2768  003EC0  50E3               	movf	plusw1,w,c
  2769  003EC2  6ED9               	movwf	fsr2l,c
  2770  003EC4  6ADA               	clrf	fsr2h,c
  2771  003EC6  0E06               	movlw	6
  2772  003EC8  6EDF               	movwf	indf2,c
  2773                           
  2774                           ;gemsecs.c: 400:   while ((uart1RxCount)) {
  2775  003ECA  D002               	goto	l8261
  2776  003ECC                     l8259:
  2777                           
  2778                           ;gemsecs.c: 401:    UART1_Read();
  2779  003ECC  ECD4  F02C         	call	_UART1_Read	;wreg free
  2780  003ED0                     l8261:
  2781                           
  2782                           ;gemsecs.c: 400:   while ((uart1RxCount)) {
  2783  003ED0  5035               	movf	_uart1RxCount,w,c	;volatile
  2784  003ED2  B4D8               	btfsc	status,2,c
  2785  003ED4  D02D               	goto	l8271
  2786  003ED6  D7FA               	goto	l8259
  2787  003ED8                     l8263:
  2788                           
  2789                           ;gemsecs.c: 407:   V.failed_send = 0;
  2790  003ED8  0E87               	movlw	-121
  2791  003EDA  0100               	movlb	0	; () banked
  2792  003EDC  17F0               	andwf	(_V+86)& (0+255),f,b
  2793                           
  2794                           ;gemsecs.c: 408:   break;
  2795  003EDE  D028               	goto	l8271
  2796  003EE0                     l8265:
  2797                           
  2798                           ;gemsecs.c: 410:   *t_link = LINK_STATE_IDLE;
  2799                           ;stkvar	_t_link @ sp[(-1)+-1]
  2800  003EE0  0EFE               	movlw	-2
  2801  003EE2  50E3               	movf	plusw1,w,c
  2802  003EE4  6ED9               	movwf	fsr2l,c
  2803  003EE6  6ADA               	clrf	fsr2h,c
  2804  003EE8  0E00               	movlw	0
  2805  003EEA                     L2:
  2806  003EEA  6EDF               	movwf	indf2,c
  2807                           
  2808                           ;gemsecs.c: 412:   break;
  2809  003EEC  D021               	goto	l8271
  2810  003EEE                     l8269:
  2811                           
  2812                           ;stkvar	_t_link @ sp[(-1)+-1]
  2813  003EEE  0EFE               	movlw	-2
  2814  003EF0  50E3               	movf	plusw1,w,c
  2815  003EF2  6ED9               	movwf	fsr2l,c
  2816  003EF4  6ADA               	clrf	fsr2h,c
  2817  003EF6  50DF               	movf	indf2,w,c
  2818  003EF8  6E45               	movwf	btemp+10,c
  2819  003EFA  6A46               	clrf	btemp+11,c
  2820                           
  2821                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2822                           ; Switch size 1, requested type "simple"
  2823                           ; Number of cases is 1, Range of values is 0 to 0
  2824                           ; switch strategies available:
  2825                           ; Name         Instructions Cycles
  2826                           ; simple_byte            4     3 (average)
  2827                           ;	Chosen strategy is simple_byte
  2828  003EFC  5046               	movf	btemp+11,w,c
  2829  003EFE  0A00               	xorlw	0	; case 0
  2830  003F00  A4D8               	btfss	status,2,c
  2831  003F02  D7EE               	goto	l8265
  2832                           
  2833                           ; Switch size 1, requested type "simple"
  2834                           ; Number of cases is 7, Range of values is 0 to 6
  2835                           ; switch strategies available:
  2836                           ; Name         Instructions Cycles
  2837                           ; simple_byte           22    12 (average)
  2838                           ;	Chosen strategy is simple_byte
  2839  003F04  5045               	movf	btemp+10,w,c
  2840  003F06  0A00               	xorlw	0	; case 0
  2841  003F08  B4D8               	btfsc	status,2,c
  2842  003F0A  D6D3               	goto	l1636
  2843  003F0C  0A01               	xorlw	1	; case 1
  2844  003F0E  B4D8               	btfsc	status,2,c
  2845  003F10  D6F1               	goto	l8181
  2846  003F12  0A03               	xorlw	3	; case 2
  2847  003F14  B4D8               	btfsc	status,2,c
  2848  003F16  D742               	goto	l8207
  2849  003F18  0A01               	xorlw	1	; case 3
  2850  003F1A  B4D8               	btfsc	status,2,c
  2851  003F1C  D7AB               	goto	l8241
  2852  003F1E  0A07               	xorlw	7	; case 4
  2853  003F20  B4D8               	btfsc	status,2,c
  2854  003F22  D7DA               	goto	l8263
  2855  003F24  0A01               	xorlw	1	; case 5
  2856  003F26  B4D8               	btfsc	status,2,c
  2857  003F28  D7CA               	goto	l8257
  2858  003F2A  0A03               	xorlw	3	; case 6
  2859  003F2C  A4D8               	btfss	status,2,c
  2860  003F2E  D7D8               	goto	l8265
  2861  003F30                     l8271:
  2862                           
  2863                           ;gemsecs.c: 415:  return *t_link;
  2864                           ;stkvar	_t_link @ sp[(-1)+-1]
  2865  003F30  0EFE               	movlw	-2
  2866  003F32  50E3               	movf	plusw1,w,c
  2867  003F34  6ED9               	movwf	fsr2l,c
  2868  003F36  6ADA               	clrf	fsr2h,c
  2869  003F38  50DF               	movf	indf2,w,c
  2870  003F3A  6E3B               	movwf	btemp,c
  2871                           
  2872                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2873  003F3C  52E5               	movf	postdec1,f,c
  2874  003F3E  52E5               	movf	postdec1,f,c
  2875  003F40  0012               	return		;funcret
  2876  003F42                     __end_of_t_protocol:
  2877                           	opt callstack 0
  2878                           
  2879 ;; *************** function _secs_II_message *****************
  2880 ;; Defined at:
  2881 ;;		line 459 in file "gemsecs.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;  stream          1  [STACK] unsigned char 
  2884 ;;  function        1  [STACK] unsigned char 
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;		None
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  7  [STACK] struct response_type
  2889 ;; Registers used:
  2890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  2891 ;; Tracked objects:
  2892 ;;		On entry : 3F/0
  2893 ;;		On exit  : 3E/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2900 ;;Total ram usage:        0 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; Hardware stack levels required when called:    3
  2903 ;; This function calls:
  2904 ;;		Nothing
  2905 ;; This function is called by:
  2906 ;;		_t_protocol
  2907 ;; This function uses a reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text2
  2911  0041C2                     __ptext2:
  2912                           	opt callstack 0
  2913  0041C2                     _secs_II_message:
  2914                           	opt callstack 0
  2915                           
  2916                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  2917  0041C2  0E05               	movlw	5
  2918  0041C4  26E1               	addwf	fsr1l,f,c
  2919  0041C6  0E00               	movlw	0
  2920  0041C8  22E2               	addwfc	fsr1h,f,c
  2921                           
  2922                           ;gemsecs.c: 459: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 460: {;gemsecs.c: 461:  static response_type block;;gemsecs.c: 463:  V.abort = LINK_
      +                          ERROR_NONE;
  2923                           
  2924                           ;incstack = 0
  2925  0041CA  0100               	movlb	0	; () banked
  2926  0041CC  6BEA               	clrf	(_V+80)& (0+255),b
  2927                           
  2928                           ;gemsecs.c: 464:  V.queue = 0;
  2929  0041CE  99F1               	bcf	(_V+87)& (0+255),4,b
  2930                           
  2931                           ;gemsecs.c: 465:  block.respond = 0;
  2932  0041D0  9007               	bcf	secs_II_message@block+6,0,c
  2933                           
  2934                           ;gemsecs.c: 467:  switch (stream) {
  2935  0041D2  D0F3               	goto	l6165
  2936  0041D4                     l6033:
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;gemsecs.c: 471:    block.header = (uint8_t*) & H12[0];
  2940  0041D4  0E5F               	movlw	low _H12
  2941  0041D6  6E01               	movwf	secs_II_message@block,c
  2942  0041D8  0E01               	movlw	high _H12
  2943  0041DA  6E02               	movwf	secs_II_message@block+1,c
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;gemsecs.c: 472:    block.length = sizeof(header12);
  2947  0041DC  0E0F               	movlw	15
  2948  0041DE  6E03               	movwf	secs_II_message@block+2,c
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;gemsecs.c: 473:    H12[0].block.block.systemb = V.systemb;
  2952  0041E0  C0E3  F163         	movff	_V+73,_H12+4
  2953  0041E4  C0E4  F164         	movff	_V+74,_H12+5
  2954  0041E8  C0E5  F165         	movff	_V+75,_H12+6
  2955  0041EC  C0E6  F166         	movff	_V+76,_H12+7
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;gemsecs.c: 474:    H10[0].block.block.systemb = V.systemb;
  2959  0041F0  C0E3  F102         	movff	_V+73,_H10+2
  2960  0041F4  C0E4  F103         	movff	_V+74,_H10+3
  2961  0041F8  C0E5  F104         	movff	_V+75,_H10+4
  2962  0041FC  C0E6  F105         	movff	_V+76,_H10+5
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;gemsecs.c: 475:    block.respond = 1;
  2966  004200  8007               	bsf	secs_II_message@block+6,0,c
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;gemsecs.c: 476:    block.reply = (uint8_t*) & H10[0];
  2970  004202  0E00               	movlw	low _H10
  2971  004204  6E04               	movwf	secs_II_message@block+3,c
  2972  004206  0E01               	movlw	high _H10
  2973  004208  6E05               	movwf	secs_II_message@block+4,c
  2974                           
  2975                           ;gemsecs.c: 477:    block.reply_length = sizeof(header10);
  2976  00420A  0E0D               	movlw	13
  2977  00420C                     L6:
  2978  00420C  6E06               	movwf	secs_II_message@block+5,c
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;gemsecs.c: 478:    V.queue = 1;
  2982  00420E  89F1               	bsf	(_V+87)& (0+255),4,b
  2983                           
  2984                           ;gemsecs.c: 479:    break;
  2985  004210  D0ED               	goto	l6167
  2986  004212                     l6047:
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;gemsecs.c: 481:    block.header = (uint8_t*) & H14[0];
  2990  004212  0EAC               	movlw	low _H14
  2991  004214  6E01               	movwf	secs_II_message@block,c
  2992  004216  0E01               	movlw	high _H14
  2993  004218  6E02               	movwf	secs_II_message@block+1,c
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;gemsecs.c: 482:    block.length = sizeof(header14);
  2997  00421A  0E11               	movlw	17
  2998  00421C  6E03               	movwf	secs_II_message@block+2,c
  2999                           
  3000                           ; BSR set to: 0
  3001                           ;gemsecs.c: 483:    H14[0].block.block.systemb = V.systemb;
  3002  00421E  C0E3  F1B2         	movff	_V+73,_H14+6
  3003  004222  C0E4  F1B3         	movff	_V+74,_H14+7
  3004  004226  C0E5  F1B4         	movff	_V+75,_H14+8
  3005  00422A  C0E6  F1B5         	movff	_V+76,_H14+9
  3006                           
  3007                           ;gemsecs.c: 484:    break;
  3008  00422E  D0DE               	goto	l6167
  3009  004230                     l6053:
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;gemsecs.c: 486:    block.header = (uint8_t*) & H17[0];
  3013  004230  0E98               	movlw	low _H17
  3014  004232  6E01               	movwf	secs_II_message@block,c
  3015  004234  0E01               	movlw	high _H17
  3016  004236  6E02               	movwf	secs_II_message@block+1,c
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;gemsecs.c: 487:    block.length = sizeof(header17);
  3020  004238  0E14               	movlw	20
  3021  00423A  6E03               	movwf	secs_II_message@block+2,c
  3022                           
  3023                           ; BSR set to: 0
  3024                           ;gemsecs.c: 488:    H17[0].block.block.systemb = V.systemb;
  3025  00423C  C0E3  F1A1         	movff	_V+73,_H17+9
  3026  004240  C0E4  F1A2         	movff	_V+74,_H17+10
  3027  004244  C0E5  F1A3         	movff	_V+75,_H17+11
  3028  004248  C0E6  F1A4         	movff	_V+76,_H17+12
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;gemsecs.c: 489:    H12[1].block.block.systemb = V.systemb;
  3032  00424C  C0E3  F172         	movff	_V+73,_H12+19
  3033  004250  C0E4  F173         	movff	_V+74,_H12+20
  3034  004254  C0E5  F174         	movff	_V+75,_H12+21
  3035  004258  C0E6  F175         	movff	_V+76,_H12+22
  3036                           
  3037                           ; BSR set to: 0
  3038                           ;gemsecs.c: 490:    block.respond = 1;
  3039  00425C  8007               	bsf	secs_II_message@block+6,0,c
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;gemsecs.c: 491:    block.reply = (uint8_t*) & H12[1];
  3043  00425E  0E6E               	movlw	low (_H12+15)
  3044  004260  6E04               	movwf	secs_II_message@block+3,c
  3045  004262  0E01               	movlw	high (_H12+15)
  3046  004264  6E05               	movwf	secs_II_message@block+4,c
  3047                           
  3048                           ;gemsecs.c: 492:    block.reply_length = sizeof(header12);
  3049  004266  0E0F               	movlw	15
  3050  004268  D7D1               	goto	L6
  3051  00426A                     l6067:
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;gemsecs.c: 496:    block.header = (uint8_t*) & H10[2];
  3055  00426A  0E1A               	movlw	low (_H10+26)
  3056  00426C  6E01               	movwf	secs_II_message@block,c
  3057  00426E  0E01               	movlw	high (_H10+26)
  3058  004270  6E02               	movwf	secs_II_message@block+1,c
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;gemsecs.c: 497:    block.length = sizeof(header10);
  3062  004272  0E0D               	movlw	13
  3063  004274  6E03               	movwf	secs_II_message@block+2,c
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;gemsecs.c: 498:    H10[2].block.block.systemb = V.systemb;
  3067  004276  C0E3  F11C         	movff	_V+73,_H10+28
  3068  00427A  C0E4  F11D         	movff	_V+74,_H10+29
  3069  00427E  C0E5  F11E         	movff	_V+75,_H10+30
  3070  004282  C0E6  F11F         	movff	_V+76,_H10+31
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;gemsecs.c: 499:    V.abort = LINK_ERROR_ABORT;
  3074  004286  0E07               	movlw	7
  3075  004288  6FEA               	movwf	(_V+80)& (0+255),b
  3076                           
  3077                           ;gemsecs.c: 500:    break;
  3078  00428A  D0B0               	goto	l6167
  3079  00428C                     l6077:
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;stkvar	_function @ sp[(0)+-7]
  3083  00428C  0EF9               	movlw	-7
  3084  00428E  50E3               	movf	plusw1,w,c
  3085  004290  6E45               	movwf	btemp+10,c
  3086  004292  6A46               	clrf	btemp+11,c
  3087                           
  3088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3089                           ; Switch size 1, requested type "simple"
  3090                           ; Number of cases is 1, Range of values is 0 to 0
  3091                           ; switch strategies available:
  3092                           ; Name         Instructions Cycles
  3093                           ; simple_byte            4     3 (average)
  3094                           ;	Chosen strategy is simple_byte
  3095  004294  5046               	movf	btemp+11,w,c
  3096  004296  0A00               	xorlw	0	; case 0
  3097  004298  A4D8               	btfss	status,2,c
  3098  00429A  D7E7               	goto	l6067
  3099                           
  3100                           ; BSR set to: 0
  3101                           ; Switch size 1, requested type "simple"
  3102                           ; Number of cases is 3, Range of values is 1 to 13
  3103                           ; switch strategies available:
  3104                           ; Name         Instructions Cycles
  3105                           ; simple_byte           10     6 (average)
  3106                           ;	Chosen strategy is simple_byte
  3107  00429C  5045               	movf	btemp+10,w,c
  3108  00429E  0A01               	xorlw	1	; case 1
  3109  0042A0  B4D8               	btfsc	status,2,c
  3110  0042A2  D798               	goto	l6033
  3111  0042A4  0A02               	xorlw	2	; case 3
  3112  0042A6  B4D8               	btfsc	status,2,c
  3113  0042A8  D7B4               	goto	l6047
  3114  0042AA  0A0E               	xorlw	14	; case 13
  3115  0042AC  B4D8               	btfsc	status,2,c
  3116  0042AE  D7C0               	goto	l6053
  3117  0042B0  D7DC               	goto	l6067
  3118  0042B2                     l6079:
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;gemsecs.c: 506:    block.header = (uint8_t*) & H24[0];
  3122  0042B2  0E7D               	movlw	low _H24
  3123  0042B4  6E01               	movwf	secs_II_message@block,c
  3124  0042B6  0E01               	movlw	high _H24
  3125  0042B8  6E02               	movwf	secs_II_message@block+1,c
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;gemsecs.c: 507:    block.length = sizeof(header24);
  3129  0042BA  0E1B               	movlw	27
  3130  0042BC  6E03               	movwf	secs_II_message@block+2,c
  3131                           
  3132                           ; BSR set to: 0
  3133                           ;gemsecs.c: 508:    H24[0].block.block.systemb = V.systemb;
  3134  0042BE  C0E3  F18D         	movff	_V+73,_H24+16
  3135  0042C2  C0E4  F18E         	movff	_V+74,_H24+17
  3136  0042C6  C0E5  F18F         	movff	_V+75,_H24+18
  3137  0042CA  C0E6  F190         	movff	_V+76,_H24+19
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;gemsecs.c: 509:    H24[0].data[12] = 12;
  3141  0042CE  0E0C               	movlw	12
  3142  0042D0  0101               	movlb	1	; () banked
  3143  0042D2  6F8B               	movwf	(_H24+14)& (0+255),b
  3144                           
  3145                           ;gemsecs.c: 510:    break;
  3146  0042D4  D08B               	goto	l6167
  3147  0042D6                     l6097:
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;stkvar	_function @ sp[(0)+-7]
  3151  0042D6  0EF9               	movlw	-7
  3152  0042D8  50E3               	movf	plusw1,w,c
  3153  0042DA  6E45               	movwf	btemp+10,c
  3154  0042DC  6A46               	clrf	btemp+11,c
  3155                           
  3156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3157                           ; Switch size 1, requested type "simple"
  3158                           ; Number of cases is 1, Range of values is 0 to 0
  3159                           ; switch strategies available:
  3160                           ; Name         Instructions Cycles
  3161                           ; simple_byte            4     3 (average)
  3162                           ;	Chosen strategy is simple_byte
  3163  0042DE  5046               	movf	btemp+11,w,c
  3164  0042E0  0A00               	xorlw	0	; case 0
  3165  0042E2  A4D8               	btfss	status,2,c
  3166  0042E4  D7C2               	goto	l6067
  3167                           
  3168                           ; BSR set to: 0
  3169                           ; Switch size 1, requested type "simple"
  3170                           ; Number of cases is 1, Range of values is 17 to 17
  3171                           ; switch strategies available:
  3172                           ; Name         Instructions Cycles
  3173                           ; simple_byte            4     3 (average)
  3174                           ;	Chosen strategy is simple_byte
  3175  0042E6  5045               	movf	btemp+10,w,c
  3176  0042E8  0A11               	xorlw	17	; case 17
  3177  0042EA  B4D8               	btfsc	status,2,c
  3178  0042EC  D7E2               	goto	l6079
  3179  0042EE  D7BD               	goto	l6067
  3180  0042F0                     l6099:
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;gemsecs.c: 522:    block.header = (uint8_t*) & H13[0];
  3184  0042F0  0EBD               	movlw	low _H13
  3185  0042F2  6E01               	movwf	secs_II_message@block,c
  3186  0042F4  0E01               	movlw	high _H13
  3187  0042F6  6E02               	movwf	secs_II_message@block+1,c
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;gemsecs.c: 523:    block.length = sizeof(header13);
  3191  0042F8  0E10               	movlw	16
  3192  0042FA  6E03               	movwf	secs_II_message@block+2,c
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;gemsecs.c: 524:    H13[0].block.block.systemb = V.systemb;
  3196  0042FC  C0E3  F1C2         	movff	_V+73,_H13+5
  3197  004300  C0E4  F1C3         	movff	_V+74,_H13+6
  3198  004304  C0E5  F1C4         	movff	_V+75,_H13+7
  3199  004308  C0E6  F1C5         	movff	_V+76,_H13+8
  3200                           
  3201                           ;gemsecs.c: 525:    break;
  3202  00430C  D06F               	goto	l6167
  3203  00430E                     l6115:
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;stkvar	_function @ sp[(0)+-7]
  3207  00430E  0EF9               	movlw	-7
  3208  004310  50E3               	movf	plusw1,w,c
  3209  004312  6E45               	movwf	btemp+10,c
  3210  004314  6A46               	clrf	btemp+11,c
  3211                           
  3212                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3213                           ; Switch size 1, requested type "simple"
  3214                           ; Number of cases is 1, Range of values is 0 to 0
  3215                           ; switch strategies available:
  3216                           ; Name         Instructions Cycles
  3217                           ; simple_byte            4     3 (average)
  3218                           ;	Chosen strategy is simple_byte
  3219  004316  5046               	movf	btemp+11,w,c
  3220  004318  0A00               	xorlw	0	; case 0
  3221  00431A  A4D8               	btfss	status,2,c
  3222  00431C  D7A6               	goto	l6067
  3223                           
  3224                           ; BSR set to: 0
  3225                           ; Switch size 1, requested type "simple"
  3226                           ; Number of cases is 1, Range of values is 11 to 11
  3227                           ; switch strategies available:
  3228                           ; Name         Instructions Cycles
  3229                           ; simple_byte            4     3 (average)
  3230                           ;	Chosen strategy is simple_byte
  3231  00431E  5045               	movf	btemp+10,w,c
  3232  004320  0A0B               	xorlw	11	; case 11
  3233  004322  B4D8               	btfsc	status,2,c
  3234  004324  D7E5               	goto	l6099
  3235  004326  D7A1               	goto	l6067
  3236  004328                     l6127:
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;stkvar	_function @ sp[(0)+-7]
  3240  004328  0EF9               	movlw	-7
  3241  00432A  50E3               	movf	plusw1,w,c
  3242  00432C  6E45               	movwf	btemp+10,c
  3243  00432E  6A46               	clrf	btemp+11,c
  3244                           
  3245                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3246                           ; Switch size 1, requested type "simple"
  3247                           ; Number of cases is 1, Range of values is 0 to 0
  3248                           ; switch strategies available:
  3249                           ; Name         Instructions Cycles
  3250                           ; simple_byte            4     3 (average)
  3251                           ;	Chosen strategy is simple_byte
  3252  004330  5046               	movf	btemp+11,w,c
  3253  004332  0A00               	xorlw	0	; case 0
  3254  004334  A4D8               	btfss	status,2,c
  3255  004336  D799               	goto	l6067
  3256                           
  3257                           ; BSR set to: 0
  3258                           ; Switch size 1, requested type "simple"
  3259                           ; Number of cases is 7, Range of values is 1 to 13
  3260                           ; switch strategies available:
  3261                           ; Name         Instructions Cycles
  3262                           ; simple_byte           22    12 (average)
  3263                           ;	Chosen strategy is simple_byte
  3264  004338  5045               	movf	btemp+10,w,c
  3265  00433A  0A01               	xorlw	1	; case 1
  3266  00433C  B4D8               	btfsc	status,2,c
  3267  00433E  D056               	goto	l6167
  3268  004340  0A02               	xorlw	2	; case 3
  3269  004342  B4D8               	btfsc	status,2,c
  3270  004344  D053               	goto	l6167
  3271  004346  0A06               	xorlw	6	; case 5
  3272  004348  B4D8               	btfsc	status,2,c
  3273  00434A  D050               	goto	l6167
  3274  00434C  0A02               	xorlw	2	; case 7
  3275  00434E  B4D8               	btfsc	status,2,c
  3276  004350  D04D               	goto	l6167
  3277  004352  0A0E               	xorlw	14	; case 9
  3278  004354  B4D8               	btfsc	status,2,c
  3279  004356  D04A               	goto	l6167
  3280  004358  0A02               	xorlw	2	; case 11
  3281  00435A  B4D8               	btfsc	status,2,c
  3282  00435C  D047               	goto	l6167
  3283  00435E  0A06               	xorlw	6	; case 13
  3284  004360  B4D8               	btfsc	status,2,c
  3285  004362  D044               	goto	l6167
  3286  004364  D782               	goto	l6067
  3287  004366                     l6129:
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;gemsecs.c: 561:    block.header = (uint8_t*) & H12[0];
  3291  004366  0E5F               	movlw	low _H12
  3292  004368  6E01               	movwf	secs_II_message@block,c
  3293  00436A  0E01               	movlw	high _H12
  3294  00436C  6E02               	movwf	secs_II_message@block+1,c
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;gemsecs.c: 562:    block.length = sizeof(header12);
  3298  00436E  0E0F               	movlw	15
  3299  004370  6E03               	movwf	secs_II_message@block+2,c
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;gemsecs.c: 563:    H12[0].block.block.systemb = V.systemb;
  3303  004372  C0E3  F163         	movff	_V+73,_H12+4
  3304  004376  C0E4  F164         	movff	_V+74,_H12+5
  3305  00437A  C0E5  F165         	movff	_V+75,_H12+6
  3306  00437E  C0E6  F166         	movff	_V+76,_H12+7
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;gemsecs.c: 564:    H53[0].block.block.systemb = V.systemb;
  3310  004382  C0E3  F2ED         	movff	_V+73,_H53+45
  3311  004386  C0E4  F2EE         	movff	_V+74,_H53+46
  3312  00438A  C0E5  F2EF         	movff	_V+75,_H53+47
  3313  00438E  C0E6  F2F0         	movff	_V+76,_H53+48
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;gemsecs.c: 565:    block.respond = 1;
  3317  004392  8007               	bsf	secs_II_message@block+6,0,c
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;gemsecs.c: 566:    block.reply = (uint8_t*) & H53[0];
  3321  004394  0EC0               	movlw	low _H53
  3322  004396  6E04               	movwf	secs_II_message@block+3,c
  3323  004398  0E02               	movlw	high _H53
  3324  00439A  6E05               	movwf	secs_II_message@block+4,c
  3325                           
  3326                           ;gemsecs.c: 567:    block.reply_length = sizeof(header53);
  3327  00439C  0E38               	movlw	56
  3328  00439E  D736               	goto	L6
  3329  0043A0                     l6153:
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;stkvar	_function @ sp[(0)+-7]
  3333  0043A0  0EF9               	movlw	-7
  3334  0043A2  50E3               	movf	plusw1,w,c
  3335  0043A4  6E45               	movwf	btemp+10,c
  3336  0043A6  6A46               	clrf	btemp+11,c
  3337                           
  3338                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3339                           ; Switch size 1, requested type "simple"
  3340                           ; Number of cases is 1, Range of values is 0 to 0
  3341                           ; switch strategies available:
  3342                           ; Name         Instructions Cycles
  3343                           ; simple_byte            4     3 (average)
  3344                           ;	Chosen strategy is simple_byte
  3345  0043A8  5046               	movf	btemp+11,w,c
  3346  0043AA  0A00               	xorlw	0	; case 0
  3347  0043AC  A4D8               	btfss	status,2,c
  3348  0043AE  D75D               	goto	l6067
  3349                           
  3350                           ; BSR set to: 0
  3351                           ; Switch size 1, requested type "simple"
  3352                           ; Number of cases is 1, Range of values is 1 to 1
  3353                           ; switch strategies available:
  3354                           ; Name         Instructions Cycles
  3355                           ; simple_byte            4     3 (average)
  3356                           ;	Chosen strategy is simple_byte
  3357  0043B0  5045               	movf	btemp+10,w,c
  3358  0043B2  0A01               	xorlw	1	; case 1
  3359  0043B4  B4D8               	btfsc	status,2,c
  3360  0043B6  D7D7               	goto	l6129
  3361  0043B8  D758               	goto	l6067
  3362  0043BA                     l6165:
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;stkvar	_stream @ sp[(0)+-6]
  3366  0043BA  0EFA               	movlw	-6
  3367  0043BC  50E3               	movf	plusw1,w,c
  3368  0043BE  6E45               	movwf	btemp+10,c
  3369  0043C0  6A46               	clrf	btemp+11,c
  3370                           
  3371                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3372                           ; Switch size 1, requested type "simple"
  3373                           ; Number of cases is 1, Range of values is 0 to 0
  3374                           ; switch strategies available:
  3375                           ; Name         Instructions Cycles
  3376                           ; simple_byte            4     3 (average)
  3377                           ;	Chosen strategy is simple_byte
  3378  0043C2  5046               	movf	btemp+11,w,c
  3379  0043C4  0A00               	xorlw	0	; case 0
  3380  0043C6  A4D8               	btfss	status,2,c
  3381  0043C8  D750               	goto	l6067
  3382                           
  3383                           ; BSR set to: 0
  3384                           ; Switch size 1, requested type "simple"
  3385                           ; Number of cases is 5, Range of values is 1 to 10
  3386                           ; switch strategies available:
  3387                           ; Name         Instructions Cycles
  3388                           ; simple_byte           16     9 (average)
  3389                           ;	Chosen strategy is simple_byte
  3390  0043CA  5045               	movf	btemp+10,w,c
  3391  0043CC  0A01               	xorlw	1	; case 1
  3392  0043CE  B4D8               	btfsc	status,2,c
  3393  0043D0  D75D               	goto	l6077
  3394  0043D2  0A03               	xorlw	3	; case 2
  3395  0043D4  B4D8               	btfsc	status,2,c
  3396  0043D6  D77F               	goto	l6097
  3397  0043D8  0A04               	xorlw	4	; case 6
  3398  0043DA  B4D8               	btfsc	status,2,c
  3399  0043DC  D798               	goto	l6115
  3400  0043DE  0A0F               	xorlw	15	; case 9
  3401  0043E0  B4D8               	btfsc	status,2,c
  3402  0043E2  D7A2               	goto	l6127
  3403  0043E4  0A03               	xorlw	3	; case 10
  3404  0043E6  B4D8               	btfsc	status,2,c
  3405  0043E8  D7DB               	goto	l6153
  3406  0043EA  D73F               	goto	l6067
  3407  0043EC                     l6167:
  3408                           
  3409                           ;gemsecs.c: 586:  return(block);
  3410  0043EC  EE20  F001         	lfsr	2,secs_II_message@block
  3411                           
  3412                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  3413  0043F0  0E07               	movlw	7
  3414  0043F2  6E3B               	movwf	btemp,c
  3415  0043F4  0EF9               	movlw	-7
  3416  0043F6                     us333999:
  3417  0043F6  006F FF7B FFE3     	movff	postinc2,plusw1
  3418  0043FC  28E8               	incf	wreg,w,c
  3419  0043FE  2E3B               	decfsz	btemp,f,c
  3420  004400  D7FA               	bra	us333999
  3421                           
  3422                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  3423  004402  0012               	return		;funcret
  3424  004404                     __end_of_secs_II_message:
  3425                           	opt callstack 0
  3426                           
  3427 ;; *************** function _sprintf *****************
  3428 ;; Defined at:
  3429 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  s               1  [STACK] PTR unsigned char 
  3432 ;;		 -> V(88), 
  3433 ;;  fmt             1  [STACK] PTR const unsigned char 
  3434 ;;		 -> STR_15(21), STR_14(20), STR_13(6), STR_12(14), 
  3435 ;;		 -> STR_11(20), STR_10(19), STR_9(20), STR_8(6), 
  3436 ;;		 -> STR_7(6), STR_6(14), STR_5(19), STR_4(15), 
  3437 ;;		 -> STR_2(12), STR_1(17), 
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;  f               5  [STACK] struct _IO_FILE
  3440 ;;  ap              2  [STACK] PTR void [1]
  3441 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3442 ;;  ret             2    0        int 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  2  [STACK] int 
  3445 ;; Registers used:
  3446 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  3447 ;; Tracked objects:
  3448 ;;		On entry : 4/0
  3449 ;;		On exit  : 3F/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3456 ;;Total ram usage:        0 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:   11
  3459 ;; This function calls:
  3460 ;;		_vfprintf
  3461 ;; This function is called by:
  3462 ;;		_main
  3463 ;; This function uses a reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text3
  3467  004F0A                     __ptext3:
  3468                           	opt callstack 0
  3469  004F0A                     _sprintf:
  3470                           	opt callstack 0
  3471                           
  3472                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3473  004F0A  0E07               	movlw	7
  3474  004F0C  26E1               	addwf	fsr1l,f,c
  3475  004F0E  0E00               	movlw	0
  3476  004F10  22E2               	addwfc	fsr1h,f,c
  3477                           
  3478                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  3479                           
  3480                           ;incstack = 0
  3481  004F12  0EF6               	movlw	246
  3482  004F14  24E1               	addwf	fsr1l,w,c
  3483  004F16  6E45               	movwf	btemp+10,c
  3484  004F18  0EFF               	movlw	255
  3485  004F1A  20E2               	addwfc	fsr1h,w,c
  3486  004F1C  6E46               	movwf	btemp+11,c
  3487                           
  3488                           ;stkvar	_ap @ sp[(-7)+5]
  3489  004F1E  0EFF               	movlw	-1
  3490  004F20  0060  F11B  FFE3   	movff	btemp+11,plusw1
  3491  004F26  0EFE               	movlw	-2
  3492  004F28  0060  F117  FFE3   	movff	btemp+10,plusw1
  3493                           
  3494                           ;stkvar	_s @ sp[(-7)+-2]
  3495  004F2E  0EF7               	movlw	-9
  3496  004F30  006F FF8C  F046    	movff	plusw1,btemp+11
  3497                           
  3498                           ;stkvar	_f @ sp[(-7)+0]
  3499  004F36  0EF9               	movlw	-7
  3500  004F38  0060  F11B  FFE3   	movff	btemp+11,plusw1
  3501                           
  3502                           ;stkvar	_f @ sp[(-7)+0]
  3503  004F3E  0EFA               	movlw	250
  3504  004F40  24E1               	addwf	fsr1l,w,c
  3505  004F42  6ED9               	movwf	fsr2l,c
  3506  004F44  0EFF               	movlw	255
  3507  004F46  20E2               	addwfc	fsr1h,w,c
  3508  004F48  6EDA               	movwf	fsr2h,c
  3509  004F4A  0E00               	movlw	0
  3510  004F4C  6EDE               	movwf	postinc2,c
  3511  004F4E  0E00               	movlw	0
  3512  004F50  6EDD               	movwf	postdec2,c
  3513                           
  3514                           ;stkvar	_f @ sp[(-7)+0]
  3515  004F52  0EFC               	movlw	252
  3516  004F54  24E1               	addwf	fsr1l,w,c
  3517  004F56  6ED9               	movwf	fsr2l,c
  3518  004F58  0EFF               	movlw	255
  3519  004F5A  20E2               	addwfc	fsr1h,w,c
  3520  004F5C  6EDA               	movwf	fsr2h,c
  3521  004F5E  0E00               	movlw	0
  3522  004F60  6EDE               	movwf	postinc2,c
  3523  004F62  0E00               	movlw	0
  3524  004F64  6EDD               	movwf	postdec2,c
  3525                           
  3526                           ;stkvar	_ap @ sp[(-7)+5]
  3527  004F66  0EFE               	movlw	254
  3528  004F68  24E1               	addwf	fsr1l,w,c
  3529  004F6A  6E3B               	movwf	btemp,c
  3530  004F6C  0EFF               	movlw	255
  3531  004F6E  20E2               	addwfc	fsr1h,w,c
  3532  004F70  6E3C               	movwf	btemp+1,c
  3533  004F72  0060  F0EF  FFE6   	movff	btemp,postinc1
  3534  004F78  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  3535                           
  3536                           ;stkvar	_fmt @ sp[(-9)+-3]
  3537  004F7E  0EF4               	movlw	-12
  3538  004F80  50E3               	movf	plusw1,w,c
  3539  004F82  6EE6               	movwf	postinc1,c
  3540                           
  3541                           ;stkvar	_f @ sp[(-10)+0]
  3542  004F84  0EF6               	movlw	246
  3543  004F86  24E1               	addwf	fsr1l,w,c
  3544  004F88  6E3B               	movwf	btemp,c
  3545  004F8A  0EFF               	movlw	255
  3546  004F8C  20E2               	addwfc	fsr1h,w,c
  3547  004F8E  6E3C               	movwf	btemp+1,c
  3548  004F90  0060  F0EF  FFE6   	movff	btemp,postinc1
  3549  004F96  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  3550  004F9C  EC2D  F029         	call	_vfprintf	;wreg free
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;stkvar	_f @ sp[(-7)+0]
  3554  004FA0  0EFA               	movlw	250
  3555  004FA2  24E1               	addwf	fsr1l,w,c
  3556  004FA4  6ED9               	movwf	fsr2l,c
  3557  004FA6  0EFF               	movlw	255
  3558  004FA8  20E2               	addwfc	fsr1h,w,c
  3559  004FAA  6EDA               	movwf	fsr2h,c
  3560  004FAC  50DF               	movf	indf2,w,c
  3561  004FAE  6E46               	movwf	btemp+11,c
  3562                           
  3563                           ;stkvar	_s @ sp[(-7)+-2]
  3564  004FB0  0EF7               	movlw	-9
  3565  004FB2  50E3               	movf	plusw1,w,c
  3566  004FB4  2446               	addwf	btemp+11,w,c
  3567  004FB6  6ED9               	movwf	fsr2l,c
  3568  004FB8  6ADA               	clrf	fsr2h,c
  3569  004FBA  0E00               	movlw	0
  3570  004FBC  6EDF               	movwf	indf2,c
  3571                           
  3572                           ; BSR set to: 0
  3573                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 2, vargsize = 0
  3574  004FBE  0EF9               	movlw	249
  3575  004FC0  26E1               	addwf	fsr1l,f,c
  3576  004FC2  0EFF               	movlw	255
  3577  004FC4  22E2               	addwfc	fsr1h,f,c
  3578  004FC6  52E5               	movf	postdec1,f,c
  3579  004FC8  50E7               	movf	indf1,w,c
  3580  004FCA  5EE1               	subwf	fsr1l,f,c
  3581  004FCC  0E00               	movlw	0
  3582  004FCE  5AE2               	subwfb	fsr1h,f,c
  3583  004FD0  0012               	return		;funcret
  3584  004FD2                     __end_of_sprintf:
  3585                           	opt callstack 0
  3586                           
  3587 ;; *************** function _r_protocol *****************
  3588 ;; Defined at:
  3589 ;;		line 207 in file "gemsecs.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  r_link          1  [STACK] PTR enum E16164
  3592 ;;		 -> V(88), 
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  rxData          1  [STACK] unsigned char 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  1  [STACK] enum E16902
  3597 ;; Registers used:
  3598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3608 ;;Total ram usage:        0 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:    5
  3611 ;; This function calls:
  3612 ;;		_StartTimer
  3613 ;;		_TimerDone
  3614 ;;		_UART1_Read
  3615 ;;		_UART1_Write
  3616 ;;		_UART1_is_rx_ready
  3617 ;;		_WaitMs
  3618 ;;		_run_checksum
  3619 ;;		_secs_send
  3620 ;; This function is called by:
  3621 ;;		_main
  3622 ;; This function uses a reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text4
  3626  003402                     __ptext4:
  3627                           	opt callstack 0
  3628  003402                     _r_protocol:
  3629                           	opt callstack 0
  3630                           
  3631                           ; BSR set to: 0
  3632                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3633  003402  52E6               	movf	postinc1,f,c
  3634                           
  3635                           ;gemsecs.c: 207: LINK_STATES r_protocol(LINK_STATES *r_link);gemsecs.c: 208: {;gemsecs.c
      +                          : 209:  uint8_t rxData;;gemsecs.c: 210:  static uint8_t rxData_l = 0, retry = 3;;gemsecs
      +                          .c: 212:  switch (*r_link) {
  3636                           
  3637                           ;incstack = 0
  3638  003404  D155               	goto	l8155
  3639  003406                     l8043:
  3640                           
  3641                           ;gemsecs.c: 214:   if (UART1_is_rx_ready()) {
  3642  003406  ECAB  F030         	call	_UART1_is_rx_ready	;wreg free
  3643  00340A  503B               	movf	btemp,w,c
  3644  00340C  B4D8               	btfsc	status,2,c
  3645  00340E  D171               	goto	l8157
  3646                           
  3647                           ;gemsecs.c: 215:    rxData = UART1_Read();
  3648  003410  ECD4  F02C         	call	_UART1_Read	;wreg free
  3649                           
  3650                           ;stkvar	_rxData @ sp[(-1)+0]
  3651  003414  0EFF               	movlw	-1
  3652  003416  0060  F0EF  FFE3   	movff	btemp,plusw1
  3653                           
  3654                           ; BSR set to: 57
  3655                           ;gemsecs.c: 216:    if (rxData == 0x05) {
  3656                           ;stkvar	_rxData @ sp[(-1)+0]
  3657  00341C  0EFF               	movlw	-1
  3658  00341E  006F FF8C  F03B    	movff	plusw1,btemp
  3659  003424  0E05               	movlw	5
  3660  003426  183B               	xorwf	btemp,w,c
  3661  003428  A4D8               	btfss	status,2,c
  3662  00342A  D163               	goto	l8157
  3663                           
  3664                           ; BSR set to: 57
  3665                           ;gemsecs.c: 217:     V.error = LINK_ERROR_NONE;
  3666  00342C  0100               	movlb	0	; () banked
  3667  00342E  6BE9               	clrf	(_V+79)& (0+255),b
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;gemsecs.c: 218:     *r_link = LINK_STATE_ENQ;
  3671                           ;stkvar	_r_link @ sp[(-1)+-1]
  3672  003430  0EFE               	movlw	-2
  3673  003432  50E3               	movf	plusw1,w,c
  3674  003434  6ED9               	movwf	fsr2l,c
  3675  003436  6ADA               	clrf	fsr2h,c
  3676  003438  0E01               	movlw	1
  3677  00343A  D121               	goto	L10
  3678  00343C                     l1599:
  3679                           
  3680                           ;gemsecs.c: 223:   rxData_l = 0;
  3681  00343C  6A2C               	clrf	r_protocol@rxData_l,c
  3682                           
  3683                           ;gemsecs.c: 224:   UART1_Write(0x04);
  3684  00343E  0E04               	movlw	4
  3685  003440  6EE6               	movwf	postinc1,c
  3686  003442  EC96  F02C         	call	_UART1_Write	;wreg free
  3687                           
  3688                           ; BSR set to: 57
  3689                           ;gemsecs.c: 225:   StartTimer(TMR_T2, 2000);
  3690  003446  0ED0               	movlw	208
  3691  003448  6EE6               	movwf	postinc1,c
  3692  00344A  0E07               	movlw	7
  3693  00344C  6EE6               	movwf	postinc1,c
  3694  00344E  0E02               	movlw	2
  3695  003450  6EE6               	movwf	postinc1,c
  3696  003452  EC13  F02D         	call	_StartTimer	;wreg free
  3697                           
  3698                           ;gemsecs.c: 226:   *r_link = LINK_STATE_EOT;
  3699                           ;stkvar	_r_link @ sp[(-1)+-1]
  3700  003456  0EFE               	movlw	-2
  3701  003458  50E3               	movf	plusw1,w,c
  3702  00345A  6ED9               	movwf	fsr2l,c
  3703  00345C  6ADA               	clrf	fsr2h,c
  3704  00345E  0E02               	movlw	2
  3705  003460  6EDF               	movwf	indf2,c
  3706                           
  3707                           ;gemsecs.c: 228:   WaitMs(5);
  3708  003462  0E05               	movlw	5
  3709  003464  6EE6               	movwf	postinc1,c
  3710  003466  0E00               	movlw	0
  3711  003468  6EE6               	movwf	postinc1,c
  3712  00346A  ECBA  F02D         	call	_WaitMs	;wreg free
  3713                           
  3714                           ;gemsecs.c: 229:   H27[0].block.block.systemb = V.ticks;
  3715  00346E  C0DF  F154         	movff	_V+69,_H27+19
  3716  003472  C0E0  F155         	movff	_V+70,_H27+20
  3717  003476  C0E1  F156         	movff	_V+71,_H27+21
  3718  00347A  C0E2  F157         	movff	_V+72,_H27+22
  3719                           
  3720                           ;gemsecs.c: 230:   secs_send((uint8_t*) & H27[0], sizeof(header27), 1);
  3721  00347E  0E01               	movlw	1
  3722  003480  6EE6               	movwf	postinc1,c
  3723  003482  0E1E               	movlw	30
  3724  003484  6EE6               	movwf	postinc1,c
  3725  003486  0E41               	movlw	low _H27
  3726  003488  6EE6               	movwf	postinc1,c
  3727  00348A  0E01               	movlw	high _H27
  3728  00348C  6EE6               	movwf	postinc1,c
  3729  00348E  EC22  F023         	call	_secs_send	;wreg free
  3730                           
  3731                           ;gemsecs.c: 232:   break;
  3732  003492  D12F               	goto	l8157
  3733  003494                     l8065:
  3734                           
  3735                           ;gemsecs.c: 234:   if (TimerDone(TMR_T2)) {
  3736  003494  0E02               	movlw	2
  3737  003496  6EE6               	movwf	postinc1,c
  3738  003498  EC71  F02F         	call	_TimerDone	;wreg free
  3739  00349C  503B               	movf	btemp,w,c
  3740  00349E  B4D8               	btfsc	status,2,c
  3741  0034A0  D017               	goto	l8075
  3742                           
  3743                           ;gemsecs.c: 235:    if (!retry--) {
  3744  0034A2  065D               	decf	r_protocol@retry,f,c
  3745  0034A4  285D               	incf	r_protocol@retry,w,c
  3746  0034A6  A4D8               	btfss	status,2,c
  3747  0034A8  D00D               	goto	l8073
  3748                           
  3749                           ;gemsecs.c: 236:     V.error = LINK_ERROR_T2;
  3750  0034AA  0E02               	movlw	2
  3751  0034AC  0100               	movlb	0	; () banked
  3752  0034AE  6FE9               	movwf	(_V+79)& (0+255),b
  3753                           
  3754                           ;gemsecs.c: 237:     V.failed_receive = 1;
  3755  0034B0  51F1               	movf	(_V+87)& (0+255),w,b
  3756  0034B2  0BF0               	andlw	-16
  3757  0034B4  0901               	iorlw	1
  3758  0034B6  6FF1               	movwf	(_V+87)& (0+255),b
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;gemsecs.c: 238:     *r_link = LINK_STATE_NAK;
  3762                           ;stkvar	_r_link @ sp[(-1)+-1]
  3763  0034B8  0EFE               	movlw	-2
  3764  0034BA  50E3               	movf	plusw1,w,c
  3765  0034BC  6ED9               	movwf	fsr2l,c
  3766  0034BE  6ADA               	clrf	fsr2h,c
  3767  0034C0  0E05               	movlw	5
  3768  0034C2  D0DD               	goto	L10
  3769  0034C4                     l8073:
  3770                           
  3771                           ;gemsecs.c: 240:     *r_link = LINK_STATE_IDLE;
  3772                           ;stkvar	_r_link @ sp[(-1)+-1]
  3773  0034C4  0EFE               	movlw	-2
  3774  0034C6  50E3               	movf	plusw1,w,c
  3775  0034C8  6ED9               	movwf	fsr2l,c
  3776  0034CA  6ADA               	clrf	fsr2h,c
  3777  0034CC  0E00               	movlw	0
  3778  0034CE  D0D7               	goto	L10
  3779  0034D0                     l8075:
  3780                           
  3781                           ;gemsecs.c: 243:    if (UART1_is_rx_ready()) {
  3782  0034D0  ECAB  F030         	call	_UART1_is_rx_ready	;wreg free
  3783  0034D4  503B               	movf	btemp,w,c
  3784  0034D6  B4D8               	btfsc	status,2,c
  3785  0034D8  D10C               	goto	l8157
  3786                           
  3787                           ;gemsecs.c: 244:     rxData = UART1_Read();
  3788  0034DA  ECD4  F02C         	call	_UART1_Read	;wreg free
  3789                           
  3790                           ;stkvar	_rxData @ sp[(-1)+0]
  3791  0034DE  0EFF               	movlw	-1
  3792  0034E0  0060  F0EF  FFE3   	movff	btemp,plusw1
  3793                           
  3794                           ; BSR set to: 57
  3795                           ;gemsecs.c: 245:     if (rxData_l == 0) {
  3796  0034E6  502C               	movf	r_protocol@rxData_l,w,c
  3797  0034E8  A4D8               	btfss	status,2,c
  3798  0034EA  D00C               	goto	l8087
  3799                           
  3800                           ; BSR set to: 57
  3801                           ;gemsecs.c: 246:      r_block.length = rxData;
  3802                           ;stkvar	_rxData @ sp[(-1)+0]
  3803  0034EC  0EFF               	movlw	-1
  3804  0034EE  006F FF8C  F06C    	movff	plusw1,_r_block+12
  3805                           
  3806                           ; BSR set to: 57
  3807                           ;gemsecs.c: 247:      run_checksum(0, 1);
  3808  0034F4  0E01               	movlw	1
  3809  0034F6  6EE6               	movwf	postinc1,c
  3810  0034F8  0E00               	movlw	0
  3811  0034FA  6EE6               	movwf	postinc1,c
  3812  0034FC  EC4D  F02D         	call	_run_checksum	;wreg free
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;gemsecs.c: 248:      rxData_l++;
  3816  003500  2A2C               	incf	r_protocol@rxData_l,f,c
  3817                           
  3818                           ;gemsecs.c: 249:     } else {
  3819  003502  D0F7               	goto	l8157
  3820  003504                     l8087:
  3821                           
  3822                           ; BSR set to: 57
  3823                           ;gemsecs.c: 253:      if (rxData_l <= sizeof(block10))
  3824  003504  0E0B               	movlw	11
  3825  003506  602C               	cpfslt	r_protocol@rxData_l,c
  3826  003508  D00C               	goto	l8091
  3827                           
  3828                           ; BSR set to: 57
  3829                           ;gemsecs.c: 254:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  3830                           ;stkvar	_rxData @ sp[(-1)+0]
  3831  00350A  502C               	movf	r_protocol@rxData_l,w,c
  3832  00350C  0819               	sublw	low (_H10+25)
  3833  00350E  6ED9               	movwf	fsr2l,c
  3834  003510  0E00               	movlw	0
  3835  003512  A0D8               	btfss	status,0,c
  3836  003514  2AE8               	incf	wreg,f,c
  3837  003516  0801               	sublw	high (_H10+25)
  3838  003518  6EDA               	movwf	fsr2h,c
  3839  00351A  0EFF               	movlw	-1
  3840  00351C  006F FF8F FFDF     	movff	plusw1,indf2
  3841  003522                     l8091:
  3842                           
  3843                           ; BSR set to: 57
  3844                           ;gemsecs.c: 255:      if (rxData_l <= r_block.length)
  3845  003522  502C               	movf	r_protocol@rxData_l,w,c
  3846  003524  0100               	movlb	0	; () banked
  3847  003526  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  3848  003528  A0D8               	btfss	status,0,c
  3849  00352A  D00D               	goto	l8095
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;gemsecs.c: 256:       V.r_checksum = run_checksum(rxData, 0);
  3853  00352C  0E00               	movlw	0
  3854  00352E  6EE6               	movwf	postinc1,c
  3855                           
  3856                           ;stkvar	_rxData @ sp[(-2)+0]
  3857  003530  0EFE               	movlw	-2
  3858  003532  50E3               	movf	plusw1,w,c
  3859  003534  6EE6               	movwf	postinc1,c
  3860  003536  EC4D  F02D         	call	_run_checksum	;wreg free
  3861  00353A  0060  F0EC  F0EC   	movff	btemp,_V+82
  3862  003540  0060  F0F0  F0ED   	movff	btemp+1,_V+83
  3863  003546                     l8095:
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;gemsecs.c: 258:      if (rxData_l == r_block.length + 1)
  3867  003546  502C               	movf	r_protocol@rxData_l,w,c
  3868  003548  6E45               	movwf	btemp+10,c
  3869  00354A  6A46               	clrf	btemp+11,c
  3870  00354C  516C               	movf	(_r_block+12)& (0+255),w,b
  3871  00354E  6E43               	movwf	btemp+8,c
  3872  003550  6A44               	clrf	btemp+9,c
  3873  003552  0E01               	movlw	1
  3874  003554  2643               	addwf	btemp+8,f,c
  3875  003556  0E00               	movlw	0
  3876  003558  2244               	addwfc	btemp+9,f,c
  3877  00355A  5045               	movf	btemp+10,w,c
  3878  00355C  1843               	xorwf	btemp+8,w,c
  3879  00355E  E109               	bnz	l8099
  3880  003560  5046               	movf	btemp+11,w,c
  3881  003562  1844               	xorwf	btemp+9,w,c
  3882  003564  A4D8               	btfss	status,2,c
  3883  003566  D005               	goto	l8099
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;gemsecs.c: 259:       H10[1].checksum = (uint16_t) rxData << 8;
  3887                           ;stkvar	_rxData @ sp[(-1)+0]
  3888  003568  0EFF               	movlw	-1
  3889  00356A  50E3               	movf	plusw1,w,c
  3890  00356C  0101               	movlb	1	; () banked
  3891  00356E  6F0E               	movwf	(_H10+14)& (0+255),b
  3892  003570  6B0D               	clrf	(_H10+13)& (0+255),b
  3893  003572                     l8099:
  3894                           
  3895                           ;gemsecs.c: 260:      if (rxData_l == r_block.length + 2)
  3896  003572  502C               	movf	r_protocol@rxData_l,w,c
  3897  003574  6E45               	movwf	btemp+10,c
  3898  003576  6A46               	clrf	btemp+11,c
  3899  003578  0100               	movlb	0	; () banked
  3900  00357A  516C               	movf	(_r_block+12)& (0+255),w,b
  3901  00357C  6E43               	movwf	btemp+8,c
  3902  00357E  6A44               	clrf	btemp+9,c
  3903  003580  0E02               	movlw	2
  3904  003582  2643               	addwf	btemp+8,f,c
  3905  003584  0E00               	movlw	0
  3906  003586  2244               	addwfc	btemp+9,f,c
  3907  003588  5045               	movf	btemp+10,w,c
  3908  00358A  1843               	xorwf	btemp+8,w,c
  3909  00358C  E10A               	bnz	l8103
  3910  00358E  5046               	movf	btemp+11,w,c
  3911  003590  1844               	xorwf	btemp+9,w,c
  3912  003592  A4D8               	btfss	status,2,c
  3913  003594  D006               	goto	l8103
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;gemsecs.c: 261:       H10[1].checksum += rxData;
  3917                           ;stkvar	_rxData @ sp[(-1)+0]
  3918  003596  0EFF               	movlw	-1
  3919  003598  50E3               	movf	plusw1,w,c
  3920  00359A  0101               	movlb	1	; () banked
  3921  00359C  270D               	addwf	(_H10+13)& (0+255),f,b
  3922  00359E  0E00               	movlw	0
  3923  0035A0  230E               	addwfc	(_H10+14)& (0+255),f,b
  3924  0035A2                     l8103:
  3925                           
  3926                           ;gemsecs.c: 263:      rxData_l++;
  3927  0035A2  2A2C               	incf	r_protocol@rxData_l,f,c
  3928                           
  3929                           ;gemsecs.c: 264:      if (rxData_l > (r_block.length + 2)) {
  3930  0035A4  502C               	movf	r_protocol@rxData_l,w,c
  3931  0035A6  6E45               	movwf	btemp+10,c
  3932  0035A8  6A46               	clrf	btemp+11,c
  3933  0035AA  0100               	movlb	0	; () banked
  3934  0035AC  516C               	movf	(_r_block+12)& (0+255),w,b
  3935  0035AE  6E43               	movwf	btemp+8,c
  3936  0035B0  6A44               	clrf	btemp+9,c
  3937  0035B2  0E02               	movlw	2
  3938  0035B4  2643               	addwf	btemp+8,f,c
  3939  0035B6  0E00               	movlw	0
  3940  0035B8  2244               	addwfc	btemp+9,f,c
  3941  0035BA  5045               	movf	btemp+10,w,c
  3942  0035BC  5C43               	subwf	btemp+8,w,c
  3943  0035BE  5044               	movf	btemp+9,w,c
  3944  0035C0  0A80               	xorlw	128
  3945  0035C2  6E3B               	movwf	btemp,c
  3946  0035C4  5046               	movf	btemp+11,w,c
  3947  0035C6  0A80               	xorlw	128
  3948  0035C8  583B               	subwfb	btemp,w,c
  3949  0035CA  B0D8               	btfsc	status,0,c
  3950  0035CC  D092               	goto	l8157
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;gemsecs.c: 265:       if (V.r_checksum == H10[1].checksum) {
  3954  0035CE  0101               	movlb	1	; () banked
  3955  0035D0  510D               	movf	(_H10+13)& (0+255),w,b
  3956  0035D2  0100               	movlb	0	; () banked
  3957  0035D4  19EC               	xorwf	(_V+82)& (0+255),w,b
  3958  0035D6  E10E               	bnz	l8113
  3959  0035D8  0101               	movlb	1	; () banked
  3960  0035DA  510E               	movf	(_H10+14)& (0+255),w,b
  3961  0035DC  0100               	movlb	0	; () banked
  3962  0035DE  19ED               	xorwf	(_V+83)& (0+255),w,b
  3963  0035E0  A4D8               	btfss	status,2,c
  3964  0035E2  D008               	goto	l8113
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;gemsecs.c: 266:        *r_link = LINK_STATE_ACK;
  3968                           ;stkvar	_r_link @ sp[(-1)+-1]
  3969  0035E4  0EFE               	movlw	-2
  3970  0035E6  50E3               	movf	plusw1,w,c
  3971  0035E8  6ED9               	movwf	fsr2l,c
  3972  0035EA  6ADA               	clrf	fsr2h,c
  3973  0035EC  0E03               	movlw	3
  3974  0035EE  D047               	goto	L10
  3975  0035F0                     l8111:
  3976  0035F0  ECD4  F02C         	call	_UART1_Read	;wreg free
  3977  0035F4                     l8113:
  3978                           
  3979                           ;gemsecs.c: 268:        while (UART1_is_rx_ready())
  3980  0035F4  ECAB  F030         	call	_UART1_is_rx_ready	;wreg free
  3981  0035F8  503B               	movf	btemp,w,c
  3982  0035FA  A4D8               	btfss	status,2,c
  3983  0035FC  D7F9               	goto	l8111
  3984                           
  3985                           ;gemsecs.c: 270:        WaitMs(500);
  3986  0035FE  0EF4               	movlw	244
  3987  003600  6EE6               	movwf	postinc1,c
  3988  003602  0E01               	movlw	1
  3989  003604  6EE6               	movwf	postinc1,c
  3990  003606  ECBA  F02D         	call	_WaitMs	;wreg free
  3991                           
  3992                           ;gemsecs.c: 271:        V.error = LINK_ERROR_CHECKSUM;
  3993  00360A  0E05               	movlw	5
  3994  00360C  0100               	movlb	0	; () banked
  3995  00360E  6FE9               	movwf	(_V+79)& (0+255),b
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;gemsecs.c: 272:        V.failed_receive = 2;
  3999  003610  51F1               	movf	(_V+87)& (0+255),w,b
  4000  003612  0BF0               	andlw	-16
  4001  003614  0902               	iorlw	2
  4002  003616  D74F               	goto	L11
  4003  003618                     l8123:
  4004                           
  4005                           ;gemsecs.c: 281:   V.stream = H10[1].block.block.stream;
  4006  003618  0101               	movlb	1	; () banked
  4007  00361A  5116               	movf	(_H10+22)& (0+255),w,b
  4008  00361C  0B7F               	andlw	127
  4009  00361E  0100               	movlb	0	; () banked
  4010  003620  6FE7               	movwf	(_V+77)& (0+255),b
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;gemsecs.c: 282:   V.function = H10[1].block.block.function;
  4014  003622  C115  F0E8         	movff	_H10+21,_V+78
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;gemsecs.c: 283:   V.systemb = H10[1].block.block.systemb;
  4018  003626  C10F  F0E3         	movff	_H10+15,_V+73
  4019  00362A  C110  F0E4         	movff	_H10+16,_V+74
  4020  00362E  C111  F0E5         	movff	_H10+17,_V+75
  4021  003632  C112  F0E6         	movff	_H10+18,_V+76
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;gemsecs.c: 284:   V.rbit = H10[1].block.block.rbit;
  4025  003636  0101               	movlb	1	; () banked
  4026  003638  AF18               	btfss	(_H10+24)& (0+255),7,b
  4027  00363A  D003               	bra	u5145
  4028  00363C  0100               	movlb	0	; () banked
  4029  00363E  81F0               	bsf	(_V+86)& (0+255),0,b
  4030  003640  D002               	bra	u5147
  4031  003642                     u5145:
  4032  003642  0100               	movlb	0	; () banked
  4033  003644  91F0               	bcf	(_V+86)& (0+255),0,b
  4034  003646                     u5147:
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;gemsecs.c: 285:   V.wbit = H10[1].block.block.wbit;
  4038  003646  0101               	movlb	1	; () banked
  4039  003648  AF16               	btfss	(_H10+22)& (0+255),7,b
  4040  00364A  D003               	bra	u5155
  4041  00364C  0100               	movlb	0	; () banked
  4042  00364E  83F0               	bsf	(_V+86)& (0+255),1,b
  4043  003650  D002               	bra	u5157
  4044  003652                     u5155:
  4045  003652  0100               	movlb	0	; () banked
  4046  003654  93F0               	bcf	(_V+86)& (0+255),1,b
  4047  003656                     u5157:
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;gemsecs.c: 286:   V.ebit = H10[1].block.block.ebit;
  4051  003656  0101               	movlb	1	; () banked
  4052  003658  AF14               	btfss	(_H10+20)& (0+255),7,b
  4053  00365A  D003               	bra	u5165
  4054  00365C  0100               	movlb	0	; () banked
  4055  00365E  85F0               	bsf	(_V+86)& (0+255),2,b
  4056  003660  D002               	bra	u5167
  4057  003662                     u5165:
  4058  003662  0100               	movlb	0	; () banked
  4059  003664  95F0               	bcf	(_V+86)& (0+255),2,b
  4060  003666                     u5167:
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;gemsecs.c: 287:   UART1_Write(0x06);
  4064  003666  0E06               	movlw	6
  4065  003668  6EE6               	movwf	postinc1,c
  4066  00366A  EC96  F02C         	call	_UART1_Write	;wreg free
  4067                           
  4068                           ; BSR set to: 57
  4069                           ;gemsecs.c: 288:   V.failed_receive = 0;
  4070  00366E  0EF0               	movlw	-16
  4071  003670  0100               	movlb	0	; () banked
  4072  003672  17F1               	andwf	(_V+87)& (0+255),f,b
  4073                           
  4074                           ;gemsecs.c: 289:   *r_link = LINK_STATE_DONE;
  4075                           ;stkvar	_r_link @ sp[(-1)+-1]
  4076  003674  0EFE               	movlw	-2
  4077  003676  50E3               	movf	plusw1,w,c
  4078  003678  6ED9               	movwf	fsr2l,c
  4079  00367A  6ADA               	clrf	fsr2h,c
  4080  00367C  0E04               	movlw	4
  4081  00367E                     L10:
  4082  00367E  6EDF               	movwf	indf2,c
  4083                           
  4084                           ;gemsecs.c: 290:   break;
  4085  003680  D038               	goto	l8157
  4086  003682                     l8139:
  4087                           
  4088                           ;gemsecs.c: 292:   UART1_Write(0x15);
  4089  003682  0E15               	movlw	21
  4090  003684  6EE6               	movwf	postinc1,c
  4091  003686  EC96  F02C         	call	_UART1_Write	;wreg free
  4092                           
  4093                           ; BSR set to: 57
  4094                           ;gemsecs.c: 293:   *r_link = LINK_STATE_ERROR;
  4095                           ;stkvar	_r_link @ sp[(-1)+-1]
  4096  00368A  0EFE               	movlw	-2
  4097  00368C  50E3               	movf	plusw1,w,c
  4098  00368E  6ED9               	movwf	fsr2l,c
  4099  003690  6ADA               	clrf	fsr2h,c
  4100  003692  0E06               	movlw	6
  4101  003694  6EDF               	movwf	indf2,c
  4102                           
  4103                           ;gemsecs.c: 294:   while ((uart1RxCount)) {
  4104  003696  D002               	goto	l8145
  4105  003698                     l8143:
  4106                           
  4107                           ; BSR set to: 57
  4108                           ;gemsecs.c: 295:    UART1_Read();
  4109  003698  ECD4  F02C         	call	_UART1_Read	;wreg free
  4110  00369C                     l8145:
  4111                           
  4112                           ; BSR set to: 57
  4113                           ;gemsecs.c: 294:   while ((uart1RxCount)) {
  4114  00369C  5035               	movf	_uart1RxCount,w,c	;volatile
  4115  00369E  A4D8               	btfss	status,2,c
  4116  0036A0  D7FB               	goto	l8143
  4117                           
  4118                           ; BSR set to: 57
  4119                           ;gemsecs.c: 297:   retry = 3;
  4120  0036A2  0E03               	movlw	3
  4121  0036A4  6E5D               	movwf	r_protocol@retry,c
  4122                           
  4123                           ;gemsecs.c: 298:   break;
  4124  0036A6  D025               	goto	l8157
  4125  0036A8                     l8149:
  4126                           
  4127                           ;gemsecs.c: 302:   V.failed_receive = 0;
  4128  0036A8  0EF0               	movlw	-16
  4129  0036AA  0100               	movlb	0	; () banked
  4130  0036AC  17F1               	andwf	(_V+87)& (0+255),f,b
  4131  0036AE  D70A               	goto	l8073
  4132  0036B0                     l8155:
  4133                           
  4134                           ;stkvar	_r_link @ sp[(-1)+-1]
  4135  0036B0  0EFE               	movlw	-2
  4136  0036B2  50E3               	movf	plusw1,w,c
  4137  0036B4  6ED9               	movwf	fsr2l,c
  4138  0036B6  6ADA               	clrf	fsr2h,c
  4139  0036B8  50DF               	movf	indf2,w,c
  4140  0036BA  6E45               	movwf	btemp+10,c
  4141  0036BC  6A46               	clrf	btemp+11,c
  4142                           
  4143                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4144                           ; Switch size 1, requested type "simple"
  4145                           ; Number of cases is 1, Range of values is 0 to 0
  4146                           ; switch strategies available:
  4147                           ; Name         Instructions Cycles
  4148                           ; simple_byte            4     3 (average)
  4149                           ;	Chosen strategy is simple_byte
  4150  0036BE  5046               	movf	btemp+11,w,c
  4151  0036C0  0A00               	xorlw	0	; case 0
  4152  0036C2  A4D8               	btfss	status,2,c
  4153  0036C4  D6FF               	goto	l8073
  4154                           
  4155                           ; Switch size 1, requested type "simple"
  4156                           ; Number of cases is 7, Range of values is 0 to 6
  4157                           ; switch strategies available:
  4158                           ; Name         Instructions Cycles
  4159                           ; simple_byte           22    12 (average)
  4160                           ;	Chosen strategy is simple_byte
  4161  0036C6  5045               	movf	btemp+10,w,c
  4162  0036C8  0A00               	xorlw	0	; case 0
  4163  0036CA  B4D8               	btfsc	status,2,c
  4164  0036CC  D69C               	goto	l8043
  4165  0036CE  0A01               	xorlw	1	; case 1
  4166  0036D0  B4D8               	btfsc	status,2,c
  4167  0036D2  D6B4               	goto	l1599
  4168  0036D4  0A03               	xorlw	3	; case 2
  4169  0036D6  B4D8               	btfsc	status,2,c
  4170  0036D8  D6DD               	goto	l8065
  4171  0036DA  0A01               	xorlw	1	; case 3
  4172  0036DC  B4D8               	btfsc	status,2,c
  4173  0036DE  D79C               	goto	l8123
  4174  0036E0  0A07               	xorlw	7	; case 4
  4175  0036E2  B4D8               	btfsc	status,2,c
  4176  0036E4  D7E1               	goto	l8149
  4177  0036E6  0A01               	xorlw	1	; case 5
  4178  0036E8  B4D8               	btfsc	status,2,c
  4179  0036EA  D7CB               	goto	l8139
  4180  0036EC  0A03               	xorlw	3	; case 6
  4181  0036EE  A4D8               	btfss	status,2,c
  4182  0036F0  D6E9               	goto	l8073
  4183  0036F2                     l8157:
  4184                           
  4185                           ;gemsecs.c: 309:  return *r_link;
  4186                           ;stkvar	_r_link @ sp[(-1)+-1]
  4187  0036F2  0EFE               	movlw	-2
  4188  0036F4  50E3               	movf	plusw1,w,c
  4189  0036F6  6ED9               	movwf	fsr2l,c
  4190  0036F8  6ADA               	clrf	fsr2h,c
  4191  0036FA  50DF               	movf	indf2,w,c
  4192  0036FC  6E3B               	movwf	btemp,c
  4193                           
  4194                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4195  0036FE  52E5               	movf	postdec1,f,c
  4196  003700  52E5               	movf	postdec1,f,c
  4197  003702  0012               	return		;funcret
  4198  003704                     __end_of_r_protocol:
  4199                           	opt callstack 0
  4200                           
  4201 ;; *************** function _secs_send *****************
  4202 ;; Defined at:
  4203 ;;		line 419 in file "gemsecs.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;  byte_block      2  [STACK] PTR unsigned char 
  4206 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  4207 ;;		 -> H14(17), H13(16), H12(30), H10(65), 
  4208 ;;  length          1  [STACK] unsigned char 
  4209 ;;  fake            1  [STACK] _Bool 
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;  k               2  [STACK] PTR unsigned char 
  4212 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  4213 ;;		 -> H14(17), H13(16), H12(30), H10(65), 
  4214 ;;  checksum        2  [STACK] unsigned short 
  4215 ;;  i               1  [STACK] unsigned char 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  1  [STACK] _Bool 
  4218 ;; Registers used:
  4219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4229 ;;Total ram usage:        0 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    4
  4232 ;; This function calls:
  4233 ;;		_UART1_Write
  4234 ;;		_UART1_is_tx_ready
  4235 ;;		_UART1_put_buffer
  4236 ;;		_block_checksum
  4237 ;; This function is called by:
  4238 ;;		_r_protocol
  4239 ;;		_t_protocol
  4240 ;; This function uses a reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text5
  4244  004644                     __ptext5:
  4245                           	opt callstack 0
  4246  004644                     _secs_send:
  4247                           	opt callstack 0
  4248                           
  4249                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4250  004644  0E05               	movlw	5
  4251  004646  26E1               	addwf	fsr1l,f,c
  4252  004648  0E00               	movlw	0
  4253  00464A  22E2               	addwfc	fsr1h,f,c
  4254                           
  4255                           ;gemsecs.c: 419: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake);gemsec
      +                          s.c: 420: {;gemsecs.c: 421:  uint8_t i, *k;;gemsecs.c: 422:  uint16_t checksum;;gemsecs.
      +                          c: 424:  k = (uint8_t *) byte_block;
  4256                           ;stkvar	_byte_block @ sp[(-5)+-2]
  4257                           
  4258                           ;incstack = 0
  4259  00464C  0EF9               	movlw	-7
  4260  00464E  006F FF8C  F045    	movff	plusw1,btemp+10
  4261  004654  0EFA               	movlw	-6
  4262  004656  006F FF8C  F046    	movff	plusw1,btemp+11
  4263                           
  4264                           ;stkvar	_k @ sp[(-5)+0]
  4265  00465C  0EFC               	movlw	-4
  4266  00465E  0060  F11B  FFE3   	movff	btemp+11,plusw1
  4267  004664  0EFB               	movlw	-5
  4268  004666  0060  F117  FFE3   	movff	btemp+10,plusw1
  4269                           
  4270                           ;gemsecs.c: 426:  ++V.ticks;
  4271  00466C  0E01               	movlw	1
  4272  00466E  0100               	movlb	0	; () banked
  4273  004670  27DF               	addwf	(_V+69)& (0+255),f,b
  4274  004672  0E00               	movlw	0
  4275  004674  23E0               	addwfc	(_V+70)& (0+255),f,b
  4276  004676  23E1               	addwfc	(_V+71)& (0+255),f,b
  4277  004678  23E2               	addwfc	(_V+72)& (0+255),f,b
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;gemsecs.c: 427:  V.error = LINK_ERROR_NONE;
  4281  00467A  6BE9               	clrf	(_V+79)& (0+255),b
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;gemsecs.c: 428:  if ((length - 3) != k[length - 1]) {
  4285                           ;stkvar	_length @ sp[(-5)+-3]
  4286  00467C  0EF8               	movlw	-8
  4287  00467E  50E3               	movf	plusw1,w,c
  4288  004680  6E45               	movwf	btemp+10,c
  4289  004682  6A46               	clrf	btemp+11,c
  4290                           
  4291                           ;stkvar	_k @ sp[(-5)+0]
  4292  004684  0EFB               	movlw	-5
  4293  004686  50E3               	movf	plusw1,w,c
  4294  004688  2645               	addwf	btemp+10,f,c
  4295  00468A  0EFC               	movlw	-4
  4296  00468C  50E3               	movf	plusw1,w,c
  4297  00468E  2246               	addwfc	btemp+11,f,c
  4298  004690  0EFF               	movlw	255
  4299  004692  2445               	addwf	btemp+10,w,c
  4300  004694  6ED9               	movwf	fsr2l,c
  4301  004696  0EFF               	movlw	255
  4302  004698  2046               	addwfc	btemp+11,w,c
  4303  00469A  6EDA               	movwf	fsr2h,c
  4304  00469C  50DF               	movf	indf2,w,c
  4305  00469E  6E45               	movwf	btemp+10,c
  4306  0046A0  6A46               	clrf	btemp+11,c
  4307  0046A2  0EFD               	movlw	253
  4308  0046A4  6E43               	movwf	btemp+8,c
  4309  0046A6  0EFF               	movlw	255
  4310  0046A8  6E44               	movwf	btemp+9,c
  4311                           
  4312                           ;stkvar	_length @ sp[(-5)+-3]
  4313  0046AA  0EF8               	movlw	-8
  4314  0046AC  50E3               	movf	plusw1,w,c
  4315  0046AE  6E41               	movwf	btemp+6,c
  4316  0046B0  6A42               	clrf	btemp+7,c
  4317  0046B2  5043               	movf	btemp+8,w,c
  4318  0046B4  2641               	addwf	btemp+6,f,c
  4319  0046B6  5044               	movf	btemp+9,w,c
  4320  0046B8  2242               	addwfc	btemp+7,f,c
  4321  0046BA  5045               	movf	btemp+10,w,c
  4322  0046BC  1841               	xorwf	btemp+6,w,c
  4323  0046BE  E104               	bnz	u4950
  4324  0046C0  5046               	movf	btemp+11,w,c
  4325  0046C2  1842               	xorwf	btemp+7,w,c
  4326  0046C4  B4D8               	btfsc	status,2,c
  4327  0046C6  D003               	goto	l7899
  4328  0046C8                     u4950:
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;gemsecs.c: 429:   V.error = LINK_ERROR_SEND;
  4332  0046C8  0E08               	movlw	8
  4333  0046CA  6FE9               	movwf	(_V+79)& (0+255),b
  4334  0046CC  D098               	goto	l1671
  4335  0046CE                     l7899:
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;gemsecs.c: 438:  checksum = block_checksum(&k[2], length - 3);
  4339  0046CE  0EFD               	movlw	253
  4340  0046D0  6E45               	movwf	btemp+10,c
  4341  0046D2  0EFF               	movlw	255
  4342  0046D4  6E46               	movwf	btemp+11,c
  4343                           
  4344                           ;stkvar	_length @ sp[(-5)+-3]
  4345  0046D6  0EF8               	movlw	-8
  4346  0046D8  50E3               	movf	plusw1,w,c
  4347  0046DA  6E43               	movwf	btemp+8,c
  4348  0046DC  6A44               	clrf	btemp+9,c
  4349  0046DE  5045               	movf	btemp+10,w,c
  4350  0046E0  2643               	addwf	btemp+8,f,c
  4351  0046E2  5046               	movf	btemp+11,w,c
  4352  0046E4  2244               	addwfc	btemp+9,f,c
  4353  0046E6  0060  F10F  FFE6   	movff	btemp+8,postinc1
  4354  0046EC  0060  F113  FFE6   	movff	btemp+9,postinc1
  4355                           
  4356                           ;stkvar	_k @ sp[(-7)+0]
  4357  0046F2  0EF9               	movlw	-7
  4358  0046F4  50E3               	movf	plusw1,w,c
  4359  0046F6  0F02               	addlw	2
  4360  0046F8  6E45               	movwf	btemp+10,c
  4361  0046FA  0EFA               	movlw	-6
  4362  0046FC  006F FF8C  F046    	movff	plusw1,btemp+11
  4363  004702  0E00               	movlw	0
  4364  004704  2246               	addwfc	btemp+11,f,c
  4365  004706  0060  F117  FFE6   	movff	btemp+10,postinc1
  4366  00470C  0060  F11B  FFE6   	movff	btemp+11,postinc1
  4367  004712  EC51  F026         	call	_block_checksum	;wreg free
  4368                           
  4369                           ;stkvar	_checksum @ sp[(-5)+2]
  4370  004716  0EFD               	movlw	-3
  4371  004718  0060  F0EF  FFE3   	movff	btemp,plusw1
  4372  00471E  0EFE               	movlw	-2
  4373  004720  0060  F0F3  FFE3   	movff	btemp+1,plusw1
  4374                           
  4375                           ;gemsecs.c: 439:  k[0] = checksum & 0xff;
  4376                           ;stkvar	_checksum @ sp[(-5)+2]
  4377                           ;stkvar	_k @ sp[(-5)+0]
  4378  004726  0EFB               	movlw	-5
  4379  004728  006F FF8F FFD9     	movff	plusw1,fsr2l
  4380  00472E  0EFC               	movlw	-4
  4381  004730  006F FF8F FFDA     	movff	plusw1,fsr2h
  4382  004736  0EFD               	movlw	-3
  4383  004738  006F FF8F FFDF     	movff	plusw1,indf2
  4384                           
  4385                           ;gemsecs.c: 440:  k[1] = (checksum >> 8)&0xff;
  4386                           ;stkvar	_checksum @ sp[(-5)+2]
  4387  00473E  0EFE               	movlw	254
  4388  004740  24E1               	addwf	fsr1l,w,c
  4389  004742  6ED9               	movwf	fsr2l,c
  4390  004744  0EFF               	movlw	255
  4391  004746  20E2               	addwfc	fsr1h,w,c
  4392  004748  6EDA               	movwf	fsr2h,c
  4393                           
  4394                           ;stkvar	_k @ sp[(-5)+0]
  4395  00474A  0EFB               	movlw	-5
  4396  00474C  006F FF8C  F045    	movff	plusw1,btemp+10
  4397  004752  0EFC               	movlw	-4
  4398  004754  006F FF8C  F046    	movff	plusw1,btemp+11
  4399  00475A  0E01               	movlw	1
  4400  00475C  2445               	addwf	btemp+10,w,c
  4401  00475E  6EE9               	movwf	fsr0l,c
  4402  004760  0E00               	movlw	0
  4403  004762  2046               	addwfc	btemp+11,w,c
  4404  004764  6EEA               	movwf	fsr0h,c
  4405  004766  006F FF7F FFEF     	movff	indf2,indf0
  4406                           
  4407                           ;gemsecs.c: 441:  V.t_checksum = checksum;
  4408                           ;stkvar	_checksum @ sp[(-5)+2]
  4409  00476C  0EFD               	movlw	-3
  4410  00476E  006F FF8C  F0EE    	movff	plusw1,_V+84
  4411  004774  0EFE               	movlw	-2
  4412  004776  006F FF8C  F0EF    	movff	plusw1,_V+85
  4413  00477C                     l7907:
  4414  00477C  ECA3  F030         	call	_UART1_is_tx_ready	;wreg free
  4415  004780  0E3F               	movlw	63
  4416  004782  643B               	cpfsgt	btemp,c
  4417  004784  D7FB               	goto	l7907
  4418                           
  4419                           ;gemsecs.c: 444:  for (i = length; i > 0; i--) {
  4420                           ;stkvar	_length @ sp[(-5)+-3]
  4421                           ;stkvar	_i @ sp[(-5)+4]
  4422  004786  0EF8               	movlw	-8
  4423  004788  006F FF8C  F03B    	movff	plusw1,btemp
  4424  00478E  0EFF               	movlw	-1
  4425  004790  0060  F0EF  FFE3   	movff	btemp,plusw1
  4426  004796                     l7911:
  4427                           
  4428                           ;stkvar	_i @ sp[(-5)+4]
  4429  004796  0EFF               	movlw	-1
  4430  004798  50E3               	movf	plusw1,w,c
  4431  00479A  B4D8               	btfsc	status,2,c
  4432  00479C  D030               	goto	l1671
  4433                           
  4434                           ;gemsecs.c: 445:   if (fake) {
  4435                           ;stkvar	_fake @ sp[(-5)+-4]
  4436  00479E  0EF7               	movlw	-9
  4437  0047A0  50E3               	movf	plusw1,w,c
  4438  0047A2  B4D8               	btfsc	status,2,c
  4439  0047A4  D015               	goto	l7919
  4440                           
  4441                           ;gemsecs.c: 446:    UART1_put_buffer(k[i - 1]);
  4442                           ;stkvar	_i @ sp[(-5)+4]
  4443  0047A6  0EFF               	movlw	-1
  4444  0047A8  50E3               	movf	plusw1,w,c
  4445  0047AA  6E45               	movwf	btemp+10,c
  4446  0047AC  6A46               	clrf	btemp+11,c
  4447                           
  4448                           ;stkvar	_k @ sp[(-5)+0]
  4449  0047AE  0EFB               	movlw	-5
  4450  0047B0  50E3               	movf	plusw1,w,c
  4451  0047B2  2645               	addwf	btemp+10,f,c
  4452  0047B4  0EFC               	movlw	-4
  4453  0047B6  50E3               	movf	plusw1,w,c
  4454  0047B8  2246               	addwfc	btemp+11,f,c
  4455  0047BA  0EFF               	movlw	255
  4456  0047BC  2445               	addwf	btemp+10,w,c
  4457  0047BE  6ED9               	movwf	fsr2l,c
  4458  0047C0  0EFF               	movlw	255
  4459  0047C2  2046               	addwfc	btemp+11,w,c
  4460  0047C4  6EDA               	movwf	fsr2h,c
  4461  0047C6  50DF               	movf	indf2,w,c
  4462  0047C8  6EE6               	movwf	postinc1,c
  4463  0047CA  ECA5  F02D         	call	_UART1_put_buffer	;wreg free
  4464                           
  4465                           ;gemsecs.c: 447:   } else {
  4466  0047CE  D014               	goto	l7921
  4467  0047D0                     l7919:
  4468                           
  4469                           ;gemsecs.c: 449:    UART1_Write(k[i - 1]);
  4470                           ;stkvar	_i @ sp[(-5)+4]
  4471  0047D0  0EFF               	movlw	-1
  4472  0047D2  50E3               	movf	plusw1,w,c
  4473  0047D4  6E45               	movwf	btemp+10,c
  4474  0047D6  6A46               	clrf	btemp+11,c
  4475                           
  4476                           ;stkvar	_k @ sp[(-5)+0]
  4477  0047D8  0EFB               	movlw	-5
  4478  0047DA  50E3               	movf	plusw1,w,c
  4479  0047DC  2645               	addwf	btemp+10,f,c
  4480  0047DE  0EFC               	movlw	-4
  4481  0047E0  50E3               	movf	plusw1,w,c
  4482  0047E2  2246               	addwfc	btemp+11,f,c
  4483  0047E4  0EFF               	movlw	255
  4484  0047E6  2445               	addwf	btemp+10,w,c
  4485  0047E8  6ED9               	movwf	fsr2l,c
  4486  0047EA  0EFF               	movlw	255
  4487  0047EC  2046               	addwfc	btemp+11,w,c
  4488  0047EE  6EDA               	movwf	fsr2h,c
  4489  0047F0  50DF               	movf	indf2,w,c
  4490  0047F2  6EE6               	movwf	postinc1,c
  4491  0047F4  EC96  F02C         	call	_UART1_Write	;wreg free
  4492  0047F8                     l7921:
  4493                           
  4494                           ; BSR set to: 57
  4495                           ;gemsecs.c: 451:  }
  4496                           ;stkvar	_i @ sp[(-5)+4]
  4497  0047F8  0EFF               	movlw	-1
  4498  0047FA  06E3               	decf	plusw1,f,c
  4499  0047FC  D7CC               	goto	l7911
  4500  0047FE                     l1671:
  4501                           
  4502                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  4503  0047FE  0EF7               	movlw	247
  4504  004800  26E1               	addwf	fsr1l,f,c
  4505  004802  0EFF               	movlw	255
  4506  004804  22E2               	addwfc	fsr1h,f,c
  4507  004806  0012               	return		;funcret
  4508  004808                     __end_of_secs_send:
  4509                           	opt callstack 0
  4510                           
  4511 ;; *************** function _block_checksum *****************
  4512 ;; Defined at:
  4513 ;;		line 18 in file "gemsecs.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  byte_block      2  [STACK] PTR unsigned char 
  4516 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  4517 ;;		 -> H14(17), H13(16), H12(30), H10(65), 
  4518 ;;  byte_count      2  [STACK] unsigned short 
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;  i               2  [STACK] unsigned short 
  4521 ;;  sum             2  [STACK] unsigned short 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  2  [STACK] unsigned short 
  4524 ;; Registers used:
  4525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  4526 ;; Tracked objects:
  4527 ;;		On entry : 3F/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4535 ;;Total ram usage:        0 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; Hardware stack levels required when called:    3
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		_secs_send
  4542 ;; This function uses a reentrant model
  4543 ;;
  4544                           
  4545                           	psect	text6
  4546  004CA2                     __ptext6:
  4547                           	opt callstack 0
  4548  004CA2                     _block_checksum:
  4549                           	opt callstack 0
  4550                           
  4551                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4552  004CA2  52E6               	movf	postinc1,f,c
  4553  004CA4  52E6               	movf	postinc1,f,c
  4554  004CA6  52E6               	movf	postinc1,f,c
  4555  004CA8  52E6               	movf	postinc1,f,c
  4556                           
  4557                           ;gemsecs.c: 18: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 19: {;gemsecs.c: 20:  uint16_t sum = 0, i;
  4558                           ;stkvar	_sum @ sp[(-4)+2]
  4559                           
  4560                           ;incstack = 0
  4561  004CAA  0EFE               	movlw	-2
  4562  004CAC  6AE3               	clrf	plusw1,c
  4563  004CAE  0EFF               	movlw	-1
  4564  004CB0  6AE3               	clrf	plusw1,c
  4565                           
  4566                           ;gemsecs.c: 22:  for (i = 0; i < byte_count; i++) {
  4567                           ;stkvar	_i @ sp[(-4)+0]
  4568  004CB2  0EFC               	movlw	-4
  4569  004CB4  6AE3               	clrf	plusw1,c
  4570  004CB6  0EFD               	movlw	-3
  4571  004CB8  6AE3               	clrf	plusw1,c
  4572  004CBA  D039               	goto	l7807
  4573  004CBC                     l7803:
  4574                           
  4575                           ;gemsecs.c: 23:   sum += byte_block[i];
  4576                           ;stkvar	_i @ sp[(-4)+0]
  4577  004CBC  0EFC               	movlw	-4
  4578  004CBE  006F FF8C  F045    	movff	plusw1,btemp+10
  4579  004CC4  0EFD               	movlw	-3
  4580  004CC6  006F FF8C  F046    	movff	plusw1,btemp+11
  4581                           
  4582                           ;stkvar	_byte_block @ sp[(-4)+-2]
  4583  004CCC  0EFA               	movlw	-6
  4584  004CCE  006F FF8C  F043    	movff	plusw1,btemp+8
  4585  004CD4  0EFB               	movlw	-5
  4586  004CD6  006F FF8C  F044    	movff	plusw1,btemp+9
  4587  004CDC  5045               	movf	btemp+10,w,c
  4588  004CDE  2443               	addwf	btemp+8,w,c
  4589  004CE0  6ED9               	movwf	fsr2l,c
  4590  004CE2  5046               	movf	btemp+11,w,c
  4591  004CE4  2044               	addwfc	btemp+9,w,c
  4592  004CE6  6EDA               	movwf	fsr2h,c
  4593  004CE8  50DF               	movf	indf2,w,c
  4594  004CEA  6E46               	movwf	btemp+11,c
  4595                           
  4596                           ;stkvar	_sum @ sp[(-4)+2]
  4597  004CEC  0EFE               	movlw	-2
  4598  004CEE  50E3               	movf	plusw1,w,c
  4599  004CF0  2446               	addwf	btemp+11,w,c
  4600  004CF2  6E3B               	movwf	btemp,c
  4601  004CF4  0EFE               	movlw	-2
  4602  004CF6  0060  F0EF  FFE3   	movff	btemp,plusw1
  4603  004CFC  6A3B               	clrf	btemp,c
  4604  004CFE  0EFF               	movlw	-1
  4605  004D00  50E3               	movf	plusw1,w,c
  4606  004D02  223B               	addwfc	btemp,f,c
  4607  004D04  0EFF               	movlw	-1
  4608  004D06  0060  F0EF  FFE3   	movff	btemp,plusw1
  4609                           
  4610                           ;gemsecs.c: 24:  }
  4611                           ;stkvar	_i @ sp[(-4)+0]
  4612  004D0C  0EFC               	movlw	-4
  4613  004D0E  50E3               	movf	plusw1,w,c
  4614  004D10  0F01               	addlw	1
  4615  004D12  6E3B               	movwf	btemp,c
  4616  004D14  0EFC               	movlw	-4
  4617  004D16  0060  F0EF  FFE3   	movff	btemp,plusw1
  4618  004D1C  6A3B               	clrf	btemp,c
  4619  004D1E  0EFD               	movlw	-3
  4620  004D20  50E3               	movf	plusw1,w,c
  4621  004D22  203B               	addwfc	btemp,w,c
  4622  004D24  6E3B               	movwf	btemp,c
  4623  004D26  0EFD               	movlw	-3
  4624  004D28  0060  F0EF  FFE3   	movff	btemp,plusw1
  4625  004D2E                     l7807:
  4626                           
  4627                           ;stkvar	_byte_count @ sp[(-4)+-4]
  4628  004D2E  0EF8               	movlw	-8
  4629  004D30  006F FF8C  F045    	movff	plusw1,btemp+10
  4630  004D36  0EF9               	movlw	-7
  4631  004D38  006F FF8C  F046    	movff	plusw1,btemp+11
  4632                           
  4633                           ;stkvar	_i @ sp[(-4)+0]
  4634  004D3E  0EFC               	movlw	-4
  4635  004D40  006F FF8C  F043    	movff	plusw1,btemp+8
  4636  004D46  0EFD               	movlw	-3
  4637  004D48  006F FF8C  F044    	movff	plusw1,btemp+9
  4638  004D4E  5045               	movf	btemp+10,w,c
  4639  004D50  5C43               	subwf	btemp+8,w,c
  4640  004D52  5046               	movf	btemp+11,w,c
  4641  004D54  5844               	subwfb	btemp+9,w,c
  4642  004D56  A0D8               	btfss	status,0,c
  4643  004D58  D7B1               	goto	l7803
  4644                           
  4645                           ;gemsecs.c: 25:  return sum;
  4646                           ;stkvar	_sum @ sp[(-4)+2]
  4647  004D5A  0EFE               	movlw	-2
  4648  004D5C  006F FF8C  F03B    	movff	plusw1,btemp
  4649  004D62  0EFF               	movlw	-1
  4650  004D64  006F FF8C  F03C    	movff	plusw1,btemp+1
  4651                           
  4652                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  4653  004D6A  0EF8               	movlw	248
  4654  004D6C  26E1               	addwf	fsr1l,f,c
  4655  004D6E  0EFF               	movlw	255
  4656  004D70  22E2               	addwfc	fsr1h,f,c
  4657  004D72  0012               	return		;funcret
  4658  004D74                     __end_of_block_checksum:
  4659                           	opt callstack 0
  4660                           
  4661 ;; *************** function _UART1_put_buffer *****************
  4662 ;; Defined at:
  4663 ;;		line 250 in file "mcc_generated_files/uart1.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  bufData         1  [STACK] unsigned char 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;		None
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  1  [STACK] void 
  4670 ;; Registers used:
  4671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 3F/39
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4681 ;;Total ram usage:        0 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; Hardware stack levels required when called:    3
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_main
  4688 ;;		_t_protocol
  4689 ;;		_secs_send
  4690 ;; This function uses a reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text7
  4694  005B4A                     __ptext7:
  4695                           	opt callstack 0
  4696  005B4A                     _UART1_put_buffer:
  4697                           	opt callstack 25
  4698                           
  4699                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  4700                           
  4701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4702                           ;incstack = 0
  4703  005B4A  0139               	movlb	57	; () banked
  4704  005B4C  9793               	bcf	147,3,b	;volatile
  4705                           
  4706                           ; BSR set to: 57
  4707                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  4708                           ;stkvar	_bufData @ sp[(0)+-1]
  4709  005B4E  0E40               	movlw	low _uart1RxBuffer
  4710  005B50  2437               	addwf	_uart1RxHead,w,c	;volatile
  4711  005B52  6ED9               	movwf	fsr2l,c
  4712  005B54  6ADA               	clrf	fsr2h,c
  4713  005B56  0E02               	movlw	high _uart1RxBuffer
  4714  005B58  22DA               	addwfc	fsr2h,f,c
  4715  005B5A  0EFF               	movlw	-1
  4716  005B5C  006F FF8F FFDF     	movff	plusw1,indf2
  4717                           
  4718                           ; BSR set to: 57
  4719  005B62  2A37               	incf	_uart1RxHead,f,c	;volatile
  4720                           
  4721                           ; BSR set to: 57
  4722                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  4723  005B64  0E3F               	movlw	63
  4724  005B66  6437               	cpfsgt	_uart1RxHead,c
  4725  005B68  D001               	goto	l5677
  4726                           
  4727                           ; BSR set to: 57
  4728                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  4729  005B6A  6A37               	clrf	_uart1RxHead,c	;volatile
  4730  005B6C                     l5677:
  4731                           
  4732                           ; BSR set to: 57
  4733                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  4734  005B6C  2A35               	incf	_uart1RxCount,f,c	;volatile
  4735                           
  4736                           ; BSR set to: 57
  4737                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  4738  005B6E  8793               	bsf	147,3,b	;volatile
  4739                           
  4740                           ; BSR set to: 57
  4741                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  4742  005B70  52E5               	movf	postdec1,f,c
  4743  005B72  0012               	return		;funcret
  4744  005B74                     __end_of_UART1_put_buffer:
  4745                           	opt callstack 0
  4746                           
  4747 ;; *************** function _UART1_is_tx_ready *****************
  4748 ;; Defined at:
  4749 ;;		line 151 in file "mcc_generated_files/uart1.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;		None
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;		None
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  1  [STACK] unsigned char 
  4756 ;; Registers used:
  4757 ;;		btemp
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4767 ;;Total ram usage:        0 bytes
  4768 ;; Hardware stack levels used:    1
  4769 ;; Hardware stack levels required when called:    3
  4770 ;; This function calls:
  4771 ;;		Nothing
  4772 ;; This function is called by:
  4773 ;;		_secs_send
  4774 ;; This function uses a reentrant model
  4775 ;;
  4776                           
  4777                           	psect	text8
  4778  006146                     __ptext8:
  4779                           	opt callstack 0
  4780  006146                     _UART1_is_tx_ready:
  4781                           	opt callstack 25
  4782                           
  4783                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  4784                           
  4785                           ; BSR set to: 57
  4786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4787                           ;incstack = 0
  4788  006146  0060  F0E0  F03B   	movff	_uart1TxBufferRemaining,btemp	;volatile
  4789                           
  4790                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4791  00614C  0012               	return		;funcret
  4792  00614E                     __end_of_UART1_is_tx_ready:
  4793                           	opt callstack 0
  4794                           
  4795 ;; *************** function _UART1_Write *****************
  4796 ;; Defined at:
  4797 ;;		line 179 in file "mcc_generated_files/uart1.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  txData          1  [STACK] unsigned char 
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;		None
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1  [STACK] void 
  4804 ;; Registers used:
  4805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 3F/39
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4815 ;;Total ram usage:        0 bytes
  4816 ;; Hardware stack levels used:    1
  4817 ;; Hardware stack levels required when called:    3
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		_r_protocol
  4822 ;;		_t_protocol
  4823 ;;		_secs_send
  4824 ;; This function uses a reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text9
  4828  00592C                     __ptext9:
  4829                           	opt callstack 0
  4830  00592C                     _UART1_Write:
  4831                           	opt callstack 25
  4832                           
  4833                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4834                           
  4835                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4836                           
  4837                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4838                           ;incstack = 0
  4839  00592C  5038               	movf	_uart1TxBufferRemaining,w,c	;volatile
  4840  00592E  B4D8               	btfsc	status,2,c
  4841  005930  D7FD               	goto	_UART1_Write
  4842                           
  4843                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  4844  005932  0139               	movlb	57	; () banked
  4845  005934  B993               	btfsc	147,4,b	;volatile
  4846  005936  D005               	goto	l579
  4847                           
  4848                           ; BSR set to: 57
  4849                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  4850                           ;stkvar	_txData @ sp[(0)+-1]
  4851  005938  0EFF               	movlw	-1
  4852  00593A  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  4853                           
  4854                           ;mcc_generated_files/uart1.c: 186:  } else {
  4855  005940  D011               	goto	l5665
  4856  005942                     l579:
  4857                           
  4858                           ; BSR set to: 57
  4859                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  4860  005942  9993               	bcf	147,4,b	;volatile
  4861                           
  4862                           ; BSR set to: 57
  4863                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  4864                           ;stkvar	_txData @ sp[(0)+-1]
  4865  005944  0E80               	movlw	low _uart1TxBuffer
  4866  005946  243A               	addwf	_uart1TxHead,w,c	;volatile
  4867  005948  6ED9               	movwf	fsr2l,c
  4868  00594A  6ADA               	clrf	fsr2h,c
  4869  00594C  0E02               	movlw	high _uart1TxBuffer
  4870  00594E  22DA               	addwfc	fsr2h,f,c
  4871  005950  0EFF               	movlw	-1
  4872  005952  006F FF8F FFDF     	movff	plusw1,indf2
  4873                           
  4874                           ; BSR set to: 57
  4875  005958  2A3A               	incf	_uart1TxHead,f,c	;volatile
  4876                           
  4877                           ; BSR set to: 57
  4878                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  4879  00595A  0E3F               	movlw	63
  4880  00595C  643A               	cpfsgt	_uart1TxHead,c
  4881  00595E  D001               	goto	l5663
  4882                           
  4883                           ; BSR set to: 57
  4884                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  4885  005960  6A3A               	clrf	_uart1TxHead,c	;volatile
  4886  005962                     l5663:
  4887                           
  4888                           ; BSR set to: 57
  4889                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  4890  005962  0638               	decf	_uart1TxBufferRemaining,f,c	;volatile
  4891  005964                     l5665:
  4892                           
  4893                           ; BSR set to: 57
  4894                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  4895  005964  8993               	bsf	147,4,b	;volatile
  4896                           
  4897                           ; BSR set to: 57
  4898                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4899  005966  52E5               	movf	postdec1,f,c
  4900  005968  0012               	return		;funcret
  4901  00596A                     __end_of_UART1_Write:
  4902                           	opt callstack 0
  4903                           
  4904 ;; *************** function _m_protocol *****************
  4905 ;; Defined at:
  4906 ;;		line 42 in file "gemsecs.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  m_link          1  [STACK] PTR enum E16164
  4909 ;;		 -> V(88), 
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;  rxData          1  [STACK] unsigned char 
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  1  [STACK] enum E16902
  4914 ;; Registers used:
  4915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4925 ;;Total ram usage:        0 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    5
  4928 ;; This function calls:
  4929 ;;		_StartTimer
  4930 ;;		_TimerDone
  4931 ;;		_UART1_Read
  4932 ;;		_UART1_is_rx_ready
  4933 ;;		_UART2_Read
  4934 ;;		_UART2_is_rx_ready
  4935 ;;		_WaitMs
  4936 ;;		_run_checksum
  4937 ;; This function is called by:
  4938 ;;		_main
  4939 ;; This function uses a reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text10
  4943  0025CC                     __ptext10:
  4944                           	opt callstack 0
  4945  0025CC                     _m_protocol:
  4946                           	opt callstack 0
  4947                           
  4948                           ; BSR set to: 57
  4949                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4950  0025CC  52E6               	movf	postinc1,f,c
  4951                           
  4952                           ;gemsecs.c: 42: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 43: {;gemsecs.c: 
      +                          44:  uint8_t rxData;;gemsecs.c: 45:  static uint8_t rxData_l = 0;;gemsecs.c: 47:  switch
      +                           (*m_link) {
  4953                           
  4954                           ;incstack = 0
  4955  0025CE  D258               	goto	l6825
  4956  0025D0                     l6625:
  4957                           
  4958                           ;gemsecs.c: 49:   if (UART1_is_rx_ready()) {
  4959  0025D0  ECAB  F030         	call	_UART1_is_rx_ready	;wreg free
  4960  0025D4  503B               	movf	btemp,w,c
  4961  0025D6  B4D8               	btfsc	status,2,c
  4962  0025D8  D020               	goto	l6639
  4963                           
  4964                           ;gemsecs.c: 50:    rxData = UART1_Read();
  4965  0025DA  ECD4  F02C         	call	_UART1_Read	;wreg free
  4966                           
  4967                           ;stkvar	_rxData @ sp[(-1)+0]
  4968  0025DE  0EFF               	movlw	-1
  4969  0025E0  0060  F0EF  FFE3   	movff	btemp,plusw1
  4970                           
  4971                           ; BSR set to: 57
  4972                           ;gemsecs.c: 51:    if (rxData == 0x05) {
  4973                           ;stkvar	_rxData @ sp[(-1)+0]
  4974  0025E6  0EFF               	movlw	-1
  4975  0025E8  006F FF8C  F03B    	movff	plusw1,btemp
  4976  0025EE  0E05               	movlw	5
  4977  0025F0  183B               	xorwf	btemp,w,c
  4978  0025F2  A4D8               	btfss	status,2,c
  4979  0025F4  D012               	goto	l6639
  4980                           
  4981                           ; BSR set to: 57
  4982                           ;gemsecs.c: 52:     V.uart = 0;
  4983  0025F6  0100               	movlb	0	; () banked
  4984  0025F8  9FF1               	bcf	(_V+87)& (0+255),7,b
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;gemsecs.c: 53:     StartTimer(TMR_T2, 2000);
  4988  0025FA  0ED0               	movlw	208
  4989  0025FC  6EE6               	movwf	postinc1,c
  4990  0025FE  0E07               	movlw	7
  4991  002600  6EE6               	movwf	postinc1,c
  4992  002602  0E02               	movlw	2
  4993  002604  6EE6               	movwf	postinc1,c
  4994  002606  EC13  F02D         	call	_StartTimer	;wreg free
  4995                           
  4996                           ;gemsecs.c: 54:     V.error = LINK_ERROR_NONE;
  4997  00260A  0100               	movlb	0	; () banked
  4998  00260C  6BE9               	clrf	(_V+79)& (0+255),b
  4999                           
  5000                           ; BSR set to: 0
  5001                           ;gemsecs.c: 55:     *m_link = LINK_STATE_ENQ;
  5002                           ;stkvar	_m_link @ sp[(-1)+-1]
  5003  00260E  0EFE               	movlw	-2
  5004  002610  50E3               	movf	plusw1,w,c
  5005  002612  6ED9               	movwf	fsr2l,c
  5006  002614  6ADA               	clrf	fsr2h,c
  5007  002616  0E01               	movlw	1
  5008  002618  6EDF               	movwf	indf2,c
  5009  00261A                     l6639:
  5010                           
  5011                           ;gemsecs.c: 58:   if (UART2_is_rx_ready()) {
  5012  00261A  ECA7  F030         	call	_UART2_is_rx_ready	;wreg free
  5013  00261E  503B               	movf	btemp,w,c
  5014  002620  B4D8               	btfsc	status,2,c
  5015  002622  D24F               	goto	l6827
  5016                           
  5017                           ;gemsecs.c: 59:    rxData = UART2_Read();
  5018  002624  ECB5  F02C         	call	_UART2_Read	;wreg free
  5019                           
  5020                           ;stkvar	_rxData @ sp[(-1)+0]
  5021  002628  0EFF               	movlw	-1
  5022  00262A  0060  F0EF  FFE3   	movff	btemp,plusw1
  5023                           
  5024                           ; BSR set to: 57
  5025                           ;gemsecs.c: 60:    if (rxData == 0x05) {
  5026                           ;stkvar	_rxData @ sp[(-1)+0]
  5027  002630  0EFF               	movlw	-1
  5028  002632  006F FF8C  F03B    	movff	plusw1,btemp
  5029  002638  0E05               	movlw	5
  5030  00263A  183B               	xorwf	btemp,w,c
  5031  00263C  A4D8               	btfss	status,2,c
  5032  00263E  D241               	goto	l6827
  5033                           
  5034                           ; BSR set to: 57
  5035                           ;gemsecs.c: 61:     V.uart = 1;
  5036  002640  0100               	movlb	0	; () banked
  5037  002642  8FF1               	bsf	(_V+87)& (0+255),7,b
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;gemsecs.c: 62:     StartTimer(TMR_T2, 2000);
  5041  002644  0ED0               	movlw	208
  5042  002646  6EE6               	movwf	postinc1,c
  5043  002648  0E07               	movlw	7
  5044  00264A  6EE6               	movwf	postinc1,c
  5045  00264C  0E02               	movlw	2
  5046  00264E  6EE6               	movwf	postinc1,c
  5047  002650  EC13  F02D         	call	_StartTimer	;wreg free
  5048                           
  5049                           ;gemsecs.c: 63:     V.error = LINK_ERROR_NONE;
  5050  002654  0100               	movlb	0	; () banked
  5051  002656  6BE9               	clrf	(_V+79)& (0+255),b
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;gemsecs.c: 64:     *m_link = LINK_STATE_ENQ;
  5055                           ;stkvar	_m_link @ sp[(-1)+-1]
  5056  002658  0EFE               	movlw	-2
  5057  00265A  50E3               	movf	plusw1,w,c
  5058  00265C  6ED9               	movwf	fsr2l,c
  5059  00265E  6ADA               	clrf	fsr2h,c
  5060  002660  0E01               	movlw	1
  5061  002662  D20C               	goto	L18
  5062  002664                     l6653:
  5063                           
  5064                           ;gemsecs.c: 69:   if (TimerDone(TMR_T2)) {
  5065  002664  0E02               	movlw	2
  5066  002666  6EE6               	movwf	postinc1,c
  5067  002668  EC71  F02F         	call	_TimerDone	;wreg free
  5068  00266C  503B               	movf	btemp,w,c
  5069  00266E  B4D8               	btfsc	status,2,c
  5070  002670  D00D               	goto	l6659
  5071                           
  5072                           ;gemsecs.c: 70:    V.error = LINK_ERROR_T2;
  5073  002672  0E02               	movlw	2
  5074  002674  0100               	movlb	0	; () banked
  5075  002676  6FE9               	movwf	(_V+79)& (0+255),b
  5076                           
  5077                           ;gemsecs.c: 71:    V.failed_receive = 1;
  5078  002678  51F1               	movf	(_V+87)& (0+255),w,b
  5079  00267A  0BF0               	andlw	-16
  5080  00267C  0901               	iorlw	1
  5081  00267E                     L15:
  5082  00267E  6FF1               	movwf	(_V+87)& (0+255),b
  5083                           
  5084                           ; BSR set to: 0
  5085                           ;gemsecs.c: 72:    *m_link = LINK_STATE_NAK;
  5086                           ;stkvar	_m_link @ sp[(-1)+-1]
  5087  002680  0EFE               	movlw	-2
  5088  002682  50E3               	movf	plusw1,w,c
  5089  002684  6ED9               	movwf	fsr2l,c
  5090  002686  6ADA               	clrf	fsr2h,c
  5091  002688  0E05               	movlw	5
  5092  00268A  D1F8               	goto	L18
  5093  00268C                     l6659:
  5094                           
  5095                           ;gemsecs.c: 74:    if (UART1_is_rx_ready()) {
  5096  00268C  ECAB  F030         	call	_UART1_is_rx_ready	;wreg free
  5097  002690  503B               	movf	btemp,w,c
  5098  002692  B4D8               	btfsc	status,2,c
  5099  002694  D021               	goto	l6673
  5100                           
  5101                           ;gemsecs.c: 75:     rxData = UART1_Read();
  5102  002696  ECD4  F02C         	call	_UART1_Read	;wreg free
  5103                           
  5104                           ;stkvar	_rxData @ sp[(-1)+0]
  5105  00269A  0EFF               	movlw	-1
  5106  00269C  0060  F0EF  FFE3   	movff	btemp,plusw1
  5107                           
  5108                           ; BSR set to: 57
  5109                           ;gemsecs.c: 76:     if (rxData == 0x04) {
  5110                           ;stkvar	_rxData @ sp[(-1)+0]
  5111  0026A2  0EFF               	movlw	-1
  5112  0026A4  006F FF8C  F03B    	movff	plusw1,btemp
  5113  0026AA  0E04               	movlw	4
  5114  0026AC  183B               	xorwf	btemp,w,c
  5115  0026AE  A4D8               	btfss	status,2,c
  5116  0026B0  D013               	goto	l6673
  5117                           
  5118                           ; BSR set to: 57
  5119                           ;gemsecs.c: 77:      V.uart = 1;
  5120  0026B2  0100               	movlb	0	; () banked
  5121  0026B4  8FF1               	bsf	(_V+87)& (0+255),7,b
  5122                           
  5123                           ;gemsecs.c: 78:      rxData_l = 0;
  5124  0026B6  6A2D               	clrf	m_protocol@rxData_l,c
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;gemsecs.c: 79:      StartTimer(TMR_T2, 2000);
  5128  0026B8  0ED0               	movlw	208
  5129  0026BA  6EE6               	movwf	postinc1,c
  5130  0026BC  0E07               	movlw	7
  5131  0026BE  6EE6               	movwf	postinc1,c
  5132  0026C0  0E02               	movlw	2
  5133  0026C2  6EE6               	movwf	postinc1,c
  5134  0026C4  EC13  F02D         	call	_StartTimer	;wreg free
  5135                           
  5136                           ;gemsecs.c: 80:      V.error = LINK_ERROR_NONE;
  5137  0026C8  0100               	movlb	0	; () banked
  5138  0026CA  6BE9               	clrf	(_V+79)& (0+255),b
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;gemsecs.c: 81:      *m_link = LINK_STATE_EOT;
  5142                           ;stkvar	_m_link @ sp[(-1)+-1]
  5143  0026CC  0EFE               	movlw	-2
  5144  0026CE  50E3               	movf	plusw1,w,c
  5145  0026D0  6ED9               	movwf	fsr2l,c
  5146  0026D2  6ADA               	clrf	fsr2h,c
  5147  0026D4  0E02               	movlw	2
  5148  0026D6  6EDF               	movwf	indf2,c
  5149  0026D8                     l6673:
  5150                           
  5151                           ;gemsecs.c: 84:    if (UART2_is_rx_ready()) {
  5152  0026D8  ECA7  F030         	call	_UART2_is_rx_ready	;wreg free
  5153  0026DC  503B               	movf	btemp,w,c
  5154  0026DE  B4D8               	btfsc	status,2,c
  5155  0026E0  D1F0               	goto	l6827
  5156                           
  5157                           ;gemsecs.c: 85:     rxData = UART2_Read();
  5158  0026E2  ECB5  F02C         	call	_UART2_Read	;wreg free
  5159                           
  5160                           ;stkvar	_rxData @ sp[(-1)+0]
  5161  0026E6  0EFF               	movlw	-1
  5162  0026E8  0060  F0EF  FFE3   	movff	btemp,plusw1
  5163                           
  5164                           ; BSR set to: 57
  5165                           ;gemsecs.c: 86:     if (rxData == 0x04) {
  5166                           ;stkvar	_rxData @ sp[(-1)+0]
  5167  0026EE  0EFF               	movlw	-1
  5168  0026F0  006F FF8C  F03B    	movff	plusw1,btemp
  5169  0026F6  0E04               	movlw	4
  5170  0026F8  183B               	xorwf	btemp,w,c
  5171  0026FA  A4D8               	btfss	status,2,c
  5172  0026FC  D1E2               	goto	l6827
  5173                           
  5174                           ; BSR set to: 57
  5175                           ;gemsecs.c: 87:      V.uart = 0;
  5176  0026FE  0100               	movlb	0	; () banked
  5177  002700  9FF1               	bcf	(_V+87)& (0+255),7,b
  5178                           
  5179                           ;gemsecs.c: 88:      rxData_l = 0;
  5180  002702  6A2D               	clrf	m_protocol@rxData_l,c
  5181                           
  5182                           ; BSR set to: 0
  5183                           ;gemsecs.c: 89:      StartTimer(TMR_T2, 2000);
  5184  002704  0ED0               	movlw	208
  5185  002706  6EE6               	movwf	postinc1,c
  5186  002708  0E07               	movlw	7
  5187  00270A  6EE6               	movwf	postinc1,c
  5188  00270C  0E02               	movlw	2
  5189  00270E  6EE6               	movwf	postinc1,c
  5190  002710  EC13  F02D         	call	_StartTimer	;wreg free
  5191                           
  5192                           ;gemsecs.c: 90:      V.error = LINK_ERROR_NONE;
  5193  002714  0100               	movlb	0	; () banked
  5194  002716  6BE9               	clrf	(_V+79)& (0+255),b
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;gemsecs.c: 91:      *m_link = LINK_STATE_EOT;
  5198                           ;stkvar	_m_link @ sp[(-1)+-1]
  5199  002718  0EFE               	movlw	-2
  5200  00271A  50E3               	movf	plusw1,w,c
  5201  00271C  6ED9               	movwf	fsr2l,c
  5202  00271E  6ADA               	clrf	fsr2h,c
  5203  002720  0E02               	movlw	2
  5204  002722  D1AC               	goto	L18
  5205  002724                     l6687:
  5206                           
  5207                           ;gemsecs.c: 97:   if (TimerDone(TMR_T2)) {
  5208  002724  0E02               	movlw	2
  5209  002726  6EE6               	movwf	postinc1,c
  5210  002728  EC71  F02F         	call	_TimerDone	;wreg free
  5211  00272C  503B               	movf	btemp,w,c
  5212  00272E  B4D8               	btfsc	status,2,c
  5213  002730  D007               	goto	l6693
  5214                           
  5215                           ;gemsecs.c: 98:    V.error = LINK_ERROR_T2;
  5216  002732  0E02               	movlw	2
  5217  002734  0100               	movlb	0	; () banked
  5218  002736  6FE9               	movwf	(_V+79)& (0+255),b
  5219                           
  5220                           ;gemsecs.c: 99:    V.failed_receive = 2;
  5221  002738  51F1               	movf	(_V+87)& (0+255),w,b
  5222  00273A  0BF0               	andlw	-16
  5223  00273C  0902               	iorlw	2
  5224  00273E  D79F               	goto	L15
  5225  002740                     l6693:
  5226                           
  5227                           ;gemsecs.c: 102:    if (UART1_is_rx_ready() && (V.uart == 0)) {
  5228  002740  ECAB  F030         	call	_UART1_is_rx_ready	;wreg free
  5229  002744  503B               	movf	btemp,w,c
  5230  002746  B4D8               	btfsc	status,2,c
  5231  002748  D0A8               	goto	l6743
  5232  00274A  0100               	movlb	0	; () banked
  5233  00274C  BFF1               	btfsc	(_V+87)& (0+255),7,b
  5234  00274E  D0A5               	goto	l6743
  5235                           
  5236                           ; BSR set to: 0
  5237                           ;gemsecs.c: 103:     rxData = UART1_Read();
  5238  002750  ECD4  F02C         	call	_UART1_Read	;wreg free
  5239                           
  5240                           ;stkvar	_rxData @ sp[(-1)+0]
  5241  002754  0EFF               	movlw	-1
  5242  002756  0060  F0EF  FFE3   	movff	btemp,plusw1
  5243                           
  5244                           ; BSR set to: 57
  5245                           ;gemsecs.c: 104:     if (rxData_l == 0) {
  5246  00275C  502D               	movf	m_protocol@rxData_l,w,c
  5247  00275E  A4D8               	btfss	status,2,c
  5248  002760  D00C               	goto	l6707
  5249                           
  5250                           ; BSR set to: 57
  5251                           ;gemsecs.c: 105:      r_block.length = rxData;
  5252                           ;stkvar	_rxData @ sp[(-1)+0]
  5253  002762  0EFF               	movlw	-1
  5254  002764  006F FF8C  F06C    	movff	plusw1,_r_block+12
  5255                           
  5256                           ; BSR set to: 57
  5257                           ;gemsecs.c: 106:      run_checksum(0, 1);
  5258  00276A  0E01               	movlw	1
  5259  00276C  6EE6               	movwf	postinc1,c
  5260  00276E  0E00               	movlw	0
  5261  002770  6EE6               	movwf	postinc1,c
  5262  002772  EC4D  F02D         	call	_run_checksum	;wreg free
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;gemsecs.c: 107:      rxData_l++;
  5266  002776  2A2D               	incf	m_protocol@rxData_l,f,c
  5267                           
  5268                           ;gemsecs.c: 108:     } else {
  5269  002778  D090               	goto	l6743
  5270  00277A                     l6707:
  5271                           
  5272                           ; BSR set to: 57
  5273                           ;gemsecs.c: 112:      if (rxData_l <= sizeof(block10))
  5274  00277A  0E0B               	movlw	11
  5275  00277C  602D               	cpfslt	m_protocol@rxData_l,c
  5276  00277E  D00C               	goto	l6711
  5277                           
  5278                           ; BSR set to: 57
  5279                           ;gemsecs.c: 113:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5280                           ;stkvar	_rxData @ sp[(-1)+0]
  5281  002780  502D               	movf	m_protocol@rxData_l,w,c
  5282  002782  0819               	sublw	low (_H10+25)
  5283  002784  6ED9               	movwf	fsr2l,c
  5284  002786  0E00               	movlw	0
  5285  002788  A0D8               	btfss	status,0,c
  5286  00278A  2AE8               	incf	wreg,f,c
  5287  00278C  0801               	sublw	high (_H10+25)
  5288  00278E  6EDA               	movwf	fsr2h,c
  5289  002790  0EFF               	movlw	-1
  5290  002792  006F FF8F FFDF     	movff	plusw1,indf2
  5291  002798                     l6711:
  5292                           
  5293                           ; BSR set to: 57
  5294                           ;gemsecs.c: 114:      if (rxData_l <= r_block.length)
  5295  002798  502D               	movf	m_protocol@rxData_l,w,c
  5296  00279A  0100               	movlb	0	; () banked
  5297  00279C  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  5298  00279E  A0D8               	btfss	status,0,c
  5299  0027A0  D00D               	goto	l6715
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;gemsecs.c: 115:       V.r_checksum = run_checksum(rxData, 0);
  5303  0027A2  0E00               	movlw	0
  5304  0027A4  6EE6               	movwf	postinc1,c
  5305                           
  5306                           ;stkvar	_rxData @ sp[(-2)+0]
  5307  0027A6  0EFE               	movlw	-2
  5308  0027A8  50E3               	movf	plusw1,w,c
  5309  0027AA  6EE6               	movwf	postinc1,c
  5310  0027AC  EC4D  F02D         	call	_run_checksum	;wreg free
  5311  0027B0  0060  F0EC  F0EC   	movff	btemp,_V+82
  5312  0027B6  0060  F0F0  F0ED   	movff	btemp+1,_V+83
  5313  0027BC                     l6715:
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;gemsecs.c: 117:      if (rxData_l == r_block.length + 1)
  5317  0027BC  502D               	movf	m_protocol@rxData_l,w,c
  5318  0027BE  6E45               	movwf	btemp+10,c
  5319  0027C0  6A46               	clrf	btemp+11,c
  5320  0027C2  516C               	movf	(_r_block+12)& (0+255),w,b
  5321  0027C4  6E43               	movwf	btemp+8,c
  5322  0027C6  6A44               	clrf	btemp+9,c
  5323  0027C8  0E01               	movlw	1
  5324  0027CA  2643               	addwf	btemp+8,f,c
  5325  0027CC  0E00               	movlw	0
  5326  0027CE  2244               	addwfc	btemp+9,f,c
  5327  0027D0  5045               	movf	btemp+10,w,c
  5328  0027D2  1843               	xorwf	btemp+8,w,c
  5329  0027D4  E109               	bnz	l6719
  5330  0027D6  5046               	movf	btemp+11,w,c
  5331  0027D8  1844               	xorwf	btemp+9,w,c
  5332  0027DA  A4D8               	btfss	status,2,c
  5333  0027DC  D005               	goto	l6719
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;gemsecs.c: 118:       H10[1].checksum = (uint16_t) rxData << 8;
  5337                           ;stkvar	_rxData @ sp[(-1)+0]
  5338  0027DE  0EFF               	movlw	-1
  5339  0027E0  50E3               	movf	plusw1,w,c
  5340  0027E2  0101               	movlb	1	; () banked
  5341  0027E4  6F0E               	movwf	(_H10+14)& (0+255),b
  5342  0027E6  6B0D               	clrf	(_H10+13)& (0+255),b
  5343  0027E8                     l6719:
  5344                           
  5345                           ;gemsecs.c: 119:      if (rxData_l == r_block.length + 2)
  5346  0027E8  502D               	movf	m_protocol@rxData_l,w,c
  5347  0027EA  6E45               	movwf	btemp+10,c
  5348  0027EC  6A46               	clrf	btemp+11,c
  5349  0027EE  0100               	movlb	0	; () banked
  5350  0027F0  516C               	movf	(_r_block+12)& (0+255),w,b
  5351  0027F2  6E43               	movwf	btemp+8,c
  5352  0027F4  6A44               	clrf	btemp+9,c
  5353  0027F6  0E02               	movlw	2
  5354  0027F8  2643               	addwf	btemp+8,f,c
  5355  0027FA  0E00               	movlw	0
  5356  0027FC  2244               	addwfc	btemp+9,f,c
  5357  0027FE  5045               	movf	btemp+10,w,c
  5358  002800  1843               	xorwf	btemp+8,w,c
  5359  002802  E10A               	bnz	l6723
  5360  002804  5046               	movf	btemp+11,w,c
  5361  002806  1844               	xorwf	btemp+9,w,c
  5362  002808  A4D8               	btfss	status,2,c
  5363  00280A  D006               	goto	l6723
  5364                           
  5365                           ; BSR set to: 0
  5366                           ;gemsecs.c: 120:       H10[1].checksum += rxData;
  5367                           ;stkvar	_rxData @ sp[(-1)+0]
  5368  00280C  0EFF               	movlw	-1
  5369  00280E  50E3               	movf	plusw1,w,c
  5370  002810  0101               	movlb	1	; () banked
  5371  002812  270D               	addwf	(_H10+13)& (0+255),f,b
  5372  002814  0E00               	movlw	0
  5373  002816  230E               	addwfc	(_H10+14)& (0+255),f,b
  5374  002818                     l6723:
  5375                           
  5376                           ;gemsecs.c: 122:      rxData_l++;
  5377  002818  2A2D               	incf	m_protocol@rxData_l,f,c
  5378                           
  5379                           ;gemsecs.c: 123:      if (rxData_l > (r_block.length + 2)) {
  5380  00281A  502D               	movf	m_protocol@rxData_l,w,c
  5381  00281C  6E45               	movwf	btemp+10,c
  5382  00281E  6A46               	clrf	btemp+11,c
  5383  002820  0100               	movlb	0	; () banked
  5384  002822  516C               	movf	(_r_block+12)& (0+255),w,b
  5385  002824  6E43               	movwf	btemp+8,c
  5386  002826  6A44               	clrf	btemp+9,c
  5387  002828  0E02               	movlw	2
  5388  00282A  2643               	addwf	btemp+8,f,c
  5389  00282C  0E00               	movlw	0
  5390  00282E  2244               	addwfc	btemp+9,f,c
  5391  002830  5045               	movf	btemp+10,w,c
  5392  002832  5C43               	subwf	btemp+8,w,c
  5393  002834  5044               	movf	btemp+9,w,c
  5394  002836  0A80               	xorlw	128
  5395  002838  6E3B               	movwf	btemp,c
  5396  00283A  5046               	movf	btemp+11,w,c
  5397  00283C  0A80               	xorlw	128
  5398  00283E  583B               	subwfb	btemp,w,c
  5399  002840  B0D8               	btfsc	status,0,c
  5400  002842  D02B               	goto	l6743
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;gemsecs.c: 124:       if (V.r_checksum == H10[1].checksum) {
  5404  002844  0101               	movlb	1	; () banked
  5405  002846  510D               	movf	(_H10+13)& (0+255),w,b
  5406  002848  0100               	movlb	0	; () banked
  5407  00284A  19EC               	xorwf	(_V+82)& (0+255),w,b
  5408  00284C  E10E               	bnz	l6733
  5409  00284E  0101               	movlb	1	; () banked
  5410  002850  510E               	movf	(_H10+14)& (0+255),w,b
  5411  002852  0100               	movlb	0	; () banked
  5412  002854  19ED               	xorwf	(_V+83)& (0+255),w,b
  5413  002856  A4D8               	btfss	status,2,c
  5414  002858  D008               	goto	l6733
  5415                           
  5416                           ; BSR set to: 0
  5417                           ;gemsecs.c: 125:        *m_link = LINK_STATE_ACK;
  5418                           ;stkvar	_m_link @ sp[(-1)+-1]
  5419  00285A  0EFE               	movlw	-2
  5420  00285C  50E3               	movf	plusw1,w,c
  5421  00285E  6ED9               	movwf	fsr2l,c
  5422  002860  6ADA               	clrf	fsr2h,c
  5423  002862  0E03               	movlw	3
  5424  002864  D019               	goto	L16
  5425  002866                     l6731:
  5426  002866  ECD4  F02C         	call	_UART1_Read	;wreg free
  5427  00286A                     l6733:
  5428                           
  5429                           ;gemsecs.c: 127:        while (UART1_is_rx_ready())
  5430  00286A  ECAB  F030         	call	_UART1_is_rx_ready	;wreg free
  5431  00286E  503B               	movf	btemp,w,c
  5432  002870  A4D8               	btfss	status,2,c
  5433  002872  D7F9               	goto	l6731
  5434                           
  5435                           ;gemsecs.c: 129:        WaitMs(500);
  5436  002874  0EF4               	movlw	244
  5437  002876  6EE6               	movwf	postinc1,c
  5438  002878  0E01               	movlw	1
  5439  00287A  6EE6               	movwf	postinc1,c
  5440  00287C  ECBA  F02D         	call	_WaitMs	;wreg free
  5441                           
  5442                           ;gemsecs.c: 130:        V.error = LINK_ERROR_CHECKSUM;
  5443  002880  0E05               	movlw	5
  5444  002882  0100               	movlb	0	; () banked
  5445  002884  6FE9               	movwf	(_V+79)& (0+255),b
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;gemsecs.c: 131:        V.failed_receive = 3;
  5449  002886  51F1               	movf	(_V+87)& (0+255),w,b
  5450  002888  0BF0               	andlw	-16
  5451  00288A  0903               	iorlw	3
  5452  00288C  6FF1               	movwf	(_V+87)& (0+255),b
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;gemsecs.c: 132:        *m_link = LINK_STATE_NAK;
  5456                           ;stkvar	_m_link @ sp[(-1)+-1]
  5457  00288E  0EFE               	movlw	-2
  5458  002890  50E3               	movf	plusw1,w,c
  5459  002892  6ED9               	movwf	fsr2l,c
  5460  002894  6ADA               	clrf	fsr2h,c
  5461  002896  0E05               	movlw	5
  5462  002898                     L16:
  5463  002898  6EDF               	movwf	indf2,c
  5464  00289A                     l6743:
  5465                           
  5466                           ;gemsecs.c: 138:    if (UART2_is_rx_ready() && (V.uart == 1)) {
  5467  00289A  ECA7  F030         	call	_UART2_is_rx_ready	;wreg free
  5468  00289E  503B               	movf	btemp,w,c
  5469  0028A0  B4D8               	btfsc	status,2,c
  5470  0028A2  D10F               	goto	l6827
  5471  0028A4  0100               	movlb	0	; () banked
  5472  0028A6  AFF1               	btfss	(_V+87)& (0+255),7,b
  5473  0028A8  D10C               	goto	l6827
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;gemsecs.c: 139:     rxData = UART2_Read();
  5477  0028AA  ECB5  F02C         	call	_UART2_Read	;wreg free
  5478                           
  5479                           ;stkvar	_rxData @ sp[(-1)+0]
  5480  0028AE  0EFF               	movlw	-1
  5481  0028B0  0060  F0EF  FFE3   	movff	btemp,plusw1
  5482                           
  5483                           ; BSR set to: 57
  5484                           ;gemsecs.c: 140:     if (rxData_l == 0) {
  5485  0028B6  502D               	movf	m_protocol@rxData_l,w,c
  5486  0028B8  A4D8               	btfss	status,2,c
  5487  0028BA  D00C               	goto	l6757
  5488                           
  5489                           ; BSR set to: 57
  5490                           ;gemsecs.c: 141:      r_block.length = rxData;
  5491                           ;stkvar	_rxData @ sp[(-1)+0]
  5492  0028BC  0EFF               	movlw	-1
  5493  0028BE  006F FF8C  F06C    	movff	plusw1,_r_block+12
  5494                           
  5495                           ; BSR set to: 57
  5496                           ;gemsecs.c: 142:      run_checksum(0, 1);
  5497  0028C4  0E01               	movlw	1
  5498  0028C6  6EE6               	movwf	postinc1,c
  5499  0028C8  0E00               	movlw	0
  5500  0028CA  6EE6               	movwf	postinc1,c
  5501  0028CC  EC4D  F02D         	call	_run_checksum	;wreg free
  5502                           
  5503                           ; BSR set to: 0
  5504                           ;gemsecs.c: 143:      rxData_l++;
  5505  0028D0  2A2D               	incf	m_protocol@rxData_l,f,c
  5506                           
  5507                           ;gemsecs.c: 144:     } else {
  5508  0028D2  D0F7               	goto	l6827
  5509  0028D4                     l6757:
  5510                           
  5511                           ; BSR set to: 57
  5512                           ;gemsecs.c: 148:      if (rxData_l <= sizeof(block10))
  5513  0028D4  0E0B               	movlw	11
  5514  0028D6  602D               	cpfslt	m_protocol@rxData_l,c
  5515  0028D8  D00C               	goto	l6761
  5516                           
  5517                           ; BSR set to: 57
  5518                           ;gemsecs.c: 149:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5519                           ;stkvar	_rxData @ sp[(-1)+0]
  5520  0028DA  502D               	movf	m_protocol@rxData_l,w,c
  5521  0028DC  0819               	sublw	low (_H10+25)
  5522  0028DE  6ED9               	movwf	fsr2l,c
  5523  0028E0  0E00               	movlw	0
  5524  0028E2  A0D8               	btfss	status,0,c
  5525  0028E4  2AE8               	incf	wreg,f,c
  5526  0028E6  0801               	sublw	high (_H10+25)
  5527  0028E8  6EDA               	movwf	fsr2h,c
  5528  0028EA  0EFF               	movlw	-1
  5529  0028EC  006F FF8F FFDF     	movff	plusw1,indf2
  5530  0028F2                     l6761:
  5531                           
  5532                           ; BSR set to: 57
  5533                           ;gemsecs.c: 150:      if (rxData_l <= r_block.length)
  5534  0028F2  502D               	movf	m_protocol@rxData_l,w,c
  5535  0028F4  0100               	movlb	0	; () banked
  5536  0028F6  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  5537  0028F8  A0D8               	btfss	status,0,c
  5538  0028FA  D00D               	goto	l6765
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;gemsecs.c: 151:       V.r_checksum = run_checksum(rxData, 0);
  5542  0028FC  0E00               	movlw	0
  5543  0028FE  6EE6               	movwf	postinc1,c
  5544                           
  5545                           ;stkvar	_rxData @ sp[(-2)+0]
  5546  002900  0EFE               	movlw	-2
  5547  002902  50E3               	movf	plusw1,w,c
  5548  002904  6EE6               	movwf	postinc1,c
  5549  002906  EC4D  F02D         	call	_run_checksum	;wreg free
  5550  00290A  0060  F0EC  F0EC   	movff	btemp,_V+82
  5551  002910  0060  F0F0  F0ED   	movff	btemp+1,_V+83
  5552  002916                     l6765:
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;gemsecs.c: 153:      if (rxData_l == r_block.length + 1)
  5556  002916  502D               	movf	m_protocol@rxData_l,w,c
  5557  002918  6E45               	movwf	btemp+10,c
  5558  00291A  6A46               	clrf	btemp+11,c
  5559  00291C  516C               	movf	(_r_block+12)& (0+255),w,b
  5560  00291E  6E43               	movwf	btemp+8,c
  5561  002920  6A44               	clrf	btemp+9,c
  5562  002922  0E01               	movlw	1
  5563  002924  2643               	addwf	btemp+8,f,c
  5564  002926  0E00               	movlw	0
  5565  002928  2244               	addwfc	btemp+9,f,c
  5566  00292A  5045               	movf	btemp+10,w,c
  5567  00292C  1843               	xorwf	btemp+8,w,c
  5568  00292E  E109               	bnz	l6769
  5569  002930  5046               	movf	btemp+11,w,c
  5570  002932  1844               	xorwf	btemp+9,w,c
  5571  002934  A4D8               	btfss	status,2,c
  5572  002936  D005               	goto	l6769
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;gemsecs.c: 154:       H10[1].checksum = (uint16_t) rxData << 8;
  5576                           ;stkvar	_rxData @ sp[(-1)+0]
  5577  002938  0EFF               	movlw	-1
  5578  00293A  50E3               	movf	plusw1,w,c
  5579  00293C  0101               	movlb	1	; () banked
  5580  00293E  6F0E               	movwf	(_H10+14)& (0+255),b
  5581  002940  6B0D               	clrf	(_H10+13)& (0+255),b
  5582  002942                     l6769:
  5583                           
  5584                           ;gemsecs.c: 155:      if (rxData_l == r_block.length + 2)
  5585  002942  502D               	movf	m_protocol@rxData_l,w,c
  5586  002944  6E45               	movwf	btemp+10,c
  5587  002946  6A46               	clrf	btemp+11,c
  5588  002948  0100               	movlb	0	; () banked
  5589  00294A  516C               	movf	(_r_block+12)& (0+255),w,b
  5590  00294C  6E43               	movwf	btemp+8,c
  5591  00294E  6A44               	clrf	btemp+9,c
  5592  002950  0E02               	movlw	2
  5593  002952  2643               	addwf	btemp+8,f,c
  5594  002954  0E00               	movlw	0
  5595  002956  2244               	addwfc	btemp+9,f,c
  5596  002958  5045               	movf	btemp+10,w,c
  5597  00295A  1843               	xorwf	btemp+8,w,c
  5598  00295C  E10A               	bnz	l6773
  5599  00295E  5046               	movf	btemp+11,w,c
  5600  002960  1844               	xorwf	btemp+9,w,c
  5601  002962  A4D8               	btfss	status,2,c
  5602  002964  D006               	goto	l6773
  5603                           
  5604                           ; BSR set to: 0
  5605                           ;gemsecs.c: 156:       H10[1].checksum += rxData;
  5606                           ;stkvar	_rxData @ sp[(-1)+0]
  5607  002966  0EFF               	movlw	-1
  5608  002968  50E3               	movf	plusw1,w,c
  5609  00296A  0101               	movlb	1	; () banked
  5610  00296C  270D               	addwf	(_H10+13)& (0+255),f,b
  5611  00296E  0E00               	movlw	0
  5612  002970  230E               	addwfc	(_H10+14)& (0+255),f,b
  5613  002972                     l6773:
  5614                           
  5615                           ;gemsecs.c: 158:      rxData_l++;
  5616  002972  2A2D               	incf	m_protocol@rxData_l,f,c
  5617                           
  5618                           ;gemsecs.c: 159:      if (rxData_l > (r_block.length + 2)) {
  5619  002974  502D               	movf	m_protocol@rxData_l,w,c
  5620  002976  6E45               	movwf	btemp+10,c
  5621  002978  6A46               	clrf	btemp+11,c
  5622  00297A  0100               	movlb	0	; () banked
  5623  00297C  516C               	movf	(_r_block+12)& (0+255),w,b
  5624  00297E  6E43               	movwf	btemp+8,c
  5625  002980  6A44               	clrf	btemp+9,c
  5626  002982  0E02               	movlw	2
  5627  002984  2643               	addwf	btemp+8,f,c
  5628  002986  0E00               	movlw	0
  5629  002988  2244               	addwfc	btemp+9,f,c
  5630  00298A  5045               	movf	btemp+10,w,c
  5631  00298C  5C43               	subwf	btemp+8,w,c
  5632  00298E  5044               	movf	btemp+9,w,c
  5633  002990  0A80               	xorlw	128
  5634  002992  6E3B               	movwf	btemp,c
  5635  002994  5046               	movf	btemp+11,w,c
  5636  002996  0A80               	xorlw	128
  5637  002998  583B               	subwfb	btemp,w,c
  5638  00299A  B0D8               	btfsc	status,0,c
  5639  00299C  D092               	goto	l6827
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;gemsecs.c: 160:       if (V.r_checksum == H10[1].checksum) {
  5643  00299E  0101               	movlb	1	; () banked
  5644  0029A0  510D               	movf	(_H10+13)& (0+255),w,b
  5645  0029A2  0100               	movlb	0	; () banked
  5646  0029A4  19EC               	xorwf	(_V+82)& (0+255),w,b
  5647  0029A6  E10E               	bnz	l6783
  5648  0029A8  0101               	movlb	1	; () banked
  5649  0029AA  510E               	movf	(_H10+14)& (0+255),w,b
  5650  0029AC  0100               	movlb	0	; () banked
  5651  0029AE  19ED               	xorwf	(_V+83)& (0+255),w,b
  5652  0029B0  A4D8               	btfss	status,2,c
  5653  0029B2  D008               	goto	l6783
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;gemsecs.c: 161:        *m_link = LINK_STATE_ACK;
  5657                           ;stkvar	_m_link @ sp[(-1)+-1]
  5658  0029B4  0EFE               	movlw	-2
  5659  0029B6  50E3               	movf	plusw1,w,c
  5660  0029B8  6ED9               	movwf	fsr2l,c
  5661  0029BA  6ADA               	clrf	fsr2h,c
  5662  0029BC  0E03               	movlw	3
  5663  0029BE  D05E               	goto	L18
  5664  0029C0                     l6781:
  5665  0029C0  ECB5  F02C         	call	_UART2_Read	;wreg free
  5666  0029C4                     l6783:
  5667                           
  5668                           ;gemsecs.c: 163:        while (UART2_is_rx_ready())
  5669  0029C4  ECA7  F030         	call	_UART2_is_rx_ready	;wreg free
  5670  0029C8  503B               	movf	btemp,w,c
  5671  0029CA  A4D8               	btfss	status,2,c
  5672  0029CC  D7F9               	goto	l6781
  5673                           
  5674                           ;gemsecs.c: 165:        WaitMs(500);
  5675  0029CE  0EF4               	movlw	244
  5676  0029D0  6EE6               	movwf	postinc1,c
  5677  0029D2  0E01               	movlw	1
  5678  0029D4  6EE6               	movwf	postinc1,c
  5679  0029D6  ECBA  F02D         	call	_WaitMs	;wreg free
  5680                           
  5681                           ;gemsecs.c: 166:        V.error = LINK_ERROR_CHECKSUM;
  5682  0029DA  0E05               	movlw	5
  5683  0029DC  0100               	movlb	0	; () banked
  5684  0029DE  6FE9               	movwf	(_V+79)& (0+255),b
  5685                           
  5686                           ; BSR set to: 0
  5687                           ;gemsecs.c: 167:        V.failed_receive = 4;
  5688  0029E0  51F1               	movf	(_V+87)& (0+255),w,b
  5689  0029E2  0BF0               	andlw	-16
  5690  0029E4  0904               	iorlw	4
  5691  0029E6  D64B               	goto	L15
  5692  0029E8                     l6793:
  5693                           
  5694                           ;gemsecs.c: 176:   V.stream = H10[1].block.block.stream;
  5695  0029E8  0101               	movlb	1	; () banked
  5696  0029EA  5116               	movf	(_H10+22)& (0+255),w,b
  5697  0029EC  0B7F               	andlw	127
  5698  0029EE  0100               	movlb	0	; () banked
  5699  0029F0  6FE7               	movwf	(_V+77)& (0+255),b
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;gemsecs.c: 177:   V.function = H10[1].block.block.function;
  5703  0029F2  C115  F0E8         	movff	_H10+21,_V+78
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;gemsecs.c: 178:   V.systemb = H10[1].block.block.systemb;
  5707  0029F6  C10F  F0E3         	movff	_H10+15,_V+73
  5708  0029FA  C110  F0E4         	movff	_H10+16,_V+74
  5709  0029FE  C111  F0E5         	movff	_H10+17,_V+75
  5710  002A02  C112  F0E6         	movff	_H10+18,_V+76
  5711                           
  5712                           ; BSR set to: 0
  5713                           ;gemsecs.c: 179:   V.rbit = H10[1].block.block.rbit;
  5714  002A06  0101               	movlb	1	; () banked
  5715  002A08  AF18               	btfss	(_H10+24)& (0+255),7,b
  5716  002A0A  D003               	bra	u4065
  5717  002A0C  0100               	movlb	0	; () banked
  5718  002A0E  81F0               	bsf	(_V+86)& (0+255),0,b
  5719  002A10  D002               	bra	u4067
  5720  002A12                     u4065:
  5721  002A12  0100               	movlb	0	; () banked
  5722  002A14  91F0               	bcf	(_V+86)& (0+255),0,b
  5723  002A16                     u4067:
  5724                           
  5725                           ; BSR set to: 0
  5726                           ;gemsecs.c: 180:   V.wbit = H10[1].block.block.wbit;
  5727  002A16  0101               	movlb	1	; () banked
  5728  002A18  AF16               	btfss	(_H10+22)& (0+255),7,b
  5729  002A1A  D003               	bra	u4075
  5730  002A1C  0100               	movlb	0	; () banked
  5731  002A1E  83F0               	bsf	(_V+86)& (0+255),1,b
  5732  002A20  D002               	bra	u4077
  5733  002A22                     u4075:
  5734  002A22  0100               	movlb	0	; () banked
  5735  002A24  93F0               	bcf	(_V+86)& (0+255),1,b
  5736  002A26                     u4077:
  5737                           
  5738                           ; BSR set to: 0
  5739                           ;gemsecs.c: 181:   V.ebit = H10[1].block.block.ebit;
  5740  002A26  0101               	movlb	1	; () banked
  5741  002A28  AF14               	btfss	(_H10+20)& (0+255),7,b
  5742  002A2A  D003               	bra	u4085
  5743  002A2C  0100               	movlb	0	; () banked
  5744  002A2E  85F0               	bsf	(_V+86)& (0+255),2,b
  5745  002A30  D002               	bra	u4087
  5746  002A32                     u4085:
  5747  002A32  0100               	movlb	0	; () banked
  5748  002A34  95F0               	bcf	(_V+86)& (0+255),2,b
  5749  002A36                     u4087:
  5750                           
  5751                           ; BSR set to: 0
  5752                           ;gemsecs.c: 182:   V.failed_receive = 0;
  5753  002A36  0EF0               	movlw	-16
  5754  002A38  17F1               	andwf	(_V+87)& (0+255),f,b
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;gemsecs.c: 183:   *m_link = LINK_STATE_DONE;
  5758                           ;stkvar	_m_link @ sp[(-1)+-1]
  5759  002A3A  0EFE               	movlw	-2
  5760  002A3C  50E3               	movf	plusw1,w,c
  5761  002A3E  6ED9               	movwf	fsr2l,c
  5762  002A40  6ADA               	clrf	fsr2h,c
  5763  002A42  0E04               	movlw	4
  5764  002A44  D01B               	goto	L18
  5765  002A46                     l6809:
  5766                           
  5767                           ;gemsecs.c: 186:   *m_link = LINK_STATE_ERROR;
  5768                           ;stkvar	_m_link @ sp[(-1)+-1]
  5769  002A46  0EFE               	movlw	-2
  5770  002A48  50E3               	movf	plusw1,w,c
  5771  002A4A  6ED9               	movwf	fsr2l,c
  5772  002A4C  6ADA               	clrf	fsr2h,c
  5773  002A4E  0E06               	movlw	6
  5774  002A50  6EDF               	movwf	indf2,c
  5775                           
  5776                           ;gemsecs.c: 187:   while ((uart1RxCount)) {
  5777  002A52  D002               	goto	l6813
  5778  002A54                     l6811:
  5779                           
  5780                           ;gemsecs.c: 188:    UART1_Read();
  5781  002A54  ECD4  F02C         	call	_UART1_Read	;wreg free
  5782  002A58                     l6813:
  5783                           
  5784                           ;gemsecs.c: 187:   while ((uart1RxCount)) {
  5785  002A58  5035               	movf	_uart1RxCount,w,c	;volatile
  5786  002A5A  B4D8               	btfsc	status,2,c
  5787  002A5C  D003               	goto	l6817
  5788  002A5E  D7FA               	goto	l6811
  5789  002A60                     l6815:
  5790                           
  5791                           ;gemsecs.c: 191:    UART2_Read();
  5792  002A60  ECB5  F02C         	call	_UART2_Read	;wreg free
  5793  002A64                     l6817:
  5794                           
  5795                           ;gemsecs.c: 190:   while ((uart2RxCount)) {
  5796  002A64  502F               	movf	_uart2RxCount,w,c	;volatile
  5797  002A66  B4D8               	btfsc	status,2,c
  5798  002A68  D02C               	goto	l6827
  5799  002A6A  D7FA               	goto	l6815
  5800  002A6C                     l6819:
  5801                           
  5802                           ;gemsecs.c: 197:   V.failed_receive = 0;
  5803  002A6C  0EF0               	movlw	-16
  5804  002A6E  0100               	movlb	0	; () banked
  5805  002A70  17F1               	andwf	(_V+87)& (0+255),f,b
  5806  002A72                     l6821:
  5807                           
  5808                           ;gemsecs.c: 199:   *m_link = LINK_STATE_IDLE;
  5809                           ;stkvar	_m_link @ sp[(-1)+-1]
  5810  002A72  0EFE               	movlw	-2
  5811  002A74  50E3               	movf	plusw1,w,c
  5812  002A76  6ED9               	movwf	fsr2l,c
  5813  002A78  6ADA               	clrf	fsr2h,c
  5814  002A7A  0E00               	movlw	0
  5815  002A7C                     L18:
  5816  002A7C  6EDF               	movwf	indf2,c
  5817                           
  5818                           ;gemsecs.c: 201:   break;
  5819  002A7E  D021               	goto	l6827
  5820  002A80                     l6825:
  5821                           
  5822                           ;stkvar	_m_link @ sp[(-1)+-1]
  5823  002A80  0EFE               	movlw	-2
  5824  002A82  50E3               	movf	plusw1,w,c
  5825  002A84  6ED9               	movwf	fsr2l,c
  5826  002A86  6ADA               	clrf	fsr2h,c
  5827  002A88  50DF               	movf	indf2,w,c
  5828  002A8A  6E45               	movwf	btemp+10,c
  5829  002A8C  6A46               	clrf	btemp+11,c
  5830                           
  5831                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5832                           ; Switch size 1, requested type "simple"
  5833                           ; Number of cases is 1, Range of values is 0 to 0
  5834                           ; switch strategies available:
  5835                           ; Name         Instructions Cycles
  5836                           ; simple_byte            4     3 (average)
  5837                           ;	Chosen strategy is simple_byte
  5838  002A8E  5046               	movf	btemp+11,w,c
  5839  002A90  0A00               	xorlw	0	; case 0
  5840  002A92  A4D8               	btfss	status,2,c
  5841  002A94  D7EE               	goto	l6821
  5842                           
  5843                           ; Switch size 1, requested type "simple"
  5844                           ; Number of cases is 7, Range of values is 0 to 6
  5845                           ; switch strategies available:
  5846                           ; Name         Instructions Cycles
  5847                           ; simple_byte           22    12 (average)
  5848                           ;	Chosen strategy is simple_byte
  5849  002A96  5045               	movf	btemp+10,w,c
  5850  002A98  0A00               	xorlw	0	; case 0
  5851  002A9A  B4D8               	btfsc	status,2,c
  5852  002A9C  D599               	goto	l6625
  5853  002A9E  0A01               	xorlw	1	; case 1
  5854  002AA0  B4D8               	btfsc	status,2,c
  5855  002AA2  D5E0               	goto	l6653
  5856  002AA4  0A03               	xorlw	3	; case 2
  5857  002AA6  B4D8               	btfsc	status,2,c
  5858  002AA8  D63D               	goto	l6687
  5859  002AAA  0A01               	xorlw	1	; case 3
  5860  002AAC  B4D8               	btfsc	status,2,c
  5861  002AAE  D79C               	goto	l6793
  5862  002AB0  0A07               	xorlw	7	; case 4
  5863  002AB2  B4D8               	btfsc	status,2,c
  5864  002AB4  D7DB               	goto	l6819
  5865  002AB6  0A01               	xorlw	1	; case 5
  5866  002AB8  B4D8               	btfsc	status,2,c
  5867  002ABA  D7C5               	goto	l6809
  5868  002ABC  0A03               	xorlw	3	; case 6
  5869  002ABE  A4D8               	btfss	status,2,c
  5870  002AC0  D7D8               	goto	l6821
  5871  002AC2                     l6827:
  5872                           
  5873                           ;gemsecs.c: 204:  return *m_link;
  5874                           ;stkvar	_m_link @ sp[(-1)+-1]
  5875  002AC2  0EFE               	movlw	-2
  5876  002AC4  50E3               	movf	plusw1,w,c
  5877  002AC6  6ED9               	movwf	fsr2l,c
  5878  002AC8  6ADA               	clrf	fsr2h,c
  5879  002ACA  50DF               	movf	indf2,w,c
  5880  002ACC  6E3B               	movwf	btemp,c
  5881                           
  5882                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5883  002ACE  52E5               	movf	postdec1,f,c
  5884  002AD0  52E5               	movf	postdec1,f,c
  5885  002AD2  0012               	return		;funcret
  5886  002AD4                     __end_of_m_protocol:
  5887                           	opt callstack 0
  5888                           
  5889 ;; *************** function _run_checksum *****************
  5890 ;; Defined at:
  5891 ;;		line 31 in file "gemsecs.c"
  5892 ;; Parameters:    Size  Location     Type
  5893 ;;  byte_block      1  [STACK] unsigned char 
  5894 ;;  clear           1  [STACK] _Bool 
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;		None
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  2  [STACK] unsigned short 
  5899 ;; Registers used:
  5900 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  5901 ;; Tracked objects:
  5902 ;;		On entry : 6/39
  5903 ;;		On exit  : 3F/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5910 ;;Total ram usage:        0 bytes
  5911 ;; Hardware stack levels used:    1
  5912 ;; Hardware stack levels required when called:    3
  5913 ;; This function calls:
  5914 ;;		Nothing
  5915 ;; This function is called by:
  5916 ;;		_m_protocol
  5917 ;;		_r_protocol
  5918 ;; This function uses a reentrant model
  5919 ;;
  5920                           
  5921                           	psect	text11
  5922  005A9A                     __ptext11:
  5923                           	opt callstack 0
  5924  005A9A                     _run_checksum:
  5925                           	opt callstack 26
  5926                           
  5927                           ;gemsecs.c: 31: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 32: {;
      +                          gemsecs.c: 33:  static uint16_t sum = 0;;gemsecs.c: 35:  if (clear)
  5928                           ;stkvar	_clear @ sp[(0)+-2]
  5929                           
  5930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5931                           ;incstack = 0
  5932  005A9A  0EFE               	movlw	-2
  5933  005A9C  50E3               	movf	plusw1,w,c
  5934  005A9E  B4D8               	btfsc	status,2,c
  5935  005AA0  D003               	goto	l5987
  5936                           
  5937                           ;gemsecs.c: 36:   sum = 0;
  5938  005AA2  0100               	movlb	0	; () banked
  5939  005AA4  6B98               	clrf	run_checksum@sum& (0+255),b
  5940  005AA6  6B99               	clrf	(run_checksum@sum+1)& (0+255),b
  5941  005AA8                     l5987:
  5942                           
  5943                           ;gemsecs.c: 38:  sum += byte_block;
  5944                           ;stkvar	_byte_block @ sp[(0)+-1]
  5945  005AA8  0EFF               	movlw	-1
  5946  005AAA  50E3               	movf	plusw1,w,c
  5947  005AAC  0100               	movlb	0	; () banked
  5948  005AAE  2798               	addwf	run_checksum@sum& (0+255),f,b
  5949  005AB0  0E00               	movlw	0
  5950  005AB2  2399               	addwfc	(run_checksum@sum+1)& (0+255),f,b
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;gemsecs.c: 39:  return sum;
  5954  005AB4  0060  F260  F03B   	movff	run_checksum@sum,btemp
  5955  005ABA  0060  F264  F03C   	movff	run_checksum@sum+1,btemp+1
  5956                           
  5957                           ; BSR set to: 0
  5958                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  5959  005AC0  52E5               	movf	postdec1,f,c
  5960  005AC2  52E5               	movf	postdec1,f,c
  5961  005AC4  0012               	return		;funcret
  5962  005AC6                     __end_of_run_checksum:
  5963                           	opt callstack 0
  5964                           
  5965 ;; *************** function _WaitMs *****************
  5966 ;; Defined at:
  5967 ;;		line 31 in file "timers.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;  numMilliseco    2  [STACK] unsigned short 
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;		None
  5972 ;; Return value:  Size  Location     Type
  5973 ;;                  1  [STACK] void 
  5974 ;; Registers used:
  5975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/3B
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5985 ;;Total ram usage:        0 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    4
  5988 ;; This function calls:
  5989 ;;		_StartTimer
  5990 ;;		_TimerDone
  5991 ;; This function is called by:
  5992 ;;		_main
  5993 ;;		_m_protocol
  5994 ;;		_r_protocol
  5995 ;;		_t_protocol
  5996 ;; This function uses a reentrant model
  5997 ;;
  5998                           
  5999                           	psect	text12
  6000  005B74                     __ptext12:
  6001                           	opt callstack 0
  6002  005B74                     _WaitMs:
  6003                           	opt callstack 25
  6004                           
  6005                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  6006                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6007                           
  6008                           ; BSR set to: 0
  6009                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6010                           ;incstack = 0
  6011  005B74  0EFE               	movlw	-2
  6012  005B76  006F FF8F FFE6     	movff	plusw1,postinc1
  6013  005B7C  006F FF8F FFE6     	movff	plusw1,postinc1
  6014  005B82  0E00               	movlw	0
  6015  005B84  6EE6               	movwf	postinc1,c
  6016  005B86  EC13  F02D         	call	_StartTimer	;wreg free
  6017  005B8A                     l5925:
  6018                           
  6019                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  6020  005B8A  0E00               	movlw	0
  6021  005B8C  6EE6               	movwf	postinc1,c
  6022  005B8E  EC71  F02F         	call	_TimerDone	;wreg free
  6023  005B92  503B               	movf	btemp,w,c
  6024  005B94  B4D8               	btfsc	status,2,c
  6025  005B96  D7F9               	goto	l5925
  6026                           
  6027                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6028  005B98  52E5               	movf	postdec1,f,c
  6029  005B9A  52E5               	movf	postdec1,f,c
  6030  005B9C  0012               	return		;funcret
  6031  005B9E                     __end_of_WaitMs:
  6032                           	opt callstack 0
  6033                           
  6034 ;; *************** function _TimerDone *****************
  6035 ;; Defined at:
  6036 ;;		line 20 in file "timers.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;  timer           1  [STACK] unsigned char 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;		None
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  1  [STACK] _Bool 
  6043 ;; Registers used:
  6044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6054 ;;Total ram usage:        0 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; Hardware stack levels required when called:    3
  6057 ;; This function calls:
  6058 ;;		Nothing
  6059 ;; This function is called by:
  6060 ;;		_m_protocol
  6061 ;;		_r_protocol
  6062 ;;		_t_protocol
  6063 ;;		_WaitMs
  6064 ;; This function uses a reentrant model
  6065 ;;
  6066                           
  6067                           	psect	text13
  6068  005EE2                     __ptext13:
  6069                           	opt callstack 0
  6070  005EE2                     _TimerDone:
  6071                           	opt callstack 25
  6072                           
  6073                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  6074                           ;stkvar	_timer @ sp[(0)+-1]
  6075                           
  6076                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6077                           ;incstack = 0
  6078  005EE2  0EFF               	movlw	-1
  6079  005EE4  50E3               	movf	plusw1,w,c
  6080  005EE6  0D02               	mullw	2
  6081  005EE8  50F3               	movf	prodl,w,c
  6082  005EEA  0F79               	addlw	low _tickCount
  6083  005EEC  6ED9               	movwf	fsr2l,c
  6084  005EEE  6ADA               	clrf	fsr2h,c
  6085  005EF0  50DE               	movf	postinc2,w,c
  6086  005EF2  10DE               	iorwf	postinc2,w,c
  6087  005EF4  A4D8               	btfss	status,2,c
  6088  005EF6  D002               	goto	l5731
  6089                           
  6090                           ;timers.c: 23:   return 1;
  6091  005EF8  0E01               	movlw	1
  6092  005EFA  D001               	goto	L19
  6093  005EFC                     l5731:
  6094                           
  6095                           ;timers.c: 25:  return 0;
  6096  005EFC  0E00               	movlw	0
  6097  005EFE                     L19:
  6098  005EFE  6E3B               	movwf	btemp,c
  6099                           
  6100                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6101  005F00  52E5               	movf	postdec1,f,c
  6102  005F02  0012               	return		;funcret
  6103  005F04                     __end_of_TimerDone:
  6104                           	opt callstack 0
  6105                           
  6106 ;; *************** function _StartTimer *****************
  6107 ;; Defined at:
  6108 ;;		line 12 in file "timers.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;  timer           1  [STACK] unsigned char 
  6111 ;;  count           2  [STACK] unsigned short 
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;		None
  6114 ;; Return value:  Size  Location     Type
  6115 ;;                  1  [STACK] void 
  6116 ;; Registers used:
  6117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6118 ;; Tracked objects:
  6119 ;;		On entry : 0/39
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6127 ;;Total ram usage:        0 bytes
  6128 ;; Hardware stack levels used:    1
  6129 ;; Hardware stack levels required when called:    3
  6130 ;; This function calls:
  6131 ;;		Nothing
  6132 ;; This function is called by:
  6133 ;;		_m_protocol
  6134 ;;		_r_protocol
  6135 ;;		_t_protocol
  6136 ;;		_WaitMs
  6137 ;; This function uses a reentrant model
  6138 ;;
  6139                           
  6140                           	psect	text14
  6141  005A26                     __ptext14:
  6142                           	opt callstack 0
  6143  005A26                     _StartTimer:
  6144                           	opt callstack 25
  6145                           
  6146                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  6147                           ;stkvar	_count @ sp[(0)+-3]
  6148                           
  6149                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6150                           ;incstack = 0
  6151  005A26  0EFD               	movlw	-3
  6152  005A28  006F FF8C  F045    	movff	plusw1,btemp+10
  6153  005A2E  0EFE               	movlw	-2
  6154  005A30  006F FF8C  F046    	movff	plusw1,btemp+11
  6155  005A36  90D8               	bcf	status,0,c
  6156  005A38  3445               	rlcf	btemp+10,w,c
  6157  005A3A  6E43               	movwf	btemp+8,c
  6158  005A3C  3446               	rlcf	btemp+11,w,c
  6159  005A3E  6E44               	movwf	btemp+9,c
  6160                           
  6161                           ;stkvar	_timer @ sp[(0)+-1]
  6162  005A40  0EFF               	movlw	-1
  6163  005A42  50E3               	movf	plusw1,w,c
  6164  005A44  0D02               	mullw	2
  6165  005A46  50F3               	movf	prodl,w,c
  6166  005A48  0F79               	addlw	low _tickCount
  6167  005A4A  6ED9               	movwf	fsr2l,c
  6168  005A4C  6ADA               	clrf	fsr2h,c
  6169  005A4E  0060  F10F  FFDE   	movff	btemp+8,postinc2
  6170  005A54  0060  F113  FFDD   	movff	btemp+9,postdec2
  6171                           
  6172                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  6173  005A5A  52E5               	movf	postdec1,f,c
  6174  005A5C  52E5               	movf	postdec1,f,c
  6175  005A5E  52E5               	movf	postdec1,f,c
  6176  005A60  0012               	return		;funcret
  6177  005A62                     __end_of_StartTimer:
  6178                           	opt callstack 0
  6179                           
  6180 ;; *************** function _UART2_is_rx_ready *****************
  6181 ;; Defined at:
  6182 ;;		line 137 in file "mcc_generated_files/uart2.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;		None
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;		None
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  1  [STACK] unsigned char 
  6189 ;; Registers used:
  6190 ;;		btemp
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6200 ;;Total ram usage:        0 bytes
  6201 ;; Hardware stack levels used:    1
  6202 ;; Hardware stack levels required when called:    3
  6203 ;; This function calls:
  6204 ;;		Nothing
  6205 ;; This function is called by:
  6206 ;;		_m_protocol
  6207 ;; This function uses a reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text15
  6211  00614E                     __ptext15:
  6212                           	opt callstack 0
  6213  00614E                     _UART2_is_rx_ready:
  6214                           	opt callstack 26
  6215                           
  6216                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
  6217                           
  6218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6219                           ;incstack = 0
  6220  00614E  0060  F0BC  F03B   	movff	_uart2RxCount,btemp	;volatile
  6221                           
  6222                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6223  006154  0012               	return		;funcret
  6224  006156                     __end_of_UART2_is_rx_ready:
  6225                           	opt callstack 0
  6226                           
  6227 ;; *************** function _UART2_Read *****************
  6228 ;; Defined at:
  6229 ;;		line 152 in file "mcc_generated_files/uart2.c"
  6230 ;; Parameters:    Size  Location     Type
  6231 ;;		None
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;  readValue       1  [STACK] unsigned char 
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  1  [STACK] unsigned char 
  6236 ;; Registers used:
  6237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 3F/39
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6247 ;;Total ram usage:        0 bytes
  6248 ;; Hardware stack levels used:    1
  6249 ;; Hardware stack levels required when called:    3
  6250 ;; This function calls:
  6251 ;;		Nothing
  6252 ;; This function is called by:
  6253 ;;		_m_protocol
  6254 ;; This function uses a reentrant model
  6255 ;;
  6256                           
  6257                           	psect	text16
  6258  00596A                     __ptext16:
  6259                           	opt callstack 0
  6260  00596A                     _UART2_Read:
  6261                           	opt callstack 0
  6262                           
  6263                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6264  00596A  52E6               	movf	postinc1,f,c
  6265  00596C                     
  6266                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  6267                           
  6268                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  6269  00596C  502F               	movf	_uart2RxCount,w,c	;volatile
  6270  00596E  B4D8               	btfsc	status,2,c
  6271  005970  D7FD               	goto	l5887
  6272                           
  6273                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
  6274  005972  0E00               	movlw	low _uart2RxBuffer
  6275  005974  2430               	addwf	_uart2RxTail,w,c	;volatile
  6276  005976  6ED9               	movwf	fsr2l,c
  6277  005978  6ADA               	clrf	fsr2h,c
  6278  00597A  0E02               	movlw	high _uart2RxBuffer
  6279  00597C  22DA               	addwfc	fsr2h,f,c
  6280  00597E  50DF               	movf	indf2,w,c
  6281  005980  6E46               	movwf	btemp+11,c
  6282                           
  6283                           ;stkvar	_readValue @ sp[(-1)+0]
  6284  005982  0EFF               	movlw	-1
  6285  005984  0060  F11B  FFE3   	movff	btemp+11,plusw1
  6286  00598A  2A30               	incf	_uart2RxTail,f,c	;volatile
  6287                           
  6288                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  6289  00598C  0E3F               	movlw	63
  6290  00598E  6430               	cpfsgt	_uart2RxTail,c
  6291  005990  D001               	goto	l692
  6292                           
  6293                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
  6294  005992  6A30               	clrf	_uart2RxTail,c	;volatile
  6295  005994                     l692:
  6296                           
  6297                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
  6298  005994  0139               	movlb	57	; () banked
  6299  005996  9596               	bcf	150,2,b	;volatile
  6300                           
  6301                           ; BSR set to: 57
  6302                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
  6303  005998  062F               	decf	_uart2RxCount,f,c	;volatile
  6304                           
  6305                           ; BSR set to: 57
  6306                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
  6307  00599A  8596               	bsf	150,2,b	;volatile
  6308                           
  6309                           ; BSR set to: 57
  6310                           ;mcc_generated_files/uart2.c: 169:     return readValue;
  6311                           ;stkvar	_readValue @ sp[(-1)+0]
  6312  00599C  0EFF               	movlw	-1
  6313  00599E  006F FF8C  F03B    	movff	plusw1,btemp
  6314                           
  6315                           ; BSR set to: 57
  6316                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6317  0059A4  52E5               	movf	postdec1,f,c
  6318  0059A6  0012               	return		;funcret
  6319  0059A8                     __end_of_UART2_Read:
  6320                           	opt callstack 0
  6321                           
  6322 ;; *************** function _UART1_is_rx_ready *****************
  6323 ;; Defined at:
  6324 ;;		line 146 in file "mcc_generated_files/uart1.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;		None
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;		None
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  1  [STACK] unsigned char 
  6331 ;; Registers used:
  6332 ;;		btemp
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6342 ;;Total ram usage:        0 bytes
  6343 ;; Hardware stack levels used:    1
  6344 ;; Hardware stack levels required when called:    3
  6345 ;; This function calls:
  6346 ;;		Nothing
  6347 ;; This function is called by:
  6348 ;;		_m_protocol
  6349 ;;		_r_protocol
  6350 ;;		_t_protocol
  6351 ;; This function uses a reentrant model
  6352 ;;
  6353                           
  6354                           	psect	text17
  6355  006156                     __ptext17:
  6356                           	opt callstack 0
  6357  006156                     _UART1_is_rx_ready:
  6358                           	opt callstack 26
  6359                           
  6360                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  6361                           
  6362                           ; BSR set to: 57
  6363                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6364                           ;incstack = 0
  6365  006156  0060  F0D4  F03B   	movff	_uart1RxCount,btemp	;volatile
  6366                           
  6367                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6368  00615C  0012               	return		;funcret
  6369  00615E                     __end_of_UART1_is_rx_ready:
  6370                           	opt callstack 0
  6371                           
  6372 ;; *************** function _UART1_Read *****************
  6373 ;; Defined at:
  6374 ;;		line 161 in file "mcc_generated_files/uart1.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;		None
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;  readValue       1  [STACK] unsigned char 
  6379 ;; Return value:  Size  Location     Type
  6380 ;;                  1  [STACK] unsigned char 
  6381 ;; Registers used:
  6382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  6383 ;; Tracked objects:
  6384 ;;		On entry : 0/0
  6385 ;;		On exit  : 3F/39
  6386 ;;		Unchanged: 0/0
  6387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6392 ;;Total ram usage:        0 bytes
  6393 ;; Hardware stack levels used:    1
  6394 ;; Hardware stack levels required when called:    3
  6395 ;; This function calls:
  6396 ;;		Nothing
  6397 ;; This function is called by:
  6398 ;;		_m_protocol
  6399 ;;		_r_protocol
  6400 ;;		_t_protocol
  6401 ;; This function uses a reentrant model
  6402 ;;
  6403                           
  6404                           	psect	text18
  6405  0059A8                     __ptext18:
  6406                           	opt callstack 0
  6407  0059A8                     _UART1_Read:
  6408                           	opt callstack 0
  6409                           
  6410                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6411  0059A8  52E6               	movf	postinc1,f,c
  6412  0059AA                     
  6413                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  6414                           
  6415                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  6416  0059AA  5035               	movf	_uart1RxCount,w,c	;volatile
  6417  0059AC  B4D8               	btfsc	status,2,c
  6418  0059AE  D7FD               	goto	l5863
  6419                           
  6420                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  6421  0059B0  0E40               	movlw	low _uart1RxBuffer
  6422  0059B2  2436               	addwf	_uart1RxTail,w,c	;volatile
  6423  0059B4  6ED9               	movwf	fsr2l,c
  6424  0059B6  6ADA               	clrf	fsr2h,c
  6425  0059B8  0E02               	movlw	high _uart1RxBuffer
  6426  0059BA  22DA               	addwfc	fsr2h,f,c
  6427  0059BC  50DF               	movf	indf2,w,c
  6428  0059BE  6E46               	movwf	btemp+11,c
  6429                           
  6430                           ;stkvar	_readValue @ sp[(-1)+0]
  6431  0059C0  0EFF               	movlw	-1
  6432  0059C2  0060  F11B  FFE3   	movff	btemp+11,plusw1
  6433  0059C8  2A36               	incf	_uart1RxTail,f,c	;volatile
  6434                           
  6435                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  6436  0059CA  0E3F               	movlw	63
  6437  0059CC  6436               	cpfsgt	_uart1RxTail,c
  6438  0059CE  D001               	goto	l572
  6439                           
  6440                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  6441  0059D0  6A36               	clrf	_uart1RxTail,c	;volatile
  6442  0059D2                     l572:
  6443                           
  6444                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  6445  0059D2  0139               	movlb	57	; () banked
  6446  0059D4  9793               	bcf	147,3,b	;volatile
  6447                           
  6448                           ; BSR set to: 57
  6449                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  6450  0059D6  0635               	decf	_uart1RxCount,f,c	;volatile
  6451                           
  6452                           ; BSR set to: 57
  6453                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  6454  0059D8  8793               	bsf	147,3,b	;volatile
  6455                           
  6456                           ; BSR set to: 57
  6457                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  6458                           ;stkvar	_readValue @ sp[(-1)+0]
  6459  0059DA  0EFF               	movlw	-1
  6460  0059DC  006F FF8C  F03B    	movff	plusw1,btemp
  6461                           
  6462                           ; BSR set to: 57
  6463                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6464  0059E2  52E5               	movf	postdec1,f,c
  6465  0059E4  0012               	return		;funcret
  6466  0059E6                     __end_of_UART1_Read:
  6467                           	opt callstack 0
  6468                           
  6469 ;; *************** function _init_display *****************
  6470 ;; Defined at:
  6471 ;;		line 35 in file "eadog.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;		None
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;		None
  6476 ;; Return value:  Size  Location     Type
  6477 ;;                  1  [STACK] void 
  6478 ;; Registers used:
  6479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6480 ;; Tracked objects:
  6481 ;;		On entry : 0/0
  6482 ;;		On exit  : 3F/3D
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6489 ;;Total ram usage:        0 bytes
  6490 ;; Hardware stack levels used:    1
  6491 ;; Hardware stack levels required when called:    5
  6492 ;; This function calls:
  6493 ;;		_ringBufS_init
  6494 ;;		_send_lcd_cmd
  6495 ;;		_send_lcd_cmd_long
  6496 ;;		_wdtdelay
  6497 ;; This function is called by:
  6498 ;;		_main
  6499 ;; This function uses a reentrant model
  6500 ;;
  6501                           
  6502                           	psect	text19
  6503  004BB8                     __ptext19:
  6504                           	opt callstack 0
  6505  004BB8                     _init_display:
  6506                           	opt callstack 25
  6507                           
  6508                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  6509                           
  6510                           ; BSR set to: 57
  6511                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6512                           ;incstack = 0
  6513  004BB8  0E83               	movlw	low _ring_buf1
  6514  004BBA  0100               	movlb	0	; () banked
  6515  004BBC  6F73               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6516  004BBE  0E03               	movlw	high _ring_buf1
  6517  004BC0  6F74               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6518                           
  6519                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  6520  004BC2  0E40               	movlw	low _ring_buf2
  6521  004BC4  6F71               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6522  004BC6  0E03               	movlw	high _ring_buf2
  6523  004BC8  6F72               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6524                           
  6525                           ; BSR set to: 0
  6526                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  6527  004BCA  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  6528  004BD0  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  6529  004BD6  EC0D  F02E         	call	_ringBufS_init	;wreg free
  6530                           
  6531                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  6532  004BDA  0060  F1C7  FFE6   	movff	_spi_link+4,postinc1
  6533  004BE0  0060  F1CB  FFE6   	movff	_spi_link+5,postinc1
  6534  004BE6  EC0D  F02E         	call	_ringBufS_init	;wreg free
  6535                           
  6536                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  6537  004BEA  80BE               	bsf	16318,0,c	;volatile
  6538  004BEC  84BC               	bsf	16316,2,c	;volatile
  6539                           
  6540                           ;eadog.c: 44:  wdtdelay(350000);
  6541  004BEE  0E30               	movlw	48
  6542  004BF0  6EE6               	movwf	postinc1,c
  6543  004BF2  0E57               	movlw	87
  6544  004BF4  6EE6               	movwf	postinc1,c
  6545  004BF6  0E05               	movlw	5
  6546  004BF8  6EE6               	movwf	postinc1,c
  6547  004BFA  0E00               	movlw	0
  6548  004BFC  6EE6               	movwf	postinc1,c
  6549  004BFE  EC4C  F02B         	call	_wdtdelay	;wreg free
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  6553  004C02  0E39               	movlw	57
  6554  004C04  6EE6               	movwf	postinc1,c
  6555  004C06  ECF9  F02D         	call	_send_lcd_cmd	;wreg free
  6556                           
  6557                           ; BSR set to: 0
  6558                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  6559  004C0A  0E1D               	movlw	29
  6560  004C0C  6EE6               	movwf	postinc1,c
  6561  004C0E  ECF9  F02D         	call	_send_lcd_cmd	;wreg free
  6562                           
  6563                           ; BSR set to: 0
  6564                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  6565  004C12  0E50               	movlw	80
  6566  004C14  6EE6               	movwf	postinc1,c
  6567  004C16  ECF9  F02D         	call	_send_lcd_cmd	;wreg free
  6568                           
  6569                           ; BSR set to: 0
  6570                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  6571  004C1A  0E6C               	movlw	108
  6572  004C1C  6EE6               	movwf	postinc1,c
  6573  004C1E  ECF9  F02D         	call	_send_lcd_cmd	;wreg free
  6574                           
  6575                           ; BSR set to: 0
  6576                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  6577  004C22  0E76               	movlw	118
  6578  004C24  6EE6               	movwf	postinc1,c
  6579  004C26  ECF9  F02D         	call	_send_lcd_cmd	;wreg free
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  6583  004C2A  0E38               	movlw	56
  6584  004C2C  6EE6               	movwf	postinc1,c
  6585  004C2E  ECE5  F02D         	call	_send_lcd_cmd_long	;wreg free
  6586                           
  6587                           ; BSR set to: 0
  6588                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  6589  004C32  0E0F               	movlw	15
  6590  004C34  6EE6               	movwf	postinc1,c
  6591  004C36  ECF9  F02D         	call	_send_lcd_cmd	;wreg free
  6592                           
  6593                           ; BSR set to: 0
  6594                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  6595  004C3A  0E01               	movlw	1
  6596  004C3C  6EE6               	movwf	postinc1,c
  6597  004C3E  ECE5  F02D         	call	_send_lcd_cmd_long	;wreg free
  6598                           
  6599                           ; BSR set to: 0
  6600                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  6601  004C42  0E02               	movlw	2
  6602  004C44  6EE6               	movwf	postinc1,c
  6603  004C46  ECF9  F02D         	call	_send_lcd_cmd	;wreg free
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  6607  004C4A  0E06               	movlw	6
  6608  004C4C  6EE6               	movwf	postinc1,c
  6609  004C4E  ECF9  F02D         	call	_send_lcd_cmd	;wreg free
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;eadog.c: 55:  wdtdelay(30);
  6613  004C52  0E1E               	movlw	30
  6614  004C54  6EE6               	movwf	postinc1,c
  6615  004C56  0E00               	movlw	0
  6616  004C58  6EE6               	movwf	postinc1,c
  6617  004C5A  0E00               	movlw	0
  6618  004C5C  6EE6               	movwf	postinc1,c
  6619  004C5E  0E00               	movlw	0
  6620  004C60  6EE6               	movwf	postinc1,c
  6621  004C62  EC4C  F02B         	call	_wdtdelay	;wreg free
  6622                           
  6623                           ; BSR set to: 0
  6624                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  6625  004C66  0E02               	movlw	2
  6626  004C68  013D               	movlb	61	; () banked
  6627  004C6A  6F16               	movwf	22,b	;volatile
  6628                           
  6629                           ; BSR set to: 61
  6630                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  6631  004C6C  0E40               	movlw	64
  6632  004C6E  6F15               	movwf	21,b	;volatile
  6633                           
  6634                           ; BSR set to: 61
  6635                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  6636  004C70  0E83               	movlw	131
  6637  004C72  6F14               	movwf	20,b	;volatile
  6638                           
  6639                           ; BSR set to: 61
  6640                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  6641  004C74  931A               	bcf	26,1,b	;volatile
  6642                           
  6643                           ; BSR set to: 61
  6644                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  6645  004C76  0E3F               	movlw	-193
  6646  004C78  013B               	movlb	59	; () banked
  6647  004C7A  17FD               	andwf	253,f,b	;volatile
  6648                           
  6649                           ; BSR set to: 59
  6650                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  6651  004C7C  9BFD               	bcf	253,5,b	;volatile
  6652                           
  6653                           ; BSR set to: 59
  6654                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  6655  004C7E  51FD               	movf	253,w,b	;volatile
  6656  004C80  0BF9               	andlw	-7
  6657  004C82  0902               	iorlw	2
  6658  004C84  6FFD               	movwf	253,b	;volatile
  6659                           
  6660                           ; BSR set to: 59
  6661                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  6662  004C86  0EE7               	movlw	-25
  6663  004C88  17FD               	andwf	253,f,b	;volatile
  6664                           
  6665                           ; BSR set to: 59
  6666                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  6667  004C8A  81FD               	bsf	253,0,b	;volatile
  6668                           
  6669                           ; BSR set to: 59
  6670                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  6671  004C8C  0E83               	movlw	low _ring_buf1
  6672  004C8E  6FF9               	movwf	249,b	;volatile
  6673  004C90  0E03               	movlw	high _ring_buf1
  6674  004C92  6FFA               	movwf	250,b	;volatile
  6675  004C94  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6676  004C96  6FFB               	movwf	251,b	;volatile
  6677                           
  6678                           ; BSR set to: 59
  6679                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  6680  004C98  9BFC               	bcf	252,5,b	;volatile
  6681                           
  6682                           ; BSR set to: 59
  6683                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  6684  004C9A  013D               	movlb	61	; () banked
  6685  004C9C  831A               	bsf	26,1,b	;volatile
  6686                           
  6687                           ; BSR set to: 61
  6688                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  6689  004C9E  90BE               	bcf	16318,0,c	;volatile
  6690                           
  6691                           ; BSR set to: 61
  6692                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6693  004CA0  0012               	return		;funcret
  6694  004CA2                     __end_of_init_display:
  6695                           	opt callstack 0
  6696                           
  6697 ;; *************** function _send_lcd_cmd_long *****************
  6698 ;; Defined at:
  6699 ;;		line 97 in file "eadog.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;  cmd             1  [STACK] unsigned char 
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;		None
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  1  [STACK] void 
  6706 ;; Registers used:
  6707 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6708 ;; Tracked objects:
  6709 ;;		On entry : 3F/0
  6710 ;;		On exit  : 3F/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6717 ;;Total ram usage:        0 bytes
  6718 ;; Hardware stack levels used:    1
  6719 ;; Hardware stack levels required when called:    4
  6720 ;; This function calls:
  6721 ;;		_SPI1_Exchange8bit
  6722 ;;		_wdtdelay
  6723 ;; This function is called by:
  6724 ;;		_init_display
  6725 ;; This function uses a reentrant model
  6726 ;;
  6727                           
  6728                           	psect	text20
  6729  005BCA                     __ptext20:
  6730                           	opt callstack 0
  6731  005BCA                     _send_lcd_cmd_long:
  6732                           	opt callstack 25
  6733                           
  6734                           ; BSR set to: 61
  6735                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6736                           ;incstack = 0
  6737                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  6738  005BCA  92BC               	bcf	16316,1,c	;volatile
  6739                           
  6740                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  6741  005BCC  94BC               	bcf	16316,2,c	;volatile
  6742                           
  6743                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  6744                           ;stkvar	_cmd @ sp[(0)+-1]
  6745  005BCE  0EFF               	movlw	-1
  6746  005BD0  50E3               	movf	plusw1,w,c
  6747  005BD2  6EE6               	movwf	postinc1,c
  6748  005BD4  ECE6  F02F         	call	_SPI1_Exchange8bit	;wreg free
  6749                           
  6750                           ; BSR set to: 57
  6751                           ;eadog.c: 102:  wdtdelay(800);
  6752  005BD8  0E20               	movlw	32
  6753  005BDA  6EE6               	movwf	postinc1,c
  6754  005BDC  0E03               	movlw	3
  6755  005BDE  6EE6               	movwf	postinc1,c
  6756  005BE0  0E00               	movlw	0
  6757  005BE2  6EE6               	movwf	postinc1,c
  6758  005BE4  0E00               	movlw	0
  6759  005BE6  6EE6               	movwf	postinc1,c
  6760  005BE8  EC4C  F02B         	call	_wdtdelay	;wreg free
  6761                           
  6762                           ; BSR set to: 0
  6763  005BEC  82BC               	bsf	16316,1,c	;volatile
  6764                           
  6765                           ; BSR set to: 0
  6766                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6767  005BEE  52E5               	movf	postdec1,f,c
  6768  005BF0  0012               	return		;funcret
  6769  005BF2                     __end_of_send_lcd_cmd_long:
  6770                           	opt callstack 0
  6771                           
  6772 ;; *************** function _send_lcd_cmd *****************
  6773 ;; Defined at:
  6774 ;;		line 85 in file "eadog.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;  cmd             1  [STACK] unsigned char 
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;		None
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  1  [STACK] void 
  6781 ;; Registers used:
  6782 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6783 ;; Tracked objects:
  6784 ;;		On entry : 3F/0
  6785 ;;		On exit  : 3F/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6792 ;;Total ram usage:        0 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; Hardware stack levels required when called:    4
  6795 ;; This function calls:
  6796 ;;		_SPI1_Exchange8bit
  6797 ;;		_wdtdelay
  6798 ;; This function is called by:
  6799 ;;		_init_display
  6800 ;; This function uses a reentrant model
  6801 ;;
  6802                           
  6803                           	psect	text21
  6804  005BF2                     __ptext21:
  6805                           	opt callstack 0
  6806  005BF2                     _send_lcd_cmd:
  6807                           	opt callstack 25
  6808                           
  6809                           ; BSR set to: 0
  6810                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6811                           ;incstack = 0
  6812                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  6813  005BF2  92BC               	bcf	16316,1,c	;volatile
  6814                           
  6815                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  6816  005BF4  94BC               	bcf	16316,2,c	;volatile
  6817                           
  6818                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  6819                           ;stkvar	_cmd @ sp[(0)+-1]
  6820  005BF6  0EFF               	movlw	-1
  6821  005BF8  50E3               	movf	plusw1,w,c
  6822  005BFA  6EE6               	movwf	postinc1,c
  6823  005BFC  ECE6  F02F         	call	_SPI1_Exchange8bit	;wreg free
  6824                           
  6825                           ; BSR set to: 57
  6826                           ;eadog.c: 90:  wdtdelay(30);
  6827  005C00  0E1E               	movlw	30
  6828  005C02  6EE6               	movwf	postinc1,c
  6829  005C04  0E00               	movlw	0
  6830  005C06  6EE6               	movwf	postinc1,c
  6831  005C08  0E00               	movlw	0
  6832  005C0A  6EE6               	movwf	postinc1,c
  6833  005C0C  0E00               	movlw	0
  6834  005C0E  6EE6               	movwf	postinc1,c
  6835  005C10  EC4C  F02B         	call	_wdtdelay	;wreg free
  6836                           
  6837                           ; BSR set to: 0
  6838  005C14  82BC               	bsf	16316,1,c	;volatile
  6839                           
  6840                           ; BSR set to: 0
  6841                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6842  005C16  52E5               	movf	postdec1,f,c
  6843  005C18  0012               	return		;funcret
  6844  005C1A                     __end_of_send_lcd_cmd:
  6845                           	opt callstack 0
  6846                           
  6847 ;; *************** function _SPI1_Exchange8bit *****************
  6848 ;; Defined at:
  6849 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;  data            1  [STACK] unsigned char 
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;		None
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  1  [STACK] unsigned char 
  6856 ;; Registers used:
  6857 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 3F/39
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6867 ;;Total ram usage:        0 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; Hardware stack levels required when called:    3
  6870 ;; This function calls:
  6871 ;;		Nothing
  6872 ;; This function is called by:
  6873 ;;		_send_lcd_cmd
  6874 ;;		_send_lcd_cmd_long
  6875 ;; This function uses a reentrant model
  6876 ;;
  6877                           
  6878                           	psect	text22
  6879  005FCC                     __ptext22:
  6880                           	opt callstack 0
  6881  005FCC                     _SPI1_Exchange8bit:
  6882                           	opt callstack 25
  6883                           
  6884                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6885                           
  6886                           ; BSR set to: 0
  6887                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6888                           ;incstack = 0
  6889  005FCC  0E01               	movlw	1
  6890  005FCE  013D               	movlb	61	; () banked
  6891  005FD0  6F12               	movwf	18,b	;volatile
  6892                           
  6893                           ; BSR set to: 61
  6894                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6895                           ;stkvar	_data @ sp[(0)+-1]
  6896  005FD2  0EFF               	movlw	-1
  6897  005FD4  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6898  005FDA                     l847:
  6899                           
  6900                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6901  005FDA  0139               	movlb	57	; () banked
  6902  005FDC  A9A2               	btfss	162,4,b	;volatile
  6903  005FDE  D7FD               	goto	l847
  6904                           
  6905                           ; BSR set to: 57
  6906                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6907  005FE0  006F F440  F03B    	movff	15632,btemp	;volatile
  6908                           
  6909                           ; BSR set to: 57
  6910                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6911  005FE6  52E5               	movf	postdec1,f,c
  6912  005FE8  0012               	return		;funcret
  6913  005FEA                     __end_of_SPI1_Exchange8bit:
  6914                           	opt callstack 0
  6915                           
  6916 ;; *************** function _ringBufS_init *****************
  6917 ;; Defined at:
  6918 ;;		line 22 in file "ringbufs.c"
  6919 ;; Parameters:    Size  Location     Type
  6920 ;;  _this           2  [STACK] PTR volatile struct ring
  6921 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6922 ;; Auto vars:     Size  Location     Type
  6923 ;;		None
  6924 ;; Return value:  Size  Location     Type
  6925 ;;                  1  [STACK] void 
  6926 ;; Registers used:
  6927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6928 ;; Tracked objects:
  6929 ;;		On entry : 0/0
  6930 ;;		On exit  : 0/0
  6931 ;;		Unchanged: 0/0
  6932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6937 ;;Total ram usage:        0 bytes
  6938 ;; Hardware stack levels used:    1
  6939 ;; Hardware stack levels required when called:    4
  6940 ;; This function calls:
  6941 ;;		_memset
  6942 ;; This function is called by:
  6943 ;;		_init_display
  6944 ;; This function uses a reentrant model
  6945 ;;
  6946                           
  6947                           	psect	text23
  6948  005C1A                     __ptext23:
  6949                           	opt callstack 0
  6950  005C1A                     _ringBufS_init:
  6951                           	opt callstack 25
  6952                           
  6953                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6954                           
  6955                           ; BSR set to: 57
  6956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6957                           ;incstack = 0
  6958  005C1A  0E43               	movlw	67
  6959  005C1C  6EE6               	movwf	postinc1,c
  6960  005C1E  0E00               	movlw	0
  6961  005C20  6EE6               	movwf	postinc1,c
  6962  005C22  0E00               	movlw	0
  6963  005C24  6EE6               	movwf	postinc1,c
  6964  005C26  0E00               	movlw	0
  6965  005C28  6EE6               	movwf	postinc1,c
  6966                           
  6967                           ;stkvar	__this @ sp[(-4)+-2]
  6968  005C2A  0EFA               	movlw	-6
  6969  005C2C  006F FF8F FFE6     	movff	plusw1,postinc1
  6970  005C32  006F FF8F FFE6     	movff	plusw1,postinc1
  6971  005C38  EC82  F01B         	call	_memset	;wreg free
  6972                           
  6973                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6974  005C3C  52E5               	movf	postdec1,f,c
  6975  005C3E  52E5               	movf	postdec1,f,c
  6976  005C40  0012               	return		;funcret
  6977  005C42                     __end_of_ringBufS_init:
  6978                           	opt callstack 0
  6979                           
  6980 ;; *************** function _eaDogM_WriteStringAtPos *****************
  6981 ;; Defined at:
  6982 ;;		line 221 in file "eadog.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;  r               1  [STACK] unsigned char 
  6985 ;;  c               1  [STACK] unsigned char 
  6986 ;;  strPtr          1  [STACK] PTR unsigned char 
  6987 ;;		 -> V(88), 
  6988 ;; Auto vars:     Size  Location     Type
  6989 ;;		None
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  1  [STACK] void 
  6992 ;; Registers used:
  6993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  6994 ;; Tracked objects:
  6995 ;;		On entry : 3F/0
  6996 ;;		On exit  : 3F/3B
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7003 ;;Total ram usage:        0 bytes
  7004 ;; Hardware stack levels used:    1
  7005 ;; Hardware stack levels required when called:   13
  7006 ;; This function calls:
  7007 ;;		_eaDogM_WriteString
  7008 ;;		_send_lcd_cmd_dma
  7009 ;; This function is called by:
  7010 ;;		_main
  7011 ;; This function uses a reentrant model
  7012 ;;
  7013                           
  7014                           	psect	text24
  7015  005AC6                     __ptext24:
  7016                           	opt callstack 0
  7017  005AC6                     _eaDogM_WriteStringAtPos:
  7018                           	opt callstack 17
  7019                           
  7020                           ;eadog.c: 221: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           222: {;eadog.c: 223:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7021                           ;stkvar	_c @ sp[(0)+-2]
  7022                           
  7023                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7024                           ;incstack = 0
  7025  005AC6  0EFE               	movlw	-2
  7026  005AC8  006F FF8C  F046    	movff	plusw1,btemp+11
  7027                           
  7028                           ;stkvar	_r @ sp[(0)+-1]
  7029  005ACE  0EFF               	movlw	-1
  7030  005AD0  50E3               	movf	plusw1,w,c
  7031  005AD2  0D10               	mullw	16
  7032  005AD4  50F3               	movf	prodl,w,c
  7033  005AD6  2446               	addwf	btemp+11,w,c
  7034  005AD8  0F80               	addlw	128
  7035  005ADA  6EE6               	movwf	postinc1,c
  7036  005ADC  EC7A  F02B         	call	_send_lcd_cmd_dma	;wreg free
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;eadog.c: 224:  eaDogM_WriteString(strPtr);
  7040                           ;stkvar	_strPtr @ sp[(0)+-3]
  7041  005AE0  0EFD               	movlw	-3
  7042  005AE2  50E3               	movf	plusw1,w,c
  7043  005AE4  6EE6               	movwf	postinc1,c
  7044  005AE6  ECDF  F028         	call	_eaDogM_WriteString	;wreg free
  7045                           
  7046                           ; BSR set to: 59
  7047                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  7048  005AEA  52E5               	movf	postdec1,f,c
  7049  005AEC  52E5               	movf	postdec1,f,c
  7050  005AEE  52E5               	movf	postdec1,f,c
  7051  005AF0  0012               	return		;funcret
  7052  005AF2                     __end_of_eaDogM_WriteStringAtPos:
  7053                           	opt callstack 0
  7054                           
  7055 ;; *************** function _eaDogM_WriteString *****************
  7056 ;; Defined at:
  7057 ;;		line 167 in file "eadog.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;  strPtr          1  [STACK] PTR unsigned char 
  7060 ;;		 -> V(88), 
  7061 ;; Auto vars:     Size  Location     Type
  7062 ;;		None
  7063 ;; Return value:  Size  Location     Type
  7064 ;;                  1  [STACK] void 
  7065 ;; Registers used:
  7066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7067 ;; Tracked objects:
  7068 ;;		On entry : 3F/0
  7069 ;;		On exit  : 3F/3B
  7070 ;;		Unchanged: 0/0
  7071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7076 ;;Total ram usage:        0 bytes
  7077 ;; Hardware stack levels used:    1
  7078 ;; Hardware stack levels required when called:   12
  7079 ;; This function calls:
  7080 ;;		_printf
  7081 ;;		_ringBufS_flush
  7082 ;;		_start_lcd
  7083 ;;		_strlen
  7084 ;;		_wait_lcd_set
  7085 ;; This function is called by:
  7086 ;;		_eaDogM_WriteStringAtPos
  7087 ;; This function uses a reentrant model
  7088 ;;
  7089                           
  7090                           	psect	text25
  7091  0051BE                     __ptext25:
  7092                           	opt callstack 0
  7093  0051BE                     _eaDogM_WriteString:
  7094                           	opt callstack 17
  7095                           
  7096                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  7097                           
  7098                           ; BSR set to: 59
  7099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7100                           ;incstack = 0
  7101  0051BE  ECB3  F030         	call	_wait_lcd_set	;wreg free
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  7105  0051C2  0E00               	movlw	0
  7106  0051C4  6EE6               	movwf	postinc1,c
  7107  0051C6  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  7108  0051CC  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  7109  0051D2  ECC5  F029         	call	_ringBufS_flush	;wreg free
  7110  0051D6  94BC               	bcf	16316,2,c	;volatile
  7111                           
  7112                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7113                           ;stkvar	_strPtr @ sp[(0)+-1]
  7114  0051D8  0EFF               	movlw	-1
  7115  0051DA  006F FF8C  F046    	movff	plusw1,btemp+11
  7116  0051E0  0060  F11B  FFE6   	movff	btemp+11,postinc1
  7117  0051E6  0E00               	movlw	0
  7118  0051E8  6EE6               	movwf	postinc1,c
  7119  0051EA  EC3E  F028         	call	_strlen	;wreg free
  7120  0051EE  503C               	movf	btemp+1,w,c
  7121  0051F0  E104               	bnz	u4940
  7122  0051F2  0E41               	movlw	65
  7123  0051F4  5C3B               	subwf	btemp,w,c
  7124  0051F6  A0D8               	btfss	status,0,c
  7125  0051F8  D008               	goto	l7877
  7126  0051FA                     u4940:
  7127                           
  7128                           ;stkvar	_strPtr @ sp[(0)+-1]
  7129  0051FA  0EFF               	movlw	-1
  7130  0051FC  50E3               	movf	plusw1,w,c
  7131  0051FE  6ED9               	movwf	fsr2l,c
  7132  005200  6ADA               	clrf	fsr2h,c
  7133  005202  0E40               	movlw	64
  7134  005204  26D9               	addwf	fsr2l,f,c
  7135  005206  0E00               	movlw	0
  7136  005208  6EDF               	movwf	indf2,c
  7137  00520A                     l7877:
  7138                           
  7139                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  7140  00520A  013B               	movlb	59	; () banked
  7141  00520C  9FFC               	bcf	252,7,b	;volatile
  7142                           
  7143                           ; BSR set to: 59
  7144                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  7145                           ;stkvar	_strPtr @ sp[(0)+-1]
  7146  00520E  0EFF               	movlw	-1
  7147  005210  006F FF8C  F046    	movff	plusw1,btemp+11
  7148  005216  0060  F11B  FFE6   	movff	btemp+11,postinc1
  7149  00521C  0E00               	movlw	0
  7150  00521E  6EE6               	movwf	postinc1,c
  7151  005220  EC3E  F028         	call	_strlen	;wreg free
  7152  005224  0060  F0EF  FBF7   	movff	btemp,15351	;volatile
  7153  00522A  0060  F0F3  FBF8   	movff	btemp+1,15352	;volatile
  7154                           
  7155                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  7156  005230  013B               	movlb	59	; () banked
  7157  005232  8FFC               	bsf	252,7,b	;volatile
  7158                           
  7159                           ; BSR set to: 59
  7160                           ;eadog.c: 177:  printf("%s", strPtr);
  7161                           ;stkvar	_strPtr @ sp[(0)+-1]
  7162  005234  0EFF               	movlw	-1
  7163  005236  006F FF8C  F046    	movff	plusw1,btemp+11
  7164  00523C  0060  F11B  FFE6   	movff	btemp+11,postinc1
  7165  005242  0E00               	movlw	0
  7166  005244  6EE6               	movwf	postinc1,c
  7167  005246  0E88               	movlw	(STR_2+9)& (0+255)
  7168  005248  6EE6               	movwf	postinc1,c
  7169  00524A  0E03               	movlw	3
  7170  00524C  6EE6               	movwf	postinc1,c
  7171  00524E  ECEC  F02A         	call	_printf	;wreg free
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;eadog.c: 178:  start_lcd();
  7175  005252  ECB6  F030         	call	_start_lcd	;wreg free
  7176                           
  7177                           ; BSR set to: 59
  7178                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7179  005256  52E5               	movf	postdec1,f,c
  7180  005258  0012               	return		;funcret
  7181  00525A                     __end_of_eaDogM_WriteString:
  7182                           	opt callstack 0
  7183                           
  7184 ;; *************** function _eaDogM_WriteCommand *****************
  7185 ;; Defined at:
  7186 ;;		line 143 in file "eadog.c"
  7187 ;; Parameters:    Size  Location     Type
  7188 ;;  cmd             1  [STACK] unsigned char 
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;		None
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  1  [STACK] void 
  7193 ;; Registers used:
  7194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7195 ;; Tracked objects:
  7196 ;;		On entry : 3F/3D
  7197 ;;		On exit  : 3F/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7204 ;;Total ram usage:        0 bytes
  7205 ;; Hardware stack levels used:    1
  7206 ;; Hardware stack levels required when called:   13
  7207 ;; This function calls:
  7208 ;;		_send_lcd_cmd_dma
  7209 ;; This function is called by:
  7210 ;;		_main
  7211 ;; This function uses a reentrant model
  7212 ;;
  7213                           
  7214                           	psect	text26
  7215  0060CC                     __ptext26:
  7216                           	opt callstack 0
  7217  0060CC                     _eaDogM_WriteCommand:
  7218                           	opt callstack 17
  7219                           
  7220                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  7221                           ;stkvar	_cmd @ sp[(0)+-1]
  7222                           
  7223                           ; BSR set to: 59
  7224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7225                           ;incstack = 0
  7226  0060CC  0EFF               	movlw	-1
  7227  0060CE  50E3               	movf	plusw1,w,c
  7228  0060D0  6EE6               	movwf	postinc1,c
  7229  0060D2  EC7A  F02B         	call	_send_lcd_cmd_dma	;wreg free
  7230                           
  7231                           ; BSR set to: 0
  7232                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  7233  0060D6  52E5               	movf	postdec1,f,c
  7234  0060D8  0012               	return		;funcret
  7235  0060DA                     __end_of_eaDogM_WriteCommand:
  7236                           	opt callstack 0
  7237                           
  7238 ;; *************** function _send_lcd_cmd_dma *****************
  7239 ;; Defined at:
  7240 ;;		line 187 in file "eadog.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;  strPtr          1  [STACK] unsigned char 
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;		None
  7245 ;; Return value:  Size  Location     Type
  7246 ;;                  1  [STACK] void 
  7247 ;; Registers used:
  7248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 3F/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7258 ;;Total ram usage:        0 bytes
  7259 ;; Hardware stack levels used:    1
  7260 ;; Hardware stack levels required when called:   12
  7261 ;; This function calls:
  7262 ;;		_printf
  7263 ;;		_ringBufS_flush
  7264 ;;		_start_lcd
  7265 ;;		_wait_lcd_done
  7266 ;;		_wait_lcd_set
  7267 ;; This function is called by:
  7268 ;;		_eaDogM_WriteCommand
  7269 ;;		_eaDogM_WriteStringAtPos
  7270 ;; This function uses a reentrant model
  7271 ;;
  7272                           
  7273                           	psect	text27
  7274  0056F4                     __ptext27:
  7275                           	opt callstack 0
  7276  0056F4                     _send_lcd_cmd_dma:
  7277                           	opt callstack 17
  7278                           
  7279                           ;eadog.c: 187: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 188: {;eadog.c: 189:  wait
      +                          _lcd_set();
  7280                           
  7281                           ; BSR set to: 0
  7282                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7283                           ;incstack = 0
  7284  0056F4  ECB3  F030         	call	_wait_lcd_set	;wreg free
  7285                           
  7286                           ; BSR set to: 0
  7287                           ;eadog.c: 191:  ringBufS_flush(spi_link.tx1a, 0);
  7288  0056F8  0E00               	movlw	0
  7289  0056FA  6EE6               	movwf	postinc1,c
  7290  0056FC  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  7291  005702  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  7292  005708  ECC5  F029         	call	_ringBufS_flush	;wreg free
  7293  00570C  92BC               	bcf	16316,1,c	;volatile
  7294  00570E  94BC               	bcf	16316,2,c	;volatile
  7295                           
  7296                           ;eadog.c: 194:  DMA1CON0bits.EN = 0;
  7297  005710  013B               	movlb	59	; () banked
  7298  005712  9FFC               	bcf	252,7,b	;volatile
  7299                           
  7300                           ; BSR set to: 59
  7301                           ;eadog.c: 195:  DMA1SSZ = 1;
  7302  005714  0E00               	movlw	0
  7303  005716  6FF8               	movwf	248,b	;volatile
  7304  005718  0E01               	movlw	1
  7305  00571A  6FF7               	movwf	247,b	;volatile
  7306                           
  7307                           ; BSR set to: 59
  7308                           ;eadog.c: 196:  DMA1CON0bits.EN = 1;
  7309  00571C  8FFC               	bsf	252,7,b	;volatile
  7310                           
  7311                           ; BSR set to: 59
  7312                           ;eadog.c: 197:  printf("%c", strPtr);
  7313                           ;stkvar	_strPtr @ sp[(0)+-1]
  7314  00571E  0EFF               	movlw	-1
  7315  005720  50E3               	movf	plusw1,w,c
  7316  005722  6EE6               	movwf	postinc1,c
  7317  005724  0E00               	movlw	0
  7318  005726  6EE6               	movwf	postinc1,c
  7319  005728  0EA3               	movlw	STR_17& (0+255)
  7320  00572A  6EE6               	movwf	postinc1,c
  7321  00572C  0E03               	movlw	3
  7322  00572E  6EE6               	movwf	postinc1,c
  7323  005730  ECEC  F02A         	call	_printf	;wreg free
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;eadog.c: 198:  start_lcd();
  7327  005734  ECB6  F030         	call	_start_lcd	;wreg free
  7328                           
  7329                           ; BSR set to: 59
  7330                           ;eadog.c: 199:  wait_lcd_done();
  7331  005738  ECF5  F02F         	call	_wait_lcd_done	;wreg free
  7332                           
  7333                           ; BSR set to: 0
  7334  00573C  82BC               	bsf	16316,1,c	;volatile
  7335                           
  7336                           ; BSR set to: 0
  7337                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7338  00573E  52E5               	movf	postdec1,f,c
  7339  005740  0012               	return		;funcret
  7340  005742                     __end_of_send_lcd_cmd_dma:
  7341                           	opt callstack 0
  7342                           
  7343 ;; *************** function _wait_lcd_set *****************
  7344 ;; Defined at:
  7345 ;;		line 114 in file "eadog.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;		None
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;		None
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  1  [STACK] void 
  7352 ;; Registers used:
  7353 ;;		None
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 3F/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7363 ;;Total ram usage:        0 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; Hardware stack levels required when called:    3
  7366 ;; This function calls:
  7367 ;;		Nothing
  7368 ;; This function is called by:
  7369 ;;		_eaDogM_WriteString
  7370 ;;		_send_lcd_cmd_dma
  7371 ;; This function uses a reentrant model
  7372 ;;
  7373                           
  7374                           	psect	text28
  7375  006166                     __ptext28:
  7376                           	opt callstack 0
  7377  006166                     _wait_lcd_set:
  7378                           	opt callstack 25
  7379                           
  7380                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  7381                           
  7382                           ; BSR set to: 0
  7383                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7384                           ;incstack = 0
  7385  006166  0100               	movlb	0	; () banked
  7386  006168  876D               	bsf	_spi_link& (0+255),3,b	;volatile
  7387                           
  7388                           ; BSR set to: 0
  7389                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7390  00616A  0012               	return		;funcret
  7391  00616C                     __end_of_wait_lcd_set:
  7392                           	opt callstack 0
  7393                           
  7394 ;; *************** function _wait_lcd_done *****************
  7395 ;; Defined at:
  7396 ;;		line 124 in file "eadog.c"
  7397 ;; Parameters:    Size  Location     Type
  7398 ;;		None
  7399 ;; Auto vars:     Size  Location     Type
  7400 ;;		None
  7401 ;; Return value:  Size  Location     Type
  7402 ;;                  1  [STACK] void 
  7403 ;; Registers used:
  7404 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7405 ;; Tracked objects:
  7406 ;;		On entry : 4/0
  7407 ;;		On exit  : 3F/0
  7408 ;;		Unchanged: 0/0
  7409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7414 ;;Total ram usage:        0 bytes
  7415 ;; Hardware stack levels used:    1
  7416 ;; Hardware stack levels required when called:    4
  7417 ;; This function calls:
  7418 ;;		_wdtdelay
  7419 ;; This function is called by:
  7420 ;;		_main
  7421 ;;		_send_lcd_cmd_dma
  7422 ;; This function uses a reentrant model
  7423 ;;
  7424                           
  7425                           	psect	text29
  7426  005FEA                     __ptext29:
  7427                           	opt callstack 0
  7428  005FEA                     _wait_lcd_done:
  7429                           	opt callstack 26
  7430                           
  7431                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  7432                           
  7433                           ; BSR set to: 0
  7434                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7435                           ;incstack = 0
  7436  005FEA  0100               	movlb	0	; () banked
  7437  005FEC  B76D               	btfsc	_spi_link& (0+255),3,b	;volatile
  7438  005FEE  D7FD               	goto	_wait_lcd_done
  7439                           
  7440                           ; BSR set to: 0
  7441                           ;eadog.c: 127:  wdtdelay(50);
  7442  005FF0  0E32               	movlw	50
  7443  005FF2  6EE6               	movwf	postinc1,c
  7444  005FF4  0E00               	movlw	0
  7445  005FF6  6EE6               	movwf	postinc1,c
  7446  005FF8  0E00               	movlw	0
  7447  005FFA  6EE6               	movwf	postinc1,c
  7448  005FFC  0E00               	movlw	0
  7449  005FFE  6EE6               	movwf	postinc1,c
  7450  006000  EC4C  F02B         	call	_wdtdelay	;wreg free
  7451                           
  7452                           ; BSR set to: 0
  7453                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7454  006004  0012               	return		;funcret
  7455  006006                     __end_of_wait_lcd_done:
  7456                           	opt callstack 0
  7457                           
  7458 ;; *************** function _wdtdelay *****************
  7459 ;; Defined at:
  7460 ;;		line 21 in file "eadog.c"
  7461 ;; Parameters:    Size  Location     Type
  7462 ;;  delay           4  [STACK] unsigned long 
  7463 ;; Auto vars:     Size  Location     Type
  7464 ;;		None
  7465 ;; Return value:  Size  Location     Type
  7466 ;;                  1  [STACK] void 
  7467 ;; Registers used:
  7468 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7469 ;; Tracked objects:
  7470 ;;		On entry : 0/0
  7471 ;;		On exit  : 3F/0
  7472 ;;		Unchanged: 0/0
  7473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7478 ;;Total ram usage:        0 bytes
  7479 ;; Hardware stack levels used:    1
  7480 ;; Hardware stack levels required when called:    3
  7481 ;; This function calls:
  7482 ;;		Nothing
  7483 ;; This function is called by:
  7484 ;;		_init_display
  7485 ;;		_send_lcd_cmd
  7486 ;;		_send_lcd_cmd_long
  7487 ;;		_wait_lcd_done
  7488 ;; This function uses a reentrant model
  7489 ;;
  7490                           
  7491                           	psect	text30
  7492  005698                     __ptext30:
  7493                           	opt callstack 0
  7494  005698                     _wdtdelay:
  7495                           	opt callstack 26
  7496                           
  7497                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  7498                           
  7499                           ; BSR set to: 0
  7500                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7501                           ;incstack = 0
  7502  005698  0100               	movlb	0	; () banked
  7503  00569A  6B8C               	clrf	wdtdelay@dcount& (0+255),b
  7504  00569C  6B8D               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7505  00569E  6B8E               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7506  0056A0  6B8F               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7507  0056A2  D009               	goto	l5589
  7508  0056A4                     l1324:
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;eadog.c: 26:   __nop();
  7512  0056A4  F000               	nop	
  7513  0056A6  0004               	clrwdt		;# 
  7514                           
  7515                           ;eadog.c: 28:  };
  7516  0056A8  0E01               	movlw	1
  7517  0056AA  0100               	movlb	0	; () banked
  7518  0056AC  278C               	addwf	wdtdelay@dcount& (0+255),f,b
  7519  0056AE  0E00               	movlw	0
  7520  0056B0  238D               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7521  0056B2  238E               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7522  0056B4  238F               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7523  0056B6                     l5589:
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;stkvar	_delay @ sp[(0)+-4]
  7527  0056B6  0EFC               	movlw	-4
  7528  0056B8  006F FF8C  F03B    	movff	plusw1,btemp
  7529  0056BE  518C               	movf	wdtdelay@dcount& (0+255),w,b
  7530  0056C0  5C3B               	subwf	btemp,w,c
  7531  0056C2  0EFD               	movlw	-3
  7532  0056C4  006F FF8C  F03B    	movff	plusw1,btemp
  7533  0056CA  518D               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7534  0056CC  583B               	subwfb	btemp,w,c
  7535  0056CE  0EFE               	movlw	-2
  7536  0056D0  006F FF8C  F03B    	movff	plusw1,btemp
  7537  0056D6  518E               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7538  0056D8  583B               	subwfb	btemp,w,c
  7539  0056DA  0EFF               	movlw	-1
  7540  0056DC  006F FF8C  F03B    	movff	plusw1,btemp
  7541  0056E2  518F               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7542  0056E4  583B               	subwfb	btemp,w,c
  7543  0056E6  B0D8               	btfsc	status,0,c
  7544  0056E8  D7DD               	goto	l1324
  7545                           
  7546                           ; BSR set to: 0
  7547                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7548  0056EA  52E5               	movf	postdec1,f,c
  7549  0056EC  52E5               	movf	postdec1,f,c
  7550  0056EE  52E5               	movf	postdec1,f,c
  7551  0056F0  52E5               	movf	postdec1,f,c
  7552  0056F2  0012               	return		;funcret
  7553  0056F4                     __end_of_wdtdelay:
  7554                           	opt callstack 0
  7555                           
  7556 ;; *************** function _start_lcd *****************
  7557 ;; Defined at:
  7558 ;;		line 109 in file "eadog.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;		None
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;		None
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  1  [STACK] void 
  7565 ;; Registers used:
  7566 ;;		None
  7567 ;; Tracked objects:
  7568 ;;		On entry : 3F/0
  7569 ;;		On exit  : 3F/3B
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7576 ;;Total ram usage:        0 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; Hardware stack levels required when called:    3
  7579 ;; This function calls:
  7580 ;;		Nothing
  7581 ;; This function is called by:
  7582 ;;		_eaDogM_WriteString
  7583 ;;		_send_lcd_cmd_dma
  7584 ;; This function uses a reentrant model
  7585 ;;
  7586                           
  7587                           	psect	text31
  7588  00616C                     __ptext31:
  7589                           	opt callstack 0
  7590  00616C                     _start_lcd:
  7591                           	opt callstack 25
  7592                           
  7593                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  7594                           
  7595                           ; BSR set to: 0
  7596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7597                           ;incstack = 0
  7598  00616C  013B               	movlb	59	; () banked
  7599  00616E  8DFC               	bsf	252,6,b	;volatile
  7600                           
  7601                           ; BSR set to: 59
  7602                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7603  006170  0012               	return		;funcret
  7604  006172                     __end_of_start_lcd:
  7605                           	opt callstack 0
  7606                           
  7607 ;; *************** function _ringBufS_flush *****************
  7608 ;; Defined at:
  7609 ;;		line 76 in file "ringbufs.c"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;  _this           2  [STACK] PTR struct ringBufS_t
  7612 ;;		 -> ring_buf1(67), 
  7613 ;;  clearBuffer     1  [STACK] const char 
  7614 ;; Auto vars:     Size  Location     Type
  7615 ;;		None
  7616 ;; Return value:  Size  Location     Type
  7617 ;;                  1  [STACK] void 
  7618 ;; Registers used:
  7619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7620 ;; Tracked objects:
  7621 ;;		On entry : 3F/0
  7622 ;;		On exit  : 0/0
  7623 ;;		Unchanged: 0/0
  7624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7629 ;;Total ram usage:        0 bytes
  7630 ;; Hardware stack levels used:    1
  7631 ;; Hardware stack levels required when called:    4
  7632 ;; This function calls:
  7633 ;;		_memset
  7634 ;; This function is called by:
  7635 ;;		_eaDogM_WriteString
  7636 ;;		_send_lcd_cmd_dma
  7637 ;; This function uses a reentrant model
  7638 ;;
  7639                           
  7640                           	psect	text32
  7641  00538A                     __ptext32:
  7642                           	opt callstack 0
  7643  00538A                     _ringBufS_flush:
  7644                           	opt callstack 24
  7645                           
  7646                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7647                           ;stkvar	__this @ sp[(0)+-2]
  7648                           
  7649                           ; BSR set to: 59
  7650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7651                           ;incstack = 0
  7652  00538A  0EFE               	movlw	-2
  7653  00538C  006F FF8C  F045    	movff	plusw1,btemp+10
  7654  005392  0EFF               	movlw	-1
  7655  005394  006F FF8C  F046    	movff	plusw1,btemp+11
  7656  00539A  0E42               	movlw	66
  7657  00539C  2445               	addwf	btemp+10,w,c
  7658  00539E  6ED9               	movwf	fsr2l,c
  7659  0053A0  0E00               	movlw	0
  7660  0053A2  2046               	addwfc	btemp+11,w,c
  7661  0053A4  6EDA               	movwf	fsr2h,c
  7662  0053A6  0E00               	movlw	0
  7663  0053A8  6EDF               	movwf	indf2,c
  7664                           
  7665                           ;ringbufs.c: 79:  _this->head = 0;
  7666                           ;stkvar	__this @ sp[(0)+-2]
  7667  0053AA  0EFE               	movlw	-2
  7668  0053AC  006F FF8C  F045    	movff	plusw1,btemp+10
  7669  0053B2  0EFF               	movlw	-1
  7670  0053B4  006F FF8C  F046    	movff	plusw1,btemp+11
  7671  0053BA  0E40               	movlw	64
  7672  0053BC  2445               	addwf	btemp+10,w,c
  7673  0053BE  6ED9               	movwf	fsr2l,c
  7674  0053C0  0E00               	movlw	0
  7675  0053C2  2046               	addwfc	btemp+11,w,c
  7676  0053C4  6EDA               	movwf	fsr2h,c
  7677  0053C6  0E00               	movlw	0
  7678  0053C8  6EDF               	movwf	indf2,c
  7679                           
  7680                           ;ringbufs.c: 80:  _this->tail = 0;
  7681                           ;stkvar	__this @ sp[(0)+-2]
  7682  0053CA  0EFE               	movlw	-2
  7683  0053CC  006F FF8C  F045    	movff	plusw1,btemp+10
  7684  0053D2  0EFF               	movlw	-1
  7685  0053D4  006F FF8C  F046    	movff	plusw1,btemp+11
  7686  0053DA  0E41               	movlw	65
  7687  0053DC  2445               	addwf	btemp+10,w,c
  7688  0053DE  6ED9               	movwf	fsr2l,c
  7689  0053E0  0E00               	movlw	0
  7690  0053E2  2046               	addwfc	btemp+11,w,c
  7691  0053E4  6EDA               	movwf	fsr2h,c
  7692  0053E6  0E00               	movlw	0
  7693  0053E8  6EDF               	movwf	indf2,c
  7694                           
  7695                           ;ringbufs.c: 81:  if (clearBuffer) {
  7696                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7697  0053EA  0EFD               	movlw	-3
  7698  0053EC  50E3               	movf	plusw1,w,c
  7699  0053EE  B4D8               	btfsc	status,2,c
  7700  0053F0  D011               	goto	l1460
  7701                           
  7702                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7703  0053F2  0E40               	movlw	64
  7704  0053F4  6EE6               	movwf	postinc1,c
  7705  0053F6  0E00               	movlw	0
  7706  0053F8  6EE6               	movwf	postinc1,c
  7707  0053FA  0E00               	movlw	0
  7708  0053FC  6EE6               	movwf	postinc1,c
  7709  0053FE  0E00               	movlw	0
  7710  005400  6EE6               	movwf	postinc1,c
  7711                           
  7712                           ;stkvar	__this @ sp[(-4)+-2]
  7713  005402  0EFA               	movlw	-6
  7714  005404  006F FF8F FFE6     	movff	plusw1,postinc1
  7715  00540A  006F FF8F FFE6     	movff	plusw1,postinc1
  7716  005410  EC82  F01B         	call	_memset	;wreg free
  7717  005414                     l1460:
  7718                           
  7719                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7720  005414  52E5               	movf	postdec1,f,c
  7721  005416  52E5               	movf	postdec1,f,c
  7722  005418  52E5               	movf	postdec1,f,c
  7723  00541A  0012               	return		;funcret
  7724  00541C                     __end_of_ringBufS_flush:
  7725                           	opt callstack 0
  7726                           
  7727 ;; *************** function _memset *****************
  7728 ;; Defined at:
  7729 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  dest            2  [STACK] PTR void 
  7732 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7733 ;;  c               2  [STACK] int 
  7734 ;;  n               2  [STACK] unsigned int 
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;  s               2  [STACK] PTR unsigned char 
  7737 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7738 ;;  k               2  [STACK] unsigned int 
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  2  [STACK] PTR void 
  7741 ;; Registers used:
  7742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7752 ;;Total ram usage:        0 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; Hardware stack levels required when called:    3
  7755 ;; This function calls:
  7756 ;;		Nothing
  7757 ;; This function is called by:
  7758 ;;		_ringBufS_init
  7759 ;;		_ringBufS_flush
  7760 ;; This function uses a reentrant model
  7761 ;;
  7762                           
  7763                           	psect	text33
  7764  003704                     __ptext33:
  7765                           	opt callstack 0
  7766  003704                     _memset:
  7767                           	opt callstack 0
  7768                           
  7769                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7770  003704  52E6               	movf	postinc1,f,c
  7771  003706  52E6               	movf	postinc1,f,c
  7772  003708  52E6               	movf	postinc1,f,c
  7773  00370A  52E6               	movf	postinc1,f,c
  7774                           
  7775                           ;stkvar	_dest @ sp[(-4)+-2]
  7776                           
  7777                           ;incstack = 0
  7778  00370C  0EFA               	movlw	-6
  7779  00370E  006F FF8C  F045    	movff	plusw1,btemp+10
  7780  003714  0EFB               	movlw	-5
  7781  003716  006F FF8C  F046    	movff	plusw1,btemp+11
  7782                           
  7783                           ;stkvar	_s @ sp[(-4)+0]
  7784  00371C  0EFD               	movlw	-3
  7785  00371E  0060  F11B  FFE3   	movff	btemp+11,plusw1
  7786  003724  0EFC               	movlw	-4
  7787  003726  0060  F117  FFE3   	movff	btemp+10,plusw1
  7788                           
  7789                           ;stkvar	_n @ sp[(-4)+-6]
  7790  00372C  0EF6               	movlw	-10
  7791  00372E  006F FF8C  F03B    	movff	plusw1,btemp
  7792  003734  0EF7               	movlw	-9
  7793  003736  50E3               	movf	plusw1,w,c
  7794  003738  103B               	iorwf	btemp,w,c
  7795  00373A  B4D8               	btfsc	status,2,c
  7796  00373C  D154               	goto	u4880
  7797                           
  7798                           ;stkvar	_c @ sp[(-4)+-4]
  7799                           ;stkvar	_s @ sp[(-4)+0]
  7800  00373E  0EFC               	movlw	-4
  7801  003740  006F FF8F FFD9     	movff	plusw1,fsr2l
  7802  003746  0EFD               	movlw	-3
  7803  003748  006F FF8F FFDA     	movff	plusw1,fsr2h
  7804  00374E  0EF8               	movlw	-8
  7805  003750  006F FF8F FFDF     	movff	plusw1,indf2
  7806                           
  7807                           ;stkvar	_c @ sp[(-4)+-4]
  7808                           ;stkvar	_n @ sp[(-4)+-6]
  7809                           ;stkvar	_s @ sp[(-4)+0]
  7810  003756  0EFC               	movlw	-4
  7811  003758  006F FF8C  F045    	movff	plusw1,btemp+10
  7812  00375E  0EFD               	movlw	-3
  7813  003760  006F FF8C  F046    	movff	plusw1,btemp+11
  7814  003766  0EF6               	movlw	-10
  7815  003768  50E3               	movf	plusw1,w,c
  7816  00376A  2645               	addwf	btemp+10,f,c
  7817  00376C  0EF7               	movlw	-9
  7818  00376E  50E3               	movf	plusw1,w,c
  7819  003770  2246               	addwfc	btemp+11,f,c
  7820  003772  0EFF               	movlw	255
  7821  003774  2445               	addwf	btemp+10,w,c
  7822  003776  6ED9               	movwf	fsr2l,c
  7823  003778  0EFF               	movlw	255
  7824  00377A  2046               	addwfc	btemp+11,w,c
  7825  00377C  6EDA               	movwf	fsr2h,c
  7826  00377E  0EF8               	movlw	-8
  7827  003780  006F FF8F FFDF     	movff	plusw1,indf2
  7828                           
  7829                           ;stkvar	_n @ sp[(-4)+-6]
  7830  003786  0EF7               	movlw	-9
  7831  003788  50E3               	movf	plusw1,w,c
  7832  00378A  E108               	bnz	l7747
  7833  00378C  0EF6               	movlw	-10
  7834  00378E  006F FF8C  F03B    	movff	plusw1,btemp
  7835  003794  0E03               	movlw	3
  7836  003796  5E3B               	subwf	btemp,f,c
  7837  003798  A0D8               	btfss	status,0,c
  7838  00379A  D125               	goto	u4880
  7839  00379C                     l7747:
  7840                           
  7841                           ;stkvar	_c @ sp[(-4)+-4]
  7842                           ;stkvar	_s @ sp[(-4)+0]
  7843  00379C  0EFC               	movlw	-4
  7844  00379E  006F FF8C  F045    	movff	plusw1,btemp+10
  7845  0037A4  0EFD               	movlw	-3
  7846  0037A6  006F FF8C  F046    	movff	plusw1,btemp+11
  7847  0037AC  0E01               	movlw	1
  7848  0037AE  2445               	addwf	btemp+10,w,c
  7849  0037B0  6ED9               	movwf	fsr2l,c
  7850  0037B2  0E00               	movlw	0
  7851  0037B4  2046               	addwfc	btemp+11,w,c
  7852  0037B6  6EDA               	movwf	fsr2h,c
  7853  0037B8  0EF8               	movlw	-8
  7854  0037BA  006F FF8F FFDF     	movff	plusw1,indf2
  7855                           
  7856                           ;stkvar	_c @ sp[(-4)+-4]
  7857                           ;stkvar	_s @ sp[(-4)+0]
  7858  0037C0  0EFC               	movlw	-4
  7859  0037C2  006F FF8C  F045    	movff	plusw1,btemp+10
  7860  0037C8  0EFD               	movlw	-3
  7861  0037CA  006F FF8C  F046    	movff	plusw1,btemp+11
  7862  0037D0  0E02               	movlw	2
  7863  0037D2  2445               	addwf	btemp+10,w,c
  7864  0037D4  6ED9               	movwf	fsr2l,c
  7865  0037D6  0E00               	movlw	0
  7866  0037D8  2046               	addwfc	btemp+11,w,c
  7867  0037DA  6EDA               	movwf	fsr2h,c
  7868  0037DC  0EF8               	movlw	-8
  7869  0037DE  006F FF8F FFDF     	movff	plusw1,indf2
  7870                           
  7871                           ;stkvar	_c @ sp[(-4)+-4]
  7872                           ;stkvar	_n @ sp[(-4)+-6]
  7873                           ;stkvar	_s @ sp[(-4)+0]
  7874  0037E4  0EFC               	movlw	-4
  7875  0037E6  006F FF8C  F045    	movff	plusw1,btemp+10
  7876  0037EC  0EFD               	movlw	-3
  7877  0037EE  006F FF8C  F046    	movff	plusw1,btemp+11
  7878  0037F4  0EF6               	movlw	-10
  7879  0037F6  50E3               	movf	plusw1,w,c
  7880  0037F8  2645               	addwf	btemp+10,f,c
  7881  0037FA  0EF7               	movlw	-9
  7882  0037FC  50E3               	movf	plusw1,w,c
  7883  0037FE  2246               	addwfc	btemp+11,f,c
  7884  003800  0EFE               	movlw	254
  7885  003802  2445               	addwf	btemp+10,w,c
  7886  003804  6ED9               	movwf	fsr2l,c
  7887  003806  0EFF               	movlw	255
  7888  003808  2046               	addwfc	btemp+11,w,c
  7889  00380A  6EDA               	movwf	fsr2h,c
  7890  00380C  0EF8               	movlw	-8
  7891  00380E  006F FF8F FFDF     	movff	plusw1,indf2
  7892                           
  7893                           ;stkvar	_c @ sp[(-4)+-4]
  7894                           ;stkvar	_n @ sp[(-4)+-6]
  7895                           ;stkvar	_s @ sp[(-4)+0]
  7896  003814  0EFC               	movlw	-4
  7897  003816  006F FF8C  F045    	movff	plusw1,btemp+10
  7898  00381C  0EFD               	movlw	-3
  7899  00381E  006F FF8C  F046    	movff	plusw1,btemp+11
  7900  003824  0EF6               	movlw	-10
  7901  003826  50E3               	movf	plusw1,w,c
  7902  003828  2645               	addwf	btemp+10,f,c
  7903  00382A  0EF7               	movlw	-9
  7904  00382C  50E3               	movf	plusw1,w,c
  7905  00382E  2246               	addwfc	btemp+11,f,c
  7906  003830  0EFD               	movlw	253
  7907  003832  2445               	addwf	btemp+10,w,c
  7908  003834  6ED9               	movwf	fsr2l,c
  7909  003836  0EFF               	movlw	255
  7910  003838  2046               	addwfc	btemp+11,w,c
  7911  00383A  6EDA               	movwf	fsr2h,c
  7912  00383C  0EF8               	movlw	-8
  7913  00383E  006F FF8F FFDF     	movff	plusw1,indf2
  7914                           
  7915                           ;stkvar	_n @ sp[(-4)+-6]
  7916  003844  0EF7               	movlw	-9
  7917  003846  50E3               	movf	plusw1,w,c
  7918  003848  E108               	bnz	l7753
  7919  00384A  0EF6               	movlw	-10
  7920  00384C  006F FF8C  F03B    	movff	plusw1,btemp
  7921  003852  0E07               	movlw	7
  7922  003854  5E3B               	subwf	btemp,f,c
  7923  003856  A0D8               	btfss	status,0,c
  7924  003858  D0C6               	goto	u4880
  7925  00385A                     l7753:
  7926                           
  7927                           ;stkvar	_c @ sp[(-4)+-4]
  7928                           ;stkvar	_s @ sp[(-4)+0]
  7929  00385A  0EFC               	movlw	-4
  7930  00385C  006F FF8C  F045    	movff	plusw1,btemp+10
  7931  003862  0EFD               	movlw	-3
  7932  003864  006F FF8C  F046    	movff	plusw1,btemp+11
  7933  00386A  0E03               	movlw	3
  7934  00386C  2445               	addwf	btemp+10,w,c
  7935  00386E  6ED9               	movwf	fsr2l,c
  7936  003870  0E00               	movlw	0
  7937  003872  2046               	addwfc	btemp+11,w,c
  7938  003874  6EDA               	movwf	fsr2h,c
  7939  003876  0EF8               	movlw	-8
  7940  003878  006F FF8F FFDF     	movff	plusw1,indf2
  7941                           
  7942                           ;stkvar	_c @ sp[(-4)+-4]
  7943                           ;stkvar	_n @ sp[(-4)+-6]
  7944                           ;stkvar	_s @ sp[(-4)+0]
  7945  00387E  0EFC               	movlw	-4
  7946  003880  006F FF8C  F045    	movff	plusw1,btemp+10
  7947  003886  0EFD               	movlw	-3
  7948  003888  006F FF8C  F046    	movff	plusw1,btemp+11
  7949  00388E  0EF6               	movlw	-10
  7950  003890  50E3               	movf	plusw1,w,c
  7951  003892  2645               	addwf	btemp+10,f,c
  7952  003894  0EF7               	movlw	-9
  7953  003896  50E3               	movf	plusw1,w,c
  7954  003898  2246               	addwfc	btemp+11,f,c
  7955  00389A  0EFC               	movlw	252
  7956  00389C  2445               	addwf	btemp+10,w,c
  7957  00389E  6ED9               	movwf	fsr2l,c
  7958  0038A0  0EFF               	movlw	255
  7959  0038A2  2046               	addwfc	btemp+11,w,c
  7960  0038A4  6EDA               	movwf	fsr2h,c
  7961  0038A6  0EF8               	movlw	-8
  7962  0038A8  006F FF8F FFDF     	movff	plusw1,indf2
  7963                           
  7964                           ;stkvar	_n @ sp[(-4)+-6]
  7965  0038AE  0EF7               	movlw	-9
  7966  0038B0  50E3               	movf	plusw1,w,c
  7967  0038B2  E108               	bnz	l7759
  7968  0038B4  0EF6               	movlw	-10
  7969  0038B6  006F FF8C  F03B    	movff	plusw1,btemp
  7970  0038BC  0E09               	movlw	9
  7971  0038BE  5E3B               	subwf	btemp,f,c
  7972  0038C0  A0D8               	btfss	status,0,c
  7973  0038C2  D091               	goto	u4880
  7974  0038C4                     l7759:
  7975                           
  7976                           ;stkvar	_s @ sp[(-4)+0]
  7977  0038C4  0EFC               	movlw	-4
  7978  0038C6  006F FF8C  F045    	movff	plusw1,btemp+10
  7979  0038CC  1E45               	comf	btemp+10,f,c
  7980  0038CE  0EFD               	movlw	-3
  7981  0038D0  006F FF8C  F046    	movff	plusw1,btemp+11
  7982  0038D6  1E46               	comf	btemp+11,f,c
  7983  0038D8  2A45               	incf	btemp+10,f,c
  7984  0038DA  B4D8               	btfsc	status,2,c
  7985  0038DC  2A46               	incf	btemp+11,f,c
  7986  0038DE  0E03               	movlw	3
  7987  0038E0  1645               	andwf	btemp+10,f,c
  7988  0038E2  0E00               	movlw	0
  7989  0038E4  1646               	andwf	btemp+11,f,c
  7990                           
  7991                           ;stkvar	_k @ sp[(-4)+2]
  7992  0038E6  0EFE               	movlw	-2
  7993  0038E8  0060  F117  FFE3   	movff	btemp+10,plusw1
  7994  0038EE  0EFF               	movlw	-1
  7995  0038F0  0060  F11B  FFE3   	movff	btemp+11,plusw1
  7996                           
  7997                           ;stkvar	_k @ sp[(-4)+2]
  7998                           ;stkvar	_s @ sp[(-4)+0]
  7999  0038F6  0EFC               	movlw	-4
  8000  0038F8  50E3               	movf	plusw1,w,c
  8001  0038FA  6E3B               	movwf	btemp,c
  8002  0038FC  0EFE               	movlw	-2
  8003  0038FE  50E3               	movf	plusw1,w,c
  8004  003900  263B               	addwf	btemp,f,c
  8005  003902  0EFC               	movlw	-4
  8006  003904  0060  F0EF  FFE3   	movff	btemp,plusw1
  8007  00390A  0EFD               	movlw	-3
  8008  00390C  50E3               	movf	plusw1,w,c
  8009  00390E  6E3B               	movwf	btemp,c
  8010  003910  0EFF               	movlw	-1
  8011  003912  50E3               	movf	plusw1,w,c
  8012  003914  223B               	addwfc	btemp,f,c
  8013  003916  0EFD               	movlw	-3
  8014  003918  0060  F0EF  FFE3   	movff	btemp,plusw1
  8015                           
  8016                           ;stkvar	_k @ sp[(-4)+2]
  8017                           ;stkvar	_n @ sp[(-4)+-6]
  8018  00391E  0EF6               	movlw	-10
  8019  003920  50E3               	movf	plusw1,w,c
  8020  003922  6E3B               	movwf	btemp,c
  8021  003924  0EFE               	movlw	-2
  8022  003926  50E3               	movf	plusw1,w,c
  8023  003928  5E3B               	subwf	btemp,f,c
  8024  00392A  0EF6               	movlw	-10
  8025  00392C  0060  F0EF  FFE3   	movff	btemp,plusw1
  8026  003932  0EF7               	movlw	-9
  8027  003934  50E3               	movf	plusw1,w,c
  8028  003936  6E3B               	movwf	btemp,c
  8029  003938  0EFF               	movlw	-1
  8030  00393A  50E3               	movf	plusw1,w,c
  8031  00393C  5A3B               	subwfb	btemp,f,c
  8032  00393E  0EF7               	movlw	-9
  8033  003940  0060  F0EF  FFE3   	movff	btemp,plusw1
  8034  003946  0EFC               	movlw	252
  8035  003948  6E45               	movwf	btemp+10,c
  8036  00394A  0EFF               	movlw	255
  8037  00394C  6E46               	movwf	btemp+11,c
  8038                           
  8039                           ;stkvar	_n @ sp[(-4)+-6]
  8040  00394E  0EF6               	movlw	-10
  8041  003950  006F FF8C  F03B    	movff	plusw1,btemp
  8042  003956  5045               	movf	btemp+10,w,c
  8043  003958  163B               	andwf	btemp,f,c
  8044  00395A  0EF6               	movlw	-10
  8045  00395C  0060  F0EF  FFE3   	movff	btemp,plusw1
  8046  003962  0EF7               	movlw	-9
  8047  003964  006F FF8C  F03B    	movff	plusw1,btemp
  8048  00396A  5046               	movf	btemp+11,w,c
  8049  00396C  163B               	andwf	btemp,f,c
  8050  00396E  0EF7               	movlw	-9
  8051  003970  D02E               	goto	L20
  8052  003972                     l7767:
  8053                           
  8054                           ;stkvar	_c @ sp[(-4)+-4]
  8055                           ;stkvar	_s @ sp[(-4)+0]
  8056  003972  0EFC               	movlw	-4
  8057  003974  006F FF8F FFD9     	movff	plusw1,fsr2l
  8058  00397A  0EFD               	movlw	-3
  8059  00397C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8060  003982  0EF8               	movlw	-8
  8061  003984  006F FF8F FFDF     	movff	plusw1,indf2
  8062                           
  8063                           ;stkvar	_n @ sp[(-4)+-6]
  8064  00398A  0EF6               	movlw	-10
  8065  00398C  006F FF8C  F03B    	movff	plusw1,btemp
  8066  003992  0E01               	movlw	1
  8067  003994  5E3B               	subwf	btemp,f,c
  8068  003996  0EF6               	movlw	-10
  8069  003998  0060  F0EF  FFE3   	movff	btemp,plusw1
  8070  00399E  0EF7               	movlw	-9
  8071  0039A0  006F FF8C  F03B    	movff	plusw1,btemp
  8072  0039A6  0E00               	movlw	0
  8073  0039A8  5A3B               	subwfb	btemp,f,c
  8074  0039AA  0EF7               	movlw	-9
  8075  0039AC  0060  F0EF  FFE3   	movff	btemp,plusw1
  8076                           
  8077                           ;stkvar	_s @ sp[(-4)+0]
  8078  0039B2  0EFC               	movlw	-4
  8079  0039B4  50E3               	movf	plusw1,w,c
  8080  0039B6  0F01               	addlw	1
  8081  0039B8  6E3B               	movwf	btemp,c
  8082  0039BA  0EFC               	movlw	-4
  8083  0039BC  0060  F0EF  FFE3   	movff	btemp,plusw1
  8084  0039C2  6A3B               	clrf	btemp,c
  8085  0039C4  0EFD               	movlw	-3
  8086  0039C6  50E3               	movf	plusw1,w,c
  8087  0039C8  203B               	addwfc	btemp,w,c
  8088  0039CA  6E3B               	movwf	btemp,c
  8089  0039CC  0EFD               	movlw	-3
  8090  0039CE                     L20:
  8091  0039CE  0060  F0EF  FFE3   	movff	btemp,plusw1
  8092                           
  8093                           ;stkvar	_n @ sp[(-4)+-6]
  8094  0039D4  0EF6               	movlw	-10
  8095  0039D6  006F FF8C  F03B    	movff	plusw1,btemp
  8096  0039DC  0EF7               	movlw	-9
  8097  0039DE  50E3               	movf	plusw1,w,c
  8098  0039E0  103B               	iorwf	btemp,w,c
  8099  0039E2  A4D8               	btfss	status,2,c
  8100  0039E4  D7C6               	goto	l7767
  8101  0039E6                     u4880:
  8102                           
  8103                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8104  0039E6  0EF6               	movlw	246
  8105  0039E8  26E1               	addwf	fsr1l,f,c
  8106  0039EA  0EFF               	movlw	255
  8107  0039EC  22E2               	addwfc	fsr1h,f,c
  8108  0039EE  0012               	return		;funcret
  8109  0039F0                     __end_of_memset:
  8110                           	opt callstack 0
  8111                           
  8112 ;; *************** function _printf *****************
  8113 ;; Defined at:
  8114 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;  fmt             1  [STACK] PTR const unsigned char 
  8117 ;;		 -> STR_18(3), STR_17(3), STR_16(3), 
  8118 ;; Auto vars:     Size  Location     Type
  8119 ;;  ap              2  [STACK] PTR void [1]
  8120 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8121 ;;  ret             2    0        int 
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  2  [STACK] int 
  8124 ;; Registers used:
  8125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8126 ;; Tracked objects:
  8127 ;;		On entry : 3F/3B
  8128 ;;		On exit  : 3F/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8135 ;;Total ram usage:        0 bytes
  8136 ;; Hardware stack levels used:    1
  8137 ;; Hardware stack levels required when called:   11
  8138 ;; This function calls:
  8139 ;;		_vfprintf
  8140 ;; This function is called by:
  8141 ;;		_eaDogM_WriteString
  8142 ;;		_send_lcd_cmd_dma
  8143 ;; This function uses a reentrant model
  8144 ;;
  8145                           
  8146                           	psect	text34
  8147  0055D8                     __ptext34:
  8148                           	opt callstack 0
  8149  0055D8                     _printf:
  8150                           	opt callstack 0
  8151                           
  8152                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8153  0055D8  52E6               	movf	postinc1,f,c
  8154  0055DA  52E6               	movf	postinc1,f,c
  8155                           
  8156                           ;stkvar	?_printf @ sp[(-2)+-3]
  8157                           
  8158                           ;incstack = 0
  8159  0055DC  0EFB               	movlw	251
  8160  0055DE  24E1               	addwf	fsr1l,w,c
  8161  0055E0  6E45               	movwf	btemp+10,c
  8162  0055E2  0EFF               	movlw	255
  8163  0055E4  20E2               	addwfc	fsr1h,w,c
  8164  0055E6  6E46               	movwf	btemp+11,c
  8165  0055E8  0E01               	movlw	1
  8166  0055EA  2645               	addwf	btemp+10,f,c
  8167  0055EC  0E00               	movlw	0
  8168  0055EE  2246               	addwfc	btemp+11,f,c
  8169                           
  8170                           ;stkvar	_ap @ sp[(-2)+0]
  8171  0055F0  0EFF               	movlw	-1
  8172  0055F2  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8173  0055F8  0EFE               	movlw	-2
  8174  0055FA  0060  F117  FFE3   	movff	btemp+10,plusw1
  8175                           
  8176                           ;stkvar	_ap @ sp[(-2)+0]
  8177  005600  0EFE               	movlw	254
  8178  005602  24E1               	addwf	fsr1l,w,c
  8179  005604  6E3B               	movwf	btemp,c
  8180  005606  0EFF               	movlw	255
  8181  005608  20E2               	addwfc	fsr1h,w,c
  8182  00560A  6E3C               	movwf	btemp+1,c
  8183  00560C  0060  F0EF  FFE6   	movff	btemp,postinc1
  8184  005612  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  8185                           
  8186                           ;stkvar	_fmt @ sp[(-4)+-2]
  8187  005618  0EFA               	movlw	-6
  8188  00561A  50E3               	movf	plusw1,w,c
  8189  00561C  6EE6               	movwf	postinc1,c
  8190  00561E  0E00               	movlw	0
  8191  005620  6EE6               	movwf	postinc1,c
  8192  005622  0E00               	movlw	0
  8193  005624  6EE6               	movwf	postinc1,c
  8194  005626  EC2D  F029         	call	_vfprintf	;wreg free
  8195                           
  8196                           ; BSR set to: 0
  8197                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  8198  00562A  52E5               	movf	postdec1,f,c
  8199  00562C  52E5               	movf	postdec1,f,c
  8200  00562E  52E5               	movf	postdec1,f,c
  8201  005630  50E7               	movf	indf1,w,c
  8202  005632  5EE1               	subwf	fsr1l,f,c
  8203  005634  0E00               	movlw	0
  8204  005636  5AE2               	subwfb	fsr1h,f,c
  8205  005638  0012               	return		;funcret
  8206  00563A                     __end_of_printf:
  8207                           	opt callstack 0
  8208                           
  8209 ;; *************** function _vfprintf *****************
  8210 ;; Defined at:
  8211 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8212 ;; Parameters:    Size  Location     Type
  8213 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8214 ;;		 -> f(5), NULL(0), 
  8215 ;;  fmt             1  [STACK] PTR const unsigned char 
  8216 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  8217 ;;		 -> STR_14(20), STR_13(6), STR_12(14), STR_11(20), 
  8218 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  8219 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  8220 ;;		 -> STR_1(17), 
  8221 ;;  ap              2  [STACK] PTR PTR void 
  8222 ;;		 -> ap(2), ap(2), 
  8223 ;; Auto vars:     Size  Location     Type
  8224 ;;  cfmt            1  [STACK] PTR unsigned char 
  8225 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  8226 ;;		 -> STR_14(20), STR_13(6), STR_12(14), STR_11(20), 
  8227 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  8228 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  8229 ;;		 -> STR_1(17), 
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  2  [STACK] int 
  8232 ;; Registers used:
  8233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/0
  8236 ;;		On exit  : 3F/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8243 ;;Total ram usage:        0 bytes
  8244 ;; Hardware stack levels used:    1
  8245 ;; Hardware stack levels required when called:   10
  8246 ;; This function calls:
  8247 ;;		_vfpfcnvrt
  8248 ;; This function is called by:
  8249 ;;		_sprintf
  8250 ;;		_printf
  8251 ;; This function uses a reentrant model
  8252 ;;
  8253                           
  8254                           	psect	text35
  8255  00525A                     __ptext35:
  8256                           	opt callstack 0
  8257  00525A                     _vfprintf:
  8258                           	opt callstack 0
  8259                           
  8260                           ; BSR set to: 0
  8261                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8262  00525A  52E6               	movf	postinc1,f,c
  8263                           
  8264                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8265                           ;stkvar	_fmt @ sp[(-1)+-3]
  8266                           
  8267                           ;incstack = 0
  8268  00525C  0EFC               	movlw	-4
  8269  00525E  006F FF8C  F046    	movff	plusw1,btemp+11
  8270                           
  8271                           ;stkvar	_cfmt @ sp[(-1)+0]
  8272  005264  0EFF               	movlw	-1
  8273  005266  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8274                           
  8275                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8276  00526C  0100               	movlb	0	; () banked
  8277  00526E  6B96               	clrf	_nout& (0+255),b
  8278  005270  6B97               	clrf	(_nout+1)& (0+255),b
  8279                           
  8280                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8281  005272  D021               	goto	l7781
  8282  005274                     l7779:
  8283                           
  8284                           ; BSR set to: 0
  8285                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8286                           ;stkvar	_ap @ sp[(-1)+-5]
  8287  005274  0EFA               	movlw	-6
  8288  005276  006F FF8F FFE6     	movff	plusw1,postinc1
  8289  00527C  006F FF8F FFE6     	movff	plusw1,postinc1
  8290                           
  8291                           ;stkvar	_cfmt @ sp[(-3)+0]
  8292  005282  0EFD               	movlw	253
  8293  005284  24E1               	addwf	fsr1l,w,c
  8294  005286  6E3B               	movwf	btemp,c
  8295  005288  0EFF               	movlw	255
  8296  00528A  20E2               	addwfc	fsr1h,w,c
  8297  00528C  6E3C               	movwf	btemp+1,c
  8298  00528E  0060  F0EF  FFE6   	movff	btemp,postinc1
  8299  005294  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  8300                           
  8301                           ;stkvar	_fp @ sp[(-5)+-2]
  8302  00529A  0EF9               	movlw	-7
  8303  00529C  006F FF8F FFE6     	movff	plusw1,postinc1
  8304  0052A2  006F FF8F FFE6     	movff	plusw1,postinc1
  8305  0052A8  EC6A  F015         	call	_vfpfcnvrt	;wreg free
  8306  0052AC  503B               	movf	btemp,w,c
  8307  0052AE  0100               	movlb	0	; () banked
  8308  0052B0  2796               	addwf	_nout& (0+255),f,b
  8309  0052B2  503C               	movf	btemp+1,w,c
  8310  0052B4  2397               	addwfc	(_nout+1)& (0+255),f,b
  8311  0052B6                     l7781:
  8312                           
  8313                           ; BSR set to: 0
  8314                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8315                           ;stkvar	_cfmt @ sp[(-1)+0]
  8316  0052B6  50E1               	movf	fsr1l,w,c
  8317  0052B8  0FFF               	addlw	-1
  8318  0052BA  6ED9               	movwf	fsr2l,c
  8319  0052BC  50E2               	movf	fsr1h,w,c
  8320  0052BE  6EDA               	movwf	fsr2h,c
  8321  0052C0  0EFF               	movlw	255
  8322  0052C2  22DA               	addwfc	fsr2h,f,c
  8323  0052C4  006F FF7F FFF6     	movff	indf2,tblptrl
  8324  0052CA                     	if	1	;There is more than 1 active tblptr byte
  8325  0052CA  0E20               	movlw	high __smallconst
  8326  0052CC  6EF7               	movwf	tblptrh,c
  8327  0052CE                     	endif
  8328  0052CE                     	if	0	;tblptru may be non-zero
  8329  0052CE                     	endif
  8330  0052CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8331  0052CE  0E00               	movlw	low (__smallconst shr (0+16))
  8332  0052D0  6EF8               	movwf	tblptru,c
  8333  0052D2                     	endif
  8334  0052D2  0008               	tblrd		*
  8335  0052D4  50F5               	movf	tablat,w,c
  8336  0052D6  0900               	iorlw	0
  8337  0052D8  A4D8               	btfss	status,2,c
  8338  0052DA  D7CC               	goto	l7779
  8339                           
  8340                           ; BSR set to: 0
  8341                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8342  0052DC  0060  F258  F03B   	movff	_nout,btemp
  8343  0052E2  0060  F25C  F03C   	movff	_nout+1,btemp+1
  8344                           
  8345                           ; BSR set to: 0
  8346                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  8347  0052E8  0EFA               	movlw	250
  8348  0052EA  26E1               	addwf	fsr1l,f,c
  8349  0052EC  0EFF               	movlw	255
  8350  0052EE  22E2               	addwfc	fsr1h,f,c
  8351  0052F0  0012               	return		;funcret
  8352  0052F2                     __end_of_vfprintf:
  8353                           	opt callstack 0
  8354                           
  8355 ;; *************** function _vfpfcnvrt *****************
  8356 ;; Defined at:
  8357 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8358 ;; Parameters:    Size  Location     Type
  8359 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8360 ;;		 -> f(5), NULL(0), 
  8361 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8362 ;;		 -> cfmt(1), 
  8363 ;;  ap              2  [STACK] PTR PTR void 
  8364 ;;		 -> ap(2), ap(2), 
  8365 ;; Auto vars:     Size  Location     Type
  8366 ;;  ll              8  [STACK] long long 
  8367 ;;  llu             8    0        unsigned long long 
  8368 ;;  f               4    0        unsigned long long 
  8369 ;;  vp              3    0        PTR void 
  8370 ;;  ct              3    0        unsigned char [3]
  8371 ;;  cp              2  [STACK] PTR unsigned char 
  8372 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(88), 
  8373 ;;  i               2    0        int 
  8374 ;;  done            2    0        int 
  8375 ;;  c               1  [STACK] unsigned char 
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  2  [STACK] int 
  8378 ;; Registers used:
  8379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8389 ;;Total ram usage:        0 bytes
  8390 ;; Hardware stack levels used:    1
  8391 ;; Hardware stack levels required when called:    9
  8392 ;; This function calls:
  8393 ;;		_ctoa
  8394 ;;		_dtoa
  8395 ;;		_fputc
  8396 ;;		_stoa
  8397 ;;		_strncmp
  8398 ;; This function is called by:
  8399 ;;		_vfprintf
  8400 ;; This function uses a reentrant model
  8401 ;;
  8402                           
  8403                           	psect	text36
  8404  002AD4                     __ptext36:
  8405                           	opt callstack 0
  8406  002AD4                     _vfpfcnvrt:
  8407                           	opt callstack 0
  8408                           
  8409                           ; BSR set to: 0
  8410                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8411  002AD4  0E0B               	movlw	11
  8412  002AD6  26E1               	addwf	fsr1l,f,c
  8413  002AD8  0E00               	movlw	0
  8414  002ADA  22E2               	addwfc	fsr1h,f,c
  8415                           
  8416                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8417                           ;stkvar	_fmt @ sp[(-11)+-4]
  8418                           
  8419                           ;incstack = 0
  8420  002ADC  0EF1               	movlw	-15
  8421  002ADE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8422  002AE4  0EF2               	movlw	-14
  8423  002AE6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8424  002AEC  006F FF7F FFF6     	movff	indf2,tblptrl
  8425  002AF2                     	if	1	;There is more than 1 active tblptr byte
  8426  002AF2  0E20               	movlw	high __smallconst
  8427  002AF4  6EF7               	movwf	tblptrh,c
  8428  002AF6                     	endif
  8429  002AF6                     	if	0	;tblptru may be non-zero
  8430  002AF6                     	endif
  8431  002AF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8432  002AF6  0E00               	movlw	low (__smallconst shr (0+16))
  8433  002AF8  6EF8               	movwf	tblptru,c
  8434  002AFA                     	endif
  8435  002AFA  0008               	tblrd		*
  8436  002AFC  50F5               	movf	tablat,w,c
  8437  002AFE  0A25               	xorlw	37
  8438  002B00  A4D8               	btfss	status,2,c
  8439  002B02  D213               	goto	l7725
  8440                           
  8441                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8442                           ;stkvar	_fmt @ sp[(-11)+-4]
  8443  002B04  0EF1               	movlw	-15
  8444  002B06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8445  002B0C  0EF2               	movlw	-14
  8446  002B0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8447  002B14  2ADF               	incf	indf2,f,c
  8448                           
  8449                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8450  002B16  6A20               	clrf	_width,c
  8451  002B18  6A21               	clrf	_width+1,c
  8452  002B1A  6A24               	clrf	_flags,c
  8453  002B1C  6A25               	clrf	_flags+1,c
  8454                           
  8455                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8456  002B1E  6822               	setf	_prec,c
  8457  002B20  6823               	setf	_prec+1,c
  8458                           
  8459                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  8460                           ;stkvar	_fmt @ sp[(-11)+-4]
  8461  002B22  0EF1               	movlw	-15
  8462  002B24  006F FF8F FFD9     	movff	plusw1,fsr2l
  8463  002B2A  0EF2               	movlw	-14
  8464  002B2C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8465  002B32  006F FF7F FFF6     	movff	indf2,tblptrl
  8466  002B38                     	if	1	;There is more than 1 active tblptr byte
  8467  002B38  0E20               	movlw	high __smallconst
  8468  002B3A  6EF7               	movwf	tblptrh,c
  8469  002B3C                     	endif
  8470  002B3C                     	if	0	;tblptru may be non-zero
  8471  002B3C                     	endif
  8472  002B3C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8473  002B3C  0E00               	movlw	low (__smallconst shr (0+16))
  8474  002B3E  6EF8               	movwf	tblptru,c
  8475  002B40                     	endif
  8476  002B40  0008               	tblrd		*
  8477  002B42  50F5               	movf	tablat,w,c
  8478  002B44  0A63               	xorlw	99
  8479  002B46  A4D8               	btfss	status,2,c
  8480  002B48  D034               	goto	l7675
  8481                           
  8482                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  8483                           ;stkvar	_fmt @ sp[(-11)+-4]
  8484  002B4A  0EF1               	movlw	-15
  8485  002B4C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8486  002B52  0EF2               	movlw	-14
  8487  002B54  006F FF8F FFDA     	movff	plusw1,fsr2h
  8488  002B5A  2ADF               	incf	indf2,f,c
  8489                           
  8490                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8491                           ;stkvar	_ap @ sp[(-11)+-6]
  8492  002B5C  0EEF               	movlw	-17
  8493  002B5E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8494  002B64  0EF0               	movlw	-16
  8495  002B66  006F FF8F FFDA     	movff	plusw1,fsr2h
  8496  002B6C  0E02               	movlw	2
  8497  002B6E  5EDE               	subwf	postinc2,f,c
  8498  002B70  0E00               	movlw	0
  8499  002B72  5ADD               	subwfb	postdec2,f,c
  8500  002B74  006F FF78  F045    	movff	postinc2,btemp+10
  8501  002B7A  006F FF74  F046    	movff	postdec2,btemp+11
  8502  002B80  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8503  002B86  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8504  002B8C  50DF               	movf	indf2,w,c
  8505  002B8E  6E46               	movwf	btemp+11,c
  8506                           
  8507                           ;stkvar	_c @ sp[(-11)+10]
  8508  002B90  0EFF               	movlw	-1
  8509  002B92  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8510                           
  8511                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  8512                           ;stkvar	_c @ sp[(-11)+10]
  8513  002B98  0EFF               	movlw	-1
  8514  002B9A  50E3               	movf	plusw1,w,c
  8515  002B9C  6EE6               	movwf	postinc1,c
  8516                           
  8517                           ;stkvar	_fp @ sp[(-12)+-2]
  8518  002B9E  0EF2               	movlw	-14
  8519  002BA0  006F FF8F FFE6     	movff	plusw1,postinc1
  8520  002BA6  006F FF8F FFE6     	movff	plusw1,postinc1
  8521  002BAC  EC0E  F02A         	call	_ctoa	;wreg free
  8522  002BB0  D1E3               	goto	l1829
  8523  002BB2                     l7675:
  8524                           
  8525                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  8526                           ;stkvar	_fmt @ sp[(-11)+-4]
  8527  002BB2  0EF1               	movlw	-15
  8528  002BB4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8529  002BBA  0EF2               	movlw	-14
  8530  002BBC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8531  002BC2  006F FF7F FFF6     	movff	indf2,tblptrl
  8532  002BC8                     	if	1	;There is more than 1 active tblptr byte
  8533  002BC8  0E20               	movlw	high __smallconst
  8534  002BCA  6EF7               	movwf	tblptrh,c
  8535  002BCC                     	endif
  8536  002BCC                     	if	0	;tblptru may be non-zero
  8537  002BCC                     	endif
  8538  002BCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8539  002BCC  0E00               	movlw	low (__smallconst shr (0+16))
  8540  002BCE  6EF8               	movwf	tblptru,c
  8541  002BD0                     	endif
  8542  002BD0  0008               	tblrd		*
  8543  002BD2  50F5               	movf	tablat,w,c
  8544  002BD4  0A64               	xorlw	100
  8545  002BD6  B4D8               	btfsc	status,2,c
  8546  002BD8  D014               	goto	u4790
  8547                           
  8548                           ;stkvar	_fmt @ sp[(-11)+-4]
  8549  002BDA  0EF1               	movlw	-15
  8550  002BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8551  002BE2  0EF2               	movlw	-14
  8552  002BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8553  002BEA  006F FF7F FFF6     	movff	indf2,tblptrl
  8554  002BF0                     	if	1	;There is more than 1 active tblptr byte
  8555  002BF0  0E20               	movlw	high __smallconst
  8556  002BF2  6EF7               	movwf	tblptrh,c
  8557  002BF4                     	endif
  8558  002BF4                     	if	0	;tblptru may be non-zero
  8559  002BF4                     	endif
  8560  002BF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8561  002BF4  0E00               	movlw	low (__smallconst shr (0+16))
  8562  002BF6  6EF8               	movwf	tblptru,c
  8563  002BF8                     	endif
  8564  002BF8  0008               	tblrd		*
  8565  002BFA  50F5               	movf	tablat,w,c
  8566  002BFC  0A69               	xorlw	105
  8567  002BFE  A4D8               	btfss	status,2,c
  8568  002C00  D073               	goto	l7687
  8569  002C02                     u4790:
  8570                           
  8571                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  8572                           ;stkvar	_fmt @ sp[(-11)+-4]
  8573  002C02  0EF1               	movlw	-15
  8574  002C04  006F FF8F FFD9     	movff	plusw1,fsr2l
  8575  002C0A  0EF2               	movlw	-14
  8576  002C0C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8577  002C12  2ADF               	incf	indf2,f,c
  8578                           
  8579                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  8580                           ;stkvar	_ap @ sp[(-11)+-6]
  8581  002C14  0EEF               	movlw	-17
  8582  002C16  006F FF8F FFD9     	movff	plusw1,fsr2l
  8583  002C1C  0EF0               	movlw	-16
  8584  002C1E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8585  002C24  0E02               	movlw	2
  8586  002C26  5EDE               	subwf	postinc2,f,c
  8587  002C28  0E00               	movlw	0
  8588  002C2A  5ADD               	subwfb	postdec2,f,c
  8589  002C2C  006F FF78  F045    	movff	postinc2,btemp+10
  8590  002C32  006F FF74  F046    	movff	postdec2,btemp+11
  8591  002C38  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8592  002C3E  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8593  002C44  006F FF78  F045    	movff	postinc2,btemp+10
  8594  002C4A  006F FF74  F046    	movff	postdec2,btemp+11
  8595                           
  8596                           ;stkvar	_ll @ sp[(-11)+0]
  8597  002C50  0EF5               	movlw	-11
  8598  002C52  0060  F117  FFE3   	movff	btemp+10,plusw1
  8599  002C58  0EF6               	movlw	-10
  8600  002C5A  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8601  002C60  6A3B               	clrf	btemp,c
  8602  002C62  BEE3               	btfsc	plusw1,7,c
  8603  002C64  683B               	setf	btemp,c
  8604  002C66  0EF7               	movlw	-9
  8605  002C68  0060  F0EF  FFE3   	movff	btemp,plusw1
  8606  002C6E  0EF8               	movlw	-8
  8607  002C70  0060  F0EF  FFE3   	movff	btemp,plusw1
  8608  002C76  0EF9               	movlw	-7
  8609  002C78  0060  F0EF  FFE3   	movff	btemp,plusw1
  8610  002C7E  0EFA               	movlw	-6
  8611  002C80  0060  F0EF  FFE3   	movff	btemp,plusw1
  8612  002C86  0EFB               	movlw	-5
  8613  002C88  0060  F0EF  FFE3   	movff	btemp,plusw1
  8614  002C8E  0EFC               	movlw	-4
  8615  002C90  0060  F0EF  FFE3   	movff	btemp,plusw1
  8616  002C96                     l7683:
  8617                           
  8618                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  8619                           ;stkvar	_ll @ sp[(-11)+0]
  8620  002C96  50E1               	movf	fsr1l,w,c
  8621  002C98  0FF5               	addlw	-11
  8622  002C9A  6ED9               	movwf	fsr2l,c
  8623  002C9C  50E2               	movf	fsr1h,w,c
  8624  002C9E  6EDA               	movwf	fsr2h,c
  8625  002CA0  0EFF               	movlw	255
  8626  002CA2  22DA               	addwfc	fsr2h,f,c
  8627  002CA4  006F FF7B FFE6     	movff	postinc2,postinc1
  8628  002CAA  006F FF7B FFE6     	movff	postinc2,postinc1
  8629  002CB0  006F FF7B FFE6     	movff	postinc2,postinc1
  8630  002CB6  006F FF7B FFE6     	movff	postinc2,postinc1
  8631  002CBC  006F FF7B FFE6     	movff	postinc2,postinc1
  8632  002CC2  006F FF7B FFE6     	movff	postinc2,postinc1
  8633  002CC8  006F FF7B FFE6     	movff	postinc2,postinc1
  8634  002CCE  006F FF7B FFE6     	movff	postinc2,postinc1
  8635                           
  8636                           ;stkvar	_fp @ sp[(-19)+-2]
  8637  002CD4  0EEB               	movlw	-21
  8638  002CD6  006F FF8F FFE6     	movff	plusw1,postinc1
  8639  002CDC  006F FF8F FFE6     	movff	plusw1,postinc1
  8640  002CE2  ECC1  F017         	call	_dtoa	;wreg free
  8641  002CE6  D148               	goto	l1829
  8642  002CE8                     l7687:
  8643                           
  8644                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  8645  002CE8  0E02               	movlw	2
  8646  002CEA  6EE6               	movwf	postinc1,c
  8647  002CEC  0E00               	movlw	0
  8648  002CEE  6EE6               	movwf	postinc1,c
  8649  002CF0  0E9D               	movlw	STR_19& (0+255)
  8650  002CF2  6EE6               	movwf	postinc1,c
  8651                           
  8652                           ;stkvar	_fmt @ sp[(-14)+-4]
  8653  002CF4  0EEE               	movlw	-18
  8654  002CF6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8655  002CFC  0EEF               	movlw	-17
  8656  002CFE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8657  002D04  50DF               	movf	indf2,w,c
  8658  002D06  6EE6               	movwf	postinc1,c
  8659  002D08  EC04  F024         	call	_strncmp	;wreg free
  8660  002D0C  503B               	movf	btemp,w,c
  8661  002D0E  103C               	iorwf	btemp+1,w,c
  8662  002D10  B4D8               	btfsc	status,2,c
  8663  002D12  D016               	goto	u4810
  8664  002D14  0E02               	movlw	2
  8665  002D16  6EE6               	movwf	postinc1,c
  8666  002D18  0E00               	movlw	0
  8667  002D1A  6EE6               	movwf	postinc1,c
  8668  002D1C  0EA0               	movlw	STR_23& (0+255)
  8669  002D1E  6EE6               	movwf	postinc1,c
  8670                           
  8671                           ;stkvar	_fmt @ sp[(-14)+-4]
  8672  002D20  0EEE               	movlw	-18
  8673  002D22  006F FF8F FFD9     	movff	plusw1,fsr2l
  8674  002D28  0EEF               	movlw	-17
  8675  002D2A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8676  002D30  50DF               	movf	indf2,w,c
  8677  002D32  6EE6               	movwf	postinc1,c
  8678  002D34  EC04  F024         	call	_strncmp	;wreg free
  8679  002D38  503B               	movf	btemp,w,c
  8680  002D3A  103C               	iorwf	btemp+1,w,c
  8681  002D3C  A4D8               	btfss	status,2,c
  8682  002D3E  D067               	goto	l7699
  8683  002D40                     u4810:
  8684                           
  8685                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  8686                           ;stkvar	_fmt @ sp[(-11)+-4]
  8687  002D40  0EF1               	movlw	-15
  8688  002D42  006F FF8F FFD9     	movff	plusw1,fsr2l
  8689  002D48  0EF2               	movlw	-14
  8690  002D4A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8691  002D50  0E02               	movlw	2
  8692  002D52  26DF               	addwf	indf2,f,c
  8693                           
  8694                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  8695                           ;stkvar	_ap @ sp[(-11)+-6]
  8696  002D54  0EEF               	movlw	-17
  8697  002D56  006F FF8F FFD9     	movff	plusw1,fsr2l
  8698  002D5C  0EF0               	movlw	-16
  8699  002D5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8700  002D64  0E04               	movlw	4
  8701  002D66  5EDE               	subwf	postinc2,f,c
  8702  002D68  0E00               	movlw	0
  8703  002D6A  5ADD               	subwfb	postdec2,f,c
  8704  002D6C  006F FF78  F045    	movff	postinc2,btemp+10
  8705  002D72  006F FF74  F046    	movff	postdec2,btemp+11
  8706  002D78  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8707  002D7E  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8708  002D84  006F FF78  F043    	movff	postinc2,btemp+8
  8709  002D8A  006F FF78  F044    	movff	postinc2,btemp+9
  8710  002D90  006F FF78  F045    	movff	postinc2,btemp+10
  8711  002D96  006F FF78  F046    	movff	postinc2,btemp+11
  8712  002D9C  0060  F10C  F04B   	movff	btemp+8,btemp+16
  8713  002DA2  0060  F110  F04C   	movff	btemp+9,btemp+17
  8714  002DA8  0060  F114  F04D   	movff	btemp+10,btemp+18
  8715  002DAE  0060  F118  F04E   	movff	btemp+11,btemp+19
  8716  002DB4  6A4F               	clrf	btemp+20,c
  8717  002DB6  BE4E               	btfsc	btemp+19,7,c
  8718  002DB8  684F               	setf	btemp+20,c
  8719  002DBA  0060  F13C  F050   	movff	btemp+20,btemp+21
  8720  002DC0  0060  F13C  F051   	movff	btemp+20,btemp+22
  8721  002DC6  0060  F13C  F052   	movff	btemp+20,btemp+23
  8722                           
  8723                           ;stkvar	_ll @ sp[(-11)+0]
  8724  002DCC  0EF5               	movlw	-11
  8725  002DCE  0060  F12F  FFE3   	movff	btemp+16,plusw1
  8726  002DD4  0EF6               	movlw	-10
  8727  002DD6  0060  F133  FFE3   	movff	btemp+17,plusw1
  8728  002DDC  0EF7               	movlw	-9
  8729  002DDE  0060  F137  FFE3   	movff	btemp+18,plusw1
  8730  002DE4  0EF8               	movlw	-8
  8731  002DE6  0060  F13B  FFE3   	movff	btemp+19,plusw1
  8732  002DEC  0EF9               	movlw	-7
  8733  002DEE  0060  F13F  FFE3   	movff	btemp+20,plusw1
  8734  002DF4  0EFA               	movlw	-6
  8735  002DF6  0060  F143  FFE3   	movff	btemp+21,plusw1
  8736  002DFC  0EFB               	movlw	-5
  8737  002DFE  0060  F147  FFE3   	movff	btemp+22,plusw1
  8738  002E04  0EFC               	movlw	-4
  8739  002E06  0060  F14B  FFE3   	movff	btemp+23,plusw1
  8740  002E0C  D744               	goto	l7683
  8741  002E0E                     l7699:
  8742                           
  8743                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8744                           ;stkvar	_fmt @ sp[(-11)+-4]
  8745  002E0E  0EF1               	movlw	-15
  8746  002E10  006F FF8F FFD9     	movff	plusw1,fsr2l
  8747  002E16  0EF2               	movlw	-14
  8748  002E18  006F FF8F FFDA     	movff	plusw1,fsr2h
  8749  002E1E  006F FF7F FFF6     	movff	indf2,tblptrl
  8750  002E24                     	if	1	;There is more than 1 active tblptr byte
  8751  002E24  0E20               	movlw	high __smallconst
  8752  002E26  6EF7               	movwf	tblptrh,c
  8753  002E28                     	endif
  8754  002E28                     	if	0	;tblptru may be non-zero
  8755  002E28                     	endif
  8756  002E28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8757  002E28  0E00               	movlw	low (__smallconst shr (0+16))
  8758  002E2A  6EF8               	movwf	tblptru,c
  8759  002E2C                     	endif
  8760  002E2C  0008               	tblrd		*
  8761  002E2E  50F5               	movf	tablat,w,c
  8762  002E30  0A73               	xorlw	115
  8763  002E32  A4D8               	btfss	status,2,c
  8764  002E34  D040               	goto	l7709
  8765                           
  8766                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8767                           ;stkvar	_fmt @ sp[(-11)+-4]
  8768  002E36  0EF1               	movlw	-15
  8769  002E38  006F FF8F FFD9     	movff	plusw1,fsr2l
  8770  002E3E  0EF2               	movlw	-14
  8771  002E40  006F FF8F FFDA     	movff	plusw1,fsr2h
  8772  002E46  2ADF               	incf	indf2,f,c
  8773                           
  8774                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8775                           ;stkvar	_ap @ sp[(-11)+-6]
  8776  002E48  0EEF               	movlw	-17
  8777  002E4A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8778  002E50  0EF0               	movlw	-16
  8779  002E52  006F FF8F FFDA     	movff	plusw1,fsr2h
  8780  002E58  0E02               	movlw	2
  8781  002E5A  5EDE               	subwf	postinc2,f,c
  8782  002E5C  0E00               	movlw	0
  8783  002E5E  5ADD               	subwfb	postdec2,f,c
  8784  002E60  006F FF78  F045    	movff	postinc2,btemp+10
  8785  002E66  006F FF74  F046    	movff	postdec2,btemp+11
  8786  002E6C  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8787  002E72  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8788  002E78  006F FF78  F045    	movff	postinc2,btemp+10
  8789  002E7E  006F FF74  F046    	movff	postdec2,btemp+11
  8790                           
  8791                           ;stkvar	_cp @ sp[(-11)+8]
  8792  002E84  0EFE               	movlw	-2
  8793  002E86  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8794  002E8C  0EFD               	movlw	-3
  8795  002E8E  0060  F117  FFE3   	movff	btemp+10,plusw1
  8796                           
  8797                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8798                           ;stkvar	_cp @ sp[(-11)+8]
  8799  002E94  0EFD               	movlw	-3
  8800  002E96  006F FF8F FFE6     	movff	plusw1,postinc1
  8801  002E9C  006F FF8F FFE6     	movff	plusw1,postinc1
  8802                           
  8803                           ;stkvar	_fp @ sp[(-13)+-2]
  8804  002EA2  0EF1               	movlw	-15
  8805  002EA4  006F FF8F FFE6     	movff	plusw1,postinc1
  8806  002EAA  006F FF8F FFE6     	movff	plusw1,postinc1
  8807  002EB0  ECF8  F01C         	call	_stoa	;wreg free
  8808  002EB4  D061               	goto	l1829
  8809  002EB6                     l7709:
  8810                           
  8811                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8812                           ;stkvar	_fmt @ sp[(-11)+-4]
  8813  002EB6  0EF1               	movlw	-15
  8814  002EB8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8815  002EBE  0EF2               	movlw	-14
  8816  002EC0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8817  002EC6  006F FF7F FFF6     	movff	indf2,tblptrl
  8818  002ECC                     	if	1	;There is more than 1 active tblptr byte
  8819  002ECC  0E20               	movlw	high __smallconst
  8820  002ECE  6EF7               	movwf	tblptrh,c
  8821  002ED0                     	endif
  8822  002ED0                     	if	0	;tblptru may be non-zero
  8823  002ED0                     	endif
  8824  002ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8825  002ED0  0E00               	movlw	low (__smallconst shr (0+16))
  8826  002ED2  6EF8               	movwf	tblptru,c
  8827  002ED4                     	endif
  8828  002ED4  0008               	tblrd		*
  8829  002ED6  50F5               	movf	tablat,w,c
  8830  002ED8  0A25               	xorlw	37
  8831  002EDA  A4D8               	btfss	status,2,c
  8832  002EDC  D018               	goto	l7719
  8833                           
  8834                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8835                           ;stkvar	_fmt @ sp[(-11)+-4]
  8836  002EDE  0EF1               	movlw	-15
  8837  002EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8838  002EE6  0EF2               	movlw	-14
  8839  002EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8840  002EEE  2ADF               	incf	indf2,f,c
  8841                           
  8842                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8843                           ;stkvar	_fp @ sp[(-11)+-2]
  8844  002EF0  0EF3               	movlw	-13
  8845  002EF2  006F FF8F FFE6     	movff	plusw1,postinc1
  8846  002EF8  006F FF8F FFE6     	movff	plusw1,postinc1
  8847  002EFE  0E25               	movlw	37
  8848  002F00  6EE6               	movwf	postinc1,c
  8849  002F02  0E00               	movlw	0
  8850  002F04  6EE6               	movwf	postinc1,c
  8851  002F06  EC56  F025         	call	_fputc	;wreg free
  8852  002F0A                     l7715:
  8853                           
  8854                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8855  002F0A  0E01               	movlw	1
  8856  002F0C  D00A               	goto	L21
  8857  002F0E                     l7719:
  8858                           
  8859                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8860                           ;stkvar	_fmt @ sp[(-11)+-4]
  8861  002F0E  0EF1               	movlw	-15
  8862  002F10  006F FF8F FFD9     	movff	plusw1,fsr2l
  8863  002F16  0EF2               	movlw	-14
  8864  002F18  006F FF8F FFDA     	movff	plusw1,fsr2h
  8865  002F1E  2ADF               	incf	indf2,f,c
  8866                           
  8867                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8868  002F20  0E00               	movlw	0
  8869  002F22                     L21:
  8870  002F22  6E3B               	movwf	btemp,c
  8871  002F24  0E00               	movlw	0
  8872  002F26  6E3C               	movwf	btemp+1,c
  8873  002F28  D027               	goto	l1829
  8874  002F2A                     l7725:
  8875                           
  8876                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8877                           ;stkvar	_fp @ sp[(-11)+-2]
  8878  002F2A  0EF3               	movlw	-13
  8879  002F2C  006F FF8F FFE6     	movff	plusw1,postinc1
  8880  002F32  006F FF8F FFE6     	movff	plusw1,postinc1
  8881                           
  8882                           ;stkvar	_fmt @ sp[(-13)+-4]
  8883  002F38  0EEF               	movlw	-17
  8884  002F3A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8885  002F40  0EF0               	movlw	-16
  8886  002F42  006F FF8F FFDA     	movff	plusw1,fsr2h
  8887  002F48  006F FF7F FFF6     	movff	indf2,tblptrl
  8888  002F4E                     	if	1	;There is more than 1 active tblptr byte
  8889  002F4E  0E20               	movlw	high __smallconst
  8890  002F50  6EF7               	movwf	tblptrh,c
  8891  002F52                     	endif
  8892  002F52                     	if	0	;tblptru may be non-zero
  8893  002F52                     	endif
  8894  002F52                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8895  002F52  0E00               	movlw	low (__smallconst shr (0+16))
  8896  002F54  6EF8               	movwf	tblptru,c
  8897  002F56                     	endif
  8898  002F56  0008               	tblrd		*
  8899  002F58  50F5               	movf	tablat,w,c
  8900  002F5A  6EE6               	movwf	postinc1,c
  8901  002F5C  0E00               	movlw	0
  8902  002F5E  6EE6               	movwf	postinc1,c
  8903  002F60  EC56  F025         	call	_fputc	;wreg free
  8904                           
  8905                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8906                           ;stkvar	_fmt @ sp[(-11)+-4]
  8907  002F64  0EF1               	movlw	-15
  8908  002F66  006F FF8F FFD9     	movff	plusw1,fsr2l
  8909  002F6C  0EF2               	movlw	-14
  8910  002F6E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8911  002F74  2ADF               	incf	indf2,f,c
  8912  002F76  D7C9               	goto	l7715
  8913  002F78                     l1829:
  8914                           
  8915                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8916  002F78  0EEF               	movlw	239
  8917  002F7A  26E1               	addwf	fsr1l,f,c
  8918  002F7C  0EFF               	movlw	255
  8919  002F7E  22E2               	addwfc	fsr1h,f,c
  8920  002F80  0012               	return		;funcret
  8921  002F82                     __end_of_vfpfcnvrt:
  8922                           	opt callstack 0
  8923                           
  8924 ;; *************** function _strncmp *****************
  8925 ;; Defined at:
  8926 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  8927 ;; Parameters:    Size  Location     Type
  8928 ;;  _l              1  [STACK] PTR const unsigned char 
  8929 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  8930 ;;		 -> STR_14(20), STR_13(6), STR_12(14), STR_11(20), 
  8931 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  8932 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  8933 ;;		 -> STR_1(17), 
  8934 ;;  _r              1  [STACK] PTR const unsigned char 
  8935 ;;		 -> STR_25(3), STR_21(3), 
  8936 ;;  n               2  [STACK] unsigned int 
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;  r               1  [STACK] PTR const unsigned char 
  8939 ;;		 -> STR_25(3), STR_21(3), 
  8940 ;;  l               1  [STACK] PTR const unsigned char 
  8941 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  8942 ;;		 -> STR_14(20), STR_13(6), STR_12(14), STR_11(20), 
  8943 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  8944 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  8945 ;;		 -> STR_1(17), 
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  2  [STACK] int 
  8948 ;; Registers used:
  8949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8959 ;;Total ram usage:        0 bytes
  8960 ;; Hardware stack levels used:    1
  8961 ;; Hardware stack levels required when called:    3
  8962 ;; This function calls:
  8963 ;;		Nothing
  8964 ;; This function is called by:
  8965 ;;		_vfpfcnvrt
  8966 ;; This function uses a reentrant model
  8967 ;;
  8968                           
  8969                           	psect	text37
  8970  004808                     __ptext37:
  8971                           	opt callstack 0
  8972  004808                     _strncmp:
  8973                           	opt callstack 0
  8974                           
  8975                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8976  004808  52E6               	movf	postinc1,f,c
  8977  00480A  52E6               	movf	postinc1,f,c
  8978                           
  8979                           ;stkvar	__l @ sp[(-2)+-1]
  8980                           
  8981                           ;incstack = 0
  8982  00480C  0EFD               	movlw	-3
  8983  00480E  006F FF8C  F046    	movff	plusw1,btemp+11
  8984                           
  8985                           ;stkvar	_l @ sp[(-2)+1]
  8986  004814  0EFF               	movlw	-1
  8987  004816  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8988                           
  8989                           ;stkvar	__r @ sp[(-2)+-2]
  8990  00481C  0EFC               	movlw	-4
  8991  00481E  006F FF8C  F046    	movff	plusw1,btemp+11
  8992                           
  8993                           ;stkvar	_r @ sp[(-2)+0]
  8994  004824  0EFE               	movlw	-2
  8995  004826  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8996                           
  8997                           ;stkvar	_n @ sp[(-2)+-4]
  8998  00482C  0EFA               	movlw	-6
  8999  00482E  006F FF8C  F03B    	movff	plusw1,btemp
  9000  004834  0E01               	movlw	1
  9001  004836  5E3B               	subwf	btemp,f,c
  9002  004838  0EFA               	movlw	-6
  9003  00483A  0060  F0EF  FFE3   	movff	btemp,plusw1
  9004  004840  0EFB               	movlw	-5
  9005  004842  006F FF8C  F03B    	movff	plusw1,btemp
  9006  004848  0E00               	movlw	0
  9007  00484A  5A3B               	subwfb	btemp,f,c
  9008  00484C  0EFB               	movlw	-5
  9009  00484E  0060  F0EF  FFE3   	movff	btemp,plusw1
  9010  004854  0EFA               	movlw	-6
  9011  004856  28E3               	incf	plusw1,w,c
  9012  004858  E121               	bnz	l5497
  9013  00485A  0EFB               	movlw	-5
  9014  00485C  28E3               	incf	plusw1,w,c
  9015  00485E  A4D8               	btfss	status,2,c
  9016  004860  D01D               	goto	l5497
  9017  004862  0E00               	movlw	0
  9018  004864  6E3B               	movwf	btemp,c
  9019  004866  0E00               	movlw	0
  9020  004868  6E3C               	movwf	btemp+1,c
  9021  00486A  D091               	goto	l2578
  9022  00486C                     l5493:
  9023                           
  9024                           ;stkvar	_l @ sp[(-2)+1]
  9025  00486C  0EFF               	movlw	-1
  9026  00486E  2AE3               	incf	plusw1,f,c
  9027                           
  9028                           ;stkvar	_r @ sp[(-2)+0]
  9029  004870  0EFE               	movlw	-2
  9030  004872  2AE3               	incf	plusw1,f,c
  9031                           
  9032                           ;stkvar	_n @ sp[(-2)+-4]
  9033  004874  0EFA               	movlw	-6
  9034  004876  006F FF8C  F03B    	movff	plusw1,btemp
  9035  00487C  0E01               	movlw	1
  9036  00487E  5E3B               	subwf	btemp,f,c
  9037  004880  0EFA               	movlw	-6
  9038  004882  0060  F0EF  FFE3   	movff	btemp,plusw1
  9039  004888  0EFB               	movlw	-5
  9040  00488A  006F FF8C  F03B    	movff	plusw1,btemp
  9041  004890  0E00               	movlw	0
  9042  004892  5A3B               	subwfb	btemp,f,c
  9043  004894  0EFB               	movlw	-5
  9044  004896  0060  F0EF  FFE3   	movff	btemp,plusw1
  9045  00489C                     l5497:
  9046                           
  9047                           ;stkvar	_l @ sp[(-2)+1]
  9048  00489C  50E1               	movf	fsr1l,w,c
  9049  00489E  0FFF               	addlw	-1
  9050  0048A0  6ED9               	movwf	fsr2l,c
  9051  0048A2  50E2               	movf	fsr1h,w,c
  9052  0048A4  6EDA               	movwf	fsr2h,c
  9053  0048A6  0EFF               	movlw	255
  9054  0048A8  22DA               	addwfc	fsr2h,f,c
  9055  0048AA  006F FF7F FFF6     	movff	indf2,tblptrl
  9056  0048B0                     	if	1	;There is more than 1 active tblptr byte
  9057  0048B0  0E20               	movlw	high __smallconst
  9058  0048B2  6EF7               	movwf	tblptrh,c
  9059  0048B4                     	endif
  9060  0048B4                     	if	0	;tblptru may be non-zero
  9061  0048B4                     	endif
  9062  0048B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9063  0048B4  0E00               	movlw	low (__smallconst shr (0+16))
  9064  0048B6  6EF8               	movwf	tblptru,c
  9065  0048B8                     	endif
  9066  0048B8  0008               	tblrd		*
  9067  0048BA  50F5               	movf	tablat,w,c
  9068  0048BC  0900               	iorlw	0
  9069  0048BE  B4D8               	btfsc	status,2,c
  9070  0048C0  D041               	goto	u2940
  9071                           
  9072                           ;stkvar	_r @ sp[(-2)+0]
  9073  0048C2  50E1               	movf	fsr1l,w,c
  9074  0048C4  0FFE               	addlw	-2
  9075  0048C6  6ED9               	movwf	fsr2l,c
  9076  0048C8  50E2               	movf	fsr1h,w,c
  9077  0048CA  6EDA               	movwf	fsr2h,c
  9078  0048CC  0EFF               	movlw	255
  9079  0048CE  22DA               	addwfc	fsr2h,f,c
  9080  0048D0  006F FF7F FFF6     	movff	indf2,tblptrl
  9081  0048D6                     	if	1	;There is more than 1 active tblptr byte
  9082  0048D6  0E20               	movlw	high __smallconst
  9083  0048D8  6EF7               	movwf	tblptrh,c
  9084  0048DA                     	endif
  9085  0048DA                     	if	0	;tblptru may be non-zero
  9086  0048DA                     	endif
  9087  0048DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9088  0048DA  0E00               	movlw	low (__smallconst shr (0+16))
  9089  0048DC  6EF8               	movwf	tblptru,c
  9090  0048DE                     	endif
  9091  0048DE  0008               	tblrd		*
  9092  0048E0  50F5               	movf	tablat,w,c
  9093  0048E2  0900               	iorlw	0
  9094  0048E4  B4D8               	btfsc	status,2,c
  9095  0048E6  D02E               	goto	u2940
  9096                           
  9097                           ;stkvar	_n @ sp[(-2)+-4]
  9098  0048E8  0EFA               	movlw	-6
  9099  0048EA  006F FF8C  F03B    	movff	plusw1,btemp
  9100  0048F0  0EFB               	movlw	-5
  9101  0048F2  50E3               	movf	plusw1,w,c
  9102  0048F4  103B               	iorwf	btemp,w,c
  9103  0048F6  B4D8               	btfsc	status,2,c
  9104  0048F8  D025               	goto	u2940
  9105                           
  9106                           ;stkvar	_l @ sp[(-2)+1]
  9107  0048FA  50E1               	movf	fsr1l,w,c
  9108  0048FC  0FFF               	addlw	-1
  9109  0048FE  6ED9               	movwf	fsr2l,c
  9110  004900  50E2               	movf	fsr1h,w,c
  9111  004902  6EDA               	movwf	fsr2h,c
  9112  004904  0EFF               	movlw	255
  9113  004906  22DA               	addwfc	fsr2h,f,c
  9114  004908  006F FF7F FFF6     	movff	indf2,tblptrl
  9115  00490E                     	if	1	;There is more than 1 active tblptr byte
  9116  00490E  0E20               	movlw	high __smallconst
  9117  004910  6EF7               	movwf	tblptrh,c
  9118  004912                     	endif
  9119  004912                     	if	0	;tblptru may be non-zero
  9120  004912                     	endif
  9121  004912                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9122  004912  0E00               	movlw	low (__smallconst shr (0+16))
  9123  004914  6EF8               	movwf	tblptru,c
  9124  004916                     	endif
  9125  004916  0008               	tblrd		*
  9126  004918  006F FFD4  F046    	movff	tablat,btemp+11
  9127                           
  9128                           ;stkvar	_r @ sp[(-2)+0]
  9129  00491E  50E1               	movf	fsr1l,w,c
  9130  004920  0FFE               	addlw	-2
  9131  004922  6ED9               	movwf	fsr2l,c
  9132  004924  50E2               	movf	fsr1h,w,c
  9133  004926  6EDA               	movwf	fsr2h,c
  9134  004928  0EFF               	movlw	255
  9135  00492A  22DA               	addwfc	fsr2h,f,c
  9136  00492C  006F FF7F FFF6     	movff	indf2,tblptrl
  9137  004932                     	if	1	;There is more than 1 active tblptr byte
  9138  004932  0E20               	movlw	high __smallconst
  9139  004934  6EF7               	movwf	tblptrh,c
  9140  004936                     	endif
  9141  004936                     	if	0	;tblptru may be non-zero
  9142  004936                     	endif
  9143  004936                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9144  004936  0E00               	movlw	low (__smallconst shr (0+16))
  9145  004938  6EF8               	movwf	tblptru,c
  9146  00493A                     	endif
  9147  00493A  0008               	tblrd		*
  9148  00493C  50F5               	movf	tablat,w,c
  9149  00493E  1846               	xorwf	btemp+11,w,c
  9150  004940  B4D8               	btfsc	status,2,c
  9151  004942  D794               	goto	l5493
  9152  004944                     u2940:
  9153                           
  9154                           ;stkvar	_l @ sp[(-2)+1]
  9155  004944  50E1               	movf	fsr1l,w,c
  9156  004946  0FFF               	addlw	-1
  9157  004948  6ED9               	movwf	fsr2l,c
  9158  00494A  50E2               	movf	fsr1h,w,c
  9159  00494C  6EDA               	movwf	fsr2h,c
  9160  00494E  0EFF               	movlw	255
  9161  004950  22DA               	addwfc	fsr2h,f,c
  9162  004952  006F FF7F FFF6     	movff	indf2,tblptrl
  9163  004958                     	if	1	;There is more than 1 active tblptr byte
  9164  004958  0E20               	movlw	high __smallconst
  9165  00495A  6EF7               	movwf	tblptrh,c
  9166  00495C                     	endif
  9167  00495C                     	if	0	;tblptru may be non-zero
  9168  00495C                     	endif
  9169  00495C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9170  00495C  0E00               	movlw	low (__smallconst shr (0+16))
  9171  00495E  6EF8               	movwf	tblptru,c
  9172  004960                     	endif
  9173  004960  0008               	tblrd		*
  9174  004962  50F5               	movf	tablat,w,c
  9175  004964  6E3B               	movwf	btemp,c
  9176  004966  6A3C               	clrf	btemp+1,c
  9177                           
  9178                           ;stkvar	_r @ sp[(-2)+0]
  9179  004968  50E1               	movf	fsr1l,w,c
  9180  00496A  0FFE               	addlw	-2
  9181  00496C  6ED9               	movwf	fsr2l,c
  9182  00496E  50E2               	movf	fsr1h,w,c
  9183  004970  6EDA               	movwf	fsr2h,c
  9184  004972  0EFF               	movlw	255
  9185  004974  22DA               	addwfc	fsr2h,f,c
  9186  004976  006F FF7F FFF6     	movff	indf2,tblptrl
  9187  00497C                     	if	1	;There is more than 1 active tblptr byte
  9188  00497C  0E20               	movlw	high __smallconst
  9189  00497E  6EF7               	movwf	tblptrh,c
  9190  004980                     	endif
  9191  004980                     	if	0	;tblptru may be non-zero
  9192  004980                     	endif
  9193  004980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9194  004980  0E00               	movlw	low (__smallconst shr (0+16))
  9195  004982  6EF8               	movwf	tblptru,c
  9196  004984                     	endif
  9197  004984  0008               	tblrd		*
  9198  004986  50F5               	movf	tablat,w,c
  9199  004988  5E3B               	subwf	btemp,f,c
  9200  00498A  0E00               	movlw	0
  9201  00498C  5A3C               	subwfb	btemp+1,f,c
  9202  00498E                     l2578:
  9203                           
  9204                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  9205  00498E  0EFA               	movlw	250
  9206  004990  26E1               	addwf	fsr1l,f,c
  9207  004992  0EFF               	movlw	255
  9208  004994  22E2               	addwfc	fsr1h,f,c
  9209  004996  0012               	return		;funcret
  9210  004998                     __end_of_strncmp:
  9211                           	opt callstack 0
  9212                           
  9213 ;; *************** function _stoa *****************
  9214 ;; Defined at:
  9215 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9218 ;;		 -> f(5), NULL(0), 
  9219 ;;  s               2  [STACK] PTR unsigned char 
  9220 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(88), 
  9221 ;; Auto vars:     Size  Location     Type
  9222 ;;  nuls            7  [STACK] unsigned char [7]
  9223 ;;  l               2  [STACK] int 
  9224 ;;  p               2  [STACK] int 
  9225 ;;  cp              2  [STACK] PTR unsigned char 
  9226 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(6), 
  9227 ;;		 -> V(88), 
  9228 ;;  w               2  [STACK] int 
  9229 ;;  i               2  [STACK] int 
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  2  [STACK] int 
  9232 ;; Registers used:
  9233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9243 ;;Total ram usage:        0 bytes
  9244 ;; Hardware stack levels used:    1
  9245 ;; Hardware stack levels required when called:    6
  9246 ;; This function calls:
  9247 ;;		_fputc
  9248 ;;		_strlen
  9249 ;; This function is called by:
  9250 ;;		_vfpfcnvrt
  9251 ;; This function uses a reentrant model
  9252 ;;
  9253                           
  9254                           	psect	text38
  9255  0039F0                     __ptext38:
  9256                           	opt callstack 0
  9257  0039F0                     _stoa:
  9258                           	opt callstack 0
  9259                           
  9260                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9261  0039F0  0E11               	movlw	17
  9262  0039F2  26E1               	addwf	fsr1l,f,c
  9263  0039F4  0E00               	movlw	0
  9264  0039F6  22E2               	addwfc	fsr1h,f,c
  9265                           
  9266                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9267                           
  9268                           ;incstack = 0
  9269  0039F8  EE20  F0F2         	lfsr	2,stoa@F1144
  9270                           
  9271                           ;stkvar	_nuls @ sp[(-17)+0]
  9272  0039FC  0E07               	movlw	7
  9273  0039FE  6E3B               	movwf	btemp,c
  9274  003A00  0EEF               	movlw	-17
  9275  003A02                     us466999:
  9276  003A02  006F FF7B FFE3     	movff	postinc2,plusw1
  9277  003A08  28E8               	incf	wreg,w,c
  9278  003A0A  2E3B               	decfsz	btemp,f,c
  9279  003A0C  D7FA               	bra	us466999
  9280                           
  9281                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9282                           ;stkvar	_s @ sp[(-17)+-4]
  9283  003A0E  0EEB               	movlw	-21
  9284  003A10  006F FF8C  F045    	movff	plusw1,btemp+10
  9285  003A16  0EEC               	movlw	-20
  9286  003A18  006F FF8C  F046    	movff	plusw1,btemp+11
  9287                           
  9288                           ;stkvar	_cp @ sp[(-17)+11]
  9289  003A1E  0EFB               	movlw	-5
  9290  003A20  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9291  003A26  0EFA               	movlw	-6
  9292  003A28  0060  F117  FFE3   	movff	btemp+10,plusw1
  9293                           
  9294                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9295                           ;stkvar	_cp @ sp[(-17)+11]
  9296  003A2E  0EFA               	movlw	-6
  9297  003A30  006F FF8C  F03B    	movff	plusw1,btemp
  9298  003A36  0EFB               	movlw	-5
  9299  003A38  50E3               	movf	plusw1,w,c
  9300  003A3A  103B               	iorwf	btemp,w,c
  9301  003A3C  A4D8               	btfss	status,2,c
  9302  003A3E  D00E               	goto	l7613
  9303                           
  9304                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9305                           ;stkvar	_nuls @ sp[(-17)+0]
  9306  003A40  0EEF               	movlw	239
  9307  003A42  24E1               	addwf	fsr1l,w,c
  9308  003A44  6E45               	movwf	btemp+10,c
  9309  003A46  0EFF               	movlw	255
  9310  003A48  20E2               	addwfc	fsr1h,w,c
  9311  003A4A  6E46               	movwf	btemp+11,c
  9312                           
  9313                           ;stkvar	_cp @ sp[(-17)+11]
  9314  003A4C  0EFB               	movlw	-5
  9315  003A4E  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9316  003A54  0EFA               	movlw	-6
  9317  003A56  0060  F117  FFE3   	movff	btemp+10,plusw1
  9318  003A5C                     l7613:
  9319                           
  9320                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9321                           ;stkvar	_cp @ sp[(-17)+11]
  9322  003A5C  0EFA               	movlw	-6
  9323  003A5E  006F FF8F FFE6     	movff	plusw1,postinc1
  9324  003A64  006F FF8F FFE6     	movff	plusw1,postinc1
  9325  003A6A  EC3E  F028         	call	_strlen	;wreg free
  9326                           
  9327                           ;stkvar	_l @ sp[(-17)+7]
  9328  003A6E  0EF6               	movlw	-10
  9329  003A70  0060  F0EF  FFE3   	movff	btemp,plusw1
  9330  003A76  0EF7               	movlw	-9
  9331  003A78  0060  F0F3  FFE3   	movff	btemp+1,plusw1
  9332                           
  9333                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9334                           ;stkvar	_p @ sp[(-17)+9]
  9335  003A7E  0EF8               	movlw	-8
  9336  003A80  0060  F08B  FFE3   	movff	_prec,plusw1
  9337  003A86  0EF9               	movlw	-7
  9338  003A88  0060  F08F  FFE3   	movff	_prec+1,plusw1
  9339                           
  9340                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9341                           ;stkvar	_p @ sp[(-17)+9]
  9342  003A8E  0EF9               	movlw	-7
  9343  003A90  BEE3               	btfsc	plusw1,7,c
  9344  003A92  D023               	goto	l1810
  9345                           
  9346                           ;stkvar	_l @ sp[(-17)+7]
  9347                           ;stkvar	_p @ sp[(-17)+9]
  9348  003A94  50E1               	movf	fsr1l,w,c
  9349  003A96  0FF8               	addlw	-8
  9350  003A98  6ED9               	movwf	fsr2l,c
  9351  003A9A  50E2               	movf	fsr1h,w,c
  9352  003A9C  6EDA               	movwf	fsr2h,c
  9353  003A9E  0EFF               	movlw	255
  9354  003AA0  22DA               	addwfc	fsr2h,f,c
  9355  003AA2  0EF6               	movlw	-10
  9356  003AA4  50E3               	movf	plusw1,w,c
  9357  003AA6  5CDE               	subwf	postinc2,w,c
  9358  003AA8  50DE               	movf	postinc2,w,c
  9359  003AAA  0A80               	xorlw	128
  9360  003AAC  6E3B               	movwf	btemp,c
  9361  003AAE  0EF7               	movlw	-9
  9362  003AB0  50E3               	movf	plusw1,w,c
  9363  003AB2  0A80               	xorlw	128
  9364  003AB4  583B               	subwfb	btemp,w,c
  9365  003AB6  B0D8               	btfsc	status,0,c
  9366  003AB8  D010               	goto	l1810
  9367                           
  9368                           ;stkvar	_p @ sp[(-17)+9]
  9369                           ;stkvar	_l @ sp[(-17)+7]
  9370  003ABA  0EF8               	movlw	-8
  9371  003ABC  006F FF8C  F03B    	movff	plusw1,btemp
  9372  003AC2  0EF6               	movlw	-10
  9373  003AC4  0060  F0EF  FFE3   	movff	btemp,plusw1
  9374  003ACA  0EF9               	movlw	-7
  9375  003ACC  006F FF8C  F03B    	movff	plusw1,btemp
  9376  003AD2  0EF7               	movlw	-9
  9377  003AD4  0060  F0EF  FFE3   	movff	btemp,plusw1
  9378  003ADA                     l1810:
  9379                           
  9380                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9381                           ;stkvar	_l @ sp[(-17)+7]
  9382                           ;stkvar	_p @ sp[(-17)+9]
  9383  003ADA  0EF6               	movlw	-10
  9384  003ADC  006F FF8C  F03B    	movff	plusw1,btemp
  9385  003AE2  0EF8               	movlw	-8
  9386  003AE4  0060  F0EF  FFE3   	movff	btemp,plusw1
  9387  003AEA  0EF7               	movlw	-9
  9388  003AEC  006F FF8C  F03B    	movff	plusw1,btemp
  9389  003AF2  0EF9               	movlw	-7
  9390  003AF4  0060  F0EF  FFE3   	movff	btemp,plusw1
  9391                           
  9392                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9393                           ;stkvar	_w @ sp[(-17)+13]
  9394  003AFA  0EFC               	movlw	-4
  9395  003AFC  0060  F083  FFE3   	movff	_width,plusw1
  9396  003B02  0EFD               	movlw	-3
  9397  003B04  0060  F087  FFE3   	movff	_width+1,plusw1
  9398                           
  9399                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9400  003B0A  A024               	btfss	_flags,0,c
  9401  003B0C  D01F               	goto	l7633
  9402  003B0E  D031               	goto	u4710
  9403  003B10                     l7629:
  9404                           
  9405                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9406                           ;stkvar	_fp @ sp[(-17)+-2]
  9407  003B10  0EED               	movlw	-19
  9408  003B12  006F FF8F FFE6     	movff	plusw1,postinc1
  9409  003B18  006F FF8F FFE6     	movff	plusw1,postinc1
  9410  003B1E  0E20               	movlw	32
  9411  003B20  6EE6               	movwf	postinc1,c
  9412  003B22  0E00               	movlw	0
  9413  003B24  6EE6               	movwf	postinc1,c
  9414  003B26  EC56  F025         	call	_fputc	;wreg free
  9415                           
  9416                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9417                           ;stkvar	_l @ sp[(-17)+7]
  9418  003B2A  0EF6               	movlw	-10
  9419  003B2C  50E3               	movf	plusw1,w,c
  9420  003B2E  0F01               	addlw	1
  9421  003B30  6E3B               	movwf	btemp,c
  9422  003B32  0EF6               	movlw	-10
  9423  003B34  0060  F0EF  FFE3   	movff	btemp,plusw1
  9424  003B3A  6A3B               	clrf	btemp,c
  9425  003B3C  0EF7               	movlw	-9
  9426  003B3E  50E3               	movf	plusw1,w,c
  9427  003B40  203B               	addwfc	btemp,w,c
  9428  003B42  6E3B               	movwf	btemp,c
  9429  003B44  0EF7               	movlw	-9
  9430  003B46  0060  F0EF  FFE3   	movff	btemp,plusw1
  9431  003B4C                     l7633:
  9432                           
  9433                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9434                           ;stkvar	_w @ sp[(-17)+13]
  9435                           ;stkvar	_l @ sp[(-17)+7]
  9436  003B4C  50E1               	movf	fsr1l,w,c
  9437  003B4E  0FF6               	addlw	-10
  9438  003B50  6ED9               	movwf	fsr2l,c
  9439  003B52  50E2               	movf	fsr1h,w,c
  9440  003B54  6EDA               	movwf	fsr2h,c
  9441  003B56  0EFF               	movlw	255
  9442  003B58  22DA               	addwfc	fsr2h,f,c
  9443  003B5A  0EFC               	movlw	-4
  9444  003B5C  50E3               	movf	plusw1,w,c
  9445  003B5E  5CDE               	subwf	postinc2,w,c
  9446  003B60  50DE               	movf	postinc2,w,c
  9447  003B62  0A80               	xorlw	128
  9448  003B64  6E3B               	movwf	btemp,c
  9449  003B66  0EFD               	movlw	-3
  9450  003B68  50E3               	movf	plusw1,w,c
  9451  003B6A  0A80               	xorlw	128
  9452  003B6C  583B               	subwfb	btemp,w,c
  9453  003B6E  A0D8               	btfss	status,0,c
  9454  003B70  D7CF               	goto	l7629
  9455  003B72                     u4710:
  9456                           
  9457                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9458                           ;stkvar	_i @ sp[(-17)+15]
  9459  003B72  0EFE               	movlw	-2
  9460  003B74  6AE3               	clrf	plusw1,c
  9461  003B76  0EFF               	movlw	-1
  9462  003B78  6AE3               	clrf	plusw1,c
  9463                           
  9464                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9465  003B7A  D045               	goto	l7643
  9466  003B7C                     l7637:
  9467                           
  9468                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9469                           ;stkvar	_fp @ sp[(-17)+-2]
  9470  003B7C  0EED               	movlw	-19
  9471  003B7E  006F FF8F FFE6     	movff	plusw1,postinc1
  9472  003B84  006F FF8F FFE6     	movff	plusw1,postinc1
  9473                           
  9474                           ;stkvar	_cp @ sp[(-19)+11]
  9475  003B8A  0EF8               	movlw	-8
  9476  003B8C  006F FF8F FFF6     	movff	plusw1,tblptrl
  9477  003B92  0EF9               	movlw	-7
  9478  003B94  006F FF8F FFF7     	movff	plusw1,tblptrh
  9479  003B9A  0E00               	movlw	low (__smallconst shr (0+16))
  9480  003B9C  6EF8               	movwf	tblptru,c
  9481  003B9E  0E1F               	movlw	(high __ramtop+-1)
  9482  003BA0  64F7               	cpfsgt	tblptrh,c
  9483  003BA2  D003               	bra	u4727
  9484  003BA4  0008               	tblrd		*
  9485  003BA6  50F5               	movf	tablat,w,c
  9486  003BA8  D007               	bra	u4720
  9487  003BAA                     u4727:
  9488  003BAA  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9489  003BB0  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9490  003BB6  50EF               	movf	indf0,w,c
  9491  003BB8                     u4720:
  9492  003BB8  6EE6               	movwf	postinc1,c
  9493  003BBA  0E00               	movlw	0
  9494  003BBC  6EE6               	movwf	postinc1,c
  9495  003BBE  EC56  F025         	call	_fputc	;wreg free
  9496                           
  9497                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9498                           ;stkvar	_cp @ sp[(-17)+11]
  9499  003BC2  0EFA               	movlw	-6
  9500  003BC4  50E3               	movf	plusw1,w,c
  9501  003BC6  0F01               	addlw	1
  9502  003BC8  6E3B               	movwf	btemp,c
  9503  003BCA  0EFA               	movlw	-6
  9504  003BCC  0060  F0EF  FFE3   	movff	btemp,plusw1
  9505  003BD2  6A3B               	clrf	btemp,c
  9506  003BD4  0EFB               	movlw	-5
  9507  003BD6  50E3               	movf	plusw1,w,c
  9508  003BD8  203B               	addwfc	btemp,w,c
  9509  003BDA  6E3B               	movwf	btemp,c
  9510  003BDC  0EFB               	movlw	-5
  9511  003BDE  0060  F0EF  FFE3   	movff	btemp,plusw1
  9512                           
  9513                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9514                           ;stkvar	_i @ sp[(-17)+15]
  9515  003BE4  0EFE               	movlw	-2
  9516  003BE6  50E3               	movf	plusw1,w,c
  9517  003BE8  0F01               	addlw	1
  9518  003BEA  6E3B               	movwf	btemp,c
  9519  003BEC  0EFE               	movlw	-2
  9520  003BEE  0060  F0EF  FFE3   	movff	btemp,plusw1
  9521  003BF4  6A3B               	clrf	btemp,c
  9522  003BF6  0EFF               	movlw	-1
  9523  003BF8  50E3               	movf	plusw1,w,c
  9524  003BFA  203B               	addwfc	btemp,w,c
  9525  003BFC  6E3B               	movwf	btemp,c
  9526  003BFE  0EFF               	movlw	-1
  9527  003C00  0060  F0EF  FFE3   	movff	btemp,plusw1
  9528  003C06                     l7643:
  9529                           
  9530                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9531                           ;stkvar	_p @ sp[(-17)+9]
  9532                           ;stkvar	_i @ sp[(-17)+15]
  9533  003C06  50E1               	movf	fsr1l,w,c
  9534  003C08  0FFE               	addlw	-2
  9535  003C0A  6ED9               	movwf	fsr2l,c
  9536  003C0C  50E2               	movf	fsr1h,w,c
  9537  003C0E  6EDA               	movwf	fsr2h,c
  9538  003C10  0EFF               	movlw	255
  9539  003C12  22DA               	addwfc	fsr2h,f,c
  9540  003C14  0EF8               	movlw	-8
  9541  003C16  50E3               	movf	plusw1,w,c
  9542  003C18  5CDE               	subwf	postinc2,w,c
  9543  003C1A  50DE               	movf	postinc2,w,c
  9544  003C1C  0A80               	xorlw	128
  9545  003C1E  6E3B               	movwf	btemp,c
  9546  003C20  0EF9               	movlw	-7
  9547  003C22  50E3               	movf	plusw1,w,c
  9548  003C24  0A80               	xorlw	128
  9549  003C26  583B               	subwfb	btemp,w,c
  9550  003C28  A0D8               	btfss	status,0,c
  9551  003C2A  D7A8               	goto	l7637
  9552                           
  9553                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9554  003C2C  B024               	btfsc	_flags,0,c
  9555  003C2E  D01F               	goto	l7651
  9556  003C30  D031               	goto	u4750
  9557  003C32                     l7647:
  9558                           
  9559                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  9560                           ;stkvar	_fp @ sp[(-17)+-2]
  9561  003C32  0EED               	movlw	-19
  9562  003C34  006F FF8F FFE6     	movff	plusw1,postinc1
  9563  003C3A  006F FF8F FFE6     	movff	plusw1,postinc1
  9564  003C40  0E20               	movlw	32
  9565  003C42  6EE6               	movwf	postinc1,c
  9566  003C44  0E00               	movlw	0
  9567  003C46  6EE6               	movwf	postinc1,c
  9568  003C48  EC56  F025         	call	_fputc	;wreg free
  9569                           
  9570                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  9571                           ;stkvar	_l @ sp[(-17)+7]
  9572  003C4C  0EF6               	movlw	-10
  9573  003C4E  50E3               	movf	plusw1,w,c
  9574  003C50  0F01               	addlw	1
  9575  003C52  6E3B               	movwf	btemp,c
  9576  003C54  0EF6               	movlw	-10
  9577  003C56  0060  F0EF  FFE3   	movff	btemp,plusw1
  9578  003C5C  6A3B               	clrf	btemp,c
  9579  003C5E  0EF7               	movlw	-9
  9580  003C60  50E3               	movf	plusw1,w,c
  9581  003C62  203B               	addwfc	btemp,w,c
  9582  003C64  6E3B               	movwf	btemp,c
  9583  003C66  0EF7               	movlw	-9
  9584  003C68  0060  F0EF  FFE3   	movff	btemp,plusw1
  9585  003C6E                     l7651:
  9586                           
  9587                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  9588                           ;stkvar	_w @ sp[(-17)+13]
  9589                           ;stkvar	_l @ sp[(-17)+7]
  9590  003C6E  50E1               	movf	fsr1l,w,c
  9591  003C70  0FF6               	addlw	-10
  9592  003C72  6ED9               	movwf	fsr2l,c
  9593  003C74  50E2               	movf	fsr1h,w,c
  9594  003C76  6EDA               	movwf	fsr2h,c
  9595  003C78  0EFF               	movlw	255
  9596  003C7A  22DA               	addwfc	fsr2h,f,c
  9597  003C7C  0EFC               	movlw	-4
  9598  003C7E  50E3               	movf	plusw1,w,c
  9599  003C80  5CDE               	subwf	postinc2,w,c
  9600  003C82  50DE               	movf	postinc2,w,c
  9601  003C84  0A80               	xorlw	128
  9602  003C86  6E3B               	movwf	btemp,c
  9603  003C88  0EFD               	movlw	-3
  9604  003C8A  50E3               	movf	plusw1,w,c
  9605  003C8C  0A80               	xorlw	128
  9606  003C8E  583B               	subwfb	btemp,w,c
  9607  003C90  A0D8               	btfss	status,0,c
  9608  003C92  D7CF               	goto	l7647
  9609  003C94                     u4750:
  9610                           
  9611                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  9612                           ;stkvar	_l @ sp[(-17)+7]
  9613  003C94  0EF6               	movlw	-10
  9614  003C96  006F FF8C  F03B    	movff	plusw1,btemp
  9615  003C9C  0EF7               	movlw	-9
  9616  003C9E  006F FF8C  F03C    	movff	plusw1,btemp+1
  9617                           
  9618                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9619  003CA4  0EEB               	movlw	235
  9620  003CA6  26E1               	addwf	fsr1l,f,c
  9621  003CA8  0EFF               	movlw	255
  9622  003CAA  22E2               	addwfc	fsr1h,f,c
  9623  003CAC  0012               	return		;funcret
  9624  003CAE                     __end_of_stoa:
  9625                           	opt callstack 0
  9626                           
  9627 ;; *************** function _dtoa *****************
  9628 ;; Defined at:
  9629 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9630 ;; Parameters:    Size  Location     Type
  9631 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9632 ;;		 -> f(5), NULL(0), 
  9633 ;;  d               8  [STACK] long long 
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;  n               8  [STACK] long long 
  9636 ;;  i               2  [STACK] int 
  9637 ;;  s               2  [STACK] int 
  9638 ;;  w               2  [STACK] int 
  9639 ;;  p               2  [STACK] int 
  9640 ;; Return value:  Size  Location     Type
  9641 ;;                  2  [STACK] int 
  9642 ;; Registers used:
  9643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/0
  9646 ;;		On exit  : 0/0
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9653 ;;Total ram usage:        0 bytes
  9654 ;; Hardware stack levels used:    1
  9655 ;; Hardware stack levels required when called:    8
  9656 ;; This function calls:
  9657 ;;		___aodiv
  9658 ;;		___aomod
  9659 ;;		_abs
  9660 ;;		_pad
  9661 ;; This function is called by:
  9662 ;;		_vfpfcnvrt
  9663 ;; This function uses a reentrant model
  9664 ;;
  9665                           
  9666                           	psect	text39
  9667  002F82                     __ptext39:
  9668                           	opt callstack 0
  9669  002F82                     _dtoa:
  9670                           	opt callstack 0
  9671                           
  9672                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9673  002F82  0E12               	movlw	18
  9674  002F84  26E1               	addwf	fsr1l,f,c
  9675  002F86  0E00               	movlw	0
  9676  002F88  22E2               	addwfc	fsr1h,f,c
  9677                           
  9678                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  9679                           ;stkvar	_d @ sp[(-18)+-10]
  9680                           
  9681                           ;incstack = 0
  9682  002F8A  0EE4               	movlw	228
  9683  002F8C  24E1               	addwf	fsr1l,w,c
  9684  002F8E  6ED9               	movwf	fsr2l,c
  9685  002F90  0EFF               	movlw	255
  9686  002F92  20E2               	addwfc	fsr1h,w,c
  9687  002F94  6EDA               	movwf	fsr2h,c
  9688                           
  9689                           ;stkvar	_n @ sp[(-18)+2]
  9690  002F96  0E08               	movlw	8
  9691  002F98  6E3B               	movwf	btemp,c
  9692  002F9A  0EF0               	movlw	-16
  9693  002F9C                     us449999:
  9694  002F9C  006F FF7B FFE3     	movff	postinc2,plusw1
  9695  002FA2  28E8               	incf	wreg,w,c
  9696  002FA4  2E3B               	decfsz	btemp,f,c
  9697  002FA6  D7FA               	bra	us449999
  9698                           
  9699                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  9700                           ;stkvar	_n @ sp[(-18)+2]
  9701  002FA8  0EF7               	movlw	-9
  9702  002FAA  AEE3               	btfss	plusw1,7,c
  9703  002FAC  D002               	goto	u4500
  9704  002FAE  0E01               	movlw	1
  9705  002FB0  D001               	goto	u4510
  9706  002FB2                     u4500:
  9707  002FB2  0E00               	movlw	0
  9708  002FB4                     u4510:
  9709  002FB4  6E45               	movwf	btemp+10,c
  9710  002FB6  6A46               	clrf	btemp+11,c
  9711                           
  9712                           ;stkvar	_s @ sp[(-18)+12]
  9713  002FB8  0EFA               	movlw	-6
  9714  002FBA  0060  F117  FFE3   	movff	btemp+10,plusw1
  9715  002FC0  0EFB               	movlw	-5
  9716  002FC2  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9717                           
  9718                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  9719                           ;stkvar	_s @ sp[(-18)+12]
  9720  002FC8  0EFA               	movlw	-6
  9721  002FCA  006F FF8C  F03B    	movff	plusw1,btemp
  9722  002FD0  0EFB               	movlw	-5
  9723  002FD2  50E3               	movf	plusw1,w,c
  9724  002FD4  103B               	iorwf	btemp,w,c
  9725  002FD6  B4D8               	btfsc	status,2,c
  9726  002FD8  D025               	goto	u4530
  9727                           
  9728                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  9729                           ;stkvar	_n @ sp[(-18)+2]
  9730                           ;stkvar	_n @ sp[(-18)+2]
  9731  002FDA  0EF0               	movlw	-16
  9732  002FDC  6CE3               	negf	plusw1,c
  9733  002FDE  0EF1               	movlw	-15
  9734  002FE0  1EE3               	comf	plusw1,f,c
  9735  002FE2  0EF2               	movlw	-14
  9736  002FE4  1EE3               	comf	plusw1,f,c
  9737  002FE6  0EF3               	movlw	-13
  9738  002FE8  1EE3               	comf	plusw1,f,c
  9739  002FEA  0EF4               	movlw	-12
  9740  002FEC  1EE3               	comf	plusw1,f,c
  9741  002FEE  0EF5               	movlw	-11
  9742  002FF0  1EE3               	comf	plusw1,f,c
  9743  002FF2  0EF6               	movlw	-10
  9744  002FF4  1EE3               	comf	plusw1,f,c
  9745  002FF6  0EF7               	movlw	-9
  9746  002FF8  1EE3               	comf	plusw1,f,c
  9747  002FFA  E314               	bnc	u4530
  9748  002FFC  0EF1               	movlw	-15
  9749  002FFE  2AE3               	incf	plusw1,f,c
  9750  003000  E311               	bnc	u4530
  9751  003002  0EF2               	movlw	-14
  9752  003004  2AE3               	incf	plusw1,f,c
  9753  003006  E30E               	bnc	u4530
  9754  003008  0EF3               	movlw	-13
  9755  00300A  2AE3               	incf	plusw1,f,c
  9756  00300C  E30B               	bnc	u4530
  9757  00300E  0EF4               	movlw	-12
  9758  003010  2AE3               	incf	plusw1,f,c
  9759  003012  E308               	bnc	u4530
  9760  003014  0EF5               	movlw	-11
  9761  003016  2AE3               	incf	plusw1,f,c
  9762  003018  E305               	bnc	u4530
  9763  00301A  0EF6               	movlw	-10
  9764  00301C  2AE3               	incf	plusw1,f,c
  9765  00301E  E302               	bnc	u4530
  9766  003020  0EF7               	movlw	-9
  9767  003022  2AE3               	incf	plusw1,f,c
  9768  003024                     u4530:
  9769                           
  9770                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  9771  003024  AE23               	btfss	_prec+1,7,c
  9772                           
  9773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  9774  003026  9224               	bcf	_flags,1,c
  9775                           
  9776                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  9777  003028  BE23               	btfsc	_prec+1,7,c
  9778  00302A  D005               	goto	u4550
  9779  00302C  5023               	movf	_prec+1,w,c
  9780  00302E  E110               	bnz	l7555
  9781  003030  0422               	decf	_prec,w,c
  9782  003032  B0D8               	btfsc	status,0,c
  9783  003034  D00D               	goto	l7555
  9784  003036                     u4550:
  9785  003036  0E01               	movlw	1
  9786  003038  6E45               	movwf	btemp+10,c
  9787  00303A  0E00               	movlw	0
  9788  00303C  6E46               	movwf	btemp+11,c
  9789                           
  9790                           ;stkvar	_p @ sp[(-18)+16]
  9791  00303E  0EFE               	movlw	-2
  9792  003040  0060  F117  FFE3   	movff	btemp+10,plusw1
  9793  003046  0EFF               	movlw	-1
  9794  003048  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9795  00304E  D008               	goto	l1783
  9796  003050                     l7555:
  9797                           
  9798                           ;stkvar	_p @ sp[(-18)+16]
  9799  003050  0EFE               	movlw	-2
  9800  003052  0060  F08B  FFE3   	movff	_prec,plusw1
  9801  003058  0EFF               	movlw	-1
  9802  00305A  0060  F08F  FFE3   	movff	_prec+1,plusw1
  9803  003060                     l1783:
  9804                           
  9805                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  9806                           ;stkvar	_w @ sp[(-18)+14]
  9807  003060  0EFC               	movlw	-4
  9808  003062  0060  F083  FFE3   	movff	_width,plusw1
  9809  003068  0EFD               	movlw	-3
  9810  00306A  0060  F087  FFE3   	movff	_width+1,plusw1
  9811                           
  9812                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  9813                           ;stkvar	_s @ sp[(-18)+12]
  9814  003070  0EFA               	movlw	-6
  9815  003072  006F FF8C  F03B    	movff	plusw1,btemp
  9816  003078  0EFB               	movlw	-5
  9817  00307A  50E3               	movf	plusw1,w,c
  9818  00307C  103B               	iorwf	btemp,w,c
  9819  00307E  A4D8               	btfss	status,2,c
  9820  003080  D002               	goto	u4570
  9821  003082  A424               	btfss	_flags,2,c
  9822  003084  D00A               	goto	l7563
  9823  003086                     u4570:
  9824                           
  9825                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  9826                           ;stkvar	_w @ sp[(-18)+14]
  9827  003086  50E1               	movf	fsr1l,w,c
  9828  003088  0FFC               	addlw	-4
  9829  00308A  6ED9               	movwf	fsr2l,c
  9830  00308C  50E2               	movf	fsr1h,w,c
  9831  00308E  6EDA               	movwf	fsr2h,c
  9832  003090  0EFF               	movlw	255
  9833  003092  22DA               	addwfc	fsr2h,f,c
  9834  003094  06DE               	decf	postinc2,f,c
  9835  003096  0E00               	movlw	0
  9836  003098  5ADD               	subwfb	postdec2,f,c
  9837  00309A                     l7563:
  9838                           
  9839                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  9840  00309A  0E1F               	movlw	31
  9841  00309C  6E45               	movwf	btemp+10,c
  9842  00309E  0E00               	movlw	0
  9843  0030A0  6E46               	movwf	btemp+11,c
  9844                           
  9845                           ;stkvar	_i @ sp[(-18)+10]
  9846  0030A2  0EF8               	movlw	-8
  9847  0030A4  0060  F117  FFE3   	movff	btemp+10,plusw1
  9848  0030AA  0EF9               	movlw	-7
  9849  0030AC  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9850                           
  9851                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  9852  0030B2  0101               	movlb	1	; () banked
  9853  0030B4  6BEC               	clrf	(_dbuf+31)& (0+255),b
  9854                           
  9855                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9856  0030B6  D109               	goto	l7577
  9857  0030B8                     l7567:
  9858                           
  9859                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  9860                           ;stkvar	_i @ sp[(-18)+10]
  9861  0030B8  50E1               	movf	fsr1l,w,c
  9862  0030BA  0FF8               	addlw	-8
  9863  0030BC  6ED9               	movwf	fsr2l,c
  9864  0030BE  50E2               	movf	fsr1h,w,c
  9865  0030C0  6EDA               	movwf	fsr2h,c
  9866  0030C2  0EFF               	movlw	255
  9867  0030C4  22DA               	addwfc	fsr2h,f,c
  9868  0030C6  06DE               	decf	postinc2,f,c
  9869  0030C8  0E00               	movlw	0
  9870  0030CA  5ADD               	subwfb	postdec2,f,c
  9871                           
  9872                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  9873  0030CC  0E0A               	movlw	10
  9874  0030CE  6EE6               	movwf	postinc1,c
  9875  0030D0  0E00               	movlw	0
  9876  0030D2  6EE6               	movwf	postinc1,c
  9877  0030D4  0E00               	movlw	0
  9878  0030D6  6EE6               	movwf	postinc1,c
  9879  0030D8  0E00               	movlw	0
  9880  0030DA  6EE6               	movwf	postinc1,c
  9881  0030DC  0E00               	movlw	0
  9882  0030DE  6EE6               	movwf	postinc1,c
  9883  0030E0  0E00               	movlw	0
  9884  0030E2  6EE6               	movwf	postinc1,c
  9885  0030E4  0E00               	movlw	0
  9886  0030E6  6EE6               	movwf	postinc1,c
  9887  0030E8  0E00               	movlw	0
  9888  0030EA  6EE6               	movwf	postinc1,c
  9889                           
  9890                           ;stkvar	_n @ sp[(-26)+2]
  9891  0030EC  50E1               	movf	fsr1l,w,c
  9892  0030EE  0FE8               	addlw	-24
  9893  0030F0  6ED9               	movwf	fsr2l,c
  9894  0030F2  50E2               	movf	fsr1h,w,c
  9895  0030F4  6EDA               	movwf	fsr2h,c
  9896  0030F6  0EFF               	movlw	255
  9897  0030F8  22DA               	addwfc	fsr2h,f,c
  9898  0030FA  006F FF7B FFE6     	movff	postinc2,postinc1
  9899  003100  006F FF7B FFE6     	movff	postinc2,postinc1
  9900  003106  006F FF7B FFE6     	movff	postinc2,postinc1
  9901  00310C  006F FF7B FFE6     	movff	postinc2,postinc1
  9902  003112  006F FF7B FFE6     	movff	postinc2,postinc1
  9903  003118  006F FF7B FFE6     	movff	postinc2,postinc1
  9904  00311E  006F FF7B FFE6     	movff	postinc2,postinc1
  9905  003124  006F FF7B FFE6     	movff	postinc2,postinc1
  9906  00312A  EC02  F022         	call	___aomod	;wreg free
  9907  00312E  52E5               	movf	postdec1,f,c
  9908  003130  006F FF9C  F052    	movff	indf1,btemp+23
  9909  003136  52E5               	movf	postdec1,f,c
  9910  003138  006F FF9C  F051    	movff	indf1,btemp+22
  9911  00313E  52E5               	movf	postdec1,f,c
  9912  003140  006F FF9C  F050    	movff	indf1,btemp+21
  9913  003146  52E5               	movf	postdec1,f,c
  9914  003148  006F FF9C  F04F    	movff	indf1,btemp+20
  9915  00314E  52E5               	movf	postdec1,f,c
  9916  003150  006F FF9C  F04E    	movff	indf1,btemp+19
  9917  003156  52E5               	movf	postdec1,f,c
  9918  003158  006F FF9C  F04D    	movff	indf1,btemp+18
  9919  00315E  52E5               	movf	postdec1,f,c
  9920  003160  006F FF9C  F04C    	movff	indf1,btemp+17
  9921  003166  52E5               	movf	postdec1,f,c
  9922  003168  006F FF9C  F04B    	movff	indf1,btemp+16
  9923  00316E  0EF8               	movlw	248
  9924  003170  26E1               	addwf	fsr1l,f,c
  9925  003172  0EFF               	movlw	255
  9926  003174  22E2               	addwfc	fsr1h,f,c
  9927  003176  0060  F12C  F045   	movff	btemp+16,btemp+10
  9928  00317C  0060  F130  F046   	movff	btemp+17,btemp+11
  9929  003182  0060  F117  FFE6   	movff	btemp+10,postinc1
  9930  003188  0060  F11B  FFE6   	movff	btemp+11,postinc1
  9931  00318E  ECEC  F02B         	call	_abs	;wreg free
  9932  003192  0E30               	movlw	48
  9933  003194  263B               	addwf	btemp,f,c
  9934                           
  9935                           ;stkvar	_i @ sp[(-18)+10]
  9936  003196  0EF8               	movlw	-8
  9937  003198  006F FF8C  F045    	movff	plusw1,btemp+10
  9938  00319E  0EF9               	movlw	-7
  9939  0031A0  006F FF8C  F046    	movff	plusw1,btemp+11
  9940  0031A6  0ECD               	movlw	low _dbuf
  9941  0031A8  2445               	addwf	btemp+10,w,c
  9942  0031AA  6ED9               	movwf	fsr2l,c
  9943  0031AC  0E01               	movlw	high _dbuf
  9944  0031AE  2046               	addwfc	btemp+11,w,c
  9945  0031B0  6EDA               	movwf	fsr2h,c
  9946  0031B2  0060  F0EF  FFDF   	movff	btemp,indf2
  9947                           
  9948                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  9949                           ;stkvar	_p @ sp[(-18)+16]
  9950  0031B8  50E1               	movf	fsr1l,w,c
  9951  0031BA  0FFE               	addlw	-2
  9952  0031BC  6ED9               	movwf	fsr2l,c
  9953  0031BE  50E2               	movf	fsr1h,w,c
  9954  0031C0  6EDA               	movwf	fsr2h,c
  9955  0031C2  0EFF               	movlw	255
  9956  0031C4  22DA               	addwfc	fsr2h,f,c
  9957  0031C6  06DE               	decf	postinc2,f,c
  9958  0031C8  0E00               	movlw	0
  9959  0031CA  5ADD               	subwfb	postdec2,f,c
  9960                           
  9961                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  9962                           ;stkvar	_w @ sp[(-18)+14]
  9963  0031CC  50E1               	movf	fsr1l,w,c
  9964  0031CE  0FFC               	addlw	-4
  9965  0031D0  6ED9               	movwf	fsr2l,c
  9966  0031D2  50E2               	movf	fsr1h,w,c
  9967  0031D4  6EDA               	movwf	fsr2h,c
  9968  0031D6  0EFF               	movlw	255
  9969  0031D8  22DA               	addwfc	fsr2h,f,c
  9970  0031DA  06DE               	decf	postinc2,f,c
  9971  0031DC  0E00               	movlw	0
  9972  0031DE  5ADD               	subwfb	postdec2,f,c
  9973                           
  9974                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  9975  0031E0  0E0A               	movlw	10
  9976  0031E2  6EE6               	movwf	postinc1,c
  9977  0031E4  0E00               	movlw	0
  9978  0031E6  6EE6               	movwf	postinc1,c
  9979  0031E8  0E00               	movlw	0
  9980  0031EA  6EE6               	movwf	postinc1,c
  9981  0031EC  0E00               	movlw	0
  9982  0031EE  6EE6               	movwf	postinc1,c
  9983  0031F0  0E00               	movlw	0
  9984  0031F2  6EE6               	movwf	postinc1,c
  9985  0031F4  0E00               	movlw	0
  9986  0031F6  6EE6               	movwf	postinc1,c
  9987  0031F8  0E00               	movlw	0
  9988  0031FA  6EE6               	movwf	postinc1,c
  9989  0031FC  0E00               	movlw	0
  9990  0031FE  6EE6               	movwf	postinc1,c
  9991                           
  9992                           ;stkvar	_n @ sp[(-26)+2]
  9993  003200  50E1               	movf	fsr1l,w,c
  9994  003202  0FE8               	addlw	-24
  9995  003204  6ED9               	movwf	fsr2l,c
  9996  003206  50E2               	movf	fsr1h,w,c
  9997  003208  6EDA               	movwf	fsr2h,c
  9998  00320A  0EFF               	movlw	255
  9999  00320C  22DA               	addwfc	fsr2h,f,c
 10000  00320E  006F FF7B FFE6     	movff	postinc2,postinc1
 10001  003214  006F FF7B FFE6     	movff	postinc2,postinc1
 10002  00321A  006F FF7B FFE6     	movff	postinc2,postinc1
 10003  003220  006F FF7B FFE6     	movff	postinc2,postinc1
 10004  003226  006F FF7B FFE6     	movff	postinc2,postinc1
 10005  00322C  006F FF7B FFE6     	movff	postinc2,postinc1
 10006  003232  006F FF7B FFE6     	movff	postinc2,postinc1
 10007  003238  006F FF7B FFE6     	movff	postinc2,postinc1
 10008  00323E  ECA1  F01F         	call	___aodiv	;wreg free
 10009  003242  52E5               	movf	postdec1,f,c
 10010  003244  006F FF9C  F052    	movff	indf1,btemp+23
 10011  00324A  52E5               	movf	postdec1,f,c
 10012  00324C  006F FF9C  F051    	movff	indf1,btemp+22
 10013  003252  52E5               	movf	postdec1,f,c
 10014  003254  006F FF9C  F050    	movff	indf1,btemp+21
 10015  00325A  52E5               	movf	postdec1,f,c
 10016  00325C  006F FF9C  F04F    	movff	indf1,btemp+20
 10017  003262  52E5               	movf	postdec1,f,c
 10018  003264  006F FF9C  F04E    	movff	indf1,btemp+19
 10019  00326A  52E5               	movf	postdec1,f,c
 10020  00326C  006F FF9C  F04D    	movff	indf1,btemp+18
 10021  003272  52E5               	movf	postdec1,f,c
 10022  003274  006F FF9C  F04C    	movff	indf1,btemp+17
 10023  00327A  52E5               	movf	postdec1,f,c
 10024  00327C  006F FF9C  F04B    	movff	indf1,btemp+16
 10025  003282  0EF8               	movlw	248
 10026  003284  26E1               	addwf	fsr1l,f,c
 10027  003286  0EFF               	movlw	255
 10028  003288  22E2               	addwfc	fsr1h,f,c
 10029                           
 10030                           ;stkvar	_n @ sp[(-18)+2]
 10031  00328A  0EF0               	movlw	-16
 10032  00328C  0060  F12F  FFE3   	movff	btemp+16,plusw1
 10033  003292  0EF1               	movlw	-15
 10034  003294  0060  F133  FFE3   	movff	btemp+17,plusw1
 10035  00329A  0EF2               	movlw	-14
 10036  00329C  0060  F137  FFE3   	movff	btemp+18,plusw1
 10037  0032A2  0EF3               	movlw	-13
 10038  0032A4  0060  F13B  FFE3   	movff	btemp+19,plusw1
 10039  0032AA  0EF4               	movlw	-12
 10040  0032AC  0060  F13F  FFE3   	movff	btemp+20,plusw1
 10041  0032B2  0EF5               	movlw	-11
 10042  0032B4  0060  F143  FFE3   	movff	btemp+21,plusw1
 10043  0032BA  0EF6               	movlw	-10
 10044  0032BC  0060  F147  FFE3   	movff	btemp+22,plusw1
 10045  0032C2  0EF7               	movlw	-9
 10046  0032C4  0060  F14B  FFE3   	movff	btemp+23,plusw1
 10047  0032CA                     l7577:
 10048                           
 10049                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10050                           ;stkvar	_i @ sp[(-18)+10]
 10051  0032CA  0EF9               	movlw	-7
 10052  0032CC  BEE3               	btfsc	plusw1,7,c
 10053  0032CE  D036               	goto	u4620
 10054  0032D0  0EF9               	movlw	-7
 10055  0032D2  50E3               	movf	plusw1,w,c
 10056  0032D4  E104               	bnz	u4580
 10057  0032D6  0EF8               	movlw	-8
 10058  0032D8  04E3               	decf	plusw1,w,c
 10059  0032DA  A0D8               	btfss	status,0,c
 10060  0032DC  D02F               	goto	u4620
 10061  0032DE                     u4580:
 10062                           
 10063                           ;stkvar	_n @ sp[(-18)+2]
 10064  0032DE  0EF0               	movlw	-16
 10065  0032E0  50E3               	movf	plusw1,w,c
 10066  0032E2  E115               	bnz	u4591
 10067  0032E4  0EF1               	movlw	-15
 10068  0032E6  50E3               	movf	plusw1,w,c
 10069  0032E8  E112               	bnz	u4591
 10070  0032EA  0EF2               	movlw	-14
 10071  0032EC  50E3               	movf	plusw1,w,c
 10072  0032EE  E10F               	bnz	u4591
 10073  0032F0  0EF3               	movlw	-13
 10074  0032F2  50E3               	movf	plusw1,w,c
 10075  0032F4  E10C               	bnz	u4591
 10076  0032F6  0EF4               	movlw	-12
 10077  0032F8  50E3               	movf	plusw1,w,c
 10078  0032FA  E109               	bnz	u4591
 10079  0032FC  0EF5               	movlw	-11
 10080  0032FE  50E3               	movf	plusw1,w,c
 10081  003300  E106               	bnz	u4591
 10082  003302  0EF6               	movlw	-10
 10083  003304  50E3               	movf	plusw1,w,c
 10084  003306  E103               	bnz	u4591
 10085  003308  0EF7               	movlw	-9
 10086  00330A  50E3               	movf	plusw1,w,c
 10087  00330C  A4D8               	btfss	status,2,c
 10088  00330E                     u4591:
 10089  00330E  D6D4               	goto	l7567
 10090                           
 10091                           ;stkvar	_p @ sp[(-18)+16]
 10092  003310  0EFF               	movlw	-1
 10093  003312  BEE3               	btfsc	plusw1,7,c
 10094  003314  D007               	goto	u4600
 10095  003316  0EFF               	movlw	-1
 10096  003318  50E3               	movf	plusw1,w,c
 10097  00331A  E103               	bnz	u4601
 10098  00331C  0EFE               	movlw	-2
 10099  00331E  04E3               	decf	plusw1,w,c
 10100  003320  B0D8               	btfsc	status,0,c
 10101  003322                     u4601:
 10102  003322  D6CA               	goto	l7567
 10103  003324                     u4600:
 10104                           
 10105                           ;stkvar	_w @ sp[(-18)+14]
 10106  003324  0EFD               	movlw	-3
 10107  003326  BEE3               	btfsc	plusw1,7,c
 10108  003328  D009               	goto	u4620
 10109  00332A  0EFD               	movlw	-3
 10110  00332C  50E3               	movf	plusw1,w,c
 10111  00332E  E104               	bnz	u4610
 10112  003330  0EFC               	movlw	-4
 10113  003332  04E3               	decf	plusw1,w,c
 10114  003334  A0D8               	btfss	status,0,c
 10115  003336  D002               	goto	u4620
 10116  003338                     u4610:
 10117  003338  B224               	btfsc	_flags,1,c
 10118  00333A  D6BE               	goto	l7567
 10119  00333C                     u4620:
 10120                           
 10121                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 10122                           ;stkvar	_s @ sp[(-18)+12]
 10123  00333C  0EFA               	movlw	-6
 10124  00333E  006F FF8C  F03B    	movff	plusw1,btemp
 10125  003344  0EFB               	movlw	-5
 10126  003346  50E3               	movf	plusw1,w,c
 10127  003348  103B               	iorwf	btemp,w,c
 10128  00334A  A4D8               	btfss	status,2,c
 10129  00334C  D002               	goto	u4640
 10130  00334E  A424               	btfss	_flags,2,c
 10131  003350  D033               	goto	l7601
 10132  003352                     u4640:
 10133                           
 10134                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 10135                           ;stkvar	_i @ sp[(-18)+10]
 10136  003352  50E1               	movf	fsr1l,w,c
 10137  003354  0FF8               	addlw	-8
 10138  003356  6ED9               	movwf	fsr2l,c
 10139  003358  50E2               	movf	fsr1h,w,c
 10140  00335A  6EDA               	movwf	fsr2h,c
 10141  00335C  0EFF               	movlw	255
 10142  00335E  22DA               	addwfc	fsr2h,f,c
 10143  003360  06DE               	decf	postinc2,f,c
 10144  003362  0E00               	movlw	0
 10145  003364  5ADD               	subwfb	postdec2,f,c
 10146                           
 10147                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 10148                           ;stkvar	_s @ sp[(-18)+12]
 10149  003366  0EFA               	movlw	-6
 10150  003368  006F FF8C  F03B    	movff	plusw1,btemp
 10151  00336E  0EFB               	movlw	-5
 10152  003370  50E3               	movf	plusw1,w,c
 10153  003372  103B               	iorwf	btemp,w,c
 10154  003374  A4D8               	btfss	status,2,c
 10155  003376  D002               	goto	l7597
 10156  003378  0E2B               	movlw	43
 10157  00337A  D001               	goto	L22
 10158  00337C                     l7597:
 10159  00337C  0E2D               	movlw	45
 10160  00337E                     L22:
 10161  00337E  6E45               	movwf	btemp+10,c
 10162  003380  0E00               	movlw	0
 10163  003382  6E46               	movwf	btemp+11,c
 10164                           
 10165                           ;stkvar	_dtoa$3835 @ sp[(-18)+0]
 10166  003384  0EEE               	movlw	-18
 10167  003386  0060  F117  FFE3   	movff	btemp+10,plusw1
 10168  00338C  0EEF               	movlw	-17
 10169  00338E  0060  F11B  FFE3   	movff	btemp+11,plusw1
 10170                           
 10171                           ;stkvar	_dtoa$3835 @ sp[(-18)+0]
 10172                           ;stkvar	_i @ sp[(-18)+10]
 10173  003394  0EF8               	movlw	-8
 10174  003396  006F FF8C  F045    	movff	plusw1,btemp+10
 10175  00339C  0EF9               	movlw	-7
 10176  00339E  006F FF8C  F046    	movff	plusw1,btemp+11
 10177  0033A4  0ECD               	movlw	low _dbuf
 10178  0033A6  2445               	addwf	btemp+10,w,c
 10179  0033A8  6ED9               	movwf	fsr2l,c
 10180  0033AA  0E01               	movlw	high _dbuf
 10181  0033AC  2046               	addwfc	btemp+11,w,c
 10182  0033AE  6EDA               	movwf	fsr2h,c
 10183  0033B0  0EEE               	movlw	-18
 10184  0033B2  006F FF8F FFDF     	movff	plusw1,indf2
 10185  0033B8                     l7601:
 10186                           
 10187                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 10188                           ;stkvar	_w @ sp[(-18)+14]
 10189  0033B8  0EFC               	movlw	-4
 10190  0033BA  006F FF8F FFE6     	movff	plusw1,postinc1
 10191  0033C0  006F FF8F FFE6     	movff	plusw1,postinc1
 10192                           
 10193                           ;stkvar	_i @ sp[(-20)+10]
 10194  0033C6  0ECD               	movlw	low _dbuf
 10195  0033C8  6E45               	movwf	btemp+10,c
 10196  0033CA  0E01               	movlw	high _dbuf
 10197  0033CC  6E46               	movwf	btemp+11,c
 10198  0033CE  0EF6               	movlw	-10
 10199  0033D0  50E3               	movf	plusw1,w,c
 10200  0033D2  2645               	addwf	btemp+10,f,c
 10201  0033D4  0EF7               	movlw	-9
 10202  0033D6  50E3               	movf	plusw1,w,c
 10203  0033D8  2246               	addwfc	btemp+11,f,c
 10204  0033DA  0060  F117  FFE6   	movff	btemp+10,postinc1
 10205  0033E0  0060  F11B  FFE6   	movff	btemp+11,postinc1
 10206                           
 10207                           ;stkvar	_fp @ sp[(-22)+-2]
 10208  0033E6  0EE8               	movlw	-24
 10209  0033E8  006F FF8F FFE6     	movff	plusw1,postinc1
 10210  0033EE  006F FF8F FFE6     	movff	plusw1,postinc1
 10211  0033F4  ECCC  F024         	call	_pad	;wreg free
 10212                           
 10213                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 10214  0033F8  0EE4               	movlw	228
 10215  0033FA  26E1               	addwf	fsr1l,f,c
 10216  0033FC  0EFF               	movlw	255
 10217  0033FE  22E2               	addwfc	fsr1h,f,c
 10218  003400  0012               	return		;funcret
 10219  003402                     __end_of_dtoa:
 10220                           	opt callstack 0
 10221                           
 10222 ;; *************** function _abs *****************
 10223 ;; Defined at:
 10224 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 10225 ;; Parameters:    Size  Location     Type
 10226 ;;  a               2  [STACK] int 
 10227 ;; Auto vars:     Size  Location     Type
 10228 ;;		None
 10229 ;; Return value:  Size  Location     Type
 10230 ;;                  2  [STACK] int 
 10231 ;; Registers used:
 10232 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 10233 ;; Tracked objects:
 10234 ;;		On entry : 0/1
 10235 ;;		On exit  : 0/0
 10236 ;;		Unchanged: 0/0
 10237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10242 ;;Total ram usage:        0 bytes
 10243 ;; Hardware stack levels used:    1
 10244 ;; Hardware stack levels required when called:    3
 10245 ;; This function calls:
 10246 ;;		Nothing
 10247 ;; This function is called by:
 10248 ;;		_dtoa
 10249 ;; This function uses a reentrant model
 10250 ;;
 10251                           
 10252                           	psect	text40
 10253  0057D8                     __ptext40:
 10254                           	opt callstack 0
 10255  0057D8                     _abs:
 10256                           	opt callstack 23
 10257                           
 10258                           ;stkvar	_a @ sp[(0)+-2]
 10259                           
 10260                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10261                           ;incstack = 0
 10262  0057D8  0EFF               	movlw	-1
 10263  0057DA  BEE3               	btfsc	plusw1,7,c
 10264  0057DC  D007               	goto	u2380
 10265  0057DE  0EFF               	movlw	-1
 10266  0057E0  50E3               	movf	plusw1,w,c
 10267  0057E2  E112               	bnz	l5269
 10268  0057E4  0EFE               	movlw	-2
 10269  0057E6  04E3               	decf	plusw1,w,c
 10270  0057E8  B0D8               	btfsc	status,0,c
 10271  0057EA  D00E               	goto	l5269
 10272  0057EC                     u2380:
 10273                           
 10274                           ;stkvar	_a @ sp[(0)+-2]
 10275  0057EC  0EFE               	movlw	-2
 10276  0057EE  006F FF8C  F03B    	movff	plusw1,btemp
 10277  0057F4  1E3B               	comf	btemp,f,c
 10278  0057F6  0EFF               	movlw	-1
 10279  0057F8  006F FF8C  F03C    	movff	plusw1,btemp+1
 10280  0057FE  1E3C               	comf	btemp+1,f,c
 10281  005800  2A3B               	incf	btemp,f,c
 10282  005802  B4D8               	btfsc	status,2,c
 10283  005804  2A3C               	incf	btemp+1,f,c
 10284  005806  D008               	goto	l2524
 10285  005808                     l5269:
 10286                           
 10287                           ;stkvar	_a @ sp[(0)+-2]
 10288  005808  0EFE               	movlw	-2
 10289  00580A  006F FF8C  F03B    	movff	plusw1,btemp
 10290  005810  0EFF               	movlw	-1
 10291  005812  006F FF8C  F03C    	movff	plusw1,btemp+1
 10292  005818                     l2524:
 10293                           
 10294                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 10295  005818  52E5               	movf	postdec1,f,c
 10296  00581A  52E5               	movf	postdec1,f,c
 10297  00581C  0012               	return		;funcret
 10298  00581E                     __end_of_abs:
 10299                           	opt callstack 0
 10300                           
 10301 ;; *************** function ___aomod *****************
 10302 ;; Defined at:
 10303 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 10304 ;; Parameters:    Size  Location     Type
 10305 ;;  dividend        8  [STACK] long long 
 10306 ;;  divisor         8  [STACK] long long 
 10307 ;; Auto vars:     Size  Location     Type
 10308 ;;  sign            1  [STACK] unsigned char 
 10309 ;;  counter         1  [STACK] unsigned char 
 10310 ;; Return value:  Size  Location     Type
 10311 ;;                  8  [STACK] long long 
 10312 ;; Registers used:
 10313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10314 ;; Tracked objects:
 10315 ;;		On entry : 0/1
 10316 ;;		On exit  : 0/0
 10317 ;;		Unchanged: 0/0
 10318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10323 ;;Total ram usage:        0 bytes
 10324 ;; Hardware stack levels used:    1
 10325 ;; Hardware stack levels required when called:    3
 10326 ;; This function calls:
 10327 ;;		Nothing
 10328 ;; This function is called by:
 10329 ;;		_dtoa
 10330 ;; This function uses a reentrant model
 10331 ;;
 10332                           
 10333                           	psect	text41
 10334  004404                     __ptext41:
 10335                           	opt callstack 0
 10336  004404                     ___aomod:
 10337                           	opt callstack 0
 10338                           
 10339                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 10340  004404  52E6               	movf	postinc1,f,c
 10341  004406  52E6               	movf	postinc1,f,c
 10342                           
 10343                           ;stkvar	_sign @ sp[(-2)+0]
 10344                           
 10345                           ;incstack = 0
 10346  004408  0EFE               	movlw	-2
 10347  00440A  6AE3               	clrf	plusw1,c
 10348                           
 10349                           ;stkvar	_dividend @ sp[(-2)+-8]
 10350  00440C  0EFD               	movlw	-3
 10351  00440E  AEE3               	btfss	plusw1,7,c
 10352  004410  D028               	goto	l5325
 10353                           
 10354                           ;stkvar	_dividend @ sp[(-2)+-8]
 10355                           ;stkvar	_dividend @ sp[(-2)+-8]
 10356  004412  0EF6               	movlw	-10
 10357  004414  6CE3               	negf	plusw1,c
 10358  004416  0EF7               	movlw	-9
 10359  004418  1EE3               	comf	plusw1,f,c
 10360  00441A  0EF8               	movlw	-8
 10361  00441C  1EE3               	comf	plusw1,f,c
 10362  00441E  0EF9               	movlw	-7
 10363  004420  1EE3               	comf	plusw1,f,c
 10364  004422  0EFA               	movlw	-6
 10365  004424  1EE3               	comf	plusw1,f,c
 10366  004426  0EFB               	movlw	-5
 10367  004428  1EE3               	comf	plusw1,f,c
 10368  00442A  0EFC               	movlw	-4
 10369  00442C  1EE3               	comf	plusw1,f,c
 10370  00442E  0EFD               	movlw	-3
 10371  004430  1EE3               	comf	plusw1,f,c
 10372  004432  E314               	bnc	u2520
 10373  004434  0EF7               	movlw	-9
 10374  004436  2AE3               	incf	plusw1,f,c
 10375  004438  E311               	bnc	u2520
 10376  00443A  0EF8               	movlw	-8
 10377  00443C  2AE3               	incf	plusw1,f,c
 10378  00443E  E30E               	bnc	u2520
 10379  004440  0EF9               	movlw	-7
 10380  004442  2AE3               	incf	plusw1,f,c
 10381  004444  E30B               	bnc	u2520
 10382  004446  0EFA               	movlw	-6
 10383  004448  2AE3               	incf	plusw1,f,c
 10384  00444A  E308               	bnc	u2520
 10385  00444C  0EFB               	movlw	-5
 10386  00444E  2AE3               	incf	plusw1,f,c
 10387  004450  E305               	bnc	u2520
 10388  004452  0EFC               	movlw	-4
 10389  004454  2AE3               	incf	plusw1,f,c
 10390  004456  E302               	bnc	u2520
 10391  004458  0EFD               	movlw	-3
 10392  00445A  2AE3               	incf	plusw1,f,c
 10393  00445C                     u2520:
 10394                           
 10395                           ;stkvar	_sign @ sp[(-2)+0]
 10396  00445C  0EFE               	movlw	-2
 10397  00445E  6AE3               	clrf	plusw1,c
 10398  004460  2AE3               	incf	plusw1,f,c
 10399  004462                     l5325:
 10400                           
 10401                           ;stkvar	_divisor @ sp[(-2)+-16]
 10402  004462  0EF5               	movlw	-11
 10403  004464  AEE3               	btfss	plusw1,7,c
 10404  004466  D025               	goto	u2540
 10405                           
 10406                           ;stkvar	_divisor @ sp[(-2)+-16]
 10407                           ;stkvar	_divisor @ sp[(-2)+-16]
 10408  004468  0EEE               	movlw	-18
 10409  00446A  6CE3               	negf	plusw1,c
 10410  00446C  0EEF               	movlw	-17
 10411  00446E  1EE3               	comf	plusw1,f,c
 10412  004470  0EF0               	movlw	-16
 10413  004472  1EE3               	comf	plusw1,f,c
 10414  004474  0EF1               	movlw	-15
 10415  004476  1EE3               	comf	plusw1,f,c
 10416  004478  0EF2               	movlw	-14
 10417  00447A  1EE3               	comf	plusw1,f,c
 10418  00447C  0EF3               	movlw	-13
 10419  00447E  1EE3               	comf	plusw1,f,c
 10420  004480  0EF4               	movlw	-12
 10421  004482  1EE3               	comf	plusw1,f,c
 10422  004484  0EF5               	movlw	-11
 10423  004486  1EE3               	comf	plusw1,f,c
 10424  004488  E314               	bnc	u2540
 10425  00448A  0EEF               	movlw	-17
 10426  00448C  2AE3               	incf	plusw1,f,c
 10427  00448E  E311               	bnc	u2540
 10428  004490  0EF0               	movlw	-16
 10429  004492  2AE3               	incf	plusw1,f,c
 10430  004494  E30E               	bnc	u2540
 10431  004496  0EF1               	movlw	-15
 10432  004498  2AE3               	incf	plusw1,f,c
 10433  00449A  E30B               	bnc	u2540
 10434  00449C  0EF2               	movlw	-14
 10435  00449E  2AE3               	incf	plusw1,f,c
 10436  0044A0  E308               	bnc	u2540
 10437  0044A2  0EF3               	movlw	-13
 10438  0044A4  2AE3               	incf	plusw1,f,c
 10439  0044A6  E305               	bnc	u2540
 10440  0044A8  0EF4               	movlw	-12
 10441  0044AA  2AE3               	incf	plusw1,f,c
 10442  0044AC  E302               	bnc	u2540
 10443  0044AE  0EF5               	movlw	-11
 10444  0044B0  2AE3               	incf	plusw1,f,c
 10445  0044B2                     u2540:
 10446                           
 10447                           ;stkvar	_divisor @ sp[(-2)+-16]
 10448  0044B2  0EEE               	movlw	-18
 10449  0044B4  50E3               	movf	plusw1,w,c
 10450  0044B6  E116               	bnz	u2550
 10451  0044B8  0EEF               	movlw	-17
 10452  0044BA  50E3               	movf	plusw1,w,c
 10453  0044BC  E113               	bnz	u2550
 10454  0044BE  0EF0               	movlw	-16
 10455  0044C0  50E3               	movf	plusw1,w,c
 10456  0044C2  E110               	bnz	u2550
 10457  0044C4  0EF1               	movlw	-15
 10458  0044C6  50E3               	movf	plusw1,w,c
 10459  0044C8  E10D               	bnz	u2550
 10460  0044CA  0EF2               	movlw	-14
 10461  0044CC  50E3               	movf	plusw1,w,c
 10462  0044CE  E10A               	bnz	u2550
 10463  0044D0  0EF3               	movlw	-13
 10464  0044D2  50E3               	movf	plusw1,w,c
 10465  0044D4  E107               	bnz	u2550
 10466  0044D6  0EF4               	movlw	-12
 10467  0044D8  50E3               	movf	plusw1,w,c
 10468  0044DA  E104               	bnz	u2550
 10469  0044DC  0EF5               	movlw	-11
 10470  0044DE  50E3               	movf	plusw1,w,c
 10471  0044E0  B4D8               	btfsc	status,2,c
 10472  0044E2  D075               	goto	u2580
 10473  0044E4                     u2550:
 10474                           
 10475                           ;stkvar	_counter @ sp[(-2)+1]
 10476  0044E4  0EFF               	movlw	-1
 10477  0044E6  6AE3               	clrf	plusw1,c
 10478  0044E8  D012               	goto	L23
 10479  0044EA                     l5333:
 10480                           
 10481                           ;stkvar	_divisor @ sp[(-2)+-16]
 10482  0044EA  90D8               	bcf	status,0,c
 10483  0044EC  0EEE               	movlw	-18
 10484  0044EE  36E3               	rlcf	plusw1,f,c
 10485  0044F0  0EEF               	movlw	-17
 10486  0044F2  36E3               	rlcf	plusw1,f,c
 10487  0044F4  0EF0               	movlw	-16
 10488  0044F6  36E3               	rlcf	plusw1,f,c
 10489  0044F8  0EF1               	movlw	-15
 10490  0044FA  36E3               	rlcf	plusw1,f,c
 10491  0044FC  0EF2               	movlw	-14
 10492  0044FE  36E3               	rlcf	plusw1,f,c
 10493  004500  0EF3               	movlw	-13
 10494  004502  36E3               	rlcf	plusw1,f,c
 10495  004504  0EF4               	movlw	-12
 10496  004506  36E3               	rlcf	plusw1,f,c
 10497  004508  0EF5               	movlw	-11
 10498  00450A  36E3               	rlcf	plusw1,f,c
 10499                           
 10500                           ;stkvar	_counter @ sp[(-2)+1]
 10501  00450C  0EFF               	movlw	-1
 10502  00450E                     L23:
 10503  00450E  2AE3               	incf	plusw1,f,c
 10504                           
 10505                           ;stkvar	_divisor @ sp[(-2)+-16]
 10506  004510  0EF5               	movlw	-11
 10507  004512  AEE3               	btfss	plusw1,7,c
 10508  004514  D7EA               	goto	l5333
 10509  004516                     u2560:
 10510                           
 10511                           ;stkvar	_divisor @ sp[(-2)+-16]
 10512                           ;stkvar	_dividend @ sp[(-2)+-8]
 10513  004516  50E1               	movf	fsr1l,w,c
 10514  004518  0FF6               	addlw	-10
 10515  00451A  6ED9               	movwf	fsr2l,c
 10516  00451C  50E2               	movf	fsr1h,w,c
 10517  00451E  6EDA               	movwf	fsr2h,c
 10518  004520  0EFF               	movlw	255
 10519  004522  22DA               	addwfc	fsr2h,f,c
 10520  004524  0EEE               	movlw	-18
 10521  004526  50E3               	movf	plusw1,w,c
 10522  004528  5CDE               	subwf	postinc2,w,c
 10523  00452A  0EEF               	movlw	-17
 10524  00452C  50E3               	movf	plusw1,w,c
 10525  00452E  58DE               	subwfb	postinc2,w,c
 10526  004530  0EF0               	movlw	-16
 10527  004532  50E3               	movf	plusw1,w,c
 10528  004534  58DE               	subwfb	postinc2,w,c
 10529  004536  0EF1               	movlw	-15
 10530  004538  50E3               	movf	plusw1,w,c
 10531  00453A  58DE               	subwfb	postinc2,w,c
 10532  00453C  0EF2               	movlw	-14
 10533  00453E  50E3               	movf	plusw1,w,c
 10534  004540  58DE               	subwfb	postinc2,w,c
 10535  004542  0EF3               	movlw	-13
 10536  004544  50E3               	movf	plusw1,w,c
 10537  004546  58DE               	subwfb	postinc2,w,c
 10538  004548  0EF4               	movlw	-12
 10539  00454A  50E3               	movf	plusw1,w,c
 10540  00454C  58DE               	subwfb	postinc2,w,c
 10541  00454E  0EF5               	movlw	-11
 10542  004550  50E3               	movf	plusw1,w,c
 10543  004552  58DE               	subwfb	postinc2,w,c
 10544  004554  A0D8               	btfss	status,0,c
 10545  004556  D01F               	goto	l5341
 10546                           
 10547                           ;stkvar	_divisor @ sp[(-2)+-16]
 10548                           ;stkvar	_dividend @ sp[(-2)+-8]
 10549  004558  50E1               	movf	fsr1l,w,c
 10550  00455A  0FF6               	addlw	-10
 10551  00455C  6ED9               	movwf	fsr2l,c
 10552  00455E  50E2               	movf	fsr1h,w,c
 10553  004560  6EDA               	movwf	fsr2h,c
 10554  004562  0EFF               	movlw	255
 10555  004564  22DA               	addwfc	fsr2h,f,c
 10556  004566  0EEE               	movlw	-18
 10557  004568  50E3               	movf	plusw1,w,c
 10558  00456A  5EDE               	subwf	postinc2,f,c
 10559  00456C  0EEF               	movlw	-17
 10560  00456E  50E3               	movf	plusw1,w,c
 10561  004570  5ADE               	subwfb	postinc2,f,c
 10562  004572  0EF0               	movlw	-16
 10563  004574  50E3               	movf	plusw1,w,c
 10564  004576  5ADE               	subwfb	postinc2,f,c
 10565  004578  0EF1               	movlw	-15
 10566  00457A  50E3               	movf	plusw1,w,c
 10567  00457C  5ADE               	subwfb	postinc2,f,c
 10568  00457E  0EF2               	movlw	-14
 10569  004580  50E3               	movf	plusw1,w,c
 10570  004582  5ADE               	subwfb	postinc2,f,c
 10571  004584  0EF3               	movlw	-13
 10572  004586  50E3               	movf	plusw1,w,c
 10573  004588  5ADE               	subwfb	postinc2,f,c
 10574  00458A  0EF4               	movlw	-12
 10575  00458C  50E3               	movf	plusw1,w,c
 10576  00458E  5ADE               	subwfb	postinc2,f,c
 10577  004590  0EF5               	movlw	-11
 10578  004592  50E3               	movf	plusw1,w,c
 10579  004594  5ADE               	subwfb	postinc2,f,c
 10580  004596                     l5341:
 10581                           
 10582                           ;stkvar	_divisor @ sp[(-2)+-16]
 10583  004596  90D8               	bcf	status,0,c
 10584  004598  0EF5               	movlw	-11
 10585  00459A  32E3               	rrcf	plusw1,f,c
 10586  00459C  0EF4               	movlw	-12
 10587  00459E  32E3               	rrcf	plusw1,f,c
 10588  0045A0  0EF3               	movlw	-13
 10589  0045A2  32E3               	rrcf	plusw1,f,c
 10590  0045A4  0EF2               	movlw	-14
 10591  0045A6  32E3               	rrcf	plusw1,f,c
 10592  0045A8  0EF1               	movlw	-15
 10593  0045AA  32E3               	rrcf	plusw1,f,c
 10594  0045AC  0EF0               	movlw	-16
 10595  0045AE  32E3               	rrcf	plusw1,f,c
 10596  0045B0  0EEF               	movlw	-17
 10597  0045B2  32E3               	rrcf	plusw1,f,c
 10598  0045B4  0EEE               	movlw	-18
 10599  0045B6  32E3               	rrcf	plusw1,f,c
 10600                           
 10601                           ;stkvar	_counter @ sp[(-2)+1]
 10602  0045B8  0EFF               	movlw	-1
 10603  0045BA  50E3               	movf	plusw1,w,c
 10604  0045BC  6E3B               	movwf	btemp,c
 10605  0045BE  0E01               	movlw	1
 10606  0045C0  5E3B               	subwf	btemp,f,c
 10607  0045C2  0EFF               	movlw	-1
 10608  0045C4  0060  F0EF  FFE3   	movff	btemp,plusw1
 10609  0045CA  A4D8               	btfss	status,2,c
 10610  0045CC  D7A4               	goto	u2560
 10611  0045CE                     u2580:
 10612                           
 10613                           ;stkvar	_sign @ sp[(-2)+0]
 10614  0045CE  0EFE               	movlw	-2
 10615  0045D0  50E3               	movf	plusw1,w,c
 10616  0045D2  B4D8               	btfsc	status,2,c
 10617  0045D4  D025               	goto	u2600
 10618                           
 10619                           ;stkvar	_dividend @ sp[(-2)+-8]
 10620                           ;stkvar	_dividend @ sp[(-2)+-8]
 10621  0045D6  0EF6               	movlw	-10
 10622  0045D8  6CE3               	negf	plusw1,c
 10623  0045DA  0EF7               	movlw	-9
 10624  0045DC  1EE3               	comf	plusw1,f,c
 10625  0045DE  0EF8               	movlw	-8
 10626  0045E0  1EE3               	comf	plusw1,f,c
 10627  0045E2  0EF9               	movlw	-7
 10628  0045E4  1EE3               	comf	plusw1,f,c
 10629  0045E6  0EFA               	movlw	-6
 10630  0045E8  1EE3               	comf	plusw1,f,c
 10631  0045EA  0EFB               	movlw	-5
 10632  0045EC  1EE3               	comf	plusw1,f,c
 10633  0045EE  0EFC               	movlw	-4
 10634  0045F0  1EE3               	comf	plusw1,f,c
 10635  0045F2  0EFD               	movlw	-3
 10636  0045F4  1EE3               	comf	plusw1,f,c
 10637  0045F6  E314               	bnc	u2600
 10638  0045F8  0EF7               	movlw	-9
 10639  0045FA  2AE3               	incf	plusw1,f,c
 10640  0045FC  E311               	bnc	u2600
 10641  0045FE  0EF8               	movlw	-8
 10642  004600  2AE3               	incf	plusw1,f,c
 10643  004602  E30E               	bnc	u2600
 10644  004604  0EF9               	movlw	-7
 10645  004606  2AE3               	incf	plusw1,f,c
 10646  004608  E30B               	bnc	u2600
 10647  00460A  0EFA               	movlw	-6
 10648  00460C  2AE3               	incf	plusw1,f,c
 10649  00460E  E308               	bnc	u2600
 10650  004610  0EFB               	movlw	-5
 10651  004612  2AE3               	incf	plusw1,f,c
 10652  004614  E305               	bnc	u2600
 10653  004616  0EFC               	movlw	-4
 10654  004618  2AE3               	incf	plusw1,f,c
 10655  00461A  E302               	bnc	u2600
 10656  00461C  0EFD               	movlw	-3
 10657  00461E  2AE3               	incf	plusw1,f,c
 10658  004620                     u2600:
 10659                           
 10660                           ;stkvar	_dividend @ sp[(-2)+-8]
 10661  004620  0EF6               	movlw	246
 10662  004622  24E1               	addwf	fsr1l,w,c
 10663  004624  6ED9               	movwf	fsr2l,c
 10664  004626  0EFF               	movlw	255
 10665  004628  20E2               	addwfc	fsr1h,w,c
 10666  00462A  6EDA               	movwf	fsr2h,c
 10667                           
 10668                           ;stkvar	?___aomod @ sp[(-2)+-8]
 10669  00462C  0E08               	movlw	8
 10670  00462E  6E3B               	movwf	btemp,c
 10671  004630  0EF6               	movlw	-10
 10672  004632                     us261999:
 10673  004632  006F FF7B FFE3     	movff	postinc2,plusw1
 10674  004638  28E8               	incf	wreg,w,c
 10675  00463A  2E3B               	decfsz	btemp,f,c
 10676  00463C  D7FA               	bra	us261999
 10677                           
 10678                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10679  00463E  52E5               	movf	postdec1,f,c
 10680  004640  52E5               	movf	postdec1,f,c
 10681  004642  0012               	return		;funcret
 10682  004644                     __end_of___aomod:
 10683                           	opt callstack 0
 10684                           
 10685 ;; *************** function ___aodiv *****************
 10686 ;; Defined at:
 10687 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;  dividend        8  [STACK] long long 
 10690 ;;  divisor         8  [STACK] long long 
 10691 ;; Auto vars:     Size  Location     Type
 10692 ;;  quotient        8  [STACK] long long 
 10693 ;;  sign            1  [STACK] unsigned char 
 10694 ;;  counter         1  [STACK] unsigned char 
 10695 ;; Return value:  Size  Location     Type
 10696 ;;                  8  [STACK] long long 
 10697 ;; Registers used:
 10698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10699 ;; Tracked objects:
 10700 ;;		On entry : 0/1
 10701 ;;		On exit  : 0/0
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10708 ;;Total ram usage:        0 bytes
 10709 ;; Hardware stack levels used:    1
 10710 ;; Hardware stack levels required when called:    3
 10711 ;; This function calls:
 10712 ;;		Nothing
 10713 ;; This function is called by:
 10714 ;;		_dtoa
 10715 ;; This function uses a reentrant model
 10716 ;;
 10717                           
 10718                           	psect	text42
 10719  003F42                     __ptext42:
 10720                           	opt callstack 0
 10721  003F42                     ___aodiv:
 10722                           	opt callstack 0
 10723                           
 10724                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 10725  003F42  0E0A               	movlw	10
 10726  003F44  26E1               	addwf	fsr1l,f,c
 10727  003F46  0E00               	movlw	0
 10728  003F48  22E2               	addwfc	fsr1h,f,c
 10729                           
 10730                           ;stkvar	_sign @ sp[(-10)+8]
 10731                           
 10732                           ;incstack = 0
 10733  003F4A  0EFE               	movlw	-2
 10734  003F4C  6AE3               	clrf	plusw1,c
 10735                           
 10736                           ;stkvar	_divisor @ sp[(-10)+-16]
 10737  003F4E  0EED               	movlw	-19
 10738  003F50  AEE3               	btfss	plusw1,7,c
 10739  003F52  D028               	goto	l5281
 10740                           
 10741                           ;stkvar	_divisor @ sp[(-10)+-16]
 10742                           ;stkvar	_divisor @ sp[(-10)+-16]
 10743  003F54  0EE6               	movlw	-26
 10744  003F56  6CE3               	negf	plusw1,c
 10745  003F58  0EE7               	movlw	-25
 10746  003F5A  1EE3               	comf	plusw1,f,c
 10747  003F5C  0EE8               	movlw	-24
 10748  003F5E  1EE3               	comf	plusw1,f,c
 10749  003F60  0EE9               	movlw	-23
 10750  003F62  1EE3               	comf	plusw1,f,c
 10751  003F64  0EEA               	movlw	-22
 10752  003F66  1EE3               	comf	plusw1,f,c
 10753  003F68  0EEB               	movlw	-21
 10754  003F6A  1EE3               	comf	plusw1,f,c
 10755  003F6C  0EEC               	movlw	-20
 10756  003F6E  1EE3               	comf	plusw1,f,c
 10757  003F70  0EED               	movlw	-19
 10758  003F72  1EE3               	comf	plusw1,f,c
 10759  003F74  E314               	bnc	u2400
 10760  003F76  0EE7               	movlw	-25
 10761  003F78  2AE3               	incf	plusw1,f,c
 10762  003F7A  E311               	bnc	u2400
 10763  003F7C  0EE8               	movlw	-24
 10764  003F7E  2AE3               	incf	plusw1,f,c
 10765  003F80  E30E               	bnc	u2400
 10766  003F82  0EE9               	movlw	-23
 10767  003F84  2AE3               	incf	plusw1,f,c
 10768  003F86  E30B               	bnc	u2400
 10769  003F88  0EEA               	movlw	-22
 10770  003F8A  2AE3               	incf	plusw1,f,c
 10771  003F8C  E308               	bnc	u2400
 10772  003F8E  0EEB               	movlw	-21
 10773  003F90  2AE3               	incf	plusw1,f,c
 10774  003F92  E305               	bnc	u2400
 10775  003F94  0EEC               	movlw	-20
 10776  003F96  2AE3               	incf	plusw1,f,c
 10777  003F98  E302               	bnc	u2400
 10778  003F9A  0EED               	movlw	-19
 10779  003F9C  2AE3               	incf	plusw1,f,c
 10780  003F9E                     u2400:
 10781                           
 10782                           ;stkvar	_sign @ sp[(-10)+8]
 10783  003F9E  0EFE               	movlw	-2
 10784  003FA0  6AE3               	clrf	plusw1,c
 10785  003FA2  2AE3               	incf	plusw1,f,c
 10786  003FA4                     l5281:
 10787                           
 10788                           ;stkvar	_dividend @ sp[(-10)+-8]
 10789  003FA4  0EF5               	movlw	-11
 10790  003FA6  AEE3               	btfss	plusw1,7,c
 10791  003FA8  D027               	goto	l5287
 10792                           
 10793                           ;stkvar	_dividend @ sp[(-10)+-8]
 10794                           ;stkvar	_dividend @ sp[(-10)+-8]
 10795  003FAA  0EEE               	movlw	-18
 10796  003FAC  6CE3               	negf	plusw1,c
 10797  003FAE  0EEF               	movlw	-17
 10798  003FB0  1EE3               	comf	plusw1,f,c
 10799  003FB2  0EF0               	movlw	-16
 10800  003FB4  1EE3               	comf	plusw1,f,c
 10801  003FB6  0EF1               	movlw	-15
 10802  003FB8  1EE3               	comf	plusw1,f,c
 10803  003FBA  0EF2               	movlw	-14
 10804  003FBC  1EE3               	comf	plusw1,f,c
 10805  003FBE  0EF3               	movlw	-13
 10806  003FC0  1EE3               	comf	plusw1,f,c
 10807  003FC2  0EF4               	movlw	-12
 10808  003FC4  1EE3               	comf	plusw1,f,c
 10809  003FC6  0EF5               	movlw	-11
 10810  003FC8  1EE3               	comf	plusw1,f,c
 10811  003FCA  E314               	bnc	u2420
 10812  003FCC  0EEF               	movlw	-17
 10813  003FCE  2AE3               	incf	plusw1,f,c
 10814  003FD0  E311               	bnc	u2420
 10815  003FD2  0EF0               	movlw	-16
 10816  003FD4  2AE3               	incf	plusw1,f,c
 10817  003FD6  E30E               	bnc	u2420
 10818  003FD8  0EF1               	movlw	-15
 10819  003FDA  2AE3               	incf	plusw1,f,c
 10820  003FDC  E30B               	bnc	u2420
 10821  003FDE  0EF2               	movlw	-14
 10822  003FE0  2AE3               	incf	plusw1,f,c
 10823  003FE2  E308               	bnc	u2420
 10824  003FE4  0EF3               	movlw	-13
 10825  003FE6  2AE3               	incf	plusw1,f,c
 10826  003FE8  E305               	bnc	u2420
 10827  003FEA  0EF4               	movlw	-12
 10828  003FEC  2AE3               	incf	plusw1,f,c
 10829  003FEE  E302               	bnc	u2420
 10830  003FF0  0EF5               	movlw	-11
 10831  003FF2  2AE3               	incf	plusw1,f,c
 10832  003FF4                     u2420:
 10833                           
 10834                           ;stkvar	_sign @ sp[(-10)+8]
 10835  003FF4  0EFE               	movlw	-2
 10836  003FF6  70E3               	btg	plusw1,0,c
 10837  003FF8                     l5287:
 10838                           
 10839                           ;stkvar	_quotient @ sp[(-10)+0]
 10840  003FF8  0E07               	movlw	7
 10841  003FFA  6E3B               	movwf	btemp,c
 10842  003FFC  0EF6               	movlw	-10
 10843  003FFE                     u2431:
 10844  003FFE  6AE3               	clrf	plusw1,c
 10845  004000  2AE8               	incf	wreg,f,c
 10846  004002  063B               	decf	btemp,f,c
 10847  004004  E2FC               	bc	u2431
 10848                           
 10849                           ;stkvar	_divisor @ sp[(-10)+-16]
 10850  004006  0EE6               	movlw	-26
 10851  004008  50E3               	movf	plusw1,w,c
 10852  00400A  E116               	bnz	u2440
 10853  00400C  0EE7               	movlw	-25
 10854  00400E  50E3               	movf	plusw1,w,c
 10855  004010  E113               	bnz	u2440
 10856  004012  0EE8               	movlw	-24
 10857  004014  50E3               	movf	plusw1,w,c
 10858  004016  E110               	bnz	u2440
 10859  004018  0EE9               	movlw	-23
 10860  00401A  50E3               	movf	plusw1,w,c
 10861  00401C  E10D               	bnz	u2440
 10862  00401E  0EEA               	movlw	-22
 10863  004020  50E3               	movf	plusw1,w,c
 10864  004022  E10A               	bnz	u2440
 10865  004024  0EEB               	movlw	-21
 10866  004026  50E3               	movf	plusw1,w,c
 10867  004028  E107               	bnz	u2440
 10868  00402A  0EEC               	movlw	-20
 10869  00402C  50E3               	movf	plusw1,w,c
 10870  00402E  E104               	bnz	u2440
 10871  004030  0EED               	movlw	-19
 10872  004032  50E3               	movf	plusw1,w,c
 10873  004034  B4D8               	btfsc	status,2,c
 10874  004036  D088               	goto	u2470
 10875  004038                     u2440:
 10876                           
 10877                           ;stkvar	_counter @ sp[(-10)+9]
 10878  004038  0EFF               	movlw	-1
 10879  00403A  6AE3               	clrf	plusw1,c
 10880  00403C  D012               	goto	L24
 10881  00403E                     l5293:
 10882                           
 10883                           ;stkvar	_divisor @ sp[(-10)+-16]
 10884  00403E  90D8               	bcf	status,0,c
 10885  004040  0EE6               	movlw	-26
 10886  004042  36E3               	rlcf	plusw1,f,c
 10887  004044  0EE7               	movlw	-25
 10888  004046  36E3               	rlcf	plusw1,f,c
 10889  004048  0EE8               	movlw	-24
 10890  00404A  36E3               	rlcf	plusw1,f,c
 10891  00404C  0EE9               	movlw	-23
 10892  00404E  36E3               	rlcf	plusw1,f,c
 10893  004050  0EEA               	movlw	-22
 10894  004052  36E3               	rlcf	plusw1,f,c
 10895  004054  0EEB               	movlw	-21
 10896  004056  36E3               	rlcf	plusw1,f,c
 10897  004058  0EEC               	movlw	-20
 10898  00405A  36E3               	rlcf	plusw1,f,c
 10899  00405C  0EED               	movlw	-19
 10900  00405E  36E3               	rlcf	plusw1,f,c
 10901                           
 10902                           ;stkvar	_counter @ sp[(-10)+9]
 10903  004060  0EFF               	movlw	-1
 10904  004062                     L24:
 10905  004062  2AE3               	incf	plusw1,f,c
 10906                           
 10907                           ;stkvar	_divisor @ sp[(-10)+-16]
 10908  004064  0EED               	movlw	-19
 10909  004066  AEE3               	btfss	plusw1,7,c
 10910  004068  D7EA               	goto	l5293
 10911  00406A                     u2450:
 10912                           
 10913                           ;stkvar	_quotient @ sp[(-10)+0]
 10914  00406A  90D8               	bcf	status,0,c
 10915  00406C  0EF6               	movlw	-10
 10916  00406E  36E3               	rlcf	plusw1,f,c
 10917  004070  0EF7               	movlw	-9
 10918  004072  36E3               	rlcf	plusw1,f,c
 10919  004074  0EF8               	movlw	-8
 10920  004076  36E3               	rlcf	plusw1,f,c
 10921  004078  0EF9               	movlw	-7
 10922  00407A  36E3               	rlcf	plusw1,f,c
 10923  00407C  0EFA               	movlw	-6
 10924  00407E  36E3               	rlcf	plusw1,f,c
 10925  004080  0EFB               	movlw	-5
 10926  004082  36E3               	rlcf	plusw1,f,c
 10927  004084  0EFC               	movlw	-4
 10928  004086  36E3               	rlcf	plusw1,f,c
 10929  004088  0EFD               	movlw	-3
 10930  00408A  36E3               	rlcf	plusw1,f,c
 10931                           
 10932                           ;stkvar	_divisor @ sp[(-10)+-16]
 10933                           ;stkvar	_dividend @ sp[(-10)+-8]
 10934  00408C  50E1               	movf	fsr1l,w,c
 10935  00408E  0FEE               	addlw	-18
 10936  004090  6ED9               	movwf	fsr2l,c
 10937  004092  50E2               	movf	fsr1h,w,c
 10938  004094  6EDA               	movwf	fsr2h,c
 10939  004096  0EFF               	movlw	255
 10940  004098  22DA               	addwfc	fsr2h,f,c
 10941  00409A  0EE6               	movlw	-26
 10942  00409C  50E3               	movf	plusw1,w,c
 10943  00409E  5CDE               	subwf	postinc2,w,c
 10944  0040A0  0EE7               	movlw	-25
 10945  0040A2  50E3               	movf	plusw1,w,c
 10946  0040A4  58DE               	subwfb	postinc2,w,c
 10947  0040A6  0EE8               	movlw	-24
 10948  0040A8  50E3               	movf	plusw1,w,c
 10949  0040AA  58DE               	subwfb	postinc2,w,c
 10950  0040AC  0EE9               	movlw	-23
 10951  0040AE  50E3               	movf	plusw1,w,c
 10952  0040B0  58DE               	subwfb	postinc2,w,c
 10953  0040B2  0EEA               	movlw	-22
 10954  0040B4  50E3               	movf	plusw1,w,c
 10955  0040B6  58DE               	subwfb	postinc2,w,c
 10956  0040B8  0EEB               	movlw	-21
 10957  0040BA  50E3               	movf	plusw1,w,c
 10958  0040BC  58DE               	subwfb	postinc2,w,c
 10959  0040BE  0EEC               	movlw	-20
 10960  0040C0  50E3               	movf	plusw1,w,c
 10961  0040C2  58DE               	subwfb	postinc2,w,c
 10962  0040C4  0EED               	movlw	-19
 10963  0040C6  50E3               	movf	plusw1,w,c
 10964  0040C8  58DE               	subwfb	postinc2,w,c
 10965  0040CA  A0D8               	btfss	status,0,c
 10966  0040CC  D021               	goto	l5305
 10967                           
 10968                           ;stkvar	_divisor @ sp[(-10)+-16]
 10969                           ;stkvar	_dividend @ sp[(-10)+-8]
 10970  0040CE  50E1               	movf	fsr1l,w,c
 10971  0040D0  0FEE               	addlw	-18
 10972  0040D2  6ED9               	movwf	fsr2l,c
 10973  0040D4  50E2               	movf	fsr1h,w,c
 10974  0040D6  6EDA               	movwf	fsr2h,c
 10975  0040D8  0EFF               	movlw	255
 10976  0040DA  22DA               	addwfc	fsr2h,f,c
 10977  0040DC  0EE6               	movlw	-26
 10978  0040DE  50E3               	movf	plusw1,w,c
 10979  0040E0  5EDE               	subwf	postinc2,f,c
 10980  0040E2  0EE7               	movlw	-25
 10981  0040E4  50E3               	movf	plusw1,w,c
 10982  0040E6  5ADE               	subwfb	postinc2,f,c
 10983  0040E8  0EE8               	movlw	-24
 10984  0040EA  50E3               	movf	plusw1,w,c
 10985  0040EC  5ADE               	subwfb	postinc2,f,c
 10986  0040EE  0EE9               	movlw	-23
 10987  0040F0  50E3               	movf	plusw1,w,c
 10988  0040F2  5ADE               	subwfb	postinc2,f,c
 10989  0040F4  0EEA               	movlw	-22
 10990  0040F6  50E3               	movf	plusw1,w,c
 10991  0040F8  5ADE               	subwfb	postinc2,f,c
 10992  0040FA  0EEB               	movlw	-21
 10993  0040FC  50E3               	movf	plusw1,w,c
 10994  0040FE  5ADE               	subwfb	postinc2,f,c
 10995  004100  0EEC               	movlw	-20
 10996  004102  50E3               	movf	plusw1,w,c
 10997  004104  5ADE               	subwfb	postinc2,f,c
 10998  004106  0EED               	movlw	-19
 10999  004108  50E3               	movf	plusw1,w,c
 11000  00410A  5ADE               	subwfb	postinc2,f,c
 11001                           
 11002                           ;stkvar	_quotient @ sp[(-10)+0]
 11003  00410C  0EF6               	movlw	-10
 11004  00410E  80E3               	bsf	plusw1,0,c
 11005  004110                     l5305:
 11006                           
 11007                           ;stkvar	_divisor @ sp[(-10)+-16]
 11008  004110  90D8               	bcf	status,0,c
 11009  004112  0EED               	movlw	-19
 11010  004114  32E3               	rrcf	plusw1,f,c
 11011  004116  0EEC               	movlw	-20
 11012  004118  32E3               	rrcf	plusw1,f,c
 11013  00411A  0EEB               	movlw	-21
 11014  00411C  32E3               	rrcf	plusw1,f,c
 11015  00411E  0EEA               	movlw	-22
 11016  004120  32E3               	rrcf	plusw1,f,c
 11017  004122  0EE9               	movlw	-23
 11018  004124  32E3               	rrcf	plusw1,f,c
 11019  004126  0EE8               	movlw	-24
 11020  004128  32E3               	rrcf	plusw1,f,c
 11021  00412A  0EE7               	movlw	-25
 11022  00412C  32E3               	rrcf	plusw1,f,c
 11023  00412E  0EE6               	movlw	-26
 11024  004130  32E3               	rrcf	plusw1,f,c
 11025                           
 11026                           ;stkvar	_counter @ sp[(-10)+9]
 11027  004132  0EFF               	movlw	-1
 11028  004134  50E3               	movf	plusw1,w,c
 11029  004136  6E3B               	movwf	btemp,c
 11030  004138  0E01               	movlw	1
 11031  00413A  5E3B               	subwf	btemp,f,c
 11032  00413C  0EFF               	movlw	-1
 11033  00413E  0060  F0EF  FFE3   	movff	btemp,plusw1
 11034  004144  A4D8               	btfss	status,2,c
 11035  004146  D791               	goto	u2450
 11036  004148                     u2470:
 11037                           
 11038                           ;stkvar	_sign @ sp[(-10)+8]
 11039  004148  0EFE               	movlw	-2
 11040  00414A  50E3               	movf	plusw1,w,c
 11041  00414C  B4D8               	btfsc	status,2,c
 11042  00414E  D025               	goto	u2490
 11043                           
 11044                           ;stkvar	_quotient @ sp[(-10)+0]
 11045                           ;stkvar	_quotient @ sp[(-10)+0]
 11046  004150  0EF6               	movlw	-10
 11047  004152  6CE3               	negf	plusw1,c
 11048  004154  0EF7               	movlw	-9
 11049  004156  1EE3               	comf	plusw1,f,c
 11050  004158  0EF8               	movlw	-8
 11051  00415A  1EE3               	comf	plusw1,f,c
 11052  00415C  0EF9               	movlw	-7
 11053  00415E  1EE3               	comf	plusw1,f,c
 11054  004160  0EFA               	movlw	-6
 11055  004162  1EE3               	comf	plusw1,f,c
 11056  004164  0EFB               	movlw	-5
 11057  004166  1EE3               	comf	plusw1,f,c
 11058  004168  0EFC               	movlw	-4
 11059  00416A  1EE3               	comf	plusw1,f,c
 11060  00416C  0EFD               	movlw	-3
 11061  00416E  1EE3               	comf	plusw1,f,c
 11062  004170  E314               	bnc	u2490
 11063  004172  0EF7               	movlw	-9
 11064  004174  2AE3               	incf	plusw1,f,c
 11065  004176  E311               	bnc	u2490
 11066  004178  0EF8               	movlw	-8
 11067  00417A  2AE3               	incf	plusw1,f,c
 11068  00417C  E30E               	bnc	u2490
 11069  00417E  0EF9               	movlw	-7
 11070  004180  2AE3               	incf	plusw1,f,c
 11071  004182  E30B               	bnc	u2490
 11072  004184  0EFA               	movlw	-6
 11073  004186  2AE3               	incf	plusw1,f,c
 11074  004188  E308               	bnc	u2490
 11075  00418A  0EFB               	movlw	-5
 11076  00418C  2AE3               	incf	plusw1,f,c
 11077  00418E  E305               	bnc	u2490
 11078  004190  0EFC               	movlw	-4
 11079  004192  2AE3               	incf	plusw1,f,c
 11080  004194  E302               	bnc	u2490
 11081  004196  0EFD               	movlw	-3
 11082  004198  2AE3               	incf	plusw1,f,c
 11083  00419A                     u2490:
 11084                           
 11085                           ;stkvar	_quotient @ sp[(-10)+0]
 11086  00419A  0EF6               	movlw	246
 11087  00419C  24E1               	addwf	fsr1l,w,c
 11088  00419E  6ED9               	movwf	fsr2l,c
 11089  0041A0  0EFF               	movlw	255
 11090  0041A2  20E2               	addwfc	fsr1h,w,c
 11091  0041A4  6EDA               	movwf	fsr2h,c
 11092                           
 11093                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 11094  0041A6  0E08               	movlw	8
 11095  0041A8  6E3B               	movwf	btemp,c
 11096  0041AA  0EEE               	movlw	-18
 11097  0041AC                     us250999:
 11098  0041AC  006F FF7B FFE3     	movff	postinc2,plusw1
 11099  0041B2  28E8               	incf	wreg,w,c
 11100  0041B4  2E3B               	decfsz	btemp,f,c
 11101  0041B6  D7FA               	bra	us250999
 11102                           
 11103                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 11104  0041B8  0EF6               	movlw	246
 11105  0041BA  26E1               	addwf	fsr1l,f,c
 11106  0041BC  0EFF               	movlw	255
 11107  0041BE  22E2               	addwfc	fsr1h,f,c
 11108  0041C0  0012               	return		;funcret
 11109  0041C2                     __end_of___aodiv:
 11110                           	opt callstack 0
 11111                           
 11112 ;; *************** function _ctoa *****************
 11113 ;; Defined at:
 11114 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11115 ;; Parameters:    Size  Location     Type
 11116 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11117 ;;		 -> f(5), NULL(0), 
 11118 ;;  c               1  [STACK] unsigned char 
 11119 ;; Auto vars:     Size  Location     Type
 11120 ;;  w               2  [STACK] int 
 11121 ;;  l               2    0        int 
 11122 ;; Return value:  Size  Location     Type
 11123 ;;                  2  [STACK] int 
 11124 ;; Registers used:
 11125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11126 ;; Tracked objects:
 11127 ;;		On entry : 0/0
 11128 ;;		On exit  : 0/0
 11129 ;;		Unchanged: 0/0
 11130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11135 ;;Total ram usage:        0 bytes
 11136 ;; Hardware stack levels used:    1
 11137 ;; Hardware stack levels required when called:    8
 11138 ;; This function calls:
 11139 ;;		_pad
 11140 ;; This function is called by:
 11141 ;;		_vfpfcnvrt
 11142 ;; This function uses a reentrant model
 11143 ;;
 11144                           
 11145                           	psect	text43
 11146  00541C                     __ptext43:
 11147                           	opt callstack 0
 11148  00541C                     _ctoa:
 11149                           	opt callstack 0
 11150                           
 11151                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11152  00541C  52E6               	movf	postinc1,f,c
 11153  00541E  52E6               	movf	postinc1,f,c
 11154                           
 11155                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 11156                           
 11157                           ;incstack = 0
 11158  005420  5020               	movf	_width,w,c
 11159  005422  1021               	iorwf	_width+1,w,c
 11160  005424  A4D8               	btfss	status,2,c
 11161  005426  D009               	goto	l7529
 11162                           
 11163                           ;stkvar	_w @ sp[(-2)+0]
 11164  005428  0EFE               	movlw	-2
 11165  00542A  0060  F083  FFE3   	movff	_width,plusw1
 11166  005430  0EFF               	movlw	-1
 11167  005432  0060  F087  FFE3   	movff	_width+1,plusw1
 11168  005438  D016               	goto	l7531
 11169  00543A                     l7529:
 11170  00543A  0EFF               	movlw	255
 11171  00543C  6E45               	movwf	btemp+10,c
 11172  00543E  0EFF               	movlw	255
 11173  005440  6E46               	movwf	btemp+11,c
 11174  005442  0060  F080  F043   	movff	_width,btemp+8
 11175  005448  0060  F084  F044   	movff	_width+1,btemp+9
 11176  00544E  5045               	movf	btemp+10,w,c
 11177  005450  2643               	addwf	btemp+8,f,c
 11178  005452  5046               	movf	btemp+11,w,c
 11179  005454  2244               	addwfc	btemp+9,f,c
 11180                           
 11181                           ;stkvar	_w @ sp[(-2)+0]
 11182  005456  0EFE               	movlw	-2
 11183  005458  0060  F10F  FFE3   	movff	btemp+8,plusw1
 11184  00545E  0EFF               	movlw	-1
 11185  005460  0060  F113  FFE3   	movff	btemp+9,plusw1
 11186  005466                     l7531:
 11187                           
 11188                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 11189                           ;stkvar	_c @ sp[(-2)+-3]
 11190  005466  0EFB               	movlw	-5
 11191  005468  006F FF8C  F1CD    	movff	plusw1,_dbuf
 11192                           
 11193                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 11194  00546E  0101               	movlb	1	; () banked
 11195  005470  6BCE               	clrf	(_dbuf+1)& (0+255),b
 11196                           
 11197                           ; BSR set to: 1
 11198                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 11199                           ;stkvar	_w @ sp[(-2)+0]
 11200  005472  0EFE               	movlw	-2
 11201  005474  006F FF8F FFE6     	movff	plusw1,postinc1
 11202  00547A  006F FF8F FFE6     	movff	plusw1,postinc1
 11203  005480  0ECD               	movlw	low _dbuf
 11204  005482  6EE6               	movwf	postinc1,c
 11205  005484  0E01               	movlw	high _dbuf
 11206  005486  6EE6               	movwf	postinc1,c
 11207                           
 11208                           ;stkvar	_fp @ sp[(-6)+-2]
 11209  005488  0EF8               	movlw	-8
 11210  00548A  006F FF8F FFE6     	movff	plusw1,postinc1
 11211  005490  006F FF8F FFE6     	movff	plusw1,postinc1
 11212  005496  ECCC  F024         	call	_pad	;wreg free
 11213                           
 11214                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 11215  00549A  0EFB               	movlw	251
 11216  00549C  26E1               	addwf	fsr1l,f,c
 11217  00549E  0EFF               	movlw	255
 11218  0054A0  22E2               	addwfc	fsr1h,f,c
 11219  0054A2  0012               	return		;funcret
 11220  0054A4                     __end_of_ctoa:
 11221                           	opt callstack 0
 11222                           
 11223 ;; *************** function _pad *****************
 11224 ;; Defined at:
 11225 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11226 ;; Parameters:    Size  Location     Type
 11227 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11228 ;;		 -> f(5), NULL(0), 
 11229 ;;  buf             2  [STACK] PTR unsigned char 
 11230 ;;		 -> dbuf(32), 
 11231 ;;  p               2  [STACK] int 
 11232 ;; Auto vars:     Size  Location     Type
 11233 ;;  w               2  [STACK] int 
 11234 ;;  i               2  [STACK] int 
 11235 ;; Return value:  Size  Location     Type
 11236 ;;                  2  [STACK] int 
 11237 ;; Registers used:
 11238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11239 ;; Tracked objects:
 11240 ;;		On entry : 0/1
 11241 ;;		On exit  : 0/0
 11242 ;;		Unchanged: 0/0
 11243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11248 ;;Total ram usage:        0 bytes
 11249 ;; Hardware stack levels used:    1
 11250 ;; Hardware stack levels required when called:    7
 11251 ;; This function calls:
 11252 ;;		_fputc
 11253 ;;		_fputs
 11254 ;;		_strlen
 11255 ;; This function is called by:
 11256 ;;		_ctoa
 11257 ;;		_dtoa
 11258 ;; This function uses a reentrant model
 11259 ;;
 11260                           
 11261                           	psect	text44
 11262  004998                     __ptext44:
 11263                           	opt callstack 0
 11264  004998                     _pad:
 11265                           	opt callstack 0
 11266                           
 11267                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11268  004998  52E6               	movf	postinc1,f,c
 11269  00499A  52E6               	movf	postinc1,f,c
 11270  00499C  52E6               	movf	postinc1,f,c
 11271  00499E  52E6               	movf	postinc1,f,c
 11272                           
 11273                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 11274                           
 11275                           ;incstack = 0
 11276  0049A0  A024               	btfss	_flags,0,c
 11277  0049A2  D010               	goto	l7507
 11278                           
 11279                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 11280                           ;stkvar	_fp @ sp[(-4)+-2]
 11281  0049A4  0EFA               	movlw	-6
 11282  0049A6  006F FF8F FFE6     	movff	plusw1,postinc1
 11283  0049AC  006F FF8F FFE6     	movff	plusw1,postinc1
 11284                           
 11285                           ;stkvar	_buf @ sp[(-6)+-4]
 11286  0049B2  0EF6               	movlw	-10
 11287  0049B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11288  0049BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11289  0049C0  EC79  F029         	call	_fputs	;wreg free
 11290  0049C4                     l7507:
 11291                           
 11292                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 11293                           ;stkvar	_p @ sp[(-4)+-6]
 11294  0049C4  0EF7               	movlw	-9
 11295  0049C6  BEE3               	btfsc	plusw1,7,c
 11296  0049C8  D011               	goto	l7511
 11297                           
 11298                           ;stkvar	_p @ sp[(-4)+-6]
 11299                           ;stkvar	_w @ sp[(-4)+0]
 11300  0049CA  0EF6               	movlw	-10
 11301  0049CC  006F FF8C  F03B    	movff	plusw1,btemp
 11302  0049D2  0EFC               	movlw	-4
 11303  0049D4  0060  F0EF  FFE3   	movff	btemp,plusw1
 11304  0049DA  0EF7               	movlw	-9
 11305  0049DC  006F FF8C  F03B    	movff	plusw1,btemp
 11306  0049E2  0EFD               	movlw	-3
 11307  0049E4  0060  F0EF  FFE3   	movff	btemp,plusw1
 11308  0049EA  D004               	goto	l1763
 11309  0049EC                     l7511:
 11310                           
 11311                           ;stkvar	_w @ sp[(-4)+0]
 11312  0049EC  0EFC               	movlw	-4
 11313  0049EE  6AE3               	clrf	plusw1,c
 11314  0049F0  0EFD               	movlw	-3
 11315  0049F2  6AE3               	clrf	plusw1,c
 11316  0049F4                     l1763:
 11317                           
 11318                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 11319                           ;stkvar	_i @ sp[(-4)+2]
 11320  0049F4  0EFE               	movlw	-2
 11321  0049F6  6AE3               	clrf	plusw1,c
 11322  0049F8  0EFF               	movlw	-1
 11323  0049FA  6AE3               	clrf	plusw1,c
 11324                           
 11325                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 11326  0049FC  D01E               	goto	l7517
 11327  0049FE                     l7513:
 11328                           
 11329                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 11330                           ;stkvar	_fp @ sp[(-4)+-2]
 11331  0049FE  0EFA               	movlw	-6
 11332  004A00  006F FF8F FFE6     	movff	plusw1,postinc1
 11333  004A06  006F FF8F FFE6     	movff	plusw1,postinc1
 11334  004A0C  0E20               	movlw	32
 11335  004A0E  6EE6               	movwf	postinc1,c
 11336  004A10  0E00               	movlw	0
 11337  004A12  6EE6               	movwf	postinc1,c
 11338  004A14  EC56  F025         	call	_fputc	;wreg free
 11339                           
 11340                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 11341                           ;stkvar	_i @ sp[(-4)+2]
 11342  004A18  0EFE               	movlw	-2
 11343  004A1A  50E3               	movf	plusw1,w,c
 11344  004A1C  0F01               	addlw	1
 11345  004A1E  6E3B               	movwf	btemp,c
 11346  004A20  0EFE               	movlw	-2
 11347  004A22  0060  F0EF  FFE3   	movff	btemp,plusw1
 11348  004A28  6A3B               	clrf	btemp,c
 11349  004A2A  0EFF               	movlw	-1
 11350  004A2C  50E3               	movf	plusw1,w,c
 11351  004A2E  203B               	addwfc	btemp,w,c
 11352  004A30  6E3B               	movwf	btemp,c
 11353  004A32  0EFF               	movlw	-1
 11354  004A34  0060  F0EF  FFE3   	movff	btemp,plusw1
 11355  004A3A                     l7517:
 11356                           
 11357                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 11358                           ;stkvar	_w @ sp[(-4)+0]
 11359                           ;stkvar	_i @ sp[(-4)+2]
 11360  004A3A  50E1               	movf	fsr1l,w,c
 11361  004A3C  0FFE               	addlw	-2
 11362  004A3E  6ED9               	movwf	fsr2l,c
 11363  004A40  50E2               	movf	fsr1h,w,c
 11364  004A42  6EDA               	movwf	fsr2h,c
 11365  004A44  0EFF               	movlw	255
 11366  004A46  22DA               	addwfc	fsr2h,f,c
 11367  004A48  0EFC               	movlw	-4
 11368  004A4A  50E3               	movf	plusw1,w,c
 11369  004A4C  5CDE               	subwf	postinc2,w,c
 11370  004A4E  50DE               	movf	postinc2,w,c
 11371  004A50  0A80               	xorlw	128
 11372  004A52  6E3B               	movwf	btemp,c
 11373  004A54  0EFD               	movlw	-3
 11374  004A56  50E3               	movf	plusw1,w,c
 11375  004A58  0A80               	xorlw	128
 11376  004A5A  583B               	subwfb	btemp,w,c
 11377  004A5C  A0D8               	btfss	status,0,c
 11378  004A5E  D7CF               	goto	l7513
 11379                           
 11380                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 11381  004A60  B024               	btfsc	_flags,0,c
 11382  004A62  D010               	goto	l7521
 11383                           
 11384                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 11385                           ;stkvar	_fp @ sp[(-4)+-2]
 11386  004A64  0EFA               	movlw	-6
 11387  004A66  006F FF8F FFE6     	movff	plusw1,postinc1
 11388  004A6C  006F FF8F FFE6     	movff	plusw1,postinc1
 11389                           
 11390                           ;stkvar	_buf @ sp[(-6)+-4]
 11391  004A72  0EF6               	movlw	-10
 11392  004A74  006F FF8F FFE6     	movff	plusw1,postinc1
 11393  004A7A  006F FF8F FFE6     	movff	plusw1,postinc1
 11394  004A80  EC79  F029         	call	_fputs	;wreg free
 11395  004A84                     l7521:
 11396                           
 11397                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 11398                           ;stkvar	_w @ sp[(-4)+0]
 11399                           ;stkvar	_buf @ sp[(-4)+-4]
 11400  004A84  0EF8               	movlw	-8
 11401  004A86  006F FF8F FFE6     	movff	plusw1,postinc1
 11402  004A8C  006F FF8F FFE6     	movff	plusw1,postinc1
 11403  004A92  EC3E  F028         	call	_strlen	;wreg free
 11404  004A96  0EFC               	movlw	-4
 11405  004A98  50E3               	movf	plusw1,w,c
 11406  004A9A  263B               	addwf	btemp,f,c
 11407  004A9C  0EFD               	movlw	-3
 11408  004A9E  50E3               	movf	plusw1,w,c
 11409  004AA0  223C               	addwfc	btemp+1,f,c
 11410                           
 11411                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 11412  004AA2  0EF6               	movlw	246
 11413  004AA4  26E1               	addwf	fsr1l,f,c
 11414  004AA6  0EFF               	movlw	255
 11415  004AA8  22E2               	addwfc	fsr1h,f,c
 11416  004AAA  0012               	return		;funcret
 11417  004AAC                     __end_of_pad:
 11418                           	opt callstack 0
 11419                           
 11420 ;; *************** function _strlen *****************
 11421 ;; Defined at:
 11422 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 11423 ;; Parameters:    Size  Location     Type
 11424 ;;  s               2  [STACK] PTR const unsigned char 
 11425 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 11426 ;;		 -> STR_3(6), V(88), 
 11427 ;; Auto vars:     Size  Location     Type
 11428 ;;  a               2  [STACK] PTR const unsigned char 
 11429 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 11430 ;;		 -> STR_3(6), V(88), 
 11431 ;; Return value:  Size  Location     Type
 11432 ;;                  2  [STACK] unsigned int 
 11433 ;; Registers used:
 11434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 11435 ;; Tracked objects:
 11436 ;;		On entry : 0/0
 11437 ;;		On exit  : 0/0
 11438 ;;		Unchanged: 0/0
 11439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11444 ;;Total ram usage:        0 bytes
 11445 ;; Hardware stack levels used:    1
 11446 ;; Hardware stack levels required when called:    3
 11447 ;; This function calls:
 11448 ;;		Nothing
 11449 ;; This function is called by:
 11450 ;;		_eaDogM_WriteString
 11451 ;;		_pad
 11452 ;;		_stoa
 11453 ;; This function uses a reentrant model
 11454 ;;
 11455                           
 11456                           	psect	text45
 11457  00507C                     __ptext45:
 11458                           	opt callstack 0
 11459  00507C                     _strlen:
 11460                           	opt callstack 0
 11461                           
 11462                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11463  00507C  52E6               	movf	postinc1,f,c
 11464  00507E  52E6               	movf	postinc1,f,c
 11465                           
 11466                           ;stkvar	_s @ sp[(-2)+-2]
 11467                           
 11468                           ;incstack = 0
 11469  005080  0EFC               	movlw	-4
 11470  005082  006F FF8C  F045    	movff	plusw1,btemp+10
 11471  005088  0EFD               	movlw	-3
 11472  00508A  006F FF8C  F046    	movff	plusw1,btemp+11
 11473                           
 11474                           ;stkvar	_a @ sp[(-2)+0]
 11475  005090  0EFF               	movlw	-1
 11476  005092  0060  F11B  FFE3   	movff	btemp+11,plusw1
 11477  005098  0EFE               	movlw	-2
 11478  00509A  0060  F117  FFE3   	movff	btemp+10,plusw1
 11479  0050A0  D011               	goto	l5229
 11480  0050A2                     l5227:
 11481                           
 11482                           ;stkvar	_s @ sp[(-2)+-2]
 11483  0050A2  0EFC               	movlw	-4
 11484  0050A4  50E3               	movf	plusw1,w,c
 11485  0050A6  0F01               	addlw	1
 11486  0050A8  6E3B               	movwf	btemp,c
 11487  0050AA  0EFC               	movlw	-4
 11488  0050AC  0060  F0EF  FFE3   	movff	btemp,plusw1
 11489  0050B2  6A3B               	clrf	btemp,c
 11490  0050B4  0EFD               	movlw	-3
 11491  0050B6  50E3               	movf	plusw1,w,c
 11492  0050B8  203B               	addwfc	btemp,w,c
 11493  0050BA  6E3B               	movwf	btemp,c
 11494  0050BC  0EFD               	movlw	-3
 11495  0050BE  0060  F0EF  FFE3   	movff	btemp,plusw1
 11496  0050C4                     l5229:
 11497                           
 11498                           ;stkvar	_s @ sp[(-2)+-2]
 11499  0050C4  0EFC               	movlw	-4
 11500  0050C6  006F FF8F FFF6     	movff	plusw1,tblptrl
 11501  0050CC  0EFD               	movlw	-3
 11502  0050CE  006F FF8F FFF7     	movff	plusw1,tblptrh
 11503  0050D4  0E00               	movlw	low (__smallconst shr (0+16))
 11504  0050D6  6EF8               	movwf	tblptru,c
 11505  0050D8  0E1F               	movlw	(high __ramtop+-1)
 11506  0050DA  64F7               	cpfsgt	tblptrh,c
 11507  0050DC  D003               	bra	u2317
 11508  0050DE  0008               	tblrd		*
 11509  0050E0  50F5               	movf	tablat,w,c
 11510  0050E2  D007               	bra	u2310
 11511  0050E4                     u2317:
 11512  0050E4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11513  0050EA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11514  0050F0  50EF               	movf	indf0,w,c
 11515  0050F2                     u2310:
 11516  0050F2  0900               	iorlw	0
 11517  0050F4  A4D8               	btfss	status,2,c
 11518  0050F6  D7D5               	goto	l5227
 11519                           
 11520                           ;stkvar	_a @ sp[(-2)+0]
 11521                           ;stkvar	_s @ sp[(-2)+-2]
 11522  0050F8  0EFC               	movlw	-4
 11523  0050FA  006F FF8C  F03B    	movff	plusw1,btemp
 11524  005100  0EFD               	movlw	-3
 11525  005102  006F FF8C  F03C    	movff	plusw1,btemp+1
 11526  005108  0EFE               	movlw	-2
 11527  00510A  50E3               	movf	plusw1,w,c
 11528  00510C  5E3B               	subwf	btemp,f,c
 11529  00510E  0EFF               	movlw	-1
 11530  005110  50E3               	movf	plusw1,w,c
 11531  005112  5A3C               	subwfb	btemp+1,f,c
 11532                           
 11533                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 11534  005114  52E5               	movf	postdec1,f,c
 11535  005116  52E5               	movf	postdec1,f,c
 11536  005118  52E5               	movf	postdec1,f,c
 11537  00511A  52E5               	movf	postdec1,f,c
 11538  00511C  0012               	return		;funcret
 11539  00511E                     __end_of_strlen:
 11540                           	opt callstack 0
 11541                           
 11542 ;; *************** function _fputs *****************
 11543 ;; Defined at:
 11544 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 11545 ;; Parameters:    Size  Location     Type
 11546 ;;  s               2  [STACK] PTR const unsigned char 
 11547 ;;		 -> dbuf(32), 
 11548 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11549 ;;		 -> f(5), NULL(0), 
 11550 ;; Auto vars:     Size  Location     Type
 11551 ;;  i               2  [STACK] int 
 11552 ;;  c               1  [STACK] unsigned char 
 11553 ;; Return value:  Size  Location     Type
 11554 ;;                  2  [STACK] int 
 11555 ;; Registers used:
 11556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 11557 ;; Tracked objects:
 11558 ;;		On entry : 0/1
 11559 ;;		On exit  : 0/0
 11560 ;;		Unchanged: 0/0
 11561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11566 ;;Total ram usage:        0 bytes
 11567 ;; Hardware stack levels used:    1
 11568 ;; Hardware stack levels required when called:    6
 11569 ;; This function calls:
 11570 ;;		_fputc
 11571 ;; This function is called by:
 11572 ;;		_pad
 11573 ;; This function uses a reentrant model
 11574 ;;
 11575                           
 11576                           	psect	text46
 11577  0052F2                     __ptext46:
 11578                           	opt callstack 0
 11579  0052F2                     _fputs:
 11580                           	opt callstack 0
 11581                           
 11582                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11583  0052F2  52E6               	movf	postinc1,f,c
 11584  0052F4  52E6               	movf	postinc1,f,c
 11585  0052F6  52E6               	movf	postinc1,f,c
 11586                           
 11587                           ;stkvar	_i @ sp[(-3)+0]
 11588                           
 11589                           ;incstack = 0
 11590  0052F8  0EFD               	movlw	-3
 11591  0052FA  6AE3               	clrf	plusw1,c
 11592  0052FC  0EFE               	movlw	-2
 11593  0052FE  6AE3               	clrf	plusw1,c
 11594  005300  D01F               	goto	l7501
 11595  005302                     l7497:
 11596                           
 11597                           ;stkvar	_fp @ sp[(-3)+-4]
 11598  005302  0EF9               	movlw	-7
 11599  005304  006F FF8F FFE6     	movff	plusw1,postinc1
 11600  00530A  006F FF8F FFE6     	movff	plusw1,postinc1
 11601                           
 11602                           ;stkvar	_c @ sp[(-5)+2]
 11603  005310  0EFD               	movlw	-3
 11604  005312  50E3               	movf	plusw1,w,c
 11605  005314  6EE6               	movwf	postinc1,c
 11606  005316  0E00               	movlw	0
 11607  005318  6EE6               	movwf	postinc1,c
 11608  00531A  EC56  F025         	call	_fputc	;wreg free
 11609                           
 11610                           ;stkvar	_i @ sp[(-3)+0]
 11611  00531E  0EFD               	movlw	-3
 11612  005320  50E3               	movf	plusw1,w,c
 11613  005322  0F01               	addlw	1
 11614  005324  6E3B               	movwf	btemp,c
 11615  005326  0EFD               	movlw	-3
 11616  005328  0060  F0EF  FFE3   	movff	btemp,plusw1
 11617  00532E  6A3B               	clrf	btemp,c
 11618  005330  0EFE               	movlw	-2
 11619  005332  50E3               	movf	plusw1,w,c
 11620  005334  203B               	addwfc	btemp,w,c
 11621  005336  6E3B               	movwf	btemp,c
 11622  005338  0EFE               	movlw	-2
 11623  00533A  0060  F0EF  FFE3   	movff	btemp,plusw1
 11624  005340                     l7501:
 11625                           
 11626                           ;stkvar	_i @ sp[(-3)+0]
 11627  005340  0EFD               	movlw	-3
 11628  005342  006F FF8C  F045    	movff	plusw1,btemp+10
 11629  005348  0EFE               	movlw	-2
 11630  00534A  006F FF8C  F046    	movff	plusw1,btemp+11
 11631                           
 11632                           ;stkvar	_s @ sp[(-3)+-2]
 11633  005350  0EFB               	movlw	-5
 11634  005352  006F FF8C  F043    	movff	plusw1,btemp+8
 11635  005358  0EFC               	movlw	-4
 11636  00535A  006F FF8C  F044    	movff	plusw1,btemp+9
 11637  005360  5045               	movf	btemp+10,w,c
 11638  005362  2443               	addwf	btemp+8,w,c
 11639  005364  6ED9               	movwf	fsr2l,c
 11640  005366  5046               	movf	btemp+11,w,c
 11641  005368  2044               	addwfc	btemp+9,w,c
 11642  00536A  6EDA               	movwf	fsr2h,c
 11643  00536C  50DF               	movf	indf2,w,c
 11644  00536E  6E46               	movwf	btemp+11,c
 11645                           
 11646                           ;stkvar	_c @ sp[(-3)+2]
 11647  005370  0EFF               	movlw	-1
 11648  005372  0060  F11B  FFE3   	movff	btemp+11,plusw1
 11649  005378  0EFF               	movlw	-1
 11650  00537A  50E3               	movf	plusw1,w,c
 11651  00537C  A4D8               	btfss	status,2,c
 11652  00537E  D7C1               	goto	l7497
 11653                           
 11654                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11655  005380  0EF9               	movlw	249
 11656  005382  26E1               	addwf	fsr1l,f,c
 11657  005384  0EFF               	movlw	255
 11658  005386  22E2               	addwfc	fsr1h,f,c
 11659  005388  0012               	return		;funcret
 11660  00538A                     __end_of_fputs:
 11661                           	opt callstack 0
 11662                           
 11663 ;; *************** function _fputc *****************
 11664 ;; Defined at:
 11665 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 11666 ;; Parameters:    Size  Location     Type
 11667 ;;  c               2  [STACK] int 
 11668 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11669 ;;		 -> f(5), NULL(0), 
 11670 ;; Auto vars:     Size  Location     Type
 11671 ;;		None
 11672 ;; Return value:  Size  Location     Type
 11673 ;;                  2  [STACK] int 
 11674 ;; Registers used:
 11675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 11676 ;; Tracked objects:
 11677 ;;		On entry : 0/0
 11678 ;;		On exit  : 0/0
 11679 ;;		Unchanged: 0/0
 11680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11685 ;;Total ram usage:        0 bytes
 11686 ;; Hardware stack levels used:    1
 11687 ;; Hardware stack levels required when called:    5
 11688 ;; This function calls:
 11689 ;;		_putch
 11690 ;; This function is called by:
 11691 ;;		_pad
 11692 ;;		_stoa
 11693 ;;		_vfpfcnvrt
 11694 ;;		_fputs
 11695 ;; This function uses a reentrant model
 11696 ;;
 11697                           
 11698                           	psect	text47
 11699  004AAC                     __ptext47:
 11700                           	opt callstack 0
 11701  004AAC                     _fputc:
 11702                           	opt callstack 21
 11703                           
 11704                           ;stkvar	_fp @ sp[(0)+-4]
 11705                           
 11706                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11707                           ;incstack = 0
 11708  004AAC  0EFC               	movlw	-4
 11709  004AAE  006F FF8C  F03B    	movff	plusw1,btemp
 11710  004AB4  0EFD               	movlw	-3
 11711  004AB6  50E3               	movf	plusw1,w,c
 11712  004AB8  103B               	iorwf	btemp,w,c
 11713  004ABA  B4D8               	btfsc	status,2,c
 11714  004ABC  D009               	goto	u4400
 11715                           
 11716                           ;stkvar	_fp @ sp[(0)+-4]
 11717  004ABE  0EFC               	movlw	-4
 11718  004AC0  006F FF8C  F03B    	movff	plusw1,btemp
 11719  004AC6  0EFD               	movlw	-3
 11720  004AC8  50E3               	movf	plusw1,w,c
 11721  004ACA  103B               	iorwf	btemp,w,c
 11722  004ACC  A4D8               	btfss	status,2,c
 11723  004ACE  D006               	goto	l7487
 11724  004AD0                     u4400:
 11725                           
 11726                           ;stkvar	_c @ sp[(0)+-2]
 11727  004AD0  0EFE               	movlw	-2
 11728  004AD2  50E3               	movf	plusw1,w,c
 11729  004AD4  6EE6               	movwf	postinc1,c
 11730  004AD6  EC1F  F030         	call	_putch	;wreg free
 11731  004ADA  D069               	goto	l2546
 11732  004ADC                     l7487:
 11733                           
 11734                           ;stkvar	_fp @ sp[(0)+-4]
 11735  004ADC  0EFC               	movlw	-4
 11736  004ADE  006F FF8C  F045    	movff	plusw1,btemp+10
 11737  004AE4  0EFD               	movlw	-3
 11738  004AE6  006F FF8C  F046    	movff	plusw1,btemp+11
 11739  004AEC  0E03               	movlw	3
 11740  004AEE  2445               	addwf	btemp+10,w,c
 11741  004AF0  6ED9               	movwf	fsr2l,c
 11742  004AF2  0E00               	movlw	0
 11743  004AF4  2046               	addwfc	btemp+11,w,c
 11744  004AF6  6EDA               	movwf	fsr2h,c
 11745  004AF8  50DE               	movf	postinc2,w,c
 11746  004AFA  10DE               	iorwf	postinc2,w,c
 11747  004AFC  B4D8               	btfsc	status,2,c
 11748  004AFE  D026               	goto	u4420
 11749                           
 11750                           ;stkvar	_fp @ sp[(0)+-4]
 11751  004B00  0EFC               	movlw	-4
 11752  004B02  006F FF8C  F045    	movff	plusw1,btemp+10
 11753  004B08  0EFD               	movlw	-3
 11754  004B0A  006F FF8C  F046    	movff	plusw1,btemp+11
 11755  004B10  0E03               	movlw	3
 11756  004B12  2445               	addwf	btemp+10,w,c
 11757  004B14  6ED9               	movwf	fsr2l,c
 11758  004B16  0E00               	movlw	0
 11759  004B18  2046               	addwfc	btemp+11,w,c
 11760  004B1A  6EDA               	movwf	fsr2h,c
 11761                           
 11762                           ;stkvar	_fp @ sp[(0)+-4]
 11763  004B1C  0EFC               	movlw	-4
 11764  004B1E  006F FF8C  F045    	movff	plusw1,btemp+10
 11765  004B24  0EFD               	movlw	-3
 11766  004B26  006F FF8C  F046    	movff	plusw1,btemp+11
 11767  004B2C  0E01               	movlw	1
 11768  004B2E  2445               	addwf	btemp+10,w,c
 11769  004B30  6EE9               	movwf	fsr0l,c
 11770  004B32  0E00               	movlw	0
 11771  004B34  2046               	addwfc	btemp+11,w,c
 11772  004B36  6EEA               	movwf	fsr0h,c
 11773  004B38  50DE               	movf	postinc2,w,c
 11774  004B3A  5CEE               	subwf	postinc0,w,c
 11775  004B3C  50EE               	movf	postinc0,w,c
 11776  004B3E  0A80               	xorlw	128
 11777  004B40  6E3B               	movwf	btemp,c
 11778  004B42  50DE               	movf	postinc2,w,c
 11779  004B44  0A80               	xorlw	128
 11780  004B46  583B               	subwfb	btemp,w,c
 11781  004B48  B0D8               	btfsc	status,0,c
 11782  004B4A  D031               	goto	l2546
 11783  004B4C                     u4420:
 11784                           
 11785                           ;stkvar	_c @ sp[(0)+-2]
 11786                           ;stkvar	_fp @ sp[(0)+-4]
 11787  004B4C  0EFC               	movlw	-4
 11788  004B4E  006F FF8C  F045    	movff	plusw1,btemp+10
 11789  004B54  0EFD               	movlw	-3
 11790  004B56  006F FF8C  F046    	movff	plusw1,btemp+11
 11791  004B5C  0E01               	movlw	1
 11792  004B5E  2445               	addwf	btemp+10,w,c
 11793  004B60  6ED9               	movwf	fsr2l,c
 11794  004B62  0E00               	movlw	0
 11795  004B64  2046               	addwfc	btemp+11,w,c
 11796  004B66  6EDA               	movwf	fsr2h,c
 11797  004B68  50DF               	movf	indf2,w,c
 11798  004B6A  6E46               	movwf	btemp+11,c
 11799                           
 11800                           ;stkvar	_fp @ sp[(0)+-4]
 11801  004B6C  0EFC               	movlw	-4
 11802  004B6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11803  004B74  0EFD               	movlw	-3
 11804  004B76  006F FF8F FFDA     	movff	plusw1,fsr2h
 11805  004B7C  50DF               	movf	indf2,w,c
 11806  004B7E  2446               	addwf	btemp+11,w,c
 11807  004B80  6ED9               	movwf	fsr2l,c
 11808  004B82  6ADA               	clrf	fsr2h,c
 11809  004B84  0EFE               	movlw	-2
 11810  004B86  006F FF8F FFDF     	movff	plusw1,indf2
 11811                           
 11812                           ;stkvar	_fp @ sp[(0)+-4]
 11813  004B8C  0EFC               	movlw	-4
 11814  004B8E  006F FF8C  F045    	movff	plusw1,btemp+10
 11815  004B94  0EFD               	movlw	-3
 11816  004B96  006F FF8C  F046    	movff	plusw1,btemp+11
 11817  004B9C  0E01               	movlw	1
 11818  004B9E  2445               	addwf	btemp+10,w,c
 11819  004BA0  6ED9               	movwf	fsr2l,c
 11820  004BA2  0E00               	movlw	0
 11821  004BA4  2046               	addwfc	btemp+11,w,c
 11822  004BA6  6EDA               	movwf	fsr2h,c
 11823  004BA8  2ADE               	incf	postinc2,f,c
 11824  004BAA  0E00               	movlw	0
 11825  004BAC  22DD               	addwfc	postdec2,f,c
 11826  004BAE                     l2546:
 11827                           
 11828                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11829  004BAE  52E5               	movf	postdec1,f,c
 11830  004BB0  52E5               	movf	postdec1,f,c
 11831  004BB2  52E5               	movf	postdec1,f,c
 11832  004BB4  52E5               	movf	postdec1,f,c
 11833  004BB6  0012               	return		;funcret
 11834  004BB8                     __end_of_fputc:
 11835                           	opt callstack 0
 11836                           
 11837 ;; *************** function _putch *****************
 11838 ;; Defined at:
 11839 ;;		line 138 in file "eadog.c"
 11840 ;; Parameters:    Size  Location     Type
 11841 ;;  c               1  [STACK] unsigned char 
 11842 ;; Auto vars:     Size  Location     Type
 11843 ;;		None
 11844 ;; Return value:  Size  Location     Type
 11845 ;;                  1  [STACK] void 
 11846 ;; Registers used:
 11847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 11848 ;; Tracked objects:
 11849 ;;		On entry : 0/0
 11850 ;;		On exit  : 0/0
 11851 ;;		Unchanged: 0/0
 11852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11857 ;;Total ram usage:        0 bytes
 11858 ;; Hardware stack levels used:    1
 11859 ;; Hardware stack levels required when called:    4
 11860 ;; This function calls:
 11861 ;;		_ringBufS_put_dma
 11862 ;; This function is called by:
 11863 ;;		_fputc
 11864 ;; This function uses a reentrant model
 11865 ;;
 11866                           
 11867                           	psect	text48
 11868  00603E                     __ptext48:
 11869                           	opt callstack 0
 11870  00603E                     _putch:
 11871                           	opt callstack 21
 11872                           
 11873                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 11874                           ;stkvar	_c @ sp[(0)+-1]
 11875                           
 11876                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11877                           ;incstack = 0
 11878  00603E  0EFF               	movlw	-1
 11879  006040  50E3               	movf	plusw1,w,c
 11880  006042  6EE6               	movwf	postinc1,c
 11881  006044  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
 11882  00604A  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
 11883  006050  ECE9  F027         	call	_ringBufS_put_dma	;wreg free
 11884                           
 11885                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 11886  006054  52E5               	movf	postdec1,f,c
 11887  006056  0012               	return		;funcret
 11888  006058                     __end_of_putch:
 11889                           	opt callstack 0
 11890                           
 11891 ;; *************** function _ringBufS_put_dma *****************
 11892 ;; Defined at:
 11893 ;;		line 67 in file "ringbufs.c"
 11894 ;; Parameters:    Size  Location     Type
 11895 ;;  _this           2  [STACK] PTR struct ringBufS_t
 11896 ;;		 -> ring_buf1(67), 
 11897 ;;  c               1  [STACK] const unsigned char 
 11898 ;; Auto vars:     Size  Location     Type
 11899 ;;		None
 11900 ;; Return value:  Size  Location     Type
 11901 ;;                  1  [STACK] void 
 11902 ;; Registers used:
 11903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 11904 ;; Tracked objects:
 11905 ;;		On entry : 0/0
 11906 ;;		On exit  : 0/0
 11907 ;;		Unchanged: 0/0
 11908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11913 ;;Total ram usage:        0 bytes
 11914 ;; Hardware stack levels used:    1
 11915 ;; Hardware stack levels required when called:    3
 11916 ;; This function calls:
 11917 ;;		Nothing
 11918 ;; This function is called by:
 11919 ;;		_putch
 11920 ;; This function uses a reentrant model
 11921 ;;
 11922                           
 11923                           	psect	text49
 11924  004FD2                     __ptext49:
 11925                           	opt callstack 0
 11926  004FD2                     _ringBufS_put_dma:
 11927                           	opt callstack 21
 11928                           
 11929                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 11930                           ;stkvar	__this @ sp[(0)+-2]
 11931                           
 11932                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11933                           ;incstack = 0
 11934  004FD2  0EFE               	movlw	-2
 11935  004FD4  006F FF8C  F045    	movff	plusw1,btemp+10
 11936  004FDA  0EFF               	movlw	-1
 11937  004FDC  006F FF8C  F046    	movff	plusw1,btemp+11
 11938  004FE2  0E42               	movlw	66
 11939  004FE4  2445               	addwf	btemp+10,w,c
 11940  004FE6  6ED9               	movwf	fsr2l,c
 11941  004FE8  0E00               	movlw	0
 11942  004FEA  2046               	addwfc	btemp+11,w,c
 11943  004FEC  6EDA               	movwf	fsr2h,c
 11944  004FEE  0E40               	movlw	64
 11945  004FF0  60DF               	cpfslt	indf2,c
 11946  004FF2  D040               	goto	l1456
 11947                           
 11948                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 11949                           ;stkvar	_c @ sp[(0)+-3]
 11950                           ;stkvar	__this @ sp[(0)+-2]
 11951  004FF4  0EFE               	movlw	-2
 11952  004FF6  006F FF8C  F045    	movff	plusw1,btemp+10
 11953  004FFC  0EFF               	movlw	-1
 11954  004FFE  006F FF8C  F046    	movff	plusw1,btemp+11
 11955  005004  0E40               	movlw	64
 11956  005006  2445               	addwf	btemp+10,w,c
 11957  005008  6ED9               	movwf	fsr2l,c
 11958  00500A  0E00               	movlw	0
 11959  00500C  2046               	addwfc	btemp+11,w,c
 11960  00500E  6EDA               	movwf	fsr2h,c
 11961  005010  50DF               	movf	indf2,w,c
 11962  005012  6E46               	movwf	btemp+11,c
 11963                           
 11964                           ;stkvar	__this @ sp[(0)+-2]
 11965  005014  0EFE               	movlw	-2
 11966  005016  006F FF8C  F043    	movff	plusw1,btemp+8
 11967  00501C  0EFF               	movlw	-1
 11968  00501E  006F FF8C  F044    	movff	plusw1,btemp+9
 11969  005024  5046               	movf	btemp+11,w,c
 11970  005026  2443               	addwf	btemp+8,w,c
 11971  005028  6ED9               	movwf	fsr2l,c
 11972  00502A  0E00               	movlw	0
 11973  00502C  2044               	addwfc	btemp+9,w,c
 11974  00502E  6EDA               	movwf	fsr2h,c
 11975  005030  0EFD               	movlw	-3
 11976  005032  006F FF8F FFDF     	movff	plusw1,indf2
 11977                           
 11978                           ;ringbufs.c: 71:   ++_this->head;
 11979                           ;stkvar	__this @ sp[(0)+-2]
 11980  005038  0EFE               	movlw	-2
 11981  00503A  006F FF8C  F045    	movff	plusw1,btemp+10
 11982  005040  0EFF               	movlw	-1
 11983  005042  006F FF8C  F046    	movff	plusw1,btemp+11
 11984  005048  0E40               	movlw	64
 11985  00504A  2445               	addwf	btemp+10,w,c
 11986  00504C  6ED9               	movwf	fsr2l,c
 11987  00504E  0E00               	movlw	0
 11988  005050  2046               	addwfc	btemp+11,w,c
 11989  005052  6EDA               	movwf	fsr2h,c
 11990  005054  2ADF               	incf	indf2,f,c
 11991                           
 11992                           ;ringbufs.c: 72:   ++_this->count;
 11993                           ;stkvar	__this @ sp[(0)+-2]
 11994  005056  0EFE               	movlw	-2
 11995  005058  006F FF8C  F045    	movff	plusw1,btemp+10
 11996  00505E  0EFF               	movlw	-1
 11997  005060  006F FF8C  F046    	movff	plusw1,btemp+11
 11998  005066  0E42               	movlw	66
 11999  005068  2445               	addwf	btemp+10,w,c
 12000  00506A  6ED9               	movwf	fsr2l,c
 12001  00506C  0E00               	movlw	0
 12002  00506E  2046               	addwfc	btemp+11,w,c
 12003  005070  6EDA               	movwf	fsr2h,c
 12004  005072  2ADF               	incf	indf2,f,c
 12005  005074                     l1456:
 12006                           
 12007                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 12008  005074  52E5               	movf	postdec1,f,c
 12009  005076  52E5               	movf	postdec1,f,c
 12010  005078  52E5               	movf	postdec1,f,c
 12011  00507A  0012               	return		;funcret
 12012  00507C                     __end_of_ringBufS_put_dma:
 12013                           	opt callstack 0
 12014                           
 12015 ;; *************** function _SYSTEM_Initialize *****************
 12016 ;; Defined at:
 12017 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12018 ;; Parameters:    Size  Location     Type
 12019 ;;		None
 12020 ;; Auto vars:     Size  Location     Type
 12021 ;;		None
 12022 ;; Return value:  Size  Location     Type
 12023 ;;                  1  [STACK] void 
 12024 ;; Registers used:
 12025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 12026 ;; Tracked objects:
 12027 ;;		On entry : 0/0
 12028 ;;		On exit  : 3F/3C
 12029 ;;		Unchanged: 0/0
 12030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12035 ;;Total ram usage:        0 bytes
 12036 ;; Hardware stack levels used:    1
 12037 ;; Hardware stack levels required when called:    5
 12038 ;; This function calls:
 12039 ;;		_ADCC_Initialize
 12040 ;;		_CLC1_Initialize
 12041 ;;		_CLKREF_Initialize
 12042 ;;		_DMA1_Initialize
 12043 ;;		_DSM_Initialize
 12044 ;;		_EXT_INT_Initialize
 12045 ;;		_INTERRUPT_Initialize
 12046 ;;		_NCO1_Initialize
 12047 ;;		_OSCILLATOR_Initialize
 12048 ;;		_PIN_MANAGER_Initialize
 12049 ;;		_PMD_Initialize
 12050 ;;		_SPI1_Initialize
 12051 ;;		_TMR5_Initialize
 12052 ;;		_TMR6_Initialize
 12053 ;;		_UART1_Initialize
 12054 ;;		_UART2_Initialize
 12055 ;; This function is called by:
 12056 ;;		_main
 12057 ;; This function uses a reentrant model
 12058 ;;
 12059                           
 12060                           	psect	text50
 12061  0058AA                     __ptext50:
 12062                           	opt callstack 0
 12063  0058AA                     _SYSTEM_Initialize:
 12064                           	opt callstack 25
 12065                           
 12066                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 12067                           
 12068                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12069                           ;incstack = 0
 12070  0058AA  EC87  F02A         	call	_INTERRUPT_Initialize	;wreg free
 12071                           
 12072                           ; BSR set to: 57
 12073                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 12074  0058AE  EC5C  F030         	call	_PMD_Initialize	;wreg free
 12075                           
 12076                           ; BSR set to: 57
 12077                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12078  0058B2  EC8F  F028         	call	_PIN_MANAGER_Initialize	;wreg free
 12079                           
 12080                           ; BSR set to: 58
 12081                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12082  0058B6  EC51  F030         	call	_OSCILLATOR_Initialize	;wreg free
 12083                           
 12084                           ; BSR set to: 57
 12085                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 12086  0058BA  ECC7  F02B         	call	_ADCC_Initialize	;wreg free
 12087                           
 12088                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 12089  0058BE  EC03  F030         	call	_NCO1_Initialize	;wreg free
 12090                           
 12091                           ; BSR set to: 63
 12092                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 12093  0058C2  ECA1  F02B         	call	_EXT_INT_Initialize	;wreg free
 12094                           
 12095                           ; BSR set to: 57
 12096                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 12097  0058C6  EC71  F02E         	call	_TMR6_Initialize	;wreg free
 12098                           
 12099                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 12100  0058CA  EC82  F02F         	call	_CLC1_Initialize	;wreg free
 12101                           
 12102                           ; BSR set to: 60
 12103                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 12104  0058CE  EC0F  F02C         	call	_TMR5_Initialize	;wreg free
 12105                           
 12106                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 12107  0058D2  EC11  F030         	call	_DSM_Initialize	;wreg free
 12108                           
 12109                           ; BSR set to: 60
 12110                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 12111  0058D6  ECBA  F02A         	call	_UART1_Initialize	;wreg free
 12112                           
 12113                           ; BSR set to: 57
 12114                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 12115  0058DA  EC1D  F02B         	call	_UART2_Initialize	;wreg free
 12116                           
 12117                           ; BSR set to: 57
 12118                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 12119  0058DE  EC46  F030         	call	_SPI1_Initialize	;wreg free
 12120                           
 12121                           ; BSR set to: 61
 12122                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 12123  0058E2  EC52  F02A         	call	_DMA1_Initialize	;wreg free
 12124                           
 12125                           ; BSR set to: 59
 12126                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 12127  0058E6  EC8D  F030         	call	_CLKREF_Initialize	;wreg free
 12128                           
 12129                           ; BSR set to: 60
 12130                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12131  0058EA  0012               	return		;funcret
 12132  0058EC                     __end_of_SYSTEM_Initialize:
 12133                           	opt callstack 0
 12134                           
 12135 ;; *************** function _UART2_Initialize *****************
 12136 ;; Defined at:
 12137 ;;		line 78 in file "mcc_generated_files/uart2.c"
 12138 ;; Parameters:    Size  Location     Type
 12139 ;;		None
 12140 ;; Auto vars:     Size  Location     Type
 12141 ;;		None
 12142 ;; Return value:  Size  Location     Type
 12143 ;;                  1  [STACK] void 
 12144 ;; Registers used:
 12145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12146 ;; Tracked objects:
 12147 ;;		On entry : 3F/39
 12148 ;;		On exit  : 3F/39
 12149 ;;		Unchanged: 0/0
 12150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12155 ;;Total ram usage:        0 bytes
 12156 ;; Hardware stack levels used:    1
 12157 ;; Hardware stack levels required when called:    4
 12158 ;; This function calls:
 12159 ;;		_UART2_SetRxInterruptHandler
 12160 ;;		_UART2_SetTxInterruptHandler
 12161 ;; This function is called by:
 12162 ;;		_SYSTEM_Initialize
 12163 ;; This function uses a reentrant model
 12164 ;;
 12165                           
 12166                           	psect	text51
 12167  00563A                     __ptext51:
 12168                           	opt callstack 0
 12169  00563A                     _UART2_Initialize:
 12170                           	opt callstack 25
 12171                           
 12172                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 12173                           
 12174                           ; BSR set to: 60
 12175                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12176                           ;incstack = 0
 12177  00563A  0139               	movlb	57	; () banked
 12178  00563C  9596               	bcf	150,2,b	;volatile
 12179                           
 12180                           ; BSR set to: 57
 12181                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 12182  00563E  0EAC               	movlw	low _UART2_Receive_ISR
 12183  005640  6EE6               	movwf	postinc1,c
 12184  005642  0E5F               	movlw	high _UART2_Receive_ISR
 12185  005644  6EE6               	movwf	postinc1,c
 12186  005646  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 12187  005648  6EE6               	movwf	postinc1,c
 12188  00564A  EC35  F02E         	call	_UART2_SetRxInterruptHandler	;wreg free
 12189                           
 12190                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 12191  00564E  0139               	movlb	57	; () banked
 12192  005650  9796               	bcf	150,3,b	;volatile
 12193                           
 12194                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 12195  005652  0E1E               	movlw	low _UART2_Transmit_ISR
 12196  005654  6EE6               	movwf	postinc1,c
 12197  005656  0E5B               	movlw	high _UART2_Transmit_ISR
 12198  005658  6EE6               	movwf	postinc1,c
 12199  00565A  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 12200  00565C  6EE6               	movwf	postinc1,c
 12201  00565E  EC21  F02E         	call	_UART2_SetTxInterruptHandler	;wreg free
 12202                           
 12203                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 12204  005662  013D               	movlb	61	; () banked
 12205  005664  6BD4               	clrf	212,b	;volatile
 12206                           
 12207                           ; BSR set to: 61
 12208                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 12209  005666  6BD6               	clrf	214,b	;volatile
 12210                           
 12211                           ; BSR set to: 61
 12212                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 12213  005668  6BD8               	clrf	216,b	;volatile
 12214                           
 12215                           ; BSR set to: 61
 12216                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 12217  00566A  0EB0               	movlw	176
 12218  00566C  6FDA               	movwf	218,b	;volatile
 12219                           
 12220                           ; BSR set to: 61
 12221                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 12222  00566E  0E80               	movlw	128
 12223  005670  6FDB               	movwf	219,b	;volatile
 12224                           
 12225                           ; BSR set to: 61
 12226                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 12227  005672  6BDC               	clrf	220,b	;volatile
 12228                           
 12229                           ; BSR set to: 61
 12230                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 12231  005674  0E82               	movlw	130
 12232  005676  6FDD               	movwf	221,b	;volatile
 12233                           
 12234                           ; BSR set to: 61
 12235                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 12236  005678  0E06               	movlw	6
 12237  00567A  6FDE               	movwf	222,b	;volatile
 12238                           
 12239                           ; BSR set to: 61
 12240                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 12241  00567C  6BDF               	clrf	223,b	;volatile
 12242                           
 12243                           ; BSR set to: 61
 12244                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 12245  00567E  6BE0               	clrf	224,b	;volatile
 12246                           
 12247                           ; BSR set to: 61
 12248                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 12249  005680  6BE1               	clrf	225,b	;volatile
 12250                           
 12251                           ; BSR set to: 61
 12252                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 12253  005682  6BE2               	clrf	226,b	;volatile
 12254                           
 12255                           ; BSR set to: 61
 12256                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 12257  005684  6A34               	clrf	_uart2TxHead,c	;volatile
 12258                           
 12259                           ; BSR set to: 61
 12260                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 12261  005686  6A33               	clrf	_uart2TxTail,c	;volatile
 12262                           
 12263                           ; BSR set to: 61
 12264                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 12265  005688  0E40               	movlw	64
 12266  00568A  6E32               	movwf	_uart2TxBufferRemaining,c	;volatile
 12267                           
 12268                           ; BSR set to: 61
 12269                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 12270  00568C  6A31               	clrf	_uart2RxHead,c	;volatile
 12271                           
 12272                           ; BSR set to: 61
 12273                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 12274  00568E  6A30               	clrf	_uart2RxTail,c	;volatile
 12275                           
 12276                           ; BSR set to: 61
 12277                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 12278  005690  6A2F               	clrf	_uart2RxCount,c	;volatile
 12279                           
 12280                           ; BSR set to: 61
 12281                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 12282  005692  0139               	movlb	57	; () banked
 12283  005694  8596               	bsf	150,2,b	;volatile
 12284                           
 12285                           ; BSR set to: 57
 12286                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12287  005696  0012               	return		;funcret
 12288  005698                     __end_of_UART2_Initialize:
 12289                           	opt callstack 0
 12290                           
 12291 ;; *************** function _UART2_SetTxInterruptHandler *****************
 12292 ;; Defined at:
 12293 ;;		line 252 in file "mcc_generated_files/uart2.c"
 12294 ;; Parameters:    Size  Location     Type
 12295 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12296 ;;		 -> UART2_Transmit_ISR(1), 
 12297 ;; Auto vars:     Size  Location     Type
 12298 ;;		None
 12299 ;; Return value:  Size  Location     Type
 12300 ;;                  1  [STACK] void 
 12301 ;; Registers used:
 12302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12303 ;; Tracked objects:
 12304 ;;		On entry : 3F/39
 12305 ;;		On exit  : 0/0
 12306 ;;		Unchanged: 0/0
 12307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12312 ;;Total ram usage:        0 bytes
 12313 ;; Hardware stack levels used:    1
 12314 ;; Hardware stack levels required when called:    3
 12315 ;; This function calls:
 12316 ;;		Nothing
 12317 ;; This function is called by:
 12318 ;;		_UART2_Initialize
 12319 ;; This function uses a reentrant model
 12320 ;;
 12321                           
 12322                           	psect	text52
 12323  005C42                     __ptext52:
 12324                           	opt callstack 0
 12325  005C42                     _UART2_SetTxInterruptHandler:
 12326                           	opt callstack 25
 12327                           
 12328                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 12329                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12330                           
 12331                           ; BSR set to: 57
 12332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12333                           ;incstack = 0
 12334  005C42  50E1               	movf	fsr1l,w,c
 12335  005C44  0FFD               	addlw	-3
 12336  005C46  6ED9               	movwf	fsr2l,c
 12337  005C48  50E2               	movf	fsr1h,w,c
 12338  005C4A  6EDA               	movwf	fsr2h,c
 12339  005C4C  0EFF               	movlw	255
 12340  005C4E  22DA               	addwfc	fsr2h,f,c
 12341  005C50  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler
 12342  005C56  006F FF78  F012    	movff	postinc2,_UART2_TxInterruptHandler+1
 12343  005C5C  006F FF74  F013    	movff	postdec2,_UART2_TxInterruptHandler+2
 12344                           
 12345                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12346  005C62  52E5               	movf	postdec1,f,c
 12347  005C64  52E5               	movf	postdec1,f,c
 12348  005C66  52E5               	movf	postdec1,f,c
 12349  005C68  0012               	return		;funcret
 12350  005C6A                     __end_of_UART2_SetTxInterruptHandler:
 12351                           	opt callstack 0
 12352                           
 12353 ;; *************** function _UART2_SetRxInterruptHandler *****************
 12354 ;; Defined at:
 12355 ;;		line 248 in file "mcc_generated_files/uart2.c"
 12356 ;; Parameters:    Size  Location     Type
 12357 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12358 ;;		 -> UART2_Receive_ISR(1), 
 12359 ;; Auto vars:     Size  Location     Type
 12360 ;;		None
 12361 ;; Return value:  Size  Location     Type
 12362 ;;                  1  [STACK] void 
 12363 ;; Registers used:
 12364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12365 ;; Tracked objects:
 12366 ;;		On entry : 3F/39
 12367 ;;		On exit  : 0/0
 12368 ;;		Unchanged: 0/0
 12369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12374 ;;Total ram usage:        0 bytes
 12375 ;; Hardware stack levels used:    1
 12376 ;; Hardware stack levels required when called:    3
 12377 ;; This function calls:
 12378 ;;		Nothing
 12379 ;; This function is called by:
 12380 ;;		_UART2_Initialize
 12381 ;; This function uses a reentrant model
 12382 ;;
 12383                           
 12384                           	psect	text53
 12385  005C6A                     __ptext53:
 12386                           	opt callstack 0
 12387  005C6A                     _UART2_SetRxInterruptHandler:
 12388                           	opt callstack 25
 12389                           
 12390                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 12391                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12392                           
 12393                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12394                           ;incstack = 0
 12395  005C6A  50E1               	movf	fsr1l,w,c
 12396  005C6C  0FFD               	addlw	-3
 12397  005C6E  6ED9               	movwf	fsr2l,c
 12398  005C70  50E2               	movf	fsr1h,w,c
 12399  005C72  6EDA               	movwf	fsr2h,c
 12400  005C74  0EFF               	movlw	255
 12401  005C76  22DA               	addwfc	fsr2h,f,c
 12402  005C78  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler
 12403  005C7E  006F FF78  F015    	movff	postinc2,_UART2_RxInterruptHandler+1
 12404  005C84  006F FF74  F016    	movff	postdec2,_UART2_RxInterruptHandler+2
 12405                           
 12406                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12407  005C8A  52E5               	movf	postdec1,f,c
 12408  005C8C  52E5               	movf	postdec1,f,c
 12409  005C8E  52E5               	movf	postdec1,f,c
 12410  005C90  0012               	return		;funcret
 12411  005C92                     __end_of_UART2_SetRxInterruptHandler:
 12412                           	opt callstack 0
 12413                           
 12414 ;; *************** function _UART1_Initialize *****************
 12415 ;; Defined at:
 12416 ;;		line 78 in file "mcc_generated_files/uart1.c"
 12417 ;; Parameters:    Size  Location     Type
 12418 ;;		None
 12419 ;; Auto vars:     Size  Location     Type
 12420 ;;		None
 12421 ;; Return value:  Size  Location     Type
 12422 ;;                  1  [STACK] void 
 12423 ;; Registers used:
 12424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12425 ;; Tracked objects:
 12426 ;;		On entry : 3F/3C
 12427 ;;		On exit  : 3F/39
 12428 ;;		Unchanged: 0/0
 12429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12434 ;;Total ram usage:        0 bytes
 12435 ;; Hardware stack levels used:    1
 12436 ;; Hardware stack levels required when called:    4
 12437 ;; This function calls:
 12438 ;;		_UART1_SetRxInterruptHandler
 12439 ;;		_UART1_SetTxInterruptHandler
 12440 ;; This function is called by:
 12441 ;;		_SYSTEM_Initialize
 12442 ;; This function uses a reentrant model
 12443 ;;
 12444                           
 12445                           	psect	text54
 12446  005574                     __ptext54:
 12447                           	opt callstack 0
 12448  005574                     _UART1_Initialize:
 12449                           	opt callstack 25
 12450                           
 12451                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 12452                           
 12453                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12454                           ;incstack = 0
 12455  005574  0139               	movlb	57	; () banked
 12456  005576  9793               	bcf	147,3,b	;volatile
 12457                           
 12458                           ; BSR set to: 57
 12459                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 12460  005578  0E8C               	movlw	low _UART1_Receive_ISR
 12461  00557A  6EE6               	movwf	postinc1,c
 12462  00557C  0E5F               	movlw	high _UART1_Receive_ISR
 12463  00557E  6EE6               	movwf	postinc1,c
 12464  005580  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 12465  005582  6EE6               	movwf	postinc1,c
 12466  005584  EC5D  F02E         	call	_UART1_SetRxInterruptHandler	;wreg free
 12467                           
 12468                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 12469  005588  0139               	movlb	57	; () banked
 12470  00558A  9993               	bcf	147,4,b	;volatile
 12471                           
 12472                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 12473  00558C  0EF2               	movlw	low _UART1_Transmit_ISR
 12474  00558E  6EE6               	movwf	postinc1,c
 12475  005590  0E5A               	movlw	high _UART1_Transmit_ISR
 12476  005592  6EE6               	movwf	postinc1,c
 12477  005594  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 12478  005596  6EE6               	movwf	postinc1,c
 12479  005598  EC49  F02E         	call	_UART1_SetTxInterruptHandler	;wreg free
 12480                           
 12481                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 12482  00559C  013D               	movlb	61	; () banked
 12483  00559E  6BEC               	clrf	236,b	;volatile
 12484                           
 12485                           ; BSR set to: 61
 12486                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 12487  0055A0  6BED               	clrf	237,b	;volatile
 12488                           
 12489                           ; BSR set to: 61
 12490                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 12491  0055A2  6BEE               	clrf	238,b	;volatile
 12492                           
 12493                           ; BSR set to: 61
 12494                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 12495  0055A4  6BEF               	clrf	239,b	;volatile
 12496                           
 12497                           ; BSR set to: 61
 12498                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 12499  0055A6  6BF0               	clrf	240,b	;volatile
 12500                           
 12501                           ; BSR set to: 61
 12502                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 12503  0055A8  6BF1               	clrf	241,b	;volatile
 12504                           
 12505                           ; BSR set to: 61
 12506                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 12507  0055AA  0EB0               	movlw	176
 12508  0055AC  6FF2               	movwf	242,b	;volatile
 12509                           
 12510                           ; BSR set to: 61
 12511                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 12512  0055AE  0E80               	movlw	128
 12513  0055B0  6FF3               	movwf	243,b	;volatile
 12514                           
 12515                           ; BSR set to: 61
 12516                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 12517  0055B2  6BF4               	clrf	244,b	;volatile
 12518                           
 12519                           ; BSR set to: 61
 12520                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 12521  0055B4  0E82               	movlw	130
 12522  0055B6  6FF5               	movwf	245,b	;volatile
 12523                           
 12524                           ; BSR set to: 61
 12525                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 12526  0055B8  0E06               	movlw	6
 12527  0055BA  6FF6               	movwf	246,b	;volatile
 12528                           
 12529                           ; BSR set to: 61
 12530                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 12531  0055BC  6BF7               	clrf	247,b	;volatile
 12532                           
 12533                           ; BSR set to: 61
 12534                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 12535  0055BE  6BF8               	clrf	248,b	;volatile
 12536                           
 12537                           ; BSR set to: 61
 12538                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 12539  0055C0  6BF9               	clrf	249,b	;volatile
 12540                           
 12541                           ; BSR set to: 61
 12542                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 12543  0055C2  6BFA               	clrf	250,b	;volatile
 12544                           
 12545                           ; BSR set to: 61
 12546                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 12547  0055C4  6A3A               	clrf	_uart1TxHead,c	;volatile
 12548                           
 12549                           ; BSR set to: 61
 12550                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 12551  0055C6  6A39               	clrf	_uart1TxTail,c	;volatile
 12552                           
 12553                           ; BSR set to: 61
 12554                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 12555  0055C8  0E40               	movlw	64
 12556  0055CA  6E38               	movwf	_uart1TxBufferRemaining,c	;volatile
 12557                           
 12558                           ; BSR set to: 61
 12559                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 12560  0055CC  6A37               	clrf	_uart1RxHead,c	;volatile
 12561                           
 12562                           ; BSR set to: 61
 12563                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 12564  0055CE  6A36               	clrf	_uart1RxTail,c	;volatile
 12565                           
 12566                           ; BSR set to: 61
 12567                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 12568  0055D0  6A35               	clrf	_uart1RxCount,c	;volatile
 12569                           
 12570                           ; BSR set to: 61
 12571                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 12572  0055D2  0139               	movlb	57	; () banked
 12573  0055D4  8793               	bsf	147,3,b	;volatile
 12574                           
 12575                           ; BSR set to: 57
 12576                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12577  0055D6  0012               	return		;funcret
 12578  0055D8                     __end_of_UART1_Initialize:
 12579                           	opt callstack 0
 12580                           
 12581 ;; *************** function _UART1_SetTxInterruptHandler *****************
 12582 ;; Defined at:
 12583 ;;		line 244 in file "mcc_generated_files/uart1.c"
 12584 ;; Parameters:    Size  Location     Type
 12585 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12586 ;;		 -> UART1_Transmit_ISR(1), 
 12587 ;; Auto vars:     Size  Location     Type
 12588 ;;		None
 12589 ;; Return value:  Size  Location     Type
 12590 ;;                  1  [STACK] void 
 12591 ;; Registers used:
 12592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12593 ;; Tracked objects:
 12594 ;;		On entry : 3F/39
 12595 ;;		On exit  : 0/0
 12596 ;;		Unchanged: 0/0
 12597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12602 ;;Total ram usage:        0 bytes
 12603 ;; Hardware stack levels used:    1
 12604 ;; Hardware stack levels required when called:    3
 12605 ;; This function calls:
 12606 ;;		Nothing
 12607 ;; This function is called by:
 12608 ;;		_UART1_Initialize
 12609 ;; This function uses a reentrant model
 12610 ;;
 12611                           
 12612                           	psect	text55
 12613  005C92                     __ptext55:
 12614                           	opt callstack 0
 12615  005C92                     _UART1_SetTxInterruptHandler:
 12616                           	opt callstack 25
 12617                           
 12618                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 12619                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12620                           
 12621                           ; BSR set to: 57
 12622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12623                           ;incstack = 0
 12624  005C92  50E1               	movf	fsr1l,w,c
 12625  005C94  0FFD               	addlw	-3
 12626  005C96  6ED9               	movwf	fsr2l,c
 12627  005C98  50E2               	movf	fsr1h,w,c
 12628  005C9A  6EDA               	movwf	fsr2h,c
 12629  005C9C  0EFF               	movlw	255
 12630  005C9E  22DA               	addwfc	fsr2h,f,c
 12631  005CA0  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler
 12632  005CA6  006F FF78  F00C    	movff	postinc2,_UART1_TxInterruptHandler+1
 12633  005CAC  006F FF74  F00D    	movff	postdec2,_UART1_TxInterruptHandler+2
 12634                           
 12635                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12636  005CB2  52E5               	movf	postdec1,f,c
 12637  005CB4  52E5               	movf	postdec1,f,c
 12638  005CB6  52E5               	movf	postdec1,f,c
 12639  005CB8  0012               	return		;funcret
 12640  005CBA                     __end_of_UART1_SetTxInterruptHandler:
 12641                           	opt callstack 0
 12642                           
 12643 ;; *************** function _UART1_SetRxInterruptHandler *****************
 12644 ;; Defined at:
 12645 ;;		line 239 in file "mcc_generated_files/uart1.c"
 12646 ;; Parameters:    Size  Location     Type
 12647 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12648 ;;		 -> UART1_Receive_ISR(1), 
 12649 ;; Auto vars:     Size  Location     Type
 12650 ;;		None
 12651 ;; Return value:  Size  Location     Type
 12652 ;;                  1  [STACK] void 
 12653 ;; Registers used:
 12654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12655 ;; Tracked objects:
 12656 ;;		On entry : 3F/39
 12657 ;;		On exit  : 0/0
 12658 ;;		Unchanged: 0/0
 12659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12664 ;;Total ram usage:        0 bytes
 12665 ;; Hardware stack levels used:    1
 12666 ;; Hardware stack levels required when called:    3
 12667 ;; This function calls:
 12668 ;;		Nothing
 12669 ;; This function is called by:
 12670 ;;		_UART1_Initialize
 12671 ;; This function uses a reentrant model
 12672 ;;
 12673                           
 12674                           	psect	text56
 12675  005CBA                     __ptext56:
 12676                           	opt callstack 0
 12677  005CBA                     _UART1_SetRxInterruptHandler:
 12678                           	opt callstack 25
 12679                           
 12680                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 12681                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12682                           
 12683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12684                           ;incstack = 0
 12685  005CBA  50E1               	movf	fsr1l,w,c
 12686  005CBC  0FFD               	addlw	-3
 12687  005CBE  6ED9               	movwf	fsr2l,c
 12688  005CC0  50E2               	movf	fsr1h,w,c
 12689  005CC2  6EDA               	movwf	fsr2h,c
 12690  005CC4  0EFF               	movlw	255
 12691  005CC6  22DA               	addwfc	fsr2h,f,c
 12692  005CC8  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler
 12693  005CCE  006F FF78  F00F    	movff	postinc2,_UART1_RxInterruptHandler+1
 12694  005CD4  006F FF74  F010    	movff	postdec2,_UART1_RxInterruptHandler+2
 12695                           
 12696                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12697  005CDA  52E5               	movf	postdec1,f,c
 12698  005CDC  52E5               	movf	postdec1,f,c
 12699  005CDE  52E5               	movf	postdec1,f,c
 12700  005CE0  0012               	return		;funcret
 12701  005CE2                     __end_of_UART1_SetRxInterruptHandler:
 12702                           	opt callstack 0
 12703                           
 12704 ;; *************** function _TMR6_Initialize *****************
 12705 ;; Defined at:
 12706 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 12707 ;; Parameters:    Size  Location     Type
 12708 ;;		None
 12709 ;; Auto vars:     Size  Location     Type
 12710 ;;		None
 12711 ;; Return value:  Size  Location     Type
 12712 ;;                  1  [STACK] void 
 12713 ;; Registers used:
 12714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12715 ;; Tracked objects:
 12716 ;;		On entry : 3F/39
 12717 ;;		On exit  : 0/0
 12718 ;;		Unchanged: 0/0
 12719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12724 ;;Total ram usage:        0 bytes
 12725 ;; Hardware stack levels used:    1
 12726 ;; Hardware stack levels required when called:    4
 12727 ;; This function calls:
 12728 ;;		_TMR6_SetInterruptHandler
 12729 ;; This function is called by:
 12730 ;;		_SYSTEM_Initialize
 12731 ;; This function uses a reentrant model
 12732 ;;
 12733                           
 12734                           	psect	text57
 12735  005CE2                     __ptext57:
 12736                           	opt callstack 0
 12737  005CE2                     _TMR6_Initialize:
 12738                           	opt callstack 25
 12739                           
 12740                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 12741                           
 12742                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12743                           ;incstack = 0
 12744  005CE2  0E01               	movlw	1
 12745  005CE4  6E96               	movwf	16278,c	;volatile
 12746                           
 12747                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 12748  005CE6  6A95               	clrf	16277,c	;volatile
 12749                           
 12750                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 12751  005CE8  6A97               	clrf	16279,c	;volatile
 12752                           
 12753                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 12754  005CEA  0E03               	movlw	3
 12755  005CEC  6E93               	movwf	16275,c	;volatile
 12756                           
 12757                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 12758  005CEE  6A92               	clrf	16274,c	;volatile
 12759                           
 12760                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 12761  005CF0  0139               	movlb	57	; () banked
 12762  005CF2  91A9               	bcf	169,0,b	;volatile
 12763                           
 12764                           ; BSR set to: 57
 12765                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 12766  005CF4  8199               	bsf	153,0,b	;volatile
 12767                           
 12768                           ; BSR set to: 57
 12769                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 12770  005CF6  0E64               	movlw	low _TMR6_DefaultInterruptHandler
 12771  005CF8  6EE6               	movwf	postinc1,c
 12772  005CFA  0E58               	movlw	high _TMR6_DefaultInterruptHandler
 12773  005CFC  6EE6               	movwf	postinc1,c
 12774  005CFE  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 12775  005D00  6EE6               	movwf	postinc1,c
 12776  005D02  EC85  F02E         	call	_TMR6_SetInterruptHandler	;wreg free
 12777                           
 12778                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 12779  005D06  6894               	setf	16276,c	;volatile
 12780                           
 12781                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12782  005D08  0012               	return		;funcret
 12783  005D0A                     __end_of_TMR6_Initialize:
 12784                           	opt callstack 0
 12785                           
 12786 ;; *************** function _TMR6_SetInterruptHandler *****************
 12787 ;; Defined at:
 12788 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 12789 ;; Parameters:    Size  Location     Type
 12790 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12791 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 12792 ;; Auto vars:     Size  Location     Type
 12793 ;;		None
 12794 ;; Return value:  Size  Location     Type
 12795 ;;                  1  [STACK] void 
 12796 ;; Registers used:
 12797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12798 ;; Tracked objects:
 12799 ;;		On entry : 3F/39
 12800 ;;		On exit  : 0/0
 12801 ;;		Unchanged: 0/0
 12802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12807 ;;Total ram usage:        0 bytes
 12808 ;; Hardware stack levels used:    1
 12809 ;; Hardware stack levels required when called:    3
 12810 ;; This function calls:
 12811 ;;		Nothing
 12812 ;; This function is called by:
 12813 ;;		_TMR6_Initialize
 12814 ;; This function uses a reentrant model
 12815 ;;
 12816                           
 12817                           	psect	text58
 12818  005D0A                     __ptext58:
 12819                           	opt callstack 0
 12820  005D0A                     _TMR6_SetInterruptHandler:
 12821                           	opt callstack 25
 12822                           
 12823                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 12824                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12825                           
 12826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12827                           ;incstack = 0
 12828  005D0A  50E1               	movf	fsr1l,w,c
 12829  005D0C  0FFD               	addlw	-3
 12830  005D0E  6ED9               	movwf	fsr2l,c
 12831  005D10  50E2               	movf	fsr1h,w,c
 12832  005D12  6EDA               	movwf	fsr2h,c
 12833  005D14  0EFF               	movlw	255
 12834  005D16  22DA               	addwfc	fsr2h,f,c
 12835  005D18  006F FF78  F093    	movff	postinc2,_TMR6_InterruptHandler
 12836  005D1E  006F FF78  F094    	movff	postinc2,_TMR6_InterruptHandler+1
 12837  005D24  006F FF74  F095    	movff	postdec2,_TMR6_InterruptHandler+2
 12838                           
 12839                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12840  005D2A  52E5               	movf	postdec1,f,c
 12841  005D2C  52E5               	movf	postdec1,f,c
 12842  005D2E  52E5               	movf	postdec1,f,c
 12843  005D30  0012               	return		;funcret
 12844  005D32                     __end_of_TMR6_SetInterruptHandler:
 12845                           	opt callstack 0
 12846                           
 12847 ;; *************** function _TMR5_Initialize *****************
 12848 ;; Defined at:
 12849 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 12850 ;; Parameters:    Size  Location     Type
 12851 ;;		None
 12852 ;; Auto vars:     Size  Location     Type
 12853 ;;		None
 12854 ;; Return value:  Size  Location     Type
 12855 ;;                  1  [STACK] void 
 12856 ;; Registers used:
 12857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 12858 ;; Tracked objects:
 12859 ;;		On entry : 3F/3C
 12860 ;;		On exit  : 0/0
 12861 ;;		Unchanged: 0/0
 12862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12867 ;;Total ram usage:        0 bytes
 12868 ;; Hardware stack levels used:    1
 12869 ;; Hardware stack levels required when called:    4
 12870 ;; This function calls:
 12871 ;;		_TMR5_SetInterruptHandler
 12872 ;; This function is called by:
 12873 ;;		_SYSTEM_Initialize
 12874 ;; This function uses a reentrant model
 12875 ;;
 12876                           
 12877                           	psect	text59
 12878  00581E                     __ptext59:
 12879                           	opt callstack 0
 12880  00581E                     _TMR5_Initialize:
 12881                           	opt callstack 25
 12882                           
 12883                           ;mcc_generated_files/tmr5.c: 71:  T5GCON = 0x00;
 12884                           
 12885                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12886                           ;incstack = 0
 12887  00581E  6A9B               	clrf	16283,c	;volatile
 12888                           
 12889                           ;mcc_generated_files/tmr5.c: 74:  T5GATE = 0x00;
 12890  005820  6A9C               	clrf	16284,c	;volatile
 12891                           
 12892                           ;mcc_generated_files/tmr5.c: 77:  T5CLK = 0x01;
 12893  005822  0E01               	movlw	1
 12894  005824  6E9D               	movwf	16285,c	;volatile
 12895                           
 12896                           ;mcc_generated_files/tmr5.c: 80:  TMR5H = 0x63;
 12897  005826  0E63               	movlw	99
 12898  005828  6E99               	movwf	16281,c	;volatile
 12899                           
 12900                           ;mcc_generated_files/tmr5.c: 83:  TMR5L = 0xC0;
 12901  00582A  0EC0               	movlw	192
 12902  00582C  6E98               	movwf	16280,c	;volatile
 12903                           
 12904                           ;mcc_generated_files/tmr5.c: 86:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 12905  00582E  5098               	movf	16280,w,c	;volatile
 12906  005830  006F FE64  F03B    	movff	16281,btemp	;volatile
 12907  005836  6A3C               	clrf	btemp+1,c
 12908  005838  0060  F0EC  F03C   	movff	btemp,btemp+1
 12909  00583E  6A3B               	clrf	btemp,c
 12910  005840  103B               	iorwf	btemp,w,c
 12911  005842  6E28               	movwf	_timer5ReloadVal,c	;volatile
 12912  005844  503C               	movf	btemp+1,w,c
 12913  005846  6E29               	movwf	_timer5ReloadVal+1,c	;volatile
 12914                           
 12915                           ;mcc_generated_files/tmr5.c: 89:  PIR8bits.TMR5IF = 0;
 12916  005848  0139               	movlb	57	; () banked
 12917  00584A  9DA8               	bcf	168,6,b	;volatile
 12918                           
 12919                           ; BSR set to: 57
 12920                           ;mcc_generated_files/tmr5.c: 92:  PIE8bits.TMR5IE = 1;
 12921  00584C  8D98               	bsf	152,6,b	;volatile
 12922                           
 12923                           ; BSR set to: 57
 12924                           ;mcc_generated_files/tmr5.c: 95:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 12925  00584E  0E72               	movlw	low _TMR5_DefaultInterruptHandler
 12926  005850  6EE6               	movwf	postinc1,c
 12927  005852  0E60               	movlw	high _TMR5_DefaultInterruptHandler
 12928  005854  6EE6               	movwf	postinc1,c
 12929  005856  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 12930  005858  6EE6               	movwf	postinc1,c
 12931  00585A  EC99  F02E         	call	_TMR5_SetInterruptHandler	;wreg free
 12932                           
 12933                           ;mcc_generated_files/tmr5.c: 98:  T5CON = 0x31;
 12934  00585E  0E31               	movlw	49
 12935  005860  6E9A               	movwf	16282,c	;volatile
 12936                           
 12937                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12938  005862  0012               	return		;funcret
 12939  005864                     __end_of_TMR5_Initialize:
 12940                           	opt callstack 0
 12941                           
 12942 ;; *************** function _TMR5_SetInterruptHandler *****************
 12943 ;; Defined at:
 12944 ;;		line 189 in file "mcc_generated_files/tmr5.c"
 12945 ;; Parameters:    Size  Location     Type
 12946 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12947 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 12948 ;; Auto vars:     Size  Location     Type
 12949 ;;		None
 12950 ;; Return value:  Size  Location     Type
 12951 ;;                  1  [STACK] void 
 12952 ;; Registers used:
 12953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12954 ;; Tracked objects:
 12955 ;;		On entry : 3F/39
 12956 ;;		On exit  : 0/0
 12957 ;;		Unchanged: 0/0
 12958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12963 ;;Total ram usage:        0 bytes
 12964 ;; Hardware stack levels used:    1
 12965 ;; Hardware stack levels required when called:    3
 12966 ;; This function calls:
 12967 ;;		Nothing
 12968 ;; This function is called by:
 12969 ;;		_TMR5_Initialize
 12970 ;; This function uses a reentrant model
 12971 ;;
 12972                           
 12973                           	psect	text60
 12974  005D32                     __ptext60:
 12975                           	opt callstack 0
 12976  005D32                     _TMR5_SetInterruptHandler:
 12977                           	opt callstack 25
 12978                           
 12979                           ;mcc_generated_files/tmr5.c: 189: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 190: {;mcc_generated_files/tmr5.c: 191:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 12980                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12981                           
 12982                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12983                           ;incstack = 0
 12984  005D32  50E1               	movf	fsr1l,w,c
 12985  005D34  0FFD               	addlw	-3
 12986  005D36  6ED9               	movwf	fsr2l,c
 12987  005D38  50E2               	movf	fsr1h,w,c
 12988  005D3A  6EDA               	movwf	fsr2h,c
 12989  005D3C  0EFF               	movlw	255
 12990  005D3E  22DA               	addwfc	fsr2h,f,c
 12991  005D40  006F FF78  F090    	movff	postinc2,_TMR5_InterruptHandler
 12992  005D46  006F FF78  F091    	movff	postinc2,_TMR5_InterruptHandler+1
 12993  005D4C  006F FF74  F092    	movff	postdec2,_TMR5_InterruptHandler+2
 12994                           
 12995                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12996  005D52  52E5               	movf	postdec1,f,c
 12997  005D54  52E5               	movf	postdec1,f,c
 12998  005D56  52E5               	movf	postdec1,f,c
 12999  005D58  0012               	return		;funcret
 13000  005D5A                     __end_of_TMR5_SetInterruptHandler:
 13001                           	opt callstack 0
 13002                           
 13003 ;; *************** function _SPI1_Initialize *****************
 13004 ;; Defined at:
 13005 ;;		line 64 in file "mcc_generated_files/spi1.c"
 13006 ;; Parameters:    Size  Location     Type
 13007 ;;		None
 13008 ;; Auto vars:     Size  Location     Type
 13009 ;;		None
 13010 ;; Return value:  Size  Location     Type
 13011 ;;                  1  [STACK] void 
 13012 ;; Registers used:
 13013 ;;		wreg, status,2
 13014 ;; Tracked objects:
 13015 ;;		On entry : 3F/39
 13016 ;;		On exit  : 3F/3D
 13017 ;;		Unchanged: 0/0
 13018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13023 ;;Total ram usage:        0 bytes
 13024 ;; Hardware stack levels used:    1
 13025 ;; Hardware stack levels required when called:    3
 13026 ;; This function calls:
 13027 ;;		Nothing
 13028 ;; This function is called by:
 13029 ;;		_SYSTEM_Initialize
 13030 ;; This function uses a reentrant model
 13031 ;;
 13032                           
 13033                           	psect	text61
 13034  00608C                     __ptext61:
 13035                           	opt callstack 0
 13036  00608C                     _SPI1_Initialize:
 13037                           	opt callstack 26
 13038                           
 13039                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 13040                           
 13041                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13042                           ;incstack = 0
 13043  00608C  0E40               	movlw	64
 13044  00608E  013D               	movlb	61	; () banked
 13045  006090  6F15               	movwf	21,b	;volatile
 13046                           
 13047                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 13048  006092  0E03               	movlw	3
 13049  006094  6F16               	movwf	22,b	;volatile
 13050                           
 13051                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 13052  006096  0E4F               	movlw	79
 13053  006098  6F19               	movwf	25,b	;volatile
 13054                           
 13055                           ; BSR set to: 61
 13056                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 13057  00609A  6B1C               	clrf	28,b	;volatile
 13058                           
 13059                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 13060  00609C  0E83               	movlw	131
 13061  00609E  6F14               	movwf	20,b	;volatile
 13062                           
 13063                           ; BSR set to: 61
 13064                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13065  0060A0  0012               	return		;funcret
 13066  0060A2                     __end_of_SPI1_Initialize:
 13067                           	opt callstack 0
 13068                           
 13069 ;; *************** function _PMD_Initialize *****************
 13070 ;; Defined at:
 13071 ;;		line 88 in file "mcc_generated_files/mcc.c"
 13072 ;; Parameters:    Size  Location     Type
 13073 ;;		None
 13074 ;; Auto vars:     Size  Location     Type
 13075 ;;		None
 13076 ;; Return value:  Size  Location     Type
 13077 ;;                  1  [STACK] void 
 13078 ;; Registers used:
 13079 ;;		None
 13080 ;; Tracked objects:
 13081 ;;		On entry : 3F/39
 13082 ;;		On exit  : 3F/39
 13083 ;;		Unchanged: 0/0
 13084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13089 ;;Total ram usage:        0 bytes
 13090 ;; Hardware stack levels used:    1
 13091 ;; Hardware stack levels required when called:    3
 13092 ;; This function calls:
 13093 ;;		Nothing
 13094 ;; This function is called by:
 13095 ;;		_SYSTEM_Initialize
 13096 ;; This function uses a reentrant model
 13097 ;;
 13098                           
 13099                           	psect	text62
 13100  0060B8                     __ptext62:
 13101                           	opt callstack 0
 13102  0060B8                     _PMD_Initialize:
 13103                           	opt callstack 26
 13104                           
 13105                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 13106                           
 13107                           ; BSR set to: 61
 13108                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13109                           ;incstack = 0
 13110  0060B8  0139               	movlb	57	; () banked
 13111  0060BA  6BC0               	clrf	192,b	;volatile
 13112                           
 13113                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 13114  0060BC  6BC1               	clrf	193,b	;volatile
 13115                           
 13116                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 13117  0060BE  6BC2               	clrf	194,b	;volatile
 13118                           
 13119                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 13120  0060C0  6BC3               	clrf	195,b	;volatile
 13121                           
 13122                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 13123  0060C2  6BC4               	clrf	196,b	;volatile
 13124                           
 13125                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 13126  0060C4  6BC5               	clrf	197,b	;volatile
 13127                           
 13128                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 13129  0060C6  6BC6               	clrf	198,b	;volatile
 13130                           
 13131                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 13132  0060C8  6BC7               	clrf	199,b	;volatile
 13133                           
 13134                           ; BSR set to: 57
 13135                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 13136  0060CA  0012               	return		;funcret
 13137  0060CC                     __end_of_PMD_Initialize:
 13138                           	opt callstack 0
 13139                           
 13140 ;; *************** function _PIN_MANAGER_Initialize *****************
 13141 ;; Defined at:
 13142 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 13143 ;; Parameters:    Size  Location     Type
 13144 ;;		None
 13145 ;; Auto vars:     Size  Location     Type
 13146 ;;		None
 13147 ;; Return value:  Size  Location     Type
 13148 ;;                  1  [STACK] void 
 13149 ;; Registers used:
 13150 ;;		wreg, status,2
 13151 ;; Tracked objects:
 13152 ;;		On entry : 3F/39
 13153 ;;		On exit  : 3F/3A
 13154 ;;		Unchanged: 0/0
 13155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13160 ;;Total ram usage:        0 bytes
 13161 ;; Hardware stack levels used:    1
 13162 ;; Hardware stack levels required when called:    3
 13163 ;; This function calls:
 13164 ;;		Nothing
 13165 ;; This function is called by:
 13166 ;;		_SYSTEM_Initialize
 13167 ;; This function uses a reentrant model
 13168 ;;
 13169                           
 13170                           	psect	text63
 13171  00511E                     __ptext63:
 13172                           	opt callstack 0
 13173  00511E                     _PIN_MANAGER_Initialize:
 13174                           	opt callstack 26
 13175                           
 13176                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 13177                           
 13178                           ; BSR set to: 57
 13179                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13180                           ;incstack = 0
 13181  00511E  0E07               	movlw	7
 13182  005120  6EBE               	movwf	16318,c	;volatile
 13183                           
 13184                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 13185  005122  6ABD               	clrf	16317,c	;volatile
 13186                           
 13187                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 13188  005124  6ABA               	clrf	16314,c	;volatile
 13189                           
 13190                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 13191  005126  6ABF               	clrf	16319,c	;volatile
 13192                           
 13193                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 13194  005128  6ABB               	clrf	16315,c	;volatile
 13195                           
 13196                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 13197  00512A  0E06               	movlw	6
 13198  00512C  6EBC               	movwf	16316,c	;volatile
 13199                           
 13200                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 13201  00512E  6AC6               	clrf	16326,c	;volatile
 13202                           
 13203                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 13204  005130  68C7               	setf	16327,c	;volatile
 13205                           
 13206                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 13207  005132  0E8F               	movlw	143
 13208  005134  6EC2               	movwf	16322,c	;volatile
 13209                           
 13210                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 13211  005136  0EBF               	movlw	191
 13212  005138  6EC3               	movwf	16323,c	;volatile
 13213                           
 13214                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 13215  00513A  0E91               	movlw	145
 13216  00513C  6EC4               	movwf	16324,c	;volatile
 13217                           
 13218                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFC;
 13219  00513E  0EFC               	movlw	252
 13220  005140  6EC5               	movwf	16325,c	;volatile
 13221                           
 13222                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0xF0;
 13223  005142  0EF0               	movlw	240
 13224  005144  013A               	movlb	58	; () banked
 13225  005146  6F70               	movwf	112,b	;volatile
 13226                           
 13227                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 13228  005148  0E01               	movlw	1
 13229  00514A  6F60               	movwf	96,b	;volatile
 13230                           
 13231                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 13232  00514C  0E38               	movlw	56
 13233  00514E  6F50               	movwf	80,b	;volatile
 13234                           
 13235                           ; BSR set to: 58
 13236                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 13237  005150  6B80               	clrf	128,b	;volatile
 13238                           
 13239                           ; BSR set to: 58
 13240                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 13241  005152  6990               	setf	144,b	;volatile
 13242                           
 13243                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 13244  005154  0E8F               	movlw	143
 13245  005156  6F40               	movwf	64,b	;volatile
 13246                           
 13247                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 13248  005158  0E0C               	movlw	12
 13249  00515A  6F71               	movwf	113,b	;volatile
 13250                           
 13251                           ; BSR set to: 58
 13252                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 13253  00515C  6B91               	clrf	145,b	;volatile
 13254                           
 13255                           ; BSR set to: 58
 13256                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 13257  00515E  6B81               	clrf	129,b	;volatile
 13258                           
 13259                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 13260  005160  0E87               	movlw	135
 13261  005162  6F51               	movwf	81,b	;volatile
 13262                           
 13263                           ; BSR set to: 58
 13264                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 13265  005164  6B41               	clrf	65,b	;volatile
 13266                           
 13267                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 13268  005166  0E90               	movlw	144
 13269  005168  6F61               	movwf	97,b	;volatile
 13270                           
 13271                           ; BSR set to: 58
 13272                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 13273  00516A  6B82               	clrf	130,b	;volatile
 13274                           
 13275                           ; BSR set to: 58
 13276                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 13277  00516C  6B92               	clrf	146,b	;volatile
 13278                           
 13279                           ; BSR set to: 58
 13280                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 13281  00516E  6B42               	clrf	66,b	;volatile
 13282                           
 13283                           ; BSR set to: 58
 13284                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 13285  005170  6B52               	clrf	82,b	;volatile
 13286                           
 13287                           ; BSR set to: 58
 13288                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 13289  005172  6B62               	clrf	98,b	;volatile
 13290                           
 13291                           ; BSR set to: 58
 13292                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 13293  005174  6B72               	clrf	114,b	;volatile
 13294                           
 13295                           ; BSR set to: 58
 13296                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 13297  005176  6943               	setf	67,b	;volatile
 13298                           
 13299                           ; BSR set to: 58
 13300                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 13301  005178  6953               	setf	83,b	;volatile
 13302                           
 13303                           ; BSR set to: 58
 13304                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 13305  00517A  6963               	setf	99,b	;volatile
 13306                           
 13307                           ; BSR set to: 58
 13308                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 13309  00517C  6973               	setf	115,b	;volatile
 13310                           
 13311                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 13312  00517E  0E07               	movlw	7
 13313  005180  6F83               	movwf	131,b	;volatile
 13314                           
 13315                           ; BSR set to: 58
 13316                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 13317  005182  6993               	setf	147,b	;volatile
 13318                           
 13319                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 13320  005184  0E0F               	movlw	15
 13321  005186  6FE8               	movwf	232,b	;volatile
 13322                           
 13323                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 13324  005188  0E16               	movlw	22
 13325  00518A  6F0E               	movwf	14,b	;volatile
 13326                           
 13327                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 13328  00518C  0E1E               	movlw	30
 13329  00518E  6F13               	movwf	19,b	;volatile
 13330                           
 13331                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 13332  005190  0E08               	movlw	8
 13333  005192  6FC0               	movwf	192,b	;volatile
 13334                           
 13335                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 13336  005194  0E0A               	movlw	10
 13337  005196  6FC2               	movwf	194,b	;volatile
 13338                           
 13339                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 13340  005198  0E09               	movlw	9
 13341  00519A  6FC1               	movwf	193,b	;volatile
 13342                           
 13343                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 13344  00519C  0E17               	movlw	23
 13345  00519E  6FE5               	movwf	229,b	;volatile
 13346                           
 13347                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 13348  0051A0  0E13               	movlw	19
 13349  0051A2  6FDE               	movwf	222,b	;volatile
 13350                           
 13351                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 13352  0051A4  0E01               	movlw	1
 13353  0051A6  6F04               	movwf	4,b	;volatile
 13354                           
 13355                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 13356  0051A8  0E26               	movlw	38
 13357  0051AA  6F05               	movwf	5,b	;volatile
 13358                           
 13359                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 13360  0051AC  0E28               	movlw	40
 13361  0051AE  6F06               	movwf	6,b	;volatile
 13362                           
 13363                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 13364  0051B0  0E1F               	movlw	31
 13365  0051B2  6F15               	movwf	21,b	;volatile
 13366                           
 13367                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 13368  0051B4  0E13               	movlw	19
 13369  0051B6  6F16               	movwf	22,b	;volatile
 13370                           
 13371                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 13372  0051B8  0E14               	movlw	20
 13373  0051BA  6FDF               	movwf	223,b	;volatile
 13374                           
 13375                           ; BSR set to: 58
 13376                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 13377  0051BC  0012               	return		;funcret
 13378  0051BE                     __end_of_PIN_MANAGER_Initialize:
 13379                           	opt callstack 0
 13380                           
 13381 ;; *************** function _OSCILLATOR_Initialize *****************
 13382 ;; Defined at:
 13383 ;;		line 70 in file "mcc_generated_files/mcc.c"
 13384 ;; Parameters:    Size  Location     Type
 13385 ;;		None
 13386 ;; Auto vars:     Size  Location     Type
 13387 ;;		None
 13388 ;; Return value:  Size  Location     Type
 13389 ;;                  1  [STACK] void 
 13390 ;; Registers used:
 13391 ;;		wreg, status,2
 13392 ;; Tracked objects:
 13393 ;;		On entry : 3F/3A
 13394 ;;		On exit  : 3F/39
 13395 ;;		Unchanged: 0/0
 13396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13401 ;;Total ram usage:        0 bytes
 13402 ;; Hardware stack levels used:    1
 13403 ;; Hardware stack levels required when called:    3
 13404 ;; This function calls:
 13405 ;;		Nothing
 13406 ;; This function is called by:
 13407 ;;		_SYSTEM_Initialize
 13408 ;; This function uses a reentrant model
 13409 ;;
 13410                           
 13411                           	psect	text64
 13412  0060A2                     __ptext64:
 13413                           	opt callstack 0
 13414  0060A2                     _OSCILLATOR_Initialize:
 13415                           	opt callstack 26
 13416                           
 13417                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 13418                           
 13419                           ; BSR set to: 58
 13420                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13421                           ;incstack = 0
 13422  0060A2  0E20               	movlw	32
 13423  0060A4  0139               	movlb	57	; () banked
 13424  0060A6  6FD9               	movwf	217,b	;volatile
 13425                           
 13426                           ; BSR set to: 57
 13427                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 13428  0060A8  6BDB               	clrf	219,b	;volatile
 13429                           
 13430                           ; BSR set to: 57
 13431                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 13432  0060AA  6BDD               	clrf	221,b	;volatile
 13433                           
 13434                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 13435  0060AC  0E02               	movlw	2
 13436  0060AE  6FDF               	movwf	223,b	;volatile
 13437                           
 13438                           ; BSR set to: 57
 13439                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 13440  0060B0  6BDE               	clrf	222,b	;volatile
 13441  0060B2                     l194:
 13442                           
 13443                           ; BSR set to: 57
 13444                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 13445  0060B2  B1DC               	btfsc	220,0,b	;volatile
 13446  0060B4  0012               	return	
 13447  0060B6  D7FD               	goto	l194
 13448  0060B8                     __end_of_OSCILLATOR_Initialize:
 13449                           	opt callstack 0
 13450                           
 13451 ;; *************** function _NCO1_Initialize *****************
 13452 ;; Defined at:
 13453 ;;		line 58 in file "mcc_generated_files/nco1.c"
 13454 ;; Parameters:    Size  Location     Type
 13455 ;;		None
 13456 ;; Auto vars:     Size  Location     Type
 13457 ;;		None
 13458 ;; Return value:  Size  Location     Type
 13459 ;;                  1  [STACK] void 
 13460 ;; Registers used:
 13461 ;;		wreg, status,2
 13462 ;; Tracked objects:
 13463 ;;		On entry : 0/39
 13464 ;;		On exit  : 3F/3F
 13465 ;;		Unchanged: 0/0
 13466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13471 ;;Total ram usage:        0 bytes
 13472 ;; Hardware stack levels used:    1
 13473 ;; Hardware stack levels required when called:    3
 13474 ;; This function calls:
 13475 ;;		Nothing
 13476 ;; This function is called by:
 13477 ;;		_SYSTEM_Initialize
 13478 ;; This function uses a reentrant model
 13479 ;;
 13480                           
 13481                           	psect	text65
 13482  006006                     __ptext65:
 13483                           	opt callstack 0
 13484  006006                     _NCO1_Initialize:
 13485                           	opt callstack 26
 13486                           
 13487                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 13488                           
 13489                           ; BSR set to: 57
 13490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13491                           ;incstack = 0
 13492  006006  013F               	movlb	63	; () banked
 13493  006008  6B3E               	clrf	62,b	;volatile
 13494                           
 13495                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 13496  00600A  6B3F               	clrf	63,b	;volatile
 13497                           
 13498                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 13499  00600C  6B3A               	clrf	58,b	;volatile
 13500                           
 13501                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 13502  00600E  6B39               	clrf	57,b	;volatile
 13503                           
 13504                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 13505  006010  6B38               	clrf	56,b	;volatile
 13506                           
 13507                           ; BSR set to: 63
 13508                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 13509  006012  0E06               	movlw	6
 13510  006014  6F3D               	movwf	61,b	;volatile
 13511                           
 13512                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 13513  006016  0EC7               	movlw	199
 13514  006018  6F3C               	movwf	60,b	;volatile
 13515                           
 13516                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 13517  00601A  0EAE               	movlw	174
 13518  00601C  6F3B               	movwf	59,b	;volatile
 13519                           
 13520                           ; BSR set to: 63
 13521                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 13522  00601E  8F3E               	bsf	62,7,b	;volatile
 13523                           
 13524                           ; BSR set to: 63
 13525                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13526  006020  0012               	return		;funcret
 13527  006022                     __end_of_NCO1_Initialize:
 13528                           	opt callstack 0
 13529                           
 13530 ;; *************** function _INTERRUPT_Initialize *****************
 13531 ;; Defined at:
 13532 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13533 ;; Parameters:    Size  Location     Type
 13534 ;;		None
 13535 ;; Auto vars:     Size  Location     Type
 13536 ;;  state           1  [STACK] _Bool 
 13537 ;; Return value:  Size  Location     Type
 13538 ;;                  1  [STACK] void 
 13539 ;; Registers used:
 13540 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 13541 ;; Tracked objects:
 13542 ;;		On entry : 0/0
 13543 ;;		On exit  : 3F/39
 13544 ;;		Unchanged: 0/0
 13545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13550 ;;Total ram usage:        0 bytes
 13551 ;; Hardware stack levels used:    1
 13552 ;; Hardware stack levels required when called:    3
 13553 ;; This function calls:
 13554 ;;		Nothing
 13555 ;; This function is called by:
 13556 ;;		_SYSTEM_Initialize
 13557 ;; This function uses a reentrant model
 13558 ;;
 13559                           
 13560                           	psect	text66
 13561  00550E                     __ptext66:
 13562                           	opt callstack 0
 13563  00550E                     _INTERRUPT_Initialize:
 13564                           	opt callstack 0
 13565                           
 13566                           ; BSR set to: 63
 13567                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13568  00550E  52E6               	movf	postinc1,f,c
 13569                           
 13570                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 13571                           
 13572                           ;incstack = 0
 13573  005510  8AD2               	bsf	16338,5,c	;volatile
 13574                           
 13575                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 13576  005512  AED2               	btfss	16338,7,c	;volatile
 13577  005514  D003               	goto	u940
 13578  005516  6A46               	clrf	btemp+11,c
 13579  005518  2A46               	incf	btemp+11,f,c
 13580  00551A  D001               	goto	u958
 13581  00551C                     u940:
 13582  00551C  6A46               	clrf	btemp+11,c
 13583  00551E                     u958:
 13584                           
 13585                           ;stkvar	_state @ sp[(-1)+0]
 13586  00551E  0EFF               	movlw	-1
 13587  005520  0060  F11B  FFE3   	movff	btemp+11,plusw1
 13588                           
 13589                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 13590  005526  9ED2               	bcf	16338,7,c	;volatile
 13591                           
 13592                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 13593  005528  0E55               	movlw	85
 13594  00552A  6ED4               	movwf	16340,c	;volatile
 13595                           
 13596                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 13597  00552C  0EAA               	movlw	170
 13598  00552E  6ED4               	movwf	16340,c	;volatile
 13599                           
 13600                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 13601  005530  90D4               	bcf	16340,0,c	;volatile
 13602                           
 13603                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 13604  005532  0138               	movlb	56	; () banked
 13605  005534  6B9F               	clrf	159,b	;volatile
 13606                           
 13607                           ; BSR set to: 56
 13608                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 13609  005536  6B9E               	clrf	158,b	;volatile
 13610                           
 13611                           ; BSR set to: 56
 13612                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 13613  005538  0E08               	movlw	8
 13614  00553A  6F9D               	movwf	157,b	;volatile
 13615                           
 13616                           ; BSR set to: 56
 13617                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 13618  00553C  0E55               	movlw	85
 13619  00553E  6ED4               	movwf	16340,c	;volatile
 13620                           
 13621                           ; BSR set to: 56
 13622                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 13623  005540  0EAA               	movlw	170
 13624  005542  6ED4               	movwf	16340,c	;volatile
 13625                           
 13626                           ; BSR set to: 56
 13627                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 13628  005544  80D4               	bsf	16340,0,c	;volatile
 13629                           
 13630                           ; BSR set to: 56
 13631                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 13632                           ;stkvar	_state @ sp[(-1)+0]
 13633  005546  0EFF               	movlw	-1
 13634  005548  B0E3               	btfsc	plusw1,0,c
 13635  00554A  D002               	bra	u965
 13636  00554C  9ED2               	bcf	16338,7,c	;volatile
 13637  00554E  D001               	bra	u966
 13638  005550                     u965:
 13639  005550  8ED2               	bsf	16338,7,c	;volatile
 13640  005552                     u966:
 13641                           
 13642                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 13643  005552  0139               	movlb	57	; () banked
 13644  005554  8782               	bsf	130,3,b	;volatile
 13645                           
 13646                           ; BSR set to: 57
 13647                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 13648  005556  8382               	bsf	130,1,b	;volatile
 13649                           
 13650                           ; BSR set to: 57
 13651                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 13652  005558  8182               	bsf	130,0,b	;volatile
 13653                           
 13654                           ; BSR set to: 57
 13655                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 13656  00555A  8582               	bsf	130,2,b	;volatile
 13657                           
 13658                           ; BSR set to: 57
 13659                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 13660  00555C  8786               	bsf	134,3,b	;volatile
 13661                           
 13662                           ; BSR set to: 57
 13663                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 13664  00555E  8586               	bsf	134,2,b	;volatile
 13665                           
 13666                           ; BSR set to: 57
 13667                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 13668  005560  8983               	bsf	131,4,b	;volatile
 13669                           
 13670                           ; BSR set to: 57
 13671                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 13672  005562  8783               	bsf	131,3,b	;volatile
 13673                           
 13674                           ; BSR set to: 57
 13675                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 13676  005564  8181               	bsf	129,0,b	;volatile
 13677                           
 13678                           ; BSR set to: 57
 13679                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 13680  005566  8185               	bsf	133,0,b	;volatile
 13681                           
 13682                           ; BSR set to: 57
 13683                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 13684  005568  8B87               	bsf	135,5,b	;volatile
 13685                           
 13686                           ; BSR set to: 57
 13687                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 13688  00556A  8189               	bsf	137,0,b	;volatile
 13689                           
 13690                           ; BSR set to: 57
 13691                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 13692  00556C  8D88               	bsf	136,6,b	;volatile
 13693                           
 13694                           ; BSR set to: 57
 13695                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 13696  00556E  8581               	bsf	129,2,b	;volatile
 13697                           
 13698                           ; BSR set to: 57
 13699                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 13700  005570  52E5               	movf	postdec1,f,c
 13701  005572  0012               	return		;funcret
 13702  005574                     __end_of_INTERRUPT_Initialize:
 13703                           	opt callstack 0
 13704                           
 13705 ;; *************** function _EXT_INT_Initialize *****************
 13706 ;; Defined at:
 13707 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 13708 ;; Parameters:    Size  Location     Type
 13709 ;;		None
 13710 ;; Auto vars:     Size  Location     Type
 13711 ;;		None
 13712 ;; Return value:  Size  Location     Type
 13713 ;;                  1  [STACK] void 
 13714 ;; Registers used:
 13715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13716 ;; Tracked objects:
 13717 ;;		On entry : 3F/3F
 13718 ;;		On exit  : 3F/39
 13719 ;;		Unchanged: 0/0
 13720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13725 ;;Total ram usage:        0 bytes
 13726 ;; Hardware stack levels used:    1
 13727 ;; Hardware stack levels required when called:    4
 13728 ;; This function calls:
 13729 ;;		_INT0_SetInterruptHandler
 13730 ;;		_INT1_SetInterruptHandler
 13731 ;;		_INT2_SetInterruptHandler
 13732 ;; This function is called by:
 13733 ;;		_SYSTEM_Initialize
 13734 ;; This function uses a reentrant model
 13735 ;;
 13736                           
 13737                           	psect	text67
 13738  005742                     __ptext67:
 13739                           	opt callstack 0
 13740  005742                     _EXT_INT_Initialize:
 13741                           	opt callstack 25
 13742                           
 13743                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 13744                           
 13745                           ; BSR set to: 57
 13746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13747                           ;incstack = 0
 13748  005742  0139               	movlb	57	; () banked
 13749  005744  91A1               	bcf	161,0,b	;volatile
 13750                           
 13751                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 13752  005746  90D2               	bcf	16338,0,c	;volatile
 13753                           
 13754                           ; BSR set to: 57
 13755                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 13756  005748  0E7A               	movlw	low _INT0_DefaultInterruptHandler
 13757  00574A  6EE6               	movwf	postinc1,c
 13758  00574C  0E61               	movlw	high _INT0_DefaultInterruptHandler
 13759  00574E  6EE6               	movwf	postinc1,c
 13760  005750  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 13761  005752  6EE6               	movwf	postinc1,c
 13762  005754  ECD5  F02E         	call	_INT0_SetInterruptHandler	;wreg free
 13763                           
 13764                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 13765  005758  0139               	movlb	57	; () banked
 13766  00575A  8191               	bsf	145,0,b	;volatile
 13767                           
 13768                           ; BSR set to: 57
 13769                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 13770  00575C  91A5               	bcf	165,0,b	;volatile
 13771                           
 13772                           ; BSR set to: 57
 13773                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 13774  00575E  92D2               	bcf	16338,1,c	;volatile
 13775                           
 13776                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 13777  005760  0E7C               	movlw	low _INT1_DefaultInterruptHandler
 13778  005762  6EE6               	movwf	postinc1,c
 13779  005764  0E61               	movlw	high _INT1_DefaultInterruptHandler
 13780  005766  6EE6               	movwf	postinc1,c
 13781  005768  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 13782  00576A  6EE6               	movwf	postinc1,c
 13783  00576C  ECC1  F02E         	call	_INT1_SetInterruptHandler	;wreg free
 13784                           
 13785                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 13786  005770  0139               	movlb	57	; () banked
 13787  005772  8195               	bsf	149,0,b	;volatile
 13788                           
 13789                           ; BSR set to: 57
 13790                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 13791  005774  9BA7               	bcf	167,5,b	;volatile
 13792                           
 13793                           ; BSR set to: 57
 13794                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 13795  005776  94D2               	bcf	16338,2,c	;volatile
 13796                           
 13797                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 13798  005778  0E7E               	movlw	low _INT2_DefaultInterruptHandler
 13799  00577A  6EE6               	movwf	postinc1,c
 13800  00577C  0E61               	movlw	high _INT2_DefaultInterruptHandler
 13801  00577E  6EE6               	movwf	postinc1,c
 13802  005780  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 13803  005782  6EE6               	movwf	postinc1,c
 13804  005784  ECAD  F02E         	call	_INT2_SetInterruptHandler	;wreg free
 13805                           
 13806                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 13807  005788  0139               	movlb	57	; () banked
 13808  00578A  8B97               	bsf	151,5,b	;volatile
 13809                           
 13810                           ; BSR set to: 57
 13811                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13812  00578C  0012               	return		;funcret
 13813  00578E                     __end_of_EXT_INT_Initialize:
 13814                           	opt callstack 0
 13815                           
 13816 ;; *************** function _INT2_SetInterruptHandler *****************
 13817 ;; Defined at:
 13818 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 13819 ;; Parameters:    Size  Location     Type
 13820 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13821 ;;		 -> INT2_DefaultInterruptHandler(1), 
 13822 ;; Auto vars:     Size  Location     Type
 13823 ;;		None
 13824 ;; Return value:  Size  Location     Type
 13825 ;;                  1  [STACK] void 
 13826 ;; Registers used:
 13827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13828 ;; Tracked objects:
 13829 ;;		On entry : 3F/39
 13830 ;;		On exit  : 0/0
 13831 ;;		Unchanged: 0/0
 13832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13837 ;;Total ram usage:        0 bytes
 13838 ;; Hardware stack levels used:    1
 13839 ;; Hardware stack levels required when called:    3
 13840 ;; This function calls:
 13841 ;;		Nothing
 13842 ;; This function is called by:
 13843 ;;		_EXT_INT_Initialize
 13844 ;; This function uses a reentrant model
 13845 ;;
 13846                           
 13847                           	psect	text68
 13848  005D5A                     __ptext68:
 13849                           	opt callstack 0
 13850  005D5A                     _INT2_SetInterruptHandler:
 13851                           	opt callstack 25
 13852                           
 13853                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 13854                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13855                           
 13856                           ; BSR set to: 57
 13857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13858                           ;incstack = 0
 13859  005D5A  50E1               	movf	fsr1l,w,c
 13860  005D5C  0FFD               	addlw	-3
 13861  005D5E  6ED9               	movwf	fsr2l,c
 13862  005D60  50E2               	movf	fsr1h,w,c
 13863  005D62  6EDA               	movwf	fsr2h,c
 13864  005D64  0EFF               	movlw	255
 13865  005D66  22DA               	addwfc	fsr2h,f,c
 13866  005D68  006F FF78  F017    	movff	postinc2,_INT2_InterruptHandler
 13867  005D6E  006F FF78  F018    	movff	postinc2,_INT2_InterruptHandler+1
 13868  005D74  006F FF74  F019    	movff	postdec2,_INT2_InterruptHandler+2
 13869                           
 13870                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13871  005D7A  52E5               	movf	postdec1,f,c
 13872  005D7C  52E5               	movf	postdec1,f,c
 13873  005D7E  52E5               	movf	postdec1,f,c
 13874  005D80  0012               	return		;funcret
 13875  005D82                     __end_of_INT2_SetInterruptHandler:
 13876                           	opt callstack 0
 13877                           
 13878 ;; *************** function _INT1_SetInterruptHandler *****************
 13879 ;; Defined at:
 13880 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 13881 ;; Parameters:    Size  Location     Type
 13882 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13883 ;;		 -> INT1_DefaultInterruptHandler(1), 
 13884 ;; Auto vars:     Size  Location     Type
 13885 ;;		None
 13886 ;; Return value:  Size  Location     Type
 13887 ;;                  1  [STACK] void 
 13888 ;; Registers used:
 13889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13890 ;; Tracked objects:
 13891 ;;		On entry : 3F/39
 13892 ;;		On exit  : 0/0
 13893 ;;		Unchanged: 0/0
 13894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13899 ;;Total ram usage:        0 bytes
 13900 ;; Hardware stack levels used:    1
 13901 ;; Hardware stack levels required when called:    3
 13902 ;; This function calls:
 13903 ;;		Nothing
 13904 ;; This function is called by:
 13905 ;;		_EXT_INT_Initialize
 13906 ;; This function uses a reentrant model
 13907 ;;
 13908                           
 13909                           	psect	text69
 13910  005D82                     __ptext69:
 13911                           	opt callstack 0
 13912  005D82                     _INT1_SetInterruptHandler:
 13913                           	opt callstack 25
 13914                           
 13915                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 13916                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13917                           
 13918                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13919                           ;incstack = 0
 13920  005D82  50E1               	movf	fsr1l,w,c
 13921  005D84  0FFD               	addlw	-3
 13922  005D86  6ED9               	movwf	fsr2l,c
 13923  005D88  50E2               	movf	fsr1h,w,c
 13924  005D8A  6EDA               	movwf	fsr2h,c
 13925  005D8C  0EFF               	movlw	255
 13926  005D8E  22DA               	addwfc	fsr2h,f,c
 13927  005D90  006F FF78  F01A    	movff	postinc2,_INT1_InterruptHandler
 13928  005D96  006F FF78  F01B    	movff	postinc2,_INT1_InterruptHandler+1
 13929  005D9C  006F FF74  F01C    	movff	postdec2,_INT1_InterruptHandler+2
 13930                           
 13931                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13932  005DA2  52E5               	movf	postdec1,f,c
 13933  005DA4  52E5               	movf	postdec1,f,c
 13934  005DA6  52E5               	movf	postdec1,f,c
 13935  005DA8  0012               	return		;funcret
 13936  005DAA                     __end_of_INT1_SetInterruptHandler:
 13937                           	opt callstack 0
 13938                           
 13939 ;; *************** function _INT0_SetInterruptHandler *****************
 13940 ;; Defined at:
 13941 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 13942 ;; Parameters:    Size  Location     Type
 13943 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13944 ;;		 -> INT0_DefaultInterruptHandler(1), 
 13945 ;; Auto vars:     Size  Location     Type
 13946 ;;		None
 13947 ;; Return value:  Size  Location     Type
 13948 ;;                  1  [STACK] void 
 13949 ;; Registers used:
 13950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13951 ;; Tracked objects:
 13952 ;;		On entry : 3F/39
 13953 ;;		On exit  : 0/0
 13954 ;;		Unchanged: 0/0
 13955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13960 ;;Total ram usage:        0 bytes
 13961 ;; Hardware stack levels used:    1
 13962 ;; Hardware stack levels required when called:    3
 13963 ;; This function calls:
 13964 ;;		Nothing
 13965 ;; This function is called by:
 13966 ;;		_EXT_INT_Initialize
 13967 ;; This function uses a reentrant model
 13968 ;;
 13969                           
 13970                           	psect	text70
 13971  005DAA                     __ptext70:
 13972                           	opt callstack 0
 13973  005DAA                     _INT0_SetInterruptHandler:
 13974                           	opt callstack 25
 13975                           
 13976                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 13977                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13978                           
 13979                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13980                           ;incstack = 0
 13981  005DAA  50E1               	movf	fsr1l,w,c
 13982  005DAC  0FFD               	addlw	-3
 13983  005DAE  6ED9               	movwf	fsr2l,c
 13984  005DB0  50E2               	movf	fsr1h,w,c
 13985  005DB2  6EDA               	movwf	fsr2h,c
 13986  005DB4  0EFF               	movlw	255
 13987  005DB6  22DA               	addwfc	fsr2h,f,c
 13988  005DB8  006F FF78  F01D    	movff	postinc2,_INT0_InterruptHandler
 13989  005DBE  006F FF78  F01E    	movff	postinc2,_INT0_InterruptHandler+1
 13990  005DC4  006F FF74  F01F    	movff	postdec2,_INT0_InterruptHandler+2
 13991                           
 13992                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13993  005DCA  52E5               	movf	postdec1,f,c
 13994  005DCC  52E5               	movf	postdec1,f,c
 13995  005DCE  52E5               	movf	postdec1,f,c
 13996  005DD0  0012               	return		;funcret
 13997  005DD2                     __end_of_INT0_SetInterruptHandler:
 13998                           	opt callstack 0
 13999                           
 14000 ;; *************** function _DSM_Initialize *****************
 14001 ;; Defined at:
 14002 ;;		line 58 in file "mcc_generated_files/dsm.c"
 14003 ;; Parameters:    Size  Location     Type
 14004 ;;		None
 14005 ;; Auto vars:     Size  Location     Type
 14006 ;;		None
 14007 ;; Return value:  Size  Location     Type
 14008 ;;                  1  [STACK] void 
 14009 ;; Registers used:
 14010 ;;		wreg, status,2
 14011 ;; Tracked objects:
 14012 ;;		On entry : 0/3C
 14013 ;;		On exit  : 3F/3C
 14014 ;;		Unchanged: 0/0
 14015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14020 ;;Total ram usage:        0 bytes
 14021 ;; Hardware stack levels used:    1
 14022 ;; Hardware stack levels required when called:    3
 14023 ;; This function calls:
 14024 ;;		Nothing
 14025 ;; This function is called by:
 14026 ;;		_SYSTEM_Initialize
 14027 ;; This function uses a reentrant model
 14028 ;;
 14029                           
 14030                           	psect	text71
 14031  006022                     __ptext71:
 14032                           	opt callstack 0
 14033  006022                     _DSM_Initialize:
 14034                           	opt callstack 26
 14035                           
 14036                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 14037                           
 14038                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14039                           ;incstack = 0
 14040  006022  013C               	movlb	60	; () banked
 14041  006024  99FA               	bcf	250,4,b	;volatile
 14042                           
 14043                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 14044  006026  81FB               	bsf	251,0,b	;volatile
 14045                           
 14046                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 14047  006028  93FB               	bcf	251,1,b	;volatile
 14048                           
 14049                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 14050  00602A  89FB               	bsf	251,4,b	;volatile
 14051                           
 14052                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 14053  00602C  9BFB               	bcf	251,5,b	;volatile
 14054                           
 14055                           ; BSR set to: 60
 14056                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 14057  00602E  0E13               	movlw	19
 14058  006030  6FFC               	movwf	252,b	;volatile
 14059                           
 14060                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 14061  006032  0E0E               	movlw	14
 14062  006034  6FFE               	movwf	254,b	;volatile
 14063                           
 14064                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 14065  006036  0E04               	movlw	4
 14066  006038  6FFD               	movwf	253,b	;volatile
 14067                           
 14068                           ; BSR set to: 60
 14069                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 14070  00603A  8FFA               	bsf	250,7,b	;volatile
 14071                           
 14072                           ; BSR set to: 60
 14073                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 14074  00603C  0012               	return		;funcret
 14075  00603E                     __end_of_DSM_Initialize:
 14076                           	opt callstack 0
 14077                           
 14078 ;; *************** function _DMA1_Initialize *****************
 14079 ;; Defined at:
 14080 ;;		line 86 in file "mcc_generated_files/dma1.c"
 14081 ;; Parameters:    Size  Location     Type
 14082 ;;		None
 14083 ;; Auto vars:     Size  Location     Type
 14084 ;;		None
 14085 ;; Return value:  Size  Location     Type
 14086 ;;                  1  [STACK] void 
 14087 ;; Registers used:
 14088 ;;		wreg, status,2
 14089 ;; Tracked objects:
 14090 ;;		On entry : 3F/3D
 14091 ;;		On exit  : 3F/3B
 14092 ;;		Unchanged: 0/0
 14093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14098 ;;Total ram usage:        0 bytes
 14099 ;; Hardware stack levels used:    1
 14100 ;; Hardware stack levels required when called:    3
 14101 ;; This function calls:
 14102 ;;		Nothing
 14103 ;; This function is called by:
 14104 ;;		_SYSTEM_Initialize
 14105 ;; This function uses a reentrant model
 14106 ;;
 14107                           
 14108                           	psect	text72
 14109  0054A4                     __ptext72:
 14110                           	opt callstack 0
 14111  0054A4                     _DMA1_Initialize:
 14112                           	opt callstack 26
 14113                           
 14114                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 14115                           
 14116                           ; BSR set to: 60
 14117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14118                           ;incstack = 0
 14119  0054A4  0E00               	movlw	0
 14120  0054A6  013B               	movlb	59	; () banked
 14121  0054A8  6FF9               	movwf	249,b	;volatile
 14122  0054AA  0E10               	movlw	16
 14123  0054AC  6FFA               	movwf	250,b	;volatile
 14124  0054AE  0E00               	movlw	0
 14125  0054B0  6FFB               	movwf	251,b	;volatile
 14126                           
 14127                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 14128  0054B2  0E3D               	movlw	61
 14129  0054B4  6FF1               	movwf	241,b	;volatile
 14130  0054B6  0E11               	movlw	17
 14131  0054B8  6FF0               	movwf	240,b	;volatile
 14132                           
 14133                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 14134  0054BA  0E03               	movlw	3
 14135  0054BC  6FFD               	movwf	253,b	;volatile
 14136                           
 14137                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 14138  0054BE  0E00               	movlw	0
 14139  0054C0  6FF8               	movwf	248,b	;volatile
 14140  0054C2  0E01               	movlw	1
 14141  0054C4  6FF7               	movwf	247,b	;volatile
 14142                           
 14143                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 14144  0054C6  0E00               	movlw	0
 14145  0054C8  6FEF               	movwf	239,b	;volatile
 14146  0054CA  0E01               	movlw	1
 14147  0054CC  6FEE               	movwf	238,b	;volatile
 14148                           
 14149                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 14150  0054CE  0E15               	movlw	21
 14151  0054D0  6FFF               	movwf	255,b	;volatile
 14152                           
 14153                           ; BSR set to: 59
 14154                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 14155  0054D2  6BFE               	clrf	254,b	;volatile
 14156                           
 14157                           ; BSR set to: 59
 14158                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 14159  0054D4  0139               	movlb	57	; () banked
 14160  0054D6  93A2               	bcf	162,1,b	;volatile
 14161                           
 14162                           ; BSR set to: 57
 14163                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 14164  0054D8  91A2               	bcf	162,0,b	;volatile
 14165                           
 14166                           ; BSR set to: 57
 14167                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 14168  0054DA  97A2               	bcf	162,3,b	;volatile
 14169                           
 14170                           ; BSR set to: 57
 14171                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 14172  0054DC  95A2               	bcf	162,2,b	;volatile
 14173                           
 14174                           ; BSR set to: 57
 14175                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 14176  0054DE  8392               	bsf	146,1,b	;volatile
 14177                           
 14178                           ; BSR set to: 57
 14179                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 14180  0054E0  8192               	bsf	146,0,b	;volatile
 14181                           
 14182                           ; BSR set to: 57
 14183                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 14184  0054E2  8792               	bsf	146,3,b	;volatile
 14185                           
 14186                           ; BSR set to: 57
 14187                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 14188  0054E4  8592               	bsf	146,2,b	;volatile
 14189                           
 14190                           ; BSR set to: 57
 14191                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 14192  0054E6  6BF1               	clrf	241,b	;volatile
 14193                           
 14194                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 14195  0054E8  0E01               	movlw	1
 14196  0054EA  6FF2               	movwf	242,b	;volatile
 14197                           
 14198                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 14199  0054EC  0E04               	movlw	4
 14200  0054EE  6FF3               	movwf	243,b	;volatile
 14201                           
 14202                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 14203  0054F0  0E02               	movlw	2
 14204  0054F2  6FF4               	movwf	244,b	;volatile
 14205                           
 14206                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 14207  0054F4  0E03               	movlw	3
 14208  0054F6  6FF7               	movwf	247,b	;volatile
 14209  0054F8  9ED2               	bcf	16338,7,c	;# 
 14210  0054FA  0139               	banksel	14831	;# 
 14211  0054FC  0E55               	movlw	85	;# 
 14212  0054FE  6FEF               	movwf	14831,b	;# 
 14213  005500  0EAA               	movlw	170	;# 
 14214  005502  6FEF               	movwf	14831,b	;# 
 14215  005504  81EF               	bsf	14831,0,b	;# 
 14216  005506  8ED2               	bsf	16338,7,c	;# 
 14217                           
 14218                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 14219  005508  013B               	movlb	59	; () banked
 14220  00550A  6BFC               	clrf	252,b	;volatile
 14221                           
 14222                           ; BSR set to: 59
 14223                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14224  00550C  0012               	return		;funcret
 14225  00550E                     __end_of_DMA1_Initialize:
 14226                           	opt callstack 0
 14227                           
 14228 ;; *************** function _CLKREF_Initialize *****************
 14229 ;; Defined at:
 14230 ;;		line 58 in file "mcc_generated_files/clkref.c"
 14231 ;; Parameters:    Size  Location     Type
 14232 ;;		None
 14233 ;; Auto vars:     Size  Location     Type
 14234 ;;		None
 14235 ;; Return value:  Size  Location     Type
 14236 ;;                  1  [STACK] void 
 14237 ;; Registers used:
 14238 ;;		wreg, status,2
 14239 ;; Tracked objects:
 14240 ;;		On entry : 3F/3B
 14241 ;;		On exit  : 3F/3C
 14242 ;;		Unchanged: 0/0
 14243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14248 ;;Total ram usage:        0 bytes
 14249 ;; Hardware stack levels used:    1
 14250 ;; Hardware stack levels required when called:    3
 14251 ;; This function calls:
 14252 ;;		Nothing
 14253 ;; This function is called by:
 14254 ;;		_SYSTEM_Initialize
 14255 ;; This function uses a reentrant model
 14256 ;;
 14257                           
 14258                           	psect	text73
 14259  00611A                     __ptext73:
 14260                           	opt callstack 0
 14261  00611A                     _CLKREF_Initialize:
 14262                           	opt callstack 26
 14263                           
 14264                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 14265                           
 14266                           ; BSR set to: 59
 14267                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14268                           ;incstack = 0
 14269  00611A  013C               	movlb	60	; () banked
 14270  00611C  6BE6               	clrf	230,b	;volatile
 14271                           
 14272                           ; BSR set to: 60
 14273                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 14274  00611E  0E94               	movlw	148
 14275  006120  6FE5               	movwf	229,b	;volatile
 14276                           
 14277                           ; BSR set to: 60
 14278                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14279  006122  0012               	return		;funcret
 14280  006124                     __end_of_CLKREF_Initialize:
 14281                           	opt callstack 0
 14282                           
 14283 ;; *************** function _CLC1_Initialize *****************
 14284 ;; Defined at:
 14285 ;;		line 58 in file "mcc_generated_files/clc1.c"
 14286 ;; Parameters:    Size  Location     Type
 14287 ;;		None
 14288 ;; Auto vars:     Size  Location     Type
 14289 ;;		None
 14290 ;; Return value:  Size  Location     Type
 14291 ;;                  1  [STACK] void 
 14292 ;; Registers used:
 14293 ;;		wreg, status,2
 14294 ;; Tracked objects:
 14295 ;;		On entry : 0/39
 14296 ;;		On exit  : 3F/3C
 14297 ;;		Unchanged: 0/0
 14298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14303 ;;Total ram usage:        0 bytes
 14304 ;; Hardware stack levels used:    1
 14305 ;; Hardware stack levels required when called:    3
 14306 ;; This function calls:
 14307 ;;		Nothing
 14308 ;; This function is called by:
 14309 ;;		_SYSTEM_Initialize
 14310 ;; This function uses a reentrant model
 14311 ;;
 14312                           
 14313                           	psect	text74
 14314  005F04                     __ptext74:
 14315                           	opt callstack 0
 14316  005F04                     _CLC1_Initialize:
 14317                           	opt callstack 26
 14318                           
 14319                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 14320                           
 14321                           ; BSR set to: 60
 14322                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14323                           ;incstack = 0
 14324  005F04  013C               	movlb	60	; () banked
 14325  005F06  6B75               	clrf	117,b	;volatile
 14326                           
 14327                           ; BSR set to: 60
 14328                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 14329  005F08  0E04               	movlw	4
 14330  005F0A  6F76               	movwf	118,b	;volatile
 14331                           
 14332                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 14333  005F0C  0E04               	movlw	4
 14334  005F0E  6F77               	movwf	119,b	;volatile
 14335                           
 14336                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 14337  005F10  0E04               	movlw	4
 14338  005F12  6F78               	movwf	120,b	;volatile
 14339                           
 14340                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 14341  005F14  0E04               	movlw	4
 14342  005F16  6F79               	movwf	121,b	;volatile
 14343                           
 14344                           ; BSR set to: 60
 14345                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 14346  005F18  6B7A               	clrf	122,b	;volatile
 14347                           
 14348                           ; BSR set to: 60
 14349                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 14350  005F1A  6B7B               	clrf	123,b	;volatile
 14351                           
 14352                           ; BSR set to: 60
 14353                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 14354  005F1C  6B7C               	clrf	124,b	;volatile
 14355                           
 14356                           ; BSR set to: 60
 14357                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 14358  005F1E  6B7D               	clrf	125,b	;volatile
 14359                           
 14360                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 14361  005F20  0E81               	movlw	129
 14362  005F22  6F74               	movwf	116,b	;volatile
 14363                           
 14364                           ; BSR set to: 60
 14365                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14366  005F24  0012               	return		;funcret
 14367  005F26                     __end_of_CLC1_Initialize:
 14368                           	opt callstack 0
 14369                           
 14370 ;; *************** function _ADCC_Initialize *****************
 14371 ;; Defined at:
 14372 ;;		line 64 in file "mcc_generated_files/adcc.c"
 14373 ;; Parameters:    Size  Location     Type
 14374 ;;		None
 14375 ;; Auto vars:     Size  Location     Type
 14376 ;;		None
 14377 ;; Return value:  Size  Location     Type
 14378 ;;                  1  [STACK] void 
 14379 ;; Registers used:
 14380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 14381 ;; Tracked objects:
 14382 ;;		On entry : 3F/39
 14383 ;;		On exit  : 0/0
 14384 ;;		Unchanged: 0/0
 14385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14390 ;;Total ram usage:        0 bytes
 14391 ;; Hardware stack levels used:    1
 14392 ;; Hardware stack levels required when called:    4
 14393 ;; This function calls:
 14394 ;;		_ADCC_SetADIInterruptHandler
 14395 ;; This function is called by:
 14396 ;;		_SYSTEM_Initialize
 14397 ;; This function uses a reentrant model
 14398 ;;
 14399                           
 14400                           	psect	text75
 14401  00578E                     __ptext75:
 14402                           	opt callstack 0
 14403  00578E                     _ADCC_Initialize:
 14404                           	opt callstack 25
 14405                           
 14406                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 14407                           
 14408                           ; BSR set to: 60
 14409                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14410                           ;incstack = 0
 14411  00578E  013E               	movlb	62	; () banked
 14412  005790  6BDE               	clrf	222,b	;volatile
 14413                           
 14414                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 14415  005792  6BDF               	clrf	223,b	;volatile
 14416                           
 14417                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 14418  005794  6BE0               	clrf	224,b	;volatile
 14419                           
 14420                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 14421  005796  6BE1               	clrf	225,b	;volatile
 14422                           
 14423                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 14424  005798  6BE4               	clrf	228,b	;volatile
 14425                           
 14426                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 14427  00579A  6BE5               	clrf	229,b	;volatile
 14428                           
 14429                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 14430  00579C  6BEA               	clrf	234,b	;volatile
 14431                           
 14432                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 14433  00579E  6BEC               	clrf	236,b	;volatile
 14434                           
 14435                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 14436  0057A0  6BF1               	clrf	241,b	;volatile
 14437                           
 14438                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 14439  0057A2  6BF3               	clrf	243,b	;volatile
 14440                           
 14441                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 14442  0057A4  6BF4               	clrf	244,b	;volatile
 14443                           
 14444                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 14445  0057A6  6BF5               	clrf	245,b	;volatile
 14446                           
 14447                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 14448  0057A8  6BF6               	clrf	246,b	;volatile
 14449                           
 14450                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 14451  0057AA  6BF7               	clrf	247,b	;volatile
 14452                           
 14453                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 14454  0057AC  6BF9               	clrf	249,b	;volatile
 14455                           
 14456                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 14457  0057AE  6BFA               	clrf	250,b	;volatile
 14458                           
 14459                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 14460  0057B0  6BFB               	clrf	251,b	;volatile
 14461                           
 14462                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 14463  0057B2  6BFC               	clrf	252,b	;volatile
 14464                           
 14465                           ; BSR set to: 62
 14466                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 14467  0057B4  0E02               	movlw	2
 14468  0057B6  6FFD               	movwf	253,b	;volatile
 14469                           
 14470                           ; BSR set to: 62
 14471                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 14472  0057B8  6BFE               	clrf	254,b	;volatile
 14473                           
 14474                           ; BSR set to: 62
 14475                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 14476  0057BA  6BFF               	clrf	255,b	;volatile
 14477                           
 14478                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 14479  0057BC  0E94               	movlw	148
 14480  0057BE  6FF8               	movwf	248,b	;volatile
 14481                           
 14482                           ; BSR set to: 62
 14483                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 14484  0057C0  0139               	movlb	57	; () banked
 14485  0057C2  95A1               	bcf	161,2,b	;volatile
 14486                           
 14487                           ; BSR set to: 57
 14488                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 14489  0057C4  8591               	bsf	145,2,b	;volatile
 14490                           
 14491                           ; BSR set to: 57
 14492                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 14493  0057C6  0E80               	movlw	low _ADCC_DefaultInterruptHandler
 14494  0057C8  6EE6               	movwf	postinc1,c
 14495  0057CA  0E61               	movlw	high _ADCC_DefaultInterruptHandler
 14496  0057CC  6EE6               	movwf	postinc1,c
 14497  0057CE  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 14498  0057D0  6EE6               	movwf	postinc1,c
 14499  0057D2  ECE9  F02E         	call	_ADCC_SetADIInterruptHandler	;wreg free
 14500                           
 14501                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14502  0057D6  0012               	return		;funcret
 14503  0057D8                     __end_of_ADCC_Initialize:
 14504                           	opt callstack 0
 14505                           
 14506 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 14507 ;; Defined at:
 14508 ;;		line 316 in file "mcc_generated_files/adcc.c"
 14509 ;; Parameters:    Size  Location     Type
 14510 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14511 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 14512 ;; Auto vars:     Size  Location     Type
 14513 ;;		None
 14514 ;; Return value:  Size  Location     Type
 14515 ;;                  1  [STACK] void 
 14516 ;; Registers used:
 14517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14518 ;; Tracked objects:
 14519 ;;		On entry : 3F/39
 14520 ;;		On exit  : 0/0
 14521 ;;		Unchanged: 0/0
 14522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14527 ;;Total ram usage:        0 bytes
 14528 ;; Hardware stack levels used:    1
 14529 ;; Hardware stack levels required when called:    3
 14530 ;; This function calls:
 14531 ;;		Nothing
 14532 ;; This function is called by:
 14533 ;;		_ADCC_Initialize
 14534 ;; This function uses a reentrant model
 14535 ;;
 14536                           
 14537                           	psect	text76
 14538  005DD2                     __ptext76:
 14539                           	opt callstack 0
 14540  005DD2                     _ADCC_SetADIInterruptHandler:
 14541                           	opt callstack 25
 14542                           
 14543                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 14544                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14545                           
 14546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14547                           ;incstack = 0
 14548  005DD2  50E1               	movf	fsr1l,w,c
 14549  005DD4  0FFD               	addlw	-3
 14550  005DD6  6ED9               	movwf	fsr2l,c
 14551  005DD8  50E2               	movf	fsr1h,w,c
 14552  005DDA  6EDA               	movwf	fsr2h,c
 14553  005DDC  0EFF               	movlw	255
 14554  005DDE  22DA               	addwfc	fsr2h,f,c
 14555  005DE0  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler
 14556  005DE6  006F FF78  F009    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 14557  005DEC  006F FF74  F00A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 14558                           
 14559                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14560  005DF2  52E5               	movf	postdec1,f,c
 14561  005DF4  52E5               	movf	postdec1,f,c
 14562  005DF6  52E5               	movf	postdec1,f,c
 14563  005DF8  0012               	return		;funcret
 14564  005DFA                     __end_of_ADCC_SetADIInterruptHandler:
 14565                           	opt callstack 0
 14566                           
 14567 ;; *************** function _INT0_ISR *****************
 14568 ;; Defined at:
 14569 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 14570 ;; Parameters:    Size  Location     Type
 14571 ;;		None
 14572 ;; Auto vars:     Size  Location     Type
 14573 ;;		None
 14574 ;; Return value:  Size  Location     Type
 14575 ;;                  1    wreg      void 
 14576 ;; Registers used:
 14577 ;;		wreg, status,2, status,0, pclath, tosl
 14578 ;; Tracked objects:
 14579 ;;		On entry : 0/0
 14580 ;;		On exit  : 0/0
 14581 ;;		Unchanged: 0/0
 14582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14587 ;;Total ram usage:        0 bytes
 14588 ;; Hardware stack levels used:    1
 14589 ;; Hardware stack levels required when called:    2
 14590 ;; This function calls:
 14591 ;;		_INT0_CallBack
 14592 ;; This function is called by:
 14593 ;;		Interrupt level 2
 14594 ;; This function uses a non-reentrant model
 14595 ;;
 14596                           
 14597                           	psect	text77
 14598  0060DC                     __ptext77:
 14599                           	opt callstack 0
 14600  0060DC                     _INT0_ISR:
 14601                           	opt callstack 17
 14602                           
 14603                           ;incstack = 0
 14604  0060DC  EE13  F130         	lfsr	1,___inthi_sp
 14605                           
 14606                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 14607  0060E0  0139               	movlb	57	; () banked
 14608  0060E2  91A1               	bcf	161,0,b	;volatile
 14609                           
 14610                           ; BSR set to: 57
 14611                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 14612  0060E4  EC93  F02F         	call	_INT0_CallBack	;wreg free
 14613  0060E8  0011               	retfie		f
 14614  0060EA                     __end_of_INT0_ISR:
 14615                           	opt callstack 0
 14616                           
 14617 ;; *************** function _INT0_CallBack *****************
 14618 ;; Defined at:
 14619 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 14620 ;; Parameters:    Size  Location     Type
 14621 ;;		None
 14622 ;; Auto vars:     Size  Location     Type
 14623 ;;		None
 14624 ;; Return value:  Size  Location     Type
 14625 ;;                  1  [STACK] void 
 14626 ;; Registers used:
 14627 ;;		wreg, status,2, status,0, pclath, tosl
 14628 ;; Tracked objects:
 14629 ;;		On entry : 3F/39
 14630 ;;		On exit  : 0/0
 14631 ;;		Unchanged: 0/0
 14632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14637 ;;Total ram usage:        0 bytes
 14638 ;; Hardware stack levels used:    1
 14639 ;; Hardware stack levels required when called:    1
 14640 ;; This function calls:
 14641 ;;		Absolute function
 14642 ;;		_INT0_DefaultInterruptHandler
 14643 ;; This function is called by:
 14644 ;;		_INT0_ISR
 14645 ;; This function uses a reentrant model
 14646 ;;
 14647                           
 14648                           	psect	text78
 14649  005F26                     __ptext78:
 14650                           	opt callstack 0
 14651  005F26                     _INT0_CallBack:
 14652                           	opt callstack 17
 14653                           
 14654                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 14655                           
 14656                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14657                           ;incstack = 0
 14658  005F26  501D               	movf	_INT0_InterruptHandler,w,c
 14659  005F28  101E               	iorwf	_INT0_InterruptHandler+1,w,c
 14660  005F2A  101F               	iorwf	_INT0_InterruptHandler+2,w,c
 14661  005F2C  B4D8               	btfsc	status,2,c
 14662  005F2E  0012               	return	
 14663                           
 14664                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 14665  005F30  D801               	call	u114_48
 14666  005F32  0012               	return	
 14667  005F34                     u114_48:
 14668  005F34  0005               	push	
 14669  005F36  6EFA               	movwf	pclath,c
 14670  005F38  501D               	movf	_INT0_InterruptHandler,w,c
 14671  005F3A  6EFD               	movwf	tosl,c
 14672  005F3C  501E               	movf	_INT0_InterruptHandler+1,w,c
 14673  005F3E  6EFE               	movwf	tosh,c
 14674  005F40  501F               	movf	_INT0_InterruptHandler+2,w,c
 14675  005F42  6EFF               	movwf	tosu,c
 14676  005F44  50FA               	movf	pclath,w,c
 14677  005F46  0012               	return		;indir
 14678  005F48                     __end_of_INT0_CallBack:
 14679                           	opt callstack 0
 14680                           
 14681 ;; *************** function _INT0_DefaultInterruptHandler *****************
 14682 ;; Defined at:
 14683 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 14684 ;; Parameters:    Size  Location     Type
 14685 ;;		None
 14686 ;; Auto vars:     Size  Location     Type
 14687 ;;		None
 14688 ;; Return value:  Size  Location     Type
 14689 ;;                  1  [STACK] void 
 14690 ;; Registers used:
 14691 ;;		None
 14692 ;; Tracked objects:
 14693 ;;		On entry : 0/39
 14694 ;;		On exit  : 0/0
 14695 ;;		Unchanged: 0/0
 14696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14701 ;;Total ram usage:        0 bytes
 14702 ;; Hardware stack levels used:    1
 14703 ;; This function calls:
 14704 ;;		Nothing
 14705 ;; This function is called by:
 14706 ;;		_EXT_INT_Initialize
 14707 ;;		_INT0_CallBack
 14708 ;; This function uses a reentrant model
 14709 ;;
 14710                           
 14711                           	psect	text79
 14712  00617A                     __ptext79:
 14713                           	opt callstack 0
 14714  00617A                     _INT0_DefaultInterruptHandler:
 14715                           	opt callstack 17
 14716                           
 14717                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14718                           
 14719                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14720                           ;incstack = 0
 14721  00617A  0012               	return		;funcret
 14722  00617C                     __end_of_INT0_DefaultInterruptHandler:
 14723                           	opt callstack 0
 14724                           
 14725 ;; *************** function _INT1_ISR *****************
 14726 ;; Defined at:
 14727 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 14728 ;; Parameters:    Size  Location     Type
 14729 ;;		None
 14730 ;; Auto vars:     Size  Location     Type
 14731 ;;		None
 14732 ;; Return value:  Size  Location     Type
 14733 ;;                  1    wreg      void 
 14734 ;; Registers used:
 14735 ;;		wreg, status,2, status,0, pclath, tosl
 14736 ;; Tracked objects:
 14737 ;;		On entry : 0/0
 14738 ;;		On exit  : 0/0
 14739 ;;		Unchanged: 0/0
 14740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14745 ;;Total ram usage:        0 bytes
 14746 ;; Hardware stack levels used:    1
 14747 ;; Hardware stack levels required when called:    2
 14748 ;; This function calls:
 14749 ;;		_INT1_CallBack
 14750 ;; This function is called by:
 14751 ;;		Interrupt level 2
 14752 ;; This function uses a non-reentrant model
 14753 ;;
 14754                           
 14755                           	psect	text80
 14756  0060EC                     __ptext80:
 14757                           	opt callstack 0
 14758  0060EC                     _INT1_ISR:
 14759                           	opt callstack 17
 14760                           
 14761                           ;incstack = 0
 14762  0060EC  EE13  F130         	lfsr	1,___inthi_sp
 14763                           
 14764                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 14765  0060F0  0139               	movlb	57	; () banked
 14766  0060F2  91A5               	bcf	165,0,b	;volatile
 14767                           
 14768                           ; BSR set to: 57
 14769                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 14770  0060F4  ECA4  F02F         	call	_INT1_CallBack	;wreg free
 14771  0060F8  0011               	retfie		f
 14772  0060FA                     __end_of_INT1_ISR:
 14773                           	opt callstack 0
 14774                           
 14775 ;; *************** function _INT1_CallBack *****************
 14776 ;; Defined at:
 14777 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 14778 ;; Parameters:    Size  Location     Type
 14779 ;;		None
 14780 ;; Auto vars:     Size  Location     Type
 14781 ;;		None
 14782 ;; Return value:  Size  Location     Type
 14783 ;;                  1  [STACK] void 
 14784 ;; Registers used:
 14785 ;;		wreg, status,2, status,0, pclath, tosl
 14786 ;; Tracked objects:
 14787 ;;		On entry : 3F/39
 14788 ;;		On exit  : 0/0
 14789 ;;		Unchanged: 0/0
 14790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14795 ;;Total ram usage:        0 bytes
 14796 ;; Hardware stack levels used:    1
 14797 ;; Hardware stack levels required when called:    1
 14798 ;; This function calls:
 14799 ;;		Absolute function
 14800 ;;		_INT1_DefaultInterruptHandler
 14801 ;; This function is called by:
 14802 ;;		_INT1_ISR
 14803 ;; This function uses a reentrant model
 14804 ;;
 14805                           
 14806                           	psect	text81
 14807  005F48                     __ptext81:
 14808                           	opt callstack 0
 14809  005F48                     _INT1_CallBack:
 14810                           	opt callstack 17
 14811                           
 14812                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 14813                           
 14814                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14815                           ;incstack = 0
 14816  005F48  501A               	movf	_INT1_InterruptHandler,w,c
 14817  005F4A  101B               	iorwf	_INT1_InterruptHandler+1,w,c
 14818  005F4C  101C               	iorwf	_INT1_InterruptHandler+2,w,c
 14819  005F4E  B4D8               	btfsc	status,2,c
 14820  005F50  0012               	return	
 14821                           
 14822                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 14823  005F52  D801               	call	u116_48
 14824  005F54  0012               	return	
 14825  005F56                     u116_48:
 14826  005F56  0005               	push	
 14827  005F58  6EFA               	movwf	pclath,c
 14828  005F5A  501A               	movf	_INT1_InterruptHandler,w,c
 14829  005F5C  6EFD               	movwf	tosl,c
 14830  005F5E  501B               	movf	_INT1_InterruptHandler+1,w,c
 14831  005F60  6EFE               	movwf	tosh,c
 14832  005F62  501C               	movf	_INT1_InterruptHandler+2,w,c
 14833  005F64  6EFF               	movwf	tosu,c
 14834  005F66  50FA               	movf	pclath,w,c
 14835  005F68  0012               	return		;indir
 14836  005F6A                     __end_of_INT1_CallBack:
 14837                           	opt callstack 0
 14838                           
 14839 ;; *************** function _INT1_DefaultInterruptHandler *****************
 14840 ;; Defined at:
 14841 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 14842 ;; Parameters:    Size  Location     Type
 14843 ;;		None
 14844 ;; Auto vars:     Size  Location     Type
 14845 ;;		None
 14846 ;; Return value:  Size  Location     Type
 14847 ;;                  1  [STACK] void 
 14848 ;; Registers used:
 14849 ;;		None
 14850 ;; Tracked objects:
 14851 ;;		On entry : 0/39
 14852 ;;		On exit  : 0/0
 14853 ;;		Unchanged: 0/0
 14854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14859 ;;Total ram usage:        0 bytes
 14860 ;; Hardware stack levels used:    1
 14861 ;; This function calls:
 14862 ;;		Nothing
 14863 ;; This function is called by:
 14864 ;;		_EXT_INT_Initialize
 14865 ;;		_INT1_CallBack
 14866 ;; This function uses a reentrant model
 14867 ;;
 14868                           
 14869                           	psect	text82
 14870  00617C                     __ptext82:
 14871                           	opt callstack 0
 14872  00617C                     _INT1_DefaultInterruptHandler:
 14873                           	opt callstack 17
 14874                           
 14875                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14876                           
 14877                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14878                           ;incstack = 0
 14879  00617C  0012               	return		;funcret
 14880  00617E                     __end_of_INT1_DefaultInterruptHandler:
 14881                           	opt callstack 0
 14882                           
 14883 ;; *************** function _INT2_ISR *****************
 14884 ;; Defined at:
 14885 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 14886 ;; Parameters:    Size  Location     Type
 14887 ;;		None
 14888 ;; Auto vars:     Size  Location     Type
 14889 ;;		None
 14890 ;; Return value:  Size  Location     Type
 14891 ;;                  1    wreg      void 
 14892 ;; Registers used:
 14893 ;;		wreg, status,2, status,0, pclath, tosl
 14894 ;; Tracked objects:
 14895 ;;		On entry : 0/0
 14896 ;;		On exit  : 0/0
 14897 ;;		Unchanged: 0/0
 14898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14903 ;;Total ram usage:        0 bytes
 14904 ;; Hardware stack levels used:    1
 14905 ;; Hardware stack levels required when called:    2
 14906 ;; This function calls:
 14907 ;;		_INT2_CallBack
 14908 ;; This function is called by:
 14909 ;;		Interrupt level 2
 14910 ;; This function uses a non-reentrant model
 14911 ;;
 14912                           
 14913                           	psect	text83
 14914  0060FC                     __ptext83:
 14915                           	opt callstack 0
 14916  0060FC                     _INT2_ISR:
 14917                           	opt callstack 17
 14918                           
 14919                           ;incstack = 0
 14920  0060FC  EE13  F130         	lfsr	1,___inthi_sp
 14921                           
 14922                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 14923  006100  0139               	movlb	57	; () banked
 14924  006102  9BA7               	bcf	167,5,b	;volatile
 14925                           
 14926                           ; BSR set to: 57
 14927                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 14928  006104  ECB5  F02F         	call	_INT2_CallBack	;wreg free
 14929  006108  0011               	retfie		f
 14930  00610A                     __end_of_INT2_ISR:
 14931                           	opt callstack 0
 14932                           
 14933 ;; *************** function _INT2_CallBack *****************
 14934 ;; Defined at:
 14935 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 14936 ;; Parameters:    Size  Location     Type
 14937 ;;		None
 14938 ;; Auto vars:     Size  Location     Type
 14939 ;;		None
 14940 ;; Return value:  Size  Location     Type
 14941 ;;                  1  [STACK] void 
 14942 ;; Registers used:
 14943 ;;		wreg, status,2, status,0, pclath, tosl
 14944 ;; Tracked objects:
 14945 ;;		On entry : 3F/39
 14946 ;;		On exit  : 0/0
 14947 ;;		Unchanged: 0/0
 14948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14953 ;;Total ram usage:        0 bytes
 14954 ;; Hardware stack levels used:    1
 14955 ;; Hardware stack levels required when called:    1
 14956 ;; This function calls:
 14957 ;;		Absolute function
 14958 ;;		_INT2_DefaultInterruptHandler
 14959 ;; This function is called by:
 14960 ;;		_INT2_ISR
 14961 ;; This function uses a reentrant model
 14962 ;;
 14963                           
 14964                           	psect	text84
 14965  005F6A                     __ptext84:
 14966                           	opt callstack 0
 14967  005F6A                     _INT2_CallBack:
 14968                           	opt callstack 17
 14969                           
 14970                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 14971                           
 14972                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14973                           ;incstack = 0
 14974  005F6A  5017               	movf	_INT2_InterruptHandler,w,c
 14975  005F6C  1018               	iorwf	_INT2_InterruptHandler+1,w,c
 14976  005F6E  1019               	iorwf	_INT2_InterruptHandler+2,w,c
 14977  005F70  B4D8               	btfsc	status,2,c
 14978  005F72  0012               	return	
 14979                           
 14980                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 14981  005F74  D801               	call	u118_48
 14982  005F76  0012               	return	
 14983  005F78                     u118_48:
 14984  005F78  0005               	push	
 14985  005F7A  6EFA               	movwf	pclath,c
 14986  005F7C  5017               	movf	_INT2_InterruptHandler,w,c
 14987  005F7E  6EFD               	movwf	tosl,c
 14988  005F80  5018               	movf	_INT2_InterruptHandler+1,w,c
 14989  005F82  6EFE               	movwf	tosh,c
 14990  005F84  5019               	movf	_INT2_InterruptHandler+2,w,c
 14991  005F86  6EFF               	movwf	tosu,c
 14992  005F88  50FA               	movf	pclath,w,c
 14993  005F8A  0012               	return		;indir
 14994  005F8C                     __end_of_INT2_CallBack:
 14995                           	opt callstack 0
 14996                           
 14997 ;; *************** function _INT2_DefaultInterruptHandler *****************
 14998 ;; Defined at:
 14999 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 15000 ;; Parameters:    Size  Location     Type
 15001 ;;		None
 15002 ;; Auto vars:     Size  Location     Type
 15003 ;;		None
 15004 ;; Return value:  Size  Location     Type
 15005 ;;                  1  [STACK] void 
 15006 ;; Registers used:
 15007 ;;		None
 15008 ;; Tracked objects:
 15009 ;;		On entry : 0/39
 15010 ;;		On exit  : 0/0
 15011 ;;		Unchanged: 0/0
 15012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15017 ;;Total ram usage:        0 bytes
 15018 ;; Hardware stack levels used:    1
 15019 ;; This function calls:
 15020 ;;		Nothing
 15021 ;; This function is called by:
 15022 ;;		_EXT_INT_Initialize
 15023 ;;		_INT2_CallBack
 15024 ;; This function uses a reentrant model
 15025 ;;
 15026                           
 15027                           	psect	text85
 15028  00617E                     __ptext85:
 15029                           	opt callstack 0
 15030  00617E                     _INT2_DefaultInterruptHandler:
 15031                           	opt callstack 17
 15032                           
 15033                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15034                           
 15035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15036                           ;incstack = 0
 15037  00617E  0012               	return		;funcret
 15038  006180                     __end_of_INT2_DefaultInterruptHandler:
 15039                           	opt callstack 0
 15040                           
 15041 ;; *************** function _Default_ISR *****************
 15042 ;; Defined at:
 15043 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 15044 ;; Parameters:    Size  Location     Type
 15045 ;;		None
 15046 ;; Auto vars:     Size  Location     Type
 15047 ;;		None
 15048 ;; Return value:  Size  Location     Type
 15049 ;;                  1    wreg      void 
 15050 ;; Registers used:
 15051 ;;		None
 15052 ;; Tracked objects:
 15053 ;;		On entry : 0/0
 15054 ;;		On exit  : 0/0
 15055 ;;		Unchanged: 0/0
 15056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15061 ;;Total ram usage:        0 bytes
 15062 ;; Hardware stack levels used:    1
 15063 ;; This function calls:
 15064 ;;		Nothing
 15065 ;; This function is called by:
 15066 ;;		Interrupt level 2
 15067 ;; This function uses a non-reentrant model
 15068 ;;
 15069                           
 15070                           	psect	text86
 15071  006174                     __ptext86:
 15072                           	opt callstack 0
 15073  006174                     _Default_ISR:
 15074                           	opt callstack 19
 15075                           
 15076                           ;incstack = 0
 15077  006174  EE13  F130         	lfsr	1,___inthi_sp
 15078  006178  0011               	retfie		f
 15079  00617A                     __end_of_Default_ISR:
 15080                           	opt callstack 0
 15081                           
 15082 ;; *************** function _ADCC_ISR *****************
 15083 ;; Defined at:
 15084 ;;		line 307 in file "mcc_generated_files/adcc.c"
 15085 ;; Parameters:    Size  Location     Type
 15086 ;;		None
 15087 ;; Auto vars:     Size  Location     Type
 15088 ;;		None
 15089 ;; Return value:  Size  Location     Type
 15090 ;;                  1    wreg      void 
 15091 ;; Registers used:
 15092 ;;		wreg, status,2, status,0, pclath, tosl
 15093 ;; Tracked objects:
 15094 ;;		On entry : 0/0
 15095 ;;		On exit  : 0/0
 15096 ;;		Unchanged: 0/0
 15097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15102 ;;Total ram usage:        0 bytes
 15103 ;; Hardware stack levels used:    1
 15104 ;; Hardware stack levels required when called:    1
 15105 ;; This function calls:
 15106 ;;		Absolute function
 15107 ;;		_ADCC_DefaultInterruptHandler
 15108 ;; This function is called by:
 15109 ;;		Interrupt level 2
 15110 ;; This function uses a non-reentrant model
 15111 ;;
 15112                           
 15113                           	psect	text87
 15114  005BA0                     __ptext87:
 15115                           	opt callstack 0
 15116  005BA0                     _ADCC_ISR:
 15117                           	opt callstack 18
 15118                           
 15119                           ;incstack = 0
 15120  005BA0  EE13  F130         	lfsr	1,___inthi_sp
 15121                           
 15122                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 15123  005BA4  0139               	movlb	57	; () banked
 15124  005BA6  95A1               	bcf	161,2,b	;volatile
 15125                           
 15126                           ; BSR set to: 57
 15127                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 15128  005BA8  5008               	movf	_ADCC_ADI_InterruptHandler,w,c
 15129  005BAA  1009               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 15130  005BAC  100A               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 15131  005BAE  B4D8               	btfsc	status,2,c
 15132  005BB0  0011               	retfie		f
 15133                           
 15134                           ; BSR set to: 57
 15135                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 15136  005BB2  D801               	call	i2u198_48
 15137  005BB4  0011               	retfie		f
 15138  005BB6                     i2u198_48:
 15139  005BB6  0005               	push	
 15140  005BB8  6EFA               	movwf	pclath,c
 15141  005BBA  5008               	movf	_ADCC_ADI_InterruptHandler,w,c
 15142  005BBC  6EFD               	movwf	tosl,c
 15143  005BBE  5009               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 15144  005BC0  6EFE               	movwf	tosh,c
 15145  005BC2  500A               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 15146  005BC4  6EFF               	movwf	tosu,c
 15147  005BC6  50FA               	movf	pclath,w,c
 15148  005BC8  0012               	return		;indir
 15149  005BCA                     __end_of_ADCC_ISR:
 15150                           	opt callstack 0
 15151                           
 15152 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 15153 ;; Defined at:
 15154 ;;		line 320 in file "mcc_generated_files/adcc.c"
 15155 ;; Parameters:    Size  Location     Type
 15156 ;;		None
 15157 ;; Auto vars:     Size  Location     Type
 15158 ;;		None
 15159 ;; Return value:  Size  Location     Type
 15160 ;;                  1  [STACK] void 
 15161 ;; Registers used:
 15162 ;;		None
 15163 ;; Tracked objects:
 15164 ;;		On entry : 3F/39
 15165 ;;		On exit  : 0/0
 15166 ;;		Unchanged: 0/0
 15167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15172 ;;Total ram usage:        0 bytes
 15173 ;; Hardware stack levels used:    1
 15174 ;; This function calls:
 15175 ;;		Nothing
 15176 ;; This function is called by:
 15177 ;;		_ADCC_Initialize
 15178 ;;		_ADCC_ISR
 15179 ;; This function uses a reentrant model
 15180 ;;
 15181                           
 15182                           	psect	text88
 15183  006180                     __ptext88:
 15184                           	opt callstack 0
 15185  006180                     _ADCC_DefaultInterruptHandler:
 15186                           	opt callstack 18
 15187                           
 15188                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15189                           
 15190                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15191                           ;incstack = 0
 15192  006180  0012               	return		;funcret
 15193  006182                     __end_of_ADCC_DefaultInterruptHandler:
 15194                           	opt callstack 0
 15195                           
 15196 ;; *************** function _UART1_tx_vect_isr *****************
 15197 ;; Defined at:
 15198 ;;		line 197 in file "mcc_generated_files/uart1.c"
 15199 ;; Parameters:    Size  Location     Type
 15200 ;;		None
 15201 ;; Auto vars:     Size  Location     Type
 15202 ;;		None
 15203 ;; Return value:  Size  Location     Type
 15204 ;;                  1    wreg      void 
 15205 ;; Registers used:
 15206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15207 ;; Tracked objects:
 15208 ;;		On entry : 0/0
 15209 ;;		On exit  : 0/0
 15210 ;;		Unchanged: 0/0
 15211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15216 ;;Total ram usage:        0 bytes
 15217 ;; Hardware stack levels used:    1
 15218 ;; Hardware stack levels required when called:    1
 15219 ;; This function calls:
 15220 ;;		Absolute function
 15221 ;;		_UART1_Transmit_ISR
 15222 ;; This function is called by:
 15223 ;;		Interrupt level 2
 15224 ;; This function uses a non-reentrant model
 15225 ;;
 15226                           
 15227                           	psect	text89
 15228  005DFC                     __ptext89:
 15229                           	opt callstack 0
 15230  005DFC                     _UART1_tx_vect_isr:
 15231                           	opt callstack 18
 15232                           
 15233                           ;incstack = 0
 15234  005DFC  EE13  F130         	lfsr	1,___inthi_sp
 15235                           
 15236                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 15237  005E00  500B               	movf	_UART1_TxInterruptHandler,w,c
 15238  005E02  100C               	iorwf	_UART1_TxInterruptHandler+1,w,c
 15239  005E04  100D               	iorwf	_UART1_TxInterruptHandler+2,w,c
 15240  005E06  B4D8               	btfsc	status,2,c
 15241  005E08  0011               	retfie		f
 15242                           
 15243                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 15244  005E0A  D801               	call	i2u412_48
 15245  005E0C  0011               	retfie		f
 15246  005E0E                     i2u412_48:
 15247  005E0E  0005               	push	
 15248  005E10  6EFA               	movwf	pclath,c
 15249  005E12  500B               	movf	_UART1_TxInterruptHandler,w,c
 15250  005E14  6EFD               	movwf	tosl,c
 15251  005E16  500C               	movf	_UART1_TxInterruptHandler+1,w,c
 15252  005E18  6EFE               	movwf	tosh,c
 15253  005E1A  500D               	movf	_UART1_TxInterruptHandler+2,w,c
 15254  005E1C  6EFF               	movwf	tosu,c
 15255  005E1E  50FA               	movf	pclath,w,c
 15256  005E20  0012               	return		;indir
 15257  005E22                     __end_of_UART1_tx_vect_isr:
 15258                           	opt callstack 0
 15259                           
 15260 ;; *************** function _UART1_Transmit_ISR *****************
 15261 ;; Defined at:
 15262 ;;		line 211 in file "mcc_generated_files/uart1.c"
 15263 ;; Parameters:    Size  Location     Type
 15264 ;;		None
 15265 ;; Auto vars:     Size  Location     Type
 15266 ;;		None
 15267 ;; Return value:  Size  Location     Type
 15268 ;;                  1  [STACK] void 
 15269 ;; Registers used:
 15270 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15271 ;; Tracked objects:
 15272 ;;		On entry : 0/0
 15273 ;;		On exit  : 3B/39
 15274 ;;		Unchanged: 0/0
 15275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15280 ;;Total ram usage:        0 bytes
 15281 ;; Hardware stack levels used:    1
 15282 ;; This function calls:
 15283 ;;		Nothing
 15284 ;; This function is called by:
 15285 ;;		_UART1_Initialize
 15286 ;;		_UART1_tx_vect_isr
 15287 ;; This function uses a reentrant model
 15288 ;;
 15289                           
 15290                           	psect	text90
 15291  005AF2                     __ptext90:
 15292                           	opt callstack 0
 15293  005AF2                     _UART1_Transmit_ISR:
 15294                           	opt callstack 18
 15295                           
 15296                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 15297                           
 15298                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15299                           ;incstack = 0
 15300  005AF2  0E40               	movlw	64
 15301  005AF4  6038               	cpfslt	_uart1TxBufferRemaining,c
 15302  005AF6  D010               	goto	l597
 15303                           
 15304                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 15305  005AF8  0E80               	movlw	low _uart1TxBuffer
 15306  005AFA  2439               	addwf	_uart1TxTail,w,c	;volatile
 15307  005AFC  6ED9               	movwf	fsr2l,c
 15308  005AFE  6ADA               	clrf	fsr2h,c
 15309  005B00  0E02               	movlw	high _uart1TxBuffer
 15310  005B02  22DA               	addwfc	fsr2h,f,c
 15311  005B04  50DF               	movf	indf2,w,c
 15312  005B06  013D               	movlb	61	; () banked
 15313  005B08  6FEA               	movwf	234,b	;volatile
 15314                           
 15315                           ; BSR set to: 61
 15316  005B0A  2A39               	incf	_uart1TxTail,f,c	;volatile
 15317                           
 15318                           ; BSR set to: 61
 15319                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 15320  005B0C  0E3F               	movlw	63
 15321  005B0E  6439               	cpfsgt	_uart1TxTail,c
 15322  005B10  D001               	goto	l6261
 15323                           
 15324                           ; BSR set to: 61
 15325                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 15326  005B12  6A39               	clrf	_uart1TxTail,c	;volatile
 15327  005B14                     l6261:
 15328                           
 15329                           ; BSR set to: 61
 15330                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 15331  005B14  2A38               	incf	_uart1TxBufferRemaining,f,c	;volatile
 15332                           
 15333                           ;mcc_generated_files/uart1.c: 220:  } else {
 15334  005B16  0012               	return	
 15335  005B18                     l597:
 15336                           
 15337                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 15338  005B18  0139               	movlb	57	; () banked
 15339  005B1A  9993               	bcf	147,4,b	;volatile
 15340                           
 15341                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 15342  005B1C  0012               	return		;funcret
 15343  005B1E                     __end_of_UART1_Transmit_ISR:
 15344                           	opt callstack 0
 15345                           
 15346 ;; *************** function _UART1_rx_vect_isr *****************
 15347 ;; Defined at:
 15348 ;;		line 204 in file "mcc_generated_files/uart1.c"
 15349 ;; Parameters:    Size  Location     Type
 15350 ;;		None
 15351 ;; Auto vars:     Size  Location     Type
 15352 ;;		None
 15353 ;; Return value:  Size  Location     Type
 15354 ;;                  1    wreg      void 
 15355 ;; Registers used:
 15356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15357 ;; Tracked objects:
 15358 ;;		On entry : 0/0
 15359 ;;		On exit  : 0/0
 15360 ;;		Unchanged: 0/0
 15361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15366 ;;Total ram usage:        0 bytes
 15367 ;; Hardware stack levels used:    1
 15368 ;; Hardware stack levels required when called:    1
 15369 ;; This function calls:
 15370 ;;		Absolute function
 15371 ;;		_UART1_Receive_ISR
 15372 ;; This function is called by:
 15373 ;;		Interrupt level 2
 15374 ;; This function uses a non-reentrant model
 15375 ;;
 15376                           
 15377                           	psect	text91
 15378  005E24                     __ptext91:
 15379                           	opt callstack 0
 15380  005E24                     _UART1_rx_vect_isr:
 15381                           	opt callstack 18
 15382                           
 15383                           ;incstack = 0
 15384  005E24  EE13  F130         	lfsr	1,___inthi_sp
 15385                           
 15386                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 15387  005E28  500E               	movf	_UART1_RxInterruptHandler,w,c
 15388  005E2A  100F               	iorwf	_UART1_RxInterruptHandler+1,w,c
 15389  005E2C  1010               	iorwf	_UART1_RxInterruptHandler+2,w,c
 15390  005E2E  B4D8               	btfsc	status,2,c
 15391  005E30  0011               	retfie		f
 15392                           
 15393                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 15394  005E32  D801               	call	i2u414_48
 15395  005E34  0011               	retfie		f
 15396  005E36                     i2u414_48:
 15397  005E36  0005               	push	
 15398  005E38  6EFA               	movwf	pclath,c
 15399  005E3A  500E               	movf	_UART1_RxInterruptHandler,w,c
 15400  005E3C  6EFD               	movwf	tosl,c
 15401  005E3E  500F               	movf	_UART1_RxInterruptHandler+1,w,c
 15402  005E40  6EFE               	movwf	tosh,c
 15403  005E42  5010               	movf	_UART1_RxInterruptHandler+2,w,c
 15404  005E44  6EFF               	movwf	tosu,c
 15405  005E46  50FA               	movf	pclath,w,c
 15406  005E48  0012               	return		;indir
 15407  005E4A                     __end_of_UART1_rx_vect_isr:
 15408                           	opt callstack 0
 15409                           
 15410 ;; *************** function _UART1_Receive_ISR *****************
 15411 ;; Defined at:
 15412 ;;		line 227 in file "mcc_generated_files/uart1.c"
 15413 ;; Parameters:    Size  Location     Type
 15414 ;;		None
 15415 ;; Auto vars:     Size  Location     Type
 15416 ;;		None
 15417 ;; Return value:  Size  Location     Type
 15418 ;;                  1  [STACK] void 
 15419 ;; Registers used:
 15420 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15421 ;; Tracked objects:
 15422 ;;		On entry : 0/0
 15423 ;;		On exit  : 0/0
 15424 ;;		Unchanged: 0/0
 15425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15430 ;;Total ram usage:        0 bytes
 15431 ;; Hardware stack levels used:    1
 15432 ;; This function calls:
 15433 ;;		Nothing
 15434 ;; This function is called by:
 15435 ;;		_UART1_Initialize
 15436 ;;		_UART1_rx_vect_isr
 15437 ;; This function uses a reentrant model
 15438 ;;
 15439                           
 15440                           	psect	text92
 15441  005F8C                     __ptext92:
 15442                           	opt callstack 0
 15443  005F8C                     _UART1_Receive_ISR:
 15444                           	opt callstack 18
 15445                           
 15446                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 15447                           
 15448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15449                           ;incstack = 0
 15450  005F8C  0E40               	movlw	low _uart1RxBuffer
 15451  005F8E  2437               	addwf	_uart1RxHead,w,c	;volatile
 15452  005F90  6ED9               	movwf	fsr2l,c
 15453  005F92  6ADA               	clrf	fsr2h,c
 15454  005F94  0E02               	movlw	high _uart1RxBuffer
 15455  005F96  22DA               	addwfc	fsr2h,f,c
 15456  005F98  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 15457  005F9E  2A37               	incf	_uart1RxHead,f,c	;volatile
 15458                           
 15459                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 15460  005FA0  0E3F               	movlw	63
 15461  005FA2  6437               	cpfsgt	_uart1RxHead,c
 15462  005FA4  D001               	goto	l6271
 15463                           
 15464                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 15465  005FA6  6A37               	clrf	_uart1RxHead,c	;volatile
 15466  005FA8                     l6271:
 15467                           
 15468                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 15469  005FA8  2A35               	incf	_uart1RxCount,f,c	;volatile
 15470                           
 15471                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15472  005FAA  0012               	return		;funcret
 15473  005FAC                     __end_of_UART1_Receive_ISR:
 15474                           	opt callstack 0
 15475                           
 15476 ;; *************** function _UART2_tx_vect_isr *****************
 15477 ;; Defined at:
 15478 ;;		line 195 in file "mcc_generated_files/uart2.c"
 15479 ;; Parameters:    Size  Location     Type
 15480 ;;		None
 15481 ;; Auto vars:     Size  Location     Type
 15482 ;;		None
 15483 ;; Return value:  Size  Location     Type
 15484 ;;                  1    wreg      void 
 15485 ;; Registers used:
 15486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15487 ;; Tracked objects:
 15488 ;;		On entry : 0/0
 15489 ;;		On exit  : 0/0
 15490 ;;		Unchanged: 0/0
 15491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15496 ;;Total ram usage:        0 bytes
 15497 ;; Hardware stack levels used:    1
 15498 ;; Hardware stack levels required when called:    1
 15499 ;; This function calls:
 15500 ;;		Absolute function
 15501 ;;		_UART2_Transmit_ISR
 15502 ;; This function is called by:
 15503 ;;		Interrupt level 2
 15504 ;; This function uses a non-reentrant model
 15505 ;;
 15506                           
 15507                           	psect	text93
 15508  005E4C                     __ptext93:
 15509                           	opt callstack 0
 15510  005E4C                     _UART2_tx_vect_isr:
 15511                           	opt callstack 18
 15512                           
 15513                           ;incstack = 0
 15514  005E4C  EE13  F130         	lfsr	1,___inthi_sp
 15515                           
 15516                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 15517  005E50  5011               	movf	_UART2_TxInterruptHandler,w,c
 15518  005E52  1012               	iorwf	_UART2_TxInterruptHandler+1,w,c
 15519  005E54  1013               	iorwf	_UART2_TxInterruptHandler+2,w,c
 15520  005E56  B4D8               	btfsc	status,2,c
 15521  005E58  0011               	retfie		f
 15522                           
 15523                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 15524  005E5A  D801               	call	i2u416_48
 15525  005E5C  0011               	retfie		f
 15526  005E5E                     i2u416_48:
 15527  005E5E  0005               	push	
 15528  005E60  6EFA               	movwf	pclath,c
 15529  005E62  5011               	movf	_UART2_TxInterruptHandler,w,c
 15530  005E64  6EFD               	movwf	tosl,c
 15531  005E66  5012               	movf	_UART2_TxInterruptHandler+1,w,c
 15532  005E68  6EFE               	movwf	tosh,c
 15533  005E6A  5013               	movf	_UART2_TxInterruptHandler+2,w,c
 15534  005E6C  6EFF               	movwf	tosu,c
 15535  005E6E  50FA               	movf	pclath,w,c
 15536  005E70  0012               	return		;indir
 15537  005E72                     __end_of_UART2_tx_vect_isr:
 15538                           	opt callstack 0
 15539                           
 15540 ;; *************** function _UART2_Transmit_ISR *****************
 15541 ;; Defined at:
 15542 ;;		line 213 in file "mcc_generated_files/uart2.c"
 15543 ;; Parameters:    Size  Location     Type
 15544 ;;		None
 15545 ;; Auto vars:     Size  Location     Type
 15546 ;;		None
 15547 ;; Return value:  Size  Location     Type
 15548 ;;                  1  [STACK] void 
 15549 ;; Registers used:
 15550 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15551 ;; Tracked objects:
 15552 ;;		On entry : 0/0
 15553 ;;		On exit  : 3B/39
 15554 ;;		Unchanged: 0/0
 15555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15560 ;;Total ram usage:        0 bytes
 15561 ;; Hardware stack levels used:    1
 15562 ;; This function calls:
 15563 ;;		Nothing
 15564 ;; This function is called by:
 15565 ;;		_UART2_Initialize
 15566 ;;		_UART2_tx_vect_isr
 15567 ;; This function uses a reentrant model
 15568 ;;
 15569                           
 15570                           	psect	text94
 15571  005B1E                     __ptext94:
 15572                           	opt callstack 0
 15573  005B1E                     _UART2_Transmit_ISR:
 15574                           	opt callstack 18
 15575                           
 15576                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 15577                           
 15578                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15579                           ;incstack = 0
 15580  005B1E  0E40               	movlw	64
 15581  005B20  6032               	cpfslt	_uart2TxBufferRemaining,c
 15582  005B22  D010               	goto	l717
 15583                           
 15584                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 15585  005B24  0E00               	movlw	low _uart2TxBuffer
 15586  005B26  2433               	addwf	_uart2TxTail,w,c	;volatile
 15587  005B28  6ED9               	movwf	fsr2l,c
 15588  005B2A  6ADA               	clrf	fsr2h,c
 15589  005B2C  0E03               	movlw	high _uart2TxBuffer
 15590  005B2E  22DA               	addwfc	fsr2h,f,c
 15591  005B30  50DF               	movf	indf2,w,c
 15592  005B32  013D               	movlb	61	; () banked
 15593  005B34  6FD2               	movwf	210,b	;volatile
 15594                           
 15595                           ; BSR set to: 61
 15596  005B36  2A33               	incf	_uart2TxTail,f,c	;volatile
 15597                           
 15598                           ; BSR set to: 61
 15599                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 15600  005B38  0E3F               	movlw	63
 15601  005B3A  6433               	cpfsgt	_uart2TxTail,c
 15602  005B3C  D001               	goto	l6283
 15603                           
 15604                           ; BSR set to: 61
 15605                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 15606  005B3E  6A33               	clrf	_uart2TxTail,c	;volatile
 15607  005B40                     l6283:
 15608                           
 15609                           ; BSR set to: 61
 15610                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 15611  005B40  2A32               	incf	_uart2TxBufferRemaining,f,c	;volatile
 15612                           
 15613                           ;mcc_generated_files/uart2.c: 224:     }
 15614  005B42  0012               	return	
 15615  005B44                     l717:
 15616                           
 15617                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 15618  005B44  0139               	movlb	57	; () banked
 15619  005B46  9796               	bcf	150,3,b	;volatile
 15620                           
 15621                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 15622  005B48  0012               	return		;funcret
 15623  005B4A                     __end_of_UART2_Transmit_ISR:
 15624                           	opt callstack 0
 15625                           
 15626 ;; *************** function _UART2_rx_vect_isr *****************
 15627 ;; Defined at:
 15628 ;;		line 203 in file "mcc_generated_files/uart2.c"
 15629 ;; Parameters:    Size  Location     Type
 15630 ;;		None
 15631 ;; Auto vars:     Size  Location     Type
 15632 ;;		None
 15633 ;; Return value:  Size  Location     Type
 15634 ;;                  1    wreg      void 
 15635 ;; Registers used:
 15636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15637 ;; Tracked objects:
 15638 ;;		On entry : 0/0
 15639 ;;		On exit  : 0/0
 15640 ;;		Unchanged: 0/0
 15641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15646 ;;Total ram usage:        0 bytes
 15647 ;; Hardware stack levels used:    1
 15648 ;; Hardware stack levels required when called:    1
 15649 ;; This function calls:
 15650 ;;		Absolute function
 15651 ;;		_UART2_Receive_ISR
 15652 ;; This function is called by:
 15653 ;;		Interrupt level 2
 15654 ;; This function uses a non-reentrant model
 15655 ;;
 15656                           
 15657                           	psect	text95
 15658  005E74                     __ptext95:
 15659                           	opt callstack 0
 15660  005E74                     _UART2_rx_vect_isr:
 15661                           	opt callstack 18
 15662                           
 15663                           ;incstack = 0
 15664  005E74  EE13  F130         	lfsr	1,___inthi_sp
 15665                           
 15666                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 15667  005E78  5014               	movf	_UART2_RxInterruptHandler,w,c
 15668  005E7A  1015               	iorwf	_UART2_RxInterruptHandler+1,w,c
 15669  005E7C  1016               	iorwf	_UART2_RxInterruptHandler+2,w,c
 15670  005E7E  B4D8               	btfsc	status,2,c
 15671  005E80  0011               	retfie		f
 15672                           
 15673                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 15674  005E82  D801               	call	i2u418_48
 15675  005E84  0011               	retfie		f
 15676  005E86                     i2u418_48:
 15677  005E86  0005               	push	
 15678  005E88  6EFA               	movwf	pclath,c
 15679  005E8A  5014               	movf	_UART2_RxInterruptHandler,w,c
 15680  005E8C  6EFD               	movwf	tosl,c
 15681  005E8E  5015               	movf	_UART2_RxInterruptHandler+1,w,c
 15682  005E90  6EFE               	movwf	tosh,c
 15683  005E92  5016               	movf	_UART2_RxInterruptHandler+2,w,c
 15684  005E94  6EFF               	movwf	tosu,c
 15685  005E96  50FA               	movf	pclath,w,c
 15686  005E98  0012               	return		;indir
 15687  005E9A                     __end_of_UART2_rx_vect_isr:
 15688                           	opt callstack 0
 15689                           
 15690 ;; *************** function _UART2_Receive_ISR *****************
 15691 ;; Defined at:
 15692 ;;		line 233 in file "mcc_generated_files/uart2.c"
 15693 ;; Parameters:    Size  Location     Type
 15694 ;;		None
 15695 ;; Auto vars:     Size  Location     Type
 15696 ;;		None
 15697 ;; Return value:  Size  Location     Type
 15698 ;;                  1  [STACK] void 
 15699 ;; Registers used:
 15700 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15701 ;; Tracked objects:
 15702 ;;		On entry : 0/0
 15703 ;;		On exit  : 0/0
 15704 ;;		Unchanged: 0/0
 15705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15710 ;;Total ram usage:        0 bytes
 15711 ;; Hardware stack levels used:    1
 15712 ;; This function calls:
 15713 ;;		Nothing
 15714 ;; This function is called by:
 15715 ;;		_UART2_Initialize
 15716 ;;		_UART2_rx_vect_isr
 15717 ;; This function uses a reentrant model
 15718 ;;
 15719                           
 15720                           	psect	text96
 15721  005FAC                     __ptext96:
 15722                           	opt callstack 0
 15723  005FAC                     _UART2_Receive_ISR:
 15724                           	opt callstack 18
 15725                           
 15726                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 15727                           
 15728                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15729                           ;incstack = 0
 15730  005FAC  0E00               	movlw	low _uart2RxBuffer
 15731  005FAE  2431               	addwf	_uart2RxHead,w,c	;volatile
 15732  005FB0  6ED9               	movwf	fsr2l,c
 15733  005FB2  6ADA               	clrf	fsr2h,c
 15734  005FB4  0E02               	movlw	high _uart2RxBuffer
 15735  005FB6  22DA               	addwfc	fsr2h,f,c
 15736  005FB8  006F F743 FFDF     	movff	15824,indf2	;volatile
 15737  005FBE  2A31               	incf	_uart2RxHead,f,c	;volatile
 15738                           
 15739                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 15740  005FC0  0E3F               	movlw	63
 15741  005FC2  6431               	cpfsgt	_uart2RxHead,c
 15742  005FC4  D001               	goto	l6293
 15743                           
 15744                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 15745  005FC6  6A31               	clrf	_uart2RxHead,c	;volatile
 15746  005FC8                     l6293:
 15747                           
 15748                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 15749  005FC8  2A2F               	incf	_uart2RxCount,f,c	;volatile
 15750                           
 15751                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15752  005FCA  0012               	return		;funcret
 15753  005FCC                     __end_of_UART2_Receive_ISR:
 15754                           	opt callstack 0
 15755                           
 15756 ;; *************** function _TMR6_ISR *****************
 15757 ;; Defined at:
 15758 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 15759 ;; Parameters:    Size  Location     Type
 15760 ;;		None
 15761 ;; Auto vars:     Size  Location     Type
 15762 ;;		None
 15763 ;; Return value:  Size  Location     Type
 15764 ;;                  1    wreg      void 
 15765 ;; Registers used:
 15766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 15767 ;; Tracked objects:
 15768 ;;		On entry : 0/0
 15769 ;;		On exit  : 0/0
 15770 ;;		Unchanged: 0/0
 15771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15774 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15775 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15776 ;;Total ram usage:        1 bytes
 15777 ;; Hardware stack levels used:    1
 15778 ;; Hardware stack levels required when called:    2
 15779 ;; This function calls:
 15780 ;;		_TMR6_CallBack
 15781 ;; This function is called by:
 15782 ;;		Interrupt level 2
 15783 ;; This function uses a non-reentrant model
 15784 ;;
 15785                           
 15786                           	psect	text97
 15787  006058                     __ptext97:
 15788                           	opt callstack 0
 15789  006058                     _TMR6_ISR:
 15790                           	opt callstack 17
 15791                           
 15792                           ;incstack = 0
 15793  006058  0060  F0EC  F05B   	movff	btemp,??_TMR6_ISR
 15794  00605E  EE13  F130         	lfsr	1,___inthi_sp
 15795                           
 15796                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 15797  006062  0139               	movlb	57	; () banked
 15798  006064  91A9               	bcf	169,0,b	;volatile
 15799                           
 15800                           ; BSR set to: 57
 15801                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 15802  006066  EC4D  F02F         	call	_TMR6_CallBack	;wreg free
 15803  00606A  0060  F16C  F03B   	movff	??_TMR6_ISR,btemp
 15804  006070  0011               	retfie		f
 15805  006072                     __end_of_TMR6_ISR:
 15806                           	opt callstack 0
 15807                           
 15808 ;; *************** function _TMR6_CallBack *****************
 15809 ;; Defined at:
 15810 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 15811 ;; Parameters:    Size  Location     Type
 15812 ;;		None
 15813 ;; Auto vars:     Size  Location     Type
 15814 ;;		None
 15815 ;; Return value:  Size  Location     Type
 15816 ;;                  1  [STACK] void 
 15817 ;; Registers used:
 15818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 15819 ;; Tracked objects:
 15820 ;;		On entry : 3F/39
 15821 ;;		On exit  : 0/0
 15822 ;;		Unchanged: 0/0
 15823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15828 ;;Total ram usage:        0 bytes
 15829 ;; Hardware stack levels used:    1
 15830 ;; Hardware stack levels required when called:    1
 15831 ;; This function calls:
 15832 ;;		Absolute function
 15833 ;;		_TMR6_DefaultInterruptHandler
 15834 ;; This function is called by:
 15835 ;;		_TMR6_ISR
 15836 ;; This function uses a reentrant model
 15837 ;;
 15838                           
 15839                           	psect	text98
 15840  005E9A                     __ptext98:
 15841                           	opt callstack 0
 15842  005E9A                     _TMR6_CallBack:
 15843                           	opt callstack 17
 15844                           
 15845                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 15846                           
 15847                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15848                           ;incstack = 0
 15849  005E9A  0100               	movlb	0	; () banked
 15850  005E9C  5193               	movf	_TMR6_InterruptHandler& (0+255),w,b
 15851  005E9E  1194               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 15852  005EA0  1195               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 15853  005EA2  B4D8               	btfsc	status,2,c
 15854  005EA4  0012               	return	
 15855                           
 15856                           ; BSR set to: 0
 15857                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 15858  005EA6  D801               	call	u500_48
 15859  005EA8  0012               	return	
 15860  005EAA                     u500_48:
 15861  005EAA  0005               	push	
 15862  005EAC  6EFA               	movwf	pclath,c
 15863  005EAE  5193               	movf	_TMR6_InterruptHandler& (0+255),w,b
 15864  005EB0  6EFD               	movwf	tosl,c
 15865  005EB2  5194               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 15866  005EB4  6EFE               	movwf	tosh,c
 15867  005EB6  5195               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 15868  005EB8  6EFF               	movwf	tosu,c
 15869  005EBA  50FA               	movf	pclath,w,c
 15870  005EBC  0012               	return		;indir
 15871  005EBE                     __end_of_TMR6_CallBack:
 15872                           	opt callstack 0
 15873                           
 15874 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 15875 ;; Defined at:
 15876 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 15877 ;; Parameters:    Size  Location     Type
 15878 ;;		None
 15879 ;; Auto vars:     Size  Location     Type
 15880 ;;  i               1  [STACK] unsigned char 
 15881 ;; Return value:  Size  Location     Type
 15882 ;;                  1  [STACK] void 
 15883 ;; Registers used:
 15884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 15885 ;; Tracked objects:
 15886 ;;		On entry : 3F/0
 15887 ;;		On exit  : 0/0
 15888 ;;		Unchanged: 0/0
 15889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15894 ;;Total ram usage:        0 bytes
 15895 ;; Hardware stack levels used:    1
 15896 ;; This function calls:
 15897 ;;		Nothing
 15898 ;; This function is called by:
 15899 ;;		_TMR6_Initialize
 15900 ;;		_TMR6_CallBack
 15901 ;; This function uses a reentrant model
 15902 ;;
 15903                           
 15904                           	psect	text99
 15905  005864                     __ptext99:
 15906                           	opt callstack 0
 15907  005864                     _TMR6_DefaultInterruptHandler:
 15908                           	opt callstack 0
 15909                           
 15910                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15911  005864  52E6               	movf	postinc1,f,c
 15912                           
 15913                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 15914                           ;stkvar	_i @ sp[(-1)+0]
 15915                           
 15916                           ;incstack = 0
 15917  005866  0EFF               	movlw	-1
 15918  005868  6AE3               	clrf	plusw1,c
 15919  00586A                     l7835:
 15920                           
 15921                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 15922                           ;stkvar	_i @ sp[(-1)+0]
 15923  00586A  0EFF               	movlw	-1
 15924  00586C  50E3               	movf	plusw1,w,c
 15925  00586E  0D02               	mullw	2
 15926  005870  50F3               	movf	prodl,w,c
 15927  005872  0F79               	addlw	low _tickCount
 15928  005874  6ED9               	movwf	fsr2l,c
 15929  005876  6ADA               	clrf	fsr2h,c
 15930  005878  50DE               	movf	postinc2,w,c
 15931  00587A  10DE               	iorwf	postinc2,w,c
 15932  00587C  B4D8               	btfsc	status,2,c
 15933  00587E  D00A               	goto	l7839
 15934                           
 15935                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 15936                           ;stkvar	_i @ sp[(-1)+0]
 15937  005880  0EFF               	movlw	-1
 15938  005882  50E3               	movf	plusw1,w,c
 15939  005884  0D02               	mullw	2
 15940  005886  50F3               	movf	prodl,w,c
 15941  005888  0F79               	addlw	low _tickCount
 15942  00588A  6ED9               	movwf	fsr2l,c
 15943  00588C  6ADA               	clrf	fsr2h,c
 15944  00588E  06DE               	decf	postinc2,f,c
 15945  005890  0E00               	movlw	0
 15946  005892  5ADD               	subwfb	postdec2,f,c
 15947  005894                     l7839:
 15948                           
 15949                           ;mcc_generated_files/tmr6.c: 207:  }
 15950                           ;stkvar	_i @ sp[(-1)+0]
 15951  005894  0EFF               	movlw	-1
 15952  005896  2AE3               	incf	plusw1,f,c
 15953                           
 15954                           ;stkvar	_i @ sp[(-1)+0]
 15955  005898  0EFF               	movlw	-1
 15956  00589A  006F FF8C  F03B    	movff	plusw1,btemp
 15957  0058A0  0E05               	movlw	5
 15958  0058A2  643B               	cpfsgt	btemp,c
 15959  0058A4  D7E2               	goto	l7835
 15960                           
 15961                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15962  0058A6  52E5               	movf	postdec1,f,c
 15963  0058A8  0012               	return		;funcret
 15964  0058AA                     __end_of_TMR6_DefaultInterruptHandler:
 15965                           	opt callstack 0
 15966                           
 15967 ;; *************** function _DMA1_DMASCNT_ISR *****************
 15968 ;; Defined at:
 15969 ;;		line 126 in file "mcc_generated_files/dma1.c"
 15970 ;; Parameters:    Size  Location     Type
 15971 ;;		None
 15972 ;; Auto vars:     Size  Location     Type
 15973 ;;		None
 15974 ;; Return value:  Size  Location     Type
 15975 ;;                  1    wreg      void 
 15976 ;; Registers used:
 15977 ;;		None
 15978 ;; Tracked objects:
 15979 ;;		On entry : 0/0
 15980 ;;		On exit  : 3F/0
 15981 ;;		Unchanged: 0/0
 15982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15987 ;;Total ram usage:        0 bytes
 15988 ;; Hardware stack levels used:    1
 15989 ;; This function calls:
 15990 ;;		Nothing
 15991 ;; This function is called by:
 15992 ;;		Interrupt level 2
 15993 ;; This function uses a non-reentrant model
 15994 ;;
 15995                           
 15996                           	psect	text100
 15997  00610C                     __ptext100:
 15998                           	opt callstack 0
 15999  00610C                     _DMA1_DMASCNT_ISR:
 16000                           	opt callstack 19
 16001                           
 16002                           ;incstack = 0
 16003  00610C  EE13  F130         	lfsr	1,___inthi_sp
 16004                           
 16005                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 16006  006110  0139               	movlb	57	; () banked
 16007  006112  91A2               	bcf	162,0,b	;volatile
 16008                           
 16009                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 16010  006114  0100               	movlb	0	; () banked
 16011  006116  976D               	bcf	_spi_link& (0+255),3,b	;volatile
 16012                           
 16013                           ; BSR set to: 0
 16014  006118  0011               	retfie		f
 16015  00611A                     __end_of_DMA1_DMASCNT_ISR:
 16016                           	opt callstack 0
 16017                           
 16018 ;; *************** function _DMA1_DMADCNT_ISR *****************
 16019 ;; Defined at:
 16020 ;;		line 133 in file "mcc_generated_files/dma1.c"
 16021 ;; Parameters:    Size  Location     Type
 16022 ;;		None
 16023 ;; Auto vars:     Size  Location     Type
 16024 ;;		None
 16025 ;; Return value:  Size  Location     Type
 16026 ;;                  1    wreg      void 
 16027 ;; Registers used:
 16028 ;;		None
 16029 ;; Tracked objects:
 16030 ;;		On entry : 0/0
 16031 ;;		On exit  : 3F/39
 16032 ;;		Unchanged: 0/0
 16033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16038 ;;Total ram usage:        0 bytes
 16039 ;; Hardware stack levels used:    1
 16040 ;; This function calls:
 16041 ;;		Nothing
 16042 ;; This function is called by:
 16043 ;;		Interrupt level 2
 16044 ;; This function uses a non-reentrant model
 16045 ;;
 16046                           
 16047                           	psect	text101
 16048  006124                     __ptext101:
 16049                           	opt callstack 0
 16050  006124                     _DMA1_DMADCNT_ISR:
 16051                           	opt callstack 19
 16052                           
 16053                           ; BSR set to: 0
 16054                           ;incstack = 0
 16055  006124  EE13  F130         	lfsr	1,___inthi_sp
 16056                           
 16057                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 16058  006128  0139               	movlb	57	; () banked
 16059  00612A  93A2               	bcf	162,1,b	;volatile
 16060                           
 16061                           ; BSR set to: 57
 16062  00612C  0011               	retfie		f
 16063  00612E                     __end_of_DMA1_DMADCNT_ISR:
 16064                           	opt callstack 0
 16065                           
 16066 ;; *************** function _DMA1_DMAA_ISR *****************
 16067 ;; Defined at:
 16068 ;;		line 143 in file "mcc_generated_files/dma1.c"
 16069 ;; Parameters:    Size  Location     Type
 16070 ;;		None
 16071 ;; Auto vars:     Size  Location     Type
 16072 ;;		None
 16073 ;; Return value:  Size  Location     Type
 16074 ;;                  1    wreg      void 
 16075 ;; Registers used:
 16076 ;;		None
 16077 ;; Tracked objects:
 16078 ;;		On entry : 0/0
 16079 ;;		On exit  : 3F/39
 16080 ;;		Unchanged: 0/0
 16081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16086 ;;Total ram usage:        0 bytes
 16087 ;; Hardware stack levels used:    1
 16088 ;; This function calls:
 16089 ;;		Nothing
 16090 ;; This function is called by:
 16091 ;;		Interrupt level 2
 16092 ;; This function uses a non-reentrant model
 16093 ;;
 16094                           
 16095                           	psect	text102
 16096  006130                     __ptext102:
 16097                           	opt callstack 0
 16098  006130                     _DMA1_DMAA_ISR:
 16099                           	opt callstack 19
 16100                           
 16101                           ; BSR set to: 57
 16102                           ;incstack = 0
 16103  006130  EE13  F130         	lfsr	1,___inthi_sp
 16104                           
 16105                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 16106  006134  0139               	movlb	57	; () banked
 16107  006136  97A2               	bcf	162,3,b	;volatile
 16108                           
 16109                           ; BSR set to: 57
 16110  006138  0011               	retfie		f
 16111  00613A                     __end_of_DMA1_DMAA_ISR:
 16112                           	opt callstack 0
 16113                           
 16114 ;; *************** function _DMA1_DMAOR_ISR *****************
 16115 ;; Defined at:
 16116 ;;		line 154 in file "mcc_generated_files/dma1.c"
 16117 ;; Parameters:    Size  Location     Type
 16118 ;;		None
 16119 ;; Auto vars:     Size  Location     Type
 16120 ;;		None
 16121 ;; Return value:  Size  Location     Type
 16122 ;;                  1    wreg      void 
 16123 ;; Registers used:
 16124 ;;		None
 16125 ;; Tracked objects:
 16126 ;;		On entry : 0/0
 16127 ;;		On exit  : 3F/39
 16128 ;;		Unchanged: 0/0
 16129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16134 ;;Total ram usage:        0 bytes
 16135 ;; Hardware stack levels used:    1
 16136 ;; This function calls:
 16137 ;;		Nothing
 16138 ;; This function is called by:
 16139 ;;		Interrupt level 2
 16140 ;; This function uses a non-reentrant model
 16141 ;;
 16142                           
 16143                           	psect	text103
 16144  00613C                     __ptext103:
 16145                           	opt callstack 0
 16146  00613C                     _DMA1_DMAOR_ISR:
 16147                           	opt callstack 19
 16148                           
 16149                           ; BSR set to: 57
 16150                           ;incstack = 0
 16151  00613C  EE13  F130         	lfsr	1,___inthi_sp
 16152                           
 16153                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 16154  006140  0139               	movlb	57	; () banked
 16155  006142  95A2               	bcf	162,2,b	;volatile
 16156                           
 16157                           ; BSR set to: 57
 16158  006144  0011               	retfie		f
 16159  006146                     __end_of_DMA1_DMAOR_ISR:
 16160                           	opt callstack 0
 16161                           
 16162 ;; *************** function _TMR5_ISR *****************
 16163 ;; Defined at:
 16164 ;;		line 163 in file "mcc_generated_files/tmr5.c"
 16165 ;; Parameters:    Size  Location     Type
 16166 ;;		None
 16167 ;; Auto vars:     Size  Location     Type
 16168 ;;		None
 16169 ;; Return value:  Size  Location     Type
 16170 ;;                  1    wreg      void 
 16171 ;; Registers used:
 16172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 16173 ;; Tracked objects:
 16174 ;;		On entry : 0/0
 16175 ;;		On exit  : 0/0
 16176 ;;		Unchanged: 0/0
 16177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16180 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16181 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16182 ;;Total ram usage:        1 bytes
 16183 ;; Hardware stack levels used:    1
 16184 ;; Hardware stack levels required when called:    2
 16185 ;; This function calls:
 16186 ;;		_TMR5_CallBack
 16187 ;;		_TMR5_WriteTimer
 16188 ;; This function is called by:
 16189 ;;		Interrupt level 2
 16190 ;; This function uses a non-reentrant model
 16191 ;;
 16192                           
 16193                           	psect	text104
 16194  0059E8                     __ptext104:
 16195                           	opt callstack 0
 16196  0059E8                     _TMR5_ISR:
 16197                           	opt callstack 17
 16198                           
 16199                           ; BSR set to: 57
 16200                           ;incstack = 0
 16201  0059E8  0060  F118  F05C   	movff	btemp+11,??_TMR5_ISR
 16202  0059EE  EE13  F130         	lfsr	1,___inthi_sp
 16203                           
 16204                           ;mcc_generated_files/tmr5.c: 165:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 168:  PIR8bits.TMR5IF = 0;
 16205  0059F2  0139               	movlb	57	; () banked
 16206  0059F4  9DA8               	bcf	168,6,b	;volatile
 16207                           
 16208                           ; BSR set to: 57
 16209                           ;mcc_generated_files/tmr5.c: 169:  TMR5_WriteTimer(timer5ReloadVal);
 16210  0059F6  0060  F0A3  FFE6   	movff	_timer5ReloadVal,postinc1
 16211  0059FC  0060  F0A7  FFE6   	movff	_timer5ReloadVal+1,postinc1
 16212  005A02  EC76  F02C         	call	_TMR5_WriteTimer	;wreg free
 16213                           
 16214                           ;mcc_generated_files/tmr5.c: 172:  if (++CountCallBack >= 50) {
 16215  005A06  4A26               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 16216  005A08  2A27               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 16217  005A0A  5027               	movf	TMR5_ISR@CountCallBack+1,w,c	;volatile
 16218  005A0C  E104               	bnz	i2u419_40
 16219  005A0E  0E32               	movlw	50
 16220  005A10  5C26               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 16221  005A12  A0D8               	btfss	status,0,c
 16222  005A14  D004               	goto	i2l1135
 16223  005A16                     i2u419_40:
 16224                           
 16225                           ;mcc_generated_files/tmr5.c: 174:   TMR5_CallBack();
 16226  005A16  EC5F  F02F         	call	_TMR5_CallBack	;wreg free
 16227                           
 16228                           ;mcc_generated_files/tmr5.c: 177:   CountCallBack = 0;
 16229  005A1A  6A26               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 16230  005A1C  6A27               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 16231  005A1E                     i2l1135:
 16232  005A1E  0060  F170  F046   	movff	??_TMR5_ISR,btemp+11
 16233  005A24  0011               	retfie		f
 16234  005A26                     __end_of_TMR5_ISR:
 16235                           	opt callstack 0
 16236                           
 16237 ;; *************** function _TMR5_WriteTimer *****************
 16238 ;; Defined at:
 16239 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 16240 ;; Parameters:    Size  Location     Type
 16241 ;;  timerVal        2  [STACK] unsigned short 
 16242 ;; Auto vars:     Size  Location     Type
 16243 ;;		None
 16244 ;; Return value:  Size  Location     Type
 16245 ;;                  1  [STACK] void 
 16246 ;; Registers used:
 16247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 16248 ;; Tracked objects:
 16249 ;;		On entry : 3F/39
 16250 ;;		On exit  : 0/0
 16251 ;;		Unchanged: 0/0
 16252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16257 ;;Total ram usage:        0 bytes
 16258 ;; Hardware stack levels used:    1
 16259 ;; This function calls:
 16260 ;;		Nothing
 16261 ;; This function is called by:
 16262 ;;		_TMR5_ISR
 16263 ;; This function uses a reentrant model
 16264 ;;
 16265                           
 16266                           	psect	text105
 16267  0058EC                     __ptext105:
 16268                           	opt callstack 0
 16269  0058EC                     _TMR5_WriteTimer:
 16270                           	opt callstack 18
 16271                           
 16272                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:  if (T5CONbits.NOT_SYNC == 1) {
 16273                           
 16274                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16275                           ;incstack = 0
 16276  0058EC  A49A               	btfss	16282,2,c	;volatile
 16277  0058EE  D00F               	goto	l3941
 16278                           
 16279                           ;mcc_generated_files/tmr5.c: 133:   T5CONbits.TMR5ON = 0;
 16280  0058F0  909A               	bcf	16282,0,c	;volatile
 16281                           
 16282                           ;mcc_generated_files/tmr5.c: 136:   TMR5H = (timerVal >> 8);
 16283                           ;stkvar	_timerVal @ sp[(0)+-2]
 16284  0058F2  0EFF               	movlw	255
 16285  0058F4  24E1               	addwf	fsr1l,w,c
 16286  0058F6  6ED9               	movwf	fsr2l,c
 16287  0058F8  0EFF               	movlw	255
 16288  0058FA  20E2               	addwfc	fsr1h,w,c
 16289  0058FC  6EDA               	movwf	fsr2h,c
 16290  0058FE  50DF               	movf	indf2,w,c
 16291  005900  6E99               	movwf	16281,c	;volatile
 16292                           
 16293                           ;mcc_generated_files/tmr5.c: 137:   TMR5L = timerVal;
 16294                           ;stkvar	_timerVal @ sp[(0)+-2]
 16295  005902  0EFE               	movlw	-2
 16296  005904  006F FF8F FF98     	movff	plusw1,16280	;volatile
 16297                           
 16298                           ;mcc_generated_files/tmr5.c: 140:   T5CONbits.TMR5ON = 1;
 16299  00590A  809A               	bsf	16282,0,c	;volatile
 16300                           
 16301                           ;mcc_generated_files/tmr5.c: 141:  } else {
 16302  00590C  D00C               	goto	l1118
 16303  00590E                     l3941:
 16304                           
 16305                           ;mcc_generated_files/tmr5.c: 143:   TMR5H = (timerVal >> 8);
 16306                           ;stkvar	_timerVal @ sp[(0)+-2]
 16307  00590E  0EFF               	movlw	255
 16308  005910  24E1               	addwf	fsr1l,w,c
 16309  005912  6ED9               	movwf	fsr2l,c
 16310  005914  0EFF               	movlw	255
 16311  005916  20E2               	addwfc	fsr1h,w,c
 16312  005918  6EDA               	movwf	fsr2h,c
 16313  00591A  50DF               	movf	indf2,w,c
 16314  00591C  6E99               	movwf	16281,c	;volatile
 16315                           
 16316                           ;mcc_generated_files/tmr5.c: 144:   TMR5L = timerVal;
 16317                           ;stkvar	_timerVal @ sp[(0)+-2]
 16318  00591E  0EFE               	movlw	-2
 16319  005920  006F FF8F FF98     	movff	plusw1,16280	;volatile
 16320  005926                     l1118:
 16321                           
 16322                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 16323  005926  52E5               	movf	postdec1,f,c
 16324  005928  52E5               	movf	postdec1,f,c
 16325  00592A  0012               	return		;funcret
 16326  00592C                     __end_of_TMR5_WriteTimer:
 16327                           	opt callstack 0
 16328                           
 16329 ;; *************** function _TMR5_CallBack *****************
 16330 ;; Defined at:
 16331 ;;		line 181 in file "mcc_generated_files/tmr5.c"
 16332 ;; Parameters:    Size  Location     Type
 16333 ;;		None
 16334 ;; Auto vars:     Size  Location     Type
 16335 ;;		None
 16336 ;; Return value:  Size  Location     Type
 16337 ;;                  1  [STACK] void 
 16338 ;; Registers used:
 16339 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 16340 ;; Tracked objects:
 16341 ;;		On entry : 0/39
 16342 ;;		On exit  : 0/0
 16343 ;;		Unchanged: 0/0
 16344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16349 ;;Total ram usage:        0 bytes
 16350 ;; Hardware stack levels used:    1
 16351 ;; Hardware stack levels required when called:    1
 16352 ;; This function calls:
 16353 ;;		Absolute function
 16354 ;;		_TMR5_DefaultInterruptHandler
 16355 ;; This function is called by:
 16356 ;;		_TMR5_ISR
 16357 ;; This function uses a reentrant model
 16358 ;;
 16359                           
 16360                           	psect	text106
 16361  005EBE                     __ptext106:
 16362                           	opt callstack 0
 16363  005EBE                     _TMR5_CallBack:
 16364                           	opt callstack 17
 16365                           
 16366                           ;mcc_generated_files/tmr5.c: 184:  if (TMR5_InterruptHandler) {
 16367                           
 16368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16369                           ;incstack = 0
 16370  005EBE  0100               	movlb	0	; () banked
 16371  005EC0  5190               	movf	_TMR5_InterruptHandler& (0+255),w,b
 16372  005EC2  1191               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 16373  005EC4  1192               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 16374  005EC6  B4D8               	btfsc	status,2,c
 16375  005EC8  0012               	return	
 16376                           
 16377                           ; BSR set to: 0
 16378                           ;mcc_generated_files/tmr5.c: 185:   TMR5_InterruptHandler();
 16379  005ECA  D801               	call	u343_48
 16380  005ECC  0012               	return	
 16381  005ECE                     u343_48:
 16382  005ECE  0005               	push	
 16383  005ED0  6EFA               	movwf	pclath,c
 16384  005ED2  5190               	movf	_TMR5_InterruptHandler& (0+255),w,b
 16385  005ED4  6EFD               	movwf	tosl,c
 16386  005ED6  5191               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 16387  005ED8  6EFE               	movwf	tosh,c
 16388  005EDA  5192               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 16389  005EDC  6EFF               	movwf	tosu,c
 16390  005EDE  50FA               	movf	pclath,w,c
 16391  005EE0  0012               	return		;indir
 16392  005EE2                     __end_of_TMR5_CallBack:
 16393                           	opt callstack 0
 16394                           
 16395 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 16396 ;; Defined at:
 16397 ;;		line 194 in file "mcc_generated_files/tmr5.c"
 16398 ;; Parameters:    Size  Location     Type
 16399 ;;		None
 16400 ;; Auto vars:     Size  Location     Type
 16401 ;;		None
 16402 ;; Return value:  Size  Location     Type
 16403 ;;                  1  [STACK] void 
 16404 ;; Registers used:
 16405 ;;		wreg, status,2, status,0, btemp+11
 16406 ;; Tracked objects:
 16407 ;;		On entry : 3F/0
 16408 ;;		On exit  : 0/0
 16409 ;;		Unchanged: 0/0
 16410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16415 ;;Total ram usage:        0 bytes
 16416 ;; Hardware stack levels used:    1
 16417 ;; This function calls:
 16418 ;;		Nothing
 16419 ;; This function is called by:
 16420 ;;		_TMR5_Initialize
 16421 ;;		_TMR5_CallBack
 16422 ;; This function uses a reentrant model
 16423 ;;
 16424                           
 16425                           	psect	text107
 16426  006072                     __ptext107:
 16427                           	opt callstack 0
 16428  006072                     _TMR5_DefaultInterruptHandler:
 16429                           	opt callstack 17
 16430                           
 16431                           ;mcc_generated_files/tmr5.c: 198:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 16432                           
 16433                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16434                           ;incstack = 0
 16435  006072  A0BE               	btfss	16318,0,c	;volatile
 16436  006074  D002               	goto	u325_40
 16437  006076  0E01               	movlw	1
 16438  006078  D001               	goto	u325_46
 16439  00607A                     u325_40:
 16440  00607A  0E00               	movlw	0
 16441  00607C                     u325_46:
 16442  00607C  0AFF               	xorlw	255
 16443  00607E  6E46               	movwf	btemp+11,c
 16444  006080  50BE               	movf	16318,w,c	;volatile
 16445  006082  1846               	xorwf	btemp+11,w,c
 16446  006084  0BFE               	andlw	-2
 16447  006086  1846               	xorwf	btemp+11,w,c
 16448  006088  6EBE               	movwf	16318,c	;volatile
 16449                           
 16450                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16451  00608A  0012               	return		;funcret
 16452  00608C                     __end_of_TMR5_DefaultInterruptHandler:
 16453                           	opt callstack 0
 16454                           
 16455                           ;
 16456                           ; Interrupt Vector Table @ 0x8
 16457                           ;
 16458                           
 16459                           	psect	ivt0x8
 16460  000008                     __pivt0x8:
 16461                           	opt callstack 0
 16462  000008                     ivt0x8_base:
 16463                           	opt callstack 0
 16464                           
 16465                           ; Vector 0 : SWINT
 16466  000008  185D               	dw	_Default_ISR shr (0+2)
 16467                           
 16468                           ; Vector 1 : HLVD
 16469  00000A  185D               	dw	_Default_ISR shr (0+2)
 16470                           
 16471                           ; Vector 2 : OSF
 16472  00000C  185D               	dw	_Default_ISR shr (0+2)
 16473                           
 16474                           ; Vector 3 : CSW
 16475  00000E  185D               	dw	_Default_ISR shr (0+2)
 16476                           
 16477                           ; Vector 4 : NVM
 16478  000010  185D               	dw	_Default_ISR shr (0+2)
 16479                           
 16480                           ; Vector 5 : SCAN
 16481  000012  185D               	dw	_Default_ISR shr (0+2)
 16482                           
 16483                           ; Vector 6 : CRC
 16484  000014  185D               	dw	_Default_ISR shr (0+2)
 16485                           
 16486                           ; Vector 7 : IOC
 16487  000016  185D               	dw	_Default_ISR shr (0+2)
 16488                           
 16489                           ; Vector 8 : INT0
 16490  000018  1837               	dw	_INT0_ISR shr (0+2)
 16491                           
 16492                           ; Vector 9 : ZCD
 16493  00001A  185D               	dw	_Default_ISR shr (0+2)
 16494                           
 16495                           ; Vector 10 : AD
 16496  00001C  16E8               	dw	_ADCC_ISR shr (0+2)
 16497                           
 16498                           ; Vector 11 : ADT
 16499  00001E  185D               	dw	_Default_ISR shr (0+2)
 16500                           
 16501                           ; Vector 12 : CMP1
 16502  000020  185D               	dw	_Default_ISR shr (0+2)
 16503                           
 16504                           ; Vector 13 : SMT1
 16505  000022  185D               	dw	_Default_ISR shr (0+2)
 16506                           
 16507                           ; Vector 14 : SMT1PRA
 16508  000024  185D               	dw	_Default_ISR shr (0+2)
 16509                           
 16510                           ; Vector 15 : SMT1PRW
 16511  000026  185D               	dw	_Default_ISR shr (0+2)
 16512                           
 16513                           ; Vector 16 : DMA1SCNT
 16514  000028  1843               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 16515                           
 16516                           ; Vector 17 : DMA1DCNT
 16517  00002A  1849               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 16518                           
 16519                           ; Vector 18 : DMA1OR
 16520  00002C  184F               	dw	_DMA1_DMAOR_ISR shr (0+2)
 16521                           
 16522                           ; Vector 19 : DMA1A
 16523  00002E  184C               	dw	_DMA1_DMAA_ISR shr (0+2)
 16524                           
 16525                           ; Vector 20 : SPI1RX
 16526  000030  185D               	dw	_Default_ISR shr (0+2)
 16527                           
 16528                           ; Vector 21 : SPI1TX
 16529  000032  185D               	dw	_Default_ISR shr (0+2)
 16530                           
 16531                           ; Vector 22 : SPI1
 16532  000034  185D               	dw	_Default_ISR shr (0+2)
 16533                           
 16534                           ; Vector 23 : I2C1RX
 16535  000036  185D               	dw	_Default_ISR shr (0+2)
 16536                           
 16537                           ; Vector 24 : I2C1TX
 16538  000038  185D               	dw	_Default_ISR shr (0+2)
 16539                           
 16540                           ; Vector 25 : I2C1
 16541  00003A  185D               	dw	_Default_ISR shr (0+2)
 16542                           
 16543                           ; Vector 26 : I2C1E
 16544  00003C  185D               	dw	_Default_ISR shr (0+2)
 16545                           
 16546                           ; Vector 27 : U1RX
 16547  00003E  1789               	dw	_UART1_rx_vect_isr shr (0+2)
 16548                           
 16549                           ; Vector 28 : U1TX
 16550  000040  177F               	dw	_UART1_tx_vect_isr shr (0+2)
 16551                           
 16552                           ; Vector 29 : U1E
 16553  000042  185D               	dw	_Default_ISR shr (0+2)
 16554                           
 16555                           ; Vector 30 : U1
 16556  000044  185D               	dw	_Default_ISR shr (0+2)
 16557                           
 16558                           ; Vector 31 : TMR0
 16559  000046  185D               	dw	_Default_ISR shr (0+2)
 16560                           
 16561                           ; Vector 32 : TMR1
 16562  000048  185D               	dw	_Default_ISR shr (0+2)
 16563                           
 16564                           ; Vector 33 : TMR1G
 16565  00004A  185D               	dw	_Default_ISR shr (0+2)
 16566                           
 16567                           ; Vector 34 : TMR2
 16568  00004C  185D               	dw	_Default_ISR shr (0+2)
 16569                           
 16570                           ; Vector 35 : CCP1
 16571  00004E  185D               	dw	_Default_ISR shr (0+2)
 16572                           
 16573                           ; Vector 36 : Undefined
 16574  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 16575                           
 16576                           ; Vector 37 : NCO1
 16577  000052  185D               	dw	_Default_ISR shr (0+2)
 16578                           
 16579                           ; Vector 38 : CWG1
 16580  000054  185D               	dw	_Default_ISR shr (0+2)
 16581                           
 16582                           ; Vector 39 : CLC1
 16583  000056  185D               	dw	_Default_ISR shr (0+2)
 16584                           
 16585                           ; Vector 40 : INT1
 16586  000058  183B               	dw	_INT1_ISR shr (0+2)
 16587                           
 16588                           ; Vector 41 : CMP2
 16589  00005A  185D               	dw	_Default_ISR shr (0+2)
 16590                           
 16591                           ; Vector 42 : DMA2SCNT
 16592  00005C  185D               	dw	_Default_ISR shr (0+2)
 16593                           
 16594                           ; Vector 43 : DMA2DCNT
 16595  00005E  185D               	dw	_Default_ISR shr (0+2)
 16596                           
 16597                           ; Vector 44 : DMA2OR
 16598  000060  185D               	dw	_Default_ISR shr (0+2)
 16599                           
 16600                           ; Vector 45 : DMA2A
 16601  000062  185D               	dw	_Default_ISR shr (0+2)
 16602                           
 16603                           ; Vector 46 : I2C2RX
 16604  000064  185D               	dw	_Default_ISR shr (0+2)
 16605                           
 16606                           ; Vector 47 : I2C2TX
 16607  000066  185D               	dw	_Default_ISR shr (0+2)
 16608                           
 16609                           ; Vector 48 : I2C2
 16610  000068  185D               	dw	_Default_ISR shr (0+2)
 16611                           
 16612                           ; Vector 49 : I2C2E
 16613  00006A  185D               	dw	_Default_ISR shr (0+2)
 16614                           
 16615                           ; Vector 50 : U2RX
 16616  00006C  179D               	dw	_UART2_rx_vect_isr shr (0+2)
 16617                           
 16618                           ; Vector 51 : U2TX
 16619  00006E  1793               	dw	_UART2_tx_vect_isr shr (0+2)
 16620                           
 16621                           ; Vector 52 : U2E
 16622  000070  185D               	dw	_Default_ISR shr (0+2)
 16623                           
 16624                           ; Vector 53 : U2
 16625  000072  185D               	dw	_Default_ISR shr (0+2)
 16626                           
 16627                           ; Vector 54 : TMR3
 16628  000074  185D               	dw	_Default_ISR shr (0+2)
 16629                           
 16630                           ; Vector 55 : TMR3G
 16631  000076  185D               	dw	_Default_ISR shr (0+2)
 16632                           
 16633                           ; Vector 56 : TMR4
 16634  000078  185D               	dw	_Default_ISR shr (0+2)
 16635                           
 16636                           ; Vector 57 : CCP2
 16637  00007A  185D               	dw	_Default_ISR shr (0+2)
 16638                           
 16639                           ; Vector 58 : Undefined
 16640  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 16641                           
 16642                           ; Vector 59 : CWG2
 16643  00007E  185D               	dw	_Default_ISR shr (0+2)
 16644                           
 16645                           ; Vector 60 : CLC2
 16646  000080  185D               	dw	_Default_ISR shr (0+2)
 16647                           
 16648                           ; Vector 61 : INT2
 16649  000082  183F               	dw	_INT2_ISR shr (0+2)
 16650                           
 16651                           ; Vector 62 : Undefined
 16652  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 16653                           
 16654                           ; Vector 63 : Undefined
 16655  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 16656                           
 16657                           ; Vector 64 : Undefined
 16658  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 16659                           
 16660                           ; Vector 65 : Undefined
 16661  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 16662                           
 16663                           ; Vector 66 : Undefined
 16664  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 16665                           
 16666                           ; Vector 67 : Undefined
 16667  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 16668                           
 16669                           ; Vector 68 : Undefined
 16670  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 16671                           
 16672                           ; Vector 69 : Undefined
 16673  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 16674                           
 16675                           ; Vector 70 : TMR5
 16676  000094  167A               	dw	_TMR5_ISR shr (0+2)
 16677                           
 16678                           ; Vector 71 : TMR5G
 16679  000096  185D               	dw	_Default_ISR shr (0+2)
 16680                           
 16681                           ; Vector 72 : TMR6
 16682  000098  1816               	dw	_TMR6_ISR shr (0+2)
 16683                           
 16684                           ; Vector 73 : CCP3
 16685  00009A  185D               	dw	_Default_ISR shr (0+2)
 16686                           
 16687                           ; Vector 74 : CWG3
 16688  00009C  185D               	dw	_Default_ISR shr (0+2)
 16689                           
 16690                           ; Vector 75 : CLC3
 16691  00009E  185D               	dw	_Default_ISR shr (0+2)
 16692                           
 16693                           ; Vector 76 : Undefined
 16694  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 16695                           
 16696                           ; Vector 77 : Undefined
 16697  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 16698                           
 16699                           ; Vector 78 : Undefined
 16700  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 16701                           
 16702                           ; Vector 79 : Undefined
 16703  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 16704                           
 16705                           ; Vector 80 : CCP4
 16706  0000A8  185D               	dw	_Default_ISR shr (0+2)
 16707                           
 16708                           ; Vector 81 : CLC4
 16709  0000AA  185D               	dw	_Default_ISR shr (0+2)
 16710  0000AC                     ivt0x8_undefint:
 16711                           	opt callstack 0
 16712  0000AC  00FF               	reset	
 16713                           
 16714                           	psect	text108
 16715  000000                     __ptext108:
 16716                           	opt callstack 0
 16717                           
 16718                           	psect	rparam
 16719  0000                     
 16720                           	psect	temp
 16721  00003B                     btemp:
 16722                           	opt callstack 0
 16723  00003B                     	ds	32
 16724  0000                     wtemp0	set	btemp
 16725  0000                     wtemp1	set	btemp+2
 16726  0000                     wtemp2	set	btemp+4
 16727  0000                     wtemp3	set	btemp+6
 16728  0000                     wtemp4	set	btemp+8
 16729  0000                     wtemp5	set	btemp+10
 16730  0000                     wtemp8	set	btemp+1
 16731  0000                     ttemp0	set	btemp
 16732  0000                     ttemp1	set	btemp+3
 16733  0000                     ttemp2	set	btemp+6
 16734  0000                     ttemp3	set	btemp+9
 16735  0000                     ttemp5	set	btemp+1
 16736  0000                     ttemp6	set	btemp+4
 16737  0000                     ttemp7	set	btemp+8
 16738  0000                     ltemp0	set	btemp
 16739  0000                     ltemp1	set	btemp+4
 16740  0000                     ltemp2	set	btemp+8
 16741  0000                     lltemp0	set	btemp
 16742  0000                     lltemp1	set	btemp+8
 16743  0000                     lltemp2	set	btemp+16
 16744  0000                     lltemp3	set	btemp+24
 16745                           tosu	equ	0x3FFF
 16746                           tosh	equ	0x3FFE
 16747                           tosl	equ	0x3FFD
 16748                           stkptr	equ	0x3FFC
 16749                           pclatu	equ	0x3FFB
 16750                           pclath	equ	0x3FFA
 16751                           pcl	equ	0x3FF9
 16752                           tblptru	equ	0x3FF8
 16753                           tblptrh	equ	0x3FF7
 16754                           tblptrl	equ	0x3FF6
 16755                           tablat	equ	0x3FF5
 16756                           prodh	equ	0x3FF4
 16757                           prodl	equ	0x3FF3
 16758                           indf0	equ	0x3FEF
 16759                           postinc0	equ	0x3FEE
 16760                           postdec0	equ	0x3FED
 16761                           preinc0	equ	0x3FEC
 16762                           plusw0	equ	0x3FEB
 16763                           fsr0h	equ	0x3FEA
 16764                           fsr0l	equ	0x3FE9
 16765                           wreg	equ	0x3FE8
 16766                           indf1	equ	0x3FE7
 16767                           postinc1	equ	0x3FE6
 16768                           postdec1	equ	0x3FE5
 16769                           preinc1	equ	0x3FE4
 16770                           plusw1	equ	0x3FE3
 16771                           fsr1h	equ	0x3FE2
 16772                           fsr1l	equ	0x3FE1
 16773                           bsr	equ	0x3FE0
 16774                           indf2	equ	0x3FDF
 16775                           postinc2	equ	0x3FDE
 16776                           postdec2	equ	0x3FDD
 16777                           preinc2	equ	0x3FDC
 16778                           plusw2	equ	0x3FDB
 16779                           fsr2h	equ	0x3FDA
 16780                           fsr2l	equ	0x3FD9
 16781                           status	equ	0x3FD8


Data Sizes:
    Strings     165
    Constant    0
    Data        269
    BSS         626
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      2      61
    BANK0           160      0     153
    BANK1           256      0     237
    BANK2           256      0     248
    BANK3           256      0     198
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H12(BANK1[30]), H10(BANK1[65]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[20]), STR_13(CODE[6]), STR_12(CODE[14]), STR_11(CODE[20]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[20]), STR_13(CODE[6]), STR_12(CODE[14]), STR_11(CODE[20]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 88
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[88]), 

    a	PTR const unsigned char  size(2) Largest target is 88
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[88]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_15(CODE[21]), STR_14(CODE[20]), STR_13(CODE[6]), STR_12(CODE[14]), 
		 -> STR_11(CODE[20]), STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 88
		 -> V(BANK0[88]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 88
		 -> V(BANK0[88]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4323_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 88
		 -> V(BANK0[88]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 88
		 -> V(BANK0[88]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[20]), STR_13(CODE[6]), STR_12(CODE[14]), STR_11(CODE[20]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[20]), STR_13(CODE[6]), STR_12(CODE[14]), STR_11(CODE[20]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[88]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[88]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[6]), 
		 -> V(BANK0[88]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16619.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H12(BANK1[30]), H10(BANK1[65]), 

    F16619.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    byte_block	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H27(BANK1[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    k	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H27(BANK1[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    t_link	PTR enum E16164 size(1) Largest target is 88
		 -> V(BANK0[88]), 

    S3654response_type$reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H12(BANK1[30]), H10(BANK1[65]), 

    F16608.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H12(BANK1[30]), H10(BANK1[65]), 

    S3654response_type$header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    F16608.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    r_link	PTR enum E16164 size(1) Largest target is 88
		 -> V(BANK0[88]), 

    m_link	PTR enum E16164 size(1) Largest target is 88
		 -> V(BANK0[88]), 

    byte_block	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H27(BANK1[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 88
		 -> V(BANK0[88]), 

    strPtr	PTR unsigned char  size(1) Largest target is 88
		 -> V(BANK0[88]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1984spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1984spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   42391
                  _SYSTEM_Initialize
                   _UART1_put_buffer
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _m_protocol
                         _r_protocol
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           2     1      1    1715
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                             _WaitMs
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     132
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19     9     10    8312
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1    1639
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                            9     5      4     837
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           2     1      1     892
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (3) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   18878
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9473
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9343
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9312
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8087
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    7988
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7749
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     179
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      30
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      30
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      45
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      15
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0     130
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0     130
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0     130
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            1     1      0      60
                                              1 COMRAM     1     1      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _UART1_put_buffer
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _WaitMs
       _StartTimer
       _TimerDone
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F8       9       96.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      ED       7       92.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      99       5       95.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      2      3D       1       96.8%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     381      58        0.0%
DATA                 0      0     381       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar 14 03:16:45 2019

                    _SPI1_Exchange8bit 5FCC                                      _V 009A  
     __end_of_TMR5_SetInterruptHandler 5D5A              __end_of_UART2_is_rx_ready 6156  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
                          __CFG_LVP$ON 000000                                    _H10 0100  
                                  _H12 015F                                    _H13 01BD  
                                  _H14 01AC                                    _H24 017D  
                                  _H17 0198                                    _H27 0141  
                                  _H53 02C0                                    l194 60B2  
                                  l572 59D2                                    l717 5B44  
                                  l579 5942                                    l692 5994  
                                  l597 5B18                                    l847 5FDA  
                                  _GIE 01FE97                                    u940 551C  
                                  u965 5550                                    u966 5552  
                                  u958 551E                                    _abs 57D8  
                                  _pad 4998                __size_of_PMD_Initialize 0014  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 5F26                           _run_checksum 5A9A  
                   _UART1_Transmit_ISR 5AF2                          __CFG_BBEN$OFF 000000  
                        _INT1_CallBack 5F48                           __CFG_ZCD$OFF 000000  
                                 l1220 20E0                                   l1118 5926  
                                 l1230 2190                                   l1241 22A0  
                                 l1324 56A4                                   l1252 23E0  
                                 l1262 2536                                   l1246 230A  
                                 l1263 2562                                   l1248 230E  
                                 l1258 24DA                                   l1460 5414  
                                 l1456 5074                                   l1810 3ADA  
                                 l1650 3E24                                   l2524 5818  
                                 l1636 3CB2                                   l1671 47FE  
                                 l2546 4BAE                                   l1763 49F4  
                                 l1829 2F78                                   l1783 3060  
                                 l1599 343C                                   l5305 4110  
                                 l6033 41D4                                   l2578 498E  
                                 l5227 50A2                                   l6115 430E  
                                 l5229 50C4                                   l5341 4596  
                                 l5333 44EA                                   l5325 4462  
                                 l6053 4230                                   l6127 4328  
                                 l6047 4212                                   l5281 3FA4  
                                 l6153 43A0                                   l6129 4366  
                                 l6067 426A                                   l3941 590E  
                                 l6261 5B14                                   l5293 403E  
                                 l5269 5808                                   l6077 428C  
                                 l6165 43BA                                   l6271 5FA8  
                                 l5287 3FF8                                   l8111 35F0  
                                 l8103 35A2                                   l6079 42B2  
                                 l6167 43EC                                   l8113 35F4  
                                 l6097 42D6                                   l8201 3D78  
                                 l6283 5B40                                   l5731 5EFC  
                                 l8123 3618                                   l8043 3406  
                                 l6099 42F0                                   l8211 3DC2  
                                 l6293 5FC8                                   l7501 5340  
                                 l5493 486C                                   l8205 3D90  
                                 l8301 20E6                                   l7511 49EC  
                                 l6711 2798                                   l5663 5962  
                                 l8143 3698                                   l8207 3D9C  
                                 l7521 4A84                                   l7513 49FE  
                                 l7601 33B8                                   l5497 489C  
                                 l6625 25D0                                   l5665 5964  
                                 l8145 369C                                   l8073 34C4  
                                 l8065 3494                                   l8241 3E74  
                                 l8233 3E56                                   l7507 49C4  
                                 l7531 5466                                   l6811 2A54  
                                 l6731 2866                                   l6723 2818  
                                 l6715 27BC                                   l6707 277A  
                                 l8139 3682                                   l8091 3522  
                                 l8075 34D0                                   l8155 36B0  
                                 l8219 3DFA                                   l7517 4A3A  
                                 l7613 3A5C                                   l5589 56B6  
                                 l5925 5B8A                                   l6821 2A72  
                                 l6813 2A58                                   l6733 286A  
                                 l6653 2664                                   l5677 5B6C  
                                 l8149 36A8                                   l8157 36F2  
                                 l8261 3ED0                                   l8229 3E40  
                                 l8237 3E5E                                   l8181 3CF4  
                                 l8413 23C6                                   l8405 235C  
                                 l8341 21E6                                   l5863 59AA  
                                 l6815 2A60                                   l6719 27E8  
                                 l6743 289A                                   l6639 261A  
                                 l8095 3546                                   l8087 3504  
                                 l8263 3ED8                                   l8247 3E90  
                                 l8191 3D36                                   l8271 3F30  
                                 l8431 242C                                   l8407 238E  
                                 l7529 543A                                   l7633 3B4C  
                                 l6817 2A64                                   l6809 2A46  
                                 l6761 28F2                                   l6673 26D8  
                                 l6825 2A80                                   l8265 3EE0  
                                 l8257 3EBE                                   l8345 21FC  
                                 l7563 309A                                   l7555 3050  
                                 l7651 3C6E                                   l7643 3C06  
                                 l7715 2F0A                                   l6819 2A6C  
                                 l6659 268C                                   l6827 2AC2  
                                 l7803 4CBC                                   l8099 3572  
                                 l8259 3ECC                                   l8363 2268  
                                 l7637 3B7C                                   l7629 3B10  
                                 l7709 2EB6                                   l7725 2F2A  
                                 l6781 29C0                                   l6773 2972  
                                 l6765 2916                                   l6757 28D4  
                                 l6693 2740                                   l8189 3D24  
                                 l8269 3EEE                                   l8445 2494  
                                 l8461 250A                                   l8373 2294  
                                 l8365 226C                                   l7487 4ADC  
                                 l7567 30B8                                   l7647 3C32  
                                 l7719 2F0E                                   l5887 596C  
                                 l6783 29C4                                   l6687 2724  
                                 l7807 4D2E                                   l7911 4796  
                                 l8391 22F2                                   l8471 253A  
                                 l7497 5302                                   l7577 32CA  
                                 l7753 385A                                   l6793 29E8  
                                 l6769 2942                                   l7921 47F8  
                                 l8449 24A4                                   l8369 227C  
                                 l8297 20C2                                   l7835 586A  
                                 l7683 2C96                                   l7675 2BB2  
                                 l7747 379C                                   l5987 5AA8  
                                 l7907 477C                                   l8483 25C8  
                                 l8459 24DE                                   l8387 22DC  
                                 l8299 20CA                                   l7597 337C  
                                 l7781 52B6                                   l7839 5894  
                                 l7687 2CE8                                   l7767 3972  
                                 l7759 38C4                                   l7919 47D0  
                                 l7699 2E0E                                   l7779 5274  
                                 l7877 520A                                   l7899 46CE  
                                 STR_1 2051                                   STR_2 207F  
                                 STR_3 2097                                   STR_4 2062  
                                 STR_5 203E                                   STR_6 2071  
                                 STR_7 2091                                   STR_8 208B  
                                 STR_9 202A                                   _LATA 003FBA  
                                 u2310 50F2                                   _LATB 003FBB  
                                 _LATC 003FBC                                   u2400 3F9E  
                                 _LATD 003FBD                                   _LATE 003FBE  
                                 _LATF 003FBF                                   u2420 3FF4  
                                 u2317 50E4                                   u2431 3FFE  
                                 u2440 4038                                   u2600 4620  
                                 u2520 445C                                   u2450 406A  
                                 u2540 44B2                                   u2380 57EC  
                                 u2470 4148                                   u2550 44E4  
                                 u4400 4AD0                                   u2560 4516  
                                 u4065 2A12                                   u2490 419A  
                                 u4075 2A22                                   u4067 2A16  
                                 u4420 4B4C                                   u2580 45CE  
                                 u4500 2FB2                                   u4085 2A32  
                                 u4077 2A26                                   u4510 2FB4  
                                 u4087 2A36                                   u4600 3324  
                                 u4601 3322                                   u5145 3642  
                                 u5241 3DB6                                   u4610 3338  
                                 u4530 3024                                   _T6PR 003F93  
                                 u5155 3652                                   u5147 3646  
                                 u4620 333C                                   u2940 4944  
                                 _PMD0 0039C0                                   u5165 3662  
                                 u5157 3656                                   _PMD1 0039C1  
                                 u4550 3036                                   u4710 3B72  
                                 u5430 22AC                                   _PMD2 0039C2  
                                 u5167 3666                                   _PMD3 0039C3  
                                 u4640 3352                                   u4720 3BB8  
                                 _PMD4 0039C4                                   _PMD5 0039C5  
                                 u4570 3086                                   u4810 2D40  
                                 _PMD6 0039C6                                   _PMD7 0039C7  
                                 u4580 32DE                                   u5436 22AE  
                                 u4750 3C94                                   u5470 2486  
                                 u5390 2276                                   u4591 330E  
                                 u4727 3BAA                                   u5490 24D0  
                                 u4940 51FA                                   u5476 2488  
                                 u4790 2C02                                   u4950 46C8  
                                 u4880 39E6                                   u5496 24D2  
                                 _PLLR 01CEE0                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                          _INT2_CallBack 5F6A  
                     __end_of_ADCC_ISR 5BCA                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01CD                                   _ctoa 541C  
                                 _main 20A8                                   _dtoa 2F82  
                                 _prec 0022                                   _nout 0096  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 39F0  
                                 btemp 003B      __size_of_INT2_SetInterruptHandler 0028  
                                 prodl 003FF3                                   start 00AE  
                      _timer5ReloadVal 0028              __end_of_SPI1_Exchange8bit 5FEA  
                        __CFG_CSWEN$ON 000000                      _UART1_rx_vect_isr 5E24  
                         ___param_bank 000000             __size_of_UART1_is_rx_ready 0008  
                   ?_UART1_rx_vect_isr 005B             __size_of_UART1_is_tx_ready 0008  
                     __end_of_INT0_ISR 60EA                       __end_of_INT1_ISR 60FA  
                     __end_of_INT2_ISR 610A         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 507C          __end_of_OSCILLATOR_Initialize 60B8  
                                PRLOCK 0039EF                        __end_of___aodiv 41C2  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                                _ADCLK 003EFF                        __end_of___aomod 4644  
                                _ADPCH 003EF1                                  _ADREF 003EFD  
                                STR_10 203E                                  STR_11 2016  
                                STR_12 2071                                  STR_13 208B  
                                STR_21 209D                                  STR_14 2016  
                                STR_23 20A0                                  STR_15 2001  
                                STR_16 2088                                  STR_25 20A0  
                                STR_17 20A3                          __CFG_WDTE$OFF 000000  
                                STR_19 209D                                  _ADRPT 003EEC  
                                _U1P1H 003DED                                  _U1P2H 003DEF  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T5CON 003F9A                                  _T6CON 003F94  
                       __CFG_DEBUG$OFF 000000                                  _T6HLT 003F95  
                                _U1UIR 003DF8                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 005B                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 6174  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 5DFC  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 5A26  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 6072  
                         _DMA1CON1bits 003BFD                     r_protocol@rxData_l 002C  
                                _flags 0024                                  _fputc 4AAC  
           __size_of_send_lcd_cmd_long 0028                                  _fputs 52F2  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 005B  
                                _width 0020                                  _putch 603E  
             _INT1_SetInterruptHandler 5D82                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 003B                                  ltemp1 003F  
                                ltemp2 0043               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  plusw2 003FDB  
                                ttemp0 003B                                  ttemp1 003E  
                                ttemp2 0041                                  ttemp3 0044  
                                ttemp5 003C                                  ttemp6 003F  
                                ttemp7 0043                                  status 003FD8  
  __end_of_UART1_SetRxInterruptHandler 5CE2            _UART1_SetRxInterruptHandler 5CBA  
                                wtemp0 003B                                  wtemp1 003D  
                                wtemp2 003F                                  wtemp3 0041  
                                wtemp4 0043                                  wtemp5 0045  
                                wtemp8 003C                        __end_of_sprintf 4FD2  
                      __end_of_strncmp 4998                    ??_UART1_tx_vect_isr 005B  
            __size_of_DMA1_DMADCNT_ISR 000A              __end_of_UART1_rx_vect_isr 5E4A  
             __size_of_SPI1_Initialize 0016                        _TMR5_Initialize 581E  
                __end_of_ringBufS_init 5C42                        __initialization 4E42  
                    _UART2_rx_vect_isr 5E74                           __end_of_ctoa 54A4  
                         __end_of_main 25CC                           __end_of_dtoa 3402  
                         __end_of_stoa 3CAE             __size_of_UART2_is_rx_ready 0008  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005B  
             _TMR5_SetInterruptHandler 5D32                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 005B              __end_of_UART1_tx_vect_isr 5E22  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 5CE2  
                     _UART1_Initialize 5574                      _UART2_tx_vect_isr 5E4C  
                   _UART2_Transmit_ISR 5B1E                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 005B  
                               _MD1SRC 003CFC                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                    __size_of_UART2_Read 003E  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RA4PPS 003A04                                 _RA5PPS 003A05  
                               _RA6PPS 003A06                                 _RC3PPS 003A13  
                               _RB6PPS 003A0E                                 _RC5PPS 003A15  
                               _ODCONA 003A42                                 _ODCONB 003A52  
                               _ODCONC 003A62                                 _RC6PPS 003A16  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                                 i2l1135 5A1E  
                               u114_48 5F34                         __CFG_WDTCCS$SC 000000  
                               u116_48 5F56                                 u118_48 5F78  
                               u325_40 607A                                 u500_48 5EAA  
                               u325_46 607C                                 _SCANPR 0039F7  
                               u343_48 5ECE                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 _IVTADU 00389F  
         __size_of_eaDogM_WriteCommand 000E                                 _OSCFRQ 0039DF  
             __end_of_send_lcd_cmd_dma 5742                    ??_UART2_tx_vect_isr 005B  
            __end_of_UART2_rx_vect_isr 5E9A             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 611A                       _UART2_Initialize 563A  
                               _WaitMs 5B74   __size_of_ADCC_SetADIInterruptHandler 0028  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 538A  
                               _memset 3704                                 clear_0 4EC2  
                               clear_1 4ECE                                 clear_2 4EDA  
                               clear_3 4EE6                                 clear_4 4EF2  
                               _printf 55D8                     _eaDogM_WriteString 51BE  
                            ?_ADCC_ISR 005B                                 _strlen 507C  
                   __size_of_TimerDone 0022                        _ADCC_Initialize 578E  
                       _PMD_Initialize 60B8   __end_of_INT2_DefaultInterruptHandler 6180  
__size_of_INT2_DefaultInterruptHandler 0002           _INT2_DefaultInterruptHandler 617E  
                         __pdataCOMRAM 005D              __end_of_UART2_tx_vect_isr 5E72  
                               lltemp0 003B                                 lltemp1 0043  
                               lltemp2 004B                                 lltemp3 0053  
                         __mediumconst 0000                                 tblptrh 003FF7  
                               tblptrl 003FF6                                 tblptru 003FF8  
                     __end_of_wdtdelay 56F4                       __end_of_vfprintf 52F2  
                           _StartTimer 5A26                        _CLC1_Initialize 5F04  
        __size_of_INTERRUPT_Initialize 0066                __end_of_TMR5_Initialize 5864  
                    _SYSTEM_Initialize 58AA                             __accesstop 0060  
              __end_of__initialization 4F04                              ?_INT0_ISR 005B  
                            ?_INT1_ISR 005B                              ?_INT2_ISR 005B  
            __end_of_CLKREF_Initialize 6124                          ___rparam_used 000001  
           __size_of_UART1_rx_vect_isr 0026                        _TMR5_WriteTimer 58EC  
               __end_of_ringBufS_flush 541C                         __pcstackCOMRAM 005B  
                           ___inthi_sp 0D30                           __pidataBANK0 615E  
                         __pidataBANK1 4D74                           __pidataBANK2 5A62  
                            ?_TMR5_ISR 005B                              ?_TMR6_ISR 005B  
                       ivt0x8_undefint 00AC                          __end_of_fputc 4BB8  
                        __end_of_fputs 538A                  __end_of_TMR5_CallBack 5EE2  
                        __end_of_putch 6058                __end_of_TMR6_Initialize 5D0A  
               __end_of_PMD_Initialize 60CC                __size_of_block_checksum 00D2  
                           ??_ADCC_ISR 005B                  __end_of_TMR6_CallBack 5EBE  
          __size_of_EXT_INT_Initialize 004C             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 6130       __end_of_INT2_SetInterruptHandler 5D82  
             _UART2_RxInterruptHandler 0014              __end_of_SYSTEM_Initialize 58EC  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                       _DSM_Initialize 6022                             __pbssBANK0 0060  
                           __pbssBANK1 01CD                             __pbssBANK2 0200  
                           __pbssBANK3 0300                  _INT0_InterruptHandler 001D  
                           ??_INT0_ISR 005B                             ??_INT1_ISR 005B  
                           ??_INT2_ISR 005B                      __end_of_TimerDone 5F04  
                     _DMA1_DMADCNT_ISR 6124              __size_of_UART1_put_buffer 002A  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                __end_of_wait_lcd_done 6006                        __CFG_PPS1WAY$ON 000000  
     __end_of_TMR6_SetInterruptHandler 5D32                __end_of_ADCC_Initialize 57D8  
                           ??_TMR5_ISR 005C                             ??_TMR6_ISR 005B  
                   __size_of_secs_send 01C4                                _CLC1CON 003C74  
                              _CLC1POL 003C75                                _DMA1DSA 003BF0  
                              _DMA1DSZ 003BEE                                _DMA1SSA 003BF9  
                              _DMA1SSZ 003BF7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                                _MD1CARH 003CFE  
                              _MD1CARL 003CFD                      _UART1_Receive_ISR 5F8C  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
                              _NCO1CLK 003F3F                         ?_DMA1_DMAA_ISR 005B  
                     _DMA1_DMASCNT_ISR 610C                                _NCO1CON 003F3E  
                              _U1ERRIE 003DFA                                _U1ERRIR 003DF9  
              __end_of_CLC1_Initialize 5F26                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                              _INT2PPS 003AC2                           ?_Default_ISR 005B  
                 __size_of_UART1_Write 003E             __size_of_UART2_tx_vect_isr 0026  
                              _U1RXPPS 003AE5                                _U2RXPPS 003AE8  
                              _OSCCON1 0039D9                                _OSCCON3 0039DB  
                              _IVTLOCK 003FD4                     __size_of_vfpfcnvrt 04AE  
                              _SPI1CLK 003D1C                                _SPI1RXB 003D10  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
               __end_of_DSM_Initialize 603E                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
              __end_of_TMR5_WriteTimer 592C                     __end_of_UART1_Read 59E6  
                   __end_of_UART2_Read 59A8      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000A  
                              __Hparam 0000                                __Lparam 0000  
             __end_of_UART1_Initialize 55D8                        __size_of_WaitMs 002A  
                              ___aodiv 3F42                                ___aomod 4404  
                           _m_protocol 25CC              __end_of_UART1_Receive_ISR 5FAC  
                         __psmallconst 2000                   __end_of_init_display 4CA2  
                              __pcinit 4E42                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 60CC                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 20A8                                __ptext1 3CAE  
                              __ptext2 41C2                                __ptext3 4F0A  
                              __ptext4 3402                                __ptext5 4644  
                              __ptext6 4CA2                                __ptext7 5B4A  
                              __ptext8 6146                                __ptext9 592C  
                    _UART2_Receive_ISR 5FAC                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 00A2  
                              us250999 41AC                                us261999 4632  
                              us333999 43F6                  _OSCILLATOR_Initialize 60A2  
                         __size_of_abs 0046                                _r_block 0060  
                              us449999 2F9C                                us466999 3A02  
                         __size_of_pad 0114                                _mode_sw 002E  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 5698                     m_protocol@rxData_l 002D  
           __size_of_SYSTEM_Initialize 0042                                _sprintf 4F0A  
                              _strncmp 4808                   end_of_initialization 4F04  
                    __end_of_secs_send 4808               _INT2_SetInterruptHandler 5D5A  
             __size_of_secs_II_message 0242                             _r_protocol 3402  
  __end_of_UART1_SetTxInterruptHandler 5CBA            _UART1_SetTxInterruptHandler 5C92  
  __end_of_UART2_SetRxInterruptHandler 5C92            _UART2_SetRxInterruptHandler 5C6A  
                           _t_protocol 3CAE                      __end_of_vfpfcnvrt 2F82  
                            _SPI1TCNTL 003D12                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 6172  
            __end_of_UART2_Receive_ISR 5FCC                         wdtdelay@dcount 008C  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 005C  
                       _block_checksum 4CA2                  _INT1_InterruptHandler 001A  
                            _PORTBbits 003FCB               _TMR6_SetInterruptHandler 5D0A  
                _TMR5_InterruptHandler 0090   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 002A    __end_of_ADCC_SetADIInterruptHandler 5DFA  
          _ADCC_SetADIInterruptHandler 5DD2                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 54A4  
                      _SPI1_Initialize 608C                       _UART1_put_buffer 5B4A  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                    __size_of_INT2_ISR 000E                         __end_of_WaitMs 5B9E  
         __end_of_INTERRUPT_Initialize 5574                 __end_of_block_checksum 4D74  
 __end_of_INT0_DefaultInterruptHandler 617C  __size_of_INT0_DefaultInterruptHandler 0002  
         _INT0_DefaultInterruptHandler 617A             __size_of_UART1_Receive_ISR 0020  
                        __pidataCOMRAM 6182                      __size_of_TMR5_ISR 003E  
                    __size_of_TMR6_ISR 001A            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 39F0                         __end_of_printf 563A  
             __end_of_DMA1_DMADCNT_ISR 612E                  __end_of_INT0_CallBack 5F48  
                       __end_of_strlen 511E                    start_initialization 4E42  
 __end_of_TMR5_DefaultInterruptHandler 608C  __size_of_TMR5_DefaultInterruptHandler 001A  
         _TMR5_DefaultInterruptHandler 6072        __size_of_PIN_MANAGER_Initialize 00A0  
                          __end_of_abs 581E                  __end_of_INT1_CallBack 5F6A  
                          __end_of_pad 4AAC                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 5C1A                             ivt0x8_base 0008  
                __end_of_INT2_CallBack 5F8C                   secs_II_message@block 0001  
                        _uart1RxBuffer 0240                          _uart1TxBuffer 0280  
                        _uart2RxBuffer 0200               __end_of_DMA1_DMASCNT_ISR 611A  
                        _uart2TxBuffer 0300                         _DMA1_DMAOR_ISR 613C  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 009C                              _TimerDone 5EE2  
                        _ringBufS_init 5C1A                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 00F2  
                          __pdataBANK1 0100                            __pdataBANK2 02C0  
           __size_of_UART2_Receive_ISR 0020             __end_of_EXT_INT_Initialize 578E  
                      run_checksum@sum 0098        __end_of_eaDogM_WriteStringAtPos 5AF2  
              __end_of_DMA1_Initialize 550E                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 5DD2                __end_of_SPI1_Initialize 60A2  
             _UART1_RxInterruptHandler 000E               _UART2_TxInterruptHandler 0011  
                  __size_of_m_protocol 0508              __size_of_ringBufS_put_dma 00AA  
                         _init_display 4BB8                 __end_of_DMA1_DMAOR_ISR 6146  
               __size_of_TMR5_CallBack 0024                  _INT2_InterruptHandler 0017  
                _TMR6_InterruptHandler 0093                 __size_of_TMR6_CallBack 0024  
               _PIN_MANAGER_Initialize 511E                   __end_of_wait_lcd_set 616C  
                            __ptext100 610C                              __ptext101 6124  
                            __ptext102 6130                              __ptext103 613C  
                            __ptext104 59E8                              __ptext105 58EC  
                            __ptext106 5EBE                              __ptext107 6072  
                            __ptext108 0000                     __end_of_StartTimer 5A62  
                    __size_of_wdtdelay 005C                      __size_of_vfprintf 0098  
                             _ADCC_ISR 5BA0                    __size_of_r_protocol 0302  
               __CFG_BBSIZE$BBSIZE_512 000000                            __smallconst 2000  
                             _CLC1GLS0 003C7A                               _CLC1GLS1 003C7B  
                             _CLC1GLS2 003C7C                               _CLC1GLS3 003C7D  
                             _CLC1SEL0 003C76                               _CLC1SEL1 003C77  
                             _CLC1SEL2 003C78                               _CLC1SEL3 003C79  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA1SIRQ 003BFF  
                          _NCO1CONbits 003F3E                    __size_of_t_protocol 0294  
               __size_of_wait_lcd_done 001C                         __size_of_fputc 010C  
                       __size_of_fputs 0098                               _NCO1ACCH 003F39  
                       __size_of_putch 001A                               _NCO1ACCL 003F38  
                             _NCO1ACCU 003F3A                   _INTERRUPT_Initialize 550E  
                             _T6CLKCON 003F96                               _NCO1INCH 003F3C  
                             _NCO1INCL 003F3B                               _NCO1INCU 003F3D  
                      ?_DMA1_DMAOR_ISR 005B                               _INT0_ISR 60DC  
                             _INT1_ISR 60EC                               _INT2_ISR 60FC  
                             _LATCbits 003FBC                               _LATDbits 003FBD  
                             _LATEbits 003FBE      __size_of_INT1_SetInterruptHandler 0028  
                            _secs_send 4644                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 0079                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR7bits 003987  
                             _IPR8bits 003988                               _PIE6bits 003996  
                             _PIE7bits 003997                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                              _ring_buf1 0383  
                            _ring_buf2 0340                               i2u412_48 5E0E  
                             i2u414_48 5E36                               i2u416_48 5E5E  
                             _PIR1bits 0039A1                               i2u419_40 5A16  
                             i2u418_48 5E86                               _PIR2bits 0039A2  
                             _SPI1BAUD 003D19                               i2u198_48 5BB6  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               _PIR5bits 0039A5  
                             _PIR7bits 0039A7                               _PIR8bits 0039A8  
                             _PIR9bits 0039A9               __size_of_TMR5_Initialize 0046  
           __end_of_UART1_Transmit_ISR 5B1E                               _TMR5_ISR 59E8  
                             _TMR6_ISR 6058                              _vfpfcnvrt 2AD4  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 5EBE  
                            _start_lcd 616C              __size_of_send_lcd_cmd_dma 004E  
                        _TMR6_CallBack 5E9A               __end_of_UART1_put_buffer 5B74  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                  __end_of_UART1_Write 596A               __size_of_TMR6_Initialize 0028  
                          _INTCON0bits 003FD2                              copy_data0 4E56  
                            copy_data1 4E78                              copy_data2 4E9A  
             _INT0_SetInterruptHandler 5DAA                 _uart1TxBufferRemaining 0038  
  __end_of_UART2_SetTxInterruptHandler 5C6A            _UART2_SetTxInterruptHandler 5C42  
                         _uart1RxCount 0035                           _uart2RxCount 002F  
                             __Hrparam 0000       __size_of_eaDogM_WriteStringAtPos 002C  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                   __end_of_run_checksum 5AC6  
                             __Lrparam 0000                     __CFG_BOREN$SBORDIS 000000  
                        _wait_lcd_done 5FEA                           _send_lcd_cmd 5BF2  
                     __size_of___aodiv 0280                       __size_of___aomod 0240  
                      _NCO1_Initialize 6006                  __end_of_DMA1_DMAA_ISR 613A  
 __size_of_UART1_SetRxInterruptHandler 0028                      ?_DMA1_DMADCNT_ISR 005B  
             __size_of_ADCC_Initialize 004A            __end_of_eaDogM_WriteCommand 60DA  
                             __pivt0x8 0008                     ??_DMA1_DMADCNT_ISR 005C  
                             __ptext10 25CC                               __ptext11 5A9A  
                             __ptext20 5BCA                               __ptext12 5B74  
                             __ptext21 5BF2                               __ptext13 5EE2  
                             __ptext30 5698                               __ptext22 5FCC  
                             __ptext14 5A26                               __ptext31 616C  
                             __ptext23 5C1A                               __ptext15 614E  
                             __ptext40 57D8                               __ptext32 538A  
                             __ptext24 5AC6                               __ptext16 596A  
                             __ptext41 4404                               __ptext33 3704  
                             __ptext25 51BE                               __ptext17 6156  
                             __ptext50 58AA                               __ptext42 3F42  
                             __ptext34 55D8                               __ptext26 60CC  
                             __ptext18 59A8                               __ptext51 563A  
                             __ptext43 541C                               __ptext35 525A  
                             __ptext27 56F4                               __ptext19 4BB8  
                             __ptext60 5D32                               __ptext52 5C42  
                             __ptext44 4998                               __ptext36 2AD4  
                             __ptext28 6166                               __ptext61 608C  
                             __ptext53 5C6A                               __ptext45 507C  
                             __ptext37 4808                               __ptext29 5FEA  
                             __ptext70 5DAA                               __ptext62 60B8  
                             __ptext54 5574                               __ptext46 52F2  
                             __ptext38 39F0                               __ptext71 6022  
                             __ptext63 511E                               __ptext55 5C92  
                             __ptext47 4AAC                               __ptext39 2F82  
                             __ptext80 60EC                               __ptext72 54A4  
                             __ptext64 60A2                               __ptext56 5CBA  
                             __ptext48 603E                               __ptext81 5F48  
                             __ptext73 611A                               __ptext65 6006  
                             __ptext57 5CE2                               __ptext49 4FD2  
                             __ptext90 5AF2                               __ptext82 617C  
                             __ptext74 5F04                               __ptext66 550E  
                             __ptext58 5D0A                               __ptext91 5E24  
                             __ptext83 60FC                               __ptext75 578E  
                             __ptext67 5742                               __ptext59 581E  
                             __ptext92 5F8C                               __ptext84 5F6A  
                             __ptext76 5DD2                               __ptext68 5D5A  
                             __ptext93 5E4C                               __ptext85 617E  
                             __ptext77 60DC                               __ptext69 5D82  
                             __ptext94 5B1E                               __ptext86 6174  
                             __ptext78 5F26                               __ptext95 5E74  
                             __ptext87 5BA0                               __ptext79 617A  
                             __ptext96 5FAC                               __ptext88 6180  
                             __ptext97 6058                               __ptext89 5DFC  
                             __ptext98 5E9A                               __ptext99 5864  
                      _secs_II_message 41C2               __size_of_CLC1_Initialize 0022  
                     __size_of_sprintf 00C8                       __size_of_strncmp 0190  
                     _ringBufS_put_dma 4FD2                     __end_of_m_protocol 2AD4  
                        __size_of_ctoa 0088                          __size_of_main 0524  
                        __size_of_dtoa 0480                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02BE                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 005B                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 0008  
                            stoa@F1144 00F2                     ??_DMA1_DMASCNT_ISR 005C  
                             _spi_link 006D                               _wdtdelay 5698  
           __end_of_UART2_Transmit_ISR 5B4A                               _vfprintf 525A  
                    _UART1_is_rx_ready 6156                            _UART1_Write 592C  
 __end_of_INT1_DefaultInterruptHandler 617E  __size_of_INT1_DefaultInterruptHandler 0002  
         _INT1_DefaultInterruptHandler 617C                      _UART1_is_tx_ready 6146  
                      r_protocol@retry 005D                      t_protocol@requeue 002A  
                        ??_Default_ISR 005B                     __end_of_r_protocol 3704  
                          _uart1RxHead 0037                            _uart1TxHead 003A  
                          _uart2RxHead 0031                            _uart1RxTail 0036  
                          _uart2TxHead 0034                            _uart1TxTail 0039  
                          _uart2RxTail 0030                            _uart2TxTail 0033  
                         _wait_lcd_set 6166                     _EXT_INT_Initialize 5742  
 __end_of_TMR6_DefaultInterruptHandler 58AA  __size_of_TMR6_DefaultInterruptHandler 0046  
         _TMR6_DefaultInterruptHandler 5864                     __end_of_t_protocol 3F42  
 __end_of_ADCC_DefaultInterruptHandler 6182  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 6180                               intlevel2 0000  
                    _send_lcd_cmd_long 5BCA                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 525A                __end_of_NCO1_Initialize 6022  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF              __end_of_UART1_is_rx_ready 615E  
                           _UART1_Read 59A8                 __size_of_INT1_CallBack 0022  
                           _UART2_Read 596A              __end_of_UART1_is_tx_ready 614E  
               __size_of_INT2_CallBack 0022                      _UART2_is_rx_ready 614E  
               _uart2TxBufferRemaining 0032                       _send_lcd_cmd_dma 56F4  
                TMR5_ISR@CountCallBack 0026                __end_of_secs_II_message 4404  
     __end_of_INT1_SetInterruptHandler 5DAA              __size_of_UART1_Initialize 0064  
                      t_protocol@block 0085                       ??_DMA1_DMAOR_ISR 005C  
             _UART1_TxInterruptHandler 000B                        t_protocol@retry 002B  
            __end_of_send_lcd_cmd_long 5BF2                    __end_of_Default_ISR 617A  
       __end_of_PIN_MANAGER_Initialize 51BE                  __size_of_run_checksum 002C  
              _eaDogM_WriteStringAtPos 5AC6              __size_of_UART2_Initialize 005E  
