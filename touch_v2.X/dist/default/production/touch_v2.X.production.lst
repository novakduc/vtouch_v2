

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Dec 21 17:28:39 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=4,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=4,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=4,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=4,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=4,class=CODE,delta=1
   180                           	psect	text156,global,reloc=4,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=4,class=CODE,delta=1
   185                           	psect	text161,global,reloc=4,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=4,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=4,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=4,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=4,class=CODE,delta=1
   195                           	psect	text171,global,reloc=4,class=CODE,delta=1
   196                           	psect	text172,global,reloc=4,class=CODE,delta=1
   197                           	psect	text173,global,reloc=4,class=CODE,delta=1
   198                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   199                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   200                           	psect	text174,global,reloc=4,class=CODE,delta=1
   201                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   202                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   203  0000                     
   204                           ; Version 2.10
   205                           ; Generated 31/07/2019 GMT
   206                           ; 
   207                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   208                           ; All rights reserved.
   209                           ; 
   210                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   211                           ; 
   212                           ; Redistribution and use in source and binary forms, with or without modification, are
   213                           ; permitted provided that the following conditions are met:
   214                           ; 
   215                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   216                           ;        conditions and the following disclaimer.
   217                           ; 
   218                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   219                           ;        of conditions and the following disclaimer in the documentation and/or other
   220                           ;        materials provided with the distribution.
   221                           ; 
   222                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   223                           ;        software without specific prior written permission.
   224                           ; 
   225                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   226                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   227                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   228                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   229                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   230                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   231                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   232                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   233                           ; 
   234                           ; 
   235                           ; Code-generator required, PIC18F57K42 Definitions
   236                           ; 
   237                           ; SFR Addresses
   238  0000                     
   239 ;;_main$3717	offset	0
   240 ;;_main$3713	offset	2
   241 ;;_esr_temp	offset	4
   242 ;;_i_esr	offset	8
   243 ;;_shape	offset	10
   244 ;;_k	offset	11
   245 ;;_j	offset	12
   246 ;;_i	offset	13
   247 ;;_inp_index	offset	14
   248 ;;_mode	offset	15
   249 ;;_i_ror	offset	16
   250 ;;_s	offset=-2 (param)
   251 ;;_c	offset	0
   252 ;;_shape	offset=-1 (param)
   253 ;;_reset	offset=-2 (param)
   254 ;;_cmd	offset=-1 (param)
   255 ;;_cmd	offset=-1 (param)
   256 ;;_data	offset=-1 (param)
   257 ;;__this	offset=-2 (param)
   258 ;;_cvoltage	offset=-4 (param)
   259 ;;_h	offset=-1 (param)
   260 ;;_h	offset=-1 (param)
   261 ;;_i	offset=-1 (param)
   262 ;;_fsm	offset=-1 (param)
   263 ;;_channel	offset=-1 (param)
   264 ;;_mode	offset=-1 (param)
   265 ;;_mode	offset=-1 (param)
   266 ;;_cmd	offset=-1 (param)
   267 ;;_i	offset	0
   268 ;;_h	offset=-1 (param)
   269 ;;_flipper	offset=-1 (param)
   270 ;;_f	offset	0
   271 ;;_ap	offset	6
   272 ;;_s	offset=-3 (param)
   273 ;;_fmt	offset=-5 (param)
   274 ;;_line	offset=-1 (param)
   275 ;;_vterm	offset=-2 (param)
   276 ;;_numMilliseconds	offset=-2 (param)
   277 ;;_vterm	offset=-1 (param)
   278 ;;_r	offset=-1 (param)
   279 ;;_c	offset=-2 (param)
   280 ;;_strPtr	offset=-4 (param)
   281 ;;_strPtr	offset=-1 (param)
   282 ;;_delay	offset=-4 (param)
   283 ;;_strPtr	offset=-2 (param)
   284 ;;__this	offset=-2 (param)
   285 ;;_clearBuffer	offset=-3 (param)
   286 ;;_s	offset	0
   287 ;;_k	offset	2
   288 ;;_dest	offset=-2 (param)
   289 ;;_c	offset=-4 (param)
   290 ;;_n	offset=-6 (param)
   291 ;;_ap	offset	0
   292 ;;_fmt	offset=-3 (param)
   293 ;;_cfmt	offset	0
   294 ;;_fp	offset=-2 (param)
   295 ;;_fmt	offset=-4 (param)
   296 ;;_ap	offset=-6 (param)
   297 ;;_vfpfcnvrt$5463	offset	0
   298 ;;_vfpfcnvrt$5474	offset	2
   299 ;;_vfpfcnvrt$5462	offset	4
   300 ;;_llu	offset	6
   301 ;;_ll	offset	14
   302 ;;_f	offset	22
   303 ;;_ct	offset	26
   304 ;;_cp	offset	29
   305 ;;_c	offset	31
   306 ;;_fp	offset=-2 (param)
   307 ;;_fmt	offset=-4 (param)
   308 ;;_ap	offset=-6 (param)
   309 ;;_xtoa$5448	offset	0
   310 ;;_xtoa$5447	offset	2
   311 ;;_n	offset	4
   312 ;;_c	offset	12
   313 ;;_i	offset	14
   314 ;;_w	offset	16
   315 ;;_p	offset	18
   316 ;;_fp	offset=-2 (param)
   317 ;;_d	offset=-10 (param)
   318 ;;_x	offset=-11 (param)
   319 ;;_toupper$6254	offset	0
   320 ;;_c	offset=-2 (param)
   321 ;;_c	offset=-2 (param)
   322 ;;_c	offset=-2 (param)
   323 ;;_n	offset	0
   324 ;;_i	offset	8
   325 ;;_w	offset	10
   326 ;;_p	offset	12
   327 ;;_fp	offset=-2 (param)
   328 ;;_d	offset=-10 (param)
   329 ;;_counter	offset	0
   330 ;;_dividend	offset=-8 (param)
   331 ;;_divisor	offset=-16 (param)
   332 ;;_quotient	offset	0
   333 ;;_counter	offset	8
   334 ;;_dividend	offset=-8 (param)
   335 ;;_divisor	offset=-16 (param)
   336 ;;_r	offset	0
   337 ;;_l	offset	2
   338 ;;__l	offset=-2 (param)
   339 ;;__r	offset=-4 (param)
   340 ;;_n	offset=-6 (param)
   341 ;;_nuls	offset	0
   342 ;;_l	offset	7
   343 ;;_p	offset	9
   344 ;;_cp	offset	11
   345 ;;_w	offset	13
   346 ;;_i	offset	15
   347 ;;_fp	offset=-2 (param)
   348 ;;_s	offset=-4 (param)
   349 ;;_efgtoa$5420	offset	0
   350 ;;_efgtoa$5419	offset	2
   351 ;;_efgtoa$5418	offset	4
   352 ;;_efgtoa$5414	offset	6
   353 ;;_efgtoa$5410	offset	8
   354 ;;_efgtoa$5409	offset	10
   355 ;;_u	offset	12
   356 ;;_g	offset	16
   357 ;;_l	offset	20
   358 ;;_h	offset	24
   359 ;;_ou	offset	28
   360 ;;_n	offset	32
   361 ;;_e	offset	34
   362 ;;_i	offset	36
   363 ;;_w	offset	38
   364 ;;_p	offset	40
   365 ;;_sign	offset	42
   366 ;;_d	offset	44
   367 ;;_ne	offset	46
   368 ;;_m	offset	48
   369 ;;_pp	offset	50
   370 ;;_t	offset	52
   371 ;;_mode	offset	54
   372 ;;_nmode	offset	55
   373 ;;_fp	offset=-2 (param)
   374 ;;_f	offset=-6 (param)
   375 ;;_c	offset=-7 (param)
   376 ;;_tolower$6239	offset	0
   377 ;;_c	offset=-2 (param)
   378 ;;_c	offset=-2 (param)
   379 ;;_d	offset	0
   380 ;;_s	offset	2
   381 ;;_dest	offset=-2 (param)
   382 ;;_src	offset=-4 (param)
   383 ;;_u	offset	0
   384 ;;_m	offset	4
   385 ;;_e	offset	8
   386 ;;_x	offset=-4 (param)
   387 ;;_u	offset	0
   388 ;;_e	offset	4
   389 ;;_x	offset=-4 (param)
   390 ;;_exp1	offset	0
   391 ;;_sign1	offset	1
   392 ;;_f1	offset=-4 (param)
   393 ;;_f1	offset=-4 (param)
   394 ;;_ff1	offset=-4 (param)
   395 ;;_ff2	offset=-8 (param)
   396 ;;_sign	offset	0
   397 ;;_counter	offset	1
   398 ;;_dividend	offset=-2 (param)
   399 ;;_divisor	offset=-4 (param)
   400 ;;_quotient	offset	0
   401 ;;_sign	offset	2
   402 ;;_counter	offset	3
   403 ;;_dividend	offset=-2 (param)
   404 ;;_divisor	offset=-4 (param)
   405 ;;_dtoa$5386	offset	0
   406 ;;_n	offset	2
   407 ;;_i	offset	10
   408 ;;_s	offset	12
   409 ;;_w	offset	14
   410 ;;_p	offset	16
   411 ;;_fp	offset=-2 (param)
   412 ;;_d	offset=-10 (param)
   413 ;;_a	offset=-2 (param)
   414 ;;_sign	offset	0
   415 ;;_counter	offset	1
   416 ;;_dividend	offset=-8 (param)
   417 ;;_divisor	offset=-16 (param)
   418 ;;_quotient	offset	0
   419 ;;_sign	offset	8
   420 ;;_counter	offset	9
   421 ;;_dividend	offset=-8 (param)
   422 ;;_divisor	offset=-16 (param)
   423 ;;_w	offset	0
   424 ;;_fp	offset=-2 (param)
   425 ;;_c	offset=-3 (param)
   426 ;;_w	offset	0
   427 ;;_i	offset	2
   428 ;;_fp	offset=-2 (param)
   429 ;;_buf	offset=-4 (param)
   430 ;;_p	offset=-6 (param)
   431 ;;_a	offset	0
   432 ;;_s	offset=-2 (param)
   433 ;;_i	offset	0
   434 ;;_c	offset	2
   435 ;;_s	offset=-2 (param)
   436 ;;_fp	offset=-4 (param)
   437 ;;_c	offset=-2 (param)
   438 ;;_fp	offset=-4 (param)
   439 ;;_c	offset=-1 (param)
   440 ;;__this	offset=-2 (param)
   441 ;;_c	offset=-3 (param)
   442 ;;_atoi$5970	offset	0
   443 ;;_atoi$5968	offset	2
   444 ;;_atoi$5969	offset	4
   445 ;;_n	offset	5
   446 ;;_neg	offset	7
   447 ;;_s	offset=-2 (param)
   448 ;;_isspace$6019	offset	0
   449 ;;_c	offset=-2 (param)
   450 ;;_c	offset=-2 (param)
   451 ;;_vterm	offset=-1 (param)
   452 ;;_new_response_info	offset=-1 (param)
   453 ;;_new_response_info	offset=-1 (param)
   454 ;;_level	offset=-2 (param)
   455 ;;_dutyValue	offset=-2 (param)
   456 ;;_timer	offset=-1 (param)
   457 ;;_timer	offset=-1 (param)
   458 ;;_count	offset=-3 (param)
   459 ;;_h	offset=-1 (param)
   460 ;;_u	offset	0
   461 ;;_x	offset=-4 (param)
   462 ;;_chan	offset=-1 (param)
   463 ;;_to_what	offset=-2 (param)
   464 ;;_u	offset	0
   465 ;;_s	offset=-2 (param)
   466 ;;_index	offset=-1 (param)
   467 ;;_arg	offset	0
   468 ;;_exp	offset	4
   469 ;;_sign	offset=-1 (param)
   470 ;;_val	offset=-5 (param)
   471 ;;_grs	offset	0
   472 ;;_rem	offset	4
   473 ;;_new_exp	offset	8
   474 ;;_aexp	offset	10
   475 ;;_bexp	offset	11
   476 ;;_sign	offset	12
   477 ;;_b	offset=-4 (param)
   478 ;;_a	offset=-8 (param)
   479 ;;_ff1	offset=-4 (param)
   480 ;;_ff2	offset=-8 (param)
   481 ;;_lp_speed	offset	0
   482 ;;_new	offset=-4 (param)
   483 ;;_bn	offset=-5 (param)
   484 ;;_slow	offset=-6 (param)
   485 ;;_b	offset=-4 (param)
   486 ;;_a	offset=-8 (param)
   487 ;;_grs	offset	0
   488 ;;_bexp	offset	1
   489 ;;_aexp	offset	2
   490 ;;_signs	offset	3
   491 ;;_b	offset=-4 (param)
   492 ;;_a	offset=-8 (param)
   493 ;;_prod	offset	0
   494 ;;_grs	offset	4
   495 ;;_temp	offset	8
   496 ;;_bexp	offset	10
   497 ;;_aexp	offset	11
   498 ;;_sign	offset	12
   499 ;;_b	offset=-4 (param)
   500 ;;_a	offset=-8 (param)
   501 ;;_InterruptHandler	offset=-3 (param)
   502 ;;_InterruptHandler	offset=-3 (param)
   503 ;;_InterruptHandler	offset=-3 (param)
   504 ;;_InterruptHandler	offset=-3 (param)
   505 ;;_InterruptHandler	offset=-3 (param)
   506 ;;_InterruptHandler	offset=-3 (param)
   507 ;;_state	offset	0
   508 ;;_InterruptHandler	offset=-3 (param)
   509 ;;_InterruptHandler	offset=-3 (param)
   510 ;;_InterruptHandler	offset=-3 (param)
   511 ;;_InterruptHandler	offset=-3 (param)
   512 ;;_i	offset	0
   513 ;;_sw_value	offset	1
   514 ;;_timerVal	offset=-2 (param)
   515 ;;_chan	offset=-1 (param)
   516 ;;_to_what	offset=-2 (param)
   517 ;;_u	offset	0
   518 ;;_s	offset=-2 (param)
   519 ;;_index	offset=-1 (param)
   520 ;;_arg	offset	0
   521 ;;_exp	offset	4
   522 ;;_sign	offset=-1 (param)
   523 ;;_val	offset=-5 (param)
   524 ;;_b	offset=-4 (param)
   525 ;;_a	offset=-8 (param)
   526 ;;_grs	offset	0
   527 ;;_bexp	offset	1
   528 ;;_aexp	offset	2
   529 ;;_signs	offset	3
   530 ;;_b	offset=-4 (param)
   531 ;;_a	offset=-8 (param)
   532 ;;_prod	offset	0
   533 ;;_grs	offset	4
   534 ;;_temp	offset	8
   535 ;;_bexp	offset	10
   536 ;;_aexp	offset	11
   537 ;;_sign	offset	12
   538 ;;_b	offset=-4 (param)
   539 ;;_a	offset=-8 (param)
   540 ;;_grs	offset	0
   541 ;;_rem	offset	4
   542 ;;_new_exp	offset	8
   543 ;;_aexp	offset	10
   544 ;;_bexp	offset	11
   545 ;;_sign	offset	12
   546 ;;_b	offset=-4 (param)
   547 ;;_a	offset=-8 (param)
   548 ;;_ff1	offset=-4 (param)
   549 ;;_ff2	offset=-8 (param)
   550 ;;_timerVal	offset=-2 (param)
   551 ;;_log_ptr	offset	0
   552 ;;_f	offset	0
   553 ;;_ap	offset	6
   554 ;;_s	offset=-3 (param)
   555 ;;_fmt	offset=-5 (param)
   556 ;;_cfmt	offset	0
   557 ;;_fp	offset=-2 (param)
   558 ;;_fmt	offset=-4 (param)
   559 ;;_ap	offset=-6 (param)
   560 ;;_vfpfcnvrt$5463	offset	0
   561 ;;_vfpfcnvrt$5474	offset	2
   562 ;;_vfpfcnvrt$5462	offset	4
   563 ;;_llu	offset	6
   564 ;;_ll	offset	14
   565 ;;_f	offset	22
   566 ;;_ct	offset	26
   567 ;;_cp	offset	29
   568 ;;_c	offset	31
   569 ;;_fp	offset=-2 (param)
   570 ;;_fmt	offset=-4 (param)
   571 ;;_ap	offset=-6 (param)
   572 ;;_xtoa$5448	offset	0
   573 ;;_xtoa$5447	offset	2
   574 ;;_n	offset	4
   575 ;;_c	offset	12
   576 ;;_i	offset	14
   577 ;;_w	offset	16
   578 ;;_p	offset	18
   579 ;;_fp	offset=-2 (param)
   580 ;;_d	offset=-10 (param)
   581 ;;_x	offset=-11 (param)
   582 ;;_toupper$6254	offset	0
   583 ;;_c	offset=-2 (param)
   584 ;;_c	offset=-2 (param)
   585 ;;_c	offset=-2 (param)
   586 ;;_n	offset	0
   587 ;;_i	offset	8
   588 ;;_w	offset	10
   589 ;;_p	offset	12
   590 ;;_fp	offset=-2 (param)
   591 ;;_d	offset=-10 (param)
   592 ;;_counter	offset	0
   593 ;;_dividend	offset=-8 (param)
   594 ;;_divisor	offset=-16 (param)
   595 ;;_quotient	offset	0
   596 ;;_counter	offset	8
   597 ;;_dividend	offset=-8 (param)
   598 ;;_divisor	offset=-16 (param)
   599 ;;_r	offset	0
   600 ;;_l	offset	2
   601 ;;__l	offset=-2 (param)
   602 ;;__r	offset=-4 (param)
   603 ;;_n	offset=-6 (param)
   604 ;;_nuls	offset	0
   605 ;;_l	offset	7
   606 ;;_p	offset	9
   607 ;;_cp	offset	11
   608 ;;_w	offset	13
   609 ;;_i	offset	15
   610 ;;_fp	offset=-2 (param)
   611 ;;_s	offset=-4 (param)
   612 ;;_efgtoa$5420	offset	0
   613 ;;_efgtoa$5419	offset	2
   614 ;;_efgtoa$5418	offset	4
   615 ;;_efgtoa$5414	offset	6
   616 ;;_efgtoa$5410	offset	8
   617 ;;_efgtoa$5409	offset	10
   618 ;;_u	offset	12
   619 ;;_g	offset	16
   620 ;;_l	offset	20
   621 ;;_h	offset	24
   622 ;;_ou	offset	28
   623 ;;_n	offset	32
   624 ;;_e	offset	34
   625 ;;_i	offset	36
   626 ;;_w	offset	38
   627 ;;_p	offset	40
   628 ;;_sign	offset	42
   629 ;;_d	offset	44
   630 ;;_ne	offset	46
   631 ;;_m	offset	48
   632 ;;_pp	offset	50
   633 ;;_t	offset	52
   634 ;;_mode	offset	54
   635 ;;_nmode	offset	55
   636 ;;_fp	offset=-2 (param)
   637 ;;_f	offset=-6 (param)
   638 ;;_c	offset=-7 (param)
   639 ;;_tolower$6239	offset	0
   640 ;;_c	offset=-2 (param)
   641 ;;_c	offset=-2 (param)
   642 ;;_d	offset	0
   643 ;;_s	offset	2
   644 ;;_dest	offset=-2 (param)
   645 ;;_src	offset=-4 (param)
   646 ;;_u	offset	0
   647 ;;_m	offset	4
   648 ;;_e	offset	8
   649 ;;_x	offset=-4 (param)
   650 ;;_u	offset	0
   651 ;;_e	offset	4
   652 ;;_x	offset=-4 (param)
   653 ;;_exp1	offset	0
   654 ;;_sign1	offset	1
   655 ;;_f1	offset=-4 (param)
   656 ;;_f1	offset=-4 (param)
   657 ;;_ff1	offset=-4 (param)
   658 ;;_ff2	offset=-8 (param)
   659 ;;_sign	offset	0
   660 ;;_counter	offset	1
   661 ;;_dividend	offset=-2 (param)
   662 ;;_divisor	offset=-4 (param)
   663 ;;_quotient	offset	0
   664 ;;_sign	offset	2
   665 ;;_counter	offset	3
   666 ;;_dividend	offset=-2 (param)
   667 ;;_divisor	offset=-4 (param)
   668 ;;_dtoa$5386	offset	0
   669 ;;_n	offset	2
   670 ;;_i	offset	10
   671 ;;_s	offset	12
   672 ;;_w	offset	14
   673 ;;_p	offset	16
   674 ;;_fp	offset=-2 (param)
   675 ;;_d	offset=-10 (param)
   676 ;;_a	offset=-2 (param)
   677 ;;_sign	offset	0
   678 ;;_counter	offset	1
   679 ;;_dividend	offset=-8 (param)
   680 ;;_divisor	offset=-16 (param)
   681 ;;_quotient	offset	0
   682 ;;_sign	offset	8
   683 ;;_counter	offset	9
   684 ;;_dividend	offset=-8 (param)
   685 ;;_divisor	offset=-16 (param)
   686 ;;_w	offset	0
   687 ;;_fp	offset=-2 (param)
   688 ;;_c	offset=-3 (param)
   689 ;;_w	offset	0
   690 ;;_i	offset	2
   691 ;;_fp	offset=-2 (param)
   692 ;;_buf	offset=-4 (param)
   693 ;;_p	offset=-6 (param)
   694 ;;_a	offset	0
   695 ;;_s	offset=-2 (param)
   696 ;;_i	offset	0
   697 ;;_c	offset	2
   698 ;;_s	offset=-2 (param)
   699 ;;_fp	offset=-4 (param)
   700 ;;_c	offset=-2 (param)
   701 ;;_fp	offset=-4 (param)
   702 ;;_c	offset=-1 (param)
   703 ;;__this	offset=-2 (param)
   704 ;;_c	offset=-3 (param)
   705 ;;_atoi$5970	offset	0
   706 ;;_atoi$5968	offset	2
   707 ;;_atoi$5969	offset	4
   708 ;;_n	offset	5
   709 ;;_neg	offset	7
   710 ;;_s	offset=-2 (param)
   711 ;;_isspace$6019	offset	0
   712 ;;_c	offset=-2 (param)
   713 ;;_c	offset=-2 (param)
   714 ;;_dsize	offset=-2 (param)
   715 ;;_u	offset	0
   716 ;;_x	offset=-4 (param)
   717 ;;_timer	offset=-1 (param)
   718 ;;_count	offset=-3 (param)
   719 ;;_channel	offset=-1 (param)
   720 ;;_i	offset	0
   721                           
   722                           	psect	idataBIGRAM
   723  017C2C                     __pidataBIGRAM:
   724                           	opt callstack 0
   725                           
   726                           ;initializer for _port_data
   727  017C2C  FF                 	db	255
   728  017C2D  00                 	db	0
   729  017C2E  FF                 	db	255
   730  017C2F  00                 	db	0
   731  017C30  FF                 	db	255
   732  017C31  00                 	db	0
   733  017C32  FF                 	db	255
   734  017C33  00                 	db	0
   735  017C34  FF                 	db	255
   736  017C35  00                 	db	0
   737  017C36  FF                 	db	255
   738  017C37  00                 	db	0
   739  017C38  FF                 	db	255
   740  017C39  00                 	db	0
   741  017C3A  FF                 	db	255
   742  017C3B  00                 	db	0
   743  017C3C  00                 	db	0
   744  017C3D  00                 	db	0
   745  017C3E  00                 	db	0
   746  017C3F  00                 	db	0
   747  017C40  00                 	db	0
   748  017C41  00                 	db	0
   749  017C42  00                 	db	0
   750  017C43  00                 	db	0
   751  017C44  00                 	db	0
   752  017C45  00                 	db	0
   753  017C46  00                 	db	0
   754  017C47  00                 	db	0
   755  017C48  00                 	db	0
   756  017C49  00                 	db	0
   757  017C4A  00                 	db	0
   758  017C4B  00                 	db	0
   759  017C4C  00                 	db	0
   760  017C4D  00                 	db	0
   761  017C4E  00                 	db	0
   762  017C4F  00                 	db	0
   763  017C50  00                 	db	0
   764  017C51  00                 	db	0
   765  017C52  00                 	db	0
   766  017C53  00                 	db	0
   767  017C54  00                 	db	0
   768  017C55  00                 	db	0
   769  017C56  00                 	db	0
   770  017C57  00                 	db	0
   771  017C58  00                 	db	0
   772  017C59  00                 	db	0
   773  017C5A  00                 	db	0
   774  017C5B  00                 	db	0
   775  017C5C  00                 	db	0
   776  017C5D  00                 	db	0
   777  017C5E  00                 	db	0
   778  017C5F  00                 	db	0
   779  017C60  00                 	db	0
   780  017C61  00                 	db	0
   781  017C62  00                 	db	0
   782  017C63  00                 	db	0
   783  017C64  00                 	db	0
   784  017C65  00                 	db	0
   785  017C66  00                 	db	0
   786  017C67  00                 	db	0
   787  017C68  00                 	db	0
   788  017C69  00                 	db	0
   789  017C6A  00                 	db	0
   790  017C6B  00                 	db	0
   791  017C6C  00                 	db	0
   792  017C6D  00                 	db	0
   793  017C6E  00                 	db	0
   794  017C6F  00                 	db	0
   795  017C70  00                 	db	0
   796  017C71  00                 	db	0
   797  017C72  00                 	db	0
   798  017C73  00                 	db	0
   799  017C74  00                 	db	0
   800  017C75  00                 	db	0
   801  017C76  00                 	db	0
   802  017C77  00                 	db	0
   803  017C78  00                 	db	0
   804  017C79  00                 	db	0
   805  017C7A  00                 	db	0
   806  017C7B  00                 	db	0
   807  017C7C  00                 	db	0
   808  017C7D  00                 	db	0
   809  017C7E  00                 	db	0
   810  017C7F  00                 	db	0
   811  017C80  00                 	db	0
   812  017C81  00                 	db	0
   813  017C82  00                 	db	0
   814  017C83  00                 	db	0
   815  017C84  00                 	db	0
   816  017C85  00                 	db	0
   817  017C86  00                 	db	0
   818  017C87  00                 	db	0
   819  017C88  00                 	db	0
   820  017C89  00                 	db	0
   821  017C8A  00                 	db	0
   822  017C8B  00                 	db	0
   823  017C8C  00                 	db	0
   824  017C8D  00                 	db	0
   825  017C8E  00                 	db	0
   826  017C8F  00                 	db	0
   827  017C90  00                 	db	0
   828  017C91  00                 	db	0
   829  017C92  00                 	db	0
   830  017C93  00                 	db	0
   831  017C94  00                 	db	0
   832  017C95  00                 	db	0
   833  017C96  00                 	db	0
   834  017C97  00                 	db	0
   835  017C98  00                 	db	0
   836  017C99  00                 	db	0
   837  017C9A  00                 	db	0
   838  017C9B  00                 	db	0
   839  017C9C  00                 	db	0
   840  017C9D  00                 	db	0
   841  017C9E  00                 	db	0
   842  017C9F  00                 	db	0
   843  017CA0  00                 	db	0
   844  017CA1  00                 	db	0
   845  017CA2  00                 	db	0
   846  017CA3  00                 	db	0
   847  017CA4  00                 	db	0
   848  017CA5  00                 	db	0
   849  017CA6  00                 	db	0
   850  017CA7  00                 	db	0
   851  017CA8  00                 	db	0
   852  017CA9  00                 	db	0
   853  017CAA  00                 	db	0
   854  017CAB  00                 	db	0
   855  017CAC  00                 	db	0
   856  017CAD  00                 	db	0
   857  017CAE  00                 	db	0
   858  017CAF  00                 	db	0
   859  017CB0  00                 	db	0
   860  017CB1  00                 	db	0
   861  017CB2  00                 	db	0
   862  017CB3  00                 	db	0
   863  017CB4  00                 	db	0
   864  017CB5  00                 	db	0
   865  017CB6  00                 	db	0
   866  017CB7  00                 	db	0
   867  017CB8  00                 	db	0
   868  017CB9  00                 	db	0
   869  017CBA  00                 	db	0
   870  017CBB  00                 	db	0
   871  017CBC  00                 	db	0
   872  017CBD  00                 	db	0
   873  017CBE  00                 	db	0
   874  017CBF  00                 	db	0
   875  017CC0  00                 	db	0
   876  017CC1  00                 	db	0
   877  017CC2  00                 	db	0
   878  017CC3  00                 	db	0
   879  017CC4  00                 	db	0
   880  017CC5  00                 	db	0
   881  017CC6  00                 	db	0
   882  017CC7  00                 	db	0
   883  017CC8  00                 	db	0
   884  017CC9  00                 	db	0
   885  017CCA  00                 	db	0
   886  017CCB  00                 	db	0
   887  017CCC  00                 	db	0
   888  017CCD  00                 	db	0
   889  017CCE  00                 	db	0
   890  017CCF  00                 	db	0
   891  017CD0  00                 	db	0
   892  017CD1  00                 	db	0
   893  017CD2  00                 	db	0
   894  017CD3  00                 	db	0
   895  017CD4  00                 	db	0
   896  017CD5  00                 	db	0
   897  017CD6  00                 	db	0
   898  017CD7  00                 	db	0
   899  017CD8  00                 	db	0
   900  017CD9  00                 	db	0
   901  017CDA  00                 	db	0
   902  017CDB  00                 	db	0
   903  017CDC  00                 	db	0
   904  017CDD  00                 	db	0
   905  017CDE  00                 	db	0
   906  017CDF  00                 	db	0
   907  017CE0  00                 	db	0
   908  017CE1  00                 	db	0
   909  017CE2  00                 	db	0
   910  017CE3  00                 	db	0
   911  017CE4  00                 	db	0
   912  017CE5  00                 	db	0
   913  017CE6  00                 	db	0
   914  017CE7  00                 	db	0
   915  017CE8  00                 	db	0
   916  017CE9  00                 	db	0
   917  017CEA  00                 	db	0
   918  017CEB  00                 	db	0
   919  017CEC  00                 	db	0
   920  017CED  00                 	db	0
   921  017CEE  00                 	db	0
   922  017CEF  00                 	db	0
   923  017CF0  00                 	db	0
   924  017CF1  00                 	db	0
   925  017CF2  00                 	db	0
   926  017CF3  00                 	db	0
   927  017CF4  00                 	db	0
   928  017CF5  00                 	db	0
   929  017CF6  00                 	db	0
   930  017CF7  00                 	db	0
   931  017CF8  00                 	db	0
   932  017CF9  00                 	db	0
   933  017CFA  00                 	db	0
   934  017CFB  00                 	db	0
   935  017CFC  00                 	db	0
   936  017CFD  00                 	db	0
   937  017CFE  00                 	db	0
   938  017CFF  00                 	db	0
   939  017D00  00                 	db	0
   940  017D01  00                 	db	0
   941  017D02  00                 	db	0
   942  017D03  00                 	db	0
   943  017D04  00                 	db	0
   944  017D05  00                 	db	0
   945  017D06  00                 	db	0
   946  017D07  00                 	db	0
   947  017D08  00                 	db	0
   948  017D09  00                 	db	0
   949  017D0A  00                 	db	0
   950  017D0B  00                 	db	0
   951  017D0C  00                 	db	0
   952  017D0D  00                 	db	0
   953  017D0E  00                 	db	0
   954  017D0F  00                 	db	0
   955  017D10  00                 	db	0
   956  017D11  00                 	db	0
   957  017D12  00                 	db	0
   958  017D13  00                 	db	0
   959  017D14  00                 	db	0
   960  017D15  00                 	db	0
   961  017D16  00                 	db	0
   962  017D17  00                 	db	0
   963  017D18  00                 	db	0
   964  017D19  00                 	db	0
   965  017D1A  00                 	db	0
   966  017D1B  00                 	db	0
   967  017D1C  00                 	db	0
   968  017D1D  00                 	db	0
   969  017D1E  00                 	db	0
   970  017D1F  00                 	db	0
   971  017D20  00                 	db	0
   972  017D21  00                 	db	0
   973  017D22  00                 	db	0
   974  017D23  00                 	db	0
   975  017D24  00                 	db	0
   976  017D25  00                 	db	0
   977  017D26  00                 	db	0
   978  017D27  00                 	db	0
   979  017D28  00                 	db	0
   980  017D29  00                 	db	0
   981  017D2A  00                 	db	0
   982  017D2B  00                 	db	0
   983  017D2C  00                 	db	0
   984  017D2D  00                 	db	0
   985  017D2E  00                 	db	0
   986  017D2F  00                 	db	0
   987  017D30  00                 	db	0
   988  017D31  00                 	db	0
   989  017D32  00                 	db	0
   990  017D33  00                 	db	0
   991  017D34  00                 	db	0
   992  017D35  00                 	db	0
   993  017D36  00                 	db	0
   994  017D37  00                 	db	0
   995  017D38  00                 	db	0
   996  017D39  00                 	db	0
   997  017D3A  00                 	db	0
   998  017D3B  00                 	db	0
   999  017D3C  00                 	db	0
  1000  017D3D  00                 	db	0
  1001  017D3E  00                 	db	0
  1002  017D3F  00                 	db	0
  1003  017D40  00                 	db	0
  1004  017D41  00                 	db	0
  1005  017D42  00                 	db	0
  1006  017D43  00                 	db	0
  1007  017D44  00                 	db	0
  1008  017D45  00                 	db	0
  1009  017D46  00                 	db	0
  1010  017D47  00                 	db	0
  1011  017D48  00                 	db	0
  1012  017D49  00                 	db	0
  1013  017D4A  00                 	db	0
  1014  017D4B  00                 	db	0
  1015  017D4C  00                 	db	0
  1016  017D4D  00                 	db	0
  1017  017D4E  00                 	db	0
  1018  017D4F  00                 	db	0
  1019  017D50  00                 	db	0
  1020  017D51  00                 	db	0
  1021  017D52  00                 	db	0
  1022  017D53  00                 	db	0
  1023  017D54  00                 	db	0
  1024  017D55  00                 	db	0
  1025  017D56  00                 	db	0
  1026  017D57  00                 	db	0
  1027  017D58  00                 	db	0
  1028  017D59  00                 	db	0
  1029  017D5A  00                 	db	0
  1030  017D5B  00                 	db	0
  1031  017D5C  00                 	db	0
  1032  017D5D  00                 	db	0
  1033  017D5E  00                 	db	0
  1034  017D5F  00                 	db	0
  1035  017D60  00                 	db	0
  1036  017D61  00                 	db	0
  1037  017D62  00                 	db	0
  1038  017D63  00                 	db	0
  1039  017D64  00                 	db	0
  1040  017D65  00                 	db	0
  1041  017D66  00                 	db	0
  1042  017D67  00                 	db	0
  1043  017D68  00                 	db	0
  1044  017D69  00                 	db	0
  1045  017D6A  00                 	db	0
  1046  017D6B  00                 	db	0
  1047  017D6C  00                 	db	0
  1048  017D6D  00                 	db	0
  1049  017D6E  00                 	db	0
  1050  017D6F  00                 	db	0
  1051  017D70  00                 	db	0
  1052  017D71  00                 	db	0
  1053  017D72  00                 	db	0
  1054  017D73  00                 	db	0
  1055  017D74  00                 	db	0
  1056  017D75  00                 	db	0
  1057  017D76  00                 	db	0
  1058  017D77  00                 	db	0
  1059  017D78  00                 	db	0
  1060  017D79  00                 	db	0
  1061  017D7A  00                 	db	0
  1062  017D7B  00                 	db	0
  1063  017D7C  00                 	db	0
  1064  017D7D  00                 	db	0
  1065  017D7E  00                 	db	0
  1066  017D7F  00                 	db	0
  1067  017D80  00                 	db	0
  1068  017D81  00                 	db	0
  1069  017D82  00                 	db	0
  1070  017D83  00                 	db	0
  1071  017D84  00                 	db	0
  1072  017D85  00                 	db	0
  1073  017D86  00                 	db	0
  1074  017D87  00                 	db	0
  1075  017D88  00                 	db	0
  1076  017D89  00                 	db	0
  1077  017D8A  00                 	db	0
  1078  017D8B  00                 	db	0
  1079  017D8C  00                 	db	0
  1080  017D8D  00                 	db	0
  1081  017D8E  00                 	db	0
  1082  017D8F  00                 	db	0
  1083  017D90  00                 	db	0
  1084  017D91  00                 	db	0
  1085  017D92  00                 	db	0
  1086  017D93  00                 	db	0
  1087  017D94  00                 	db	0
  1088  017D95  00                 	db	0
  1089  017D96  00                 	db	0
  1090  017D97  00                 	db	0
  1091  017D98  00                 	db	0
  1092  017D99  00                 	db	0
  1093  017D9A  00                 	db	0
  1094  017D9B  00                 	db	0
  1095  017D9C  00                 	db	0
  1096  017D9D  00                 	db	0
  1097  017D9E  00                 	db	0
  1098  017D9F  00                 	db	0
  1099  017DA0  00                 	db	0
  1100  017DA1  00                 	db	0
  1101  017DA2  00                 	db	0
  1102  017DA3  00                 	db	0
  1103  017DA4  00                 	db	0
  1104  017DA5  00                 	db	0
  1105  017DA6  00                 	db	0
  1106  017DA7  00                 	db	0
  1107  017DA8  00                 	db	0
  1108  017DA9  00                 	db	0
  1109  017DAA  00                 	db	0
  1110  017DAB  00                 	db	0
  1111  017DAC  00                 	db	0
  1112  017DAD  00                 	db	0
  1113  017DAE  00                 	db	0
  1114  017DAF  00                 	db	0
  1115  017DB0  00                 	db	0
  1116  017DB1  00                 	db	0
  1117  017DB2  00                 	db	0
  1118  017DB3  00                 	db	0
  1119  017DB4  00                 	db	0
  1120  017DB5  00                 	db	0
  1121  017DB6  00                 	db	0
  1122  017DB7  00                 	db	0
  1123  017DB8  00                 	db	0
  1124  017DB9  00                 	db	0
  1125  017DBA  00                 	db	0
  1126  017DBB  00                 	db	0
  1127  017DBC  00                 	db	0
  1128  017DBD  00                 	db	0
  1129  017DBE  00                 	db	0
  1130  017DBF  00                 	db	0
  1131  017DC0  00                 	db	0
  1132  017DC1  00                 	db	0
  1133  017DC2  00                 	db	0
  1134  017DC3  00                 	db	0
  1135  017DC4  00                 	db	0
  1136  017DC5  00                 	db	0
  1137  017DC6  00                 	db	0
  1138  017DC7  00                 	db	0
  1139  017DC8  00                 	db	0
  1140  017DC9  00                 	db	0
  1141  017DCA  00                 	db	0
  1142  017DCB  00                 	db	0
  1143  017DCC  00                 	db	0
  1144  017DCD  00                 	db	0
  1145  017DCE  00                 	db	0
  1146  017DCF  00                 	db	0
  1147  017DD0  00                 	db	0
  1148  017DD1  00                 	db	0
  1149  017DD2  00                 	db	0
  1150  017DD3  00                 	db	0
  1151  017DD4  00                 	db	0
  1152  017DD5  00                 	db	0
  1153  017DD6  00                 	db	0
  1154  017DD7  00                 	db	0
  1155  017DD8  00                 	db	0
  1156  017DD9  00                 	db	0
  1157  017DDA  00                 	db	0
  1158  017DDB  00                 	db	0
  1159  017DDC  00                 	db	0
  1160  017DDD  00                 	db	0
  1161  017DDE  00                 	db	0
  1162  017DDF  00                 	db	0
  1163  017DE0  00                 	db	0
  1164  017DE1  00                 	db	0
  1165  017DE2  00                 	db	0
  1166  017DE3  00                 	db	0
  1167  017DE4  00                 	db	0
  1168  017DE5  00                 	db	0
  1169  017DE6  00                 	db	0
  1170  017DE7  00                 	db	0
  1171  017DE8  00                 	db	0
  1172  017DE9  00                 	db	0
  1173  017DEA  00                 	db	0
  1174  017DEB  00                 	db	0
  1175  017DEC  00                 	db	0
  1176  017DED  00                 	db	0
  1177  017DEE  00                 	db	0
  1178  017DEF  00                 	db	0
  1179  017DF0  00                 	db	0
  1180  017DF1  00                 	db	0
  1181  017DF2  00                 	db	0
  1182  017DF3  00                 	db	0
  1183  017DF4  00                 	db	0
  1184  017DF5  00                 	db	0
  1185  017DF6  00                 	db	0
  1186  017DF7  00                 	db	0
  1187  017DF8  00                 	db	0
  1188  017DF9  00                 	db	0
  1189  017DFA  00                 	db	0
  1190  017DFB  00                 	db	0
  1191  017DFC  00                 	db	0
  1192  017DFD  00                 	db	0
  1193  017DFE  00                 	db	0
  1194  017DFF  00                 	db	0
  1195  017E00  00                 	db	0
  1196  017E01  00                 	db	0
  1197  017E02  00                 	db	0
  1198  017E03  00                 	db	0
  1199  017E04  00                 	db	0
  1200  017E05  00                 	db	0
  1201  017E06  00                 	db	0
  1202  017E07  00                 	db	0
  1203  017E08  00                 	db	0
  1204  017E09  00                 	db	0
  1205  017E0A  00                 	db	0
  1206  017E0B  00                 	db	0
  1207  017E0C  00                 	db	0
  1208  017E0D  00                 	db	0
  1209  017E0E  00                 	db	0
  1210  017E0F  00                 	db	0
  1211  017E10  00                 	db	0
  1212  017E11  00                 	db	0
  1213  017E12  00                 	db	0
  1214  017E13  00                 	db	0
  1215  017E14  00                 	db	0
  1216  017E15  00                 	db	0
  1217  017E16  00                 	db	0
  1218  017E17  00                 	db	0
  1219  017E18  00                 	db	0
  1220  017E19  00                 	db	0
  1221  017E1A  00                 	db	0
  1222  017E1B  00                 	db	0
  1223  017E1C  00                 	db	0
  1224  017E1D  00                 	db	0
  1225  017E1E  00                 	db	0
  1226  017E1F  00                 	db	0
  1227  017E20  00                 	db	0
  1228  017E21  00                 	db	0
  1229  017E22  00                 	db	0
  1230  017E23  00                 	db	0
  1231  017E24  00                 	db	0
  1232  017E25  00                 	db	0
  1233  017E26  00                 	db	0
  1234  017E27  00                 	db	0
  1235  017E28  00                 	db	0
  1236  017E29  00                 	db	0
  1237  017E2A  00                 	db	0
  1238  017E2B  00                 	db	0
  1239                           
  1240                           	psect	idataBANK0
  1241  01B158                     __pidataBANK0:
  1242                           	opt callstack 0
  1243                           
  1244                           ;initializer for _R
  1245  01B158  0000               	dw	0
  1246  01B15A  0000               	dw	0
  1247  01B15C  0000               	dw	0
  1248  01B15E  0000               	dw	0
  1249  01B160  0000               	dw	0
  1250  01B162  0000               	dw	0
  1251  01B164  0000               	dw	0
  1252  01B166  0000               	dw	0
  1253  01B168  0000               	dw	0
  1254  01B16A  0000               	dw	0
  1255  01B16C  0000               	dw	0
  1256  01B16E  0000               	dw	0
  1257  01B170  0000               	dw	0
  1258  01B172  0000               	dw	0
  1259  01B174  0000               	dw	0
  1260  01B176  0000               	dw	0
  1261  01B178  0F67               	dw	3943
  1262  01B17A  0F8F               	dw	3983
  1263  01B17C  00                 	db	0
  1264  01B17D  0000               	dw	0
  1265  01B17F  00                 	db	0
  1266                           
  1267                           ;initializer for _H
  1268  01B180  00                 	db	0
  1269  01B181  00                 	db	0
  1270  01B182  01                 	db	1
  1271  01B183  00                 	db	0
  1272  01B184  01                 	db	1
  1273  01B185  00                 	db	0
  1274  01B186  00                 	db	0
  1275                           
  1276                           	psect	idataBANK1
  1277  019684                     __pidataBANK1:
  1278                           	opt callstack 0
  1279                           
  1280                           ;initializer for _C
  1281  019684  0000               	dw	0
  1282  019686  0000               	dw	0
  1283  019688  0000               	dw	0
  1284  01968A  0000               	dw	0
  1285  01968C  0000               	dw	0
  1286  01968E  0000               	dw	0
  1287  019690  0000               	dw	0
  1288  019692  0000               	dw	0
  1289  019694  0000               	dw	0
  1290  019696  0000               	dw	0
  1291  019698  0000               	dw	0
  1292  01969A  0000               	dw	0
  1293  01969C  0000               	dw	0
  1294  01969E  0000               	dw	0
  1295  0196A0  0000               	dw	0
  1296  0196A2  0000               	dw	0
  1297  0196A4  0000               	dw	0
  1298  0196A6  0000               	dw	0
  1299  0196A8  0000               	dw	0
  1300  0196AA  0000               	dw	0
  1301  0196AC  0000               	dw	0
  1302  0196AE  0000               	dw	0
  1303  0196B0  0000               	dw	0
  1304  0196B2  0000               	dw	0
  1305  0196B4  0000               	dw	0
  1306  0196B6  0000               	dw	0
  1307  0196B8  0000               	dw	0
  1308  0196BA  0000               	dw	0
  1309  0196BC  0000               	dw	0
  1310  0196BE  0000               	dw	0
  1311  0196C0  0000               	dw	0
  1312  0196C2  0000               	dw	0
  1313  0196C4  0000               	dw	0
  1314  0196C6  0000               	dw	0
  1315  0196C8  0000               	dw	0
  1316  0196CA  0000               	dw	0
  1317  0196CC  0000               	dw	0
  1318  0196CE  0000               	dw	0
  1319  0196D0  0000               	dw	0
  1320  0196D2  0000               	dw	0
  1321  0196D4  0000               	dw	0
  1322  0196D6  0000               	dw	0
  1323  0196D8  0000               	dw	0
  1324  0196DA  0000               	dw	0
  1325  0196DC  0000               	dw	0
  1326  0196DE  0000               	dw	0
  1327  0196E0  0000               	dw	0
  1328  0196E2  0000               	dw	0
  1329  0196E4  0000               	dw	0
  1330  0196E6  0000               	dw	0
  1331  0196E8  0000               	dw	0
  1332  0196EA  0000               	dw	0
  1333  0196EC  0000               	dw	0
  1334  0196EE  0000               	dw	0
  1335  0196F0  0000               	dw	0
  1336  0196F2  0000               	dw	0
  1337  0196F4  0000               	dw	0
  1338  0196F6  0000               	dw	0
  1339  0196F8  0000               	dw	0
  1340  0196FA  0000               	dw	0
  1341  0196FC  0000               	dw	0
  1342  0196FE  0000               	dw	0
  1343  019700  0000               	dw	0
  1344  019702  0000               	dw	0
  1345  019704  0000               	dw	0
  1346  019706  0000               	dw	0
  1347  019708  0000               	dw	0
  1348  01970A  0000               	dw	0
  1349  01970C  0000               	dw	0
  1350  01970E  42FA               	dw	17146
  1351  019710  0000               	dw	0
  1352  019712  0000               	dw	0
  1353  019714  0000               	dw	0
  1354  019716  0000               	dw	0
  1355  019718  0000               	dw	0
  1356  01971A  0000               	dw	0
  1357  01971C  0000               	dw	0
  1358  01971E  0000               	dw	0
  1359  019720  0000               	dw	0
  1360  019722  0000               	dw	0
  1361  019724  0000               	dw	0
  1362  019726  0000               	dw	0
  1363  019728  0000               	dw	0
  1364  01972A  0000               	dw	0
  1365  01972C  0000               	dw	0
  1366  01972E  0000               	dw	0
  1367  019730  0000               	dw	0
  1368  019732  0000               	dw	0
  1369  019734  00                 	db	0
  1370  019735  0000               	dw	0
  1371  019737  0000               	dw	0
  1372  019739  0000               	dw	0
  1373  01973B  0000               	dw	0
  1374  01973D  0000               	dw	0
  1375  01973F  0000               	dw	0
  1376  019741  0000               	dw	0
  1377  019743  0000               	dw	0
  1378  019745  0000               	dw	0
  1379  019747  0000               	dw	0
  1380  019749  0000               	dw	0
  1381  01974B  0000               	dw	0
  1382  01974D  0000               	dw	0
  1383  01974F  0000               	dw	0
  1384  019751  0000               	dw	0
  1385  019753  0000               	dw	0
  1386  019755  0000               	dw	0
  1387  019757  0000               	dw	0
  1388  019759  0000               	dw	0
  1389  01975B  0000               	dw	0
  1390  01975D  0000               	dw	0
  1391  01975F  0000               	dw	0
  1392  019761  0000               	dw	0
  1393  019763  0000               	dw	0
  1394  019765  0000               	dw	0
  1395  019767  0000               	dw	0
  1396  019769  0000               	dw	0
  1397  01976B  0000               	dw	0
  1398  01976D  0000               	dw	0
  1399  01976F  0000               	dw	0
  1400  019771  0000               	dw	0
  1401  019773  0000               	dw	0
  1402  019775  0000               	dw	0
  1403  019777  0000               	dw	0
  1404  019779  0000               	dw	0
  1405  01977B  00                 	db	0
  1406  01977C  00                 	db	0
  1407  01977D  00                 	db	0
  1408  01977E  00                 	db	0
  1409  01977F  00                 	db	0
  1410  019780  00                 	db	0
  1411  019781  00                 	db	0
  1412  019782  00                 	db	0
  1413  019783  00                 	db	0
  1414                           
  1415                           	psect	idataBANK2
  1416  019B06                     __pidataBANK2:
  1417                           	opt callstack 0
  1418                           
  1419                           ;initializer for stoa@F1166
  1420  019B06  28                 	db	40
  1421  019B07  6E                 	db	110
  1422  019B08  75                 	db	117
  1423  019B09  6C                 	db	108
  1424  019B0A  6C                 	db	108
  1425  019B0B  29                 	db	41
  1426  019B0C  00                 	db	0
  1427                           
  1428                           ;initializer for _V
  1429  019B0D  00                 	db	0
  1430  019B0E  00                 	db	0
  1431  019B0F  00                 	db	0
  1432  019B10  00                 	db	0
  1433  019B11  00                 	db	0
  1434  019B12  00                 	db	0
  1435  019B13  00                 	db	0
  1436  019B14  00                 	db	0
  1437  019B15  00                 	db	0
  1438  019B16  00                 	db	0
  1439  019B17  00                 	db	0
  1440  019B18  00                 	db	0
  1441  019B19  00                 	db	0
  1442  019B1A  00                 	db	0
  1443  019B1B  00                 	db	0
  1444  019B1C  00                 	db	0
  1445  019B1D  00                 	db	0
  1446  019B1E  00                 	db	0
  1447  019B1F  00                 	db	0
  1448  019B20  00                 	db	0
  1449  019B21  00                 	db	0
  1450  019B22  00                 	db	0
  1451  019B23  00                 	db	0
  1452  019B24  00                 	db	0
  1453  019B25  00                 	db	0
  1454  019B26  00                 	db	0
  1455  019B27  00                 	db	0
  1456  019B28  00                 	db	0
  1457  019B29  00                 	db	0
  1458  019B2A  00                 	db	0
  1459  019B2B  00                 	db	0
  1460  019B2C  00                 	db	0
  1461  019B2D  00                 	db	0
  1462  019B2E  00                 	db	0
  1463  019B2F  00                 	db	0
  1464  019B30  00                 	db	0
  1465  019B31  00                 	db	0
  1466  019B32  00                 	db	0
  1467  019B33  00                 	db	0
  1468  019B34  00                 	db	0
  1469  019B35  00                 	db	0
  1470  019B36  00                 	db	0
  1471  019B37  00                 	db	0
  1472  019B38  00                 	db	0
  1473  019B39  00                 	db	0
  1474  019B3A  00                 	db	0
  1475  019B3B  00                 	db	0
  1476  019B3C  00                 	db	0
  1477  019B3D  00                 	db	0
  1478  019B3E  00                 	db	0
  1479  019B3F  00                 	db	0
  1480  019B40  00                 	db	0
  1481  019B41  00                 	db	0
  1482  019B42  00                 	db	0
  1483  019B43  00                 	db	0
  1484  019B44  00                 	db	0
  1485  019B45  00                 	db	0
  1486  019B46  00                 	db	0
  1487  019B47  00                 	db	0
  1488  019B48  00                 	db	0
  1489  019B49  00                 	db	0
  1490  019B4A  00                 	db	0
  1491  019B4B  00                 	db	0
  1492  019B4C  00                 	db	0
  1493  019B4D  00                 	db	0
  1494  019B4E  00                 	db	0
  1495  019B4F  00                 	db	0
  1496  019B50  00                 	db	0
  1497  019B51  00                 	db	0
  1498  019B52  00                 	db	0
  1499  019B53  00                 	db	0
  1500  019B54  00                 	db	0
  1501  019B55  00                 	db	0
  1502  019B56  00                 	db	0
  1503  019B57  00                 	db	0
  1504  019B58  00                 	db	0
  1505  019B59  00                 	db	0
  1506  019B5A  00                 	db	0
  1507  019B5B  00                 	db	0
  1508  019B5C  00                 	db	0
  1509  019B5D  00                 	db	0
  1510  019B5E  00                 	db	0
  1511  019B5F  00                 	db	0
  1512  019B60  00                 	db	0
  1513  019B61  00                 	db	0
  1514  019B62  00                 	db	0
  1515  019B63  00                 	db	0
  1516  019B64  00                 	db	0
  1517  019B65  00                 	db	0
  1518  019B66  00                 	db	0
  1519  019B67  00                 	db	0
  1520  019B68  00                 	db	0
  1521  019B69  00                 	db	0
  1522  019B6A  00                 	db	0
  1523  019B6B  00                 	db	0
  1524  019B6C  00                 	db	0
  1525  019B6D  00                 	db	0
  1526  019B6E  00                 	db	0
  1527  019B6F  00                 	db	0
  1528  019B70  00                 	db	0
  1529  019B71  00                 	db	0
  1530  019B72  00                 	db	0
  1531  019B73  00                 	db	0
  1532  019B74  00                 	db	0
  1533  019B75  00                 	db	0
  1534  019B76  00                 	db	0
  1535  019B77  00                 	db	0
  1536  019B78  00                 	db	0
  1537  019B79  00                 	db	0
  1538  019B7A  00                 	db	0
  1539  019B7B  00                 	db	0
  1540  019B7C  00                 	db	0
  1541  019B7D  00                 	db	0
  1542  019B7E  00                 	db	0
  1543  019B7F  00                 	db	0
  1544  019B80  00                 	db	0
  1545  019B81  00                 	db	0
  1546  019B82  00                 	db	0
  1547  019B83  00                 	db	0
  1548  019B84  00                 	db	0
  1549  019B85  00                 	db	0
  1550  019B86  00                 	db	0
  1551  019B87  00                 	db	0
  1552  019B88  00                 	db	0
  1553  019B89  00                 	db	0
  1554  019B8A  00                 	db	0
  1555  019B8B  00                 	db	0
  1556  019B8C  00                 	db	0
  1557  019B8D  00                 	db	0
  1558  019B8E  0000               	dw	0
  1559  019B90  0000               	dw	0
  1560  019B92  0000               	dw	0
  1561  019B94  0000               	dw	0
  1562  019B96  00                 	db	0
  1563  019B97  00                 	db	0
  1564  019B98  00                 	db	0
  1565  019B99  00                 	db	0
  1566  019B9A  00                 	db	0
  1567  019B9B  00                 	db	0
  1568  019B9C  0000               	dw	0
  1569  019B9E  0000               	dw	0
  1570  019BA0  0000               	dw	0
  1571  019BA2  0000               	dw	0
  1572  019BA4  0000               	dw	0
  1573  019BA6  0000               	dw	0
  1574  019BA8  00                 	db	0
  1575  019BA9  00                 	db	0
  1576  019BAA  00                 	db	0
  1577  019BAB  00                 	db	0
  1578  019BAC  00                 	db	0
  1579  019BAD  00                 	db	0
  1580  019BAE  00                 	db	0
  1581  019BAF  00                 	db	0
  1582  019BB0  00                 	db	0
  1583  019BB1  00                 	db	0
  1584  019BB2  00                 	db	0
  1585  019BB3  0000               	dw	0
  1586  019BB5  0000               	dw	0
  1587  019BB7  2D                 	db	45
  1588  019BB8  00                 	db	0
  1589  019BB9  00                 	db	0
  1590  019BBA  00                 	db	0
  1591  019BBB  0000               	dw	0
  1592  019BBD  0000               	dw	0
  1593  019BBF  0000               	dw	0
  1594  019BC1  0000               	dw	0
  1595  019BC3  0000               	dw	0
  1596  019BC5  0000               	dw	0
  1597  019BC7  0000               	dw	0
  1598  019BC9  0000               	dw	0
  1599                           
  1600                           	psect	mediumconst
  1601  00FA78                     __pmediumconst:
  1602                           	opt callstack 0
  1603  00FA78  00                 	db	0
  1604  00FA79                     _BVSOC_TABLE:
  1605                           	opt callstack 0
  1606  00FA79  59D8               	dw	23000
  1607  00FA7B  0000               	dw	0
  1608  00FA7D  0005               	dw	5
  1609  00FA7F  0000               	dw	0
  1610  00FA81  5B68               	dw	23400
  1611  00FA83  0000               	dw	0
  1612  00FA85  000A               	dw	10
  1613  00FA87  0000               	dw	0
  1614  00FA89  5C30               	dw	23600
  1615  00FA8B  0000               	dw	0
  1616  00FA8D  0014               	dw	20
  1617  00FA8F  0000               	dw	0
  1618  00FA91  5E38               	dw	24120
  1619  00FA93  0000               	dw	0
  1620  00FA95  0019               	dw	25
  1621  00FA97  0000               	dw	0
  1622  00FA99  5E88               	dw	24200
  1623  00FA9B  0000               	dw	0
  1624  00FA9D  001E               	dw	30
  1625  00FA9F  0000               	dw	0
  1626  00FAA1  5F78               	dw	24440
  1627  00FAA3  0000               	dw	0
  1628  00FAA5  0028               	dw	40
  1629  00FAA7  0000               	dw	0
  1630  00FAA9  5FDC               	dw	24540
  1631  00FAAB  0000               	dw	0
  1632  00FAAD  002D               	dw	45
  1633  00FAAF  0000               	dw	0
  1634  00FAB1  6018               	dw	24600
  1635  00FAB3  0000               	dw	0
  1636  00FAB5  0032               	dw	50
  1637  00FAB7  0000               	dw	0
  1638  00FAB9  6046               	dw	24646
  1639  00FABB  0000               	dw	0
  1640  00FABD  0035               	dw	53
  1641  00FABF  0000               	dw	0
  1642  00FAC1  607C               	dw	24700
  1643  00FAC3  0000               	dw	0
  1644  00FAC5  0037               	dw	55
  1645  00FAC7  0000               	dw	0
  1646  00FAC9  60AE               	dw	24750
  1647  00FACB  0000               	dw	0
  1648  00FACD  0039               	dw	57
  1649  00FACF  0000               	dw	0
  1650  00FAD1  60E0               	dw	24800
  1651  00FAD3  0000               	dw	0
  1652  00FAD5  003C               	dw	60
  1653  00FAD7  0000               	dw	0
  1654  00FAD9  6112               	dw	24850
  1655  00FADB  0000               	dw	0
  1656  00FADD  003F               	dw	63
  1657  00FADF  0000               	dw	0
  1658  00FAE1  615D               	dw	24925
  1659  00FAE3  0000               	dw	0
  1660  00FAE5  0043               	dw	67
  1661  00FAE7  0000               	dw	0
  1662  00FAE9  61A8               	dw	25000
  1663  00FAEB  0000               	dw	0
  1664  00FAED  0046               	dw	70
  1665  00FAEF  0000               	dw	0
  1666  00FAF1  61BC               	dw	25020
  1667  00FAF3  0000               	dw	0
  1668  00FAF5  0048               	dw	72
  1669  00FAF7  0000               	dw	0
  1670  00FAF9  61D0               	dw	25040
  1671  00FAFB  0000               	dw	0
  1672  00FAFD  004B               	dw	75
  1673  00FAFF  0000               	dw	0
  1674  00FB01  61DA               	dw	25050
  1675  00FB03  0000               	dw	0
  1676  00FB05  0050               	dw	80
  1677  00FB07  0000               	dw	0
  1678  00FB09  61E4               	dw	25060
  1679  00FB0B  0000               	dw	0
  1680  00FB0D  0055               	dw	85
  1681  00FB0F  0000               	dw	0
  1682  00FB11  61F8               	dw	25080
  1683  00FB13  0000               	dw	0
  1684  00FB15  005A               	dw	90
  1685  00FB17  0000               	dw	0
  1686  00FB19  6208               	dw	25096
  1687  00FB1B  0000               	dw	0
  1688  00FB1D  005C               	dw	92
  1689  00FB1F  0000               	dw	0
  1690  00FB21  6222               	dw	25122
  1691  00FB23  0000               	dw	0
  1692  00FB25  005D               	dw	93
  1693  00FB27  0000               	dw	0
  1694  00FB29  6234               	dw	25140
  1695  00FB2B  0000               	dw	0
  1696  00FB2D  005F               	dw	95
  1697  00FB2F  0000               	dw	0
  1698  00FB31  6248               	dw	25160
  1699  00FB33  0000               	dw	0
  1700  00FB35  0061               	dw	97
  1701  00FB37  0000               	dw	0
  1702  00FB39  625C               	dw	25180
  1703  00FB3B  0000               	dw	0
  1704  00FB3D  0064               	dw	100
  1705  00FB3F  0000               	dw	0
  1706  00FB41  6784               	dw	26500
  1707  00FB43  0000               	dw	0
  1708  00FB45  0062               	dw	98
  1709  00FB47  0000               	dw	0
  1710  00FB49                     __end_of_BVSOC_TABLE:
  1711                           	opt callstack 0
  1712  00FB49                     _T:
  1713                           	opt callstack 0
  1714  00FB49  63                 	db	99
  1715  00FB4A  6F                 	db	111
  1716  00FB4B  6D                 	db	109
  1717  00FB4C  6D                 	db	109
  1718  00FB4D  61                 	db	97
  1719  00FB4E  6E                 	db	110
  1720  00FB4F  64                 	db	100
  1721  00FB50  73                 	db	115
  1722  00FB51  20                 	db	32
  1723  00FB52  31                 	db	49
  1724  00FB53  00                 	db	0
  1725  00FB54  00                 	db	0
  1726  00FB55  00                 	db	0
  1727  00FB56  00                 	db	0
  1728  00FB57  00                 	db	0
  1729  00FB58  00                 	db	0
  1730  00FB59  00                 	db	0
  1731  00FB5A  00                 	db	0
  1732  00FB5B  64                 	db	100
  1733  00FB5C  69                 	db	105
  1734  00FB5D  73                 	db	115
  1735  00FB5E  70                 	db	112
  1736  00FB5F  6C                 	db	108
  1737  00FB60  61                 	db	97
  1738  00FB61  79                 	db	121
  1739  00FB62  73                 	db	115
  1740  00FB63  20                 	db	32
  1741  00FB64  31                 	db	49
  1742  00FB65  00                 	db	0
  1743  00FB66  00                 	db	0
  1744  00FB67  00                 	db	0
  1745  00FB68  00                 	db	0
  1746  00FB69  00                 	db	0
  1747  00FB6A  00                 	db	0
  1748  00FB6B  00                 	db	0
  1749  00FB6C  00                 	db	0
  1750  00FB6D  63                 	db	99
  1751  00FB6E  6F                 	db	111
  1752  00FB6F  6D                 	db	109
  1753  00FB70  6D                 	db	109
  1754  00FB71  61                 	db	97
  1755  00FB72  6E                 	db	110
  1756  00FB73  64                 	db	100
  1757  00FB74  73                 	db	115
  1758  00FB75  20                 	db	32
  1759  00FB76  32                 	db	50
  1760  00FB77  00                 	db	0
  1761  00FB78  00                 	db	0
  1762  00FB79  00                 	db	0
  1763  00FB7A  00                 	db	0
  1764  00FB7B  00                 	db	0
  1765  00FB7C  00                 	db	0
  1766  00FB7D  00                 	db	0
  1767  00FB7E  00                 	db	0
  1768  00FB7F  64                 	db	100
  1769  00FB80  69                 	db	105
  1770  00FB81  73                 	db	115
  1771  00FB82  70                 	db	112
  1772  00FB83  6C                 	db	108
  1773  00FB84  61                 	db	97
  1774  00FB85  79                 	db	121
  1775  00FB86  73                 	db	115
  1776  00FB87  20                 	db	32
  1777  00FB88  32                 	db	50
  1778  00FB89  00                 	db	0
  1779  00FB8A  00                 	db	0
  1780  00FB8B  00                 	db	0
  1781  00FB8C  00                 	db	0
  1782  00FB8D  00                 	db	0
  1783  00FB8E  00                 	db	0
  1784  00FB8F  00                 	db	0
  1785  00FB90  00                 	db	0
  1786  00FB91  63                 	db	99
  1787  00FB92  6F                 	db	111
  1788  00FB93  6D                 	db	109
  1789  00FB94  6D                 	db	109
  1790  00FB95  61                 	db	97
  1791  00FB96  6E                 	db	110
  1792  00FB97  64                 	db	100
  1793  00FB98  73                 	db	115
  1794  00FB99  20                 	db	32
  1795  00FB9A  33                 	db	51
  1796  00FB9B  00                 	db	0
  1797  00FB9C  00                 	db	0
  1798  00FB9D  00                 	db	0
  1799  00FB9E  00                 	db	0
  1800  00FB9F  00                 	db	0
  1801  00FBA0  00                 	db	0
  1802  00FBA1  00                 	db	0
  1803  00FBA2  00                 	db	0
  1804  00FBA3  64                 	db	100
  1805  00FBA4  69                 	db	105
  1806  00FBA5  73                 	db	115
  1807  00FBA6  70                 	db	112
  1808  00FBA7  6C                 	db	108
  1809  00FBA8  61                 	db	97
  1810  00FBA9  79                 	db	121
  1811  00FBAA  73                 	db	115
  1812  00FBAB  20                 	db	32
  1813  00FBAC  33                 	db	51
  1814  00FBAD  00                 	db	0
  1815  00FBAE  00                 	db	0
  1816  00FBAF  00                 	db	0
  1817  00FBB0  00                 	db	0
  1818  00FBB1  00                 	db	0
  1819  00FBB2  00                 	db	0
  1820  00FBB3  00                 	db	0
  1821  00FBB4  00                 	db	0
  1822  00FBB5  63                 	db	99
  1823  00FBB6  6F                 	db	111
  1824  00FBB7  6D                 	db	109
  1825  00FBB8  6D                 	db	109
  1826  00FBB9  61                 	db	97
  1827  00FBBA  6E                 	db	110
  1828  00FBBB  64                 	db	100
  1829  00FBBC  73                 	db	115
  1830  00FBBD  20                 	db	32
  1831  00FBBE  34                 	db	52
  1832  00FBBF  00                 	db	0
  1833  00FBC0  00                 	db	0
  1834  00FBC1  00                 	db	0
  1835  00FBC2  00                 	db	0
  1836  00FBC3  00                 	db	0
  1837  00FBC4  00                 	db	0
  1838  00FBC5  00                 	db	0
  1839  00FBC6  00                 	db	0
  1840  00FBC7  64                 	db	100
  1841  00FBC8  69                 	db	105
  1842  00FBC9  73                 	db	115
  1843  00FBCA  70                 	db	112
  1844  00FBCB  6C                 	db	108
  1845  00FBCC  61                 	db	97
  1846  00FBCD  79                 	db	121
  1847  00FBCE  73                 	db	115
  1848  00FBCF  20                 	db	32
  1849  00FBD0  34                 	db	52
  1850  00FBD1  00                 	db	0
  1851  00FBD2  00                 	db	0
  1852  00FBD3  00                 	db	0
  1853  00FBD4  00                 	db	0
  1854  00FBD5  00                 	db	0
  1855  00FBD6  00                 	db	0
  1856  00FBD7  00                 	db	0
  1857  00FBD8  00                 	db	0
  1858  00FBD9                     __end_of_T:
  1859                           	opt callstack 0
  1860  00FBD9                     _spin:
  1861                           	opt callstack 0
  1862  00FBD9  7C                 	db	124
  1863  00FBDA  7C                 	db	124
  1864  00FBDB  2F                 	db	47
  1865  00FBDC  2F                 	db	47
  1866  00FBDD  2D                 	db	45
  1867  00FBDE  2D                 	db	45
  1868  00FBDF  00                 	db	0
  1869  00FBE0  00                 	db	0
  1870  00FBE1  00                 	db	0
  1871  00FBE2  00                 	db	0
  1872  00FBE3  00                 	db	0
  1873  00FBE4  00                 	db	0
  1874  00FBE5  00                 	db	0
  1875  00FBE6  00                 	db	0
  1876  00FBE7  00                 	db	0
  1877  00FBE8  00                 	db	0
  1878  00FBE9  00                 	db	0
  1879  00FBEA  00                 	db	0
  1880  00FBEB  00                 	db	0
  1881  00FBEC  00                 	db	0
  1882  00FBED  7C                 	db	124
  1883  00FBEE  7C                 	db	124
  1884  00FBEF  2F                 	db	47
  1885  00FBF0  2F                 	db	47
  1886  00FBF1  2D                 	db	45
  1887  00FBF2  2D                 	db	45
  1888  00FBF3  5C                 	db	92
  1889  00FBF4  5C                 	db	92
  1890  00FBF5  00                 	db	0
  1891  00FBF6  00                 	db	0
  1892  00FBF7  00                 	db	0
  1893  00FBF8  00                 	db	0
  1894  00FBF9  00                 	db	0
  1895  00FBFA  00                 	db	0
  1896  00FBFB  00                 	db	0
  1897  00FBFC  00                 	db	0
  1898  00FBFD  00                 	db	0
  1899  00FBFE  00                 	db	0
  1900  00FBFF  00                 	db	0
  1901  00FC00  00                 	db	0
  1902  00FC01  4F                 	db	79
  1903  00FC02  4F                 	db	79
  1904  00FC03  4F                 	db	79
  1905  00FC04  4F                 	db	79
  1906  00FC05  4F                 	db	79
  1907  00FC06  4F                 	db	79
  1908  00FC07  2D                 	db	45
  1909  00FC08  2D                 	db	45
  1910  00FC09  5F                 	db	95
  1911  00FC0A  5F                 	db	95
  1912  00FC0B  2D                 	db	45
  1913  00FC0C  00                 	db	0
  1914  00FC0D  00                 	db	0
  1915  00FC0E  00                 	db	0
  1916  00FC0F  00                 	db	0
  1917  00FC10  00                 	db	0
  1918  00FC11  00                 	db	0
  1919  00FC12  00                 	db	0
  1920  00FC13  00                 	db	0
  1921  00FC14  00                 	db	0
  1922  00FC15  76                 	db	118
  1923  00FC16  76                 	db	118
  1924  00FC17  3C                 	db	60
  1925  00FC18  3C                 	db	60
  1926  00FC19  5E                 	db	94
  1927  00FC1A  5E                 	db	94
  1928  00FC1B  3E                 	db	62
  1929  00FC1C  3E                 	db	62
  1930  00FC1D  00                 	db	0
  1931  00FC1E  00                 	db	0
  1932  00FC1F  00                 	db	0
  1933  00FC20  00                 	db	0
  1934  00FC21  00                 	db	0
  1935  00FC22  00                 	db	0
  1936  00FC23  00                 	db	0
  1937  00FC24  00                 	db	0
  1938  00FC25  00                 	db	0
  1939  00FC26  00                 	db	0
  1940  00FC27  00                 	db	0
  1941  00FC28  00                 	db	0
  1942  00FC29  2E                 	db	46
  1943  00FC2A  2E                 	db	46
  1944  00FC2B  2A                 	db	42
  1945  00FC2C  2A                 	db	42
  1946  00FC2D  78                 	db	120
  1947  00FC2E  23                 	db	35
  1948  00FC2F  78                 	db	120
  1949  00FC30  23                 	db	35
  1950  00FC31  58                 	db	88
  1951  00FC32  58                 	db	88
  1952  00FC33  7C                 	db	124
  1953  00FC34  7C                 	db	124
  1954  00FC35  2D                 	db	45
  1955  00FC36  2D                 	db	45
  1956  00FC37  00                 	db	0
  1957  00FC38  00                 	db	0
  1958  00FC39  00                 	db	0
  1959  00FC3A  00                 	db	0
  1960  00FC3B  00                 	db	0
  1961  00FC3C  00                 	db	0
  1962  00FC3D  2E                 	db	46
  1963  00FC3E  2E                 	db	46
  1964  00FC3F  6F                 	db	111
  1965  00FC40  6F                 	db	111
  1966  00FC41  4F                 	db	79
  1967  00FC42  4F                 	db	79
  1968  00FC43  6F                 	db	111
  1969  00FC44  6F                 	db	111
  1970  00FC45  00                 	db	0
  1971  00FC46  00                 	db	0
  1972  00FC47  00                 	db	0
  1973  00FC48  00                 	db	0
  1974  00FC49  00                 	db	0
  1975  00FC4A  00                 	db	0
  1976  00FC4B  00                 	db	0
  1977  00FC4C  00                 	db	0
  1978  00FC4D  00                 	db	0
  1979  00FC4E  00                 	db	0
  1980  00FC4F  00                 	db	0
  1981  00FC50  00                 	db	0
  1982  00FC51                     __end_of_spin:
  1983                           	opt callstack 0
  1984  00FC51  0000               	dw	0
  1985  00FC53  3F80               	dw	16256
  1986  00FC55  0000               	dw	0
  1987  00FC57  3FC0               	dw	16320
  1988  00FC59                     __end_of_bp:
  1989                           	opt callstack 0
  1990  00FC59  AA00               	dw	43520
  1991  00FC5B  3FB8               	dw	16312
  1992  00FC5D                     __end_of_ivln2_h:
  1993                           	opt callstack 0
  1994  00FC5D  23C6               	dw	9158
  1995  00FC5F  B8F6               	dw	47350
  1996  00FC61                     __end_of_cp_l:
  1997                           	opt callstack 0
  1998  00FC61  4000               	dw	16384
  1999  00FC63  3F76               	dw	16246
  2000  00FC65                     __end_of_cp_h:
  2001                           	opt callstack 0
  2002  0000                     _IVTADL	set	14493
  2003  0000                     _IVTADH	set	14494
  2004  0000                     _IVTADU	set	14495
  2005  0000                     _PIR6bits	set	14758
  2006  0000                     _PIR4bits	set	14756
  2007  0000                     _PIE8bits	set	14744
  2008  0000                     _PIR8bits	set	14760
  2009  0000                     _SCANPR	set	14839
  2010  0000                     _DMA2PR	set	14836
  2011  0000                     _DMA1PR	set	14835
  2012  0000                     _MAINPR	set	14834
  2013  0000                     _ISRPR	set	14833
  2014  0000                     _PIE2bits	set	14738
  2015  0000                     _PIR2bits	set	14754
  2016  0000                     _PIE9bits	set	14745
  2017  0000                     _PIR9bits	set	14761
  2018  0000                     _PIE6bits	set	14742
  2019  0000                     _PIE3bits	set	14739
  2020  0000                     _PMD7	set	14791
  2021  0000                     _PMD6	set	14790
  2022  0000                     _PMD5	set	14789
  2023  0000                     _PMD4	set	14788
  2024  0000                     _PMD3	set	14787
  2025  0000                     _PMD2	set	14786
  2026  0000                     _PMD1	set	14785
  2027  0000                     _PMD0	set	14784
  2028  0000                     _OSCTUNE	set	14814
  2029  0000                     _OSCFRQ	set	14815
  2030  0000                     _OSCEN	set	14813
  2031  0000                     _OSCCON3	set	14811
  2032  0000                     _OSCCON1	set	14809
  2033  0000                     _IPR8bits	set	14728
  2034  0000                     _IPR9bits	set	14729
  2035  0000                     _IPR5bits	set	14725
  2036  0000                     _IPR1bits	set	14721
  2037  0000                     _IPR3bits	set	14723
  2038  0000                     _IPR6bits	set	14726
  2039  0000                     _IPR2bits	set	14722
  2040  0000                     _PIE5bits	set	14741
  2041  0000                     _PIE1bits	set	14737
  2042  0000                     _PIR5bits	set	14757
  2043  0000                     _PIR1bits	set	14753
  2044  0000                     _PLLR	set	118496
  2045  0000                     _SPI1SDIPPS	set	15071
  2046  0000                     _U1RXPPS	set	15077
  2047  0000                     _RC6PPS	set	14870
  2048  0000                     _RC5PPS	set	14869
  2049  0000                     _INT1PPS	set	15041
  2050  0000                     _RD1PPS	set	14873
  2051  0000                     _INT0PPS	set	15040
  2052  0000                     _RC3PPS	set	14867
  2053  0000                     _RB6PPS	set	14862
  2054  0000                     _SPI1SCKPPS	set	15070
  2055  0000                     _U2RXPPS	set	15080
  2056  0000                     _SLRCONF	set	14995
  2057  0000                     _SLRCONE	set	14979
  2058  0000                     _SLRCOND	set	14963
  2059  0000                     _SLRCONC	set	14947
  2060  0000                     _SLRCONB	set	14931
  2061  0000                     _SLRCONA	set	14915
  2062  0000                     _ODCOND	set	14962
  2063  0000                     _ODCONC	set	14946
  2064  0000                     _ODCONB	set	14930
  2065  0000                     _ODCONA	set	14914
  2066  0000                     _ODCONF	set	14994
  2067  0000                     _ODCONE	set	14978
  2068  0000                     _WPUC	set	14945
  2069  0000                     _WPUA	set	14913
  2070  0000                     _WPUB	set	14929
  2071  0000                     _WPUE	set	14977
  2072  0000                     _WPUF	set	14993
  2073  0000                     _WPUD	set	14961
  2074  0000                     _ANSELA	set	14912
  2075  0000                     _ANSELF	set	14992
  2076  0000                     _ANSELE	set	14976
  2077  0000                     _ANSELB	set	14928
  2078  0000                     _ANSELC	set	14944
  2079  0000                     _ANSELD	set	14960
  2080  0000                     _DMA2SSA	set	15321
  2081  0000                     _DMA1SSA	set	15353
  2082  0000                     _DMA2DSZ	set	15310
  2083  0000                     _DMA2SSZ	set	15319
  2084  0000                     _DMA2DSA	set	15312
  2085  0000                     _DMA1DSZ	set	15342
  2086  0000                     _DMA1SSZ	set	15351
  2087  0000                     _DMA1DSA	set	15344
  2088  0000                     _DMA2CON0bits	set	15324
  2089  0000                     _DMA2CON1bits	set	15325
  2090  0000                     _DMA1CON0bits	set	15356
  2091  0000                     _DMA1CON1bits	set	15357
  2092  0000                     _DMA2CON0	set	15324
  2093  0000                     _DMA2AIRQ	set	15326
  2094  0000                     _DMA2SIRQ	set	15327
  2095  0000                     _DMA2CON1	set	15325
  2096  0000                     _DMA1CON0	set	15356
  2097  0000                     _DMA1AIRQ	set	15358
  2098  0000                     _DMA1SIRQ	set	15359
  2099  0000                     _DMA1CON1	set	15357
  2100  0000                     _CLKRCON	set	15589
  2101  0000                     _CLKRCLK	set	15590
  2102  0000                     _SPI1INTFbits	set	15642
  2103  0000                     _SPI1RXB	set	15632
  2104  0000                     _SPI1TXB	set	15633
  2105  0000                     _SPI1TCNTL	set	15634
  2106  0000                     _SPI1CON0	set	15636
  2107  0000                     _SPI1CLK	set	15644
  2108  0000                     _SPI1BAUD	set	15641
  2109  0000                     _SPI1CON2	set	15638
  2110  0000                     _SPI1CON1	set	15637
  2111  0000                     _U2RXB	set	15824
  2112  0000                     _U2TXB	set	15826
  2113  0000                     _U2ERRIE	set	15842
  2114  0000                     _U2ERRIR	set	15841
  2115  0000                     _U2UIR	set	15840
  2116  0000                     _U2FIFO	set	15839
  2117  0000                     _U2BRGH	set	15838
  2118  0000                     _U2BRGL	set	15837
  2119  0000                     _U2CON2	set	15836
  2120  0000                     _U2CON1	set	15835
  2121  0000                     _U2CON0	set	15834
  2122  0000                     _U2P3L	set	15832
  2123  0000                     _U2P2L	set	15830
  2124  0000                     _U2P1L	set	15828
  2125  0000                     _U1RXB	set	15848
  2126  0000                     _U1ERRIE	set	15866
  2127  0000                     _U1ERRIR	set	15865
  2128  0000                     _U1UIR	set	15864
  2129  0000                     _U1FIFO	set	15863
  2130  0000                     _U1BRGH	set	15862
  2131  0000                     _U1BRGL	set	15861
  2132  0000                     _U1CON2	set	15860
  2133  0000                     _U1CON1	set	15859
  2134  0000                     _U1CON0	set	15858
  2135  0000                     _U1P3H	set	15857
  2136  0000                     _U1P3L	set	15856
  2137  0000                     _U1P2H	set	15855
  2138  0000                     _U1P2L	set	15854
  2139  0000                     _U1P1H	set	15853
  2140  0000                     _U1P1L	set	15852
  2141  0000                     _FVRCON	set	16065
  2142  0000                     _ADFLTRL	set	16102
  2143  0000                     _ADFLTRH	set	16103
  2144  0000                     _ADCON0bits	set	16120
  2145  0000                     _ADCON0	set	16120
  2146  0000                     _ADCLK	set	16127
  2147  0000                     _ADACT	set	16126
  2148  0000                     _ADREF	set	16125
  2149  0000                     _ADSTAT	set	16124
  2150  0000                     _ADCON3	set	16123
  2151  0000                     _ADCON2	set	16122
  2152  0000                     _ADCON1	set	16121
  2153  0000                     _ADPREH	set	16119
  2154  0000                     _ADPREL	set	16118
  2155  0000                     _ADCAP	set	16117
  2156  0000                     _ADACQH	set	16116
  2157  0000                     _ADACQL	set	16115
  2158  0000                     _ADPCH	set	16113
  2159  0000                     _ADRPT	set	16108
  2160  0000                     _ADACCU	set	16106
  2161  0000                     _ADSTPTH	set	16101
  2162  0000                     _ADSTPTL	set	16100
  2163  0000                     _ADUTHH	set	16097
  2164  0000                     _ADUTHL	set	16096
  2165  0000                     _ADLTHH	set	16095
  2166  0000                     _ADLTHL	set	16094
  2167  0000                     _CCPTMRS1bits	set	16223
  2168  0000                     _PORTFbits	set	16335
  2169  0000                     _LATFbits	set	16319
  2170  0000                     _LATCbits	set	16316
  2171  0000                     _LATDbits	set	16317
  2172  0000                     _PORTBbits	set	16331
  2173  0000                     _T3CONbits	set	16294
  2174  0000                     _T3CON	set	16294
  2175  0000                     _TMR3L	set	16292
  2176  0000                     _TMR3H	set	16293
  2177  0000                     _T3CLK	set	16297
  2178  0000                     _T3GATE	set	16296
  2179  0000                     _T3GCON	set	16295
  2180  0000                     _T2CON	set	16300
  2181  0000                     _T2TMR	set	16298
  2182  0000                     _T2PR	set	16299
  2183  0000                     _T2RST	set	16303
  2184  0000                     _T2HLT	set	16301
  2185  0000                     _T2CLKCON	set	16302
  2186  0000                     _PWM8DCL	set	16224
  2187  0000                     _PWM8DCH	set	16225
  2188  0000                     _PWM8CON	set	16226
  2189  0000                     _LATEbits	set	16318
  2190  0000                     _T5CONbits	set	16282
  2191  0000                     _T5CON	set	16282
  2192  0000                     _TMR5L	set	16280
  2193  0000                     _TMR5H	set	16281
  2194  0000                     _T5CLK	set	16285
  2195  0000                     _T5GATE	set	16284
  2196  0000                     _T5GCON	set	16283
  2197  0000                     _T6CON	set	16276
  2198  0000                     _T6TMR	set	16274
  2199  0000                     _T6PR	set	16275
  2200  0000                     _T6RST	set	16279
  2201  0000                     _T6HLT	set	16277
  2202  0000                     _T6CLKCON	set	16278
  2203  0000                     _TRISD	set	16325
  2204  0000                     _TRISC	set	16324
  2205  0000                     _TRISB	set	16323
  2206  0000                     _TRISA	set	16322
  2207  0000                     _TRISF	set	16327
  2208  0000                     _TRISE	set	16326
  2209  0000                     _LATC	set	16316
  2210  0000                     _LATB	set	16315
  2211  0000                     _LATF	set	16319
  2212  0000                     _LATA	set	16314
  2213  0000                     _LATD	set	16317
  2214  0000                     _LATE	set	16318
  2215  0000                     _IVTLOCKbits	set	16340
  2216  0000                     _IVTLOCK	set	16340
  2217  0000                     _INTCON0bits	set	16338
  2218  0000                     _GIE	set	130711
  2219  00FC65                     STR_65:
  2220                           
  2221                           ; BSR set to: 57
  2222  00FC65  20                 	db	32
  2223  00FC66  25                 	db	37
  2224  00FC67  6C                 	db	108	;'l'
  2225  00FC68  75                 	db	117	;'u'
  2226  00FC69  2C                 	db	44
  2227  00FC6A  25                 	db	37
  2228  00FC6B  34                 	db	52	;'4'
  2229  00FC6C  2E                 	db	46
  2230  00FC6D  34                 	db	52	;'4'
  2231  00FC6E  66                 	db	102	;'f'
  2232  00FC6F  2C                 	db	44
  2233  00FC70  25                 	db	37
  2234  00FC71  34                 	db	52	;'4'
  2235  00FC72  2E                 	db	46
  2236  00FC73  34                 	db	52	;'4'
  2237  00FC74  66                 	db	102	;'f'
  2238  00FC75  2C                 	db	44
  2239  00FC76  25                 	db	37
  2240  00FC77  34                 	db	52	;'4'
  2241  00FC78  2E                 	db	46
  2242  00FC79  34                 	db	52	;'4'
  2243  00FC7A  66                 	db	102	;'f'
  2244  00FC7B  2C                 	db	44
  2245  00FC7C  25                 	db	37
  2246  00FC7D  34                 	db	52	;'4'
  2247  00FC7E  2E                 	db	46
  2248  00FC7F  34                 	db	52	;'4'
  2249  00FC80  66                 	db	102	;'f'
  2250  00FC81  2C                 	db	44
  2251  00FC82  25                 	db	37
  2252  00FC83  34                 	db	52	;'4'
  2253  00FC84  2E                 	db	46
  2254  00FC85  33                 	db	51	;'3'
  2255  00FC86  66                 	db	102	;'f'
  2256  00FC87  2C                 	db	44
  2257  00FC88  25                 	db	37
  2258  00FC89  34                 	db	52	;'4'
  2259  00FC8A  2E                 	db	46
  2260  00FC8B  33                 	db	51	;'3'
  2261  00FC8C  66                 	db	102	;'f'
  2262  00FC8D  2C                 	db	44
  2263  00FC8E  25                 	db	37
  2264  00FC8F  34                 	db	52	;'4'
  2265  00FC90  2E                 	db	46
  2266  00FC91  33                 	db	51	;'3'
  2267  00FC92  66                 	db	102	;'f'
  2268  00FC93  2C                 	db	44
  2269  00FC94  25                 	db	37
  2270  00FC95  34                 	db	52	;'4'
  2271  00FC96  2E                 	db	46
  2272  00FC97  33                 	db	51	;'3'
  2273  00FC98  66                 	db	102	;'f'
  2274  00FC99  2C                 	db	44
  2275  00FC9A  25                 	db	37
  2276  00FC9B  34                 	db	52	;'4'
  2277  00FC9C  2E                 	db	46
  2278  00FC9D  33                 	db	51	;'3'
  2279  00FC9E  66                 	db	102	;'f'
  2280  00FC9F  2C                 	db	44
  2281  00FCA0  25                 	db	37
  2282  00FCA1  34                 	db	52	;'4'
  2283  00FCA2  2E                 	db	46
  2284  00FCA3  33                 	db	51	;'3'
  2285  00FCA4  66                 	db	102	;'f'
  2286  00FCA5  2C                 	db	44
  2287  00FCA6  25                 	db	37
  2288  00FCA7  34                 	db	52	;'4'
  2289  00FCA8  2E                 	db	46
  2290  00FCA9  33                 	db	51	;'3'
  2291  00FCAA  64                 	db	100	;'d'
  2292  00FCAB  2C                 	db	44
  2293  00FCAC  25                 	db	37
  2294  00FCAD  34                 	db	52	;'4'
  2295  00FCAE  2E                 	db	46
  2296  00FCAF  33                 	db	51	;'3'
  2297  00FCB0  64                 	db	100	;'d'
  2298  00FCB1  2C                 	db	44
  2299  00FCB2  25                 	db	37
  2300  00FCB3  32                 	db	50	;'2'
  2301  00FCB4  2E                 	db	46
  2302  00FCB5  36                 	db	54	;'6'
  2303  00FCB6  66                 	db	102	;'f'
  2304  00FCB7  0D                 	db	13
  2305  00FCB8  0A                 	db	10
  2306  00FCB9  00                 	db	0
  2307  00FCBA                     STR_17:
  2308                           
  2309                           ; BSR set to: 57
  2310  00FCBA  52                 	db	82	;'R'
  2311  00FCBB  31                 	db	49	;'1'
  2312  00FCBC  20                 	db	32
  2313  00FCBD  25                 	db	37
  2314  00FCBE  32                 	db	50	;'2'
  2315  00FCBF  2E                 	db	46
  2316  00FCC0  33                 	db	51	;'3'
  2317  00FCC1  66                 	db	102	;'f'
  2318  00FCC2  20                 	db	32
  2319  00FCC3  25                 	db	37
  2320  00FCC4  33                 	db	51	;'3'
  2321  00FCC5  2E                 	db	46
  2322  00FCC6  34                 	db	52	;'4'
  2323  00FCC7  66                 	db	102	;'f'
  2324  00FCC8  20                 	db	32
  2325  00FCC9  20                 	db	32
  2326  00FCCA  20                 	db	32
  2327  00FCCB  20                 	db	32
  2328  00FCCC  20                 	db	32
  2329  00FCCD  20                 	db	32
  2330  00FCCE  20                 	db	32
  2331  00FCCF  20                 	db	32
  2332  00FCD0  20                 	db	32
  2333  00FCD1  20                 	db	32
  2334  00FCD2  20                 	db	32
  2335  00FCD3  00                 	db	0
  2336  00FCD4                     STR_18:
  2337                           
  2338                           ; BSR set to: 57
  2339  00FCD4  52                 	db	82	;'R'
  2340  00FCD5  32                 	db	50	;'2'
  2341  00FCD6  20                 	db	32
  2342  00FCD7  25                 	db	37
  2343  00FCD8  32                 	db	50	;'2'
  2344  00FCD9  2E                 	db	46
  2345  00FCDA  33                 	db	51	;'3'
  2346  00FCDB  66                 	db	102	;'f'
  2347  00FCDC  20                 	db	32
  2348  00FCDD  25                 	db	37
  2349  00FCDE  33                 	db	51	;'3'
  2350  00FCDF  2E                 	db	46
  2351  00FCE0  34                 	db	52	;'4'
  2352  00FCE1  66                 	db	102	;'f'
  2353  00FCE2  20                 	db	32
  2354  00FCE3  20                 	db	32
  2355  00FCE4  20                 	db	32
  2356  00FCE5  20                 	db	32
  2357  00FCE6  20                 	db	32
  2358  00FCE7  20                 	db	32
  2359  00FCE8  20                 	db	32
  2360  00FCE9  20                 	db	32
  2361  00FCEA  20                 	db	32
  2362  00FCEB  20                 	db	32
  2363  00FCEC  20                 	db	32
  2364  00FCED  00                 	db	0
  2365  00FCEE                     
  2366                           ; BSR set to: 57
  2367  00FCEE  20                 	db	32
  2368  00FCEF  4D                 	db	77	;'M'
  2369  00FCF0  65                 	db	101	;'e'
  2370  00FCF1  73                 	db	115	;'s'
  2371  00FCF2  67                 	db	103	;'g'
  2372  00FCF3  20                 	db	32
  2373  00FCF4  25                 	db	37
  2374  00FCF5  64                 	db	100	;'d'
  2375  00FCF6  20                 	db	32
  2376  00FCF7  53                 	db	83	;'S'
  2377  00FCF8  74                 	db	116	;'t'
  2378  00FCF9  61                 	db	97	;'a'
  2379  00FCFA  63                 	db	99	;'c'
  2380  00FCFB  6B                 	db	107	;'k'
  2381  00FCFC  20                 	db	32
  2382  00FCFD  25                 	db	37
  2383  00FCFE  64                 	db	100	;'d'
  2384  00FCFF  20                 	db	32
  2385  00FD00  20                 	db	32
  2386  00FD01  20                 	db	32
  2387  00FD02  20                 	db	32
  2388  00FD03  20                 	db	32
  2389  00FD04  20                 	db	32
  2390  00FD05  00                 	db	0
  2391  00FD06                     STR_9:
  2392                           
  2393                           ; BSR set to: 57
  2394  00FD06  53                 	db	83	;'S'
  2395  00FD07  20                 	db	32
  2396  00FD08  53                 	db	83	;'S'
  2397  00FD09  25                 	db	37
  2398  00FD0A  63                 	db	99	;'c'
  2399  00FD0B  43                 	db	67	;'C'
  2400  00FD0C  20                 	db	32
  2401  00FD0D  25                 	db	37
  2402  00FD0E  64                 	db	100	;'d'
  2403  00FD0F  20                 	db	32
  2404  00FD10  25                 	db	37
  2405  00FD11  32                 	db	50	;'2'
  2406  00FD12  2E                 	db	46
  2407  00FD13  34                 	db	52	;'4'
  2408  00FD14  66                 	db	102	;'f'
  2409  00FD15  20                 	db	32
  2410  00FD16  20                 	db	32
  2411  00FD17  20                 	db	32
  2412  00FD18  20                 	db	32
  2413  00FD19  20                 	db	32
  2414  00FD1A  20                 	db	32
  2415  00FD1B  20                 	db	32
  2416  00FD1C  00                 	db	0
  2417  00FD1D                     STR_16:
  2418                           
  2419                           ; BSR set to: 57
  2420  00FD1D  45                 	db	69	;'E'
  2421  00FD1E  53                 	db	83	;'S'
  2422  00FD1F  52                 	db	82	;'R'
  2423  00FD20  20                 	db	32
  2424  00FD21  20                 	db	32
  2425  00FD22  25                 	db	37
  2426  00FD23  32                 	db	50	;'2'
  2427  00FD24  2E                 	db	46
  2428  00FD25  36                 	db	54	;'6'
  2429  00FD26  66                 	db	102	;'f'
  2430  00FD27  20                 	db	32
  2431  00FD28  20                 	db	32
  2432  00FD29  20                 	db	32
  2433  00FD2A  20                 	db	32
  2434  00FD2B  20                 	db	32
  2435  00FD2C  20                 	db	32
  2436  00FD2D  20                 	db	32
  2437  00FD2E  20                 	db	32
  2438  00FD2F  20                 	db	32
  2439  00FD30  20                 	db	32
  2440  00FD31  20                 	db	32
  2441  00FD32  00                 	db	0
  2442  00FD33                     STR_10:
  2443                           
  2444                           ; BSR set to: 57
  2445  00FD33  53                 	db	83	;'S'
  2446  00FD34  74                 	db	116	;'t'
  2447  00FD35  61                 	db	97	;'a'
  2448  00FD36  74                 	db	116	;'t'
  2449  00FD37  69                 	db	105	;'i'
  2450  00FD38  63                 	db	99	;'c'
  2451  00FD39  20                 	db	32
  2452  00FD3A  53                 	db	83	;'S'
  2453  00FD3B  4F                 	db	79	;'O'
  2454  00FD3C  43                 	db	67	;'C'
  2455  00FD3D  20                 	db	32
  2456  00FD3E  25                 	db	37
  2457  00FD3F  64                 	db	100	;'d'
  2458  00FD40  20                 	db	32
  2459  00FD41  20                 	db	32
  2460  00FD42  20                 	db	32
  2461  00FD43  20                 	db	32
  2462  00FD44  20                 	db	32
  2463  00FD45  20                 	db	32
  2464  00FD46  20                 	db	32
  2465  00FD47  20                 	db	32
  2466  00FD48  00                 	db	0
  2467  00FD49                     STR_11:
  2468                           
  2469                           ; BSR set to: 57
  2470  00FD49  42                 	db	66	;'B'
  2471  00FD4A  61                 	db	97	;'a'
  2472  00FD4B  74                 	db	116	;'t'
  2473  00FD4C  74                 	db	116	;'t'
  2474  00FD4D  65                 	db	101	;'e'
  2475  00FD4E  72                 	db	114	;'r'
  2476  00FD4F  79                 	db	121	;'y'
  2477  00FD50  20                 	db	32
  2478  00FD51  41                 	db	65	;'A'
  2479  00FD52  68                 	db	104	;'h'
  2480  00FD53  20                 	db	32
  2481  00FD54  25                 	db	37
  2482  00FD55  33                 	db	51	;'3'
  2483  00FD56  2E                 	db	46
  2484  00FD57  32                 	db	50	;'2'
  2485  00FD58  66                 	db	102	;'f'
  2486  00FD59  20                 	db	32
  2487  00FD5A  20                 	db	32
  2488  00FD5B  20                 	db	32
  2489  00FD5C  20                 	db	32
  2490  00FD5D  20                 	db	32
  2491  00FD5E  00                 	db	0
  2492  00FD5F                     STR_15:
  2493                           
  2494                           ; BSR set to: 57
  2495  00FD5F  43                 	db	67	;'C'
  2496  00FD60  68                 	db	104	;'h'
  2497  00FD61  65                 	db	101	;'e'
  2498  00FD62  63                 	db	99	;'c'
  2499  00FD63  6B                 	db	107	;'k'
  2500  00FD64  69                 	db	105	;'i'
  2501  00FD65  6E                 	db	110	;'n'
  2502  00FD66  67                 	db	103	;'g'
  2503  00FD67  20                 	db	32
  2504  00FD68  25                 	db	37
  2505  00FD69  63                 	db	99	;'c'
  2506  00FD6A  20                 	db	32
  2507  00FD6B  25                 	db	37
  2508  00FD6C  63                 	db	99	;'c'
  2509  00FD6D  20                 	db	32
  2510  00FD6E  20                 	db	32
  2511  00FD6F  20                 	db	32
  2512  00FD70  20                 	db	32
  2513  00FD71  20                 	db	32
  2514  00FD72  20                 	db	32
  2515  00FD73  00                 	db	0
  2516  00FD74                     STR_37:
  2517                           
  2518                           ; BSR set to: 57
  2519  00FD74  45                 	db	69	;'E'
  2520  00FD75  53                 	db	83	;'S'
  2521  00FD76  52                 	db	82	;'R'
  2522  00FD77  20                 	db	32
  2523  00FD78  20                 	db	32
  2524  00FD79  25                 	db	37
  2525  00FD7A  32                 	db	50	;'2'
  2526  00FD7B  2E                 	db	46
  2527  00FD7C  36                 	db	54	;'6'
  2528  00FD7D  66                 	db	102	;'f'
  2529  00FD7E  20                 	db	32
  2530  00FD7F  20                 	db	32
  2531  00FD80  20                 	db	32
  2532  00FD81  20                 	db	32
  2533  00FD82  20                 	db	32
  2534  00FD83  20                 	db	32
  2535  00FD84  20                 	db	32
  2536  00FD85  20                 	db	32
  2537  00FD86  20                 	db	32
  2538  00FD87  00                 	db	0
  2539  00FD88                     STR_36:
  2540                           
  2541                           ; BSR set to: 57
  2542  00FD88  53                 	db	83	;'S'
  2543  00FD89  25                 	db	37
  2544  00FD8A  63                 	db	99	;'c'
  2545  00FD8B  43                 	db	67	;'C'
  2546  00FD8C  20                 	db	32
  2547  00FD8D  25                 	db	37
  2548  00FD8E  64                 	db	100	;'d'
  2549  00FD8F  20                 	db	32
  2550  00FD90  52                 	db	82	;'R'
  2551  00FD91  55                 	db	85	;'U'
  2552  00FD92  4E                 	db	78	;'N'
  2553  00FD93  20                 	db	32
  2554  00FD94  25                 	db	37
  2555  00FD95  64                 	db	100	;'d'
  2556  00FD96  20                 	db	32
  2557  00FD97  20                 	db	32
  2558  00FD98  20                 	db	32
  2559  00FD99  20                 	db	32
  2560  00FD9A  20                 	db	32
  2561  00FD9B  00                 	db	0
  2562  00FD9C                     STR_25:
  2563                           
  2564                           ; BSR set to: 57
  2565  00FD9C  50                 	db	80	;'P'
  2566  00FD9D  56                 	db	86	;'V'
  2567  00FD9E  20                 	db	32
  2568  00FD9F  25                 	db	37
  2569  00FDA0  63                 	db	99	;'c'
  2570  00FDA1  20                 	db	32
  2571  00FDA2  57                 	db	87	;'W'
  2572  00FDA3  48                 	db	72	;'H'
  2573  00FDA4  20                 	db	32
  2574  00FDA5  25                 	db	37
  2575  00FDA6  33                 	db	51	;'3'
  2576  00FDA7  2E                 	db	46
  2577  00FDA8  32                 	db	50	;'2'
  2578  00FDA9  66                 	db	102	;'f'
  2579  00FDAA  20                 	db	32
  2580  00FDAB  20                 	db	32
  2581  00FDAC  20                 	db	32
  2582  00FDAD  20                 	db	32
  2583  00FDAE  20                 	db	32
  2584  00FDAF  00                 	db	0
  2585  00FDB0                     STR_34:
  2586                           
  2587                           ; BSR set to: 57
  2588  00FDB0  42                 	db	66	;'B'
  2589  00FDB1  41                 	db	65	;'A'
  2590  00FDB2  54                 	db	84	;'T'
  2591  00FDB3  54                 	db	84	;'T'
  2592  00FDB4  20                 	db	32
  2593  00FDB5  50                 	db	80	;'P'
  2594  00FDB6  57                 	db	87	;'W'
  2595  00FDB7  52                 	db	82	;'R'
  2596  00FDB8  20                 	db	32
  2597  00FDB9  25                 	db	37
  2598  00FDBA  33                 	db	51	;'3'
  2599  00FDBB  2E                 	db	46
  2600  00FDBC  32                 	db	50	;'2'
  2601  00FDBD  66                 	db	102	;'f'
  2602  00FDBE  20                 	db	32
  2603  00FDBF  20                 	db	32
  2604  00FDC0  20                 	db	32
  2605  00FDC1  20                 	db	32
  2606  00FDC2  20                 	db	32
  2607  00FDC3  00                 	db	0
  2608  00FDC4                     STR_38:
  2609                           
  2610                           ; BSR set to: 57
  2611  00FDC4  52                 	db	82	;'R'
  2612  00FDC5  31                 	db	49	;'1'
  2613  00FDC6  20                 	db	32
  2614  00FDC7  25                 	db	37
  2615  00FDC8  32                 	db	50	;'2'
  2616  00FDC9  2E                 	db	46
  2617  00FDCA  33                 	db	51	;'3'
  2618  00FDCB  66                 	db	102	;'f'
  2619  00FDCC  20                 	db	32
  2620  00FDCD  25                 	db	37
  2621  00FDCE  33                 	db	51	;'3'
  2622  00FDCF  2E                 	db	46
  2623  00FDD0  34                 	db	52	;'4'
  2624  00FDD1  66                 	db	102	;'f'
  2625  00FDD2  20                 	db	32
  2626  00FDD3  20                 	db	32
  2627  00FDD4  20                 	db	32
  2628  00FDD5  20                 	db	32
  2629  00FDD6  20                 	db	32
  2630  00FDD7  00                 	db	0
  2631  00FDD8                     STR_39:
  2632                           
  2633                           ; BSR set to: 57
  2634  00FDD8  52                 	db	82	;'R'
  2635  00FDD9  32                 	db	50	;'2'
  2636  00FDDA  20                 	db	32
  2637  00FDDB  25                 	db	37
  2638  00FDDC  32                 	db	50	;'2'
  2639  00FDDD  2E                 	db	46
  2640  00FDDE  33                 	db	51	;'3'
  2641  00FDDF  66                 	db	102	;'f'
  2642  00FDE0  20                 	db	32
  2643  00FDE1  25                 	db	37
  2644  00FDE2  33                 	db	51	;'3'
  2645  00FDE3  2E                 	db	46
  2646  00FDE4  34                 	db	52	;'4'
  2647  00FDE5  66                 	db	102	;'f'
  2648  00FDE6  20                 	db	32
  2649  00FDE7  20                 	db	32
  2650  00FDE8  20                 	db	32
  2651  00FDE9  20                 	db	32
  2652  00FDEA  20                 	db	32
  2653  00FDEB  00                 	db	0
  2654  00FDEC                     STR_22:
  2655                           
  2656                           ; BSR set to: 57
  2657  00FDEC  50                 	db	80	;'P'
  2658  00FDED  56                 	db	86	;'V'
  2659  00FDEE  20                 	db	32
  2660  00FDEF  25                 	db	37
  2661  00FDF0  63                 	db	99	;'c'
  2662  00FDF1  20                 	db	32
  2663  00FDF2  50                 	db	80	;'P'
  2664  00FDF3  57                 	db	87	;'W'
  2665  00FDF4  52                 	db	82	;'R'
  2666  00FDF5  20                 	db	32
  2667  00FDF6  25                 	db	37
  2668  00FDF7  33                 	db	51	;'3'
  2669  00FDF8  2E                 	db	46
  2670  00FDF9  32                 	db	50	;'2'
  2671  00FDFA  66                 	db	102	;'f'
  2672  00FDFB  20                 	db	32
  2673  00FDFC  20                 	db	32
  2674  00FDFD  20                 	db	32
  2675  00FDFE  20                 	db	32
  2676  00FDFF  00                 	db	0
  2677  00FE00                     STR_35:
  2678                           
  2679                           ; BSR set to: 57
  2680  00FE00  42                 	db	66	;'B'
  2681  00FE01  41                 	db	65	;'A'
  2682  00FE02  48                 	db	72	;'H'
  2683  00FE03  20                 	db	32
  2684  00FE04  25                 	db	37
  2685  00FE05  33                 	db	51	;'3'
  2686  00FE06  2E                 	db	46
  2687  00FE07  32                 	db	50	;'2'
  2688  00FE08  66                 	db	102	;'f'
  2689  00FE09  20                 	db	32
  2690  00FE0A  50                 	db	80	;'P'
  2691  00FE0B  25                 	db	37
  2692  00FE0C  33                 	db	51	;'3'
  2693  00FE0D  2E                 	db	46
  2694  00FE0E  32                 	db	50	;'2'
  2695  00FE0F  66                 	db	102	;'f'
  2696  00FE10  20                 	db	32
  2697  00FE11  20                 	db	32
  2698  00FE12  20                 	db	32
  2699  00FE13  00                 	db	0
  2700  00FE14                     STR_58:
  2701                           
  2702                           ; BSR set to: 57
  2703  00FE14  20                 	db	32
  2704  00FE15  20                 	db	32
  2705  00FE16  20                 	db	32
  2706  00FE17  20                 	db	32
  2707  00FE18  20                 	db	32
  2708  00FE19  20                 	db	32
  2709  00FE1A  20                 	db	32
  2710  00FE1B  20                 	db	32
  2711  00FE1C  20                 	db	32
  2712  00FE1D  20                 	db	32
  2713  00FE1E  20                 	db	32
  2714  00FE1F  20                 	db	32
  2715  00FE20  20                 	db	32
  2716  00FE21  20                 	db	32
  2717  00FE22  20                 	db	32
  2718  00FE23  20                 	db	32
  2719  00FE24  20                 	db	32
  2720  00FE25  20                 	db	32
  2721  00FE26  00                 	db	0
  2722  00FE27                     STR_48:
  2723                           
  2724                           ; BSR set to: 57
  2725  00FE27  48                 	db	72	;'H'
  2726  00FE28  45                 	db	69	;'E'
  2727  00FE29  4C                 	db	76	;'L'
  2728  00FE2A  50                 	db	80	;'P'
  2729  00FE2B  20                 	db	32
  2730  00FE2C  25                 	db	37
  2731  00FE2D  73                 	db	115	;'s'
  2732  00FE2E  20                 	db	32
  2733  00FE2F  20                 	db	32
  2734  00FE30  20                 	db	32
  2735  00FE31  20                 	db	32
  2736  00FE32  20                 	db	32
  2737  00FE33  20                 	db	32
  2738  00FE34  20                 	db	32
  2739  00FE35  20                 	db	32
  2740  00FE36  20                 	db	32
  2741  00FE37  20                 	db	32
  2742  00FE38  20                 	db	32
  2743  00FE39  00                 	db	0
  2744  00FE3A                     
  2745                           ; BSR set to: 57
  2746  00FE3A  44                 	db	68	;'D'
  2747  00FE3B  49                 	db	73	;'I'
  2748  00FE3C  53                 	db	83	;'S'
  2749  00FE3D  50                 	db	80	;'P'
  2750  00FE3E  4C                 	db	76	;'L'
  2751  00FE3F  41                 	db	65	;'A'
  2752  00FE40  59                 	db	89	;'Y'
  2753  00FE41  20                 	db	32
  2754  00FE42  25                 	db	37
  2755  00FE43  73                 	db	115	;'s'
  2756  00FE44  20                 	db	32
  2757  00FE45  20                 	db	32
  2758  00FE46  20                 	db	32
  2759  00FE47  20                 	db	32
  2760  00FE48  20                 	db	32
  2761  00FE49  20                 	db	32
  2762  00FE4A  20                 	db	32
  2763  00FE4B  20                 	db	32
  2764  00FE4C  00                 	db	0
  2765  00FE4D                     STR_31:
  2766                           
  2767                           ; BSR set to: 57
  2768  00FE4D  42                 	db	66	;'B'
  2769  00FE4E  41                 	db	65	;'A'
  2770  00FE4F  54                 	db	84	;'T'
  2771  00FE50  20                 	db	32
  2772  00FE51  49                 	db	73	;'I'
  2773  00FE52  57                 	db	87	;'W'
  2774  00FE53  48                 	db	72	;'H'
  2775  00FE54  20                 	db	32
  2776  00FE55  25                 	db	37
  2777  00FE56  34                 	db	52	;'4'
  2778  00FE57  2E                 	db	46
  2779  00FE58  31                 	db	49	;'1'
  2780  00FE59  66                 	db	102	;'f'
  2781  00FE5A  20                 	db	32
  2782  00FE5B  20                 	db	32
  2783  00FE5C  20                 	db	32
  2784  00FE5D  20                 	db	32
  2785  00FE5E  20                 	db	32
  2786  00FE5F  00                 	db	0
  2787  00FE60                     STR_32:
  2788                           
  2789                           ; BSR set to: 57
  2790  00FE60  42                 	db	66	;'B'
  2791  00FE61  41                 	db	65	;'A'
  2792  00FE62  54                 	db	84	;'T'
  2793  00FE63  20                 	db	32
  2794  00FE64  4F                 	db	79	;'O'
  2795  00FE65  57                 	db	87	;'W'
  2796  00FE66  48                 	db	72	;'H'
  2797  00FE67  20                 	db	32
  2798  00FE68  25                 	db	37
  2799  00FE69  34                 	db	52	;'4'
  2800  00FE6A  2E                 	db	46
  2801  00FE6B  31                 	db	49	;'1'
  2802  00FE6C  66                 	db	102	;'f'
  2803  00FE6D  20                 	db	32
  2804  00FE6E  20                 	db	32
  2805  00FE6F  20                 	db	32
  2806  00FE70  20                 	db	32
  2807  00FE71  20                 	db	32
  2808  00FE72  00                 	db	0
  2809  00FE73                     STR_33:
  2810                           
  2811                           ; BSR set to: 57
  2812  00FE73  42                 	db	66	;'B'
  2813  00FE74  41                 	db	65	;'A'
  2814  00FE75  54                 	db	84	;'T'
  2815  00FE76  20                 	db	32
  2816  00FE77  54                 	db	84	;'T'
  2817  00FE78  57                 	db	87	;'W'
  2818  00FE79  48                 	db	72	;'H'
  2819  00FE7A  20                 	db	32
  2820  00FE7B  25                 	db	37
  2821  00FE7C  34                 	db	52	;'4'
  2822  00FE7D  2E                 	db	46
  2823  00FE7E  31                 	db	49	;'1'
  2824  00FE7F  66                 	db	102	;'f'
  2825  00FE80  20                 	db	32
  2826  00FE81  20                 	db	32
  2827  00FE82  20                 	db	32
  2828  00FE83  20                 	db	32
  2829  00FE84  20                 	db	32
  2830  00FE85  00                 	db	0
  2831  00FE86                     STR_27:
  2832                           
  2833                           ; BSR set to: 57
  2834  00FE86  49                 	db	73	;'I'
  2835  00FE87  4E                 	db	78	;'N'
  2836  00FE88  56                 	db	86	;'V'
  2837  00FE89  20                 	db	32
  2838  00FE8A  20                 	db	32
  2839  00FE8B  57                 	db	87	;'W'
  2840  00FE8C  48                 	db	72	;'H'
  2841  00FE8D  20                 	db	32
  2842  00FE8E  25                 	db	37
  2843  00FE8F  33                 	db	51	;'3'
  2844  00FE90  2E                 	db	46
  2845  00FE91  32                 	db	50	;'2'
  2846  00FE92  66                 	db	102	;'f'
  2847  00FE93  20                 	db	32
  2848  00FE94  20                 	db	32
  2849  00FE95  20                 	db	32
  2850  00FE96  20                 	db	32
  2851  00FE97  20                 	db	32
  2852  00FE98  00                 	db	0
  2853  00FE99                     STR_26:
  2854                           
  2855                           ; BSR set to: 57
  2856  00FE99  4C                 	db	76	;'L'
  2857  00FE9A  4F                 	db	79	;'O'
  2858  00FE9B  41                 	db	65	;'A'
  2859  00FE9C  44                 	db	68	;'D'
  2860  00FE9D  20                 	db	32
  2861  00FE9E  57                 	db	87	;'W'
  2862  00FE9F  48                 	db	72	;'H'
  2863  00FEA0  20                 	db	32
  2864  00FEA1  25                 	db	37
  2865  00FEA2  33                 	db	51	;'3'
  2866  00FEA3  2E                 	db	46
  2867  00FEA4  32                 	db	50	;'2'
  2868  00FEA5  66                 	db	102	;'f'
  2869  00FEA6  20                 	db	32
  2870  00FEA7  20                 	db	32
  2871  00FEA8  20                 	db	32
  2872  00FEA9  20                 	db	32
  2873  00FEAA  20                 	db	32
  2874  00FEAB  00                 	db	0
  2875  00FEAC                     STR_24:
  2876                           
  2877                           ; BSR set to: 57
  2878  00FEAC  49                 	db	73	;'I'
  2879  00FEAD  4E                 	db	78	;'N'
  2880  00FEAE  56                 	db	86	;'V'
  2881  00FEAF  20                 	db	32
  2882  00FEB0  20                 	db	32
  2883  00FEB1  50                 	db	80	;'P'
  2884  00FEB2  57                 	db	87	;'W'
  2885  00FEB3  52                 	db	82	;'R'
  2886  00FEB4  20                 	db	32
  2887  00FEB5  25                 	db	37
  2888  00FEB6  33                 	db	51	;'3'
  2889  00FEB7  2E                 	db	46
  2890  00FEB8  32                 	db	50	;'2'
  2891  00FEB9  66                 	db	102	;'f'
  2892  00FEBA  20                 	db	32
  2893  00FEBB  20                 	db	32
  2894  00FEBC  20                 	db	32
  2895  00FEBD  20                 	db	32
  2896  00FEBE  00                 	db	0
  2897  00FEBF                     STR_23:
  2898                           
  2899                           ; BSR set to: 57
  2900  00FEBF  4C                 	db	76	;'L'
  2901  00FEC0  4F                 	db	79	;'O'
  2902  00FEC1  41                 	db	65	;'A'
  2903  00FEC2  44                 	db	68	;'D'
  2904  00FEC3  20                 	db	32
  2905  00FEC4  50                 	db	80	;'P'
  2906  00FEC5  57                 	db	87	;'W'
  2907  00FEC6  52                 	db	82	;'R'
  2908  00FEC7  20                 	db	32
  2909  00FEC8  25                 	db	37
  2910  00FEC9  33                 	db	51	;'3'
  2911  00FECA  2E                 	db	46
  2912  00FECB  32                 	db	50	;'2'
  2913  00FECC  66                 	db	102	;'f'
  2914  00FECD  20                 	db	32
  2915  00FECE  20                 	db	32
  2916  00FECF  20                 	db	32
  2917  00FED0  20                 	db	32
  2918  00FED1  00                 	db	0
  2919  00FED2                     STR_29:
  2920                           
  2921                           ; BSR set to: 57
  2922  00FED2  42                 	db	66	;'B'
  2923  00FED3  56                 	db	86	;'V'
  2924  00FED4  20                 	db	32
  2925  00FED5  25                 	db	37
  2926  00FED6  32                 	db	50	;'2'
  2927  00FED7  2E                 	db	46
  2928  00FED8  32                 	db	50	;'2'
  2929  00FED9  66                 	db	102	;'f'
  2930  00FEDA  20                 	db	32
  2931  00FEDB  42                 	db	66	;'B'
  2932  00FEDC  41                 	db	65	;'A'
  2933  00FEDD  20                 	db	32
  2934  00FEDE  25                 	db	37
  2935  00FEDF  32                 	db	50	;'2'
  2936  00FEE0  2E                 	db	46
  2937  00FEE1  32                 	db	50	;'2'
  2938  00FEE2  66                 	db	102	;'f'
  2939  00FEE3  20                 	db	32
  2940  00FEE4  00                 	db	0
  2941  00FEE5                     STR_30:
  2942                           
  2943                           ; BSR set to: 57
  2944  00FEE5  43                 	db	67	;'C'
  2945  00FEE6  56                 	db	86	;'V'
  2946  00FEE7  20                 	db	32
  2947  00FEE8  25                 	db	37
  2948  00FEE9  32                 	db	50	;'2'
  2949  00FEEA  2E                 	db	46
  2950  00FEEB  32                 	db	50	;'2'
  2951  00FEEC  66                 	db	102	;'f'
  2952  00FEED  20                 	db	32
  2953  00FEEE  4C                 	db	76	;'L'
  2954  00FEEF  41                 	db	65	;'A'
  2955  00FEF0  20                 	db	32
  2956  00FEF1  25                 	db	37
  2957  00FEF2  32                 	db	50	;'2'
  2958  00FEF3  2E                 	db	46
  2959  00FEF4  32                 	db	50	;'2'
  2960  00FEF5  66                 	db	102	;'f'
  2961  00FEF6  20                 	db	32
  2962  00FEF7  00                 	db	0
  2963  00FEF8                     STR_28:
  2964                           
  2965                           ; BSR set to: 57
  2966  00FEF8  50                 	db	80	;'P'
  2967  00FEF9  56                 	db	86	;'V'
  2968  00FEFA  20                 	db	32
  2969  00FEFB  25                 	db	37
  2970  00FEFC  32                 	db	50	;'2'
  2971  00FEFD  2E                 	db	46
  2972  00FEFE  32                 	db	50	;'2'
  2973  00FEFF  66                 	db	102	;'f'
  2974  00FF00  20                 	db	32
  2975  00FF01  50                 	db	80	;'P'
  2976  00FF02  41                 	db	65	;'A'
  2977  00FF03  20                 	db	32
  2978  00FF04  25                 	db	37
  2979  00FF05  32                 	db	50	;'2'
  2980  00FF06  2E                 	db	46
  2981  00FF07  32                 	db	50	;'2'
  2982  00FF08  66                 	db	102	;'f'
  2983  00FF09  20                 	db	32
  2984  00FF0A  00                 	db	0
  2985  00FF0B                     STR_8:
  2986                           
  2987                           ; BSR set to: 57
  2988  00FF0B  42                 	db	66	;'B'
  2989  00FF0C  56                 	db	86	;'V'
  2990  00FF0D  20                 	db	32
  2991  00FF0E  25                 	db	37
  2992  00FF0F  32                 	db	50	;'2'
  2993  00FF10  2E                 	db	46
  2994  00FF11  34                 	db	52	;'4'
  2995  00FF12  66                 	db	102	;'f'
  2996  00FF13  20                 	db	32
  2997  00FF14  20                 	db	32
  2998  00FF15  20                 	db	32
  2999  00FF16  20                 	db	32
  3000  00FF17  20                 	db	32
  3001  00FF18  20                 	db	32
  3002  00FF19  20                 	db	32
  3003  00FF1A  20                 	db	32
  3004  00FF1B  20                 	db	32
  3005  00FF1C  00                 	db	0
  3006  00FF1D                     STR_4:
  3007                           
  3008                           ; BSR set to: 57
  3009  00FF1D  20                 	db	32
  3010  00FF1E  4E                 	db	78	;'N'
  3011  00FF1F  53                 	db	83	;'S'
  3012  00FF20  41                 	db	65	;'A'
  3013  00FF21  53                 	db	83	;'S'
  3014  00FF22  50                 	db	80	;'P'
  3015  00FF23  4F                 	db	79	;'O'
  3016  00FF24  4F                 	db	79	;'O'
  3017  00FF25  4B                 	db	75	;'K'
  3018  00FF26  20                 	db	32
  3019  00FF27  20                 	db	32
  3020  00FF28  20                 	db	32
  3021  00FF29  20                 	db	32
  3022  00FF2A  20                 	db	32
  3023  00FF2B  20                 	db	32
  3024  00FF2C  20                 	db	32
  3025  00FF2D  00                 	db	0
  3026  00FF2E                     STR_12:
  3027                           
  3028                           ; BSR set to: 57
  3029  00FF2E  42                 	db	66	;'B'
  3030  00FF2F  61                 	db	97	;'a'
  3031  00FF30  74                 	db	116	;'t'
  3032  00FF31  74                 	db	116	;'t'
  3033  00FF32  65                 	db	101	;'e'
  3034  00FF33  72                 	db	114	;'r'
  3035  00FF34  79                 	db	121	;'y'
  3036  00FF35  20                 	db	32
  3037  00FF36  45                 	db	69	;'E'
  3038  00FF37  53                 	db	83	;'S'
  3039  00FF38  52                 	db	82	;'R'
  3040  00FF39  20                 	db	32
  3041  00FF3A  20                 	db	32
  3042  00FF3B  20                 	db	32
  3043  00FF3C  20                 	db	32
  3044  00FF3D  20                 	db	32
  3045  00FF3E  00                 	db	0
  3046  00FF3F                     STR_13:
  3047                           
  3048                           ; BSR set to: 57
  3049  00FF3F  43                 	db	67	;'C'
  3050  00FF40  61                 	db	97	;'a'
  3051  00FF41  6C                 	db	108	;'l'
  3052  00FF42  63                 	db	99	;'c'
  3053  00FF43  75                 	db	117	;'u'
  3054  00FF44  6C                 	db	108	;'l'
  3055  00FF45  61                 	db	97	;'a'
  3056  00FF46  74                 	db	116	;'t'
  3057  00FF47  69                 	db	105	;'i'
  3058  00FF48  6F                 	db	111	;'o'
  3059  00FF49  6E                 	db	110	;'n'
  3060  00FF4A  20                 	db	32
  3061  00FF4B  20                 	db	32
  3062  00FF4C  20                 	db	32
  3063  00FF4D  20                 	db	32
  3064  00FF4E  20                 	db	32
  3065  00FF4F  00                 	db	0
  3066  00FF50                     STR_1:
  3067                           
  3068                           ; BSR set to: 57
  3069  00FF50  20                 	db	32
  3070  00FF51  4D                 	db	77	;'M'
  3071  00FF52  42                 	db	66	;'B'
  3072  00FF53  4D                 	db	77	;'M'
  3073  00FF54  43                 	db	67	;'C'
  3074  00FF55  20                 	db	32
  3075  00FF56  53                 	db	83	;'S'
  3076  00FF57  4F                 	db	79	;'O'
  3077  00FF58  4C                 	db	76	;'L'
  3078  00FF59  41                 	db	65	;'A'
  3079  00FF5A  52                 	db	82	;'R'
  3080  00FF5B  4D                 	db	77	;'M'
  3081  00FF5C  4F                 	db	79	;'O'
  3082  00FF5D  4E                 	db	78	;'N'
  3083  00FF5E  20                 	db	32
  3084  00FF5F  20                 	db	32
  3085  00FF60  00                 	db	0
  3086  00FF61                     STR_21:
  3087                           
  3088                           ; BSR set to: 57
  3089  00FF61  25                 	db	37
  3090  00FF62  64                 	db	100	;'d'
  3091  00FF63  20                 	db	32
  3092  00FF64  25                 	db	37
  3093  00FF65  32                 	db	50	;'2'
  3094  00FF66  2E                 	db	46
  3095  00FF67  34                 	db	52	;'4'
  3096  00FF68  66                 	db	102	;'f'
  3097  00FF69  2C                 	db	44
  3098  00FF6A  20                 	db	32
  3099  00FF6B  25                 	db	37
  3100  00FF6C  64                 	db	100	;'d'
  3101  00FF6D  20                 	db	32
  3102  00FF6E  20                 	db	32
  3103  00FF6F  20                 	db	32
  3104  00FF70  23                 	db	35
  3105  00FF71  00                 	db	0
  3106  00FF72                     STR_14:
  3107                           
  3108                           ; BSR set to: 57
  3109  00FF72  43                 	db	67	;'C'
  3110  00FF73  68                 	db	104	;'h'
  3111  00FF74  65                 	db	101	;'e'
  3112  00FF75  63                 	db	99	;'c'
  3113  00FF76  6B                 	db	107	;'k'
  3114  00FF77  20                 	db	32
  3115  00FF78  33                 	db	51	;'3'
  3116  00FF79  30                 	db	48	;'0'
  3117  00FF7A  20                 	db	32
  3118  00FF7B  73                 	db	115	;'s'
  3119  00FF7C  65                 	db	101	;'e'
  3120  00FF7D  63                 	db	99	;'c'
  3121  00FF7E  6F                 	db	111	;'o'
  3122  00FF7F  6E                 	db	110	;'n'
  3123  00FF80  64                 	db	100	;'d'
  3124  00FF81  73                 	db	115	;'s'
  3125  00FF82  00                 	db	0
  3126  00FF83                     STR_19:
  3127                           
  3128                           ; BSR set to: 57
  3129  00FF83  25                 	db	37
  3130  00FF84  64                 	db	100	;'d'
  3131  00FF85  20                 	db	32
  3132  00FF86  25                 	db	37
  3133  00FF87  32                 	db	50	;'2'
  3134  00FF88  2E                 	db	46
  3135  00FF89  34                 	db	52	;'4'
  3136  00FF8A  66                 	db	102	;'f'
  3137  00FF8B  20                 	db	32
  3138  00FF8C  20                 	db	32
  3139  00FF8D  20                 	db	32
  3140  00FF8E  25                 	db	37
  3141  00FF8F  64                 	db	100	;'d'
  3142  00FF90  20                 	db	32
  3143  00FF91  20                 	db	32
  3144  00FF92  00                 	db	0
  3145  00FF93                     STR_52:
  3146                           
  3147                           ; BSR set to: 57
  3148  00FF93  76                 	db	118	;'v'
  3149  00FF94  74                 	db	116	;'t'
  3150  00FF95  65                 	db	101	;'e'
  3151  00FF96  72                 	db	114	;'r'
  3152  00FF97  6D                 	db	109	;'m'
  3153  00FF98  20                 	db	32
  3154  00FF99  25                 	db	37
  3155  00FF9A  78                 	db	120	;'x'
  3156  00FF9B  3A                 	db	58	;':'
  3157  00FF9C  25                 	db	37
  3158  00FF9D  78                 	db	120	;'x'
  3159  00FF9E  20                 	db	32
  3160  00FF9F  20                 	db	32
  3161  00FFA0  20                 	db	32
  3162  00FFA1  00                 	db	0
  3163  00FFA2                     STR_2:
  3164                           
  3165                           ; BSR set to: 57
  3166  00FFA2  20                 	db	32
  3167  00FFA3  56                 	db	86	;'V'
  3168  00FFA4  65                 	db	101	;'e'
  3169  00FFA5  72                 	db	114	;'r'
  3170  00FFA6  73                 	db	115	;'s'
  3171  00FFA7  69                 	db	105	;'i'
  3172  00FFA8  6F                 	db	111	;'o'
  3173  00FFA9  6E                 	db	110	;'n'
  3174  00FFAA  20                 	db	32
  3175  00FFAB  25                 	db	37
  3176  00FFAC  73                 	db	115	;'s'
  3177  00FFAD  20                 	db	32
  3178  00FFAE  20                 	db	32
  3179  00FFAF  20                 	db	32
  3180  00FFB0  00                 	db	0
  3181  00FFB1                     STR_46:
  3182                           
  3183                           ; BSR set to: 57
  3184  00FFB1  44                 	db	68	;'D'
  3185  00FFB2  65                 	db	101	;'e'
  3186  00FFB3  63                 	db	99	;'c'
  3187  00FFB4  20                 	db	32
  3188  00FFB5  32                 	db	50	;'2'
  3189  00FFB6  30                 	db	48	;'0'
  3190  00FFB7  20                 	db	32
  3191  00FFB8  32                 	db	50	;'2'
  3192  00FFB9  30                 	db	48	;'0'
  3193  00FFBA  31                 	db	49	;'1'
  3194  00FFBB  39                 	db	57	;'9'
  3195  00FFBC  00                 	db	0
  3196  00FFBD                     STR_50:
  3197                           
  3198                           ; BSR set to: 57
  3199  00FFBD  25                 	db	37
  3200  00FFBE  73                 	db	115	;'s'
  3201  00FFBF  20                 	db	32
  3202  00FFC0  20                 	db	32
  3203  00FFC1  20                 	db	32
  3204  00FFC2  20                 	db	32
  3205  00FFC3  20                 	db	32
  3206  00FFC4  20                 	db	32
  3207  00FFC5  20                 	db	32
  3208  00FFC6  00                 	db	0
  3209  00FFC7                     STR_47:
  3210                           
  3211                           ; BSR set to: 57
  3212  00FFC7  31                 	db	49	;'1'
  3213  00FFC8  38                 	db	56	;'8'
  3214  00FFC9  3A                 	db	58	;':'
  3215  00FFCA  34                 	db	52	;'4'
  3216  00FFCB  38                 	db	56	;'8'
  3217  00FFCC  3A                 	db	58	;':'
  3218  00FFCD  31                 	db	49	;'1'
  3219  00FFCE  33                 	db	51	;'3'
  3220  00FFCF  00                 	db	0
  3221  00FFD0                     STR_3:
  3222                           
  3223                           ; BSR set to: 57
  3224  00FFD0  31                 	db	49	;'1'
  3225  00FFD1  2E                 	db	46
  3226  00FFD2  30                 	db	48	;'0'
  3227  00FFD3  30                 	db	48	;'0'
  3228  00FFD4  37                 	db	55	;'7'
  3229  00FFD5  00                 	db	0
  3230  00FFD6                     STR_66:
  3231                           
  3232                           ; BSR set to: 57
  3233  00FFD6  49                 	db	73	;'I'
  3234  00FFD7  4E                 	db	78	;'N'
  3235  00FFD8  46                 	db	70	;'F'
  3236  00FFD9  00                 	db	0
  3237  00FFDA                     STR_70:
  3238                           
  3239                           ; BSR set to: 57
  3240  00FFDA  4E                 	db	78	;'N'
  3241  00FFDB  41                 	db	65	;'A'
  3242  00FFDC  4E                 	db	78	;'N'
  3243  00FFDD  00                 	db	0
  3244  00FFDE                     STR_67:
  3245                           
  3246                           ; BSR set to: 57
  3247  00FFDE  69                 	db	105	;'i'
  3248  00FFDF  6E                 	db	110	;'n'
  3249  00FFE0  66                 	db	102	;'f'
  3250  00FFE1  00                 	db	0
  3251  00FFE2                     STR_71:
  3252                           
  3253                           ; BSR set to: 57
  3254  00FFE2  6E                 	db	110	;'n'
  3255  00FFE3  61                 	db	97	;'a'
  3256  00FFE4  6E                 	db	110	;'n'
  3257  00FFE5  00                 	db	0
  3258  00FFE6                     STR_97:
  3259                           
  3260                           ; BSR set to: 57
  3261  00FFE6  6C                 	db	108	;'l'
  3262  00FFE7  58                 	db	88	;'X'
  3263  00FFE8  00                 	db	0
  3264  00FFE9                     STR_74:
  3265                           
  3266                           ; BSR set to: 57
  3267  00FFE9  6C                 	db	108	;'l'
  3268  00FFEA  64                 	db	100	;'d'
  3269  00FFEB  00                 	db	0
  3270  00FFEC                     STR_83:
  3271                           
  3272                           ; BSR set to: 57
  3273  00FFEC  6C                 	db	108	;'l'
  3274  00FFED  66                 	db	102	;'f'
  3275  00FFEE  00                 	db	0
  3276  00FFEF                     STR_78:
  3277                           
  3278                           ; BSR set to: 57
  3279  00FFEF  6C                 	db	108	;'l'
  3280  00FFF0  69                 	db	105	;'i'
  3281  00FFF1  00                 	db	0
  3282  00FFF2                     STR_88:
  3283                           
  3284                           ; BSR set to: 57
  3285  00FFF2  6C                 	db	108	;'l'
  3286  00FFF3  75                 	db	117	;'u'
  3287  00FFF4  00                 	db	0
  3288  00FFF5                     STR_93:
  3289                           
  3290                           ; BSR set to: 57
  3291  00FFF5  6C                 	db	108	;'l'
  3292  00FFF6  78                 	db	120	;'x'
  3293  00FFF7  00                 	db	0
  3294  00FFF8                     STR_44:
  3295                           
  3296                           ; BSR set to: 57
  3297  00FFF8  25                 	db	37
  3298  00FFF9  63                 	db	99	;'c'
  3299  00FFFA  00                 	db	0
  3300  00FFFB                     STR_43:
  3301                           
  3302                           ; BSR set to: 57
  3303  00FFFB  25                 	db	37
  3304  00FFFC  73                 	db	115	;'s'
  3305  00FFFD  00                 	db	0
  3306  0000                     
  3307                           ; #config settings
  3308  00FFFE  00                 	db	0	; dummy byte at the end
  3309  0000                     
  3310                           	psect	cinit
  3311  01947C                     __pcinit:
  3312                           	opt callstack 0
  3313  01947C                     start_initialization:
  3314                           	opt callstack 0
  3315  01947C                     __initialization:
  3316                           	opt callstack 0
  3317                           
  3318                           ; Initialize objects allocated to BIGRAM (512 bytes)
  3319                           ; load TBLPTR registers with __pidataBIGRAM
  3320  01947C  0E2C               	movlw	low __pidataBIGRAM
  3321  01947E  6EF6               	movwf	tblptrl,c
  3322  019480  0E7C               	movlw	high __pidataBIGRAM
  3323  019482  6EF7               	movwf	tblptrh,c
  3324  019484  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3325  019486  6EF8               	movwf	tblptru,c
  3326  019488  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  3327  01948C  EE20 F200          	lfsr	2,512
  3328  019490                     copy_data0:
  3329  019490  0009               	tblrd		*+
  3330  019492  006F FFD7 FFEE     	movff	tablat,postinc0
  3331  019498  50DD               	movf	postdec2,w,c
  3332  01949A  50D9               	movf	fsr2l,w,c
  3333  01949C  E1F9               	bnz	copy_data0
  3334  01949E  50DA               	movf	fsr2h,w,c
  3335  0194A0  E1F7               	bnz	copy_data0
  3336                           
  3337                           ; Initialize objects allocated to BANK2 (197 bytes)
  3338                           ; load TBLPTR registers with __pidataBANK2
  3339  0194A2  0E06               	movlw	low __pidataBANK2
  3340  0194A4  6EF6               	movwf	tblptrl,c
  3341  0194A6  0E9B               	movlw	high __pidataBANK2
  3342  0194A8  6EF7               	movwf	tblptrh,c
  3343  0194AA  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  3344  0194AC  6EF8               	movwf	tblptru,c
  3345  0194AE  EE00  F200         	lfsr	0,__pdataBANK2
  3346  0194B2  EE20 F0C5          	lfsr	2,197
  3347  0194B6                     copy_data1:
  3348  0194B6  0009               	tblrd		*+
  3349  0194B8  006F FFD7 FFEE     	movff	tablat,postinc0
  3350  0194BE  50DD               	movf	postdec2,w,c
  3351  0194C0  50D9               	movf	fsr2l,w,c
  3352  0194C2  E1F9               	bnz	copy_data1
  3353                           
  3354                           ; Initialize objects allocated to BANK1 (256 bytes)
  3355                           ; load TBLPTR registers with __pidataBANK1
  3356  0194C4  0E84               	movlw	low __pidataBANK1
  3357  0194C6  6EF6               	movwf	tblptrl,c
  3358  0194C8  0E96               	movlw	high __pidataBANK1
  3359  0194CA  6EF7               	movwf	tblptrh,c
  3360  0194CC  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3361  0194CE  6EF8               	movwf	tblptru,c
  3362  0194D0  EE00  F100         	lfsr	0,__pdataBANK1
  3363  0194D4  EE20 F100          	lfsr	2,256
  3364  0194D8                     copy_data2:
  3365  0194D8  0009               	tblrd		*+
  3366  0194DA  006F FFD7 FFEE     	movff	tablat,postinc0
  3367  0194E0  50DD               	movf	postdec2,w,c
  3368  0194E2  50D9               	movf	fsr2l,w,c
  3369  0194E4  E1F9               	bnz	copy_data2
  3370  0194E6  50DA               	movf	fsr2h,w,c
  3371  0194E8  E1F7               	bnz	copy_data2
  3372                           
  3373                           ; Initialize objects allocated to BANK0 (47 bytes)
  3374                           ; load TBLPTR registers with __pidataBANK0
  3375  0194EA  0E58               	movlw	low __pidataBANK0
  3376  0194EC  6EF6               	movwf	tblptrl,c
  3377  0194EE  0EB1               	movlw	high __pidataBANK0
  3378  0194F0  6EF7               	movwf	tblptrh,c
  3379  0194F2  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3380  0194F4  6EF8               	movwf	tblptru,c
  3381  0194F6  EE00  F0B1         	lfsr	0,__pdataBANK0
  3382  0194FA  EE20 F02F          	lfsr	2,47
  3383  0194FE                     copy_data3:
  3384  0194FE  0009               	tblrd		*+
  3385  019500  006F FFD7 FFEE     	movff	tablat,postinc0
  3386  019506  50DD               	movf	postdec2,w,c
  3387  019508  50D9               	movf	fsr2l,w,c
  3388  01950A  E1F9               	bnz	copy_data3
  3389                           
  3390                           ; Clear objects allocated to BIGRAM (482 bytes)
  3391  01950C  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  3392  019510  EE20 F1E2          	lfsr	2,482
  3393  019514                     clear_0:
  3394  019514  6AEE               	clrf	postinc0,c
  3395  019516  50DD               	movf	postdec2,w,c
  3396  019518  50D9               	movf	fsr2l,w,c
  3397  01951A  E1FC               	bnz	clear_0
  3398  01951C  50DA               	movf	fsr2h,w,c
  3399  01951E  E1FA               	bnz	clear_0
  3400                           
  3401                           ; Clear objects allocated to BANK5 (255 bytes)
  3402  019520  EE01  F100         	lfsr	0,__pbssBANK5
  3403  019524  EE20 F0FF          	lfsr	2,255
  3404  019528                     clear_1:
  3405  019528  6AEE               	clrf	postinc0,c
  3406  01952A  50DD               	movf	postdec2,w,c
  3407  01952C  50D9               	movf	fsr2l,w,c
  3408  01952E  E1FC               	bnz	clear_1
  3409  019530  50DA               	movf	fsr2h,w,c
  3410  019532  E1FA               	bnz	clear_1
  3411                           
  3412                           ; Clear objects allocated to BANK4 (134 bytes)
  3413  019534  EE01  F000         	lfsr	0,__pbssBANK4
  3414  019538  0E86               	movlw	134
  3415  01953A                     clear_2:
  3416  01953A  6AEE               	clrf	postinc0,c
  3417  01953C  06E8               	decf	wreg,f,c
  3418  01953E  E1FD               	bnz	clear_2
  3419                           
  3420                           ; Clear objects allocated to BANK3 (254 bytes)
  3421  019540  EE00  F300         	lfsr	0,__pbssBANK3
  3422  019544  0EFE               	movlw	254
  3423  019546                     clear_3:
  3424  019546  6AEE               	clrf	postinc0,c
  3425  019548  06E8               	decf	wreg,f,c
  3426  01954A  E1FD               	bnz	clear_3
  3427                           
  3428                           ; Clear objects allocated to BANK2 (57 bytes)
  3429  01954C  EE00  F2C5         	lfsr	0,__pbssBANK2
  3430  019550  0E39               	movlw	57
  3431  019552                     clear_4:
  3432  019552  6AEE               	clrf	postinc0,c
  3433  019554  06E8               	decf	wreg,f,c
  3434  019556  E1FD               	bnz	clear_4
  3435                           
  3436                           ; Clear objects allocated to BANK0 (81 bytes)
  3437  019558  EE00  F060         	lfsr	0,__pbssBANK0
  3438  01955C  0E51               	movlw	81
  3439  01955E                     clear_5:
  3440  01955E  6AEE               	clrf	postinc0,c
  3441  019560  06E8               	decf	wreg,f,c
  3442  019562  E1FD               	bnz	clear_5
  3443                           
  3444                           ; Clear objects allocated to COMRAM (37 bytes)
  3445  019564  EE00  F001         	lfsr	0,__pbssCOMRAM
  3446  019568  0E25               	movlw	37
  3447  01956A                     clear_6:
  3448  01956A  6AEE               	clrf	postinc0,c
  3449  01956C  06E8               	decf	wreg,f,c
  3450  01956E  E1FD               	bnz	clear_6
  3451                           
  3452                           ;
  3453                           ; Setup IVTBASE
  3454                           ;
  3455  019570  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3456  019572  6ED5               	movwf	213,c
  3457  019574  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3458  019576  6ED6               	movwf	214,c
  3459  019578  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3460  01957A  6ED7               	movwf	215,c
  3461  01957C                     end_of_initialization:
  3462                           	opt callstack 0
  3463  01957C                     __end_of__initialization:
  3464                           	opt callstack 0
  3465  01957C  0100               	movlb	0
  3466  01957E  EF22  F089         	goto	_main	;jump to C main() function
  3467                           
  3468                           	psect	bssCOMRAM
  3469  000001                     __pbssCOMRAM:
  3470                           	opt callstack 0
  3471  000001                     _UART2_RxInterruptHandler:
  3472                           	opt callstack 0
  3473  000001                     	ds	3
  3474  000004                     _INT1_InterruptHandler:
  3475                           	opt callstack 0
  3476  000004                     	ds	3
  3477  000007                     _INT0_InterruptHandler:
  3478                           	opt callstack 0
  3479  000007                     	ds	3
  3480  00000A                     _width:
  3481                           	opt callstack 0
  3482  00000A                     	ds	2
  3483  00000C                     _prec:
  3484                           	opt callstack 0
  3485  00000C                     	ds	2
  3486  00000E                     _flags:
  3487                           	opt callstack 0
  3488  00000E                     	ds	2
  3489  000010                     TMR3_ISR@CountCallBack:
  3490                           	opt callstack 0
  3491  000010                     	ds	2
  3492  000012                     _timer3ReloadVal:
  3493                           	opt callstack 0
  3494  000012                     	ds	2
  3495  000014                     TMR5_ISR@CountCallBack:
  3496                           	opt callstack 0
  3497  000014                     	ds	2
  3498  000016                     _timer5ReloadVal:
  3499                           	opt callstack 0
  3500  000016                     	ds	2
  3501  000018                     esr_check@esr_state:
  3502                           	opt callstack 0
  3503  000018                     	ds	1
  3504  000019                     Volts_to_SOC@slot:
  3505                           	opt callstack 0
  3506  000019                     	ds	1
  3507  00001A                     calc_bsoc@log_update_wait:
  3508                           	opt callstack 0
  3509  00001A                     	ds	1
  3510  00001B                     check_day_time@day_delay:
  3511                           	opt callstack 0
  3512  00001B                     	ds	1
  3513  00001C                     _mode_sw:
  3514                           	opt callstack 0
  3515  00001C                     	ds	1
  3516  00001D                     _uart2RxCount:
  3517                           	opt callstack 0
  3518  00001D                     	ds	1
  3519  00001E                     _uart2RxTail:
  3520                           	opt callstack 0
  3521  00001E                     	ds	1
  3522  00001F                     _uart2RxHead:
  3523                           	opt callstack 0
  3524  00001F                     	ds	1
  3525  000020                     _uart2TxBufferRemaining:
  3526                           	opt callstack 0
  3527  000020                     	ds	1
  3528  000021                     _uart2TxTail:
  3529                           	opt callstack 0
  3530  000021                     	ds	1
  3531  000022                     _uart2TxHead:
  3532                           	opt callstack 0
  3533  000022                     	ds	1
  3534  000023                     _uart1RxCount:
  3535                           	opt callstack 0
  3536  000023                     	ds	1
  3537  000024                     _uart1RxTail:
  3538                           	opt callstack 0
  3539  000024                     	ds	1
  3540  000025                     _uart1RxHead:
  3541                           	opt callstack 0
  3542  000025                     	ds	1
  3543                           
  3544                           	psect	bssBANK0
  3545  000060                     __pbssBANK0:
  3546                           	opt callstack 0
  3547  000060                     _spi_link:
  3548                           	opt callstack 0
  3549  000060                     	ds	12
  3550  00006C                     spinners@s:
  3551                           	opt callstack 0
  3552  00006C                     	ds	6
  3553  000072                     floorf@F524:
  3554                           	opt callstack 0
  3555  000072                     	ds	4
  3556  000076                     fabsf@F463:
  3557                           	opt callstack 0
  3558  000076                     	ds	4
  3559  00007A                     ___fpclassifyf@F463:
  3560                           	opt callstack 0
  3561  00007A                     	ds	4
  3562  00007E                     calc_ror_data@bcror:
  3563                           	opt callstack 0
  3564  00007E                     	ds	4
  3565  000082                     calc_ror_data@bvror:
  3566                           	opt callstack 0
  3567  000082                     	ds	4
  3568  000086                     calc_model_data@bcror:
  3569                           	opt callstack 0
  3570  000086                     	ds	4
  3571  00008A                     calc_model_data@bvror:
  3572                           	opt callstack 0
  3573  00008A                     	ds	4
  3574  00008E                     _utctime:
  3575                           	opt callstack 0
  3576  00008E                     	ds	4
  3577  000092                     wdtdelay@dcount:
  3578                           	opt callstack 0
  3579  000092                     	ds	4
  3580  000096                     _P:
  3581                           	opt callstack 0
  3582  000096                     	ds	4
  3583  00009A                     _TMR3_InterruptHandler:
  3584                           	opt callstack 0
  3585  00009A                     	ds	3
  3586  00009D                     _TMR5_InterruptHandler:
  3587                           	opt callstack 0
  3588  00009D                     	ds	3
  3589  0000A0                     _TMR6_InterruptHandler:
  3590                           	opt callstack 0
  3591  0000A0                     	ds	3
  3592  0000A3                     _ADCC_ADTI_InterruptHandler:
  3593                           	opt callstack 0
  3594  0000A3                     	ds	3
  3595  0000A6                     _ADCC_ADI_InterruptHandler:
  3596                           	opt callstack 0
  3597  0000A6                     	ds	3
  3598  0000A9                     _UART1_RxInterruptHandler:
  3599                           	opt callstack 0
  3600  0000A9                     	ds	3
  3601  0000AC                     _UART2_TxInterruptHandler:
  3602                           	opt callstack 0
  3603  0000AC                     	ds	3
  3604  0000AF                     _nout:
  3605                           	opt callstack 0
  3606  0000AF                     	ds	2
  3607                           
  3608                           	psect	dataBANK0
  3609  0000B1                     __pdataBANK0:
  3610                           	opt callstack 0
  3611  0000B1                     _R:
  3612                           	opt callstack 0
  3613  0000B1                     	ds	40
  3614  0000D9                     _H:
  3615                           	opt callstack 0
  3616  0000D9                     	ds	7
  3617                           
  3618                           	psect	dataBANK1
  3619  000100                     __pdataBANK1:
  3620                           	opt callstack 0
  3621  000100                     _C:
  3622                           	opt callstack 0
  3623  000100                     	ds	256
  3624                           
  3625                           	psect	bssBANK2
  3626  0002C5                     __pbssBANK2:
  3627                           	opt callstack 0
  3628  0002C5                     _S:
  3629                           	opt callstack 0
  3630  0002C5                     	ds	41
  3631  0002EE                     _uart1RxBuffer:
  3632                           	opt callstack 0
  3633  0002EE                     	ds	8
  3634  0002F6                     _seed:
  3635                           	opt callstack 0
  3636  0002F6                     	ds	8
  3637                           
  3638                           	psect	dataBANK2
  3639  000200                     __pdataBANK2:
  3640                           	opt callstack 0
  3641  000200                     stoa@F1166:
  3642                           	opt callstack 0
  3643  000200                     	ds	7
  3644  000207                     _V:
  3645                           	opt callstack 0
  3646  000207                     	ds	190
  3647                           
  3648                           	psect	bssBANK3
  3649  000300                     __pbssBANK3:
  3650                           	opt callstack 0
  3651  000300                     lp_filter@smooth:
  3652                           	opt callstack 0
  3653  000300                     	ds	84
  3654  000354                     _uart2TxBuffer:
  3655                           	opt callstack 0
  3656  000354                     	ds	64
  3657  000394                     _tickCount:
  3658                           	opt callstack 0
  3659  000394                     	ds	26
  3660  0003AE                     _dbuf:
  3661                           	opt callstack 0
  3662  0003AE                     	ds	80
  3663                           
  3664                           	psect	bssBANK4
  3665  000400                     __pbssBANK4:
  3666                           	opt callstack 0
  3667  000400                     _ring_buf2:
  3668                           	opt callstack 0
  3669  000400                     	ds	67
  3670  000443                     _ring_buf1:
  3671                           	opt callstack 0
  3672  000443                     	ds	67
  3673                           
  3674                           	psect	bssBANK5
  3675  000500                     __pbssBANK5:
  3676                           	opt callstack 0
  3677  000500                     _uart2RxBuffer:
  3678                           	opt callstack 0
  3679  000500                     	ds	255
  3680                           
  3681                           	psect	bssBIGRAM
  3682  0007FF                     __pbssBIGRAM:
  3683                           	opt callstack 0
  3684  0007FF                     _D:
  3685                           	opt callstack 0
  3686  0007FF                     	ds	482
  3687                           
  3688                           	psect	dataBIGRAM
  3689  0005FF                     __pdataBIGRAM:
  3690                           	opt callstack 0
  3691  0005FF                     _port_data:
  3692                           	opt callstack 0
  3693  0005FF                     	ds	512
  3694                           
  3695                           	psect	cstackBANK0
  3696  0000E0                     __pcstackBANK0:
  3697                           	opt callstack 0
  3698  0000E0                     ??_TMR3_ISR:
  3699                           
  3700                           ; 1 bytes @ 0x0
  3701  0000E0                     	ds	25
  3702                           
  3703                           	psect	cstackCOMRAM
  3704  000046                     __pcstackCOMRAM:
  3705                           	opt callstack 0
  3706  000046                     ??_ADCC_ThresholdISR:
  3707  000046                     
  3708                           ; 1 bytes @ 0x0
  3709  000046                     	ds	5
  3710  00004B                     ??_TMR6_ISR:
  3711                           
  3712                           ; 1 bytes @ 0x5
  3713  00004B                     	ds	1
  3714  00004C                     ??_INT1_ISR:
  3715  00004C                     
  3716                           ; 1 bytes @ 0x6
  3717  00004C                     	ds	4
  3718  000050                     ??_TMR5_ISR:
  3719                           
  3720                           ; 1 bytes @ 0xA
  3721  000050                     	ds	15
  3722                           
  3723 ;;
  3724 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3725 ;;
  3726 ;; *************** function _main *****************
  3727 ;; Defined at:
  3728 ;;		line 183 in file "main.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;		None
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  esr_temp        4  [STACK] float 
  3733 ;;  i_esr           2  [STACK] unsigned short 
  3734 ;;  shape           1  [STACK] unsigned char 
  3735 ;;  k               1  [STACK] unsigned char 
  3736 ;;  j               1  [STACK] unsigned char 
  3737 ;;  i               1  [STACK] unsigned char 
  3738 ;;  inp_index       1  [STACK] unsigned char 
  3739 ;;  mode            1  [STACK] enum E17013
  3740 ;;  i_ror           1  [STACK] unsigned char 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  1  [STACK] void 
  3743 ;; Registers used:
  3744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3754 ;;Total ram usage:        0 bytes
  3755 ;; Hardware stack levels required when called:   28
  3756 ;; This function calls:
  3757 ;;		_SYSTEM_Initialize
  3758 ;;		_StartTimer
  3759 ;;		_TimerDone
  3760 ;;		_WaitMs
  3761 ;;		___fladd
  3762 ;;		___flge
  3763 ;;		___fltol
  3764 ;;		_calc_model_data
  3765 ;;		_calc_ror_data
  3766 ;;		_check_adc_scan
  3767 ;;		_check_enter_button
  3768 ;;		_check_help
  3769 ;;		_clear_adc_scan
  3770 ;;		_clear_hid_pflags
  3771 ;;		_conv_raw_result
  3772 ;;		_convert_adc_data
  3773 ;;		_eaDogM_WriteCommand
  3774 ;;		_esr_check
  3775 ;;		_fabsf
  3776 ;;		_get_raw_result
  3777 ;;		_get_switch
  3778 ;;		_get_vterm_ptr
  3779 ;;		_hid_display
  3780 ;;		_init_bsoc
  3781 ;;		_init_display
  3782 ;;		_init_port_dma
  3783 ;;		_lp_filter
  3784 ;;		_mode_lamp_dim
  3785 ;;		_set_display_info
  3786 ;;		_set_load_relay_one
  3787 ;;		_set_load_relay_two
  3788 ;;		_set_vterm
  3789 ;;		_spinners
  3790 ;;		_sprintf
  3791 ;;		_srand
  3792 ;;		_start_adc_scan
  3793 ;;		_start_switch_handler
  3794 ;;		_static_soc
  3795 ;;		_update_lcd
  3796 ;; This function is called by:
  3797 ;;		Startup code after reset
  3798 ;; This function uses a reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text0
  3802  011244                     __ptext0:
  3803                           	opt callstack 0
  3804  011244                     _main:
  3805                           	opt callstack 0
  3806                           
  3807                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3808  011244  0E11               	movlw	17
  3809  011246  26E1               	addwf	fsr1l,f,c
  3810  011248  0E00               	movlw	0
  3811  01124A  22E2               	addwfc	fsr1h,f,c
  3812                           
  3813                           ;main.c: 185:  UI_STATES mode;;main.c: 186:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3814                           ;stkvar	_inp_index @ sp[(-17)+14]
  3815                           
  3816                           ;incstack = 0
  3817  01124C  0EFD               	movlw	-3
  3818  01124E  6AE3               	clrf	plusw1,c
  3819                           
  3820                           ;stkvar	_i @ sp[(-17)+13]
  3821  011250  0EFC               	movlw	-4
  3822  011252  6AE3               	clrf	plusw1,c
  3823                           
  3824                           ;stkvar	_j @ sp[(-17)+12]
  3825  011254  0EFB               	movlw	-5
  3826  011256  6AE3               	clrf	plusw1,c
  3827  011258  2AE3               	incf	plusw1,f,c
  3828                           
  3829                           ;stkvar	_k @ sp[(-17)+11]
  3830  01125A  0EFA               	movlw	-6
  3831  01125C  6AE3               	clrf	plusw1,c
  3832  01125E  82E3               	bsf	plusw1,1,c
  3833                           
  3834                           ;main.c: 189:  SYSTEM_Initialize();
  3835  011260  ECB3  F0D5         	call	_SYSTEM_Initialize	;wreg free
  3836                           
  3837                           ; BSR set to: 60
  3838                           ;main.c: 192:  (INTCON0bits.GIEH = 1);
  3839  011264  8ED2               	bsf	210,7,c	;volatile
  3840                           
  3841                           ; BSR set to: 60
  3842                           ;main.c: 195:  (INTCON0bits.GIEL = 1);
  3843  011266  8CD2               	bsf	210,6,c	;volatile
  3844                           
  3845                           ; BSR set to: 60
  3846                           ;main.c: 197:  V.ui_state = UI_STATE_INIT;
  3847  011268  0102               	movlb	2	; () banked
  3848  01126A  6B07               	clrf	_V& (0+255),b	;volatile
  3849                           
  3850                           ; BSR set to: 2
  3851                           ;main.c: 202:  WaitMs(300);
  3852  01126C  0E2C               	movlw	44
  3853  01126E  6EE6               	movwf	postinc1,c
  3854  011270  0E01               	movlw	1
  3855  011272  6EE6               	movwf	postinc1,c
  3856  011274  ECE2  F0D7         	call	_WaitMs	;wreg free
  3857                           
  3858                           ;main.c: 203:  if (PORTBbits.RB0) {
  3859  011278  A0CB               	btfss	203,0,c	;volatile
  3860  01127A  D004               	goto	l12795
  3861                           
  3862                           ;main.c: 204:   mode = UI_STATE_HOST;
  3863                           ;stkvar	_mode @ sp[(-17)+15]
  3864  01127C  0EFE               	movlw	-2
  3865  01127E  6AE3               	clrf	plusw1,c
  3866  011280  2AE3               	incf	plusw1,f,c
  3867                           
  3868                           ;main.c: 205:  } else {
  3869  011282  D004               	goto	l12797
  3870  011284                     l12795:
  3871                           
  3872                           ;main.c: 206:   mode = UI_STATE_LOG;
  3873                           ;stkvar	_mode @ sp[(-17)+15]
  3874  011284  0EFE               	movlw	-2
  3875  011286  6AE3               	clrf	plusw1,c
  3876  011288  80E3               	bsf	plusw1,0,c
  3877  01128A  82E3               	bsf	plusw1,1,c	;indir
  3878  01128C                     l12797:
  3879                           
  3880                           ;main.c: 209:  if (mode == UI_STATE_HOST) {
  3881                           ;stkvar	_mode @ sp[(-17)+15]
  3882  01128C  0EFE               	movlw	-2
  3883  01128E  04E3               	decf	plusw1,w,c
  3884  011290  A4D8               	btfss	status,2,c
  3885  011292  D007               	goto	l1324
  3886                           
  3887                           ;main.c: 210:   do { LATDbits.LATD0 = 1; } while(0);
  3888  011294  80BD               	bsf	189,0,c	;volatile
  3889                           
  3890                           ;main.c: 211:   V.mode_pwm = 70;
  3891  011296  0E00               	movlw	0
  3892  011298  0102               	movlb	2	; () banked
  3893  01129A  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  3894  01129C  0E46               	movlw	70
  3895  01129E  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  3896                           
  3897                           ;main.c: 212:  } else {
  3898  0112A0  D004               	goto	l12801
  3899  0112A2                     l1324:
  3900  0112A2  90BD               	bcf	189,0,c	;volatile
  3901                           
  3902                           ;main.c: 214:   V.mode_pwm = 0;
  3903  0112A4  0102               	movlb	2	; () banked
  3904  0112A6  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  3905  0112A8  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  3906  0112AA                     l12801:
  3907                           
  3908                           ; BSR set to: 2
  3909                           ;main.c: 216:  mode_lamp_dim(V.mode_pwm);
  3910  0112AA  0060  FA73  FFE6   	movff	_V+149,postinc1
  3911  0112B0  0060  FA77  FFE6   	movff	_V+150,postinc1
  3912  0112B6  ECA7  F0DB         	call	_mode_lamp_dim	;wreg free
  3913  0112BA  D311               	goto	l12921
  3914  0112BC                     l12803:
  3915                           
  3916                           ; BSR set to: 2
  3917                           ;main.c: 224:    init_port_dma();
  3918  0112BC  EC4C  F0D8         	call	_init_port_dma	;wreg free
  3919                           
  3920                           ; BSR set to: 59
  3921                           ;main.c: 226:    init_display();
  3922  0112C0  ECC2  F0CB         	call	_init_display	;wreg free
  3923                           
  3924                           ; BSR set to: 61
  3925                           ;main.c: 227:    eaDogM_WriteCommand(0b00001100);
  3926  0112C4  0E0C               	movlw	12
  3927  0112C6  6EE6               	movwf	postinc1,c
  3928  0112C8  EC0B  F0DC         	call	_eaDogM_WriteCommand	;wreg free
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;main.c: 231:    set_load_relay_one(1);
  3932  0112CC  0E01               	movlw	1
  3933  0112CE  6EE6               	movwf	postinc1,c
  3934  0112D0  ECFB  F0DB         	call	_set_load_relay_one	;wreg free
  3935                           
  3936                           ;main.c: 232:    set_load_relay_two(1);
  3937  0112D4  0E01               	movlw	1
  3938  0112D6  6EE6               	movwf	postinc1,c
  3939  0112D8  ECF3  F0DB         	call	_set_load_relay_two	;wreg free
  3940                           
  3941                           ;main.c: 234:    V.ui_state = mode;
  3942                           ;stkvar	_mode @ sp[(-17)+15]
  3943  0112DC  0EFE               	movlw	-2
  3944  0112DE  006F FF8C  F207    	movff	plusw1,_V	;volatile
  3945                           
  3946                           ;main.c: 235:    srand(1957);
  3947  0112E4  0EA5               	movlw	165
  3948  0112E6  6EE6               	movwf	postinc1,c
  3949  0112E8  0E07               	movlw	7
  3950  0112EA  6EE6               	movwf	postinc1,c
  3951  0112EC  EC18  F0D8         	call	_srand	;wreg free
  3952                           
  3953                           ; BSR set to: 2
  3954                           ;main.c: 236:    set_vterm(0);
  3955  0112F0  0E00               	movlw	0
  3956  0112F2  6EE6               	movwf	postinc1,c
  3957  0112F4  EC43  F0DB         	call	_set_vterm	;wreg free
  3958                           
  3959                           ;main.c: 237:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3960  0112F8  0E50               	movlw	low STR_1
  3961  0112FA  6EE6               	movwf	postinc1,c
  3962  0112FC  0EFF               	movlw	high STR_1
  3963  0112FE  6EE6               	movwf	postinc1,c
  3964  011300  0E00               	movlw	0
  3965  011302  6EE6               	movwf	postinc1,c
  3966  011304  0E00               	movlw	0
  3967  011306  6EE6               	movwf	postinc1,c
  3968  011308  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  3969  01130C  0060  F09B  FFE6   	movff	btemp,postinc1
  3970  011312  0060  F09F  FFE6   	movff	btemp+1,postinc1
  3971  011318  0E04               	movlw	4
  3972  01131A  6EE6               	movwf	postinc1,c
  3973  01131C  ECB9  F0C9         	call	_sprintf	;wreg free
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;main.c: 238:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.007");
  3977  011320  0ED0               	movlw	low STR_3
  3978  011322  6EE6               	movwf	postinc1,c
  3979  011324  0EFF               	movlw	high STR_3
  3980  011326  6EE6               	movwf	postinc1,c
  3981  011328  0EA2               	movlw	low STR_2
  3982  01132A  6EE6               	movwf	postinc1,c
  3983  01132C  0EFF               	movlw	high STR_2
  3984  01132E  6EE6               	movwf	postinc1,c
  3985  011330  0E00               	movlw	0
  3986  011332  6EE6               	movwf	postinc1,c
  3987  011334  0E01               	movlw	1
  3988  011336  6EE6               	movwf	postinc1,c
  3989  011338  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  3990  01133C  0060  F09B  FFE6   	movff	btemp,postinc1
  3991  011342  0060  F09F  FFE6   	movff	btemp+1,postinc1
  3992  011348  0E06               	movlw	6
  3993  01134A  6EE6               	movwf	postinc1,c
  3994  01134C  ECB9  F0C9         	call	_sprintf	;wreg free
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;main.c: 239:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  3998  011350  0E1D               	movlw	low STR_4
  3999  011352  6EE6               	movwf	postinc1,c
  4000  011354  0EFF               	movlw	high STR_4
  4001  011356  6EE6               	movwf	postinc1,c
  4002  011358  0E00               	movlw	0
  4003  01135A  6EE6               	movwf	postinc1,c
  4004  01135C  0E02               	movlw	2
  4005  01135E  6EE6               	movwf	postinc1,c
  4006  011360  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4007  011364  0060  F09B  FFE6   	movff	btemp,postinc1
  4008  01136A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4009  011370  0E04               	movlw	4
  4010  011372  6EE6               	movwf	postinc1,c
  4011  011374  ECB9  F0C9         	call	_sprintf	;wreg free
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;main.c: 240:    sprintf(get_vterm_ptr(0, 2), "                ");
  4015  011378  0E16               	movlw	low (STR_58+2)
  4016  01137A  6EE6               	movwf	postinc1,c
  4017  01137C  0EFE               	movlw	high (STR_58+2)
  4018  01137E  6EE6               	movwf	postinc1,c
  4019  011380  0E02               	movlw	2
  4020  011382  6EE6               	movwf	postinc1,c
  4021  011384  0E00               	movlw	0
  4022  011386  6EE6               	movwf	postinc1,c
  4023  011388  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4024  01138C  0060  F09B  FFE6   	movff	btemp,postinc1
  4025  011392  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4026  011398  0E04               	movlw	4
  4027  01139A  6EE6               	movwf	postinc1,c
  4028  01139C  ECB9  F0C9         	call	_sprintf	;wreg free
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;main.c: 241:    sprintf(get_vterm_ptr(1, 2), "                ");
  4032  0113A0  0E16               	movlw	low (STR_58+2)
  4033  0113A2  6EE6               	movwf	postinc1,c
  4034  0113A4  0EFE               	movlw	high (STR_58+2)
  4035  0113A6  6EE6               	movwf	postinc1,c
  4036  0113A8  0E02               	movlw	2
  4037  0113AA  6EE6               	movwf	postinc1,c
  4038  0113AC  0E01               	movlw	1
  4039  0113AE  6EE6               	movwf	postinc1,c
  4040  0113B0  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4041  0113B4  0060  F09B  FFE6   	movff	btemp,postinc1
  4042  0113BA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4043  0113C0  0E04               	movlw	4
  4044  0113C2  6EE6               	movwf	postinc1,c
  4045  0113C4  ECB9  F0C9         	call	_sprintf	;wreg free
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;main.c: 242:    sprintf(get_vterm_ptr(2, 2), "                ");
  4049  0113C8  0E16               	movlw	low (STR_58+2)
  4050  0113CA  6EE6               	movwf	postinc1,c
  4051  0113CC  0EFE               	movlw	high (STR_58+2)
  4052  0113CE  6EE6               	movwf	postinc1,c
  4053  0113D0  0E02               	movlw	2
  4054  0113D2  6EE6               	movwf	postinc1,c
  4055  0113D4  0E02               	movlw	2
  4056  0113D6  6EE6               	movwf	postinc1,c
  4057  0113D8  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4058  0113DC  0060  F09B  FFE6   	movff	btemp,postinc1
  4059  0113E2  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4060  0113E8  0E04               	movlw	4
  4061  0113EA  6EE6               	movwf	postinc1,c
  4062  0113EC  ECB9  F0C9         	call	_sprintf	;wreg free
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;main.c: 243:    update_lcd(0);
  4066  0113F0  0E00               	movlw	0
  4067  0113F2  6EE6               	movwf	postinc1,c
  4068  0113F4  EC31  F0C9         	call	_update_lcd	;wreg free
  4069                           
  4070                           ;main.c: 244:    WaitMs(1000);
  4071  0113F8  0EE8               	movlw	232
  4072  0113FA  6EE6               	movwf	postinc1,c
  4073  0113FC  0E03               	movlw	3
  4074  0113FE  6EE6               	movwf	postinc1,c
  4075  011400  ECE2  F0D7         	call	_WaitMs	;wreg free
  4076                           
  4077                           ;main.c: 245:    StartTimer(TMR_DISPLAY, 250);
  4078  011404  0EFA               	movlw	250
  4079  011406  6EE6               	movwf	postinc1,c
  4080  011408  0E00               	movlw	0
  4081  01140A  6EE6               	movwf	postinc1,c
  4082  01140C  0E0A               	movlw	10
  4083  01140E  6EE6               	movwf	postinc1,c
  4084  011410  ECEE  F0D6         	call	_StartTimer	;wreg free
  4085                           
  4086                           ;main.c: 246:    StartTimer(TMR_ADC, 200);
  4087  011414  0EC8               	movlw	200
  4088  011416  6EE6               	movwf	postinc1,c
  4089  011418  0E00               	movlw	0
  4090  01141A  6EE6               	movwf	postinc1,c
  4091  01141C  0E01               	movlw	1
  4092  01141E  6EE6               	movwf	postinc1,c
  4093  011420  ECEE  F0D6         	call	_StartTimer	;wreg free
  4094                           
  4095                           ;main.c: 247:    StartTimer(TMR_INFO, 3000);
  4096  011424  0EB8               	movlw	184
  4097  011426  6EE6               	movwf	postinc1,c
  4098  011428  0E0B               	movlw	11
  4099  01142A  6EE6               	movwf	postinc1,c
  4100  01142C  0E07               	movlw	7
  4101  01142E  6EE6               	movwf	postinc1,c
  4102  011430  ECEE  F0D6         	call	_StartTimer	;wreg free
  4103                           
  4104                           ;main.c: 248:    StartTimer(TMR_FLIPPER, 1500);
  4105  011434  0EDC               	movlw	220
  4106  011436  6EE6               	movwf	postinc1,c
  4107  011438  0E05               	movlw	5
  4108  01143A  6EE6               	movwf	postinc1,c
  4109  01143C  0E0B               	movlw	11
  4110  01143E  6EE6               	movwf	postinc1,c
  4111  011440  ECEE  F0D6         	call	_StartTimer	;wreg free
  4112                           
  4113                           ;main.c: 249:    StartTimer(TMR_HELPDIS, 3000);
  4114  011444  0EB8               	movlw	184
  4115  011446  6EE6               	movwf	postinc1,c
  4116  011448  0E0B               	movlw	11
  4117  01144A  6EE6               	movwf	postinc1,c
  4118  01144C  0E09               	movlw	9
  4119  01144E  6EE6               	movwf	postinc1,c
  4120  011450  ECEE  F0D6         	call	_StartTimer	;wreg free
  4121                           
  4122                           ;main.c: 251:    start_adc_scan();
  4123  011454  ECF4  F0D3         	call	_start_adc_scan	;wreg free
  4124                           
  4125                           ;main.c: 252:    start_switch_handler();
  4126  011458  EC14  F0DB         	call	_start_switch_handler	;wreg free
  4127                           
  4128                           ; BSR set to: 57
  4129                           ;main.c: 253:    WaitMs(1000);
  4130  01145C  0EE8               	movlw	232
  4131  01145E  6EE6               	movwf	postinc1,c
  4132  011460  0E03               	movlw	3
  4133  011462  6EE6               	movwf	postinc1,c
  4134  011464  ECE2  F0D7         	call	_WaitMs	;wreg free
  4135                           
  4136                           ;main.c: 258:    i_ror = 1;
  4137                           ;stkvar	_i_ror @ sp[(-17)+16]
  4138  011468  0EFF               	movlw	-1
  4139  01146A  6AE3               	clrf	plusw1,c
  4140  01146C  2AE3               	incf	plusw1,f,c
  4141  01146E                     l12853:
  4142                           
  4143                           ;main.c: 260:     calc_ror_data();
  4144  01146E  EC7F  F0C1         	call	_calc_ror_data	;wreg free
  4145                           
  4146                           ;main.c: 261:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  4147  011472  0E00               	movlw	0
  4148  011474  6EE6               	movwf	postinc1,c
  4149  011476  0E04               	movlw	4
  4150  011478  6EE6               	movwf	postinc1,c
  4151  01147A  EC92  F0A7         	call	_conv_raw_result	;wreg free
  4152  01147E  0060  F09B  FFE6   	movff	btemp,postinc1
  4153  011484  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4154  01148A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  4155  011490  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  4156  011496  0E0B               	movlw	low STR_8
  4157  011498  6EE6               	movwf	postinc1,c
  4158  01149A  0EFF               	movlw	high STR_8
  4159  01149C  6EE6               	movwf	postinc1,c
  4160  01149E  0E00               	movlw	0
  4161  0114A0  6EE6               	movwf	postinc1,c
  4162  0114A2  0E01               	movlw	1
  4163  0114A4  6EE6               	movwf	postinc1,c
  4164  0114A6  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4165  0114AA  0060  F09B  FFE6   	movff	btemp,postinc1
  4166  0114B0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4167  0114B6  0E08               	movlw	8
  4168  0114B8  6EE6               	movwf	postinc1,c
  4169  0114BA  ECB9  F0C9         	call	_sprintf	;wreg free
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;main.c: 262:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f       ", spinners(5, 0),
      +                           i_ror, C.bv_ror);
  4173  0114BE  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4174  0114C4  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4175  0114CA  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4176  0114D0  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4177                           
  4178                           ;stkvar	_i_ror @ sp[(-21)+16]
  4179  0114D6  0EFB               	movlw	-5
  4180  0114D8  50E3               	movf	plusw1,w,c
  4181  0114DA  6EE6               	movwf	postinc1,c
  4182  0114DC  0E00               	movlw	0
  4183  0114DE  6EE6               	movwf	postinc1,c
  4184  0114E0  0E00               	movlw	0
  4185  0114E2  6EE6               	movwf	postinc1,c
  4186  0114E4  0E05               	movlw	5
  4187  0114E6  6EE6               	movwf	postinc1,c
  4188  0114E8  EC37  F0CC         	call	_spinners	;wreg free
  4189  0114EC  5026               	movf	btemp^0,w,c
  4190  0114EE  6EE6               	movwf	postinc1,c
  4191  0114F0  0E00               	movlw	0
  4192  0114F2  6EE6               	movwf	postinc1,c
  4193  0114F4  0E06               	movlw	low STR_9
  4194  0114F6  6EE6               	movwf	postinc1,c
  4195  0114F8  0EFD               	movlw	high STR_9
  4196  0114FA  6EE6               	movwf	postinc1,c
  4197  0114FC  0E00               	movlw	0
  4198  0114FE  6EE6               	movwf	postinc1,c
  4199  011500  0E02               	movlw	2
  4200  011502  6EE6               	movwf	postinc1,c
  4201  011504  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4202  011508  0060  F09B  FFE6   	movff	btemp,postinc1
  4203  01150E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4204  011514  0E0C               	movlw	12
  4205  011516  6EE6               	movwf	postinc1,c
  4206  011518  ECB9  F0C9         	call	_sprintf	;wreg free
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;main.c: 263:     update_lcd(0);
  4210  01151C  0E00               	movlw	0
  4211  01151E  6EE6               	movwf	postinc1,c
  4212  011520  EC31  F0C9         	call	_update_lcd	;wreg free
  4213                           
  4214                           ;main.c: 264:     WaitMs(2000);
  4215  011524  0ED0               	movlw	208
  4216  011526  6EE6               	movwf	postinc1,c
  4217  011528  0E07               	movlw	7
  4218  01152A  6EE6               	movwf	postinc1,c
  4219  01152C  ECE2  F0D7         	call	_WaitMs	;wreg free
  4220                           
  4221                           ;main.c: 265:     clear_adc_scan();
  4222  011530  EC59  F0DC         	call	_clear_adc_scan	;wreg free
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;main.c: 266:     start_adc_scan();
  4226  011534  ECF4  F0D3         	call	_start_adc_scan	;wreg free
  4227                           
  4228                           ;main.c: 267:     WaitMs(500);
  4229  011538  0EF4               	movlw	244
  4230  01153A  6EE6               	movwf	postinc1,c
  4231  01153C  0E01               	movlw	1
  4232  01153E  6EE6               	movwf	postinc1,c
  4233  011540  ECE2  F0D7         	call	_WaitMs	;wreg free
  4234                           
  4235                           ;main.c: 268:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4236                           ;stkvar	_i_ror @ sp[(-17)+16]
  4237  011544  0EFF               	movlw	-1
  4238  011546  006F FF8C  F031    	movff	plusw1,btemp+11
  4239  01154C  2A31               	incf	(btemp+11)^0,f,c
  4240  01154E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  4241  011554  0631               	decf	(btemp+11)^0,f,c
  4242  011556  0E1E               	movlw	30
  4243  011558  6031               	cpfslt	(btemp+11)^0,c
  4244  01155A  D018               	goto	u12290
  4245  01155C  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4246  011562  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4247  011568  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4248  01156E  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4249  011574  0E42               	movlw	66
  4250  011576  6EE6               	movwf	postinc1,c
  4251  011578  0E60               	movlw	96
  4252  01157A  6EE6               	movwf	postinc1,c
  4253  01157C  0E65               	movlw	101
  4254  01157E  6EE6               	movwf	postinc1,c
  4255  011580  0E3C               	movlw	60
  4256  011582  6EE6               	movwf	postinc1,c
  4257  011584  ECAA  F0C3         	call	___flge	;wreg free
  4258  011588  A026               	btfss	btemp& (0+255),0,c
  4259  01158A  D771               	goto	l12853
  4260  01158C                     u12290:
  4261                           
  4262                           ;main.c: 270:    static_soc();
  4263  01158C  EC87  F0DA         	call	_static_soc	;wreg free
  4264                           
  4265                           ; BSR set to: 1
  4266                           ;main.c: 271:    init_bsoc();
  4267  011590  ECF2  F0C2         	call	_init_bsoc	;wreg free
  4268                           
  4269                           ;main.c: 272:    set_load_relay_one(0);
  4270  011594  0E00               	movlw	0
  4271  011596  6EE6               	movwf	postinc1,c
  4272  011598  ECFB  F0DB         	call	_set_load_relay_one	;wreg free
  4273                           
  4274                           ;main.c: 273:    set_load_relay_two(0);
  4275  01159C  0E00               	movlw	0
  4276  01159E  6EE6               	movwf	postinc1,c
  4277  0115A0  ECF3  F0DB         	call	_set_load_relay_two	;wreg free
  4278                           
  4279                           ;main.c: 274:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4280  0115A4  0060  F6BB  FFE6   	movff	_C+174,postinc1
  4281  0115AA  0060  F6BF  FFE6   	movff	_C+175,postinc1
  4282  0115B0  0E33               	movlw	low STR_10
  4283  0115B2  6EE6               	movwf	postinc1,c
  4284  0115B4  0EFD               	movlw	high STR_10
  4285  0115B6  6EE6               	movwf	postinc1,c
  4286  0115B8  0E00               	movlw	0
  4287  0115BA  6EE6               	movwf	postinc1,c
  4288  0115BC  0E00               	movlw	0
  4289  0115BE  6EE6               	movwf	postinc1,c
  4290  0115C0  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4291  0115C4  0060  F09B  FFE6   	movff	btemp,postinc1
  4292  0115CA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4293  0115D0  0E06               	movlw	6
  4294  0115D2  6EE6               	movwf	postinc1,c
  4295  0115D4  ECB9  F0C9         	call	_sprintf	;wreg free
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;main.c: 275:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4299  0115D8  0060  F633  FFE6   	movff	_C+140,postinc1
  4300  0115DE  0060  F637  FFE6   	movff	_C+141,postinc1
  4301  0115E4  0060  F63B  FFE6   	movff	_C+142,postinc1
  4302  0115EA  0060  F63F  FFE6   	movff	_C+143,postinc1
  4303  0115F0  0E49               	movlw	low STR_11
  4304  0115F2  6EE6               	movwf	postinc1,c
  4305  0115F4  0EFD               	movlw	high STR_11
  4306  0115F6  6EE6               	movwf	postinc1,c
  4307  0115F8  0E00               	movlw	0
  4308  0115FA  6EE6               	movwf	postinc1,c
  4309  0115FC  0E01               	movlw	1
  4310  0115FE  6EE6               	movwf	postinc1,c
  4311  011600  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4312  011604  0060  F09B  FFE6   	movff	btemp,postinc1
  4313  01160A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4314  011610  0E08               	movlw	8
  4315  011612  6EE6               	movwf	postinc1,c
  4316  011614  ECB9  F0C9         	call	_sprintf	;wreg free
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;main.c: 276:    update_lcd(0);
  4320  011618  0E00               	movlw	0
  4321  01161A  6EE6               	movwf	postinc1,c
  4322  01161C  EC31  F0C9         	call	_update_lcd	;wreg free
  4323                           
  4324                           ;main.c: 277:    WaitMs(2000);
  4325  011620  0ED0               	movlw	208
  4326  011622  6EE6               	movwf	postinc1,c
  4327  011624  0E07               	movlw	7
  4328  011626  6EE6               	movwf	postinc1,c
  4329  011628  ECE2  F0D7         	call	_WaitMs	;wreg free
  4330                           
  4331                           ;main.c: 278:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  4332  01162C  0E2E               	movlw	low STR_12
  4333  01162E  6EE6               	movwf	postinc1,c
  4334  011630  0EFF               	movlw	high STR_12
  4335  011632  6EE6               	movwf	postinc1,c
  4336  011634  0E00               	movlw	0
  4337  011636  6EE6               	movwf	postinc1,c
  4338  011638  0E00               	movlw	0
  4339  01163A  6EE6               	movwf	postinc1,c
  4340  01163C  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4341  011640  0060  F09B  FFE6   	movff	btemp,postinc1
  4342  011646  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4343  01164C  0E04               	movlw	4
  4344  01164E  6EE6               	movwf	postinc1,c
  4345  011650  ECB9  F0C9         	call	_sprintf	;wreg free
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;main.c: 279:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  4349  011654  0E3F               	movlw	low STR_13
  4350  011656  6EE6               	movwf	postinc1,c
  4351  011658  0EFF               	movlw	high STR_13
  4352  01165A  6EE6               	movwf	postinc1,c
  4353  01165C  0E00               	movlw	0
  4354  01165E  6EE6               	movwf	postinc1,c
  4355  011660  0E01               	movlw	1
  4356  011662  6EE6               	movwf	postinc1,c
  4357  011664  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4358  011668  0060  F09B  FFE6   	movff	btemp,postinc1
  4359  01166E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4360  011674  0E04               	movlw	4
  4361  011676  6EE6               	movwf	postinc1,c
  4362  011678  ECB9  F0C9         	call	_sprintf	;wreg free
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;main.c: 280:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  4366  01167C  0E72               	movlw	low STR_14
  4367  01167E  6EE6               	movwf	postinc1,c
  4368  011680  0EFF               	movlw	high STR_14
  4369  011682  6EE6               	movwf	postinc1,c
  4370  011684  0E00               	movlw	0
  4371  011686  6EE6               	movwf	postinc1,c
  4372  011688  0E02               	movlw	2
  4373  01168A  6EE6               	movwf	postinc1,c
  4374  01168C  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4375  011690  0060  F09B  FFE6   	movff	btemp,postinc1
  4376  011696  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4377  01169C  0E04               	movlw	4
  4378  01169E  6EE6               	movwf	postinc1,c
  4379  0116A0  ECB9  F0C9         	call	_sprintf	;wreg free
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;main.c: 281:    update_lcd(0);
  4383  0116A4  0E00               	movlw	0
  4384  0116A6  6EE6               	movwf	postinc1,c
  4385  0116A8  EC31  F0C9         	call	_update_lcd	;wreg free
  4386                           
  4387                           ;main.c: 282:    uint16_t i_esr = 1;
  4388  0116AC  0E01               	movlw	1
  4389  0116AE  6E30               	movwf	(btemp+10)^0,c
  4390  0116B0  0E00               	movlw	0
  4391  0116B2  6E31               	movwf	(btemp+11)^0,c
  4392                           
  4393                           ;stkvar	_i_esr @ sp[(-17)+8]
  4394  0116B4  0EF7               	movlw	-9
  4395  0116B6  0060  F0C3  FFE3   	movff	btemp+10,plusw1
  4396  0116BC  0EF8               	movlw	-8
  4397  0116BE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  4398                           
  4399                           ;main.c: 284:    float esr_temp;;main.c: 285:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4400  0116C4  D06D               	goto	l12913
  4401  0116C6                     l12901:
  4402                           
  4403                           ;main.c: 286:     WaitMs(110);
  4404  0116C6  0E6E               	movlw	110
  4405  0116C8  6EE6               	movwf	postinc1,c
  4406  0116CA  0E00               	movlw	0
  4407  0116CC  6EE6               	movwf	postinc1,c
  4408  0116CE  ECE2  F0D7         	call	_WaitMs	;wreg free
  4409                           
  4410                           ;main.c: 287:     shape = (uint8_t) fabsf(esr_temp);
  4411                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4412  0116D2  0EF3               	movlw	-13
  4413  0116D4  006F FF8F FFE6     	movff	plusw1,postinc1
  4414  0116DA  006F FF8F FFE6     	movff	plusw1,postinc1
  4415  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  4416  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  4417  0116EC  EC04  F0CF         	call	_fabsf	;wreg free
  4418  0116F0  0060  F09B  FFE6   	movff	btemp,postinc1
  4419  0116F6  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4420  0116FC  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  4421  011702  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  4422  011708  EC39  F0C2         	call	___fltol	;wreg free
  4423  01170C  0060  F098  F031   	movff	btemp,btemp+11
  4424                           
  4425                           ;stkvar	_shape @ sp[(-17)+10]
  4426  011712  0EF9               	movlw	-7
  4427  011714  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  4428                           
  4429                           ;main.c: 288:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4430  01171A  0E00               	movlw	0
  4431  01171C  6EE6               	movwf	postinc1,c
  4432                           
  4433                           ;stkvar	_shape @ sp[(-18)+10]
  4434  01171E  0EF8               	movlw	-8
  4435  011720  50E3               	movf	plusw1,w,c
  4436  011722  6EE6               	movwf	postinc1,c
  4437  011724  EC37  F0CC         	call	_spinners	;wreg free
  4438  011728  5026               	movf	btemp^0,w,c
  4439  01172A  6EE6               	movwf	postinc1,c
  4440  01172C  0E00               	movlw	0
  4441  01172E  6EE6               	movwf	postinc1,c
  4442  011730  0E00               	movlw	0
  4443  011732  6EE6               	movwf	postinc1,c
  4444  011734  0E00               	movlw	0
  4445  011736  6EE6               	movwf	postinc1,c
  4446  011738  EC37  F0CC         	call	_spinners	;wreg free
  4447  01173C  5026               	movf	btemp^0,w,c
  4448  01173E  6EE6               	movwf	postinc1,c
  4449  011740  0E00               	movlw	0
  4450  011742  6EE6               	movwf	postinc1,c
  4451  011744  0E5F               	movlw	low STR_15
  4452  011746  6EE6               	movwf	postinc1,c
  4453  011748  0EFD               	movlw	high STR_15
  4454  01174A  6EE6               	movwf	postinc1,c
  4455  01174C  0E00               	movlw	0
  4456  01174E  6EE6               	movwf	postinc1,c
  4457  011750  0E02               	movlw	2
  4458  011752  6EE6               	movwf	postinc1,c
  4459  011754  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4460  011758  0060  F09B  FFE6   	movff	btemp,postinc1
  4461  01175E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4462  011764  0E08               	movlw	8
  4463  011766  6EE6               	movwf	postinc1,c
  4464  011768  ECB9  F0C9         	call	_sprintf	;wreg free
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;main.c: 289:     update_lcd(0);
  4468  01176C  0E00               	movlw	0
  4469  01176E  6EE6               	movwf	postinc1,c
  4470  011770  EC31  F0C9         	call	_update_lcd	;wreg free
  4471                           
  4472                           ;main.c: 291:     if (i_esr++ > 512)
  4473                           ;stkvar	_i_esr @ sp[(-17)+8]
  4474  011774  50E1               	movf	fsr1l,w,c
  4475  011776  0FF7               	addlw	-9
  4476  011778  6ED9               	movwf	fsr2l,c
  4477  01177A  50E2               	movf	fsr1h,w,c
  4478  01177C  6EDA               	movwf	fsr2h,c
  4479  01177E  0EFF               	movlw	255
  4480  011780  22DA               	addwfc	fsr2h,f,c
  4481  011782  006F FF7C  F030    	movff	indf2,btemp+10
  4482  011788  0E01               	movlw	1
  4483  01178A  26DE               	addwf	postinc2,f,c
  4484  01178C  006F FF7C  F031    	movff	indf2,btemp+11
  4485  011792  0E00               	movlw	0
  4486  011794  22DD               	addwfc	postdec2,f,c
  4487  011796  0430               	decf	(btemp+10)^0,w,c
  4488  011798  0E02               	movlw	2
  4489  01179A  5831               	subwfb	(btemp+11)^0,w,c
  4490  01179C  B0D8               	btfsc	status,0,c
  4491  01179E  D017               	goto	u12310
  4492  0117A0                     l12913:
  4493                           
  4494                           ;main.c: 285:    while ((esr_temp = esr_check(0)) < 0.0) {
  4495  0117A0  0E00               	movlw	0
  4496  0117A2  6EE6               	movwf	postinc1,c
  4497  0117A4  ECA2  F0B4         	call	_esr_check	;wreg free
  4498                           
  4499                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4500  0117A8  0EF3               	movlw	-13
  4501  0117AA  0060  F09B  FFE3   	movff	btemp,plusw1
  4502  0117B0  0EF4               	movlw	-12
  4503  0117B2  0060  F09F  FFE3   	movff	btemp+1,plusw1
  4504  0117B8  0EF5               	movlw	-11
  4505  0117BA  0060  F0A3  FFE3   	movff	btemp+2,plusw1
  4506  0117C0  0EF6               	movlw	-10
  4507  0117C2  0060  F0A7  FFE3   	movff	btemp+3,plusw1
  4508  0117C8  0EF6               	movlw	-10
  4509  0117CA  BEE3               	btfsc	plusw1,7,c
  4510  0117CC  D77C               	goto	l12901
  4511  0117CE                     u12310:
  4512                           
  4513                           ;main.c: 294:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4514  0117CE  0060  F613  FFE6   	movff	_C+132,postinc1
  4515  0117D4  0060  F617  FFE6   	movff	_C+133,postinc1
  4516  0117DA  0060  F61B  FFE6   	movff	_C+134,postinc1
  4517  0117E0  0060  F61F  FFE6   	movff	_C+135,postinc1
  4518  0117E6  0E1D               	movlw	low STR_16
  4519  0117E8  6EE6               	movwf	postinc1,c
  4520  0117EA  0EFD               	movlw	high STR_16
  4521  0117EC  6EE6               	movwf	postinc1,c
  4522  0117EE  0E00               	movlw	0
  4523  0117F0  6EE6               	movwf	postinc1,c
  4524  0117F2  0E00               	movlw	0
  4525  0117F4  6EE6               	movwf	postinc1,c
  4526  0117F6  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4527  0117FA  0060  F09B  FFE6   	movff	btemp,postinc1
  4528  011800  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4529  011806  0E08               	movlw	8
  4530  011808  6EE6               	movwf	postinc1,c
  4531  01180A  ECB9  F0C9         	call	_sprintf	;wreg free
  4532                           
  4533                           ;main.c: 295:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4534  01180E  0060  F78F  FFE6   	movff	_C+227,postinc1
  4535  011814  0060  F793  FFE6   	movff	_C+228,postinc1
  4536  01181A  0060  F797  FFE6   	movff	_C+229,postinc1
  4537  011820  0060  F79B  FFE6   	movff	_C+230,postinc1
  4538  011826  0060  F7BF  FFE6   	movff	_C+239,postinc1
  4539  01182C  0060  F7C3  FFE6   	movff	_C+240,postinc1
  4540  011832  0060  F7C7  FFE6   	movff	_C+241,postinc1
  4541  011838  0060  F7CB  FFE6   	movff	_C+242,postinc1
  4542  01183E  0EBA               	movlw	low STR_17
  4543  011840  6EE6               	movwf	postinc1,c
  4544  011842  0EFC               	movlw	high STR_17
  4545  011844  6EE6               	movwf	postinc1,c
  4546  011846  0E00               	movlw	0
  4547  011848  6EE6               	movwf	postinc1,c
  4548  01184A  0E01               	movlw	1
  4549  01184C  6EE6               	movwf	postinc1,c
  4550  01184E  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4551  011852  0060  F09B  FFE6   	movff	btemp,postinc1
  4552  011858  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4553  01185E  0E0C               	movlw	12
  4554  011860  6EE6               	movwf	postinc1,c
  4555  011862  ECB9  F0C9         	call	_sprintf	;wreg free
  4556                           
  4557                           ;main.c: 296:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4558  011866  0060  F79F  FFE6   	movff	_C+231,postinc1
  4559  01186C  0060  F7A3  FFE6   	movff	_C+232,postinc1
  4560  011872  0060  F7A7  FFE6   	movff	_C+233,postinc1
  4561  011878  0060  F7AB  FFE6   	movff	_C+234,postinc1
  4562  01187E  0060  F7CF  FFE6   	movff	_C+243,postinc1
  4563  011884  0060  F7D3  FFE6   	movff	_C+244,postinc1
  4564  01188A  0060  F7D7  FFE6   	movff	_C+245,postinc1
  4565  011890  0060  F7DB  FFE6   	movff	_C+246,postinc1
  4566  011896  0ED4               	movlw	low STR_18
  4567  011898  6EE6               	movwf	postinc1,c
  4568  01189A  0EFC               	movlw	high STR_18
  4569  01189C  6EE6               	movwf	postinc1,c
  4570  01189E  0E00               	movlw	0
  4571  0118A0  6EE6               	movwf	postinc1,c
  4572  0118A2  0E02               	movlw	2
  4573  0118A4  6EE6               	movwf	postinc1,c
  4574  0118A6  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4575  0118AA  0060  F09B  FFE6   	movff	btemp,postinc1
  4576  0118B0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4577  0118B6  0E0C               	movlw	12
  4578  0118B8  6EE6               	movwf	postinc1,c
  4579  0118BA  ECB9  F0C9         	call	_sprintf	;wreg free
  4580                           
  4581                           ;main.c: 297:    update_lcd(0);
  4582  0118BE  0E00               	movlw	0
  4583  0118C0  6EE6               	movwf	postinc1,c
  4584  0118C2  EC31  F0C9         	call	_update_lcd	;wreg free
  4585                           
  4586                           ;main.c: 298:    WaitMs(5000);
  4587  0118C6  0E88               	movlw	136
  4588  0118C8  6EE6               	movwf	postinc1,c
  4589  0118CA  0E13               	movlw	19
  4590  0118CC  6EE6               	movwf	postinc1,c
  4591  0118CE  ECE2  F0D7         	call	_WaitMs	;wreg free
  4592                           
  4593                           ;main.c: 299:    break;
  4594  0118D2  D01C               	goto	l12923
  4595  0118D4                     l1340:
  4596                           
  4597                           ; BSR set to: 2
  4598                           ;main.c: 305:    P.SYSTEM_STABLE = 1;
  4599  0118D4  0100               	movlb	0	; () banked
  4600  0118D6  8197               	bsf	(_P+1)& (0+255),0,b	;volatile
  4601                           
  4602                           ;main.c: 306:    break;
  4603  0118D8  D019               	goto	l12923
  4604  0118DA                     l1342:
  4605                           
  4606                           ; BSR set to: 2
  4607                           ;main.c: 309:    V.ui_state = UI_STATE_INIT;
  4608  0118DA  6B07               	clrf	_V& (0+255),b	;volatile
  4609                           
  4610                           ;main.c: 310:    break;
  4611  0118DC  D017               	goto	l12923
  4612  0118DE                     l12921:
  4613  0118DE  0102               	movlb	2	; () banked
  4614  0118E0  5107               	movf	_V& (0+255),w,b	;volatile
  4615  0118E2  6E30               	movwf	(btemp+10)^0,c
  4616  0118E4  6A31               	clrf	(btemp+11)^0,c
  4617                           
  4618                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4619                           ; Switch size 1, requested type "simple"
  4620                           ; Number of cases is 1, Range of values is 0 to 0
  4621                           ; switch strategies available:
  4622                           ; Name         Instructions Cycles
  4623                           ; simple_byte            4     3 (average)
  4624                           ;	Chosen strategy is simple_byte
  4625  0118E6  5031               	movf	(btemp+11)^0,w,c
  4626  0118E8  0A00               	xorlw	0	; case 0
  4627  0118EA  A4D8               	btfss	status,2,c
  4628  0118EC  D7F6               	goto	l1342
  4629                           
  4630                           ; BSR set to: 2
  4631                           ; Switch size 1, requested type "simple"
  4632                           ; Number of cases is 5, Range of values is 0 to 5
  4633                           ; switch strategies available:
  4634                           ; Name         Instructions Cycles
  4635                           ; simple_byte           16     9 (average)
  4636                           ;	Chosen strategy is simple_byte
  4637  0118EE  5030               	movf	(btemp+10)^0,w,c
  4638  0118F0  0A00               	xorlw	0	; case 0
  4639  0118F2  B4D8               	btfsc	status,2,c
  4640  0118F4  D4E3               	goto	l12803
  4641  0118F6  0A01               	xorlw	1	; case 1
  4642  0118F8  B4D8               	btfsc	status,2,c
  4643  0118FA  D008               	goto	l12923
  4644  0118FC  0A02               	xorlw	2	; case 3
  4645  0118FE  B4D8               	btfsc	status,2,c
  4646  011900  D005               	goto	l12923
  4647  011902  0A07               	xorlw	7	; case 4
  4648  011904  B4D8               	btfsc	status,2,c
  4649  011906  D7E6               	goto	l1340
  4650  011908  0A01               	xorlw	1	; case 5
  4651  01190A  D7E7               	goto	l1342
  4652  01190C                     l12923:
  4653                           
  4654                           ;main.c: 313:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4655  01190C  0E01               	movlw	1
  4656  01190E  6EE6               	movwf	postinc1,c
  4657  011910  EC6F  F0D9         	call	_TimerDone	;wreg free
  4658  011914  5026               	movf	btemp^0,w,c
  4659  011916  B4D8               	btfsc	status,2,c
  4660  011918  D013               	goto	l12935
  4661  01191A  EC49  F0DC         	call	_check_adc_scan	;wreg free
  4662  01191E  5026               	movf	btemp^0,w,c
  4663  011920  B4D8               	btfsc	status,2,c
  4664  011922  D00E               	goto	l12935
  4665                           
  4666                           ;main.c: 317:    convert_adc_data();
  4667  011924  ECA8  F0CE         	call	_convert_adc_data	;wreg free
  4668                           
  4669                           ;main.c: 321:    clear_adc_scan();
  4670  011928  EC59  F0DC         	call	_clear_adc_scan	;wreg free
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;main.c: 322:    start_adc_scan();
  4674  01192C  ECF4  F0D3         	call	_start_adc_scan	;wreg free
  4675                           
  4676                           ;main.c: 323:    StartTimer(TMR_ADC, 200);
  4677  011930  0EC8               	movlw	200
  4678  011932  6EE6               	movwf	postinc1,c
  4679  011934  0E00               	movlw	0
  4680  011936  6EE6               	movwf	postinc1,c
  4681  011938  0E01               	movlw	1
  4682  01193A  6EE6               	movwf	postinc1,c
  4683  01193C  ECEE  F0D6         	call	_StartTimer	;wreg free
  4684  011940                     l12935:
  4685                           
  4686                           ;main.c: 330:   if (TimerDone(TMR_DISPLAY)) {
  4687                           
  4688                           ;main.c: 326:   if (V.ticks) {
  4689  011940  0E0A               	movlw	10
  4690  011942  6EE6               	movwf	postinc1,c
  4691  011944  EC6F  F0D9         	call	_TimerDone	;wreg free
  4692  011948  5026               	movf	btemp^0,w,c
  4693  01194A  B4D8               	btfsc	status,2,c
  4694  01194C  EFE0  F090         	goto	l13011
  4695                           
  4696                           ;main.c: 331:    if (TimerDone(TMR_HELPDIS)) {
  4697  011950  0E09               	movlw	9
  4698  011952  6EE6               	movwf	postinc1,c
  4699  011954  EC6F  F0D9         	call	_TimerDone	;wreg free
  4700  011958  5026               	movf	btemp^0,w,c
  4701  01195A  B4D8               	btfsc	status,2,c
  4702  01195C  D004               	goto	l12943
  4703                           
  4704                           ;main.c: 332:     set_display_info(DIS_STR);
  4705  01195E  0E00               	movlw	0
  4706  011960  6EE6               	movwf	postinc1,c
  4707  011962  EC52  F0DB         	call	_set_display_info	;wreg free
  4708  011966                     l12943:
  4709                           
  4710                           ;main.c: 334:    calc_model_data();
  4711  011966  EC05  F0AE         	call	_calc_model_data	;wreg free
  4712                           
  4713                           ; BSR set to: 1
  4714                           ;main.c: 341:     hid_display(&H);
  4715                           
  4716                           ;main.c: 336:    if (0) {
  4717  01196A  0ED9               	movlw	_H& (0+255)
  4718  01196C  6EE6               	movwf	postinc1,c
  4719  01196E  ECC1  F0CA         	call	_hid_display	;wreg free
  4720                           
  4721                           ;main.c: 342:     switch (H.hid_display) {
  4722  011972  D3D6               	goto	l12991
  4723  011974                     l1350:
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;main.c: 344:      V.calib = 0;
  4727  011974  0102               	movlb	2	; () banked
  4728  011976  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  4729                           
  4730                           ; BSR set to: 2
  4731                           ;main.c: 345:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f    ", (C.day) ? 'D' : '
      +                           ', C.p_pv);
  4732  011978  0101               	movlb	1	; () banked
  4733  01197A  51F7               	movf	(_C+247)& (0+255),w,b	;volatile
  4734  01197C  A4D8               	btfss	status,2,c
  4735  01197E  D002               	goto	l12953
  4736                           
  4737                           ; BSR set to: 1
  4738  011980  0E20               	movlw	32
  4739  011982  D001               	goto	L1
  4740  011984                     l12953:
  4741                           
  4742                           ; BSR set to: 1
  4743  011984  0E44               	movlw	68
  4744  011986                     L1:
  4745  011986  6E30               	movwf	(btemp+10)^0,c
  4746  011988  0E00               	movlw	0
  4747  01198A  6E31               	movwf	(btemp+11)^0,c
  4748                           
  4749                           ;stkvar	_main$3713 @ sp[(-17)+2]
  4750  01198C  0EF1               	movlw	-15
  4751  01198E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
  4752  011994  0EF2               	movlw	-14
  4753  011996  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  4754                           
  4755                           ; BSR set to: 1
  4756  01199C  0060  F5E3  FFE6   	movff	_C+120,postinc1
  4757  0119A2  0060  F5E7  FFE6   	movff	_C+121,postinc1
  4758  0119A8  0060  F5EB  FFE6   	movff	_C+122,postinc1
  4759  0119AE  0060  F5EF  FFE6   	movff	_C+123,postinc1
  4760                           
  4761                           ;stkvar	_main$3713 @ sp[(-21)+2]
  4762  0119B4  0EED               	movlw	-19
  4763  0119B6  006F FF8F FFE6     	movff	plusw1,postinc1
  4764  0119BC  006F FF8F FFE6     	movff	plusw1,postinc1
  4765  0119C2  0EEC               	movlw	low STR_22
  4766  0119C4  6EE6               	movwf	postinc1,c
  4767  0119C6  0EFD               	movlw	high STR_22
  4768  0119C8  6EE6               	movwf	postinc1,c
  4769  0119CA  0E00               	movlw	0
  4770  0119CC  6EE6               	movwf	postinc1,c
  4771  0119CE  0E00               	movlw	0
  4772  0119D0  6EE6               	movwf	postinc1,c
  4773  0119D2  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4774  0119D6  0060  F09B  FFE6   	movff	btemp,postinc1
  4775  0119DC  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4776  0119E2  0E0A               	movlw	10
  4777  0119E4  6EE6               	movwf	postinc1,c
  4778  0119E6  ECB9  F0C9         	call	_sprintf	;wreg free
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;main.c: 346:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4782  0119EA  0060  F5C3  FFE6   	movff	_C+112,postinc1
  4783  0119F0  0060  F5C7  FFE6   	movff	_C+113,postinc1
  4784  0119F6  0060  F5CB  FFE6   	movff	_C+114,postinc1
  4785  0119FC  0060  F5CF  FFE6   	movff	_C+115,postinc1
  4786  011A02  0EBF               	movlw	low STR_23
  4787  011A04  6EE6               	movwf	postinc1,c
  4788  011A06  0EFE               	movlw	high STR_23
  4789  011A08  6EE6               	movwf	postinc1,c
  4790  011A0A  0E00               	movlw	0
  4791  011A0C  6EE6               	movwf	postinc1,c
  4792  011A0E  0E01               	movlw	1
  4793  011A10  6EE6               	movwf	postinc1,c
  4794  011A12  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4795  011A16  0060  F09B  FFE6   	movff	btemp,postinc1
  4796  011A1C  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4797  011A22  0E08               	movlw	8
  4798  011A24  6EE6               	movwf	postinc1,c
  4799  011A26  ECB9  F0C9         	call	_sprintf	;wreg free
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;main.c: 347:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4803  011A2A  0060  F5D3  FFE6   	movff	_C+116,postinc1
  4804  011A30  0060  F5D7  FFE6   	movff	_C+117,postinc1
  4805  011A36  0060  F5DB  FFE6   	movff	_C+118,postinc1
  4806  011A3C  0060  F5DF  FFE6   	movff	_C+119,postinc1
  4807  011A42  0EAC               	movlw	low STR_24
  4808  011A44  6EE6               	movwf	postinc1,c
  4809  011A46  0EFE               	movlw	high STR_24
  4810  011A48  6EE6               	movwf	postinc1,c
  4811  011A4A  0E00               	movlw	0
  4812  011A4C  6EE6               	movwf	postinc1,c
  4813  011A4E  0E02               	movlw	2
  4814  011A50  6EE6               	movwf	postinc1,c
  4815  011A52  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4816  011A56  0060  F09B  FFE6   	movff	btemp,postinc1
  4817  011A5C  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4818  011A62  0E08               	movlw	8
  4819  011A64  6EE6               	movwf	postinc1,c
  4820  011A66  ECB9  F0C9         	call	_sprintf	;wreg free
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;main.c: 349:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f     ", (C.day) ? 'D' : '
      +                           ', C.pvkw);
  4824  011A6A  0101               	movlb	1	; () banked
  4825  011A6C  51F7               	movf	(_C+247)& (0+255),w,b	;volatile
  4826  011A6E  A4D8               	btfss	status,2,c
  4827  011A70  D002               	goto	l12965
  4828                           
  4829                           ; BSR set to: 1
  4830  011A72  0E20               	movlw	32
  4831  011A74  D001               	goto	L2
  4832  011A76                     l12965:
  4833                           
  4834                           ; BSR set to: 1
  4835  011A76  0E44               	movlw	68
  4836  011A78                     L2:
  4837  011A78  6E30               	movwf	(btemp+10)^0,c
  4838  011A7A  0E00               	movlw	0
  4839  011A7C  6E31               	movwf	(btemp+11)^0,c
  4840                           
  4841                           ;stkvar	_main$3717 @ sp[(-17)+0]
  4842  011A7E  0EEF               	movlw	-17
  4843  011A80  0060  F0C3  FFE3   	movff	btemp+10,plusw1
  4844  011A86  0EF0               	movlw	-16
  4845  011A88  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  4846                           
  4847                           ; BSR set to: 1
  4848  011A8E  0060  F683  FFE6   	movff	_C+160,postinc1
  4849  011A94  0060  F687  FFE6   	movff	_C+161,postinc1
  4850  011A9A  0060  F68B  FFE6   	movff	_C+162,postinc1
  4851  011AA0  0060  F68F  FFE6   	movff	_C+163,postinc1
  4852                           
  4853                           ;stkvar	_main$3717 @ sp[(-21)+0]
  4854  011AA6  0EEB               	movlw	-21
  4855  011AA8  006F FF8F FFE6     	movff	plusw1,postinc1
  4856  011AAE  006F FF8F FFE6     	movff	plusw1,postinc1
  4857  011AB4  0E9C               	movlw	low STR_25
  4858  011AB6  6EE6               	movwf	postinc1,c
  4859  011AB8  0EFD               	movlw	high STR_25
  4860  011ABA  6EE6               	movwf	postinc1,c
  4861  011ABC  0E01               	movlw	1
  4862  011ABE  6EE6               	movwf	postinc1,c
  4863  011AC0  0E00               	movlw	0
  4864  011AC2  6EE6               	movwf	postinc1,c
  4865  011AC4  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4866  011AC8  0060  F09B  FFE6   	movff	btemp,postinc1
  4867  011ACE  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4868  011AD4  0E0A               	movlw	10
  4869  011AD6  6EE6               	movwf	postinc1,c
  4870  011AD8  ECB9  F0C9         	call	_sprintf	;wreg free
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;main.c: 350:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f     ", C.loadkw);
  4874  011ADC  0060  F6A3  FFE6   	movff	_C+168,postinc1
  4875  011AE2  0060  F6A7  FFE6   	movff	_C+169,postinc1
  4876  011AE8  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4877  011AEE  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4878  011AF4  0E99               	movlw	low STR_26
  4879  011AF6  6EE6               	movwf	postinc1,c
  4880  011AF8  0EFE               	movlw	high STR_26
  4881  011AFA  6EE6               	movwf	postinc1,c
  4882  011AFC  0E01               	movlw	1
  4883  011AFE  6EE6               	movwf	postinc1,c
  4884  011B00  0E01               	movlw	1
  4885  011B02  6EE6               	movwf	postinc1,c
  4886  011B04  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4887  011B08  0060  F09B  FFE6   	movff	btemp,postinc1
  4888  011B0E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4889  011B14  0E08               	movlw	8
  4890  011B16  6EE6               	movwf	postinc1,c
  4891  011B18  ECB9  F0C9         	call	_sprintf	;wreg free
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;main.c: 351:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f     ", C.invkw);
  4895  011B1C  0060  F693  FFE6   	movff	_C+164,postinc1
  4896  011B22  0060  F697  FFE6   	movff	_C+165,postinc1
  4897  011B28  0060  F69B  FFE6   	movff	_C+166,postinc1
  4898  011B2E  0060  F69F  FFE6   	movff	_C+167,postinc1
  4899  011B34  0E86               	movlw	low STR_27
  4900  011B36  6EE6               	movwf	postinc1,c
  4901  011B38  0EFE               	movlw	high STR_27
  4902  011B3A  6EE6               	movwf	postinc1,c
  4903  011B3C  0E01               	movlw	1
  4904  011B3E  6EE6               	movwf	postinc1,c
  4905  011B40  0E02               	movlw	2
  4906  011B42  6EE6               	movwf	postinc1,c
  4907  011B44  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4908  011B48  0060  F09B  FFE6   	movff	btemp,postinc1
  4909  011B4E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4910  011B54  0E08               	movlw	8
  4911  011B56  6EE6               	movwf	postinc1,c
  4912  011B58  ECB9  F0C9         	call	_sprintf	;wreg free
  4913                           
  4914                           ;main.c: 352:      break;
  4915  011B5C  D2F6               	goto	l12993
  4916  011B5E                     l1360:
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;main.c: 354:      V.calib = 0;
  4920  011B5E  0102               	movlb	2	; () banked
  4921  011B60  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  4922                           
  4923                           ; BSR set to: 2
  4924                           ;main.c: 355:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  4925  011B62  0060  F413  FFE6   	movff	_C+4,postinc1
  4926  011B68  0060  F417  FFE6   	movff	_C+5,postinc1
  4927  011B6E  0060  F41B  FFE6   	movff	_C+6,postinc1
  4928  011B74  0060  F41F  FFE6   	movff	_C+7,postinc1
  4929  011B7A  0060  F453  FFE6   	movff	_C+20,postinc1
  4930  011B80  0060  F457  FFE6   	movff	_C+21,postinc1
  4931  011B86  0060  F45B  FFE6   	movff	_C+22,postinc1
  4932  011B8C  0060  F45F  FFE6   	movff	_C+23,postinc1
  4933  011B92  0EF8               	movlw	low STR_28
  4934  011B94  6EE6               	movwf	postinc1,c
  4935  011B96  0EFE               	movlw	high STR_28
  4936  011B98  6EE6               	movwf	postinc1,c
  4937  011B9A  0E00               	movlw	0
  4938  011B9C  6EE6               	movwf	postinc1,c
  4939  011B9E  0E00               	movlw	0
  4940  011BA0  6EE6               	movwf	postinc1,c
  4941  011BA2  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4942  011BA6  0060  F09B  FFE6   	movff	btemp,postinc1
  4943  011BAC  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4944  011BB2  0E0C               	movlw	12
  4945  011BB4  6EE6               	movwf	postinc1,c
  4946  011BB6  ECB9  F0C9         	call	_sprintf	;wreg free
  4947                           
  4948                           ;main.c: 356:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  4949  011BBA  0060  F403  FFE6   	movff	_C,postinc1
  4950  011BC0  0060  F407  FFE6   	movff	_C+1,postinc1
  4951  011BC6  0060  F40B  FFE6   	movff	_C+2,postinc1
  4952  011BCC  0060  F40F  FFE6   	movff	_C+3,postinc1
  4953  011BD2  0060  F443  FFE6   	movff	_C+16,postinc1
  4954  011BD8  0060  F447  FFE6   	movff	_C+17,postinc1
  4955  011BDE  0060  F44B  FFE6   	movff	_C+18,postinc1
  4956  011BE4  0060  F44F  FFE6   	movff	_C+19,postinc1
  4957  011BEA  0ED2               	movlw	low STR_29
  4958  011BEC  6EE6               	movwf	postinc1,c
  4959  011BEE  0EFE               	movlw	high STR_29
  4960  011BF0  6EE6               	movwf	postinc1,c
  4961  011BF2  0E00               	movlw	0
  4962  011BF4  6EE6               	movwf	postinc1,c
  4963  011BF6  0E01               	movlw	1
  4964  011BF8  6EE6               	movwf	postinc1,c
  4965  011BFA  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4966  011BFE  0060  F09B  FFE6   	movff	btemp,postinc1
  4967  011C04  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4968  011C0A  0E0C               	movlw	12
  4969  011C0C  6EE6               	movwf	postinc1,c
  4970  011C0E  ECB9  F0C9         	call	_sprintf	;wreg free
  4971                           
  4972                           ;main.c: 357:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  4973  011C12  0060  F503  FFE6   	movff	_C+64,postinc1
  4974  011C18  0060  F507  FFE6   	movff	_C+65,postinc1
  4975  011C1E  0060  F50B  FFE6   	movff	_C+66,postinc1
  4976  011C24  0060  F50F  FFE6   	movff	_C+67,postinc1
  4977  011C2A  0060  F423  FFE6   	movff	_C+8,postinc1
  4978  011C30  0060  F427  FFE6   	movff	_C+9,postinc1
  4979  011C36  0060  F42B  FFE6   	movff	_C+10,postinc1
  4980  011C3C  0060  F42F  FFE6   	movff	_C+11,postinc1
  4981  011C42  0EE5               	movlw	low STR_30
  4982  011C44  6EE6               	movwf	postinc1,c
  4983  011C46  0EFE               	movlw	high STR_30
  4984  011C48  6EE6               	movwf	postinc1,c
  4985  011C4A  0E00               	movlw	0
  4986  011C4C  6EE6               	movwf	postinc1,c
  4987  011C4E  0E02               	movlw	2
  4988  011C50  6EE6               	movwf	postinc1,c
  4989  011C52  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  4990  011C56  0060  F09B  FFE6   	movff	btemp,postinc1
  4991  011C5C  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4992  011C62  0E0C               	movlw	12
  4993  011C64  6EE6               	movwf	postinc1,c
  4994  011C66  ECB9  F0C9         	call	_sprintf	;wreg free
  4995                           
  4996                           ;main.c: 359:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f     ", C.bkwi);
  4997  011C6A  0060  F663  FFE6   	movff	_C+152,postinc1
  4998  011C70  0060  F667  FFE6   	movff	_C+153,postinc1
  4999  011C76  0060  F66B  FFE6   	movff	_C+154,postinc1
  5000  011C7C  0060  F66F  FFE6   	movff	_C+155,postinc1
  5001  011C82  0E4D               	movlw	low STR_31
  5002  011C84  6EE6               	movwf	postinc1,c
  5003  011C86  0EFE               	movlw	high STR_31
  5004  011C88  6EE6               	movwf	postinc1,c
  5005  011C8A  0E01               	movlw	1
  5006  011C8C  6EE6               	movwf	postinc1,c
  5007  011C8E  0E00               	movlw	0
  5008  011C90  6EE6               	movwf	postinc1,c
  5009  011C92  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  5010  011C96  0060  F09B  FFE6   	movff	btemp,postinc1
  5011  011C9C  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5012  011CA2  0E08               	movlw	8
  5013  011CA4  6EE6               	movwf	postinc1,c
  5014  011CA6  ECB9  F0C9         	call	_sprintf	;wreg free
  5015                           
  5016                           ;main.c: 360:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f     ", C.bkwo);
  5017  011CAA  0060  F673  FFE6   	movff	_C+156,postinc1
  5018  011CB0  0060  F677  FFE6   	movff	_C+157,postinc1
  5019  011CB6  0060  F67B  FFE6   	movff	_C+158,postinc1
  5020  011CBC  0060  F67F  FFE6   	movff	_C+159,postinc1
  5021  011CC2  0E60               	movlw	low STR_32
  5022  011CC4  6EE6               	movwf	postinc1,c
  5023  011CC6  0EFE               	movlw	high STR_32
  5024  011CC8  6EE6               	movwf	postinc1,c
  5025  011CCA  0E01               	movlw	1
  5026  011CCC  6EE6               	movwf	postinc1,c
  5027  011CCE  0E01               	movlw	1
  5028  011CD0  6EE6               	movwf	postinc1,c
  5029  011CD2  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  5030  011CD6  0060  F09B  FFE6   	movff	btemp,postinc1
  5031  011CDC  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5032  011CE2  0E08               	movlw	8
  5033  011CE4  6EE6               	movwf	postinc1,c
  5034  011CE6  ECB9  F0C9         	call	_sprintf	;wreg free
  5035                           
  5036                           ;main.c: 361:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f     ", C.bkwi + C.bkwo);
  5037  011CEA  0060  F673  FFE6   	movff	_C+156,postinc1
  5038  011CF0  0060  F677  FFE6   	movff	_C+157,postinc1
  5039  011CF6  0060  F67B  FFE6   	movff	_C+158,postinc1
  5040  011CFC  0060  F67F  FFE6   	movff	_C+159,postinc1
  5041  011D02  0060  F663  FFE6   	movff	_C+152,postinc1
  5042  011D08  0060  F667  FFE6   	movff	_C+153,postinc1
  5043  011D0E  0060  F66B  FFE6   	movff	_C+154,postinc1
  5044  011D14  0060  F66F  FFE6   	movff	_C+155,postinc1
  5045  011D1A  EC56  F09D         	call	___fladd	;wreg free
  5046  011D1E  0060  F09B  FFE6   	movff	btemp,postinc1
  5047  011D24  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5048  011D2A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  5049  011D30  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  5050  011D36  0E73               	movlw	low STR_33
  5051  011D38  6EE6               	movwf	postinc1,c
  5052  011D3A  0EFE               	movlw	high STR_33
  5053  011D3C  6EE6               	movwf	postinc1,c
  5054  011D3E  0E01               	movlw	1
  5055  011D40  6EE6               	movwf	postinc1,c
  5056  011D42  0E02               	movlw	2
  5057  011D44  6EE6               	movwf	postinc1,c
  5058  011D46  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  5059  011D4A  0060  F09B  FFE6   	movff	btemp,postinc1
  5060  011D50  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5061  011D56  0E08               	movlw	8
  5062  011D58  6EE6               	movwf	postinc1,c
  5063  011D5A  ECB9  F0C9         	call	_sprintf	;wreg free
  5064                           
  5065                           ;main.c: 362:      break;
  5066  011D5E  D1F5               	goto	l12993
  5067  011D60                     l1361:
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;main.c: 364:      V.calib = 0;
  5071  011D60  0102               	movlb	2	; () banked
  5072  011D62  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5073                           
  5074                           ; BSR set to: 2
  5075                           ;main.c: 365:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f     ", C.p_bat);
  5076  011D64  0060  F5F3  FFE6   	movff	_C+124,postinc1
  5077  011D6A  0060  F5F7  FFE6   	movff	_C+125,postinc1
  5078  011D70  0060  F5FB  FFE6   	movff	_C+126,postinc1
  5079  011D76  0060  F5FF  FFE6   	movff	_C+127,postinc1
  5080  011D7C  0EB0               	movlw	low STR_34
  5081  011D7E  6EE6               	movwf	postinc1,c
  5082  011D80  0EFD               	movlw	high STR_34
  5083  011D82  6EE6               	movwf	postinc1,c
  5084  011D84  0E00               	movlw	0
  5085  011D86  6EE6               	movwf	postinc1,c
  5086  011D88  0E00               	movlw	0
  5087  011D8A  6EE6               	movwf	postinc1,c
  5088  011D8C  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  5089  011D90  0060  F09B  FFE6   	movff	btemp,postinc1
  5090  011D96  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5091  011D9C  0E08               	movlw	8
  5092  011D9E  6EE6               	movwf	postinc1,c
  5093  011DA0  ECB9  F0C9         	call	_sprintf	;wreg free
  5094                           
  5095                           ;main.c: 366:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  5096  011DA4  0060  F643  FFE6   	movff	_C+144,postinc1
  5097  011DAA  0060  F647  FFE6   	movff	_C+145,postinc1
  5098  011DB0  0060  F64B  FFE6   	movff	_C+146,postinc1
  5099  011DB6  0060  F64F  FFE6   	movff	_C+147,postinc1
  5100  011DBC  0060  F633  FFE6   	movff	_C+140,postinc1
  5101  011DC2  0060  F637  FFE6   	movff	_C+141,postinc1
  5102  011DC8  0060  F63B  FFE6   	movff	_C+142,postinc1
  5103  011DCE  0060  F63F  FFE6   	movff	_C+143,postinc1
  5104  011DD4  0E00               	movlw	low STR_35
  5105  011DD6  6EE6               	movwf	postinc1,c
  5106  011DD8  0EFE               	movlw	high STR_35
  5107  011DDA  6EE6               	movwf	postinc1,c
  5108  011DDC  0E00               	movlw	0
  5109  011DDE  6EE6               	movwf	postinc1,c
  5110  011DE0  0E01               	movlw	1
  5111  011DE2  6EE6               	movwf	postinc1,c
  5112  011DE4  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  5113  011DE8  0060  F09B  FFE6   	movff	btemp,postinc1
  5114  011DEE  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5115  011DF4  0E0C               	movlw	12
  5116  011DF6  6EE6               	movwf	postinc1,c
  5117  011DF8  ECB9  F0C9         	call	_sprintf	;wreg free
  5118                           
  5119                           ;main.c: 367:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  5120  011DFC  0060  F6B3  FFE6   	movff	_C+172,postinc1
  5121  011E02  0060  F6B7  FFE6   	movff	_C+173,postinc1
  5122  011E08  0060  F6BB  FFE6   	movff	_C+174,postinc1
  5123  011E0E  0060  F6BF  FFE6   	movff	_C+175,postinc1
  5124  011E14  0E00               	movlw	0
  5125  011E16  6EE6               	movwf	postinc1,c
  5126  011E18  0E05               	movlw	5
  5127  011E1A  6EE6               	movwf	postinc1,c
  5128  011E1C  EC37  F0CC         	call	_spinners	;wreg free
  5129  011E20  5026               	movf	btemp^0,w,c
  5130  011E22  6EE6               	movwf	postinc1,c
  5131  011E24  0E00               	movlw	0
  5132  011E26  6EE6               	movwf	postinc1,c
  5133  011E28  0E88               	movlw	low STR_36
  5134  011E2A  6EE6               	movwf	postinc1,c
  5135  011E2C  0EFD               	movlw	high STR_36
  5136  011E2E  6EE6               	movwf	postinc1,c
  5137  011E30  0E00               	movlw	0
  5138  011E32  6EE6               	movwf	postinc1,c
  5139  011E34  0E02               	movlw	2
  5140  011E36  6EE6               	movwf	postinc1,c
  5141  011E38  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  5142  011E3C  0060  F09B  FFE6   	movff	btemp,postinc1
  5143  011E42  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5144  011E48  0E0A               	movlw	10
  5145  011E4A  6EE6               	movwf	postinc1,c
  5146  011E4C  ECB9  F0C9         	call	_sprintf	;wreg free
  5147                           
  5148                           ;main.c: 369:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f         ", C.esr);
  5149  011E50  0060  F613  FFE6   	movff	_C+132,postinc1
  5150  011E56  0060  F617  FFE6   	movff	_C+133,postinc1
  5151  011E5C  0060  F61B  FFE6   	movff	_C+134,postinc1
  5152  011E62  0060  F61F  FFE6   	movff	_C+135,postinc1
  5153  011E68  0E74               	movlw	low STR_37
  5154  011E6A  6EE6               	movwf	postinc1,c
  5155  011E6C  0EFD               	movlw	high STR_37
  5156  011E6E  6EE6               	movwf	postinc1,c
  5157  011E70  0E01               	movlw	1
  5158  011E72  6EE6               	movwf	postinc1,c
  5159  011E74  0E00               	movlw	0
  5160  011E76  6EE6               	movwf	postinc1,c
  5161  011E78  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  5162  011E7C  0060  F09B  FFE6   	movff	btemp,postinc1
  5163  011E82  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5164  011E88  0E08               	movlw	8
  5165  011E8A  6EE6               	movwf	postinc1,c
  5166  011E8C  ECB9  F0C9         	call	_sprintf	;wreg free
  5167                           
  5168                           ;main.c: 370:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f     ", C.bv_one_load, C.
      +                          load_i1);
  5169  011E90  0060  F78F  FFE6   	movff	_C+227,postinc1
  5170  011E96  0060  F793  FFE6   	movff	_C+228,postinc1
  5171  011E9C  0060  F797  FFE6   	movff	_C+229,postinc1
  5172  011EA2  0060  F79B  FFE6   	movff	_C+230,postinc1
  5173  011EA8  0060  F7BF  FFE6   	movff	_C+239,postinc1
  5174  011EAE  0060  F7C3  FFE6   	movff	_C+240,postinc1
  5175  011EB4  0060  F7C7  FFE6   	movff	_C+241,postinc1
  5176  011EBA  0060  F7CB  FFE6   	movff	_C+242,postinc1
  5177  011EC0  0EC4               	movlw	low STR_38
  5178  011EC2  6EE6               	movwf	postinc1,c
  5179  011EC4  0EFD               	movlw	high STR_38
  5180  011EC6  6EE6               	movwf	postinc1,c
  5181  011EC8  0E01               	movlw	1
  5182  011ECA  6EE6               	movwf	postinc1,c
  5183  011ECC  0E01               	movlw	1
  5184  011ECE  6EE6               	movwf	postinc1,c
  5185  011ED0  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  5186  011ED4  0060  F09B  FFE6   	movff	btemp,postinc1
  5187  011EDA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5188  011EE0  0E0C               	movlw	12
  5189  011EE2  6EE6               	movwf	postinc1,c
  5190  011EE4  ECB9  F0C9         	call	_sprintf	;wreg free
  5191                           
  5192                           ;main.c: 371:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f     ", C.bv_full_load, C
      +                          .load_i2);
  5193  011EE8  0060  F79F  FFE6   	movff	_C+231,postinc1
  5194  011EEE  0060  F7A3  FFE6   	movff	_C+232,postinc1
  5195  011EF4  0060  F7A7  FFE6   	movff	_C+233,postinc1
  5196  011EFA  0060  F7AB  FFE6   	movff	_C+234,postinc1
  5197  011F00  0060  F7CF  FFE6   	movff	_C+243,postinc1
  5198  011F06  0060  F7D3  FFE6   	movff	_C+244,postinc1
  5199  011F0C  0060  F7D7  FFE6   	movff	_C+245,postinc1
  5200  011F12  0060  F7DB  FFE6   	movff	_C+246,postinc1
  5201  011F18  0ED8               	movlw	low STR_39
  5202  011F1A  6EE6               	movwf	postinc1,c
  5203  011F1C  0EFD               	movlw	high STR_39
  5204  011F1E  6EE6               	movwf	postinc1,c
  5205  011F20  0E01               	movlw	1
  5206  011F22  6EE6               	movwf	postinc1,c
  5207  011F24  0E02               	movlw	2
  5208  011F26  6EE6               	movwf	postinc1,c
  5209  011F28  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  5210  011F2C  0060  F09B  FFE6   	movff	btemp,postinc1
  5211  011F32  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5212  011F38  0E0C               	movlw	12
  5213  011F3A  6EE6               	movwf	postinc1,c
  5214  011F3C  ECB9  F0C9         	call	_sprintf	;wreg free
  5215                           
  5216                           ;main.c: 372:      break;
  5217  011F40  D104               	goto	l12993
  5218  011F42                     l12977:
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;main.c: 374:      if (!V.calib) {
  5222  011F42  0102               	movlb	2	; () banked
  5223  011F44  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  5224  011F46  A4D8               	btfss	status,2,c
  5225  011F48  D02D               	goto	l12981
  5226                           
  5227                           ; BSR set to: 2
  5228                           ;main.c: 375:       lp_filter(0.0, i, -1);
  5229  011F4A  0EFF               	movlw	255
  5230  011F4C  6EE6               	movwf	postinc1,c
  5231                           
  5232                           ;stkvar	_i @ sp[(-18)+13]
  5233  011F4E  0EFB               	movlw	-5
  5234  011F50  50E3               	movf	plusw1,w,c
  5235  011F52  6EE6               	movwf	postinc1,c
  5236  011F54  0E00               	movlw	0
  5237  011F56  6EE6               	movwf	postinc1,c
  5238  011F58  0E00               	movlw	0
  5239  011F5A  6EE6               	movwf	postinc1,c
  5240  011F5C  0E00               	movlw	0
  5241  011F5E  6EE6               	movwf	postinc1,c
  5242  011F60  0E00               	movlw	0
  5243  011F62  6EE6               	movwf	postinc1,c
  5244  011F64  EC16  F0BF         	call	_lp_filter	;wreg free
  5245                           
  5246                           ;main.c: 376:       lp_filter(0.0, j, -1);
  5247  011F68  0EFF               	movlw	255
  5248  011F6A  6EE6               	movwf	postinc1,c
  5249                           
  5250                           ;stkvar	_j @ sp[(-18)+12]
  5251  011F6C  0EFA               	movlw	-6
  5252  011F6E  50E3               	movf	plusw1,w,c
  5253  011F70  6EE6               	movwf	postinc1,c
  5254  011F72  0E00               	movlw	0
  5255  011F74  6EE6               	movwf	postinc1,c
  5256  011F76  0E00               	movlw	0
  5257  011F78  6EE6               	movwf	postinc1,c
  5258  011F7A  0E00               	movlw	0
  5259  011F7C  6EE6               	movwf	postinc1,c
  5260  011F7E  0E00               	movlw	0
  5261  011F80  6EE6               	movwf	postinc1,c
  5262  011F82  EC16  F0BF         	call	_lp_filter	;wreg free
  5263                           
  5264                           ;main.c: 377:       lp_filter(0.0, k, -1);
  5265  011F86  0EFF               	movlw	255
  5266  011F88  6EE6               	movwf	postinc1,c
  5267                           
  5268                           ;stkvar	_k @ sp[(-18)+11]
  5269  011F8A  0EF9               	movlw	-7
  5270  011F8C  50E3               	movf	plusw1,w,c
  5271  011F8E  6EE6               	movwf	postinc1,c
  5272  011F90  0E00               	movlw	0
  5273  011F92  6EE6               	movwf	postinc1,c
  5274  011F94  0E00               	movlw	0
  5275  011F96  6EE6               	movwf	postinc1,c
  5276  011F98  0E00               	movlw	0
  5277  011F9A  6EE6               	movwf	postinc1,c
  5278  011F9C  0E00               	movlw	0
  5279  011F9E  6EE6               	movwf	postinc1,c
  5280  011FA0  EC16  F0BF         	call	_lp_filter	;wreg free
  5281  011FA4                     l12981:
  5282                           
  5283                           ;main.c: 379:      V.calib = 1;
  5284  011FA4  0E01               	movlw	1
  5285  011FA6  0102               	movlb	2	; () banked
  5286  011FA8  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  5287                           
  5288                           ; BSR set to: 2
  5289                           ;main.c: 380:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  5290  011FAA  0E02               	movlw	2
  5291  011FAC  6EE6               	movwf	postinc1,c
  5292  011FAE  ECDB  F0D8         	call	_get_switch	;wreg free
  5293  011FB2  5026               	movf	btemp^0,w,c
  5294  011FB4  6EE6               	movwf	postinc1,c
  5295  011FB6  0E00               	movlw	0
  5296  011FB8  6EE6               	movwf	postinc1,c
  5297                           
  5298                           ;stkvar	_i @ sp[(-19)+13]
  5299  011FBA  0EFA               	movlw	-6
  5300  011FBC  50E3               	movf	plusw1,w,c
  5301  011FBE  0D04               	mullw	4
  5302  011FC0  0E00               	movlw	low _C
  5303  011FC2  24F3               	addwf	243,w,c
  5304  011FC4  6ED9               	movwf	fsr2l,c
  5305  011FC6  0E01               	movlw	high _C
  5306  011FC8  20F4               	addwfc	prodh,w,c
  5307  011FCA  6EDA               	movwf	fsr2h,c
  5308  011FCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5309  011FD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5310  011FD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5311  011FDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5312                           
  5313                           ;stkvar	_i @ sp[(-23)+13]
  5314  011FE4  0EF6               	movlw	-10
  5315  011FE6  50E3               	movf	plusw1,w,c
  5316  011FE8  6EE6               	movwf	postinc1,c
  5317  011FEA  EC61  F0DB         	call	_get_raw_result	;wreg free
  5318  011FEE  0060  F09B  FFE6   	movff	btemp,postinc1
  5319  011FF4  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5320  011FFA  0E83               	movlw	low STR_19
  5321  011FFC  6EE6               	movwf	postinc1,c
  5322  011FFE  0EFF               	movlw	high STR_19
  5323  012000  6EE6               	movwf	postinc1,c
  5324  012002  0E00               	movlw	0
  5325  012004  6EE6               	movwf	postinc1,c
  5326  012006  0E00               	movlw	0
  5327  012008  6EE6               	movwf	postinc1,c
  5328  01200A  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  5329  01200E  0060  F09B  FFE6   	movff	btemp,postinc1
  5330  012014  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5331  01201A  0E0C               	movlw	12
  5332  01201C  6EE6               	movwf	postinc1,c
  5333  01201E  ECB9  F0C9         	call	_sprintf	;wreg free
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;main.c: 381:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  5337  012022  0E03               	movlw	3
  5338  012024  6EE6               	movwf	postinc1,c
  5339  012026  ECDB  F0D8         	call	_get_switch	;wreg free
  5340  01202A  5026               	movf	btemp^0,w,c
  5341  01202C  6EE6               	movwf	postinc1,c
  5342  01202E  0E00               	movlw	0
  5343  012030  6EE6               	movwf	postinc1,c
  5344                           
  5345                           ;stkvar	_j @ sp[(-19)+12]
  5346  012032  0EF9               	movlw	-7
  5347  012034  50E3               	movf	plusw1,w,c
  5348  012036  0D04               	mullw	4
  5349  012038  0E00               	movlw	low _C
  5350  01203A  24F3               	addwf	243,w,c
  5351  01203C  6ED9               	movwf	fsr2l,c
  5352  01203E  0E01               	movlw	high _C
  5353  012040  20F4               	addwfc	prodh,w,c
  5354  012042  6EDA               	movwf	fsr2h,c
  5355  012044  006F FF7B FFE6     	movff	postinc2,postinc1
  5356  01204A  006F FF7B FFE6     	movff	postinc2,postinc1
  5357  012050  006F FF7B FFE6     	movff	postinc2,postinc1
  5358  012056  006F FF7B FFE6     	movff	postinc2,postinc1
  5359                           
  5360                           ;stkvar	_j @ sp[(-23)+12]
  5361  01205C  0EF5               	movlw	-11
  5362  01205E  50E3               	movf	plusw1,w,c
  5363  012060  6EE6               	movwf	postinc1,c
  5364  012062  EC61  F0DB         	call	_get_raw_result	;wreg free
  5365  012066  0060  F09B  FFE6   	movff	btemp,postinc1
  5366  01206C  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5367  012072  0E83               	movlw	low STR_19
  5368  012074  6EE6               	movwf	postinc1,c
  5369  012076  0EFF               	movlw	high STR_19
  5370  012078  6EE6               	movwf	postinc1,c
  5371  01207A  0E00               	movlw	0
  5372  01207C  6EE6               	movwf	postinc1,c
  5373  01207E  0E01               	movlw	1
  5374  012080  6EE6               	movwf	postinc1,c
  5375  012082  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  5376  012086  0060  F09B  FFE6   	movff	btemp,postinc1
  5377  01208C  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5378  012092  0E0C               	movlw	12
  5379  012094  6EE6               	movwf	postinc1,c
  5380  012096  ECB9  F0C9         	call	_sprintf	;wreg free
  5381                           
  5382                           ; BSR set to: 0
  5383                           ;main.c: 382:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  5384                           ;stkvar	_inp_index @ sp[(-17)+14]
  5385  01209A  0EFD               	movlw	-3
  5386  01209C  50E3               	movf	plusw1,w,c
  5387  01209E  6E30               	movwf	(btemp+10)^0,c
  5388  0120A0  6A31               	clrf	(btemp+11)^0,c
  5389  0120A2  0E01               	movlw	1
  5390  0120A4  2630               	addwf	(btemp+10)^0,f,c
  5391  0120A6  0E00               	movlw	0
  5392  0120A8  2231               	addwfc	(btemp+11)^0,f,c
  5393  0120AA  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  5394  0120B0  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  5395                           
  5396                           ;stkvar	_k @ sp[(-19)+11]
  5397  0120B6  0EF8               	movlw	-8
  5398  0120B8  50E3               	movf	plusw1,w,c
  5399  0120BA  0D04               	mullw	4
  5400  0120BC  0E00               	movlw	low _C
  5401  0120BE  24F3               	addwf	243,w,c
  5402  0120C0  6ED9               	movwf	fsr2l,c
  5403  0120C2  0E01               	movlw	high _C
  5404  0120C4  20F4               	addwfc	prodh,w,c
  5405  0120C6  6EDA               	movwf	fsr2h,c
  5406  0120C8  006F FF7B FFE6     	movff	postinc2,postinc1
  5407  0120CE  006F FF7B FFE6     	movff	postinc2,postinc1
  5408  0120D4  006F FF7B FFE6     	movff	postinc2,postinc1
  5409  0120DA  006F FF7B FFE6     	movff	postinc2,postinc1
  5410                           
  5411                           ;stkvar	_k @ sp[(-23)+11]
  5412  0120E0  0EF4               	movlw	-12
  5413  0120E2  50E3               	movf	plusw1,w,c
  5414  0120E4  6EE6               	movwf	postinc1,c
  5415  0120E6  EC61  F0DB         	call	_get_raw_result	;wreg free
  5416  0120EA  0060  F09B  FFE6   	movff	btemp,postinc1
  5417  0120F0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5418  0120F6  0E61               	movlw	low STR_21
  5419  0120F8  6EE6               	movwf	postinc1,c
  5420  0120FA  0EFF               	movlw	high STR_21
  5421  0120FC  6EE6               	movwf	postinc1,c
  5422  0120FE  0E00               	movlw	0
  5423  012100  6EE6               	movwf	postinc1,c
  5424  012102  0E02               	movlw	2
  5425  012104  6EE6               	movwf	postinc1,c
  5426  012106  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  5427  01210A  0060  F09B  FFE6   	movff	btemp,postinc1
  5428  012110  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5429  012116  0E0C               	movlw	12
  5430  012118  6EE6               	movwf	postinc1,c
  5431  01211A  ECB9  F0C9         	call	_sprintf	;wreg free
  5432                           
  5433                           ;main.c: 383:      break;
  5434  01211E  D015               	goto	l12993
  5435  012120                     l12991:
  5436  012120  0100               	movlb	0	; () banked
  5437  012122  51D9               	movf	_H& (0+255),w,b
  5438  012124  6E30               	movwf	(btemp+10)^0,c
  5439  012126  6A31               	clrf	(btemp+11)^0,c
  5440                           
  5441                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5442                           ; Switch size 1, requested type "simple"
  5443                           ; Number of cases is 1, Range of values is 0 to 0
  5444                           ; switch strategies available:
  5445                           ; Name         Instructions Cycles
  5446                           ; simple_byte            4     3 (average)
  5447                           ;	Chosen strategy is simple_byte
  5448  012128  5031               	movf	(btemp+11)^0,w,c
  5449  01212A  0A00               	xorlw	0	; case 0
  5450  01212C  A4D8               	btfss	status,2,c
  5451  01212E  D00D               	goto	l12993
  5452                           
  5453                           ; BSR set to: 0
  5454                           ; Switch size 1, requested type "simple"
  5455                           ; Number of cases is 4, Range of values is 0 to 3
  5456                           ; switch strategies available:
  5457                           ; Name         Instructions Cycles
  5458                           ; simple_byte           13     7 (average)
  5459                           ;	Chosen strategy is simple_byte
  5460  012130  5030               	movf	(btemp+10)^0,w,c
  5461  012132  0A00               	xorlw	0	; case 0
  5462  012134  B4D8               	btfsc	status,2,c
  5463  012136  D513               	goto	l1360
  5464  012138  0A01               	xorlw	1	; case 1
  5465  01213A  B4D8               	btfsc	status,2,c
  5466  01213C  D41B               	goto	l1350
  5467  01213E  0A03               	xorlw	3	; case 2
  5468  012140  B4D8               	btfsc	status,2,c
  5469  012142  D60E               	goto	l1361
  5470  012144  0A01               	xorlw	1	; case 3
  5471  012146  B4D8               	btfsc	status,2,c
  5472  012148  D6FC               	goto	l12977
  5473  01214A                     l12993:
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;main.c: 387:     clear_hid_pflags(&H);
  5477  01214A  0ED9               	movlw	_H& (0+255)
  5478  01214C  6EE6               	movwf	postinc1,c
  5479  01214E  EC99  F0DA         	call	_clear_hid_pflags	;wreg free
  5480                           
  5481                           ;main.c: 389:    StartTimer(TMR_DISPLAY, 250);
  5482  012152  0EFA               	movlw	250
  5483  012154  6EE6               	movwf	postinc1,c
  5484  012156  0E00               	movlw	0
  5485  012158  6EE6               	movwf	postinc1,c
  5486  01215A  0E0A               	movlw	10
  5487  01215C  6EE6               	movwf	postinc1,c
  5488  01215E  ECEE  F0D6         	call	_StartTimer	;wreg free
  5489                           
  5490                           ;main.c: 390:    V.enter = check_enter_button(&H);
  5491  012162  0ED9               	movlw	_H& (0+255)
  5492  012164  6EE6               	movwf	postinc1,c
  5493  012166  EC0E  F0D7         	call	_check_enter_button	;wreg free
  5494  01216A  5026               	movf	btemp^0,w,c
  5495  01216C  0102               	movlb	2	; () banked
  5496  01216E  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  5497                           
  5498                           ; BSR set to: 2
  5499                           ;main.c: 391:    if (V.enter && (H.hid_display != HID_AUX)) {
  5500  012170  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5501  012172  B4D8               	btfsc	status,2,c
  5502  012174  D013               	goto	l13007
  5503                           
  5504                           ; BSR set to: 2
  5505  012176  0E03               	movlw	3
  5506  012178  0100               	movlb	0	; () banked
  5507  01217A  19D9               	xorwf	_H& (0+255),w,b
  5508  01217C  B4D8               	btfsc	status,2,c
  5509  01217E  D00E               	goto	l13007
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;main.c: 392:     V.enter = 0;
  5513  012180  0102               	movlb	2	; () banked
  5514  012182  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5515                           
  5516                           ; BSR set to: 2
  5517                           ;main.c: 393:     V.screen = ~V.screen;
  5518  012184  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5519  012186  D002               	goto	u12410
  5520  012188  0E01               	movlw	1
  5521  01218A  D001               	goto	u12416
  5522  01218C                     u12410:
  5523  01218C  0E00               	movlw	0
  5524  01218E                     u12416:
  5525  01218E  0AFF               	xorlw	255
  5526  012190  6E31               	movwf	(btemp+11)^0,c
  5527  012192  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  5528  012194  1831               	xorwf	(btemp+11)^0,w,c
  5529  012196  0BFE               	andlw	-2
  5530  012198  1831               	xorwf	(btemp+11)^0,w,c
  5531  01219A  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  5532  01219C                     l13007:
  5533                           
  5534                           ;main.c: 395:    set_vterm(V.screen);
  5535  01219C  0102               	movlb	2	; () banked
  5536  01219E  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5537  0121A0  D002               	goto	u12420
  5538  0121A2  0E01               	movlw	1
  5539  0121A4  D001               	goto	u12426
  5540  0121A6                     u12420:
  5541  0121A6  0E00               	movlw	0
  5542  0121A8                     u12426:
  5543  0121A8  6EE6               	movwf	postinc1,c
  5544  0121AA  EC43  F0DB         	call	_set_vterm	;wreg free
  5545                           
  5546                           ;main.c: 396:    update_lcd(V.screen);
  5547  0121AE  0102               	movlb	2	; () banked
  5548  0121B0  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5549  0121B2  D002               	goto	u12430
  5550  0121B4  0E01               	movlw	1
  5551  0121B6  D001               	goto	u12436
  5552  0121B8                     u12430:
  5553  0121B8  0E00               	movlw	0
  5554  0121BA                     u12436:
  5555  0121BA  6EE6               	movwf	postinc1,c
  5556  0121BC  EC31  F0C9         	call	_update_lcd	;wreg free
  5557  0121C0                     l13011:
  5558                           
  5559                           ;main.c: 402:   check_help(V.flipper);
  5560  0121C0  0102               	movlb	2	; () banked
  5561  0121C2  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  5562  0121C4  6EE6               	movwf	postinc1,c
  5563  0121C6  EC0B  F0BC         	call	_check_help	;wreg free
  5564                           
  5565                           ;main.c: 404:   if (V.enter) {
  5566  0121CA  0102               	movlb	2	; () banked
  5567  0121CC  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5568  0121CE  B4D8               	btfsc	status,2,c
  5569  0121D0  D062               	goto	l1366
  5570                           
  5571                           ; BSR set to: 2
  5572                           ;main.c: 405:    V.enter = 0;
  5573  0121D2  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5574                           
  5575                           ;main.c: 406:    V.calib = 0;
  5576  0121D4  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5577                           
  5578                           ; BSR set to: 2
  5579                           ;main.c: 407:    inp_index += 3;
  5580                           ;stkvar	_inp_index @ sp[(-17)+14]
  5581  0121D6  0EFD               	movlw	-3
  5582  0121D8  006F FF8C  F026    	movff	plusw1,btemp
  5583  0121DE  0E03               	movlw	3
  5584  0121E0  2626               	addwf	btemp^0,f,c
  5585  0121E2  0EFD               	movlw	-3
  5586  0121E4  0060  F09B  FFE3   	movff	btemp,plusw1
  5587                           
  5588                           ;main.c: 408:    if (inp_index > 9)
  5589                           ;stkvar	_inp_index @ sp[(-17)+14]
  5590  0121EA  0EFD               	movlw	-3
  5591  0121EC  006F FF8C  F026    	movff	plusw1,btemp
  5592  0121F2  0E09               	movlw	9
  5593  0121F4  6426               	cpfsgt	btemp^0,c
  5594  0121F6  D03A               	goto	l13039
  5595                           
  5596                           ; BSR set to: 2
  5597                           ;main.c: 409:     inp_index = 0;
  5598                           ;stkvar	_inp_index @ sp[(-17)+14]
  5599  0121F8  0EFD               	movlw	-3
  5600  0121FA  6AE3               	clrf	plusw1,c
  5601  0121FC  D037               	goto	l13039
  5602  0121FE                     l13021:
  5603                           
  5604                           ; BSR set to: 2
  5605                           ;main.c: 412:     i = C_BATT;
  5606                           ;stkvar	_i @ sp[(-17)+13]
  5607  0121FE  0EFC               	movlw	-4
  5608  012200  6AE3               	clrf	plusw1,c
  5609                           
  5610                           ; BSR set to: 2
  5611                           ;main.c: 413:     j = C_PV;
  5612                           ;stkvar	_j @ sp[(-17)+12]
  5613  012202  0EFB               	movlw	-5
  5614  012204  6AE3               	clrf	plusw1,c
  5615  012206  2AE3               	incf	plusw1,f,c
  5616                           
  5617                           ; BSR set to: 2
  5618                           ;main.c: 414:     k = V_CC;
  5619                           ;stkvar	_k @ sp[(-17)+11]
  5620  012208  0EFA               	movlw	-6
  5621  01220A  6AE3               	clrf	plusw1,c
  5622  01220C  82E3               	bsf	plusw1,1,c
  5623                           
  5624                           ;main.c: 415:     break;
  5625  01220E  D043               	goto	l1366
  5626  012210                     l13027:
  5627                           
  5628                           ; BSR set to: 2
  5629                           ;main.c: 417:     i = V_BAT;
  5630                           ;stkvar	_i @ sp[(-17)+13]
  5631  012210  0EFC               	movlw	-4
  5632  012212  6AE3               	clrf	plusw1,c
  5633  012214  84E3               	bsf	plusw1,2,c
  5634                           
  5635                           ;main.c: 418:     j = V_PV;
  5636                           ;stkvar	_j @ sp[(-17)+12]
  5637  012216  0EFB               	movlw	-5
  5638  012218  6AE3               	clrf	plusw1,c
  5639  01221A  80E3               	bsf	plusw1,0,c
  5640  01221C  84E3               	bsf	plusw1,2,c	;indir
  5641                           
  5642                           ;main.c: 419:     k = V_CBUS;
  5643                           ;stkvar	_k @ sp[(-17)+11]
  5644  01221E  0EFA               	movlw	-6
  5645  012220  6AE3               	clrf	plusw1,c
  5646  012222  82E3               	bsf	plusw1,1,c
  5647  012224  84E3               	bsf	plusw1,2,c	;indir
  5648                           
  5649                           ;main.c: 420:     break;
  5650  012226  D037               	goto	l1366
  5651  012228                     l13029:
  5652                           
  5653                           ; BSR set to: 2
  5654                           ;main.c: 422:     i = V_BBAT;
  5655                           ;stkvar	_i @ sp[(-17)+13]
  5656  012228  0EFC               	movlw	-4
  5657  01222A  6AE3               	clrf	plusw1,c
  5658  01222C  82E3               	bsf	plusw1,1,c
  5659  01222E  86E3               	bsf	plusw1,3,c	;indir
  5660                           
  5661                           ; BSR set to: 2
  5662                           ;main.c: 423:     j = V_TEMP;
  5663  012230  0E0B               	movlw	11
  5664  012232  6E31               	movwf	(btemp+11)^0,c
  5665                           
  5666                           ;stkvar	_j @ sp[(-17)+12]
  5667  012234  0EFB               	movlw	-5
  5668  012236  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  5669                           
  5670                           ; BSR set to: 2
  5671                           ;main.c: 424:     k = V_INVERTER;
  5672                           ;stkvar	_k @ sp[(-17)+11]
  5673  01223C  0EFA               	movlw	-6
  5674  01223E  6AE3               	clrf	plusw1,c
  5675  012240  84E3               	bsf	plusw1,2,c
  5676  012242  86E3               	bsf	plusw1,3,c	;indir
  5677                           
  5678                           ;main.c: 425:     break;
  5679  012244  D028               	goto	l1366
  5680  012246                     l13035:
  5681                           
  5682                           ; BSR set to: 2
  5683                           ;main.c: 427:     i = V_LIGHT_SENSOR;
  5684  012246  0E0D               	movlw	13
  5685  012248  6E31               	movwf	(btemp+11)^0,c
  5686                           
  5687                           ;stkvar	_i @ sp[(-17)+13]
  5688  01224A  0EFC               	movlw	-4
  5689  01224C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  5690                           
  5691                           ;main.c: 428:     j = V_LIGHT_SENSOR;
  5692  012252  0E0D               	movlw	13
  5693  012254  6E31               	movwf	(btemp+11)^0,c
  5694                           
  5695                           ;stkvar	_j @ sp[(-17)+12]
  5696  012256  0EFB               	movlw	-5
  5697  012258  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  5698                           
  5699                           ;main.c: 429:     k = V_LIGHT_SENSOR;
  5700  01225E  0E0D               	movlw	13
  5701  012260  6E31               	movwf	(btemp+11)^0,c
  5702                           
  5703                           ;stkvar	_k @ sp[(-17)+11]
  5704  012262  0EFA               	movlw	-6
  5705  012264  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  5706                           
  5707                           ;main.c: 430:     break;
  5708  01226A  D015               	goto	l1366
  5709  01226C                     l13039:
  5710                           
  5711                           ; BSR set to: 2
  5712                           ;stkvar	_inp_index @ sp[(-17)+14]
  5713  01226C  0EFD               	movlw	-3
  5714  01226E  50E3               	movf	plusw1,w,c
  5715  012270  6E30               	movwf	(btemp+10)^0,c
  5716  012272  6A31               	clrf	(btemp+11)^0,c
  5717                           
  5718                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5719                           ; Switch size 1, requested type "simple"
  5720                           ; Number of cases is 1, Range of values is 0 to 0
  5721                           ; switch strategies available:
  5722                           ; Name         Instructions Cycles
  5723                           ; simple_byte            4     3 (average)
  5724                           ;	Chosen strategy is simple_byte
  5725  012274  5031               	movf	(btemp+11)^0,w,c
  5726  012276  0A00               	xorlw	0	; case 0
  5727  012278  A4D8               	btfss	status,2,c
  5728  01227A  D00D               	goto	l1366
  5729                           
  5730                           ; BSR set to: 2
  5731                           ; Switch size 1, requested type "simple"
  5732                           ; Number of cases is 4, Range of values is 0 to 9
  5733                           ; switch strategies available:
  5734                           ; Name         Instructions Cycles
  5735                           ; simple_byte           13     7 (average)
  5736                           ;	Chosen strategy is simple_byte
  5737  01227C  5030               	movf	(btemp+10)^0,w,c
  5738  01227E  0A00               	xorlw	0	; case 0
  5739  012280  B4D8               	btfsc	status,2,c
  5740  012282  D7BD               	goto	l13021
  5741  012284  0A03               	xorlw	3	; case 3
  5742  012286  B4D8               	btfsc	status,2,c
  5743  012288  D7C3               	goto	l13027
  5744  01228A  0A05               	xorlw	5	; case 6
  5745  01228C  B4D8               	btfsc	status,2,c
  5746  01228E  D7CC               	goto	l13029
  5747  012290  0A0F               	xorlw	15	; case 9
  5748  012292  B4D8               	btfsc	status,2,c
  5749  012294  D7D8               	goto	l13035
  5750  012296                     l1366:
  5751                           
  5752                           ; BSR set to: 2
  5753                           ;main.c: 439:   if (V.set_sequ) {
  5754  012296  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  5755  012298  EF6F  F08C         	goto	l12921
  5756                           
  5757                           ; BSR set to: 2
  5758                           ;main.c: 440:    if (TimerDone(TMR_INFO)) {
  5759  01229C  0E07               	movlw	7
  5760  01229E  6EE6               	movwf	postinc1,c
  5761  0122A0  EC6F  F0D9         	call	_TimerDone	;wreg free
  5762  0122A4  5026               	movf	btemp^0,w,c
  5763  0122A6  B4D8               	btfsc	status,2,c
  5764  0122A8  D00C               	goto	l13049
  5765                           
  5766                           ;main.c: 441:     V.set_sequ = 0;
  5767  0122AA  0102               	movlb	2	; () banked
  5768  0122AC  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  5769                           
  5770                           ; BSR set to: 2
  5771                           ;main.c: 442:     set_vterm(0);
  5772  0122AE  0E00               	movlw	0
  5773  0122B0  6EE6               	movwf	postinc1,c
  5774  0122B2  EC43  F0DB         	call	_set_vterm	;wreg free
  5775                           
  5776                           ;main.c: 443:     update_lcd(0);
  5777  0122B6  0E00               	movlw	0
  5778  0122B8  6EE6               	movwf	postinc1,c
  5779  0122BA  EC31  F0C9         	call	_update_lcd	;wreg free
  5780                           
  5781                           ;main.c: 444:    } else {
  5782  0122BE  EF6F  F08C         	goto	l12921
  5783  0122C2                     l13049:
  5784                           
  5785                           ;main.c: 445:     set_vterm(2);
  5786  0122C2  0E02               	movlw	2
  5787  0122C4  6EE6               	movwf	postinc1,c
  5788  0122C6  EC43  F0DB         	call	_set_vterm	;wreg free
  5789                           
  5790                           ;main.c: 446:     update_lcd(2);
  5791  0122CA  0E02               	movlw	2
  5792  0122CC  6EE6               	movwf	postinc1,c
  5793  0122CE  EC31  F0C9         	call	_update_lcd	;wreg free
  5794  0122D2  EF6F  F08C         	goto	l12921
  5795  0122D6                     __end_of_main:
  5796                           	opt callstack 0
  5797                           
  5798 ;; *************** function _static_soc *****************
  5799 ;; Defined at:
  5800 ;;		line 116 in file "mbmc.c"
  5801 ;; Parameters:    Size  Location     Type
  5802 ;;		None
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;		None
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  1  [STACK] void 
  5807 ;; Registers used:
  5808 ;;		wreg, status,2
  5809 ;; Tracked objects:
  5810 ;;		On entry : 0/0
  5811 ;;		On exit  : 3F/1
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5818 ;;Total ram usage:        0 bytes
  5819 ;; Hardware stack levels used:    1
  5820 ;; Hardware stack levels required when called:   15
  5821 ;; This function calls:
  5822 ;;		Nothing
  5823 ;; This function is called by:
  5824 ;;		_main
  5825 ;; This function uses a reentrant model
  5826 ;;
  5827                           
  5828                           	psect	text1
  5829  01B50E                     __ptext1:
  5830                           	opt callstack 0
  5831  01B50E                     _static_soc:
  5832                           	opt callstack 15
  5833                           
  5834                           ;mbmc.c: 118:  C.runtime = 120;
  5835                           
  5836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5837                           ;incstack = 0
  5838  01B50E  0E00               	movlw	0
  5839  01B510  0101               	movlb	1	; () banked
  5840  01B512  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
  5841  01B514  0E78               	movlw	120
  5842  01B516  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
  5843                           
  5844                           ;mbmc.c: 119:  C.soc = 100;
  5845  01B518  0E00               	movlw	0
  5846  01B51A  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
  5847  01B51C  0E64               	movlw	100
  5848  01B51E  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
  5849                           
  5850                           ; BSR set to: 1
  5851                           ;mbmc.c: 120:  C.dynamic_ah = C.bank_ah;
  5852  01B520  C188  F18C         	movff	_C+136,_C+140	;volatile
  5853  01B524  C189  F18D         	movff	_C+137,_C+141	;volatile
  5854  01B528  C18A  F18E         	movff	_C+138,_C+142	;volatile
  5855  01B52C  C18B  F18F         	movff	_C+139,_C+143	;volatile
  5856                           
  5857                           ; BSR set to: 1
  5858                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5859  01B530  0012               	return		;funcret
  5860  01B532                     __end_of_static_soc:
  5861                           	opt callstack 0
  5862                           
  5863 ;; *************** function _start_switch_handler *****************
  5864 ;; Defined at:
  5865 ;;		line 121 in file "dio.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;		None
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;		None
  5870 ;; Return value:  Size  Location     Type
  5871 ;;                  1  [STACK] void 
  5872 ;; Registers used:
  5873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  5874 ;; Tracked objects:
  5875 ;;		On entry : 1/0
  5876 ;;		On exit  : 3F/39
  5877 ;;		Unchanged: 0/0
  5878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5883 ;;Total ram usage:        0 bytes
  5884 ;; Hardware stack levels used:    1
  5885 ;; Hardware stack levels required when called:   16
  5886 ;; This function calls:
  5887 ;;		_INT1_SetInterruptHandler
  5888 ;; This function is called by:
  5889 ;;		_main
  5890 ;; This function uses a reentrant model
  5891 ;;
  5892                           
  5893                           	psect	text2
  5894  01B628                     __ptext2:
  5895                           	opt callstack 0
  5896  01B628                     _start_switch_handler:
  5897                           	opt callstack 14
  5898                           
  5899                           ;dio.c: 123:  (PIE5bits.INT1IE = 0);
  5900                           
  5901                           ; BSR set to: 1
  5902                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5903                           ;incstack = 0
  5904  01B628  0139               	movlb	57	; () banked
  5905  01B62A  9195               	bcf	149,0,b	;volatile
  5906                           
  5907                           ; BSR set to: 57
  5908                           ;dio.c: 124:  INT1_SetInterruptHandler(switch_handler);
  5909  01B62C  0EA4               	movlw	low _switch_handler
  5910  01B62E  6EE6               	movwf	postinc1,c
  5911  01B630  0E8C               	movlw	high _switch_handler
  5912  01B632  6EE6               	movwf	postinc1,c
  5913  01B634  0E01               	movlw	low (_switch_handler shr (0+16))
  5914  01B636  6EE6               	movwf	postinc1,c
  5915  01B638  ECFB  F0D9         	call	_INT1_SetInterruptHandler	;wreg free
  5916                           
  5917                           ;dio.c: 125:  S.button[SNULL].sw = SW_INVALID;
  5918  01B63C  0E02               	movlw	2
  5919  01B63E  0102               	movlb	2	; () banked
  5920  01B640  6FE8               	movwf	(_S+35)& (0+255),b	;volatile
  5921                           
  5922                           ; BSR set to: 2
  5923                           ;dio.c: 126:  (PIE5bits.INT1IE = 1);
  5924  01B642  0139               	movlb	57	; () banked
  5925  01B644  8195               	bsf	149,0,b	;volatile
  5926                           
  5927                           ; BSR set to: 57
  5928                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  5929  01B646  0012               	return		;funcret
  5930  01B648                     __end_of_start_switch_handler:
  5931                           	opt callstack 0
  5932                           
  5933 ;; *************** function _srand *****************
  5934 ;; Defined at:
  5935 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;  s               2  [STACK] unsigned int 
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;		None
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  1  [STACK] void 
  5942 ;; Registers used:
  5943 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 3F/2
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5953 ;;Total ram usage:        0 bytes
  5954 ;; Hardware stack levels used:    1
  5955 ;; Hardware stack levels required when called:   15
  5956 ;; This function calls:
  5957 ;;		Nothing
  5958 ;; This function is called by:
  5959 ;;		_main
  5960 ;; This function uses a reentrant model
  5961 ;;
  5962                           
  5963                           	psect	text3
  5964  01B030                     __ptext3:
  5965                           	opt callstack 0
  5966  01B030                     _srand:
  5967                           	opt callstack 15
  5968                           
  5969                           ;stkvar	_s @ sp[(0)+-2]
  5970                           
  5971                           ; BSR set to: 57
  5972                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5973                           ;incstack = 0
  5974  01B030  0EFE               	movlw	-2
  5975  01B032  50E3               	movf	plusw1,w,c
  5976  01B034  0FFF               	addlw	255
  5977  01B036  6E30               	movwf	(btemp+10)^0,c
  5978  01B038  0EFF               	movlw	-1
  5979  01B03A  006F FF8C  F031    	movff	plusw1,btemp+11
  5980  01B040  0EFF               	movlw	255
  5981  01B042  2231               	addwfc	(btemp+11)^0,f,c
  5982  01B044  0060  F0C0  F2F6   	movff	btemp+10,_seed
  5983  01B04A  0060  F0C4  F2F7   	movff	btemp+11,_seed+1
  5984  01B050  0102               	movlb	2	; () banked
  5985  01B052  6BF8               	clrf	(_seed+2)& (0+255),b
  5986  01B054  6BF9               	clrf	(_seed+3)& (0+255),b
  5987  01B056  6BFA               	clrf	(_seed+4)& (0+255),b
  5988  01B058  6BFB               	clrf	(_seed+5)& (0+255),b
  5989  01B05A  6BFC               	clrf	(_seed+6)& (0+255),b
  5990  01B05C  6BFD               	clrf	(_seed+7)& (0+255),b
  5991                           
  5992                           ; BSR set to: 2
  5993                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  5994  01B05E  52E5               	movf	postdec1,f,c
  5995  01B060  52E5               	movf	postdec1,f,c
  5996  01B062  0012               	return		;funcret
  5997  01B064                     __end_of_srand:
  5998                           	opt callstack 0
  5999                           
  6000 ;; *************** function _spinners *****************
  6001 ;; Defined at:
  6002 ;;		line 134 in file "mbmc.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;  shape           1  [STACK] unsigned char 
  6005 ;;  reset           1  [STACK] unsigned char 
  6006 ;; Auto vars:     Size  Location     Type
  6007 ;;  c               1  [STACK] unsigned char 
  6008 ;; Return value:  Size  Location     Type
  6009 ;;                  1  [STACK] unsigned char 
  6010 ;; Registers used:
  6011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6021 ;;Total ram usage:        0 bytes
  6022 ;; Hardware stack levels used:    1
  6023 ;; Hardware stack levels required when called:   16
  6024 ;; This function calls:
  6025 ;;		_strlen
  6026 ;; This function is called by:
  6027 ;;		_main
  6028 ;; This function uses a reentrant model
  6029 ;;
  6030                           
  6031                           	psect	text4
  6032  01986E                     __ptext4:
  6033                           	opt callstack 0
  6034  01986E                     _spinners:
  6035                           	opt callstack 0
  6036                           
  6037                           ; BSR set to: 2
  6038                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6039  01986E  52E6               	movf	postinc1,f,c
  6040                           
  6041                           ;mbmc.c: 134: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 135: {;mbmc.c: 136:  s
      +                          tatic uint8_t s[6];;mbmc.c: 137:  char c;;mbmc.c: 139:  if (shape > (6 - 1))
  6042                           ;stkvar	_shape @ sp[(-1)+-1]
  6043                           
  6044                           ;incstack = 0
  6045  019870  0EFE               	movlw	-2
  6046  019872  006F FF8C  F026    	movff	plusw1,btemp
  6047  019878  0E05               	movlw	5
  6048  01987A  6426               	cpfsgt	btemp^0,c
  6049  01987C  D002               	goto	l1876
  6050                           
  6051                           ;mbmc.c: 140:   shape = 0;
  6052                           ;stkvar	_shape @ sp[(-1)+-1]
  6053  01987E  0EFE               	movlw	-2
  6054  019880  6AE3               	clrf	plusw1,c
  6055  019882                     l1876:
  6056                           
  6057                           ;mbmc.c: 141:  if (reset)
  6058                           ;stkvar	_reset @ sp[(-1)+-2]
  6059  019882  0EFD               	movlw	-3
  6060  019884  50E3               	movf	plusw1,w,c
  6061  019886  B4D8               	btfsc	status,2,c
  6062  019888  D00A               	goto	l10657
  6063                           
  6064                           ;mbmc.c: 142:   s[shape] = 0;
  6065                           ;stkvar	_shape @ sp[(-1)+-1]
  6066  01988A  0EFE               	movlw	-2
  6067  01988C  006F FF8C  F031    	movff	plusw1,btemp+11
  6068  019892  5031               	movf	(btemp+11)^0,w,c
  6069  019894  0F6C               	addlw	low spinners@s
  6070  019896  6ED9               	movwf	fsr2l,c
  6071  019898  6ADA               	clrf	fsr2h,c
  6072  01989A  0E00               	movlw	0
  6073  01989C  6EDF               	movwf	indf2,c
  6074  01989E                     l10657:
  6075                           
  6076                           ;mbmc.c: 143:  c = spin[shape][s[shape]];
  6077                           ;stkvar	_shape @ sp[(-1)+-1]
  6078  01989E  0EFE               	movlw	-2
  6079  0198A0  50E3               	movf	plusw1,w,c
  6080  0198A2  0D14               	mullw	20
  6081  0198A4  0ED9               	movlw	low _spin
  6082  0198A6  6E30               	movwf	(btemp+10)^0,c
  6083  0198A8  0EFB               	movlw	high _spin
  6084  0198AA  6E31               	movwf	(btemp+11)^0,c
  6085  0198AC  50F3               	movf	243,w,c
  6086  0198AE  2630               	addwf	(btemp+10)^0,f,c
  6087  0198B0  50F4               	movf	244,w,c
  6088  0198B2  2231               	addwfc	(btemp+11)^0,f,c
  6089                           
  6090                           ;stkvar	_shape @ sp[(-1)+-1]
  6091  0198B4  0EFE               	movlw	-2
  6092  0198B6  006F FF8C  F02F    	movff	plusw1,btemp+9
  6093  0198BC  502F               	movf	(btemp+9)^0,w,c
  6094  0198BE  0F6C               	addlw	low spinners@s
  6095  0198C0  6ED9               	movwf	fsr2l,c
  6096  0198C2  6ADA               	clrf	fsr2h,c
  6097  0198C4  50DF               	movf	indf2,w,c
  6098  0198C6  2630               	addwf	(btemp+10)^0,f,c
  6099  0198C8  0E00               	movlw	0
  6100  0198CA  2231               	addwfc	(btemp+11)^0,f,c
  6101  0198CC  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
  6102  0198D2  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
  6103  0198D8                     	if	0	;tblptru may be non-zero
  6104  0198D8                     	endif
  6105  0198D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6106  0198D8  0E00               	movlw	low (__mediumconst shr (0+16))
  6107  0198DA  6EF8               	movwf	tblptru,c
  6108  0198DC                     	endif
  6109                           
  6110                           ;stkvar	_c @ sp[(-1)+0]
  6111  0198DC  0008               	tblrd		*
  6112  0198DE  0EFF               	movlw	-1
  6113  0198E0  006F FFD7 FFE3     	movff	tablat,plusw1
  6114                           
  6115                           ;mbmc.c: 144:  if (++s[shape] >= strlen(spin[shape]))
  6116                           ;stkvar	_shape @ sp[(-1)+-1]
  6117  0198E6  0EFE               	movlw	-2
  6118  0198E8  50E3               	movf	plusw1,w,c
  6119  0198EA  0D14               	mullw	20
  6120  0198EC  0ED9               	movlw	low _spin
  6121  0198EE  6E30               	movwf	(btemp+10)^0,c
  6122  0198F0  0EFB               	movlw	high _spin
  6123  0198F2  6E31               	movwf	(btemp+11)^0,c
  6124  0198F4  50F3               	movf	243,w,c
  6125  0198F6  2630               	addwf	(btemp+10)^0,f,c
  6126  0198F8  50F4               	movf	244,w,c
  6127  0198FA  2231               	addwfc	(btemp+11)^0,f,c
  6128  0198FC  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  6129  019902  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  6130  019908  EC59  F0D0         	call	_strlen	;wreg free
  6131                           
  6132                           ;stkvar	_shape @ sp[(-1)+-1]
  6133  01990C  0EFE               	movlw	-2
  6134  01990E  006F FF8C  F031    	movff	plusw1,btemp+11
  6135  019914  5031               	movf	(btemp+11)^0,w,c
  6136  019916  0F6C               	addlw	low spinners@s
  6137  019918  6ED9               	movwf	fsr2l,c
  6138  01991A  6ADA               	clrf	fsr2h,c
  6139  01991C  2ADF               	incf	indf2,f,c
  6140  01991E  50DF               	movf	indf2,w,c
  6141  019920  6E30               	movwf	(btemp+10)^0,c
  6142  019922  6A31               	clrf	(btemp+11)^0,c
  6143  019924  5026               	movf	btemp^0,w,c
  6144  019926  5C30               	subwf	(btemp+10)^0,w,c
  6145  019928  5027               	movf	(btemp+1)^0,w,c
  6146  01992A  5831               	subwfb	(btemp+11)^0,w,c
  6147  01992C  A0D8               	btfss	status,0,c
  6148  01992E  D00A               	goto	l10663
  6149                           
  6150                           ;mbmc.c: 145:   s[shape] = 0;
  6151                           ;stkvar	_shape @ sp[(-1)+-1]
  6152  019930  0EFE               	movlw	-2
  6153  019932  006F FF8C  F031    	movff	plusw1,btemp+11
  6154  019938  5031               	movf	(btemp+11)^0,w,c
  6155  01993A  0F6C               	addlw	low spinners@s
  6156  01993C  6ED9               	movwf	fsr2l,c
  6157  01993E  6ADA               	clrf	fsr2h,c
  6158  019940  0E00               	movlw	0
  6159  019942  6EDF               	movwf	indf2,c
  6160  019944                     l10663:
  6161                           
  6162                           ;mbmc.c: 146:  return c;
  6163                           ;stkvar	_c @ sp[(-1)+0]
  6164  019944  0EFF               	movlw	-1
  6165  019946  006F FF8C  F026    	movff	plusw1,btemp
  6166                           
  6167                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6168  01994C  52E5               	movf	postdec1,f,c
  6169  01994E  52E5               	movf	postdec1,f,c
  6170  019950  52E5               	movf	postdec1,f,c
  6171  019952  0012               	return		;funcret
  6172  019954                     __end_of_spinners:
  6173                           	opt callstack 0
  6174                           
  6175 ;; *************** function _init_port_dma *****************
  6176 ;; Defined at:
  6177 ;;		line 90 in file "eadog.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;		None
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;		None
  6182 ;; Return value:  Size  Location     Type
  6183 ;;                  1  [STACK] void 
  6184 ;; Registers used:
  6185 ;;		wreg, status,2
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/2
  6188 ;;		On exit  : 3F/3B
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6195 ;;Total ram usage:        0 bytes
  6196 ;; Hardware stack levels used:    1
  6197 ;; Hardware stack levels required when called:   15
  6198 ;; This function calls:
  6199 ;;		Nothing
  6200 ;; This function is called by:
  6201 ;;		_main
  6202 ;; This function uses a reentrant model
  6203 ;;
  6204                           
  6205                           	psect	text5
  6206  01B098                     __ptext5:
  6207                           	opt callstack 0
  6208  01B098                     _init_port_dma:
  6209                           	opt callstack 15
  6210                           
  6211                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  6212                           
  6213                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6214                           ;incstack = 0
  6215  01B098  0E3F               	movlw	-193
  6216  01B09A  013B               	movlb	59	; () banked
  6217  01B09C  17DD               	andwf	221,f,b	;volatile
  6218                           
  6219                           ; BSR set to: 59
  6220                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  6221  01B09E  9BDD               	bcf	221,5,b	;volatile
  6222                           
  6223                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  6224  01B0A0  51DD               	movf	221,w,b	;volatile
  6225  01B0A2  0BF9               	andlw	-7
  6226  01B0A4  0902               	iorlw	2
  6227  01B0A6  6FDD               	movwf	221,b	;volatile
  6228                           
  6229                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  6230  01B0A8  0EE7               	movlw	-25
  6231  01B0AA  17DD               	andwf	221,f,b	;volatile
  6232                           
  6233                           ; BSR set to: 59
  6234                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  6235  01B0AC  81DD               	bsf	221,0,b	;volatile
  6236                           
  6237                           ; BSR set to: 59
  6238                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  6239  01B0AE  9DDC               	bcf	220,6,b	;volatile
  6240                           
  6241                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  6242  01B0B0  0E3D               	movlw	61
  6243  01B0B2  6FD1               	movwf	209,b	;volatile
  6244  01B0B4  0EEA               	movlw	234
  6245  01B0B6  6FD0               	movwf	208,b	;volatile
  6246                           
  6247                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  6248  01B0B8  0EFF               	movlw	low _port_data
  6249  01B0BA  6FD9               	movwf	217,b	;volatile
  6250  01B0BC  0E05               	movlw	high _port_data
  6251  01B0BE  6FDA               	movwf	218,b	;volatile
  6252  01B0C0  0E00               	movlw	low (_port_data shr (0+16))
  6253  01B0C2  6FDB               	movwf	219,b	;volatile
  6254                           
  6255                           ; BSR set to: 59
  6256                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  6257  01B0C4  9BDC               	bcf	220,5,b	;volatile
  6258                           
  6259                           ; BSR set to: 59
  6260                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6261  01B0C6  0012               	return		;funcret
  6262  01B0C8                     __end_of_init_port_dma:
  6263                           	opt callstack 0
  6264                           
  6265 ;; *************** function _init_display *****************
  6266 ;; Defined at:
  6267 ;;		line 38 in file "eadog.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;		None
  6270 ;; Auto vars:     Size  Location     Type
  6271 ;;		None
  6272 ;; Return value:  Size  Location     Type
  6273 ;;                  1  [STACK] void 
  6274 ;; Registers used:
  6275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6276 ;; Tracked objects:
  6277 ;;		On entry : 3F/3B
  6278 ;;		On exit  : 3F/3D
  6279 ;;		Unchanged: 0/0
  6280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6285 ;;Total ram usage:        0 bytes
  6286 ;; Hardware stack levels used:    1
  6287 ;; Hardware stack levels required when called:   17
  6288 ;; This function calls:
  6289 ;;		_ringBufS_init
  6290 ;;		_send_lcd_cmd
  6291 ;;		_send_lcd_cmd_long
  6292 ;;		_wdtdelay
  6293 ;; This function is called by:
  6294 ;;		_main
  6295 ;; This function uses a reentrant model
  6296 ;;
  6297                           
  6298                           	psect	text6
  6299  019784                     __ptext6:
  6300                           	opt callstack 0
  6301  019784                     _init_display:
  6302                           	opt callstack 13
  6303                           
  6304                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6305                           
  6306                           ; BSR set to: 59
  6307                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6308                           ;incstack = 0
  6309  019784  0E43               	movlw	low _ring_buf1
  6310  019786  0100               	movlb	0	; () banked
  6311  019788  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6312  01978A  0E04               	movlw	high _ring_buf1
  6313  01978C  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6314                           
  6315                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6316  01978E  0E00               	movlw	low _ring_buf2
  6317  019790  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6318  019792  0E04               	movlw	high _ring_buf2
  6319  019794  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6323  019796  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6324  01979C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6325  0197A2  EC5B  F0D9         	call	_ringBufS_init	;wreg free
  6326                           
  6327                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6328  0197A6  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6329  0197AC  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6330  0197B2  EC5B  F0D9         	call	_ringBufS_init	;wreg free
  6331                           
  6332                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6333  0197B6  84BE               	bsf	190,2,c	;volatile
  6334  0197B8  84BC               	bsf	188,2,c	;volatile
  6335                           
  6336                           ;eadog.c: 59:  wdtdelay(350000);
  6337  0197BA  0E30               	movlw	48
  6338  0197BC  6EE6               	movwf	postinc1,c
  6339  0197BE  0E57               	movlw	87
  6340  0197C0  6EE6               	movwf	postinc1,c
  6341  0197C2  0E05               	movlw	5
  6342  0197C4  6EE6               	movwf	postinc1,c
  6343  0197C6  0E00               	movlw	0
  6344  0197C8  6EE6               	movwf	postinc1,c
  6345  0197CA  ECB7  F0D4         	call	_wdtdelay	;wreg free
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  6349  0197CE  0E39               	movlw	57
  6350  0197D0  6EE6               	movwf	postinc1,c
  6351  0197D2  EC47  F0D9         	call	_send_lcd_cmd	;wreg free
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  6355  0197D6  0E1D               	movlw	29
  6356  0197D8  6EE6               	movwf	postinc1,c
  6357  0197DA  EC47  F0D9         	call	_send_lcd_cmd	;wreg free
  6358                           
  6359                           ; BSR set to: 0
  6360                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  6361  0197DE  0E50               	movlw	80
  6362  0197E0  6EE6               	movwf	postinc1,c
  6363  0197E2  EC47  F0D9         	call	_send_lcd_cmd	;wreg free
  6364                           
  6365                           ; BSR set to: 0
  6366                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  6367  0197E6  0E6C               	movlw	108
  6368  0197E8  6EE6               	movwf	postinc1,c
  6369  0197EA  EC47  F0D9         	call	_send_lcd_cmd	;wreg free
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  6373  0197EE  0E76               	movlw	118
  6374  0197F0  6EE6               	movwf	postinc1,c
  6375  0197F2  EC47  F0D9         	call	_send_lcd_cmd	;wreg free
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  6379  0197F6  0E38               	movlw	56
  6380  0197F8  6EE6               	movwf	postinc1,c
  6381  0197FA  EC33  F0D9         	call	_send_lcd_cmd_long	;wreg free
  6382                           
  6383                           ; BSR set to: 0
  6384                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  6385  0197FE  0E0F               	movlw	15
  6386  019800  6EE6               	movwf	postinc1,c
  6387  019802  EC47  F0D9         	call	_send_lcd_cmd	;wreg free
  6388                           
  6389                           ; BSR set to: 0
  6390                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  6391  019806  0E01               	movlw	1
  6392  019808  6EE6               	movwf	postinc1,c
  6393  01980A  EC33  F0D9         	call	_send_lcd_cmd_long	;wreg free
  6394                           
  6395                           ; BSR set to: 0
  6396                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  6397  01980E  0E02               	movlw	2
  6398  019810  6EE6               	movwf	postinc1,c
  6399  019812  EC47  F0D9         	call	_send_lcd_cmd	;wreg free
  6400                           
  6401                           ; BSR set to: 0
  6402                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  6403  019816  0E06               	movlw	6
  6404  019818  6EE6               	movwf	postinc1,c
  6405  01981A  EC47  F0D9         	call	_send_lcd_cmd	;wreg free
  6406                           
  6407                           ; BSR set to: 0
  6408                           ;eadog.c: 70:  wdtdelay(30);
  6409  01981E  0E1E               	movlw	30
  6410  019820  6EE6               	movwf	postinc1,c
  6411  019822  0E00               	movlw	0
  6412  019824  6EE6               	movwf	postinc1,c
  6413  019826  0E00               	movlw	0
  6414  019828  6EE6               	movwf	postinc1,c
  6415  01982A  0E00               	movlw	0
  6416  01982C  6EE6               	movwf	postinc1,c
  6417  01982E  ECB7  F0D4         	call	_wdtdelay	;wreg free
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  6421  019832  0E02               	movlw	2
  6422  019834  013D               	movlb	61	; () banked
  6423  019836  6F16               	movwf	22,b	;volatile
  6424                           
  6425                           ; BSR set to: 61
  6426                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  6427  019838  0E40               	movlw	64
  6428  01983A  6F15               	movwf	21,b	;volatile
  6429                           
  6430                           ; BSR set to: 61
  6431                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  6432  01983C  0E83               	movlw	131
  6433  01983E  6F14               	movwf	20,b	;volatile
  6434                           
  6435                           ; BSR set to: 61
  6436                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  6437  019840  931A               	bcf	26,1,b	;volatile
  6438                           
  6439                           ; BSR set to: 61
  6440                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  6441  019842  0E3F               	movlw	-193
  6442  019844  013B               	movlb	59	; () banked
  6443  019846  17FD               	andwf	253,f,b	;volatile
  6444                           
  6445                           ; BSR set to: 59
  6446                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  6447  019848  9BFD               	bcf	253,5,b	;volatile
  6448                           
  6449                           ; BSR set to: 59
  6450                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  6451  01984A  51FD               	movf	253,w,b	;volatile
  6452  01984C  0BF9               	andlw	-7
  6453  01984E  0902               	iorlw	2
  6454  019850  6FFD               	movwf	253,b	;volatile
  6455                           
  6456                           ; BSR set to: 59
  6457                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  6458  019852  0EE7               	movlw	-25
  6459  019854  17FD               	andwf	253,f,b	;volatile
  6460                           
  6461                           ; BSR set to: 59
  6462                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  6463  019856  81FD               	bsf	253,0,b	;volatile
  6464                           
  6465                           ; BSR set to: 59
  6466                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  6467  019858  0E43               	movlw	low _ring_buf1
  6468  01985A  6FF9               	movwf	249,b	;volatile
  6469  01985C  0E04               	movlw	high _ring_buf1
  6470  01985E  6FFA               	movwf	250,b	;volatile
  6471  019860  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6472  019862  6FFB               	movwf	251,b	;volatile
  6473                           
  6474                           ; BSR set to: 59
  6475                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  6476  019864  9BFC               	bcf	252,5,b	;volatile
  6477                           
  6478                           ; BSR set to: 59
  6479                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  6480  019866  013D               	movlb	61	; () banked
  6481  019868  831A               	bsf	26,1,b	;volatile
  6482                           
  6483                           ; BSR set to: 61
  6484                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  6485  01986A  94BE               	bcf	190,2,c	;volatile
  6486                           
  6487                           ; BSR set to: 61
  6488                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6489  01986C  0012               	return		;funcret
  6490  01986E                     __end_of_init_display:
  6491                           	opt callstack 0
  6492                           
  6493 ;; *************** function _send_lcd_cmd_long *****************
  6494 ;; Defined at:
  6495 ;;		line 129 in file "eadog.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;  cmd             1  [STACK] const unsigned char 
  6498 ;; Auto vars:     Size  Location     Type
  6499 ;;		None
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  1  [STACK] void 
  6502 ;; Registers used:
  6503 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6504 ;; Tracked objects:
  6505 ;;		On entry : 3F/0
  6506 ;;		On exit  : 3F/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6513 ;;Total ram usage:        0 bytes
  6514 ;; Hardware stack levels used:    1
  6515 ;; Hardware stack levels required when called:   16
  6516 ;; This function calls:
  6517 ;;		_SPI1_Exchange8bit
  6518 ;;		_wdtdelay
  6519 ;; This function is called by:
  6520 ;;		_init_display
  6521 ;; This function uses a reentrant model
  6522 ;;
  6523                           
  6524                           	psect	text7
  6525  01B266                     __ptext7:
  6526                           	opt callstack 0
  6527  01B266                     _send_lcd_cmd_long:
  6528                           	opt callstack 13
  6529                           
  6530                           ; BSR set to: 61
  6531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6532                           ;incstack = 0
  6533                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  6534  01B266  92BC               	bcf	188,1,c	;volatile
  6535                           
  6536                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  6537  01B268  94BC               	bcf	188,2,c	;volatile
  6538                           
  6539                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  6540                           ;stkvar	_cmd @ sp[(0)+-1]
  6541  01B26A  0EFF               	movlw	-1
  6542  01B26C  50E3               	movf	plusw1,w,c
  6543  01B26E  6EE6               	movwf	postinc1,c
  6544  01B270  EC34  F0DB         	call	_SPI1_Exchange8bit	;wreg free
  6545                           
  6546                           ; BSR set to: 57
  6547                           ;eadog.c: 134:  wdtdelay(800);
  6548  01B274  0E20               	movlw	32
  6549  01B276  6EE6               	movwf	postinc1,c
  6550  01B278  0E03               	movlw	3
  6551  01B27A  6EE6               	movwf	postinc1,c
  6552  01B27C  0E00               	movlw	0
  6553  01B27E  6EE6               	movwf	postinc1,c
  6554  01B280  0E00               	movlw	0
  6555  01B282  6EE6               	movwf	postinc1,c
  6556  01B284  ECB7  F0D4         	call	_wdtdelay	;wreg free
  6557                           
  6558                           ; BSR set to: 0
  6559  01B288  82BC               	bsf	188,1,c	;volatile
  6560                           
  6561                           ; BSR set to: 0
  6562                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6563  01B28A  52E5               	movf	postdec1,f,c
  6564  01B28C  0012               	return		;funcret
  6565  01B28E                     __end_of_send_lcd_cmd_long:
  6566                           	opt callstack 0
  6567                           
  6568 ;; *************** function _send_lcd_cmd *****************
  6569 ;; Defined at:
  6570 ;;		line 117 in file "eadog.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;  cmd             1  [STACK] const unsigned char 
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;		None
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  1  [STACK] void 
  6577 ;; Registers used:
  6578 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6579 ;; Tracked objects:
  6580 ;;		On entry : 3F/0
  6581 ;;		On exit  : 3F/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6588 ;;Total ram usage:        0 bytes
  6589 ;; Hardware stack levels used:    1
  6590 ;; Hardware stack levels required when called:   16
  6591 ;; This function calls:
  6592 ;;		_SPI1_Exchange8bit
  6593 ;;		_wdtdelay
  6594 ;; This function is called by:
  6595 ;;		_init_display
  6596 ;; This function uses a reentrant model
  6597 ;;
  6598                           
  6599                           	psect	text8
  6600  01B28E                     __ptext8:
  6601                           	opt callstack 0
  6602  01B28E                     _send_lcd_cmd:
  6603                           	opt callstack 13
  6604                           
  6605                           ; BSR set to: 0
  6606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6607                           ;incstack = 0
  6608                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  6609  01B28E  92BC               	bcf	188,1,c	;volatile
  6610                           
  6611                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  6612  01B290  94BC               	bcf	188,2,c	;volatile
  6613                           
  6614                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  6615                           ;stkvar	_cmd @ sp[(0)+-1]
  6616  01B292  0EFF               	movlw	-1
  6617  01B294  50E3               	movf	plusw1,w,c
  6618  01B296  6EE6               	movwf	postinc1,c
  6619  01B298  EC34  F0DB         	call	_SPI1_Exchange8bit	;wreg free
  6620                           
  6621                           ; BSR set to: 57
  6622                           ;eadog.c: 122:  wdtdelay(30);
  6623  01B29C  0E1E               	movlw	30
  6624  01B29E  6EE6               	movwf	postinc1,c
  6625  01B2A0  0E00               	movlw	0
  6626  01B2A2  6EE6               	movwf	postinc1,c
  6627  01B2A4  0E00               	movlw	0
  6628  01B2A6  6EE6               	movwf	postinc1,c
  6629  01B2A8  0E00               	movlw	0
  6630  01B2AA  6EE6               	movwf	postinc1,c
  6631  01B2AC  ECB7  F0D4         	call	_wdtdelay	;wreg free
  6632                           
  6633                           ; BSR set to: 0
  6634  01B2B0  82BC               	bsf	188,1,c	;volatile
  6635                           
  6636                           ; BSR set to: 0
  6637                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6638  01B2B2  52E5               	movf	postdec1,f,c
  6639  01B2B4  0012               	return		;funcret
  6640  01B2B6                     __end_of_send_lcd_cmd:
  6641                           	opt callstack 0
  6642                           
  6643 ;; *************** function _SPI1_Exchange8bit *****************
  6644 ;; Defined at:
  6645 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;  data            1  [STACK] unsigned char 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;		None
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  1  [STACK] unsigned char 
  6652 ;; Registers used:
  6653 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 3F/39
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6663 ;;Total ram usage:        0 bytes
  6664 ;; Hardware stack levels used:    1
  6665 ;; Hardware stack levels required when called:   15
  6666 ;; This function calls:
  6667 ;;		Nothing
  6668 ;; This function is called by:
  6669 ;;		_send_lcd_cmd
  6670 ;;		_send_lcd_cmd_long
  6671 ;; This function uses a reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text9
  6675  01B668                     __ptext9:
  6676                           	opt callstack 0
  6677  01B668                     _SPI1_Exchange8bit:
  6678                           	opt callstack 13
  6679                           
  6680                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6681                           
  6682                           ; BSR set to: 0
  6683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6684                           ;incstack = 0
  6685  01B668  0E01               	movlw	1
  6686  01B66A  013D               	movlb	61	; () banked
  6687  01B66C  6F12               	movwf	18,b	;volatile
  6688                           
  6689                           ; BSR set to: 61
  6690                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6691                           ;stkvar	_data @ sp[(0)+-1]
  6692  01B66E  0EFF               	movlw	-1
  6693  01B670  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6694  01B676                     l807:
  6695                           
  6696                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6697  01B676  0139               	movlb	57	; () banked
  6698  01B678  A9A2               	btfss	162,4,b	;volatile
  6699  01B67A  D7FD               	goto	l807
  6700                           
  6701                           ; BSR set to: 57
  6702                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6703  01B67C  006F F440  F026    	movff	15632,btemp	;volatile
  6704                           
  6705                           ; BSR set to: 57
  6706                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6707  01B682  52E5               	movf	postdec1,f,c
  6708  01B684  0012               	return		;funcret
  6709  01B686                     __end_of_SPI1_Exchange8bit:
  6710                           	opt callstack 0
  6711                           
  6712 ;; *************** function _ringBufS_init *****************
  6713 ;; Defined at:
  6714 ;;		line 22 in file "ringbufs.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;  _this           2  [STACK] PTR volatile struct ring
  6717 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6718 ;; Auto vars:     Size  Location     Type
  6719 ;;		None
  6720 ;; Return value:  Size  Location     Type
  6721 ;;                  1  [STACK] void 
  6722 ;; Registers used:
  6723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6724 ;; Tracked objects:
  6725 ;;		On entry : 0/0
  6726 ;;		On exit  : 0/0
  6727 ;;		Unchanged: 0/0
  6728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6733 ;;Total ram usage:        0 bytes
  6734 ;; Hardware stack levels used:    1
  6735 ;; Hardware stack levels required when called:   16
  6736 ;; This function calls:
  6737 ;;		_memset
  6738 ;; This function is called by:
  6739 ;;		_init_display
  6740 ;; This function uses a reentrant model
  6741 ;;
  6742                           
  6743                           	psect	text10
  6744  01B2B6                     __ptext10:
  6745                           	opt callstack 0
  6746  01B2B6                     _ringBufS_init:
  6747                           	opt callstack 13
  6748                           
  6749                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6750                           
  6751                           ; BSR set to: 57
  6752                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6753                           ;incstack = 0
  6754  01B2B6  0E43               	movlw	67
  6755  01B2B8  6EE6               	movwf	postinc1,c
  6756  01B2BA  0E00               	movlw	0
  6757  01B2BC  6EE6               	movwf	postinc1,c
  6758  01B2BE  0E00               	movlw	0
  6759  01B2C0  6EE6               	movwf	postinc1,c
  6760  01B2C2  0E00               	movlw	0
  6761  01B2C4  6EE6               	movwf	postinc1,c
  6762                           
  6763                           ;stkvar	__this @ sp[(-4)+-2]
  6764  01B2C6  0EFA               	movlw	-6
  6765  01B2C8  006F FF8F FFE6     	movff	plusw1,postinc1
  6766  01B2CE  006F FF8F FFE6     	movff	plusw1,postinc1
  6767  01B2D4  EC2C  F0B3         	call	_memset	;wreg free
  6768                           
  6769                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6770  01B2D8  52E5               	movf	postdec1,f,c
  6771  01B2DA  52E5               	movf	postdec1,f,c
  6772  01B2DC  0012               	return		;funcret
  6773  01B2DE                     __end_of_ringBufS_init:
  6774                           	opt callstack 0
  6775                           
  6776 ;; *************** function _init_bsoc *****************
  6777 ;; Defined at:
  6778 ;;		line 95 in file "bsoc.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;		None
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;		None
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  1  [STACK] void 
  6785 ;; Registers used:
  6786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6787 ;; Tracked objects:
  6788 ;;		On entry : 3F/1
  6789 ;;		On exit  : 0/0
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6796 ;;Total ram usage:        0 bytes
  6797 ;; Hardware stack levels used:    1
  6798 ;; Hardware stack levels required when called:   18
  6799 ;; This function calls:
  6800 ;;		_TMR3_SetInterruptHandler
  6801 ;;		_Volts_to_SOC
  6802 ;;		___fldiv
  6803 ;;		___flmul
  6804 ;;		___fltol
  6805 ;;		___xxtofl
  6806 ;;		_conv_raw_result
  6807 ;; This function is called by:
  6808 ;;		_main
  6809 ;; This function uses a reentrant model
  6810 ;;
  6811                           
  6812                           	psect	text11
  6813  0185E4                     __ptext11:
  6814                           	opt callstack 0
  6815  0185E4                     _init_bsoc:
  6816                           	opt callstack 12
  6817                           
  6818                           ;bsoc.c: 100:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  6819                           
  6820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6821                           ;incstack = 0
  6822  0185E4  0E00               	movlw	0
  6823  0185E6  6EE6               	movwf	postinc1,c
  6824  0185E8  0E00               	movlw	0
  6825  0185EA  6EE6               	movwf	postinc1,c
  6826  0185EC  0E7A               	movlw	122
  6827  0185EE  6EE6               	movwf	postinc1,c
  6828  0185F0  0E44               	movlw	68
  6829  0185F2  6EE6               	movwf	postinc1,c
  6830  0185F4  0E00               	movlw	0
  6831  0185F6  6EE6               	movwf	postinc1,c
  6832  0185F8  0E04               	movlw	4
  6833  0185FA  6EE6               	movwf	postinc1,c
  6834  0185FC  EC92  F0A7         	call	_conv_raw_result	;wreg free
  6835  018600  0060  F09B  FFE6   	movff	btemp,postinc1
  6836  018606  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6837  01860C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6838  018612  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6839  018618  EC39  F0C2         	call	___fltol	;wreg free
  6840  01861C  0060  F09B  FFE6   	movff	btemp,postinc1
  6841  018622  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6842  018628  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6843  01862E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6844  018634  0E00               	movlw	0
  6845  018636  6EE6               	movwf	postinc1,c
  6846  018638  EC14  F0BD         	call	___xxtofl	;wreg free
  6847  01863C  0060  F09B  FFE6   	movff	btemp,postinc1
  6848  018642  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6849  018648  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6850  01864E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6851  018654  EC41  F099         	call	___flmul	;wreg free
  6852  018658  0060  F09B  FFE6   	movff	btemp,postinc1
  6853  01865E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6854  018664  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6855  01866A  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6856  018670  EC39  F0C2         	call	___fltol	;wreg free
  6857  018674  0060  F09B  FFE6   	movff	btemp,postinc1
  6858  01867A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6859  018680  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6860  018686  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6861  01868C  EC40  F0D1         	call	_Volts_to_SOC	;wreg free
  6862  018690  0060  F098  F1AE   	movff	btemp,_C+174	;volatile
  6863  018696  0060  F09C  F1AF   	movff	btemp+1,_C+175	;volatile
  6864                           
  6865                           ;bsoc.c: 101:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  6866  01869C  0060  F623  FFE6   	movff	_C+136,postinc1
  6867  0186A2  0060  F627  FFE6   	movff	_C+137,postinc1
  6868  0186A8  0060  F62B  FFE6   	movff	_C+138,postinc1
  6869  0186AE  0060  F62F  FFE6   	movff	_C+139,postinc1
  6870  0186B4  0E00               	movlw	0
  6871  0186B6  6EE6               	movwf	postinc1,c
  6872  0186B8  0E00               	movlw	0
  6873  0186BA  6EE6               	movwf	postinc1,c
  6874  0186BC  0EC8               	movlw	200
  6875  0186BE  6EE6               	movwf	postinc1,c
  6876  0186C0  0E42               	movlw	66
  6877  0186C2  6EE6               	movwf	postinc1,c
  6878  0186C4  0101               	movlb	1	; () banked
  6879  0186C6  51AE               	movf	(_C+174)& (0+255),w,b	;volatile
  6880  0186C8  6E2E               	movwf	(btemp+8)^0,c
  6881  0186CA  51AF               	movf	(_C+175)& (0+255),w,b	;volatile
  6882  0186CC  6E2F               	movwf	(btemp+9)^0,c
  6883  0186CE  6A30               	clrf	(btemp+10)^0,c
  6884  0186D0  6A31               	clrf	(btemp+11)^0,c
  6885  0186D2  0060  F0BB  FFE6   	movff	btemp+8,postinc1
  6886  0186D8  0060  F0BF  FFE6   	movff	btemp+9,postinc1
  6887  0186DE  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  6888  0186E4  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  6889  0186EA  0E00               	movlw	0
  6890  0186EC  6EE6               	movwf	postinc1,c
  6891  0186EE  EC14  F0BD         	call	___xxtofl	;wreg free
  6892  0186F2  0060  F09B  FFE6   	movff	btemp,postinc1
  6893  0186F8  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6894  0186FE  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6895  018704  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6896  01870A  ECD5  F0A4         	call	___fldiv	;wreg free
  6897  01870E  0060  F09B  FFE6   	movff	btemp,postinc1
  6898  018714  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6899  01871A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6900  018720  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6901  018726  EC41  F099         	call	___flmul	;wreg free
  6902  01872A  0060  F098  F18C   	movff	btemp,_C+140	;volatile
  6903  018730  0060  F09C  F18D   	movff	btemp+1,_C+141	;volatile
  6904  018736  0060  F0A0  F18E   	movff	btemp+2,_C+142	;volatile
  6905  01873C  0060  F0A4  F18F   	movff	btemp+3,_C+143	;volatile
  6906                           
  6907                           ;bsoc.c: 102:  TMR3_SetInterruptHandler(calc_bsoc);
  6908  018742  0E68               	movlw	low _calc_bsoc
  6909  018744  6EE6               	movwf	postinc1,c
  6910  018746  0E42               	movlw	high _calc_bsoc
  6911  018748  6EE6               	movwf	postinc1,c
  6912  01874A  0E01               	movlw	low (_calc_bsoc shr (0+16))
  6913  01874C  6EE6               	movwf	postinc1,c
  6914  01874E  ECE7  F0D9         	call	_TMR3_SetInterruptHandler	;wreg free
  6915                           
  6916                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6917  018752  0012               	return		;funcret
  6918  018754                     __end_of_init_bsoc:
  6919                           	opt callstack 0
  6920                           
  6921 ;; *************** function _Volts_to_SOC *****************
  6922 ;; Defined at:
  6923 ;;		line 159 in file "bsoc.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;  cvoltage        4  [STACK] unsigned long 
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;		None
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  2  [STACK] unsigned short 
  6930 ;; Registers used:
  6931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/1
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6941 ;;Total ram usage:        0 bytes
  6942 ;; Hardware stack levels used:    1
  6943 ;; Hardware stack levels required when called:   15
  6944 ;; This function calls:
  6945 ;;		Nothing
  6946 ;; This function is called by:
  6947 ;;		_init_bsoc
  6948 ;; This function uses a reentrant model
  6949 ;;
  6950                           
  6951                           	psect	text12
  6952  01A280                     __ptext12:
  6953                           	opt callstack 0
  6954  01A280                     _Volts_to_SOC:
  6955                           	opt callstack 14
  6956                           
  6957                           ;bsoc.c: 159: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 160: {;bsoc.c: 161:  stat
      +                          ic uint8_t slot;;bsoc.c: 163:  C.soc = 0;
  6958                           
  6959                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6960                           ;incstack = 0
  6961  01A280  0101               	movlb	1	; () banked
  6962  01A282  6BAE               	clrf	(_C+174)& (0+255),b	;volatile
  6963  01A284  6BAF               	clrf	(_C+175)& (0+255),b	;volatile
  6964                           
  6965                           ;bsoc.c: 164:  for (slot = 0; slot < 26; slot++) {
  6966  01A286  6A19               	clrf	Volts_to_SOC@slot^0,c
  6967  01A288                     l10451:
  6968                           
  6969                           ;bsoc.c: 165:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  6970                           ;stkvar	_cvoltage @ sp[(0)+-4]
  6971  01A288  5019               	movf	Volts_to_SOC@slot^0,w,c
  6972  01A28A  0D08               	mullw	8
  6973  01A28C  0E79               	movlw	low _BVSOC_TABLE
  6974  01A28E  24F3               	addwf	243,w,c
  6975  01A290  6EF6               	movwf	tblptrl,c
  6976  01A292  0EFA               	movlw	high _BVSOC_TABLE
  6977  01A294  20F4               	addwfc	244,w,c
  6978  01A296  6EF7               	movwf	tblptrh,c
  6979  01A298                     	if	1	;There are 3 active tblptr bytes
  6980  01A298  6AF8               	clrf	tblptru,c
  6981  01A29A  0E00               	movlw	low (__mediumconst shr (0+16))
  6982  01A29C  22F8               	addwfc	tblptru,f,c
  6983  01A29E                     	endif
  6984  01A29E  0EFC               	movlw	-4
  6985  01A2A0  50E3               	movf	plusw1,w,c
  6986  01A2A2  0009               	tblrd		*+
  6987  01A2A4  5CF5               	subwf	tablat,w,c
  6988  01A2A6  0EFD               	movlw	-3
  6989  01A2A8  50E3               	movf	plusw1,w,c
  6990  01A2AA  0009               	tblrd		*+
  6991  01A2AC  58F5               	subwfb	tablat,w,c
  6992  01A2AE  0EFE               	movlw	-2
  6993  01A2B0  50E3               	movf	plusw1,w,c
  6994  01A2B2  0009               	tblrd		*+
  6995  01A2B4  58F5               	subwfb	tablat,w,c
  6996  01A2B6  0EFF               	movlw	-1
  6997  01A2B8  50E3               	movf	plusw1,w,c
  6998  01A2BA  0009               	tblrd		*+
  6999  01A2BC  58F5               	subwfb	tablat,w,c
  7000  01A2BE  B0D8               	btfsc	status,0,c
  7001  01A2C0  D017               	goto	l10455
  7002                           
  7003                           ;bsoc.c: 166:    C.soc = BVSOC_TABLE[slot][1];
  7004  01A2C2  5019               	movf	Volts_to_SOC@slot^0,w,c
  7005  01A2C4  0D08               	mullw	8
  7006  01A2C6  0E04               	movlw	4
  7007  01A2C8  26F3               	addwf	243,f,c
  7008  01A2CA  0E00               	movlw	0
  7009  01A2CC  22F4               	addwfc	244,f,c
  7010  01A2CE  0E79               	movlw	low _BVSOC_TABLE
  7011  01A2D0  24F3               	addwf	243,w,c
  7012  01A2D2  6EF6               	movwf	tblptrl,c
  7013  01A2D4  0EFA               	movlw	high _BVSOC_TABLE
  7014  01A2D6  20F4               	addwfc	244,w,c
  7015  01A2D8  6EF7               	movwf	tblptrh,c
  7016  01A2DA                     	if	1	;There are 3 active tblptr bytes
  7017  01A2DA  6AF8               	clrf	tblptru,c
  7018  01A2DC  0E00               	movlw	low (__mediumconst shr (0+16))
  7019  01A2DE  22F8               	addwfc	tblptru,f,c
  7020  01A2E0                     	endif
  7021  01A2E0  0009               	tblrd		*+
  7022  01A2E2  006F FFD4  F1AE    	movff	tablat,_C+174	;volatile
  7023  01A2E8  000A               	tblrd		*-
  7024  01A2EA  006F FFD4  F1AF    	movff	tablat,_C+175	;volatile
  7025  01A2F0                     l10455:
  7026                           
  7027                           ;bsoc.c: 168:  }
  7028  01A2F0  2A19               	incf	Volts_to_SOC@slot^0,f,c
  7029  01A2F2  0E19               	movlw	25
  7030  01A2F4  6419               	cpfsgt	Volts_to_SOC@slot^0,c
  7031  01A2F6  D7C8               	goto	l10451
  7032                           
  7033                           ;bsoc.c: 170:  return C.soc;
  7034  01A2F8  EE20  F1AE         	lfsr	2,_C+174	;volatile
  7035  01A2FC  006F FF78  F026    	movff	postinc2,btemp
  7036  01A302  006F FF74  F027    	movff	postdec2,btemp+1
  7037                           
  7038                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  7039  01A308  52E5               	movf	postdec1,f,c
  7040  01A30A  52E5               	movf	postdec1,f,c
  7041  01A30C  52E5               	movf	postdec1,f,c
  7042  01A30E  52E5               	movf	postdec1,f,c
  7043  01A310  0012               	return		;funcret
  7044  01A312                     __end_of_Volts_to_SOC:
  7045                           	opt callstack 0
  7046                           
  7047 ;; *************** function _hid_display *****************
  7048 ;; Defined at:
  7049 ;;		line 17 in file "hid.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;  h               1  [STACK] PTR struct H_data
  7052 ;;		 -> H(7), 
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;		None
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1  [STACK] PTR struct H_data
  7057 ;; Registers used:
  7058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  7059 ;; Tracked objects:
  7060 ;;		On entry : 3F/1
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7068 ;;Total ram usage:        0 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:   17
  7071 ;; This function calls:
  7072 ;;		_hid_input
  7073 ;; This function is called by:
  7074 ;;		_main
  7075 ;; This function uses a reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text13
  7079  019582                     __ptext13:
  7080                           	opt callstack 0
  7081  019582                     _hid_display:
  7082                           	opt callstack 13
  7083                           
  7084                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7085                           ;stkvar	_h @ sp[(0)+-1]
  7086                           
  7087                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7088                           ;incstack = 0
  7089  019582  0EFF               	movlw	-1
  7090  019584  50E3               	movf	plusw1,w,c
  7091  019586  6EE6               	movwf	postinc1,c
  7092  019588  ECD2  F0D1         	call	_hid_input	;wreg free
  7093                           
  7094                           ;hid.c: 21:  switch (h->h_state) {
  7095  01958C  D066               	goto	l10837
  7096  01958E                     l10815:
  7097                           
  7098                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7099                           ;stkvar	_h @ sp[(0)+-1]
  7100  01958E  0EFF               	movlw	-1
  7101  019590  50E3               	movf	plusw1,w,c
  7102  019592  6ED9               	movwf	fsr2l,c
  7103  019594  6ADA               	clrf	fsr2h,c
  7104  019596  0E01               	movlw	1
  7105  019598  26D9               	addwf	fsr2l,f,c
  7106  01959A  0E01               	movlw	1
  7107  01959C  6EDF               	movwf	indf2,c
  7108                           
  7109                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7110                           ;stkvar	_h @ sp[(0)+-1]
  7111  01959E  0EFF               	movlw	-1
  7112  0195A0  50E3               	movf	plusw1,w,c
  7113  0195A2  6ED9               	movwf	fsr2l,c
  7114  0195A4  6ADA               	clrf	fsr2h,c
  7115  0195A6  0E00               	movlw	0
  7116  0195A8  6EDF               	movwf	indf2,c
  7117                           
  7118                           ;hid.c: 25:   h->wait_enter = 1;
  7119                           ;stkvar	_h @ sp[(0)+-1]
  7120  0195AA  0EFF               	movlw	-1
  7121  0195AC  50E3               	movf	plusw1,w,c
  7122  0195AE  6ED9               	movwf	fsr2l,c
  7123  0195B0  6ADA               	clrf	fsr2h,c
  7124  0195B2  0E04               	movlw	4
  7125  0195B4  26D9               	addwf	fsr2l,f,c
  7126  0195B6  0E01               	movlw	1
  7127  0195B8  6EDF               	movwf	indf2,c
  7128                           
  7129                           ;hid.c: 26:   h->wait_select = 1;
  7130                           ;stkvar	_h @ sp[(0)+-1]
  7131  0195BA  0EFF               	movlw	-1
  7132  0195BC  50E3               	movf	plusw1,w,c
  7133  0195BE  6ED9               	movwf	fsr2l,c
  7134  0195C0  6ADA               	clrf	fsr2h,c
  7135  0195C2  0E02               	movlw	2
  7136  0195C4  26D9               	addwf	fsr2l,f,c
  7137  0195C6  0E01               	movlw	1
  7138  0195C8  6EDF               	movwf	indf2,c
  7139                           
  7140                           ;hid.c: 27:   h->select_p = SW_OFF;
  7141                           ;stkvar	_h @ sp[(0)+-1]
  7142  0195CA  0EFF               	movlw	-1
  7143  0195CC  50E3               	movf	plusw1,w,c
  7144  0195CE  6ED9               	movwf	fsr2l,c
  7145  0195D0  6ADA               	clrf	fsr2h,c
  7146  0195D2  0E03               	movlw	3
  7147  0195D4  26D9               	addwf	fsr2l,f,c
  7148  0195D6  0E00               	movlw	0
  7149  0195D8  6EDF               	movwf	indf2,c
  7150                           
  7151                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7152                           ;stkvar	_h @ sp[(0)+-1]
  7153  0195DA  0EFF               	movlw	-1
  7154  0195DC  50E3               	movf	plusw1,w,c
  7155  0195DE  6ED9               	movwf	fsr2l,c
  7156  0195E0  6ADA               	clrf	fsr2h,c
  7157  0195E2  0E05               	movlw	5
  7158  0195E4  26D9               	addwf	fsr2l,f,c
  7159  0195E6  0E00               	movlw	0
  7160  0195E8  D036               	goto	L3
  7161  0195EA                     l10827:
  7162                           
  7163                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7164                           ;stkvar	_h @ sp[(0)+-1]
  7165  0195EA  0EFF               	movlw	-1
  7166  0195EC  50E3               	movf	plusw1,w,c
  7167  0195EE  6ED9               	movwf	fsr2l,c
  7168  0195F0  6ADA               	clrf	fsr2h,c
  7169  0195F2  0E02               	movlw	2
  7170  0195F4  26D9               	addwf	fsr2l,f,c
  7171  0195F6  50DF               	movf	indf2,w,c
  7172  0195F8  A4D8               	btfss	status,2,c
  7173  0195FA  D042               	goto	l1964
  7174                           
  7175                           ;stkvar	_h @ sp[(0)+-1]
  7176  0195FC  0EFF               	movlw	-1
  7177  0195FE  50E3               	movf	plusw1,w,c
  7178  019600  6ED9               	movwf	fsr2l,c
  7179  019602  6ADA               	clrf	fsr2h,c
  7180  019604  0E03               	movlw	3
  7181  019606  26D9               	addwf	fsr2l,f,c
  7182  019608  50DF               	movf	indf2,w,c
  7183  01960A  A4D8               	btfss	status,2,c
  7184  01960C  D039               	goto	l1964
  7185                           
  7186                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7187                           ;stkvar	_h @ sp[(0)+-1]
  7188  01960E  0EFF               	movlw	-1
  7189  019610  50E3               	movf	plusw1,w,c
  7190  019612  6ED9               	movwf	fsr2l,c
  7191  019614  6ADA               	clrf	fsr2h,c
  7192  019616  0E06               	movlw	6
  7193  019618  26D9               	addwf	fsr2l,f,c
  7194                           
  7195                           ;stkvar	_h @ sp[(0)+-1]
  7196  01961A  0EFF               	movlw	-1
  7197  01961C  50E3               	movf	plusw1,w,c
  7198  01961E  6EE9               	movwf	fsr0l,c
  7199  019620  6AEA               	clrf	fsr0h,c
  7200  019622  0E06               	movlw	6
  7201  019624  26E9               	addwf	fsr0l,f,c
  7202  019626  2AEF               	incf	indf0,f,c
  7203  019628  50EF               	movf	indf0,w,c
  7204  01962A  0B03               	andlw	3
  7205  01962C  6EDF               	movwf	indf2,c
  7206                           
  7207                           ;hid.c: 34:    h->hid_display = h->sequence;
  7208                           ;stkvar	_h @ sp[(0)+-1]
  7209  01962E  0EFF               	movlw	-1
  7210  019630  50E3               	movf	plusw1,w,c
  7211  019632  6ED9               	movwf	fsr2l,c
  7212  019634  6ADA               	clrf	fsr2h,c
  7213  019636  0E06               	movlw	6
  7214  019638  26D9               	addwf	fsr2l,f,c
  7215                           
  7216                           ;stkvar	_h @ sp[(0)+-1]
  7217  01963A  0EFF               	movlw	-1
  7218  01963C  50E3               	movf	plusw1,w,c
  7219  01963E  6EE9               	movwf	fsr0l,c
  7220  019640  6AEA               	clrf	fsr0h,c
  7221  019642  006F FF7F FFEF     	movff	indf2,indf0
  7222                           
  7223                           ;hid.c: 35:    h->wait_select = 1;
  7224                           ;stkvar	_h @ sp[(0)+-1]
  7225  019648  0EFF               	movlw	-1
  7226  01964A  50E3               	movf	plusw1,w,c
  7227  01964C  6ED9               	movwf	fsr2l,c
  7228  01964E  6ADA               	clrf	fsr2h,c
  7229  019650  0E02               	movlw	2
  7230  019652  26D9               	addwf	fsr2l,f,c
  7231  019654  0E01               	movlw	1
  7232  019656                     L3:
  7233  019656  6EDF               	movwf	indf2,c
  7234  019658  D013               	goto	l1964
  7235  01965A                     l10837:
  7236                           
  7237                           ;stkvar	_h @ sp[(0)+-1]
  7238  01965A  0EFF               	movlw	-1
  7239  01965C  50E3               	movf	plusw1,w,c
  7240  01965E  6ED9               	movwf	fsr2l,c
  7241  019660  6ADA               	clrf	fsr2h,c
  7242  019662  0E01               	movlw	1
  7243  019664  26D9               	addwf	fsr2l,f,c
  7244  019666  50DF               	movf	indf2,w,c
  7245  019668  6E30               	movwf	(btemp+10)^0,c
  7246  01966A  6A31               	clrf	(btemp+11)^0,c
  7247                           
  7248                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7249                           ; Switch size 1, requested type "simple"
  7250                           ; Number of cases is 1, Range of values is 0 to 0
  7251                           ; switch strategies available:
  7252                           ; Name         Instructions Cycles
  7253                           ; simple_byte            4     3 (average)
  7254                           ;	Chosen strategy is simple_byte
  7255  01966C  5031               	movf	(btemp+11)^0,w,c
  7256  01966E  0A00               	xorlw	0	; case 0
  7257  019670  A4D8               	btfss	status,2,c
  7258  019672  D7BB               	goto	l10827
  7259                           
  7260                           ; Switch size 1, requested type "simple"
  7261                           ; Number of cases is 2, Range of values is 0 to 1
  7262                           ; switch strategies available:
  7263                           ; Name         Instructions Cycles
  7264                           ; simple_byte            7     4 (average)
  7265                           ;	Chosen strategy is simple_byte
  7266  019674  5030               	movf	(btemp+10)^0,w,c
  7267  019676  0A00               	xorlw	0	; case 0
  7268  019678  B4D8               	btfsc	status,2,c
  7269  01967A  D789               	goto	l10815
  7270  01967C  0A01               	xorlw	1	; case 1
  7271  01967E  D7B5               	goto	l10827
  7272  019680                     l1964:
  7273                           
  7274                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7275  019680  52E5               	movf	postdec1,f,c
  7276  019682  0012               	return		;funcret
  7277  019684                     __end_of_hid_display:
  7278                           	opt callstack 0
  7279                           
  7280 ;; *************** function _hid_input *****************
  7281 ;; Defined at:
  7282 ;;		line 3 in file "hid.c"
  7283 ;; Parameters:    Size  Location     Type
  7284 ;;  h               1  [STACK] PTR struct H_data
  7285 ;;		 -> H(7), 
  7286 ;; Auto vars:     Size  Location     Type
  7287 ;;		None
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  1  [STACK] PTR struct H_data
  7290 ;; Registers used:
  7291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/1
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7301 ;;Total ram usage:        0 bytes
  7302 ;; Hardware stack levels used:    1
  7303 ;; Hardware stack levels required when called:   16
  7304 ;; This function calls:
  7305 ;;		_get_switch
  7306 ;; This function is called by:
  7307 ;;		_hid_display
  7308 ;; This function uses a reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text14
  7312  01A3A4                     __ptext14:
  7313                           	opt callstack 0
  7314  01A3A4                     _hid_input:
  7315                           	opt callstack 13
  7316                           
  7317                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7318                           
  7319                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7320                           ;incstack = 0
  7321  01A3A4  0E02               	movlw	2
  7322  01A3A6  6EE6               	movwf	postinc1,c
  7323  01A3A8  ECDB  F0D8         	call	_get_switch	;wreg free
  7324  01A3AC  5026               	movf	btemp^0,w,c
  7325  01A3AE  B4D8               	btfsc	status,2,c
  7326  01A3B0  D01C               	goto	l10379
  7327                           
  7328                           ;hid.c: 6:   h->wait_select = 0;
  7329                           ;stkvar	_h @ sp[(0)+-1]
  7330  01A3B2  0EFF               	movlw	-1
  7331  01A3B4  50E3               	movf	plusw1,w,c
  7332  01A3B6  6ED9               	movwf	fsr2l,c
  7333  01A3B8  6ADA               	clrf	fsr2h,c
  7334  01A3BA  0E02               	movlw	2
  7335  01A3BC  26D9               	addwf	fsr2l,f,c
  7336  01A3BE  0E00               	movlw	0
  7337  01A3C0  6EDF               	movwf	indf2,c
  7338                           
  7339                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7340  01A3C2  0E02               	movlw	2
  7341  01A3C4  6EE6               	movwf	postinc1,c
  7342  01A3C6  ECDB  F0D8         	call	_get_switch	;wreg free
  7343  01A3CA  5026               	movf	btemp^0,w,c
  7344  01A3CC  B4D8               	btfsc	status,2,c
  7345  01A3CE  D003               	goto	u9540
  7346  01A3D0  6A31               	clrf	(btemp+11)^0,c
  7347  01A3D2  2A31               	incf	(btemp+11)^0,f,c
  7348  01A3D4  D001               	goto	u9558
  7349  01A3D6                     u9540:
  7350  01A3D6  6A31               	clrf	(btemp+11)^0,c
  7351  01A3D8                     u9558:
  7352                           
  7353                           ;stkvar	_h @ sp[(0)+-1]
  7354  01A3D8  0EFF               	movlw	-1
  7355  01A3DA  50E3               	movf	plusw1,w,c
  7356  01A3DC  6ED9               	movwf	fsr2l,c
  7357  01A3DE  6ADA               	clrf	fsr2h,c
  7358  01A3E0  0E03               	movlw	3
  7359  01A3E2  26D9               	addwf	fsr2l,f,c
  7360  01A3E4  0060  F0C7  FFDF   	movff	btemp+11,indf2
  7361  01A3EA                     l10379:
  7362                           
  7363                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7364  01A3EA  0E03               	movlw	3
  7365  01A3EC  6EE6               	movwf	postinc1,c
  7366  01A3EE  ECDB  F0D8         	call	_get_switch	;wreg free
  7367  01A3F2  5026               	movf	btemp^0,w,c
  7368  01A3F4  B4D8               	btfsc	status,2,c
  7369  01A3F6  D01C               	goto	l1955
  7370                           
  7371                           ;hid.c: 11:   h->wait_enter = 0;
  7372                           ;stkvar	_h @ sp[(0)+-1]
  7373  01A3F8  0EFF               	movlw	-1
  7374  01A3FA  50E3               	movf	plusw1,w,c
  7375  01A3FC  6ED9               	movwf	fsr2l,c
  7376  01A3FE  6ADA               	clrf	fsr2h,c
  7377  01A400  0E04               	movlw	4
  7378  01A402  26D9               	addwf	fsr2l,f,c
  7379  01A404  0E00               	movlw	0
  7380  01A406  6EDF               	movwf	indf2,c
  7381                           
  7382                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7383  01A408  0E03               	movlw	3
  7384  01A40A  6EE6               	movwf	postinc1,c
  7385  01A40C  ECDB  F0D8         	call	_get_switch	;wreg free
  7386  01A410  5026               	movf	btemp^0,w,c
  7387  01A412  B4D8               	btfsc	status,2,c
  7388  01A414  D003               	goto	u9570
  7389  01A416  6A31               	clrf	(btemp+11)^0,c
  7390  01A418  2A31               	incf	(btemp+11)^0,f,c
  7391  01A41A  D001               	goto	u9588
  7392  01A41C                     u9570:
  7393  01A41C  6A31               	clrf	(btemp+11)^0,c
  7394  01A41E                     u9588:
  7395                           
  7396                           ;stkvar	_h @ sp[(0)+-1]
  7397  01A41E  0EFF               	movlw	-1
  7398  01A420  50E3               	movf	plusw1,w,c
  7399  01A422  6ED9               	movwf	fsr2l,c
  7400  01A424  6ADA               	clrf	fsr2h,c
  7401  01A426  0E05               	movlw	5
  7402  01A428  26D9               	addwf	fsr2l,f,c
  7403  01A42A  0060  F0C7  FFDF   	movff	btemp+11,indf2
  7404  01A430                     l1955:
  7405                           
  7406                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7407  01A430  52E5               	movf	postdec1,f,c
  7408  01A432  0012               	return		;funcret
  7409  01A434                     __end_of_hid_input:
  7410                           	opt callstack 0
  7411                           
  7412 ;; *************** function _get_switch *****************
  7413 ;; Defined at:
  7414 ;;		line 18 in file "dio.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  i               1  [STACK] unsigned char 
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;		None
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  1  [STACK] enum E17021
  7421 ;; Registers used:
  7422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/2
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7432 ;;Total ram usage:        0 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; Hardware stack levels required when called:   15
  7435 ;; This function calls:
  7436 ;;		Nothing
  7437 ;; This function is called by:
  7438 ;;		_main
  7439 ;;		_hid_input
  7440 ;; This function uses a reentrant model
  7441 ;;
  7442                           
  7443                           	psect	text15
  7444  01B1B6                     __ptext15:
  7445                           	opt callstack 0
  7446  01B1B6                     _get_switch:
  7447                           	opt callstack 13
  7448                           
  7449                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7450                           ;stkvar	_i @ sp[(0)+-1]
  7451                           
  7452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7453                           ;incstack = 0
  7454  01B1B6  0EFF               	movlw	-1
  7455  01B1B8  006F FF8C  F026    	movff	plusw1,btemp
  7456  01B1BE  0E03               	movlw	3
  7457  01B1C0  6426               	cpfsgt	btemp^0,c
  7458  01B1C2  D002               	goto	l9773
  7459                           
  7460                           ;dio.c: 21:   return SW_OFF;
  7461  01B1C4  0E00               	movlw	0
  7462  01B1C6  D00A               	goto	L4
  7463  01B1C8                     l9773:
  7464                           
  7465                           ;dio.c: 23:  return S.button[i].sw;
  7466                           ;stkvar	_i @ sp[(0)+-1]
  7467  01B1C8  0EFF               	movlw	-1
  7468  01B1CA  50E3               	movf	plusw1,w,c
  7469  01B1CC  0D05               	mullw	5
  7470  01B1CE  0EC5               	movlw	low _S
  7471  01B1D0  24F3               	addwf	243,w,c
  7472  01B1D2  6ED9               	movwf	fsr2l,c
  7473  01B1D4  0E02               	movlw	high _S
  7474  01B1D6  20F4               	addwfc	prodh,w,c
  7475  01B1D8  6EDA               	movwf	fsr2h,c
  7476  01B1DA  50DF               	movf	indf2,w,c
  7477  01B1DC                     L4:
  7478  01B1DC  6E26               	movwf	btemp^0,c
  7479                           
  7480                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7481  01B1DE  52E5               	movf	postdec1,f,c
  7482  01B1E0  0012               	return		;funcret
  7483  01B1E2                     __end_of_get_switch:
  7484                           	opt callstack 0
  7485                           
  7486 ;; *************** function _esr_check *****************
  7487 ;; Defined at:
  7488 ;;		line 179 in file "bsoc.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;  fsm             1  [STACK] unsigned char 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;		None
  7493 ;; Return value:  Size  Location     Type
  7494 ;;                  4  [STACK] float 
  7495 ;; Registers used:
  7496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7497 ;; Tracked objects:
  7498 ;;		On entry : 0/0
  7499 ;;		On exit  : 0/0
  7500 ;;		Unchanged: 0/0
  7501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7506 ;;Total ram usage:        0 bytes
  7507 ;; Hardware stack levels used:    1
  7508 ;; Hardware stack levels required when called:   18
  7509 ;; This function calls:
  7510 ;;		_StartTimer
  7511 ;;		_TimerDone
  7512 ;;		___fldiv
  7513 ;;		___flsub
  7514 ;;		_conv_raw_result
  7515 ;;		_fabsf
  7516 ;;		_set_load_relay_one
  7517 ;;		_set_load_relay_two
  7518 ;;		_update_adc_result
  7519 ;; This function is called by:
  7520 ;;		_main
  7521 ;; This function uses a reentrant model
  7522 ;;
  7523                           
  7524                           	psect	text16
  7525  016944                     __ptext16:
  7526                           	opt callstack 0
  7527  016944                     _esr_check:
  7528                           	opt callstack 12
  7529                           
  7530                           ;bsoc.c: 179: float esr_check(uint8_t fsm);bsoc.c: 180: {;bsoc.c: 181:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 183:  if (fsm) {
  7531                           ;stkvar	_fsm @ sp[(0)+-1]
  7532                           
  7533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7534                           ;incstack = 0
  7535  016944  0EFF               	movlw	-1
  7536  016946  50E3               	movf	plusw1,w,c
  7537  016948  B4D8               	btfsc	status,2,c
  7538  01694A  D13E               	goto	l10753
  7539                           
  7540                           ;bsoc.c: 184:   esr_state = 0;
  7541  01694C  6A18               	clrf	esr_check@esr_state^0,c
  7542                           
  7543                           ;bsoc.c: 185:   return -10.0;
  7544  01694E  0E00               	movlw	0
  7545  016950  6E26               	movwf	btemp^0,c
  7546  016952  0E00               	movlw	0
  7547  016954  6E27               	movwf	(btemp+1)^0,c
  7548  016956  0E20               	movlw	32
  7549  016958  6E28               	movwf	(btemp+2)^0,c
  7550  01695A  0EC1               	movlw	193
  7551  01695C  D150               	goto	L5
  7552  01695E                     l10685:
  7553                           
  7554                           ;bsoc.c: 190:   StartTimer(TMR_ESR, 10000);
  7555  01695E  0E10               	movlw	16
  7556  016960  6EE6               	movwf	postinc1,c
  7557  016962  0E27               	movlw	39
  7558  016964  6EE6               	movwf	postinc1,c
  7559  016966  0E0C               	movlw	12
  7560  016968  6EE6               	movwf	postinc1,c
  7561  01696A  ECEE  F0D6         	call	_StartTimer	;wreg free
  7562  01696E                     l10687:
  7563                           
  7564                           ;bsoc.c: 191:   esr_state++;
  7565  01696E  2A18               	incf	esr_check@esr_state^0,f,c
  7566                           
  7567                           ;bsoc.c: 192:   break;
  7568  016970  D13F               	goto	l10755
  7569  016972                     l10689:
  7570                           
  7571                           ;bsoc.c: 197:   set_load_relay_one(0);
  7572  016972  0E00               	movlw	0
  7573  016974  6EE6               	movwf	postinc1,c
  7574  016976  ECFB  F0DB         	call	_set_load_relay_one	;wreg free
  7575                           
  7576                           ;bsoc.c: 198:   set_load_relay_two(0);
  7577  01697A  0E00               	movlw	0
  7578  01697C  6EE6               	movwf	postinc1,c
  7579  01697E  ECF3  F0DB         	call	_set_load_relay_two	;wreg free
  7580                           
  7581                           ;bsoc.c: 199:   if (TimerDone(TMR_ESR)) {
  7582  016982  0E0C               	movlw	12
  7583  016984  6EE6               	movwf	postinc1,c
  7584  016986  EC6F  F0D9         	call	_TimerDone	;wreg free
  7585  01698A  5026               	movf	btemp^0,w,c
  7586  01698C  B4D8               	btfsc	status,2,c
  7587  01698E  D009               	goto	l10695
  7588                           
  7589                           ;bsoc.c: 200:    StartTimer(TMR_ESR, 10000);
  7590  016990  0E10               	movlw	16
  7591  016992  6EE6               	movwf	postinc1,c
  7592  016994  0E27               	movlw	39
  7593  016996  6EE6               	movwf	postinc1,c
  7594  016998  0E0C               	movlw	12
  7595  01699A  6EE6               	movwf	postinc1,c
  7596  01699C  ECEE  F0D6         	call	_StartTimer	;wreg free
  7597                           
  7598                           ;bsoc.c: 201:   } else {
  7599  0169A0  D006               	goto	l10699
  7600  0169A2                     l10695:
  7601                           
  7602                           ;bsoc.c: 202:    return -2.0;
  7603  0169A2  0E00               	movlw	0
  7604  0169A4  6E26               	movwf	btemp^0,c
  7605  0169A6  0E00               	movlw	0
  7606  0169A8  6E27               	movwf	(btemp+1)^0,c
  7607  0169AA  0E00               	movlw	0
  7608  0169AC  D066               	goto	L7
  7609  0169AE                     l10699:
  7610                           
  7611                           ;bsoc.c: 207:   update_adc_result();
  7612  0169AE  EC8D  F0D7         	call	_update_adc_result	;wreg free
  7613                           
  7614                           ;bsoc.c: 208:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  7615  0169B2  0E00               	movlw	0
  7616  0169B4  6EE6               	movwf	postinc1,c
  7617  0169B6  0E04               	movlw	4
  7618  0169B8  6EE6               	movwf	postinc1,c
  7619  0169BA  EC92  F0A7         	call	_conv_raw_result	;wreg free
  7620  0169BE  0060  F098  F1EB   	movff	btemp,_C+235	;volatile
  7621  0169C4  0060  F09C  F1EC   	movff	btemp+1,_C+236	;volatile
  7622  0169CA  0060  F0A0  F1ED   	movff	btemp+2,_C+237	;volatile
  7623  0169D0  0060  F0A4  F1EE   	movff	btemp+3,_C+238	;volatile
  7624  0169D6  D7CB               	goto	l10687
  7625  0169D8                     l10705:
  7626                           
  7627                           ;bsoc.c: 212:   set_load_relay_one(1);
  7628  0169D8  0E01               	movlw	1
  7629  0169DA  6EE6               	movwf	postinc1,c
  7630  0169DC  ECFB  F0DB         	call	_set_load_relay_one	;wreg free
  7631                           
  7632                           ;bsoc.c: 213:   if (TimerDone(TMR_ESR)) {
  7633  0169E0  0E0C               	movlw	12
  7634  0169E2  6EE6               	movwf	postinc1,c
  7635  0169E4  EC6F  F0D9         	call	_TimerDone	;wreg free
  7636  0169E8  5026               	movf	btemp^0,w,c
  7637  0169EA  B4D8               	btfsc	status,2,c
  7638  0169EC  D009               	goto	l10711
  7639                           
  7640                           ;bsoc.c: 214:    StartTimer(TMR_ESR, 10000);
  7641  0169EE  0E10               	movlw	16
  7642  0169F0  6EE6               	movwf	postinc1,c
  7643  0169F2  0E27               	movlw	39
  7644  0169F4  6EE6               	movwf	postinc1,c
  7645  0169F6  0E0C               	movlw	12
  7646  0169F8  6EE6               	movwf	postinc1,c
  7647  0169FA  ECEE  F0D6         	call	_StartTimer	;wreg free
  7648                           
  7649                           ;bsoc.c: 215:   } else {
  7650  0169FE  D006               	goto	l10715
  7651  016A00                     l10711:
  7652                           
  7653                           ;bsoc.c: 216:    return -3.0;
  7654  016A00  0E00               	movlw	0
  7655  016A02  6E26               	movwf	btemp^0,c
  7656  016A04  0E00               	movlw	0
  7657  016A06  6E27               	movwf	(btemp+1)^0,c
  7658  016A08  0E40               	movlw	64
  7659  016A0A  D037               	goto	L7
  7660  016A0C                     l10715:
  7661                           
  7662                           ;bsoc.c: 219:   update_adc_result();
  7663  016A0C  EC8D  F0D7         	call	_update_adc_result	;wreg free
  7664                           
  7665                           ;bsoc.c: 220:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  7666  016A10  0E00               	movlw	0
  7667  016A12  6EE6               	movwf	postinc1,c
  7668  016A14  0E04               	movlw	4
  7669  016A16  6EE6               	movwf	postinc1,c
  7670  016A18  EC92  F0A7         	call	_conv_raw_result	;wreg free
  7671  016A1C  0060  F098  F1EF   	movff	btemp,_C+239	;volatile
  7672  016A22  0060  F09C  F1F0   	movff	btemp+1,_C+240	;volatile
  7673  016A28  0060  F0A0  F1F1   	movff	btemp+2,_C+241	;volatile
  7674  016A2E  0060  F0A4  F1F2   	movff	btemp+3,_C+242	;volatile
  7675                           
  7676                           ;bsoc.c: 221:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  7677  016A34  0E00               	movlw	0
  7678  016A36  6EE6               	movwf	postinc1,c
  7679  016A38  0E00               	movlw	0
  7680  016A3A  6EE6               	movwf	postinc1,c
  7681  016A3C  EC92  F0A7         	call	_conv_raw_result	;wreg free
  7682  016A40  0060  F098  F1E3   	movff	btemp,_C+227	;volatile
  7683  016A46  0060  F09C  F1E4   	movff	btemp+1,_C+228	;volatile
  7684  016A4C  0060  F0A0  F1E5   	movff	btemp+2,_C+229	;volatile
  7685  016A52  0060  F0A4  F1E6   	movff	btemp+3,_C+230	;volatile
  7686  016A58  D78A               	goto	l10687
  7687  016A5A                     l10723:
  7688                           
  7689                           ;bsoc.c: 225:   set_load_relay_two(1);
  7690  016A5A  0E01               	movlw	1
  7691  016A5C  6EE6               	movwf	postinc1,c
  7692  016A5E  ECF3  F0DB         	call	_set_load_relay_two	;wreg free
  7693                           
  7694                           ;bsoc.c: 226:   if (!TimerDone(TMR_ESR))
  7695  016A62  0E0C               	movlw	12
  7696  016A64  6EE6               	movwf	postinc1,c
  7697  016A66  EC6F  F0D9         	call	_TimerDone	;wreg free
  7698  016A6A  5026               	movf	btemp^0,w,c
  7699  016A6C  A4D8               	btfss	status,2,c
  7700  016A6E  D008               	goto	l10731
  7701                           
  7702                           ;bsoc.c: 227:    return -4.0;
  7703  016A70  0E00               	movlw	0
  7704  016A72  6E26               	movwf	btemp^0,c
  7705  016A74  0E00               	movlw	0
  7706  016A76  6E27               	movwf	(btemp+1)^0,c
  7707  016A78  0E80               	movlw	128
  7708  016A7A                     L7:
  7709  016A7A  6E28               	movwf	(btemp+2)^0,c
  7710  016A7C  0EC0               	movlw	192
  7711  016A7E  D0BF               	goto	L5
  7712  016A80                     l10731:
  7713                           
  7714                           ;bsoc.c: 229:   update_adc_result();
  7715  016A80  EC8D  F0D7         	call	_update_adc_result	;wreg free
  7716                           
  7717                           ;bsoc.c: 230:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  7718  016A84  0E00               	movlw	0
  7719  016A86  6EE6               	movwf	postinc1,c
  7720  016A88  0E04               	movlw	4
  7721  016A8A  6EE6               	movwf	postinc1,c
  7722  016A8C  EC92  F0A7         	call	_conv_raw_result	;wreg free
  7723  016A90  0060  F098  F1F3   	movff	btemp,_C+243	;volatile
  7724  016A96  0060  F09C  F1F4   	movff	btemp+1,_C+244	;volatile
  7725  016A9C  0060  F0A0  F1F5   	movff	btemp+2,_C+245	;volatile
  7726  016AA2  0060  F0A4  F1F6   	movff	btemp+3,_C+246	;volatile
  7727                           
  7728                           ;bsoc.c: 231:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  7729  016AA8  0E00               	movlw	0
  7730  016AAA  6EE6               	movwf	postinc1,c
  7731  016AAC  0E00               	movlw	0
  7732  016AAE  6EE6               	movwf	postinc1,c
  7733  016AB0  EC92  F0A7         	call	_conv_raw_result	;wreg free
  7734  016AB4  0060  F098  F1E7   	movff	btemp,_C+231	;volatile
  7735  016ABA  0060  F09C  F1E8   	movff	btemp+1,_C+232	;volatile
  7736  016AC0  0060  F0A0  F1E9   	movff	btemp+2,_C+233	;volatile
  7737  016AC6  0060  F0A4  F1EA   	movff	btemp+3,_C+234	;volatile
  7738                           
  7739                           ;bsoc.c: 233:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  7740  016ACC  0060  F79F  FFE6   	movff	_C+231,postinc1
  7741  016AD2  0060  F7A3  FFE6   	movff	_C+232,postinc1
  7742  016AD8  0060  F7A7  FFE6   	movff	_C+233,postinc1
  7743  016ADE  0060  F7AB  FFE6   	movff	_C+234,postinc1
  7744  016AE4  0060  F78F  FFE6   	movff	_C+227,postinc1
  7745  016AEA  0060  F793  FFE6   	movff	_C+228,postinc1
  7746  016AF0  0060  F797  FFE6   	movff	_C+229,postinc1
  7747  016AF6  0060  F79B  FFE6   	movff	_C+230,postinc1
  7748  016AFC  EC1F  F0D6         	call	___flsub	;wreg free
  7749  016B00  0060  F09B  FFE6   	movff	btemp,postinc1
  7750  016B06  0060  F09F  FFE6   	movff	btemp+1,postinc1
  7751  016B0C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  7752  016B12  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  7753  016B18  0060  F7CF  FFE6   	movff	_C+243,postinc1
  7754  016B1E  0060  F7D3  FFE6   	movff	_C+244,postinc1
  7755  016B24  0060  F7D7  FFE6   	movff	_C+245,postinc1
  7756  016B2A  0060  F7DB  FFE6   	movff	_C+246,postinc1
  7757  016B30  0060  F7BF  FFE6   	movff	_C+239,postinc1
  7758  016B36  0060  F7C3  FFE6   	movff	_C+240,postinc1
  7759  016B3C  0060  F7C7  FFE6   	movff	_C+241,postinc1
  7760  016B42  0060  F7CB  FFE6   	movff	_C+242,postinc1
  7761  016B48  EC1F  F0D6         	call	___flsub	;wreg free
  7762  016B4C  0060  F09B  FFE6   	movff	btemp,postinc1
  7763  016B52  0060  F09F  FFE6   	movff	btemp+1,postinc1
  7764  016B58  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  7765  016B5E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  7766  016B64  ECD5  F0A4         	call	___fldiv	;wreg free
  7767  016B68  0060  F09B  FFE6   	movff	btemp,postinc1
  7768  016B6E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  7769  016B74  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  7770  016B7A  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  7771  016B80  EC04  F0CF         	call	_fabsf	;wreg free
  7772  016B84  0060  F098  F184   	movff	btemp,_C+132	;volatile
  7773  016B8A  0060  F09C  F185   	movff	btemp+1,_C+133	;volatile
  7774  016B90  0060  F0A0  F186   	movff	btemp+2,_C+134	;volatile
  7775  016B96  0060  F0A4  F187   	movff	btemp+3,_C+135	;volatile
  7776                           
  7777                           ;bsoc.c: 234:   set_load_relay_one(0);
  7778  016B9C  0E00               	movlw	0
  7779  016B9E  6EE6               	movwf	postinc1,c
  7780  016BA0  ECFB  F0DB         	call	_set_load_relay_one	;wreg free
  7781                           
  7782                           ;bsoc.c: 235:   set_load_relay_two(0);
  7783  016BA4  0E00               	movlw	0
  7784  016BA6  6EE6               	movwf	postinc1,c
  7785  016BA8  ECF3  F0DB         	call	_set_load_relay_two	;wreg free
  7786                           
  7787                           ;bsoc.c: 236:   esr_state = 0;
  7788  016BAC  6A18               	clrf	esr_check@esr_state^0,c
  7789                           
  7790                           ;bsoc.c: 237:   return C.esr;
  7791  016BAE  0060  F610  F026   	movff	_C+132,btemp	;volatile
  7792  016BB4  0060  F614  F027   	movff	_C+133,btemp+1	;volatile
  7793  016BBA  0060  F618  F028   	movff	_C+134,btemp+2	;volatile
  7794  016BC0  0060  F61C  F029   	movff	_C+135,btemp+3	;volatile
  7795  016BC6  D01C               	goto	l2072
  7796  016BC8                     l10753:
  7797  016BC8  5018               	movf	esr_check@esr_state^0,w,c
  7798  016BCA  6E30               	movwf	(btemp+10)^0,c
  7799  016BCC  6A31               	clrf	(btemp+11)^0,c
  7800                           
  7801                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7802                           ; Switch size 1, requested type "simple"
  7803                           ; Number of cases is 1, Range of values is 0 to 0
  7804                           ; switch strategies available:
  7805                           ; Name         Instructions Cycles
  7806                           ; simple_byte            4     3 (average)
  7807                           ;	Chosen strategy is simple_byte
  7808  016BCE  5031               	movf	(btemp+11)^0,w,c
  7809  016BD0  0A00               	xorlw	0	; case 0
  7810  016BD2  A4D8               	btfss	status,2,c
  7811  016BD4  D00D               	goto	l10755
  7812                           
  7813                           ; Switch size 1, requested type "simple"
  7814                           ; Number of cases is 4, Range of values is 0 to 3
  7815                           ; switch strategies available:
  7816                           ; Name         Instructions Cycles
  7817                           ; simple_byte           13     7 (average)
  7818                           ;	Chosen strategy is simple_byte
  7819  016BD6  5030               	movf	(btemp+10)^0,w,c
  7820  016BD8  0A00               	xorlw	0	; case 0
  7821  016BDA  B4D8               	btfsc	status,2,c
  7822  016BDC  D6C0               	goto	l10685
  7823  016BDE  0A01               	xorlw	1	; case 1
  7824  016BE0  B4D8               	btfsc	status,2,c
  7825  016BE2  D6C7               	goto	l10689
  7826  016BE4  0A03               	xorlw	3	; case 2
  7827  016BE6  B4D8               	btfsc	status,2,c
  7828  016BE8  D6F7               	goto	l10705
  7829  016BEA  0A01               	xorlw	1	; case 3
  7830  016BEC  B4D8               	btfsc	status,2,c
  7831  016BEE  D735               	goto	l10723
  7832  016BF0                     l10755:
  7833                           
  7834                           ;bsoc.c: 242:  return -1.0;
  7835  016BF0  0E00               	movlw	0
  7836  016BF2  6E26               	movwf	btemp^0,c
  7837  016BF4  0E00               	movlw	0
  7838  016BF6  6E27               	movwf	(btemp+1)^0,c
  7839  016BF8  0E80               	movlw	128
  7840  016BFA  6E28               	movwf	(btemp+2)^0,c
  7841  016BFC  0EBF               	movlw	191
  7842  016BFE                     L5:
  7843  016BFE  6E29               	movwf	(btemp+3)^0,c
  7844  016C00                     l2072:
  7845                           
  7846                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7847  016C00  52E5               	movf	postdec1,f,c
  7848  016C02  0012               	return		;funcret
  7849  016C04                     __end_of_esr_check:
  7850                           	opt callstack 0
  7851                           
  7852 ;; *************** function _update_adc_result *****************
  7853 ;; Defined at:
  7854 ;;		line 71 in file "daq.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;		None
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;		None
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  1  [STACK] _Bool 
  7861 ;; Registers used:
  7862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7872 ;;Total ram usage:        0 bytes
  7873 ;; Hardware stack levels used:    1
  7874 ;; Hardware stack levels required when called:   17
  7875 ;; This function calls:
  7876 ;;		_StartTimer
  7877 ;;		_TimerDone
  7878 ;;		_check_adc_scan
  7879 ;;		_clear_adc_scan
  7880 ;;		_start_adc_scan
  7881 ;; This function is called by:
  7882 ;;		_esr_check
  7883 ;; This function uses a reentrant model
  7884 ;;
  7885                           
  7886                           	psect	text17
  7887  01AF1A                     __ptext17:
  7888                           	opt callstack 0
  7889  01AF1A                     _update_adc_result:
  7890                           	opt callstack 12
  7891                           
  7892                           ;daq.c: 73:  if (R.done) {
  7893                           
  7894                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7895                           ;incstack = 0
  7896  01AF1A  0100               	movlb	0	; () banked
  7897  01AF1C  51D8               	movf	(_R+39)& (0+255),w,b	;volatile
  7898  01AF1E  B4D8               	btfsc	status,2,c
  7899  01AF20  0012               	return	
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;daq.c: 74:   clear_adc_scan();
  7903  01AF22  EC59  F0DC         	call	_clear_adc_scan	;wreg free
  7904                           
  7905                           ; BSR set to: 0
  7906                           ;daq.c: 75:   start_adc_scan();
  7907  01AF26  ECF4  F0D3         	call	_start_adc_scan	;wreg free
  7908                           
  7909                           ;daq.c: 76:   StartTimer(TMR_ADC, 200);
  7910  01AF2A  0EC8               	movlw	200
  7911  01AF2C  6EE6               	movwf	postinc1,c
  7912  01AF2E  0E00               	movlw	0
  7913  01AF30  6EE6               	movwf	postinc1,c
  7914  01AF32  0E01               	movlw	1
  7915  01AF34  6EE6               	movwf	postinc1,c
  7916  01AF36  ECEE  F0D6         	call	_StartTimer	;wreg free
  7917  01AF3A                     l10315:
  7918  01AF3A  0E01               	movlw	1
  7919  01AF3C  6EE6               	movwf	postinc1,c
  7920  01AF3E  EC6F  F0D9         	call	_TimerDone	;wreg free
  7921  01AF42  5026               	movf	btemp^0,w,c
  7922  01AF44  A4D8               	btfss	status,2,c
  7923  01AF46  0012               	return	
  7924  01AF48  EC49  F0DC         	call	_check_adc_scan	;wreg free
  7925  01AF4C  5026               	movf	btemp^0,w,c
  7926  01AF4E  A4D8               	btfss	status,2,c
  7927  01AF50  0012               	return	
  7928  01AF52  D7F3               	goto	l10315
  7929  01AF54                     __end_of_update_adc_result:
  7930                           	opt callstack 0
  7931                           
  7932 ;; *************** function _start_adc_scan *****************
  7933 ;; Defined at:
  7934 ;;		line 32 in file "daq.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;		None
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;		None
  7939 ;; Return value:  Size  Location     Type
  7940 ;;                  1  [STACK] _Bool 
  7941 ;; Registers used:
  7942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 1/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7952 ;;Total ram usage:        0 bytes
  7953 ;; Hardware stack levels used:    1
  7954 ;; Hardware stack levels required when called:   16
  7955 ;; This function calls:
  7956 ;;		_ADCC_DischargeSampleCapacitor
  7957 ;;		_ADCC_SetADIInterruptHandler
  7958 ;;		_ADCC_SetADTIInterruptHandler
  7959 ;;		_ADCC_StartConversion
  7960 ;; This function is called by:
  7961 ;;		_main
  7962 ;;		_update_adc_result
  7963 ;; This function uses a reentrant model
  7964 ;;
  7965                           
  7966                           	psect	text18
  7967  01A7E8                     __ptext18:
  7968                           	opt callstack 0
  7969  01A7E8                     _start_adc_scan:
  7970                           	opt callstack 14
  7971                           
  7972                           ;daq.c: 34:  if (R.done)
  7973                           
  7974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7975                           ;incstack = 0
  7976  01A7E8  0100               	movlb	0	; () banked
  7977  01A7EA  51D8               	movf	(_R+39)& (0+255),w,b	;volatile
  7978  01A7EC  A4D8               	btfss	status,2,c
  7979  01A7EE  0012               	return	
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;daq.c: 37:  R.scan_index = 0;
  7983  01A7F0  6BD5               	clrf	(_R+36)& (0+255),b	;volatile
  7984                           
  7985                           ; BSR set to: 0
  7986                           ;daq.c: 38:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  7987  01A7F2  013A               	movlb	58	; () banked
  7988  01A7F4  5140               	movf	64,w,b	;volatile
  7989  01A7F6  006E F940  F026    	movff	14928,btemp	;volatile
  7990  01A7FC  6A27               	clrf	(btemp+1)^0,c
  7991  01A7FE  0060  F098  F027   	movff	btemp,btemp+1
  7992  01A804  6A26               	clrf	btemp^0,c
  7993  01A806  2626               	addwf	btemp^0,f,c
  7994  01A808  0E00               	movlw	0
  7995  01A80A  2227               	addwfc	(btemp+1)^0,f,c
  7996  01A80C  0E77               	movlw	119
  7997  01A80E  1426               	andwf	btemp^0,w,c
  7998  01A810  0100               	movlb	0	; () banked
  7999  01A812  6FD6               	movwf	(_R+37)& (0+255),b	;volatile
  8000  01A814  0E3C               	movlw	60
  8001  01A816  1427               	andwf	(btemp+1)^0,w,c
  8002  01A818  6FD7               	movwf	(_R+38)& (0+255),b	;volatile
  8003                           
  8004                           ; BSR set to: 0
  8005                           ;daq.c: 39:  ADCC_SetADIInterruptHandler(adc_int_handler);
  8006  01A81A  0EDA               	movlw	low _adc_int_handler
  8007  01A81C  6EE6               	movwf	postinc1,c
  8008  01A81E  0EB8               	movlw	high _adc_int_handler
  8009  01A820  6EE6               	movwf	postinc1,c
  8010  01A822  0E01               	movlw	low (_adc_int_handler shr (0+16))
  8011  01A824  6EE6               	movwf	postinc1,c
  8012  01A826  EC37  F0DA         	call	_ADCC_SetADIInterruptHandler	;wreg free
  8013                           
  8014                           ;daq.c: 40:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  8015  01A82A  0EC4               	movlw	low _adc_int_t_handler
  8016  01A82C  6EE6               	movwf	postinc1,c
  8017  01A82E  0EA5               	movlw	high _adc_int_t_handler
  8018  01A830  6EE6               	movwf	postinc1,c
  8019  01A832  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  8020  01A834  6EE6               	movwf	postinc1,c
  8021  01A836  EC23  F0DA         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8022                           
  8023                           ;daq.c: 41:  ADCC_DischargeSampleCapacitor();
  8024  01A83A  EC45  F0DC         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  8025                           
  8026                           ; BSR set to: 62
  8027                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  8028  01A83E  0100               	movlb	0	; () banked
  8029  01A840  51D5               	movf	(_R+36)& (0+255),w,b	;volatile
  8030  01A842  0B0F               	andlw	15
  8031  01A844  6EE6               	movwf	postinc1,c
  8032  01A846  ECEA  F0DB         	call	_ADCC_StartConversion	;wreg free
  8033                           
  8034                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8035  01A84A  0012               	return		;funcret
  8036  01A84C                     __end_of_start_adc_scan:
  8037                           	opt callstack 0
  8038                           
  8039 ;; *************** function _ADCC_StartConversion *****************
  8040 ;; Defined at:
  8041 ;;		line 128 in file "mcc_generated_files/adcc.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;  channel         1  [STACK] enum E16136
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;		None
  8046 ;; Return value:  Size  Location     Type
  8047 ;;                  1  [STACK] void 
  8048 ;; Registers used:
  8049 ;;		fsr1l, fsr1h
  8050 ;; Tracked objects:
  8051 ;;		On entry : 3F/0
  8052 ;;		On exit  : 3F/3E
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8059 ;;Total ram usage:        0 bytes
  8060 ;; Hardware stack levels used:    1
  8061 ;; Hardware stack levels required when called:   15
  8062 ;; This function calls:
  8063 ;;		Nothing
  8064 ;; This function is called by:
  8065 ;;		_start_adc_scan
  8066 ;;		_adc_int_t_handler
  8067 ;; This function uses a reentrant model
  8068 ;;
  8069                           
  8070                           	psect	text19
  8071  01B7D4                     __ptext19:
  8072                           	opt callstack 0
  8073  01B7D4                     _ADCC_StartConversion:
  8074                           	opt callstack 0
  8075                           
  8076                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8077                           ;stkvar	_channel @ sp[(0)+-1]
  8078                           
  8079                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8080                           ;incstack = 0
  8081 ;; hardware stack exceeded
  8082  01B7D4  0EFF               	movlw	-1
  8083  01B7D6  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8084                           
  8085                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8086  01B7DC  013E               	movlb	62	; () banked
  8087  01B7DE  8FF8               	bsf	248,7,b	;volatile
  8088                           
  8089                           ; BSR set to: 62
  8090                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8091  01B7E0  81F8               	bsf	248,0,b	;volatile
  8092                           
  8093                           ; BSR set to: 62
  8094                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8095  01B7E2  52E5               	movf	postdec1,f,c
  8096  01B7E4  0012               	return		;funcret
  8097  01B7E6                     __end_of_ADCC_StartConversion:
  8098                           	opt callstack 0
  8099                           
  8100 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8101 ;; Defined at:
  8102 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;		None
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;		None
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  1  [STACK] void 
  8109 ;; Registers used:
  8110 ;;		wreg, status,2
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/0
  8113 ;;		On exit  : 3F/3E
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8120 ;;Total ram usage:        0 bytes
  8121 ;; Hardware stack levels used:    1
  8122 ;; Hardware stack levels required when called:   15
  8123 ;; This function calls:
  8124 ;;		Nothing
  8125 ;; This function is called by:
  8126 ;;		_start_adc_scan
  8127 ;;		_adc_int_t_handler
  8128 ;; This function uses a reentrant model
  8129 ;;
  8130                           
  8131                           	psect	text20
  8132  01B88A                     __ptext20:
  8133                           	opt callstack 0
  8134  01B88A                     _ADCC_DischargeSampleCapacitor:
  8135                           	opt callstack 0
  8136                           
  8137                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8138                           
  8139                           ; BSR set to: 62
  8140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8141                           ;incstack = 0
  8142 ;; hardware stack exceeded
  8143  01B88A  0E3B               	movlw	59
  8144  01B88C  013E               	movlb	62	; () banked
  8145  01B88E  6FF1               	movwf	241,b	;volatile
  8146                           
  8147                           ; BSR set to: 62
  8148                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8149  01B890  0012               	return		;funcret
  8150  01B892                     __end_of_ADCC_DischargeSampleCapacitor:
  8151                           	opt callstack 0
  8152                           
  8153 ;; *************** function _clear_adc_scan *****************
  8154 ;; Defined at:
  8155 ;;		line 63 in file "daq.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;		None
  8158 ;; Auto vars:     Size  Location     Type
  8159 ;;		None
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  1  [STACK] void 
  8162 ;; Registers used:
  8163 ;;		None
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 3F/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8173 ;;Total ram usage:        0 bytes
  8174 ;; Hardware stack levels used:    1
  8175 ;; Hardware stack levels required when called:   15
  8176 ;; This function calls:
  8177 ;;		Nothing
  8178 ;; This function is called by:
  8179 ;;		_main
  8180 ;;		_update_adc_result
  8181 ;; This function uses a reentrant model
  8182 ;;
  8183                           
  8184                           	psect	text21
  8185  01B8B2                     __ptext21:
  8186                           	opt callstack 0
  8187  01B8B2                     _clear_adc_scan:
  8188                           	opt callstack 13
  8189                           
  8190                           ;daq.c: 65:  R.done = 0;
  8191                           
  8192                           ; BSR set to: 62
  8193                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8194                           ;incstack = 0
  8195  01B8B2  0100               	movlb	0	; () banked
  8196  01B8B4  6BD8               	clrf	(_R+39)& (0+255),b	;volatile
  8197                           
  8198                           ; BSR set to: 0
  8199                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8200  01B8B6  0012               	return		;funcret
  8201  01B8B8                     __end_of_clear_adc_scan:
  8202                           	opt callstack 0
  8203                           
  8204 ;; *************** function _check_adc_scan *****************
  8205 ;; Defined at:
  8206 ;;		line 55 in file "daq.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;		None
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;		None
  8211 ;; Return value:  Size  Location     Type
  8212 ;;                  1  [STACK] _Bool 
  8213 ;; Registers used:
  8214 ;;		btemp
  8215 ;; Tracked objects:
  8216 ;;		On entry : 0/0
  8217 ;;		On exit  : 0/0
  8218 ;;		Unchanged: 0/0
  8219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8224 ;;Total ram usage:        0 bytes
  8225 ;; Hardware stack levels used:    1
  8226 ;; Hardware stack levels required when called:   15
  8227 ;; This function calls:
  8228 ;;		Nothing
  8229 ;; This function is called by:
  8230 ;;		_main
  8231 ;;		_update_adc_result
  8232 ;; This function uses a reentrant model
  8233 ;;
  8234                           
  8235                           	psect	text22
  8236  01B892                     __ptext22:
  8237                           	opt callstack 0
  8238  01B892                     _check_adc_scan:
  8239                           	opt callstack 13
  8240                           
  8241                           ;daq.c: 57:  return R.done;
  8242                           
  8243                           ; BSR set to: 0
  8244                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8245                           ;incstack = 0
  8246  01B892  0060  F360  F026   	movff	_R+39,btemp	;volatile
  8247                           
  8248                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8249  01B898  0012               	return		;funcret
  8250  01B89A                     __end_of_check_adc_scan:
  8251                           	opt callstack 0
  8252                           
  8253 ;; *************** function _set_load_relay_two *****************
  8254 ;; Defined at:
  8255 ;;		line 128 in file "mbmc.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;  mode            1  [STACK] _Bool 
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;		None
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  1  [STACK] void 
  8262 ;; Registers used:
  8263 ;;		wreg, fsr1l, fsr1h
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8273 ;;Total ram usage:        0 bytes
  8274 ;; Hardware stack levels used:    1
  8275 ;; Hardware stack levels required when called:   15
  8276 ;; This function calls:
  8277 ;;		Nothing
  8278 ;; This function is called by:
  8279 ;;		_main
  8280 ;;		_esr_check
  8281 ;; This function uses a reentrant model
  8282 ;;
  8283                           
  8284                           	psect	text23
  8285  01B7E6                     __ptext23:
  8286                           	opt callstack 0
  8287  01B7E6                     _set_load_relay_two:
  8288                           	opt callstack 15
  8289                           
  8290                           ;mbmc.c: 128: void set_load_relay_two(_Bool mode);mbmc.c: 129: {;mbmc.c: 130:  LATDbits.
      +                          LATD5 = mode;
  8291                           ;stkvar	_mode @ sp[(0)+-1]
  8292                           
  8293                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8294                           ;incstack = 0
  8295  01B7E6  0EFF               	movlw	-1
  8296  01B7E8  B0E3               	btfsc	plusw1,0,c
  8297  01B7EA  D002               	bra	u9305
  8298  01B7EC  9ABD               	bcf	189,5,c	;volatile
  8299  01B7EE  D001               	bra	u9306
  8300  01B7F0                     u9305:
  8301  01B7F0  8ABD               	bsf	189,5,c	;volatile
  8302  01B7F2                     u9306:
  8303                           
  8304                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8305  01B7F2  52E5               	movf	postdec1,f,c
  8306  01B7F4  0012               	return		;funcret
  8307  01B7F6                     __end_of_set_load_relay_two:
  8308                           	opt callstack 0
  8309                           
  8310 ;; *************** function _set_load_relay_one *****************
  8311 ;; Defined at:
  8312 ;;		line 123 in file "mbmc.c"
  8313 ;; Parameters:    Size  Location     Type
  8314 ;;  mode            1  [STACK] _Bool 
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;		None
  8317 ;; Return value:  Size  Location     Type
  8318 ;;                  1  [STACK] void 
  8319 ;; Registers used:
  8320 ;;		wreg, fsr1l, fsr1h
  8321 ;; Tracked objects:
  8322 ;;		On entry : 0/0
  8323 ;;		On exit  : 0/0
  8324 ;;		Unchanged: 0/0
  8325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8330 ;;Total ram usage:        0 bytes
  8331 ;; Hardware stack levels used:    1
  8332 ;; Hardware stack levels required when called:   15
  8333 ;; This function calls:
  8334 ;;		Nothing
  8335 ;; This function is called by:
  8336 ;;		_main
  8337 ;;		_esr_check
  8338 ;; This function uses a reentrant model
  8339 ;;
  8340                           
  8341                           	psect	text24
  8342  01B7F6                     __ptext24:
  8343                           	opt callstack 0
  8344  01B7F6                     _set_load_relay_one:
  8345                           	opt callstack 15
  8346                           
  8347                           ;mbmc.c: 123: void set_load_relay_one(_Bool mode);mbmc.c: 124: {;mbmc.c: 125:  LATDbits.
      +                          LATD4 = mode;
  8348                           ;stkvar	_mode @ sp[(0)+-1]
  8349                           
  8350                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8351                           ;incstack = 0
  8352  01B7F6  0EFF               	movlw	-1
  8353  01B7F8  B0E3               	btfsc	plusw1,0,c
  8354  01B7FA  D002               	bra	u9295
  8355  01B7FC  98BD               	bcf	189,4,c	;volatile
  8356  01B7FE  D001               	bra	u9296
  8357  01B800                     u9295:
  8358  01B800  88BD               	bsf	189,4,c	;volatile
  8359  01B802                     u9296:
  8360                           
  8361                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8362  01B802  52E5               	movf	postdec1,f,c
  8363  01B804  0012               	return		;funcret
  8364  01B806                     __end_of_set_load_relay_one:
  8365                           	opt callstack 0
  8366                           
  8367 ;; *************** function _eaDogM_WriteCommand *****************
  8368 ;; Defined at:
  8369 ;;		line 175 in file "eadog.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;  cmd             1  [STACK] const unsigned char 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;		None
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1  [STACK] void 
  8376 ;; Registers used:
  8377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8378 ;; Tracked objects:
  8379 ;;		On entry : 3F/3D
  8380 ;;		On exit  : 3F/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8387 ;;Total ram usage:        0 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; Hardware stack levels required when called:   25
  8390 ;; This function calls:
  8391 ;;		_send_lcd_cmd_dma
  8392 ;; This function is called by:
  8393 ;;		_main
  8394 ;; This function uses a reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text25
  8398  01B816                     __ptext25:
  8399                           	opt callstack 0
  8400  01B816                     _eaDogM_WriteCommand:
  8401                           	opt callstack 5
  8402                           
  8403                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  8404                           ;stkvar	_cmd @ sp[(0)+-1]
  8405                           
  8406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8407                           ;incstack = 0
  8408  01B816  0EFF               	movlw	-1
  8409  01B818  50E3               	movf	plusw1,w,c
  8410  01B81A  6EE6               	movwf	postinc1,c
  8411  01B81C  EC11  F0D5         	call	_send_lcd_cmd_dma	;wreg free
  8412                           
  8413                           ; BSR set to: 0
  8414                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8415  01B820  52E5               	movf	postdec1,f,c
  8416  01B822  0012               	return		;funcret
  8417  01B824                     __end_of_eaDogM_WriteCommand:
  8418                           	opt callstack 0
  8419                           
  8420 ;; *************** function _convert_adc_data *****************
  8421 ;; Defined at:
  8422 ;;		line 51 in file "mbmc.c"
  8423 ;; Parameters:    Size  Location     Type
  8424 ;;		None
  8425 ;; Auto vars:     Size  Location     Type
  8426 ;;  i               1  [STACK] unsigned char 
  8427 ;; Return value:  Size  Location     Type
  8428 ;;                  1  [STACK] void 
  8429 ;; Registers used:
  8430 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8431 ;; Tracked objects:
  8432 ;;		On entry : 0/0
  8433 ;;		On exit  : 0/0
  8434 ;;		Unchanged: 0/0
  8435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8440 ;;Total ram usage:        0 bytes
  8441 ;; Hardware stack levels used:    1
  8442 ;; Hardware stack levels required when called:   18
  8443 ;; This function calls:
  8444 ;;		_conv_raw_result
  8445 ;;		_lp_filter
  8446 ;; This function is called by:
  8447 ;;		_main
  8448 ;; This function uses a reentrant model
  8449 ;;
  8450                           
  8451                           	psect	text26
  8452  019D50                     __ptext26:
  8453                           	opt callstack 0
  8454  019D50                     _convert_adc_data:
  8455                           	opt callstack 0
  8456                           
  8457                           ; BSR set to: 0
  8458                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8459  019D50  52E6               	movf	postinc1,f,c
  8460                           
  8461                           ;mbmc.c: 53:  uint8_t i = 0;
  8462                           ;stkvar	_i @ sp[(-1)+0]
  8463                           
  8464                           ;incstack = 0
  8465  019D52  0EFF               	movlw	-1
  8466  019D54  6AE3               	clrf	plusw1,c
  8467  019D56                     l10765:
  8468                           
  8469                           ;mbmc.c: 56:   if (V.calib) {
  8470  019D56  0102               	movlb	2	; () banked
  8471  019D58  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  8472  019D5A  B4D8               	btfsc	status,2,c
  8473  019D5C  D01B               	goto	l10769
  8474                           
  8475                           ; BSR set to: 2
  8476                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8477  019D5E  0E01               	movlw	1
  8478  019D60  6EE6               	movwf	postinc1,c
  8479                           
  8480                           ;stkvar	_i @ sp[(-2)+0]
  8481  019D62  0EFE               	movlw	-2
  8482  019D64  50E3               	movf	plusw1,w,c
  8483  019D66  6EE6               	movwf	postinc1,c
  8484  019D68  0E01               	movlw	1
  8485  019D6A  6EE6               	movwf	postinc1,c
  8486                           
  8487                           ;stkvar	_i @ sp[(-4)+0]
  8488  019D6C  0EFC               	movlw	-4
  8489  019D6E  50E3               	movf	plusw1,w,c
  8490  019D70  6EE6               	movwf	postinc1,c
  8491  019D72  EC92  F0A7         	call	_conv_raw_result	;wreg free
  8492  019D76  0060  F09B  FFE6   	movff	btemp,postinc1
  8493  019D7C  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8494  019D82  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  8495  019D88  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  8496  019D8E  EC16  F0BF         	call	_lp_filter	;wreg free
  8497  019D92  D01A               	goto	L8
  8498  019D94                     l10769:
  8499                           
  8500                           ; BSR set to: 2
  8501                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8502  019D94  0E00               	movlw	0
  8503  019D96  6EE6               	movwf	postinc1,c
  8504                           
  8505                           ;stkvar	_i @ sp[(-2)+0]
  8506  019D98  0EFE               	movlw	-2
  8507  019D9A  50E3               	movf	plusw1,w,c
  8508  019D9C  6EE6               	movwf	postinc1,c
  8509  019D9E  0E00               	movlw	0
  8510  019DA0  6EE6               	movwf	postinc1,c
  8511                           
  8512                           ;stkvar	_i @ sp[(-4)+0]
  8513  019DA2  0EFC               	movlw	-4
  8514  019DA4  50E3               	movf	plusw1,w,c
  8515  019DA6  6EE6               	movwf	postinc1,c
  8516  019DA8  EC92  F0A7         	call	_conv_raw_result	;wreg free
  8517  019DAC  0060  F09B  FFE6   	movff	btemp,postinc1
  8518  019DB2  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8519  019DB8  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  8520  019DBE  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  8521  019DC4  EC16  F0BF         	call	_lp_filter	;wreg free
  8522  019DC8                     L8:
  8523                           
  8524                           ;stkvar	_i @ sp[(-1)+0]
  8525  019DC8  0EFF               	movlw	-1
  8526  019DCA  50E3               	movf	plusw1,w,c
  8527  019DCC  0D04               	mullw	4
  8528  019DCE  0E00               	movlw	low _C
  8529  019DD0  24F3               	addwf	243,w,c
  8530  019DD2  6ED9               	movwf	fsr2l,c
  8531  019DD4  0E01               	movlw	high _C
  8532  019DD6  20F4               	addwfc	prodh,w,c
  8533  019DD8  6EDA               	movwf	fsr2h,c
  8534  019DDA  0060  F09B  FFDE   	movff	btemp,postinc2
  8535  019DE0  0060  F09F  FFDE   	movff	btemp+1,postinc2
  8536  019DE6  0060  F0A3  FFDE   	movff	btemp+2,postinc2
  8537  019DEC  0060  F0A7  FFDE   	movff	btemp+3,postinc2
  8538                           
  8539                           ;mbmc.c: 61:  } while (++i < 16);
  8540                           ;stkvar	_i @ sp[(-1)+0]
  8541  019DF2  0EFF               	movlw	-1
  8542  019DF4  2AE3               	incf	plusw1,f,c
  8543  019DF6  0EFF               	movlw	-1
  8544  019DF8  006F FF8C  F026    	movff	plusw1,btemp
  8545  019DFE  0E0F               	movlw	15
  8546  019E00  6426               	cpfsgt	btemp^0,c
  8547  019E02  D7A9               	goto	l10765
  8548                           
  8549                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8550  019E04  52E5               	movf	postdec1,f,c
  8551  019E06  0012               	return		;funcret
  8552  019E08                     __end_of_convert_adc_data:
  8553                           	opt callstack 0
  8554                           
  8555 ;; *************** function _clear_hid_pflags *****************
  8556 ;; Defined at:
  8557 ;;		line 51 in file "hid.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;  h               1  [STACK] PTR struct H_data
  8560 ;;		 -> H(7), 
  8561 ;; Auto vars:     Size  Location     Type
  8562 ;;		None
  8563 ;; Return value:  Size  Location     Type
  8564 ;;                  1  [STACK] void 
  8565 ;; Registers used:
  8566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8567 ;; Tracked objects:
  8568 ;;		On entry : 3F/0
  8569 ;;		On exit  : 0/0
  8570 ;;		Unchanged: 0/0
  8571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8576 ;;Total ram usage:        0 bytes
  8577 ;; Hardware stack levels used:    1
  8578 ;; Hardware stack levels required when called:   15
  8579 ;; This function calls:
  8580 ;;		Nothing
  8581 ;; This function is called by:
  8582 ;;		_main
  8583 ;; This function uses a reentrant model
  8584 ;;
  8585                           
  8586                           	psect	text27
  8587  01B532                     __ptext27:
  8588                           	opt callstack 0
  8589  01B532                     _clear_hid_pflags:
  8590                           	opt callstack 15
  8591                           
  8592                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  8593                           ;stkvar	_h @ sp[(0)+-1]
  8594                           
  8595                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8596                           ;incstack = 0
  8597  01B532  0EFF               	movlw	-1
  8598  01B534  50E3               	movf	plusw1,w,c
  8599  01B536  6ED9               	movwf	fsr2l,c
  8600  01B538  6ADA               	clrf	fsr2h,c
  8601  01B53A  0E03               	movlw	3
  8602  01B53C  26D9               	addwf	fsr2l,f,c
  8603  01B53E  0E00               	movlw	0
  8604  01B540  6EDF               	movwf	indf2,c
  8605                           
  8606                           ;hid.c: 54:  h->enter_p = SW_OFF;
  8607                           ;stkvar	_h @ sp[(0)+-1]
  8608  01B542  0EFF               	movlw	-1
  8609  01B544  50E3               	movf	plusw1,w,c
  8610  01B546  6ED9               	movwf	fsr2l,c
  8611  01B548  6ADA               	clrf	fsr2h,c
  8612  01B54A  0E05               	movlw	5
  8613  01B54C  26D9               	addwf	fsr2l,f,c
  8614  01B54E  0E00               	movlw	0
  8615  01B550  6EDF               	movwf	indf2,c
  8616                           
  8617                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8618  01B552  52E5               	movf	postdec1,f,c
  8619  01B554  0012               	return		;funcret
  8620  01B556                     __end_of_clear_hid_pflags:
  8621                           	opt callstack 0
  8622                           
  8623 ;; *************** function _check_help *****************
  8624 ;; Defined at:
  8625 ;;		line 40 in file "mconfig.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;  flipper         1  [STACK] const _Bool 
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;  estatus         1    0        _Bool 
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  1  [STACK] _Bool 
  8632 ;; Registers used:
  8633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8634 ;; Tracked objects:
  8635 ;;		On entry : 3F/2
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8643 ;;Total ram usage:        0 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; Hardware stack levels required when called:   27
  8646 ;; This function calls:
  8647 ;;		_StartTimer
  8648 ;;		_TimerDone
  8649 ;;		_display_help
  8650 ;;		_display_info
  8651 ;;		_get_vterm_ptr
  8652 ;;		_help_button
  8653 ;;		_mode_lamp_bright
  8654 ;;		_mode_lamp_dim
  8655 ;;		_set_display_info
  8656 ;;		_set_temp_display_help
  8657 ;;		_set_vterm
  8658 ;;		_sprintf
  8659 ;;		_update_lcd
  8660 ;;		_vterm_dump
  8661 ;; This function is called by:
  8662 ;;		_main
  8663 ;; This function uses a reentrant model
  8664 ;;
  8665                           
  8666                           	psect	text28
  8667  017816                     __ptext28:
  8668                           	opt callstack 0
  8669  017816                     _check_help:
  8670                           	opt callstack 3
  8671                           
  8672                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  8673                           
  8674                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8675                           ;incstack = 0
  8676  017816  ECAA  F0D7         	call	_help_button	;wreg free
  8677  01781A  5026               	movf	btemp^0,w,c
  8678  01781C  B4D8               	btfsc	status,2,c
  8679  01781E  D0D0               	goto	l12743
  8680  017820  EC4D  F0DC         	call	_display_info	;wreg free
  8681  017824  0426               	decf	btemp^0,w,c
  8682  017826  B4D8               	btfsc	status,2,c
  8683  017828  D0CB               	goto	l12743
  8684                           
  8685                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  8686  01782A  0EDC               	movlw	220
  8687  01782C  6EE6               	movwf	postinc1,c
  8688  01782E  0E05               	movlw	5
  8689  017830  6EE6               	movwf	postinc1,c
  8690  017832  0E0B               	movlw	11
  8691  017834  6EE6               	movwf	postinc1,c
  8692  017836  ECEE  F0D6         	call	_StartTimer	;wreg free
  8693                           
  8694                           ;mconfig.c: 48:   if (V.debug)
  8695  01783A  0102               	movlb	2	; () banked
  8696  01783C  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
  8697                           
  8698                           ; BSR set to: 2
  8699                           ;mconfig.c: 49:    vterm_dump();
  8700  01783E  ECF2  F0C6         	call	_vterm_dump	;wreg free
  8701                           
  8702                           ;mconfig.c: 51:   set_vterm(1);
  8703  017842  0E01               	movlw	1
  8704  017844  6EE6               	movwf	postinc1,c
  8705  017846  EC43  F0DB         	call	_set_vterm	;wreg free
  8706                           
  8707                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  8708  01784A  EC4D  F0DC         	call	_display_info	;wreg free
  8709  01784E  5026               	movf	btemp^0,w,c
  8710  017850  6EE6               	movwf	postinc1,c
  8711  017852  EC03  F0DC         	call	_set_temp_display_help	;wreg free
  8712                           
  8713                           ; BSR set to: 2
  8714                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  8715  017856  0E01               	movlw	1
  8716  017858  6EE6               	movwf	postinc1,c
  8717  01785A  EC52  F0DB         	call	_set_display_info	;wreg free
  8718                           
  8719                           ;mconfig.c: 54:   if (flipper) {
  8720                           ;stkvar	_flipper @ sp[(0)+-1]
  8721  01785E  0EFF               	movlw	-1
  8722  017860  50E3               	movf	plusw1,w,c
  8723  017862  B4D8               	btfsc	status,2,c
  8724  017864  D019               	goto	l12729
  8725                           
  8726                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  8727  017866  0EB1               	movlw	low STR_46
  8728  017868  6EE6               	movwf	postinc1,c
  8729  01786A  0EFF               	movlw	high STR_46
  8730  01786C  6EE6               	movwf	postinc1,c
  8731  01786E  0E27               	movlw	low STR_48
  8732  017870  6EE6               	movwf	postinc1,c
  8733  017872  0EFE               	movlw	high STR_48
  8734  017874  6EE6               	movwf	postinc1,c
  8735  017876  0E01               	movlw	1
  8736  017878  6EE6               	movwf	postinc1,c
  8737  01787A  0E00               	movlw	0
  8738  01787C  6EE6               	movwf	postinc1,c
  8739  01787E  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  8740  017882  0060  F09B  FFE6   	movff	btemp,postinc1
  8741  017888  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8742  01788E  0E06               	movlw	6
  8743  017890  6EE6               	movwf	postinc1,c
  8744  017892  ECB9  F0C9         	call	_sprintf	;wreg free
  8745                           
  8746                           ;mconfig.c: 56:   } else {
  8747  017896  D018               	goto	l1674
  8748  017898                     l12729:
  8749                           
  8750                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  8751  017898  0EC7               	movlw	low STR_47
  8752  01789A  6EE6               	movwf	postinc1,c
  8753  01789C  0EFF               	movlw	high STR_47
  8754  01789E  6EE6               	movwf	postinc1,c
  8755  0178A0  0E27               	movlw	low STR_48
  8756  0178A2  6EE6               	movwf	postinc1,c
  8757  0178A4  0EFE               	movlw	high STR_48
  8758  0178A6  6EE6               	movwf	postinc1,c
  8759  0178A8  0E01               	movlw	1
  8760  0178AA  6EE6               	movwf	postinc1,c
  8761  0178AC  0E00               	movlw	0
  8762  0178AE  6EE6               	movwf	postinc1,c
  8763  0178B0  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  8764  0178B4  0060  F09B  FFE6   	movff	btemp,postinc1
  8765  0178BA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8766  0178C0  0E06               	movlw	6
  8767  0178C2  6EE6               	movwf	postinc1,c
  8768  0178C4  ECB9  F0C9         	call	_sprintf	;wreg free
  8769  0178C8                     l1674:
  8770                           
  8771                           ; BSR set to: 0
  8772                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  8773  0178C8  0102               	movlb	2	; () banked
  8774  0178CA  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
  8775  0178CC  32E8               	rrcf	wreg,f,c
  8776  0178CE  32E8               	rrcf	wreg,f,c
  8777  0178D0  0B03               	andlw	3
  8778  0178D2  0D24               	mullw	36
  8779  0178D4  0E12               	movlw	18
  8780  0178D6  26F3               	addwf	243,f,c
  8781  0178D8  0E00               	movlw	0
  8782  0178DA  22F4               	addwfc	244,f,c
  8783  0178DC  0E49               	movlw	low _T
  8784  0178DE  6E30               	movwf	(btemp+10)^0,c
  8785  0178E0  0EFB               	movlw	high _T
  8786  0178E2  6E31               	movwf	(btemp+11)^0,c
  8787  0178E4  50F3               	movf	243,w,c
  8788  0178E6  2630               	addwf	(btemp+10)^0,f,c
  8789  0178E8  50F4               	movf	244,w,c
  8790  0178EA  2231               	addwfc	(btemp+11)^0,f,c
  8791  0178EC  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  8792  0178F2  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  8793  0178F8  0EBD               	movlw	low STR_50
  8794  0178FA  6EE6               	movwf	postinc1,c
  8795  0178FC  0EFF               	movlw	high STR_50
  8796  0178FE  6EE6               	movwf	postinc1,c
  8797  017900  0E01               	movlw	1
  8798  017902  6EE6               	movwf	postinc1,c
  8799  017904  0E01               	movlw	1
  8800  017906  6EE6               	movwf	postinc1,c
  8801  017908  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  8802  01790C  0060  F09B  FFE6   	movff	btemp,postinc1
  8803  017912  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8804  017918  0E06               	movlw	6
  8805  01791A  6EE6               	movwf	postinc1,c
  8806  01791C  ECB9  F0C9         	call	_sprintf	;wreg free
  8807                           
  8808                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  8809  017920  0102               	movlb	2	; () banked
  8810  017922  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
  8811  017924  32E8               	rrcf	wreg,f,c
  8812  017926  32E8               	rrcf	wreg,f,c
  8813  017928  0B03               	andlw	3
  8814  01792A  0D24               	mullw	36
  8815  01792C  0E49               	movlw	low _T
  8816  01792E  6E30               	movwf	(btemp+10)^0,c
  8817  017930  0EFB               	movlw	high _T
  8818  017932  6E31               	movwf	(btemp+11)^0,c
  8819  017934  50F3               	movf	243,w,c
  8820  017936  2630               	addwf	(btemp+10)^0,f,c
  8821  017938  50F4               	movf	244,w,c
  8822  01793A  2231               	addwfc	(btemp+11)^0,f,c
  8823  01793C  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  8824  017942  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  8825  017948  0EBD               	movlw	low STR_50
  8826  01794A  6EE6               	movwf	postinc1,c
  8827  01794C  0EFF               	movlw	high STR_50
  8828  01794E  6EE6               	movwf	postinc1,c
  8829  017950  0E01               	movlw	1
  8830  017952  6EE6               	movwf	postinc1,c
  8831  017954  0E02               	movlw	2
  8832  017956  6EE6               	movwf	postinc1,c
  8833  017958  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  8834  01795C  0060  F09B  FFE6   	movff	btemp,postinc1
  8835  017962  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8836  017968  0E06               	movlw	6
  8837  01796A  6EE6               	movwf	postinc1,c
  8838  01796C  ECB9  F0C9         	call	_sprintf	;wreg free
  8839                           
  8840                           ; BSR set to: 0
  8841                           ;mconfig.c: 61:   V.help_id++;
  8842  017970  EE20  F2A2         	lfsr	2,_V+155	;volatile
  8843  017974  38DF               	swapf	223,w,c
  8844  017976  6E31               	movwf	(btemp+11)^0,c
  8845  017978  3231               	rrcf	(btemp+11)^0,f,c
  8846  01797A  3031               	rrcf	(btemp+11)^0,w,c
  8847  01797C  0B03               	andlw	3
  8848  01797E  6E31               	movwf	(btemp+11)^0,c
  8849  017980  2A31               	incf	(btemp+11)^0,f,c
  8850  017982  3A31               	swapf	(btemp+11)^0,f,c
  8851  017984  3631               	rlcf	(btemp+11)^0,f,c
  8852  017986  3631               	rlcf	(btemp+11)^0,f,c
  8853  017988  50DF               	movf	223,w,c
  8854  01798A  1831               	xorwf	(btemp+11)^0,w,c
  8855  01798C  0B3F               	andlw	-193
  8856  01798E  1831               	xorwf	(btemp+11)^0,w,c
  8857  017990  6EDF               	movwf	223,c
  8858                           
  8859                           ; BSR set to: 0
  8860                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  8861  017992  0EB8               	movlw	184
  8862  017994  6EE6               	movwf	postinc1,c
  8863  017996  0E0B               	movlw	11
  8864  017998  6EE6               	movwf	postinc1,c
  8865  01799A  0E09               	movlw	9
  8866  01799C  6EE6               	movwf	postinc1,c
  8867  01799E  ECEE  F0D6         	call	_StartTimer	;wreg free
  8868                           
  8869                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  8870  0179A2  0EB8               	movlw	184
  8871  0179A4  6EE6               	movwf	postinc1,c
  8872  0179A6  0E0B               	movlw	11
  8873  0179A8  6EE6               	movwf	postinc1,c
  8874  0179AA  0E07               	movlw	7
  8875  0179AC  6EE6               	movwf	postinc1,c
  8876  0179AE  ECEE  F0D6         	call	_StartTimer	;wreg free
  8877                           
  8878                           ;mconfig.c: 64:   mode_lamp_bright();
  8879  0179B2  EC12  F0DC         	call	_mode_lamp_bright	;wreg free
  8880                           
  8881                           ;mconfig.c: 65:   update_lcd(1);
  8882  0179B6  0E01               	movlw	1
  8883  0179B8  6EE6               	movwf	postinc1,c
  8884  0179BA  EC31  F0C9         	call	_update_lcd	;wreg free
  8885                           
  8886                           ;mconfig.c: 67:  } else {
  8887  0179BE  D032               	goto	l1675
  8888  0179C0                     l12743:
  8889                           
  8890                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  8891  0179C0  0E09               	movlw	9
  8892  0179C2  6EE6               	movwf	postinc1,c
  8893  0179C4  EC6F  F0D9         	call	_TimerDone	;wreg free
  8894  0179C8  5026               	movf	btemp^0,w,c
  8895  0179CA  B4D8               	btfsc	status,2,c
  8896  0179CC  D02B               	goto	l1675
  8897                           
  8898                           ;mconfig.c: 69:    set_vterm(0);
  8899  0179CE  0E00               	movlw	0
  8900  0179D0  6EE6               	movwf	postinc1,c
  8901  0179D2  EC43  F0DB         	call	_set_vterm	;wreg free
  8902                           
  8903                           ;mconfig.c: 70:    V.help = 0;
  8904  0179D6  0102               	movlb	2	; () banked
  8905  0179D8  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
  8906                           
  8907                           ; BSR set to: 2
  8908                           ;mconfig.c: 71:    set_display_info(display_help());
  8909  0179DA  EC51  F0DC         	call	_display_help	;wreg free
  8910  0179DE  5026               	movf	btemp^0,w,c
  8911  0179E0  6EE6               	movwf	postinc1,c
  8912  0179E2  EC52  F0DB         	call	_set_display_info	;wreg free
  8913                           
  8914                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  8915  0179E6  0060  FA73  FFE6   	movff	_V+149,postinc1
  8916  0179EC  0060  FA77  FFE6   	movff	_V+150,postinc1
  8917  0179F2  ECA7  F0DB         	call	_mode_lamp_dim	;wreg free
  8918                           
  8919                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  8920  0179F6  0E0B               	movlw	11
  8921  0179F8  6EE6               	movwf	postinc1,c
  8922  0179FA  EC6F  F0D9         	call	_TimerDone	;wreg free
  8923  0179FE  5026               	movf	btemp^0,w,c
  8924  017A00  B4D8               	btfsc	status,2,c
  8925  017A02  D010               	goto	l1675
  8926                           
  8927                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  8928  017A04  0102               	movlb	2	; () banked
  8929  017A06  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  8930  017A08  A4D8               	btfss	status,2,c
  8931  017A0A  D002               	goto	u12210
  8932  017A0C  0E01               	movlw	1
  8933  017A0E  D001               	goto	u12220
  8934  017A10                     u12210:
  8935  017A10  0E00               	movlw	0
  8936  017A12                     u12220:
  8937  017A12  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
  8938                           
  8939                           ; BSR set to: 2
  8940                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  8941  017A14  0EDC               	movlw	220
  8942  017A16  6EE6               	movwf	postinc1,c
  8943  017A18  0E05               	movlw	5
  8944  017A1A  6EE6               	movwf	postinc1,c
  8945  017A1C  0E0B               	movlw	11
  8946  017A1E  6EE6               	movwf	postinc1,c
  8947  017A20  ECEE  F0D6         	call	_StartTimer	;wreg free
  8948  017A24                     l1675:
  8949                           
  8950                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8951  017A24  52E5               	movf	postdec1,f,c
  8952  017A26  0012               	return		;funcret
  8953  017A28                     __end_of_check_help:
  8954                           	opt callstack 0
  8955                           
  8956 ;; *************** function _vterm_dump *****************
  8957 ;; Defined at:
  8958 ;;		line 121 in file "mconfig.c"
  8959 ;; Parameters:    Size  Location     Type
  8960 ;;		None
  8961 ;; Auto vars:     Size  Location     Type
  8962 ;;		None
  8963 ;; Return value:  Size  Location     Type
  8964 ;;                  1  [STACK] void 
  8965 ;; Registers used:
  8966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8967 ;; Tracked objects:
  8968 ;;		On entry : 3F/2
  8969 ;;		On exit  : 0/0
  8970 ;;		Unchanged: 0/0
  8971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8976 ;;Total ram usage:        0 bytes
  8977 ;; Hardware stack levels used:    1
  8978 ;; Hardware stack levels required when called:   26
  8979 ;; This function calls:
  8980 ;;		_WaitMs
  8981 ;;		_eaDogM_WriteStringAtPos
  8982 ;;		_get_vterm_ptr
  8983 ;;		_sprintf
  8984 ;;		_wait_lcd_done
  8985 ;; This function is called by:
  8986 ;;		_check_help
  8987 ;; This function uses a reentrant model
  8988 ;;
  8989                           
  8990                           	psect	text29
  8991  018DE4                     __ptext29:
  8992                           	opt callstack 0
  8993  018DE4                     _vterm_dump:
  8994                           	opt callstack 3
  8995                           
  8996                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  8997                           
  8998                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8999                           ;incstack = 0
  9000  018DE4  0E01               	movlw	1
  9001  018DE6  6EE6               	movwf	postinc1,c
  9002  018DE8  0E00               	movlw	0
  9003  018DEA  6EE6               	movwf	postinc1,c
  9004  018DEC  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  9005  018DF0  0060  F09B  FFE6   	movff	btemp,postinc1
  9006  018DF6  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9007  018DFC  0E00               	movlw	0
  9008  018DFE  6EE6               	movwf	postinc1,c
  9009  018E00  0E00               	movlw	0
  9010  018E02  6EE6               	movwf	postinc1,c
  9011  018E04  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  9012  018E08  0060  F09B  FFE6   	movff	btemp,postinc1
  9013  018E0E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9014  018E14  0E93               	movlw	low STR_52
  9015  018E16  6EE6               	movwf	postinc1,c
  9016  018E18  0EFF               	movlw	high STR_52
  9017  018E1A  6EE6               	movwf	postinc1,c
  9018  018E1C  0E08               	movlw	low (_V+1)
  9019  018E1E  6EE6               	movwf	postinc1,c
  9020  018E20  0E02               	movlw	high (_V+1)
  9021  018E22  6EE6               	movwf	postinc1,c
  9022  018E24  0E08               	movlw	8
  9023  018E26  6EE6               	movwf	postinc1,c
  9024  018E28  ECB9  F0C9         	call	_sprintf	;wreg free
  9025                           
  9026                           ; BSR set to: 0
  9027                           ;mconfig.c: 124:  wait_lcd_done();
  9028  018E2C  EC7F  F0DB         	call	_wait_lcd_done	;wreg free
  9029                           
  9030                           ; BSR set to: 0
  9031                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  9032  018E30  0E08               	movlw	low (_V+1)
  9033  018E32  6EE6               	movwf	postinc1,c
  9034  018E34  0E02               	movlw	high (_V+1)
  9035  018E36  6EE6               	movwf	postinc1,c
  9036  018E38  0E00               	movlw	0
  9037  018E3A  6EE6               	movwf	postinc1,c
  9038  018E3C  0E00               	movlw	0
  9039  018E3E  6EE6               	movwf	postinc1,c
  9040  018E40  ECFD  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9041                           
  9042                           ; BSR set to: 59
  9043                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  9044  018E44  0E01               	movlw	1
  9045  018E46  6EE6               	movwf	postinc1,c
  9046  018E48  0E01               	movlw	1
  9047  018E4A  6EE6               	movwf	postinc1,c
  9048  018E4C  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  9049  018E50  0060  F09B  FFE6   	movff	btemp,postinc1
  9050  018E56  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9051  018E5C  0E00               	movlw	0
  9052  018E5E  6EE6               	movwf	postinc1,c
  9053  018E60  0E01               	movlw	1
  9054  018E62  6EE6               	movwf	postinc1,c
  9055  018E64  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  9056  018E68  0060  F09B  FFE6   	movff	btemp,postinc1
  9057  018E6E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9058  018E74  0E93               	movlw	low STR_52
  9059  018E76  6EE6               	movwf	postinc1,c
  9060  018E78  0EFF               	movlw	high STR_52
  9061  018E7A  6EE6               	movwf	postinc1,c
  9062  018E7C  0E08               	movlw	low (_V+1)
  9063  018E7E  6EE6               	movwf	postinc1,c
  9064  018E80  0E02               	movlw	high (_V+1)
  9065  018E82  6EE6               	movwf	postinc1,c
  9066  018E84  0E08               	movlw	8
  9067  018E86  6EE6               	movwf	postinc1,c
  9068  018E88  ECB9  F0C9         	call	_sprintf	;wreg free
  9069                           
  9070                           ; BSR set to: 0
  9071                           ;mconfig.c: 127:  wait_lcd_done();
  9072  018E8C  EC7F  F0DB         	call	_wait_lcd_done	;wreg free
  9073                           
  9074                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9075  018E90  0E08               	movlw	low (_V+1)
  9076  018E92  6EE6               	movwf	postinc1,c
  9077  018E94  0E02               	movlw	high (_V+1)
  9078  018E96  6EE6               	movwf	postinc1,c
  9079  018E98  0E00               	movlw	0
  9080  018E9A  6EE6               	movwf	postinc1,c
  9081  018E9C  0E01               	movlw	1
  9082  018E9E  6EE6               	movwf	postinc1,c
  9083  018EA0  ECFD  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9084                           
  9085                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9086  018EA4  0E01               	movlw	1
  9087  018EA6  6EE6               	movwf	postinc1,c
  9088  018EA8  0E02               	movlw	2
  9089  018EAA  6EE6               	movwf	postinc1,c
  9090  018EAC  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  9091  018EB0  0060  F09B  FFE6   	movff	btemp,postinc1
  9092  018EB6  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9093  018EBC  0E00               	movlw	0
  9094  018EBE  6EE6               	movwf	postinc1,c
  9095  018EC0  0E02               	movlw	2
  9096  018EC2  6EE6               	movwf	postinc1,c
  9097  018EC4  ECC4  F0D8         	call	_get_vterm_ptr	;wreg free
  9098  018EC8  0060  F09B  FFE6   	movff	btemp,postinc1
  9099  018ECE  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9100  018ED4  0E93               	movlw	low STR_52
  9101  018ED6  6EE6               	movwf	postinc1,c
  9102  018ED8  0EFF               	movlw	high STR_52
  9103  018EDA  6EE6               	movwf	postinc1,c
  9104  018EDC  0E08               	movlw	low (_V+1)
  9105  018EDE  6EE6               	movwf	postinc1,c
  9106  018EE0  0E02               	movlw	high (_V+1)
  9107  018EE2  6EE6               	movwf	postinc1,c
  9108  018EE4  0E08               	movlw	8
  9109  018EE6  6EE6               	movwf	postinc1,c
  9110  018EE8  ECB9  F0C9         	call	_sprintf	;wreg free
  9111                           
  9112                           ; BSR set to: 0
  9113                           ;mconfig.c: 130:  wait_lcd_done();
  9114  018EEC  EC7F  F0DB         	call	_wait_lcd_done	;wreg free
  9115                           
  9116                           ; BSR set to: 0
  9117                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9118  018EF0  0E08               	movlw	low (_V+1)
  9119  018EF2  6EE6               	movwf	postinc1,c
  9120  018EF4  0E02               	movlw	high (_V+1)
  9121  018EF6  6EE6               	movwf	postinc1,c
  9122  018EF8  0E00               	movlw	0
  9123  018EFA  6EE6               	movwf	postinc1,c
  9124  018EFC  0E02               	movlw	2
  9125  018EFE  6EE6               	movwf	postinc1,c
  9126  018F00  ECFD  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9127                           
  9128                           ; BSR set to: 59
  9129                           ;mconfig.c: 132:  WaitMs(3000);
  9130  018F04  0EB8               	movlw	184
  9131  018F06  6EE6               	movwf	postinc1,c
  9132  018F08  0E0B               	movlw	11
  9133  018F0A  6EE6               	movwf	postinc1,c
  9134  018F0C  ECE2  F0D7         	call	_WaitMs	;wreg free
  9135                           
  9136                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9137  018F10  0012               	return		;funcret
  9138  018F12                     __end_of_vterm_dump:
  9139                           	opt callstack 0
  9140                           
  9141 ;; *************** function _sprintf *****************
  9142 ;; Defined at:
  9143 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;  s               2  [STACK] PTR unsigned char 
  9146 ;;		 -> D.lcd(480), D(482), port_data(512), V(190), 
  9147 ;;  fmt             2  [STACK] PTR const unsigned char 
  9148 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
  9149 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
  9150 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
  9151 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
  9152 ;;		 -> STR_48(19), STR_42(17), STR_41(16), STR_40(16), 
  9153 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
  9154 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
  9155 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  9156 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
  9157 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
  9158 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9159 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
  9160 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
  9161 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  9162 ;;		 -> STR_2(15), STR_1(17), 
  9163 ;; Auto vars:     Size  Location     Type
  9164 ;;  f               6  [STACK] struct _IO_FILE
  9165 ;;  ap              2  [STACK] PTR void [1]
  9166 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9167 ;;  ret             2    0        int 
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  2  [STACK] int 
  9170 ;; Registers used:
  9171 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/2
  9174 ;;		On exit  : 3F/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9181 ;;Total ram usage:        0 bytes
  9182 ;; Hardware stack levels used:    1
  9183 ;; Hardware stack levels required when called:   23
  9184 ;; This function calls:
  9185 ;;		_vfprintf
  9186 ;; This function is called by:
  9187 ;;		_main
  9188 ;;		_check_help
  9189 ;;		_vterm_dump
  9190 ;;		_calc_bsoc
  9191 ;; This function uses a reentrant model
  9192 ;;
  9193                           
  9194                           	psect	text30
  9195  019372                     __ptext30:
  9196                           	opt callstack 0
  9197  019372                     _sprintf:
  9198                           	opt callstack 0
  9199                           
  9200                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9201  019372  0E08               	movlw	8
  9202  019374  26E1               	addwf	fsr1l,f,c
  9203  019376  0E00               	movlw	0
  9204  019378  22E2               	addwfc	fsr1h,f,c
  9205                           
  9206                           ;incstack = 0
  9207 ;; hardware stack exceeded
  9208  01937A  0EFE               	movlw	254
  9209  01937C  6E30               	movwf	(btemp+10)^0,c
  9210  01937E  0EFF               	movlw	255
  9211  019380  6E31               	movwf	(btemp+11)^0,c
  9212                           
  9213                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9214  019382  0EF5               	movlw	245
  9215  019384  24E1               	addwf	fsr1l,w,c
  9216  019386  6E2E               	movwf	(btemp+8)^0,c
  9217  019388  0EFF               	movlw	255
  9218  01938A  20E2               	addwfc	fsr1h,w,c
  9219  01938C  6E2F               	movwf	(btemp+9)^0,c
  9220  01938E  5030               	movf	(btemp+10)^0,w,c
  9221  019390  262E               	addwf	(btemp+8)^0,f,c
  9222  019392  5031               	movf	(btemp+11)^0,w,c
  9223  019394  222F               	addwfc	(btemp+9)^0,f,c
  9224                           
  9225                           ;stkvar	_ap @ sp[(-8)+6]
  9226  019396  0EFF               	movlw	-1
  9227  019398  0060  F0BF  FFE3   	movff	btemp+9,plusw1
  9228  01939E  0EFE               	movlw	-2
  9229  0193A0  0060  F0BB  FFE3   	movff	btemp+8,plusw1
  9230                           
  9231                           ;stkvar	_s @ sp[(-8)+-3]
  9232  0193A6  0EF5               	movlw	-11
  9233  0193A8  006F FF8C  F030    	movff	plusw1,btemp+10
  9234  0193AE  0EF6               	movlw	-10
  9235  0193B0  006F FF8C  F031    	movff	plusw1,btemp+11
  9236                           
  9237                           ;stkvar	_f @ sp[(-8)+0]
  9238  0193B6  0EF9               	movlw	-7
  9239  0193B8  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  9240  0193BE  0EF8               	movlw	-8
  9241  0193C0  0060  F0C3  FFE3   	movff	btemp+10,plusw1
  9242                           
  9243                           ;stkvar	_f @ sp[(-8)+0]
  9244  0193C6  0EFA               	movlw	250
  9245  0193C8  24E1               	addwf	fsr1l,w,c
  9246  0193CA  6ED9               	movwf	fsr2l,c
  9247  0193CC  0EFF               	movlw	255
  9248  0193CE  20E2               	addwfc	fsr1h,w,c
  9249  0193D0  6EDA               	movwf	fsr2h,c
  9250  0193D2  0E00               	movlw	0
  9251  0193D4  6EDE               	movwf	postinc2,c
  9252  0193D6  0E00               	movlw	0
  9253  0193D8  6EDD               	movwf	postdec2,c
  9254                           
  9255                           ;stkvar	_f @ sp[(-8)+0]
  9256  0193DA  0EFC               	movlw	252
  9257  0193DC  24E1               	addwf	fsr1l,w,c
  9258  0193DE  6ED9               	movwf	fsr2l,c
  9259  0193E0  0EFF               	movlw	255
  9260  0193E2  20E2               	addwfc	fsr1h,w,c
  9261  0193E4  6EDA               	movwf	fsr2h,c
  9262  0193E6  0E00               	movlw	0
  9263  0193E8  6EDE               	movwf	postinc2,c
  9264  0193EA  0E00               	movlw	0
  9265  0193EC  6EDD               	movwf	postdec2,c
  9266                           
  9267                           ;stkvar	_ap @ sp[(-8)+6]
  9268  0193EE  0EFE               	movlw	254
  9269  0193F0  24E1               	addwf	fsr1l,w,c
  9270  0193F2  6E26               	movwf	btemp^0,c
  9271  0193F4  0EFF               	movlw	255
  9272  0193F6  20E2               	addwfc	fsr1h,w,c
  9273  0193F8  6E27               	movwf	(btemp+1)^0,c
  9274  0193FA  0060  F09B  FFE6   	movff	btemp,postinc1
  9275  019400  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9276                           
  9277                           ;stkvar	_fmt @ sp[(-10)+-5]
  9278  019406  0EF1               	movlw	-15
  9279  019408  006F FF8F FFE6     	movff	plusw1,postinc1
  9280  01940E  006F FF8F FFE6     	movff	plusw1,postinc1
  9281                           
  9282                           ;stkvar	_f @ sp[(-12)+0]
  9283  019414  0EF4               	movlw	244
  9284  019416  24E1               	addwf	fsr1l,w,c
  9285  019418  6E26               	movwf	btemp^0,c
  9286  01941A  0EFF               	movlw	255
  9287  01941C  20E2               	addwfc	fsr1h,w,c
  9288  01941E  6E27               	movwf	(btemp+1)^0,c
  9289  019420  0060  F09B  FFE6   	movff	btemp,postinc1
  9290  019426  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9291  01942C  EC5B  F0CF         	call	_vfprintf	;wreg free
  9292                           
  9293                           ; BSR set to: 0
  9294                           ;stkvar	_f @ sp[(-8)+0]
  9295  019430  0EFA               	movlw	250
  9296  019432  24E1               	addwf	fsr1l,w,c
  9297  019434  6ED9               	movwf	fsr2l,c
  9298  019436  0EFF               	movlw	255
  9299  019438  20E2               	addwfc	fsr1h,w,c
  9300  01943A  6EDA               	movwf	fsr2h,c
  9301  01943C  006F FF78  F030    	movff	postinc2,btemp+10
  9302  019442  006F FF74  F031    	movff	postdec2,btemp+11
  9303                           
  9304                           ;stkvar	_s @ sp[(-8)+-3]
  9305  019448  0EF5               	movlw	-11
  9306  01944A  006F FF8C  F02E    	movff	plusw1,btemp+8
  9307  019450  0EF6               	movlw	-10
  9308  019452  006F FF8C  F02F    	movff	plusw1,btemp+9
  9309  019458  5030               	movf	(btemp+10)^0,w,c
  9310  01945A  242E               	addwf	(btemp+8)^0,w,c
  9311  01945C  6ED9               	movwf	fsr2l,c
  9312  01945E  5031               	movf	(btemp+11)^0,w,c
  9313  019460  202F               	addwfc	(btemp+9)^0,w,c
  9314  019462  6EDA               	movwf	fsr2h,c
  9315  019464  0E00               	movlw	0
  9316  019466  6EDF               	movwf	indf2,c
  9317                           
  9318                           ; BSR set to: 0
  9319                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, args
      +                          ize = 4, vargsize = 0
  9320  019468  0EF8               	movlw	248
  9321  01946A  26E1               	addwf	fsr1l,f,c
  9322  01946C  0EFF               	movlw	255
  9323  01946E  22E2               	addwfc	fsr1h,f,c
  9324  019470  52E5               	movf	postdec1,f,c
  9325  019472  50E7               	movf	indf1,w,c
  9326  019474  5EE1               	subwf	fsr1l,f,c
  9327  019476  0E00               	movlw	0
  9328  019478  5AE2               	subwfb	fsr1h,f,c
  9329  01947A  0012               	return		;funcret
  9330  01947C                     __end_of_sprintf:
  9331                           	opt callstack 0
  9332                           
  9333 ;; *************** function _get_vterm_ptr *****************
  9334 ;; Defined at:
  9335 ;;		line 116 in file "mconfig.c"
  9336 ;; Parameters:    Size  Location     Type
  9337 ;;  line            1  [STACK] const unsigned char 
  9338 ;;  vterm           1  [STACK] const unsigned char 
  9339 ;; Auto vars:     Size  Location     Type
  9340 ;;		None
  9341 ;; Return value:  Size  Location     Type
  9342 ;;                  2  [STACK] PTR unsigned char 
  9343 ;; Registers used:
  9344 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9345 ;; Tracked objects:
  9346 ;;		On entry : 0/2
  9347 ;;		On exit  : 0/0
  9348 ;;		Unchanged: 0/0
  9349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9354 ;;Total ram usage:        0 bytes
  9355 ;; Hardware stack levels used:    1
  9356 ;; Hardware stack levels required when called:   15
  9357 ;; This function calls:
  9358 ;;		Nothing
  9359 ;; This function is called by:
  9360 ;;		_main
  9361 ;;		_check_help
  9362 ;;		_vterm_dump
  9363 ;; This function uses a reentrant model
  9364 ;;
  9365                           
  9366                           	psect	text31
  9367  01B188                     __ptext31:
  9368                           	opt callstack 0
  9369  01B188                     _get_vterm_ptr:
  9370                           	opt callstack 15
  9371                           
  9372                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9373                           ;stkvar	_vterm @ sp[(0)+-2]
  9374                           
  9375                           ; BSR set to: 0
  9376                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9377                           ;incstack = 0
  9378  01B188  0EFE               	movlw	-2
  9379  01B18A  50E3               	movf	plusw1,w,c
  9380  01B18C  0B03               	andlw	3
  9381  01B18E  0D78               	mullw	120
  9382  01B190  0EFF               	movlw	low _D
  9383  01B192  6E26               	movwf	btemp^0,c
  9384  01B194  0E07               	movlw	high _D
  9385  01B196  6E27               	movwf	(btemp+1)^0,c
  9386  01B198  50F3               	movf	243,w,c
  9387  01B19A  2626               	addwf	btemp^0,f,c
  9388  01B19C  50F4               	movf	244,w,c
  9389  01B19E  2227               	addwfc	(btemp+1)^0,f,c
  9390                           
  9391                           ;stkvar	_line @ sp[(0)+-1]
  9392  01B1A0  0EFF               	movlw	-1
  9393  01B1A2  50E3               	movf	plusw1,w,c
  9394  01B1A4  0B03               	andlw	3
  9395  01B1A6  0D28               	mullw	40
  9396  01B1A8  50F3               	movf	243,w,c
  9397  01B1AA  2626               	addwf	btemp^0,f,c
  9398  01B1AC  50F4               	movf	244,w,c
  9399  01B1AE  2227               	addwfc	(btemp+1)^0,f,c
  9400                           
  9401                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9402  01B1B0  52E5               	movf	postdec1,f,c
  9403  01B1B2  52E5               	movf	postdec1,f,c
  9404  01B1B4  0012               	return		;funcret
  9405  01B1B6                     __end_of_get_vterm_ptr:
  9406                           	opt callstack 0
  9407                           
  9408 ;; *************** function _WaitMs *****************
  9409 ;; Defined at:
  9410 ;;		line 32 in file "timers.c"
  9411 ;; Parameters:    Size  Location     Type
  9412 ;;  numMilliseco    2  [STACK] const unsigned short 
  9413 ;; Auto vars:     Size  Location     Type
  9414 ;;		None
  9415 ;; Return value:  Size  Location     Type
  9416 ;;                  1  [STACK] void 
  9417 ;; Registers used:
  9418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9419 ;; Tracked objects:
  9420 ;;		On entry : 0/2
  9421 ;;		On exit  : 0/0
  9422 ;;		Unchanged: 0/0
  9423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9428 ;;Total ram usage:        0 bytes
  9429 ;; Hardware stack levels used:    1
  9430 ;; Hardware stack levels required when called:   16
  9431 ;; This function calls:
  9432 ;;		_StartTimer
  9433 ;;		_TimerDone
  9434 ;; This function is called by:
  9435 ;;		_main
  9436 ;;		_vterm_dump
  9437 ;; This function uses a reentrant model
  9438 ;;
  9439                           
  9440                           	psect	text32
  9441  01AFC4                     __ptext32:
  9442                           	opt callstack 0
  9443  01AFC4                     _WaitMs:
  9444                           	opt callstack 12
  9445                           
  9446                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9447                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9448                           
  9449                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9450                           ;incstack = 0
  9451  01AFC4  0EFE               	movlw	-2
  9452  01AFC6  006F FF8F FFE6     	movff	plusw1,postinc1
  9453  01AFCC  006F FF8F FFE6     	movff	plusw1,postinc1
  9454  01AFD2  0E00               	movlw	0
  9455  01AFD4  6EE6               	movwf	postinc1,c
  9456  01AFD6  ECEE  F0D6         	call	_StartTimer	;wreg free
  9457                           
  9458                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9459  01AFDA  D005               	goto	l9715
  9460  01AFDC                     l1606:
  9461                           
  9462                           ;timers.c: 36:   __nop();
  9463  01AFDC  F000               	nop	
  9464                           
  9465                           ;timers.c: 37:   __nop();
  9466  01AFDE  F000               	nop	
  9467                           
  9468                           ;timers.c: 38:   __nop();
  9469  01AFE0  F000               	nop	
  9470                           
  9471                           ;timers.c: 39:   __nop();
  9472  01AFE2  F000               	nop	
  9473  01AFE4  0004               	clrwdt		;# 
  9474  01AFE6                     l9715:
  9475                           
  9476                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9477  01AFE6  0E00               	movlw	0
  9478  01AFE8  6EE6               	movwf	postinc1,c
  9479  01AFEA  EC6F  F0D9         	call	_TimerDone	;wreg free
  9480  01AFEE  5026               	movf	btemp^0,w,c
  9481  01AFF0  B4D8               	btfsc	status,2,c
  9482  01AFF2  D7F4               	goto	l1606
  9483                           
  9484                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9485  01AFF4  52E5               	movf	postdec1,f,c
  9486  01AFF6  52E5               	movf	postdec1,f,c
  9487  01AFF8  0012               	return		;funcret
  9488  01AFFA                     __end_of_WaitMs:
  9489                           	opt callstack 0
  9490                           
  9491 ;; *************** function _update_lcd *****************
  9492 ;; Defined at:
  9493 ;;		line 85 in file "mconfig.c"
  9494 ;; Parameters:    Size  Location     Type
  9495 ;;  vterm           1  [STACK] unsigned char 
  9496 ;; Auto vars:     Size  Location     Type
  9497 ;;		None
  9498 ;; Return value:  Size  Location     Type
  9499 ;;                  1  [STACK] unsigned char 
  9500 ;; Registers used:
  9501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9502 ;; Tracked objects:
  9503 ;;		On entry : 0/0
  9504 ;;		On exit  : 0/0
  9505 ;;		Unchanged: 0/0
  9506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9511 ;;Total ram usage:        0 bytes
  9512 ;; Hardware stack levels used:    1
  9513 ;; Hardware stack levels required when called:   26
  9514 ;; This function calls:
  9515 ;;		_eaDogM_WriteStringAtPos
  9516 ;;		_wait_lcd_done
  9517 ;; This function is called by:
  9518 ;;		_main
  9519 ;;		_check_help
  9520 ;; This function uses a reentrant model
  9521 ;;
  9522                           
  9523                           	psect	text33
  9524  019262                     __ptext33:
  9525                           	opt callstack 0
  9526  019262                     _update_lcd:
  9527                           	opt callstack 4
  9528                           
  9529                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9530                           ;stkvar	_vterm @ sp[(0)+-1]
  9531                           
  9532                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9533                           ;incstack = 0
  9534  019262  0EFF               	movlw	-1
  9535  019264  006F FF8C  F026    	movff	plusw1,btemp
  9536  01926A  0E03               	movlw	3
  9537  01926C  1626               	andwf	btemp^0,f,c
  9538  01926E  0EFF               	movlw	-1
  9539  019270  0060  F09B  FFE3   	movff	btemp,plusw1
  9540                           
  9541                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9542  019276  EE22  F1DF         	lfsr	2,_D+480
  9543  01927A  A0DF               	btfss	indf2,0,c
  9544  01927C  D004               	goto	l12497
  9545                           
  9546                           ;stkvar	_vterm @ sp[(0)+-1]
  9547  01927E  0EFF               	movlw	-1
  9548  019280  50E3               	movf	plusw1,w,c
  9549  019282  B4D8               	btfsc	status,2,c
  9550  019284  D074               	goto	l1682
  9551  019286                     l12497:
  9552                           
  9553                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  9554                           ;stkvar	_vterm @ sp[(0)+-1]
  9555  019286  0EFF               	movlw	-1
  9556  019288  50E3               	movf	plusw1,w,c
  9557  01928A  0D78               	mullw	120
  9558  01928C  0E0F               	movlw	low (_D+16)
  9559  01928E  24F3               	addwf	243,w,c
  9560  019290  6ED9               	movwf	fsr2l,c
  9561  019292  0E08               	movlw	high (_D+16)
  9562  019294  20F4               	addwfc	prodh,w,c
  9563  019296  6EDA               	movwf	fsr2h,c
  9564  019298  0E00               	movlw	0
  9565  01929A  6EDF               	movwf	indf2,c
  9566                           
  9567                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  9568                           ;stkvar	_vterm @ sp[(0)+-1]
  9569  01929C  0EFF               	movlw	-1
  9570  01929E  50E3               	movf	plusw1,w,c
  9571  0192A0  0D78               	mullw	120
  9572  0192A2  0E37               	movlw	low (_D+56)
  9573  0192A4  24F3               	addwf	243,w,c
  9574  0192A6  6ED9               	movwf	fsr2l,c
  9575  0192A8  0E08               	movlw	high (_D+56)
  9576  0192AA  20F4               	addwfc	prodh,w,c
  9577  0192AC  6EDA               	movwf	fsr2h,c
  9578  0192AE  0E00               	movlw	0
  9579  0192B0  6EDF               	movwf	indf2,c
  9580                           
  9581                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  9582                           ;stkvar	_vterm @ sp[(0)+-1]
  9583  0192B2  0EFF               	movlw	-1
  9584  0192B4  50E3               	movf	plusw1,w,c
  9585  0192B6  0D78               	mullw	120
  9586  0192B8  0E5F               	movlw	low (_D+96)
  9587  0192BA  24F3               	addwf	243,w,c
  9588  0192BC  6ED9               	movwf	fsr2l,c
  9589  0192BE  0E08               	movlw	high (_D+96)
  9590  0192C0  20F4               	addwfc	prodh,w,c
  9591  0192C2  6EDA               	movwf	fsr2h,c
  9592  0192C4  0E00               	movlw	0
  9593  0192C6  6EDF               	movwf	indf2,c
  9594                           
  9595                           ;mconfig.c: 95:  wait_lcd_done();
  9596  0192C8  EC7F  F0DB         	call	_wait_lcd_done	;wreg free
  9597                           
  9598                           ; BSR set to: 0
  9599                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  9600                           ;stkvar	_vterm @ sp[(0)+-1]
  9601  0192CC  0EFF               	movlw	-1
  9602  0192CE  50E3               	movf	plusw1,w,c
  9603  0192D0  0D78               	mullw	120
  9604  0192D2  0EFF               	movlw	low _D
  9605  0192D4  6E30               	movwf	(btemp+10)^0,c
  9606  0192D6  0E07               	movlw	high _D
  9607  0192D8  6E31               	movwf	(btemp+11)^0,c
  9608  0192DA  50F3               	movf	243,w,c
  9609  0192DC  2630               	addwf	(btemp+10)^0,f,c
  9610  0192DE  50F4               	movf	244,w,c
  9611  0192E0  2231               	addwfc	(btemp+11)^0,f,c
  9612  0192E2  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  9613  0192E8  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  9614  0192EE  0E00               	movlw	0
  9615  0192F0  6EE6               	movwf	postinc1,c
  9616  0192F2  0E00               	movlw	0
  9617  0192F4  6EE6               	movwf	postinc1,c
  9618  0192F6  ECFD  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9619                           
  9620                           ; BSR set to: 59
  9621                           ;mconfig.c: 97:  wait_lcd_done();
  9622  0192FA  EC7F  F0DB         	call	_wait_lcd_done	;wreg free
  9623                           
  9624                           ; BSR set to: 0
  9625                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  9626                           ;stkvar	_vterm @ sp[(0)+-1]
  9627  0192FE  0EFF               	movlw	-1
  9628  019300  50E3               	movf	plusw1,w,c
  9629  019302  0D78               	mullw	120
  9630  019304  0EFF               	movlw	low _D
  9631  019306  6E30               	movwf	(btemp+10)^0,c
  9632  019308  0E07               	movlw	high _D
  9633  01930A  6E31               	movwf	(btemp+11)^0,c
  9634  01930C  0E28               	movlw	40
  9635  01930E  2630               	addwf	(btemp+10)^0,f,c
  9636  019310  0E00               	movlw	0
  9637  019312  2231               	addwfc	(btemp+11)^0,f,c
  9638  019314  50F3               	movf	243,w,c
  9639  019316  2630               	addwf	(btemp+10)^0,f,c
  9640  019318  50F4               	movf	244,w,c
  9641  01931A  2231               	addwfc	(btemp+11)^0,f,c
  9642  01931C  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  9643  019322  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  9644  019328  0E00               	movlw	0
  9645  01932A  6EE6               	movwf	postinc1,c
  9646  01932C  0E01               	movlw	1
  9647  01932E  6EE6               	movwf	postinc1,c
  9648  019330  ECFD  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9649                           
  9650                           ; BSR set to: 59
  9651                           ;mconfig.c: 99:  wait_lcd_done();
  9652  019334  EC7F  F0DB         	call	_wait_lcd_done	;wreg free
  9653                           
  9654                           ; BSR set to: 0
  9655                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  9656                           ;stkvar	_vterm @ sp[(0)+-1]
  9657  019338  0EFF               	movlw	-1
  9658  01933A  50E3               	movf	plusw1,w,c
  9659  01933C  0D78               	mullw	120
  9660  01933E  0EFF               	movlw	low _D
  9661  019340  6E30               	movwf	(btemp+10)^0,c
  9662  019342  0E07               	movlw	high _D
  9663  019344  6E31               	movwf	(btemp+11)^0,c
  9664  019346  0E50               	movlw	80
  9665  019348  2630               	addwf	(btemp+10)^0,f,c
  9666  01934A  0E00               	movlw	0
  9667  01934C  2231               	addwfc	(btemp+11)^0,f,c
  9668  01934E  50F3               	movf	243,w,c
  9669  019350  2630               	addwf	(btemp+10)^0,f,c
  9670  019352  50F4               	movf	244,w,c
  9671  019354  2231               	addwfc	(btemp+11)^0,f,c
  9672  019356  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  9673  01935C  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  9674  019362  0E00               	movlw	0
  9675  019364  6EE6               	movwf	postinc1,c
  9676  019366  0E02               	movlw	2
  9677  019368  6EE6               	movwf	postinc1,c
  9678  01936A  ECFD  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9679  01936E                     l1682:
  9680                           
  9681                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9682  01936E  52E5               	movf	postdec1,f,c
  9683  019370  0012               	return		;funcret
  9684  019372                     __end_of_update_lcd:
  9685                           	opt callstack 0
  9686                           
  9687 ;; *************** function _eaDogM_WriteStringAtPos *****************
  9688 ;; Defined at:
  9689 ;;		line 278 in file "eadog.c"
  9690 ;; Parameters:    Size  Location     Type
  9691 ;;  r               1  [STACK] const unsigned char 
  9692 ;;  c               1  [STACK] const unsigned char 
  9693 ;;  strPtr          2  [STACK] PTR unsigned char 
  9694 ;;		 -> D.lcd(480), D(482), V(190), 
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;		None
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  1  [STACK] void 
  9699 ;; Registers used:
  9700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9701 ;; Tracked objects:
  9702 ;;		On entry : 3F/0
  9703 ;;		On exit  : 3F/3B
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9710 ;;Total ram usage:        0 bytes
  9711 ;; Hardware stack levels used:    1
  9712 ;; Hardware stack levels required when called:   25
  9713 ;; This function calls:
  9714 ;;		_eaDogM_WriteString
  9715 ;;		_send_lcd_cmd_dma
  9716 ;; This function is called by:
  9717 ;;		_update_lcd
  9718 ;;		_vterm_dump
  9719 ;; This function uses a reentrant model
  9720 ;;
  9721                           
  9722                           	psect	text34
  9723  01AFFA                     __ptext34:
  9724                           	opt callstack 0
  9725  01AFFA                     _eaDogM_WriteStringAtPos:
  9726                           	opt callstack 4
  9727                           
  9728                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  9729                           ;stkvar	_c @ sp[(0)+-2]
  9730                           
  9731                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9732                           ;incstack = 0
  9733  01AFFA  0EFE               	movlw	-2
  9734  01AFFC  006F FF8C  F031    	movff	plusw1,btemp+11
  9735                           
  9736                           ;stkvar	_r @ sp[(0)+-1]
  9737  01B002  0EFF               	movlw	-1
  9738  01B004  50E3               	movf	plusw1,w,c
  9739  01B006  0D10               	mullw	16
  9740  01B008  50F3               	movf	243,w,c
  9741  01B00A  2431               	addwf	(btemp+11)^0,w,c
  9742  01B00C  0F80               	addlw	128
  9743  01B00E  6EE6               	movwf	postinc1,c
  9744  01B010  EC11  F0D5         	call	_send_lcd_cmd_dma	;wreg free
  9745                           
  9746                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  9747                           ;stkvar	_strPtr @ sp[(0)+-4]
  9748  01B014  0EFC               	movlw	-4
  9749  01B016  006F FF8F FFE6     	movff	plusw1,postinc1
  9750  01B01C  006F FF8F FFE6     	movff	plusw1,postinc1
  9751  01B022  EC06  F0D0         	call	_eaDogM_WriteString	;wreg free
  9752                           
  9753                           ; BSR set to: 59
  9754                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  9755  01B026  52E5               	movf	postdec1,f,c
  9756  01B028  52E5               	movf	postdec1,f,c
  9757  01B02A  52E5               	movf	postdec1,f,c
  9758  01B02C  52E5               	movf	postdec1,f,c
  9759  01B02E  0012               	return		;funcret
  9760  01B030                     __end_of_eaDogM_WriteStringAtPos:
  9761                           	opt callstack 0
  9762                           
  9763 ;; *************** function _send_lcd_cmd_dma *****************
  9764 ;; Defined at:
  9765 ;;		line 220 in file "eadog.c"
  9766 ;; Parameters:    Size  Location     Type
  9767 ;;  strPtr          1  [STACK] unsigned char 
  9768 ;; Auto vars:     Size  Location     Type
  9769 ;;		None
  9770 ;; Return value:  Size  Location     Type
  9771 ;;                  1  [STACK] void 
  9772 ;; Registers used:
  9773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/3D
  9776 ;;		On exit  : 3F/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9783 ;;Total ram usage:        0 bytes
  9784 ;; Hardware stack levels used:    1
  9785 ;; Hardware stack levels required when called:   24
  9786 ;; This function calls:
  9787 ;;		_printf
  9788 ;;		_ringBufS_flush
  9789 ;;		_start_lcd
  9790 ;;		_wait_lcd_done
  9791 ;;		_wait_lcd_set
  9792 ;; This function is called by:
  9793 ;;		_eaDogM_WriteCommand
  9794 ;;		_eaDogM_WriteStringAtPos
  9795 ;; This function uses a reentrant model
  9796 ;;
  9797                           
  9798                           	psect	text35
  9799  01AA22                     __ptext35:
  9800                           	opt callstack 0
  9801  01AA22                     _send_lcd_cmd_dma:
  9802                           	opt callstack 4
  9803                           
  9804                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  9805                           
  9806                           ; BSR set to: 59
  9807                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9808                           ;incstack = 0
  9809  01AA22  EC5C  F0DC         	call	_wait_lcd_set	;wreg free
  9810                           
  9811                           ; BSR set to: 0
  9812                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  9813  01AA26  0E00               	movlw	0
  9814  01AA28  6EE6               	movwf	postinc1,c
  9815  01AA2A  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9816  01AA30  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9817  01AA36  EC89  F0D1         	call	_ringBufS_flush	;wreg free
  9818  01AA3A  92BC               	bcf	188,1,c	;volatile
  9819  01AA3C  94BC               	bcf	188,2,c	;volatile
  9820                           
  9821                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  9822  01AA3E  013B               	movlb	59	; () banked
  9823  01AA40  9FFC               	bcf	252,7,b	;volatile
  9824                           
  9825                           ; BSR set to: 59
  9826                           ;eadog.c: 229:  DMA1SSZ = 1;
  9827  01AA42  0E00               	movlw	0
  9828  01AA44  6FF8               	movwf	248,b	;volatile
  9829  01AA46  0E01               	movlw	1
  9830  01AA48  6FF7               	movwf	247,b	;volatile
  9831                           
  9832                           ; BSR set to: 59
  9833                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  9834  01AA4A  8FFC               	bsf	252,7,b	;volatile
  9835                           
  9836                           ; BSR set to: 59
  9837                           ;eadog.c: 231:  printf("%c", strPtr);
  9838                           ;stkvar	_strPtr @ sp[(0)+-1]
  9839  01AA4C  0EFF               	movlw	-1
  9840  01AA4E  50E3               	movf	plusw1,w,c
  9841  01AA50  6EE6               	movwf	postinc1,c
  9842  01AA52  0E00               	movlw	0
  9843  01AA54  6EE6               	movwf	postinc1,c
  9844  01AA56  0EF8               	movlw	low STR_44
  9845  01AA58  6EE6               	movwf	postinc1,c
  9846  01AA5A  0EFF               	movlw	high STR_44
  9847  01AA5C  6EE6               	movwf	postinc1,c
  9848  01AA5E  0E04               	movlw	4
  9849  01AA60  6EE6               	movwf	postinc1,c
  9850  01AA62  EC26  F0D4         	call	_printf	;wreg free
  9851                           
  9852                           ; BSR set to: 0
  9853                           ;eadog.c: 232:  start_lcd();
  9854  01AA66  EC5F  F0DC         	call	_start_lcd	;wreg free
  9855                           
  9856                           ; BSR set to: 59
  9857                           ;eadog.c: 233:  wait_lcd_done();
  9858  01AA6A  EC7F  F0DB         	call	_wait_lcd_done	;wreg free
  9859                           
  9860                           ; BSR set to: 0
  9861  01AA6E  82BC               	bsf	188,1,c	;volatile
  9862                           
  9863                           ; BSR set to: 0
  9864                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9865  01AA70  52E5               	movf	postdec1,f,c
  9866  01AA72  0012               	return		;funcret
  9867  01AA74                     __end_of_send_lcd_cmd_dma:
  9868                           	opt callstack 0
  9869                           
  9870 ;; *************** function _wait_lcd_done *****************
  9871 ;; Defined at:
  9872 ;;		line 156 in file "eadog.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;		None
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;		None
  9877 ;; Return value:  Size  Location     Type
  9878 ;;                  1  [STACK] void 
  9879 ;; Registers used:
  9880 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9881 ;; Tracked objects:
  9882 ;;		On entry : 0/0
  9883 ;;		On exit  : 3F/0
  9884 ;;		Unchanged: 0/0
  9885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9890 ;;Total ram usage:        0 bytes
  9891 ;; Hardware stack levels used:    1
  9892 ;; Hardware stack levels required when called:   16
  9893 ;; This function calls:
  9894 ;;		_wdtdelay
  9895 ;; This function is called by:
  9896 ;;		_send_lcd_cmd_dma
  9897 ;;		_update_lcd
  9898 ;;		_vterm_dump
  9899 ;; This function uses a reentrant model
  9900 ;;
  9901                           
  9902                           	psect	text36
  9903  01B6FE                     __ptext36:
  9904                           	opt callstack 0
  9905  01B6FE                     _wait_lcd_done:
  9906                           	opt callstack 13
  9907                           
  9908                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  9909                           
  9910                           ; BSR set to: 0
  9911                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9912                           ;incstack = 0
  9913  01B6FE  0100               	movlb	0	; () banked
  9914  01B700  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
  9915  01B702  D7FD               	goto	_wait_lcd_done
  9916                           
  9917                           ; BSR set to: 0
  9918                           ;eadog.c: 159:  wdtdelay(50);
  9919  01B704  0E32               	movlw	50
  9920  01B706  6EE6               	movwf	postinc1,c
  9921  01B708  0E00               	movlw	0
  9922  01B70A  6EE6               	movwf	postinc1,c
  9923  01B70C  0E00               	movlw	0
  9924  01B70E  6EE6               	movwf	postinc1,c
  9925  01B710  0E00               	movlw	0
  9926  01B712  6EE6               	movwf	postinc1,c
  9927  01B714  ECB7  F0D4         	call	_wdtdelay	;wreg free
  9928                           
  9929                           ; BSR set to: 0
  9930                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9931  01B718  0012               	return		;funcret
  9932  01B71A                     __end_of_wait_lcd_done:
  9933                           	opt callstack 0
  9934                           
  9935 ;; *************** function _wdtdelay *****************
  9936 ;; Defined at:
  9937 ;;		line 23 in file "eadog.c"
  9938 ;; Parameters:    Size  Location     Type
  9939 ;;  delay           4  [STACK] const unsigned long 
  9940 ;; Auto vars:     Size  Location     Type
  9941 ;;		None
  9942 ;; Return value:  Size  Location     Type
  9943 ;;                  1  [STACK] void 
  9944 ;; Registers used:
  9945 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9946 ;; Tracked objects:
  9947 ;;		On entry : 0/0
  9948 ;;		On exit  : 3F/0
  9949 ;;		Unchanged: 0/0
  9950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9955 ;;Total ram usage:        0 bytes
  9956 ;; Hardware stack levels used:    1
  9957 ;; Hardware stack levels required when called:   15
  9958 ;; This function calls:
  9959 ;;		Nothing
  9960 ;; This function is called by:
  9961 ;;		_init_display
  9962 ;;		_send_lcd_cmd
  9963 ;;		_send_lcd_cmd_long
  9964 ;;		_wait_lcd_done
  9965 ;; This function uses a reentrant model
  9966 ;;
  9967                           
  9968                           	psect	text37
  9969  01A96E                     __ptext37:
  9970                           	opt callstack 0
  9971  01A96E                     _wdtdelay:
  9972                           	opt callstack 13
  9973                           
  9974                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  9975                           
  9976                           ; BSR set to: 0
  9977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9978                           ;incstack = 0
  9979  01A96E  0100               	movlb	0	; () banked
  9980  01A970  6B92               	clrf	wdtdelay@dcount& (0+255),b
  9981  01A972  6B93               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9982  01A974  6B94               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9983  01A976  6B95               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9984  01A978                     l1447:
  9985                           
  9986                           ; BSR set to: 0
  9987                           ;eadog.c: 28:   __nop();
  9988  01A978  F000               	nop	
  9989  01A97A  0004               	clrwdt		;# 
  9990                           
  9991                           ;eadog.c: 30:  };
  9992  01A97C  0E01               	movlw	1
  9993  01A97E  0100               	movlb	0	; () banked
  9994  01A980  2792               	addwf	wdtdelay@dcount& (0+255),f,b
  9995  01A982  0E00               	movlw	0
  9996  01A984  2393               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9997  01A986  2394               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9998  01A988  2395               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9999                           
 10000                           ; BSR set to: 0
 10001                           ;stkvar	_delay @ sp[(0)+-4]
 10002  01A98A  0EFC               	movlw	-4
 10003  01A98C  006F FF8C  F026    	movff	plusw1,btemp
 10004  01A992  5192               	movf	wdtdelay@dcount& (0+255),w,b
 10005  01A994  5C26               	subwf	btemp^0,w,c
 10006  01A996  0EFD               	movlw	-3
 10007  01A998  006F FF8C  F026    	movff	plusw1,btemp
 10008  01A99E  5193               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10009  01A9A0  5826               	subwfb	btemp^0,w,c
 10010  01A9A2  0EFE               	movlw	-2
 10011  01A9A4  006F FF8C  F026    	movff	plusw1,btemp
 10012  01A9AA  5194               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10013  01A9AC  5826               	subwfb	btemp^0,w,c
 10014  01A9AE  0EFF               	movlw	-1
 10015  01A9B0  006F FF8C  F026    	movff	plusw1,btemp
 10016  01A9B6  5195               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10017  01A9B8  5826               	subwfb	btemp^0,w,c
 10018  01A9BA  B0D8               	btfsc	status,0,c
 10019  01A9BC  D7DD               	goto	l1447
 10020                           
 10021                           ; BSR set to: 0
 10022                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10023  01A9BE  52E5               	movf	postdec1,f,c
 10024  01A9C0  52E5               	movf	postdec1,f,c
 10025  01A9C2  52E5               	movf	postdec1,f,c
 10026  01A9C4  52E5               	movf	postdec1,f,c
 10027  01A9C6  0012               	return		;funcret
 10028  01A9C8                     __end_of_wdtdelay:
 10029                           	opt callstack 0
 10030                           
 10031 ;; *************** function _eaDogM_WriteString *****************
 10032 ;; Defined at:
 10033 ;;		line 199 in file "eadog.c"
 10034 ;; Parameters:    Size  Location     Type
 10035 ;;  strPtr          2  [STACK] PTR unsigned char 
 10036 ;;		 -> D.lcd(480), D(482), V(190), 
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;		None
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  1  [STACK] void 
 10041 ;; Registers used:
 10042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10043 ;; Tracked objects:
 10044 ;;		On entry : 3F/0
 10045 ;;		On exit  : 3F/3B
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10052 ;;Total ram usage:        0 bytes
 10053 ;; Hardware stack levels used:    1
 10054 ;; Hardware stack levels required when called:   24
 10055 ;; This function calls:
 10056 ;;		_printf
 10057 ;;		_ringBufS_flush
 10058 ;;		_start_lcd
 10059 ;;		_strlen
 10060 ;;		_wait_lcd_set
 10061 ;; This function is called by:
 10062 ;;		_eaDogM_WriteStringAtPos
 10063 ;; This function uses a reentrant model
 10064 ;;
 10065                           
 10066                           	psect	text38
 10067  01A00C                     __ptext38:
 10068                           	opt callstack 0
 10069  01A00C                     _eaDogM_WriteString:
 10070                           	opt callstack 4
 10071                           
 10072                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
 10073                           
 10074                           ; BSR set to: 0
 10075                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10076                           ;incstack = 0
 10077  01A00C  EC5C  F0DC         	call	_wait_lcd_set	;wreg free
 10078                           
 10079                           ; BSR set to: 0
 10080                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
 10081  01A010  0E00               	movlw	0
 10082  01A012  6EE6               	movwf	postinc1,c
 10083  01A014  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10084  01A01A  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10085  01A020  EC89  F0D1         	call	_ringBufS_flush	;wreg free
 10086  01A024  94BC               	bcf	188,2,c	;volatile
 10087                           
 10088                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10089                           ;stkvar	_strPtr @ sp[(0)+-2]
 10090  01A026  0EFE               	movlw	-2
 10091  01A028  006F FF8F FFE6     	movff	plusw1,postinc1
 10092  01A02E  006F FF8F FFE6     	movff	plusw1,postinc1
 10093  01A034  EC59  F0D0         	call	_strlen	;wreg free
 10094  01A038  5027               	movf	(btemp+1)^0,w,c
 10095  01A03A  E104               	bnz	u11990
 10096  01A03C  0E41               	movlw	65
 10097  01A03E  5C26               	subwf	btemp^0,w,c
 10098  01A040  A0D8               	btfss	status,0,c
 10099  01A042  D010               	goto	l12409
 10100  01A044                     u11990:
 10101                           
 10102                           ;stkvar	_strPtr @ sp[(0)+-2]
 10103  01A044  0EFE               	movlw	-2
 10104  01A046  006F FF8C  F030    	movff	plusw1,btemp+10
 10105  01A04C  0EFF               	movlw	-1
 10106  01A04E  006F FF8C  F031    	movff	plusw1,btemp+11
 10107  01A054  0E40               	movlw	64
 10108  01A056  2430               	addwf	(btemp+10)^0,w,c
 10109  01A058  6ED9               	movwf	fsr2l,c
 10110  01A05A  0E00               	movlw	0
 10111  01A05C  2031               	addwfc	(btemp+11)^0,w,c
 10112  01A05E  6EDA               	movwf	fsr2h,c
 10113  01A060  0E00               	movlw	0
 10114  01A062  6EDF               	movwf	indf2,c
 10115  01A064                     l12409:
 10116                           
 10117                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
 10118  01A064  013B               	movlb	59	; () banked
 10119  01A066  9FFC               	bcf	252,7,b	;volatile
 10120                           
 10121                           ; BSR set to: 59
 10122                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
 10123                           ;stkvar	_strPtr @ sp[(0)+-2]
 10124  01A068  0EFE               	movlw	-2
 10125  01A06A  006F FF8F FFE6     	movff	plusw1,postinc1
 10126  01A070  006F FF8F FFE6     	movff	plusw1,postinc1
 10127  01A076  EC59  F0D0         	call	_strlen	;wreg free
 10128  01A07A  0060  F09B  FBF7   	movff	btemp,15351	;volatile
 10129  01A080  0060  F09F  FBF8   	movff	btemp+1,15352	;volatile
 10130                           
 10131                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
 10132  01A086  013B               	movlb	59	; () banked
 10133  01A088  8FFC               	bsf	252,7,b	;volatile
 10134                           
 10135                           ; BSR set to: 59
 10136                           ;eadog.c: 210:  printf("%s", strPtr);
 10137                           ;stkvar	_strPtr @ sp[(0)+-2]
 10138  01A08A  0EFE               	movlw	-2
 10139  01A08C  006F FF8F FFE6     	movff	plusw1,postinc1
 10140  01A092  006F FF8F FFE6     	movff	plusw1,postinc1
 10141  01A098  0EFB               	movlw	low STR_43
 10142  01A09A  6EE6               	movwf	postinc1,c
 10143  01A09C  0EFF               	movlw	high STR_43
 10144  01A09E  6EE6               	movwf	postinc1,c
 10145  01A0A0  0E04               	movlw	4
 10146  01A0A2  6EE6               	movwf	postinc1,c
 10147  01A0A4  EC26  F0D4         	call	_printf	;wreg free
 10148                           
 10149                           ; BSR set to: 0
 10150                           ;eadog.c: 211:  start_lcd();
 10151  01A0A8  EC5F  F0DC         	call	_start_lcd	;wreg free
 10152                           
 10153                           ; BSR set to: 59
 10154                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10155  01A0AC  52E5               	movf	postdec1,f,c
 10156  01A0AE  52E5               	movf	postdec1,f,c
 10157  01A0B0  0012               	return		;funcret
 10158  01A0B2                     __end_of_eaDogM_WriteString:
 10159                           	opt callstack 0
 10160                           
 10161 ;; *************** function _wait_lcd_set *****************
 10162 ;; Defined at:
 10163 ;;		line 146 in file "eadog.c"
 10164 ;; Parameters:    Size  Location     Type
 10165 ;;		None
 10166 ;; Auto vars:     Size  Location     Type
 10167 ;;		None
 10168 ;; Return value:  Size  Location     Type
 10169 ;;                  1  [STACK] void 
 10170 ;; Registers used:
 10171 ;;		None
 10172 ;; Tracked objects:
 10173 ;;		On entry : 0/3D
 10174 ;;		On exit  : 3F/0
 10175 ;;		Unchanged: 0/0
 10176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10181 ;;Total ram usage:        0 bytes
 10182 ;; Hardware stack levels used:    1
 10183 ;; Hardware stack levels required when called:   15
 10184 ;; This function calls:
 10185 ;;		Nothing
 10186 ;; This function is called by:
 10187 ;;		_eaDogM_WriteString
 10188 ;;		_send_lcd_cmd_dma
 10189 ;; This function uses a reentrant model
 10190 ;;
 10191                           
 10192                           	psect	text39
 10193  01B8B8                     __ptext39:
 10194                           	opt callstack 0
 10195  01B8B8                     _wait_lcd_set:
 10196                           	opt callstack 12
 10197                           
 10198                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
 10199                           
 10200                           ; BSR set to: 59
 10201                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10202                           ;incstack = 0
 10203  01B8B8  0100               	movlb	0	; () banked
 10204  01B8BA  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10205                           
 10206                           ; BSR set to: 0
 10207                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10208  01B8BC  0012               	return		;funcret
 10209  01B8BE                     __end_of_wait_lcd_set:
 10210                           	opt callstack 0
 10211                           
 10212 ;; *************** function _start_lcd *****************
 10213 ;; Defined at:
 10214 ;;		line 141 in file "eadog.c"
 10215 ;; Parameters:    Size  Location     Type
 10216 ;;		None
 10217 ;; Auto vars:     Size  Location     Type
 10218 ;;		None
 10219 ;; Return value:  Size  Location     Type
 10220 ;;                  1  [STACK] void 
 10221 ;; Registers used:
 10222 ;;		None
 10223 ;; Tracked objects:
 10224 ;;		On entry : 3F/0
 10225 ;;		On exit  : 3F/3B
 10226 ;;		Unchanged: 0/0
 10227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10232 ;;Total ram usage:        0 bytes
 10233 ;; Hardware stack levels used:    1
 10234 ;; Hardware stack levels required when called:   15
 10235 ;; This function calls:
 10236 ;;		Nothing
 10237 ;; This function is called by:
 10238 ;;		_eaDogM_WriteString
 10239 ;;		_send_lcd_cmd_dma
 10240 ;; This function uses a reentrant model
 10241 ;;
 10242                           
 10243                           	psect	text40
 10244  01B8BE                     __ptext40:
 10245                           	opt callstack 0
 10246  01B8BE                     _start_lcd:
 10247                           	opt callstack 12
 10248                           
 10249                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
 10250                           
 10251                           ; BSR set to: 0
 10252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10253                           ;incstack = 0
 10254  01B8BE  013B               	movlb	59	; () banked
 10255  01B8C0  8DFC               	bsf	252,6,b	;volatile
 10256                           
 10257                           ; BSR set to: 59
 10258                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10259  01B8C2  0012               	return		;funcret
 10260  01B8C4                     __end_of_start_lcd:
 10261                           	opt callstack 0
 10262                           
 10263 ;; *************** function _ringBufS_flush *****************
 10264 ;; Defined at:
 10265 ;;		line 76 in file "ringbufs.c"
 10266 ;; Parameters:    Size  Location     Type
 10267 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10268 ;;		 -> ring_buf1(67), 
 10269 ;;  clearBuffer     1  [STACK] const char 
 10270 ;; Auto vars:     Size  Location     Type
 10271 ;;		None
 10272 ;; Return value:  Size  Location     Type
 10273 ;;                  1  [STACK] void 
 10274 ;; Registers used:
 10275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10276 ;; Tracked objects:
 10277 ;;		On entry : 3F/0
 10278 ;;		On exit  : 0/0
 10279 ;;		Unchanged: 0/0
 10280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10285 ;;Total ram usage:        0 bytes
 10286 ;; Hardware stack levels used:    1
 10287 ;; Hardware stack levels required when called:   16
 10288 ;; This function calls:
 10289 ;;		_memset
 10290 ;; This function is called by:
 10291 ;;		_eaDogM_WriteString
 10292 ;;		_send_lcd_cmd_dma
 10293 ;; This function uses a reentrant model
 10294 ;;
 10295                           
 10296                           	psect	text41
 10297  01A312                     __ptext41:
 10298                           	opt callstack 0
 10299  01A312                     _ringBufS_flush:
 10300                           	opt callstack 11
 10301                           
 10302                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10303                           ;stkvar	__this @ sp[(0)+-2]
 10304                           
 10305                           ; BSR set to: 59
 10306                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10307                           ;incstack = 0
 10308  01A312  0EFE               	movlw	-2
 10309  01A314  006F FF8C  F030    	movff	plusw1,btemp+10
 10310  01A31A  0EFF               	movlw	-1
 10311  01A31C  006F FF8C  F031    	movff	plusw1,btemp+11
 10312  01A322  0E42               	movlw	66
 10313  01A324  2430               	addwf	(btemp+10)^0,w,c
 10314  01A326  6ED9               	movwf	fsr2l,c
 10315  01A328  0E00               	movlw	0
 10316  01A32A  2031               	addwfc	(btemp+11)^0,w,c
 10317  01A32C  6EDA               	movwf	fsr2h,c
 10318  01A32E  0E00               	movlw	0
 10319  01A330  6EDF               	movwf	indf2,c
 10320                           
 10321                           ;ringbufs.c: 79:  _this->head = 0;
 10322                           ;stkvar	__this @ sp[(0)+-2]
 10323  01A332  0EFE               	movlw	-2
 10324  01A334  006F FF8C  F030    	movff	plusw1,btemp+10
 10325  01A33A  0EFF               	movlw	-1
 10326  01A33C  006F FF8C  F031    	movff	plusw1,btemp+11
 10327  01A342  0E40               	movlw	64
 10328  01A344  2430               	addwf	(btemp+10)^0,w,c
 10329  01A346  6ED9               	movwf	fsr2l,c
 10330  01A348  0E00               	movlw	0
 10331  01A34A  2031               	addwfc	(btemp+11)^0,w,c
 10332  01A34C  6EDA               	movwf	fsr2h,c
 10333  01A34E  0E00               	movlw	0
 10334  01A350  6EDF               	movwf	indf2,c
 10335                           
 10336                           ;ringbufs.c: 80:  _this->tail = 0;
 10337                           ;stkvar	__this @ sp[(0)+-2]
 10338  01A352  0EFE               	movlw	-2
 10339  01A354  006F FF8C  F030    	movff	plusw1,btemp+10
 10340  01A35A  0EFF               	movlw	-1
 10341  01A35C  006F FF8C  F031    	movff	plusw1,btemp+11
 10342  01A362  0E41               	movlw	65
 10343  01A364  2430               	addwf	(btemp+10)^0,w,c
 10344  01A366  6ED9               	movwf	fsr2l,c
 10345  01A368  0E00               	movlw	0
 10346  01A36A  2031               	addwfc	(btemp+11)^0,w,c
 10347  01A36C  6EDA               	movwf	fsr2h,c
 10348  01A36E  0E00               	movlw	0
 10349  01A370  6EDF               	movwf	indf2,c
 10350                           
 10351                           ;ringbufs.c: 81:  if (clearBuffer) {
 10352                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10353  01A372  0EFD               	movlw	-3
 10354  01A374  50E3               	movf	plusw1,w,c
 10355  01A376  B4D8               	btfsc	status,2,c
 10356  01A378  D011               	goto	l1591
 10357                           
 10358                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10359  01A37A  0E40               	movlw	64
 10360  01A37C  6EE6               	movwf	postinc1,c
 10361  01A37E  0E00               	movlw	0
 10362  01A380  6EE6               	movwf	postinc1,c
 10363  01A382  0E00               	movlw	0
 10364  01A384  6EE6               	movwf	postinc1,c
 10365  01A386  0E00               	movlw	0
 10366  01A388  6EE6               	movwf	postinc1,c
 10367                           
 10368                           ;stkvar	__this @ sp[(-4)+-2]
 10369  01A38A  0EFA               	movlw	-6
 10370  01A38C  006F FF8F FFE6     	movff	plusw1,postinc1
 10371  01A392  006F FF8F FFE6     	movff	plusw1,postinc1
 10372  01A398  EC2C  F0B3         	call	_memset	;wreg free
 10373  01A39C                     l1591:
 10374                           
 10375                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10376  01A39C  52E5               	movf	postdec1,f,c
 10377  01A39E  52E5               	movf	postdec1,f,c
 10378  01A3A0  52E5               	movf	postdec1,f,c
 10379  01A3A2  0012               	return		;funcret
 10380  01A3A4                     __end_of_ringBufS_flush:
 10381                           	opt callstack 0
 10382                           
 10383 ;; *************** function _memset *****************
 10384 ;; Defined at:
 10385 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 10386 ;; Parameters:    Size  Location     Type
 10387 ;;  dest            2  [STACK] PTR void 
 10388 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10389 ;;  c               2  [STACK] int 
 10390 ;;  n               2  [STACK] unsigned int 
 10391 ;; Auto vars:     Size  Location     Type
 10392 ;;  s               2  [STACK] PTR unsigned char 
 10393 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10394 ;;  k               2  [STACK] unsigned int 
 10395 ;; Return value:  Size  Location     Type
 10396 ;;                  2  [STACK] PTR void 
 10397 ;; Registers used:
 10398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10399 ;; Tracked objects:
 10400 ;;		On entry : 0/0
 10401 ;;		On exit  : 0/0
 10402 ;;		Unchanged: 0/0
 10403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10408 ;;Total ram usage:        0 bytes
 10409 ;; Hardware stack levels used:    1
 10410 ;; Hardware stack levels required when called:   15
 10411 ;; This function calls:
 10412 ;;		Nothing
 10413 ;; This function is called by:
 10414 ;;		_ringBufS_init
 10415 ;;		_ringBufS_flush
 10416 ;; This function uses a reentrant model
 10417 ;;
 10418                           
 10419                           	psect	text42
 10420  016658                     __ptext42:
 10421                           	opt callstack 0
 10422  016658                     _memset:
 10423                           	opt callstack 0
 10424                           
 10425                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10426  016658  52E6               	movf	postinc1,f,c
 10427  01665A  52E6               	movf	postinc1,f,c
 10428  01665C  52E6               	movf	postinc1,f,c
 10429  01665E  52E6               	movf	postinc1,f,c
 10430                           
 10431                           ;stkvar	_dest @ sp[(-4)+-2]
 10432                           
 10433                           ;incstack = 0
 10434  016660  0EFA               	movlw	-6
 10435  016662  006F FF8C  F030    	movff	plusw1,btemp+10
 10436  016668  0EFB               	movlw	-5
 10437  01666A  006F FF8C  F031    	movff	plusw1,btemp+11
 10438                           
 10439                           ;stkvar	_s @ sp[(-4)+0]
 10440  016670  0EFD               	movlw	-3
 10441  016672  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 10442  016678  0EFC               	movlw	-4
 10443  01667A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 10444                           
 10445                           ;stkvar	_n @ sp[(-4)+-6]
 10446  016680  0EF6               	movlw	-10
 10447  016682  006F FF8C  F026    	movff	plusw1,btemp
 10448  016688  0EF7               	movlw	-9
 10449  01668A  50E3               	movf	plusw1,w,c
 10450  01668C  1026               	iorwf	btemp^0,w,c
 10451  01668E  B4D8               	btfsc	status,2,c
 10452  016690  D154               	goto	u10600
 10453                           
 10454                           ;stkvar	_c @ sp[(-4)+-4]
 10455                           ;stkvar	_s @ sp[(-4)+0]
 10456  016692  0EFC               	movlw	-4
 10457  016694  006F FF8F FFD9     	movff	plusw1,fsr2l
 10458  01669A  0EFD               	movlw	-3
 10459  01669C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10460  0166A2  0EF8               	movlw	-8
 10461  0166A4  006F FF8F FFDF     	movff	plusw1,indf2
 10462                           
 10463                           ;stkvar	_c @ sp[(-4)+-4]
 10464                           ;stkvar	_n @ sp[(-4)+-6]
 10465                           ;stkvar	_s @ sp[(-4)+0]
 10466  0166AA  0EFC               	movlw	-4
 10467  0166AC  006F FF8C  F030    	movff	plusw1,btemp+10
 10468  0166B2  0EFD               	movlw	-3
 10469  0166B4  006F FF8C  F031    	movff	plusw1,btemp+11
 10470  0166BA  0EF6               	movlw	-10
 10471  0166BC  50E3               	movf	plusw1,w,c
 10472  0166BE  2630               	addwf	(btemp+10)^0,f,c
 10473  0166C0  0EF7               	movlw	-9
 10474  0166C2  50E3               	movf	plusw1,w,c
 10475  0166C4  2231               	addwfc	(btemp+11)^0,f,c
 10476  0166C6  0EFF               	movlw	255
 10477  0166C8  2430               	addwf	(btemp+10)^0,w,c
 10478  0166CA  6ED9               	movwf	fsr2l,c
 10479  0166CC  0EFF               	movlw	255
 10480  0166CE  2031               	addwfc	(btemp+11)^0,w,c
 10481  0166D0  6EDA               	movwf	fsr2h,c
 10482  0166D2  0EF8               	movlw	-8
 10483  0166D4  006F FF8F FFDF     	movff	plusw1,indf2
 10484                           
 10485                           ;stkvar	_n @ sp[(-4)+-6]
 10486  0166DA  0EF7               	movlw	-9
 10487  0166DC  50E3               	movf	plusw1,w,c
 10488  0166DE  E108               	bnz	l11581
 10489  0166E0  0EF6               	movlw	-10
 10490  0166E2  006F FF8C  F026    	movff	plusw1,btemp
 10491  0166E8  0E03               	movlw	3
 10492  0166EA  5E26               	subwf	btemp^0,f,c
 10493  0166EC  A0D8               	btfss	status,0,c
 10494  0166EE  D125               	goto	u10600
 10495  0166F0                     l11581:
 10496                           
 10497                           ;stkvar	_c @ sp[(-4)+-4]
 10498                           ;stkvar	_s @ sp[(-4)+0]
 10499  0166F0  0EFC               	movlw	-4
 10500  0166F2  006F FF8C  F030    	movff	plusw1,btemp+10
 10501  0166F8  0EFD               	movlw	-3
 10502  0166FA  006F FF8C  F031    	movff	plusw1,btemp+11
 10503  016700  0E01               	movlw	1
 10504  016702  2430               	addwf	(btemp+10)^0,w,c
 10505  016704  6ED9               	movwf	fsr2l,c
 10506  016706  0E00               	movlw	0
 10507  016708  2031               	addwfc	(btemp+11)^0,w,c
 10508  01670A  6EDA               	movwf	fsr2h,c
 10509  01670C  0EF8               	movlw	-8
 10510  01670E  006F FF8F FFDF     	movff	plusw1,indf2
 10511                           
 10512                           ;stkvar	_c @ sp[(-4)+-4]
 10513                           ;stkvar	_s @ sp[(-4)+0]
 10514  016714  0EFC               	movlw	-4
 10515  016716  006F FF8C  F030    	movff	plusw1,btemp+10
 10516  01671C  0EFD               	movlw	-3
 10517  01671E  006F FF8C  F031    	movff	plusw1,btemp+11
 10518  016724  0E02               	movlw	2
 10519  016726  2430               	addwf	(btemp+10)^0,w,c
 10520  016728  6ED9               	movwf	fsr2l,c
 10521  01672A  0E00               	movlw	0
 10522  01672C  2031               	addwfc	(btemp+11)^0,w,c
 10523  01672E  6EDA               	movwf	fsr2h,c
 10524  016730  0EF8               	movlw	-8
 10525  016732  006F FF8F FFDF     	movff	plusw1,indf2
 10526                           
 10527                           ;stkvar	_c @ sp[(-4)+-4]
 10528                           ;stkvar	_n @ sp[(-4)+-6]
 10529                           ;stkvar	_s @ sp[(-4)+0]
 10530  016738  0EFC               	movlw	-4
 10531  01673A  006F FF8C  F030    	movff	plusw1,btemp+10
 10532  016740  0EFD               	movlw	-3
 10533  016742  006F FF8C  F031    	movff	plusw1,btemp+11
 10534  016748  0EF6               	movlw	-10
 10535  01674A  50E3               	movf	plusw1,w,c
 10536  01674C  2630               	addwf	(btemp+10)^0,f,c
 10537  01674E  0EF7               	movlw	-9
 10538  016750  50E3               	movf	plusw1,w,c
 10539  016752  2231               	addwfc	(btemp+11)^0,f,c
 10540  016754  0EFE               	movlw	254
 10541  016756  2430               	addwf	(btemp+10)^0,w,c
 10542  016758  6ED9               	movwf	fsr2l,c
 10543  01675A  0EFF               	movlw	255
 10544  01675C  2031               	addwfc	(btemp+11)^0,w,c
 10545  01675E  6EDA               	movwf	fsr2h,c
 10546  016760  0EF8               	movlw	-8
 10547  016762  006F FF8F FFDF     	movff	plusw1,indf2
 10548                           
 10549                           ;stkvar	_c @ sp[(-4)+-4]
 10550                           ;stkvar	_n @ sp[(-4)+-6]
 10551                           ;stkvar	_s @ sp[(-4)+0]
 10552  016768  0EFC               	movlw	-4
 10553  01676A  006F FF8C  F030    	movff	plusw1,btemp+10
 10554  016770  0EFD               	movlw	-3
 10555  016772  006F FF8C  F031    	movff	plusw1,btemp+11
 10556  016778  0EF6               	movlw	-10
 10557  01677A  50E3               	movf	plusw1,w,c
 10558  01677C  2630               	addwf	(btemp+10)^0,f,c
 10559  01677E  0EF7               	movlw	-9
 10560  016780  50E3               	movf	plusw1,w,c
 10561  016782  2231               	addwfc	(btemp+11)^0,f,c
 10562  016784  0EFD               	movlw	253
 10563  016786  2430               	addwf	(btemp+10)^0,w,c
 10564  016788  6ED9               	movwf	fsr2l,c
 10565  01678A  0EFF               	movlw	255
 10566  01678C  2031               	addwfc	(btemp+11)^0,w,c
 10567  01678E  6EDA               	movwf	fsr2h,c
 10568  016790  0EF8               	movlw	-8
 10569  016792  006F FF8F FFDF     	movff	plusw1,indf2
 10570                           
 10571                           ;stkvar	_n @ sp[(-4)+-6]
 10572  016798  0EF7               	movlw	-9
 10573  01679A  50E3               	movf	plusw1,w,c
 10574  01679C  E108               	bnz	l11587
 10575  01679E  0EF6               	movlw	-10
 10576  0167A0  006F FF8C  F026    	movff	plusw1,btemp
 10577  0167A6  0E07               	movlw	7
 10578  0167A8  5E26               	subwf	btemp^0,f,c
 10579  0167AA  A0D8               	btfss	status,0,c
 10580  0167AC  D0C6               	goto	u10600
 10581  0167AE                     l11587:
 10582                           
 10583                           ;stkvar	_c @ sp[(-4)+-4]
 10584                           ;stkvar	_s @ sp[(-4)+0]
 10585  0167AE  0EFC               	movlw	-4
 10586  0167B0  006F FF8C  F030    	movff	plusw1,btemp+10
 10587  0167B6  0EFD               	movlw	-3
 10588  0167B8  006F FF8C  F031    	movff	plusw1,btemp+11
 10589  0167BE  0E03               	movlw	3
 10590  0167C0  2430               	addwf	(btemp+10)^0,w,c
 10591  0167C2  6ED9               	movwf	fsr2l,c
 10592  0167C4  0E00               	movlw	0
 10593  0167C6  2031               	addwfc	(btemp+11)^0,w,c
 10594  0167C8  6EDA               	movwf	fsr2h,c
 10595  0167CA  0EF8               	movlw	-8
 10596  0167CC  006F FF8F FFDF     	movff	plusw1,indf2
 10597                           
 10598                           ;stkvar	_c @ sp[(-4)+-4]
 10599                           ;stkvar	_n @ sp[(-4)+-6]
 10600                           ;stkvar	_s @ sp[(-4)+0]
 10601  0167D2  0EFC               	movlw	-4
 10602  0167D4  006F FF8C  F030    	movff	plusw1,btemp+10
 10603  0167DA  0EFD               	movlw	-3
 10604  0167DC  006F FF8C  F031    	movff	plusw1,btemp+11
 10605  0167E2  0EF6               	movlw	-10
 10606  0167E4  50E3               	movf	plusw1,w,c
 10607  0167E6  2630               	addwf	(btemp+10)^0,f,c
 10608  0167E8  0EF7               	movlw	-9
 10609  0167EA  50E3               	movf	plusw1,w,c
 10610  0167EC  2231               	addwfc	(btemp+11)^0,f,c
 10611  0167EE  0EFC               	movlw	252
 10612  0167F0  2430               	addwf	(btemp+10)^0,w,c
 10613  0167F2  6ED9               	movwf	fsr2l,c
 10614  0167F4  0EFF               	movlw	255
 10615  0167F6  2031               	addwfc	(btemp+11)^0,w,c
 10616  0167F8  6EDA               	movwf	fsr2h,c
 10617  0167FA  0EF8               	movlw	-8
 10618  0167FC  006F FF8F FFDF     	movff	plusw1,indf2
 10619                           
 10620                           ;stkvar	_n @ sp[(-4)+-6]
 10621  016802  0EF7               	movlw	-9
 10622  016804  50E3               	movf	plusw1,w,c
 10623  016806  E108               	bnz	l11593
 10624  016808  0EF6               	movlw	-10
 10625  01680A  006F FF8C  F026    	movff	plusw1,btemp
 10626  016810  0E09               	movlw	9
 10627  016812  5E26               	subwf	btemp^0,f,c
 10628  016814  A0D8               	btfss	status,0,c
 10629  016816  D091               	goto	u10600
 10630  016818                     l11593:
 10631                           
 10632                           ;stkvar	_s @ sp[(-4)+0]
 10633  016818  0EFC               	movlw	-4
 10634  01681A  006F FF8C  F030    	movff	plusw1,btemp+10
 10635  016820  1E30               	comf	(btemp+10)^0,f,c
 10636  016822  0EFD               	movlw	-3
 10637  016824  006F FF8C  F031    	movff	plusw1,btemp+11
 10638  01682A  1E31               	comf	(btemp+11)^0,f,c
 10639  01682C  2A30               	incf	(btemp+10)^0,f,c
 10640  01682E  B4D8               	btfsc	status,2,c
 10641  016830  2A31               	incf	(btemp+11)^0,f,c
 10642  016832  0E03               	movlw	3
 10643  016834  1630               	andwf	(btemp+10)^0,f,c
 10644  016836  0E00               	movlw	0
 10645  016838  1631               	andwf	(btemp+11)^0,f,c
 10646                           
 10647                           ;stkvar	_k @ sp[(-4)+2]
 10648  01683A  0EFE               	movlw	-2
 10649  01683C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 10650  016842  0EFF               	movlw	-1
 10651  016844  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 10652                           
 10653                           ;stkvar	_k @ sp[(-4)+2]
 10654                           ;stkvar	_s @ sp[(-4)+0]
 10655  01684A  0EFC               	movlw	-4
 10656  01684C  50E3               	movf	plusw1,w,c
 10657  01684E  6E26               	movwf	btemp^0,c
 10658  016850  0EFE               	movlw	-2
 10659  016852  50E3               	movf	plusw1,w,c
 10660  016854  2626               	addwf	btemp^0,f,c
 10661  016856  0EFC               	movlw	-4
 10662  016858  0060  F09B  FFE3   	movff	btemp,plusw1
 10663  01685E  0EFD               	movlw	-3
 10664  016860  50E3               	movf	plusw1,w,c
 10665  016862  6E26               	movwf	btemp^0,c
 10666  016864  0EFF               	movlw	-1
 10667  016866  50E3               	movf	plusw1,w,c
 10668  016868  2226               	addwfc	btemp^0,f,c
 10669  01686A  0EFD               	movlw	-3
 10670  01686C  0060  F09B  FFE3   	movff	btemp,plusw1
 10671                           
 10672                           ;stkvar	_k @ sp[(-4)+2]
 10673                           ;stkvar	_n @ sp[(-4)+-6]
 10674  016872  0EF6               	movlw	-10
 10675  016874  50E3               	movf	plusw1,w,c
 10676  016876  6E26               	movwf	btemp^0,c
 10677  016878  0EFE               	movlw	-2
 10678  01687A  50E3               	movf	plusw1,w,c
 10679  01687C  5E26               	subwf	btemp^0,f,c
 10680  01687E  0EF6               	movlw	-10
 10681  016880  0060  F09B  FFE3   	movff	btemp,plusw1
 10682  016886  0EF7               	movlw	-9
 10683  016888  50E3               	movf	plusw1,w,c
 10684  01688A  6E26               	movwf	btemp^0,c
 10685  01688C  0EFF               	movlw	-1
 10686  01688E  50E3               	movf	plusw1,w,c
 10687  016890  5A26               	subwfb	btemp^0,f,c
 10688  016892  0EF7               	movlw	-9
 10689  016894  0060  F09B  FFE3   	movff	btemp,plusw1
 10690  01689A  0EFC               	movlw	252
 10691  01689C  6E30               	movwf	(btemp+10)^0,c
 10692  01689E  0EFF               	movlw	255
 10693  0168A0  6E31               	movwf	(btemp+11)^0,c
 10694                           
 10695                           ;stkvar	_n @ sp[(-4)+-6]
 10696  0168A2  0EF6               	movlw	-10
 10697  0168A4  006F FF8C  F026    	movff	plusw1,btemp
 10698  0168AA  5030               	movf	(btemp+10)^0,w,c
 10699  0168AC  1626               	andwf	btemp^0,f,c
 10700  0168AE  0EF6               	movlw	-10
 10701  0168B0  0060  F09B  FFE3   	movff	btemp,plusw1
 10702  0168B6  0EF7               	movlw	-9
 10703  0168B8  006F FF8C  F026    	movff	plusw1,btemp
 10704  0168BE  5031               	movf	(btemp+11)^0,w,c
 10705  0168C0  1626               	andwf	btemp^0,f,c
 10706  0168C2  0EF7               	movlw	-9
 10707  0168C4  D02E               	goto	L9
 10708  0168C6                     l11601:
 10709                           
 10710                           ;stkvar	_c @ sp[(-4)+-4]
 10711                           ;stkvar	_s @ sp[(-4)+0]
 10712  0168C6  0EFC               	movlw	-4
 10713  0168C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10714  0168CE  0EFD               	movlw	-3
 10715  0168D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10716  0168D6  0EF8               	movlw	-8
 10717  0168D8  006F FF8F FFDF     	movff	plusw1,indf2
 10718                           
 10719                           ;stkvar	_n @ sp[(-4)+-6]
 10720  0168DE  0EF6               	movlw	-10
 10721  0168E0  006F FF8C  F026    	movff	plusw1,btemp
 10722  0168E6  0E01               	movlw	1
 10723  0168E8  5E26               	subwf	btemp^0,f,c
 10724  0168EA  0EF6               	movlw	-10
 10725  0168EC  0060  F09B  FFE3   	movff	btemp,plusw1
 10726  0168F2  0EF7               	movlw	-9
 10727  0168F4  006F FF8C  F026    	movff	plusw1,btemp
 10728  0168FA  0E00               	movlw	0
 10729  0168FC  5A26               	subwfb	btemp^0,f,c
 10730  0168FE  0EF7               	movlw	-9
 10731  016900  0060  F09B  FFE3   	movff	btemp,plusw1
 10732                           
 10733                           ;stkvar	_s @ sp[(-4)+0]
 10734  016906  0EFC               	movlw	-4
 10735  016908  50E3               	movf	plusw1,w,c
 10736  01690A  0F01               	addlw	1
 10737  01690C  6E26               	movwf	btemp^0,c
 10738  01690E  0EFC               	movlw	-4
 10739  016910  0060  F09B  FFE3   	movff	btemp,plusw1
 10740  016916  6A26               	clrf	btemp^0,c
 10741  016918  0EFD               	movlw	-3
 10742  01691A  50E3               	movf	plusw1,w,c
 10743  01691C  2026               	addwfc	btemp^0,w,c
 10744  01691E  6E26               	movwf	btemp^0,c
 10745  016920  0EFD               	movlw	-3
 10746  016922                     L9:
 10747  016922  0060  F09B  FFE3   	movff	btemp,plusw1
 10748                           
 10749                           ;stkvar	_n @ sp[(-4)+-6]
 10750  016928  0EF6               	movlw	-10
 10751  01692A  006F FF8C  F026    	movff	plusw1,btemp
 10752  016930  0EF7               	movlw	-9
 10753  016932  50E3               	movf	plusw1,w,c
 10754  016934  1026               	iorwf	btemp^0,w,c
 10755  016936  A4D8               	btfss	status,2,c
 10756  016938  D7C6               	goto	l11601
 10757  01693A                     u10600:
 10758                           
 10759                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 10760  01693A  0EF6               	movlw	246
 10761  01693C  26E1               	addwf	fsr1l,f,c
 10762  01693E  0EFF               	movlw	255
 10763  016940  22E2               	addwfc	fsr1h,f,c
 10764  016942  0012               	return		;funcret
 10765  016944                     __end_of_memset:
 10766                           	opt callstack 0
 10767                           
 10768 ;; *************** function _printf *****************
 10769 ;; Defined at:
 10770 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 10771 ;; Parameters:    Size  Location     Type
 10772 ;;  fmt             2  [STACK] PTR const unsigned char 
 10773 ;;		 -> STR_45(3), STR_44(3), STR_43(3), 
 10774 ;; Auto vars:     Size  Location     Type
 10775 ;;  ap              2  [STACK] PTR void [1]
 10776 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10777 ;;  ret             2    0        int 
 10778 ;; Return value:  Size  Location     Type
 10779 ;;                  2  [STACK] int 
 10780 ;; Registers used:
 10781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10782 ;; Tracked objects:
 10783 ;;		On entry : 3F/3B
 10784 ;;		On exit  : 3F/0
 10785 ;;		Unchanged: 0/0
 10786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10791 ;;Total ram usage:        0 bytes
 10792 ;; Hardware stack levels used:    1
 10793 ;; Hardware stack levels required when called:   23
 10794 ;; This function calls:
 10795 ;;		_vfprintf
 10796 ;; This function is called by:
 10797 ;;		_eaDogM_WriteString
 10798 ;;		_send_lcd_cmd_dma
 10799 ;; This function uses a reentrant model
 10800 ;;
 10801                           
 10802                           	psect	text43
 10803  01A84C                     __ptext43:
 10804                           	opt callstack 0
 10805  01A84C                     _printf:
 10806                           	opt callstack 0
 10807                           
 10808                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10809  01A84C  52E6               	movf	postinc1,f,c
 10810  01A84E  52E6               	movf	postinc1,f,c
 10811                           
 10812                           ;stkvar	?_printf @ sp[(-2)+-3]
 10813                           
 10814                           ;incstack = 0
 10815  01A850  0EFB               	movlw	251
 10816  01A852  24E1               	addwf	fsr1l,w,c
 10817  01A854  6E30               	movwf	(btemp+10)^0,c
 10818  01A856  0EFF               	movlw	255
 10819  01A858  20E2               	addwfc	fsr1h,w,c
 10820  01A85A  6E31               	movwf	(btemp+11)^0,c
 10821                           
 10822                           ;stkvar	_ap @ sp[(-2)+0]
 10823  01A85C  0EFF               	movlw	-1
 10824  01A85E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 10825  01A864  0EFE               	movlw	-2
 10826  01A866  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 10827                           
 10828                           ;stkvar	_ap @ sp[(-2)+0]
 10829  01A86C  0EFE               	movlw	254
 10830  01A86E  24E1               	addwf	fsr1l,w,c
 10831  01A870  6E26               	movwf	btemp^0,c
 10832  01A872  0EFF               	movlw	255
 10833  01A874  20E2               	addwfc	fsr1h,w,c
 10834  01A876  6E27               	movwf	(btemp+1)^0,c
 10835  01A878  0060  F09B  FFE6   	movff	btemp,postinc1
 10836  01A87E  0060  F09F  FFE6   	movff	btemp+1,postinc1
 10837                           
 10838                           ;stkvar	_fmt @ sp[(-4)+-3]
 10839  01A884  0EF9               	movlw	-7
 10840  01A886  006F FF8F FFE6     	movff	plusw1,postinc1
 10841  01A88C  006F FF8F FFE6     	movff	plusw1,postinc1
 10842  01A892  0E00               	movlw	0
 10843  01A894  6EE6               	movwf	postinc1,c
 10844  01A896  0E00               	movlw	0
 10845  01A898  6EE6               	movwf	postinc1,c
 10846  01A89A  EC5B  F0CF         	call	_vfprintf	;wreg free
 10847                           
 10848                           ; BSR set to: 0
 10849                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 10850  01A89E  52E5               	movf	postdec1,f,c
 10851  01A8A0  52E5               	movf	postdec1,f,c
 10852  01A8A2  52E5               	movf	postdec1,f,c
 10853  01A8A4  50E7               	movf	indf1,w,c
 10854  01A8A6  5EE1               	subwf	fsr1l,f,c
 10855  01A8A8  0E00               	movlw	0
 10856  01A8AA  5AE2               	subwfb	fsr1h,f,c
 10857  01A8AC  0012               	return		;funcret
 10858  01A8AE                     __end_of_printf:
 10859                           	opt callstack 0
 10860                           
 10861 ;; *************** function _vfprintf *****************
 10862 ;; Defined at:
 10863 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10864 ;; Parameters:    Size  Location     Type
 10865 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10866 ;;		 -> f(6), NULL(0), 
 10867 ;;  fmt             2  [STACK] PTR const unsigned char 
 10868 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 10869 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 10870 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 10871 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 10872 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 10873 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 10874 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 10875 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 10876 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 10877 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 10878 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 10879 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 10880 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 10881 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 10882 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 10883 ;;		 -> STR_1(17), 
 10884 ;;  ap              2  [STACK] PTR PTR void 
 10885 ;;		 -> ap(2), ap(2), 
 10886 ;; Auto vars:     Size  Location     Type
 10887 ;;  cfmt            2  [STACK] PTR unsigned char 
 10888 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 10889 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 10890 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 10891 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 10892 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 10893 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 10894 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 10895 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 10896 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 10897 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 10898 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 10899 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 10900 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 10901 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 10902 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 10903 ;;		 -> STR_1(17), 
 10904 ;; Return value:  Size  Location     Type
 10905 ;;                  2  [STACK] int 
 10906 ;; Registers used:
 10907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10908 ;; Tracked objects:
 10909 ;;		On entry : 0/2
 10910 ;;		On exit  : 3F/0
 10911 ;;		Unchanged: 0/0
 10912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10917 ;;Total ram usage:        0 bytes
 10918 ;; Hardware stack levels used:    1
 10919 ;; Hardware stack levels required when called:   22
 10920 ;; This function calls:
 10921 ;;		_vfpfcnvrt
 10922 ;; This function is called by:
 10923 ;;		_sprintf
 10924 ;;		_printf
 10925 ;; This function uses a reentrant model
 10926 ;;
 10927                           
 10928                           	psect	text44
 10929  019EB6                     __ptext44:
 10930                           	opt callstack 0
 10931  019EB6                     _vfprintf:
 10932                           	opt callstack 0
 10933                           
 10934                           ; BSR set to: 0
 10935                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10936  019EB6  52E6               	movf	postinc1,f,c
 10937  019EB8  52E6               	movf	postinc1,f,c
 10938                           
 10939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 10940                           ;stkvar	_fmt @ sp[(-2)+-4]
 10941                           
 10942                           ;incstack = 0
 10943 ;; hardware stack exceeded
 10944  019EBA  0EFA               	movlw	-6
 10945  019EBC  006F FF8C  F030    	movff	plusw1,btemp+10
 10946  019EC2  0EFB               	movlw	-5
 10947  019EC4  006F FF8C  F031    	movff	plusw1,btemp+11
 10948                           
 10949                           ;stkvar	_cfmt @ sp[(-2)+0]
 10950  019ECA  0EFF               	movlw	-1
 10951  019ECC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 10952  019ED2  0EFE               	movlw	-2
 10953  019ED4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 10954                           
 10955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 10956  019EDA  0100               	movlb	0	; () banked
 10957  019EDC  6BAF               	clrf	_nout& (0+255),b
 10958  019EDE  6BB0               	clrf	(_nout+1)& (0+255),b
 10959                           
 10960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10961  019EE0  D021               	goto	l12425
 10962  019EE2                     l12423:
 10963                           
 10964                           ; BSR set to: 0
 10965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10966                           ;stkvar	_ap @ sp[(-2)+-6]
 10967  019EE2  0EF8               	movlw	-8
 10968  019EE4  006F FF8F FFE6     	movff	plusw1,postinc1
 10969  019EEA  006F FF8F FFE6     	movff	plusw1,postinc1
 10970                           
 10971                           ;stkvar	_cfmt @ sp[(-4)+0]
 10972  019EF0  0EFC               	movlw	252
 10973  019EF2  24E1               	addwf	fsr1l,w,c
 10974  019EF4  6E26               	movwf	btemp^0,c
 10975  019EF6  0EFF               	movlw	255
 10976  019EF8  20E2               	addwfc	fsr1h,w,c
 10977  019EFA  6E27               	movwf	(btemp+1)^0,c
 10978  019EFC  0060  F09B  FFE6   	movff	btemp,postinc1
 10979  019F02  0060  F09F  FFE6   	movff	btemp+1,postinc1
 10980                           
 10981                           ;stkvar	_fp @ sp[(-6)+-2]
 10982  019F08  0EF8               	movlw	-8
 10983  019F0A  006F FF8F FFE6     	movff	plusw1,postinc1
 10984  019F10  006F FF8F FFE6     	movff	plusw1,postinc1
 10985  019F16  EC6B  F091         	call	_vfpfcnvrt	;wreg free
 10986  019F1A  5026               	movf	btemp^0,w,c
 10987  019F1C  0100               	movlb	0	; () banked
 10988  019F1E  27AF               	addwf	_nout& (0+255),f,b
 10989  019F20  5027               	movf	(btemp+1)^0,w,c
 10990  019F22  23B0               	addwfc	(_nout+1)& (0+255),f,b
 10991  019F24                     l12425:
 10992                           
 10993                           ; BSR set to: 0
 10994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10995                           ;stkvar	_cfmt @ sp[(-2)+0]
 10996  019F24  50E1               	movf	fsr1l,w,c
 10997  019F26  0FFE               	addlw	-2
 10998  019F28  6ED9               	movwf	fsr2l,c
 10999  019F2A  50E2               	movf	fsr1h,w,c
 11000  019F2C  6EDA               	movwf	fsr2h,c
 11001  019F2E  0EFF               	movlw	255
 11002  019F30  22DA               	addwfc	fsr2h,f,c
 11003  019F32  006F FF7B FFF6     	movff	postinc2,tblptrl
 11004  019F38  006F FF77 FFF7     	movff	postdec2,tblptrh
 11005  019F3E                     	if	0	;tblptru may be non-zero
 11006  019F3E                     	endif
 11007  019F3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11008  019F3E  0E00               	movlw	low (__mediumconst shr (0+16))
 11009  019F40  6EF8               	movwf	tblptru,c
 11010  019F42                     	endif
 11011  019F42  0008               	tblrd		*
 11012  019F44  50F5               	movf	tablat,w,c
 11013  019F46  0900               	iorlw	0
 11014  019F48  A4D8               	btfss	status,2,c
 11015  019F4A  D7CB               	goto	l12423
 11016                           
 11017                           ; BSR set to: 0
 11018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 11019  019F4C  0060  F2BC  F026   	movff	_nout,btemp
 11020  019F52  0060  F2C0  F027   	movff	_nout+1,btemp+1
 11021                           
 11022                           ; BSR set to: 0
 11023                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 11024  019F58  0EF8               	movlw	248
 11025  019F5A  26E1               	addwf	fsr1l,f,c
 11026  019F5C  0EFF               	movlw	255
 11027  019F5E  22E2               	addwfc	fsr1h,f,c
 11028  019F60  0012               	return		;funcret
 11029  019F62                     __end_of_vfprintf:
 11030                           	opt callstack 0
 11031                           
 11032 ;; *************** function _vfpfcnvrt *****************
 11033 ;; Defined at:
 11034 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11035 ;; Parameters:    Size  Location     Type
 11036 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11037 ;;		 -> f(6), NULL(0), 
 11038 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 11039 ;;		 -> cfmt(2), 
 11040 ;;  ap              2  [STACK] PTR PTR void 
 11041 ;;		 -> ap(2), ap(2), 
 11042 ;; Auto vars:     Size  Location     Type
 11043 ;;  llu             8  [STACK] unsigned long long 
 11044 ;;  ll              8  [STACK] long long 
 11045 ;;  f               4  [STACK] long long 
 11046 ;;  ct              3  [STACK] unsigned char [3]
 11047 ;;  vp              3    0        PTR void 
 11048 ;;  cp              2  [STACK] PTR unsigned char 
 11049 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 11050 ;;		 -> D.lcd(480), D(482), T(144), STR_3(6), 
 11051 ;;		 -> V(190), 
 11052 ;;  i               2    0        int 
 11053 ;;  done            2    0        int 
 11054 ;;  c               1  [STACK] unsigned char 
 11055 ;; Return value:  Size  Location     Type
 11056 ;;                  2  [STACK] int 
 11057 ;; Registers used:
 11058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11059 ;; Tracked objects:
 11060 ;;		On entry : 0/0
 11061 ;;		On exit  : 0/0
 11062 ;;		Unchanged: 0/0
 11063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11068 ;;Total ram usage:        0 bytes
 11069 ;; Hardware stack levels used:    1
 11070 ;; Hardware stack levels required when called:   21
 11071 ;; This function calls:
 11072 ;;		_atoi
 11073 ;;		_ctoa
 11074 ;;		_dtoa
 11075 ;;		_efgtoa
 11076 ;;		_fputc
 11077 ;;		_isdigit
 11078 ;;		_isupper
 11079 ;;		_stoa
 11080 ;;		_strncmp
 11081 ;;		_tolower
 11082 ;;		_utoa
 11083 ;;		_xtoa
 11084 ;; This function is called by:
 11085 ;;		_vfprintf
 11086 ;; This function uses a reentrant model
 11087 ;;
 11088                           
 11089                           	psect	text45
 11090  0122D6                     __ptext45:
 11091                           	opt callstack 0
 11092  0122D6                     _vfpfcnvrt:
 11093                           	opt callstack 0
 11094                           
 11095                           ; BSR set to: 0
 11096                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11097  0122D6  0E20               	movlw	32
 11098  0122D8  26E1               	addwf	fsr1l,f,c
 11099  0122DA  0E00               	movlw	0
 11100  0122DC  22E2               	addwfc	fsr1h,f,c
 11101                           
 11102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11103                           ;stkvar	_fmt @ sp[(-32)+-4]
 11104                           
 11105                           ;incstack = 0
 11106 ;; hardware stack exceeded
 11107  0122DE  0EDC               	movlw	-36
 11108  0122E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11109  0122E6  0EDD               	movlw	-35
 11110  0122E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11111  0122EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 11112  0122F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 11113  0122FA                     	if	0	;tblptru may be non-zero
 11114  0122FA                     	endif
 11115  0122FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11116  0122FA  0E00               	movlw	low (__mediumconst shr (0+16))
 11117  0122FC  6EF8               	movwf	tblptru,c
 11118  0122FE                     	endif
 11119  0122FE  0008               	tblrd		*
 11120  012300  50F5               	movf	tablat,w,c
 11121  012302  0A25               	xorlw	37
 11122  012304  A4D8               	btfss	status,2,c
 11123  012306  EF12  F099         	goto	l12369
 11124                           
 11125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11126                           ;stkvar	_fmt @ sp[(-32)+-4]
 11127  01230A  0EDC               	movlw	-36
 11128  01230C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11129  012312  0EDD               	movlw	-35
 11130  012314  006F FF8F FFDA     	movff	plusw1,fsr2h
 11131  01231A  2ADE               	incf	postinc2,f,c
 11132  01231C  0E00               	movlw	0
 11133  01231E  22DD               	addwfc	postdec2,f,c
 11134                           
 11135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11136  012320  6A0A               	clrf	_width^0,c
 11137  012322  6A0B               	clrf	(_width+1)^0,c
 11138  012324  6A0E               	clrf	_flags^0,c
 11139  012326  6A0F               	clrf	(_flags+1)^0,c
 11140                           
 11141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11142  012328  680C               	setf	_prec^0,c
 11143  01232A  680D               	setf	(_prec+1)^0,c
 11144                           
 11145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11146                           ;stkvar	_fmt @ sp[(-32)+-4]
 11147  01232C  0EDC               	movlw	-36
 11148  01232E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11149  012334  0EDD               	movlw	-35
 11150  012336  006F FF8F FFDA     	movff	plusw1,fsr2h
 11151  01233C  006F FF7B FFF6     	movff	postinc2,tblptrl
 11152  012342  006F FF77 FFF7     	movff	postdec2,tblptrh
 11153  012348                     	if	0	;tblptru may be non-zero
 11154  012348                     	endif
 11155  012348                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11156  012348  0E00               	movlw	low (__mediumconst shr (0+16))
 11157  01234A  6EF8               	movwf	tblptru,c
 11158  01234C                     	endif
 11159  01234C  0008               	tblrd		*
 11160  01234E  50F5               	movf	tablat,w,c
 11161  012350  0A2A               	xorlw	42
 11162  012352  A4D8               	btfss	status,2,c
 11163  012354  D031               	goto	l12187
 11164                           
 11165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11166                           ;stkvar	_fmt @ sp[(-32)+-4]
 11167  012356  0EDC               	movlw	-36
 11168  012358  006F FF8F FFD9     	movff	plusw1,fsr2l
 11169  01235E  0EDD               	movlw	-35
 11170  012360  006F FF8F FFDA     	movff	plusw1,fsr2h
 11171  012366  2ADE               	incf	postinc2,f,c
 11172  012368  0E00               	movlw	0
 11173  01236A  22DD               	addwfc	postdec2,f,c
 11174                           
 11175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11176                           ;stkvar	_ap @ sp[(-32)+-6]
 11177  01236C  0EDA               	movlw	-38
 11178  01236E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11179  012374  0EDB               	movlw	-37
 11180  012376  006F FF8F FFDA     	movff	plusw1,fsr2h
 11181  01237C  0E02               	movlw	2
 11182  01237E  5EDE               	subwf	postinc2,f,c
 11183  012380  0E00               	movlw	0
 11184  012382  5ADD               	subwfb	postdec2,f,c
 11185  012384  006F FF78  F030    	movff	postinc2,btemp+10
 11186  01238A  006F FF74  F031    	movff	postdec2,btemp+11
 11187  012390  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11188  012396  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11189  01239C  006F FF78  F00A    	movff	postinc2,_width
 11190  0123A2  006F FF74  F00B    	movff	postdec2,_width+1
 11191                           
 11192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11193  0123A8  AE0B               	btfss	(_width+1)^0,7,c
 11194  0123AA  D066               	goto	u11730
 11195                           
 11196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11197  0123AC  800E               	bsf	_flags^0,0,c
 11198                           
 11199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11200  0123AE  6C0A               	negf	_width^0,c
 11201  0123B0  1E0B               	comf	(_width+1)^0,f,c
 11202  0123B2  B0D8               	btfsc	status,0,c
 11203  0123B4  2A0B               	incf	(_width+1)^0,f,c
 11204  0123B6  D060               	goto	u11730
 11205  0123B8                     l12187:
 11206                           
 11207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11208                           ;stkvar	_fmt @ sp[(-32)+-4]
 11209  0123B8  0EDC               	movlw	-36
 11210  0123BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11211  0123C0  0EDD               	movlw	-35
 11212  0123C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11213  0123C8  006F FF78  F030    	movff	postinc2,btemp+10
 11214  0123CE  006F FF74  F031    	movff	postdec2,btemp+11
 11215  0123D4  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 11216  0123DA  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 11217  0123E0  ECA1  F0B8         	call	_atoi	;wreg free
 11218  0123E4  0060  F098  F00A   	movff	btemp,_width
 11219  0123EA  0060  F09C  F00B   	movff	btemp+1,_width+1
 11220                           
 11221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11222  0123F0  D00B               	goto	l12191
 11223  0123F2                     l12189:
 11224                           
 11225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11226                           ;stkvar	_fmt @ sp[(-32)+-4]
 11227  0123F2  0EDC               	movlw	-36
 11228  0123F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11229  0123FA  0EDD               	movlw	-35
 11230  0123FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11231  012402  2ADE               	incf	postinc2,f,c
 11232  012404  0E00               	movlw	0
 11233  012406  22DD               	addwfc	postdec2,f,c
 11234  012408                     l12191:
 11235  012408  0ED0               	movlw	208
 11236  01240A  6E30               	movwf	(btemp+10)^0,c
 11237  01240C  0EFF               	movlw	255
 11238  01240E  6E31               	movwf	(btemp+11)^0,c
 11239                           
 11240                           ;stkvar	_fmt @ sp[(-32)+-4]
 11241  012410  0EDC               	movlw	-36
 11242  012412  006F FF8F FFD9     	movff	plusw1,fsr2l
 11243  012418  0EDD               	movlw	-35
 11244  01241A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11245  012420  006F FF7B FFF6     	movff	postinc2,tblptrl
 11246  012426  006F FF77 FFF7     	movff	postdec2,tblptrh
 11247  01242C                     	if	0	;tblptru may be non-zero
 11248  01242C                     	endif
 11249  01242C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11250  01242C  0E00               	movlw	low (__mediumconst shr (0+16))
 11251  01242E  6EF8               	movwf	tblptru,c
 11252  012430                     	endif
 11253  012430  0008               	tblrd		*
 11254  012432  50F5               	movf	tablat,w,c
 11255  012434  6E2E               	movwf	(btemp+8)^0,c
 11256  012436  6A2F               	clrf	(btemp+9)^0,c
 11257  012438  5030               	movf	(btemp+10)^0,w,c
 11258  01243A  262E               	addwf	(btemp+8)^0,f,c
 11259  01243C  5031               	movf	(btemp+11)^0,w,c
 11260  01243E  222F               	addwfc	(btemp+9)^0,f,c
 11261  012440  502F               	movf	(btemp+9)^0,w,c
 11262  012442  E106               	bnz	u11710
 11263  012444  0E0A               	movlw	10
 11264  012446  5C2E               	subwf	(btemp+8)^0,w,c
 11265  012448  B0D8               	btfsc	status,0,c
 11266  01244A  D002               	goto	u11710
 11267  01244C  0E01               	movlw	1
 11268  01244E  D001               	goto	u11720
 11269  012450                     u11710:
 11270  012450  0E00               	movlw	0
 11271  012452                     u11720:
 11272  012452  6E30               	movwf	(btemp+10)^0,c
 11273  012454  6A31               	clrf	(btemp+11)^0,c
 11274                           
 11275                           ;stkvar	_vfpfcnvrt$5462 @ sp[(-32)+4]
 11276  012456  0EE4               	movlw	-28
 11277  012458  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 11278  01245E  0EE5               	movlw	-27
 11279  012460  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11280                           
 11281                           ;stkvar	_vfpfcnvrt$5462 @ sp[(-32)+4]
 11282  012466  0EE4               	movlw	-28
 11283  012468  006F FF8C  F026    	movff	plusw1,btemp
 11284  01246E  0EE5               	movlw	-27
 11285  012470  50E3               	movf	plusw1,w,c
 11286  012472  1026               	iorwf	btemp^0,w,c
 11287  012474  A4D8               	btfss	status,2,c
 11288  012476  D7BD               	goto	l12189
 11289  012478                     u11730:
 11290                           
 11291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11292                           ;stkvar	_fmt @ sp[(-32)+-4]
 11293  012478  0EDC               	movlw	-36
 11294  01247A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11295  012480  0EDD               	movlw	-35
 11296  012482  006F FF8F FFDA     	movff	plusw1,fsr2h
 11297  012488  006F FF7B FFF6     	movff	postinc2,tblptrl
 11298  01248E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11299  012494                     	if	0	;tblptru may be non-zero
 11300  012494                     	endif
 11301  012494                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11302  012494  0E00               	movlw	low (__mediumconst shr (0+16))
 11303  012496  6EF8               	movwf	tblptru,c
 11304  012498                     	endif
 11305  012498  0008               	tblrd		*
 11306  01249A  50F5               	movf	tablat,w,c
 11307  01249C  0A2E               	xorlw	46
 11308  01249E  A4D8               	btfss	status,2,c
 11309  0124A0  D0AC               	goto	u11780
 11310                           
 11311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11312  0124A2  6A0C               	clrf	_prec^0,c
 11313  0124A4  6A0D               	clrf	(_prec+1)^0,c
 11314                           
 11315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11316                           ;stkvar	_fmt @ sp[(-32)+-4]
 11317  0124A6  0EDC               	movlw	-36
 11318  0124A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11319  0124AE  0EDD               	movlw	-35
 11320  0124B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11321  0124B6  2ADE               	incf	postinc2,f,c
 11322  0124B8  0E00               	movlw	0
 11323  0124BA  22DD               	addwfc	postdec2,f,c
 11324                           
 11325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11326                           ;stkvar	_fmt @ sp[(-32)+-4]
 11327  0124BC  0EDC               	movlw	-36
 11328  0124BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11329  0124C4  0EDD               	movlw	-35
 11330  0124C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11331  0124CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11332  0124D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11333  0124D8                     	if	0	;tblptru may be non-zero
 11334  0124D8                     	endif
 11335  0124D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11336  0124D8  0E00               	movlw	low (__mediumconst shr (0+16))
 11337  0124DA  6EF8               	movwf	tblptru,c
 11338  0124DC                     	endif
 11339  0124DC  0008               	tblrd		*
 11340  0124DE  50F5               	movf	tablat,w,c
 11341  0124E0  0A2A               	xorlw	42
 11342  0124E2  A4D8               	btfss	status,2,c
 11343  0124E4  D02A               	goto	l12209
 11344                           
 11345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11346                           ;stkvar	_fmt @ sp[(-32)+-4]
 11347  0124E6  0EDC               	movlw	-36
 11348  0124E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11349  0124EE  0EDD               	movlw	-35
 11350  0124F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11351  0124F6  2ADE               	incf	postinc2,f,c
 11352  0124F8  0E00               	movlw	0
 11353  0124FA  22DD               	addwfc	postdec2,f,c
 11354                           
 11355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11356                           ;stkvar	_ap @ sp[(-32)+-6]
 11357  0124FC  0EDA               	movlw	-38
 11358  0124FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11359  012504  0EDB               	movlw	-37
 11360  012506  006F FF8F FFDA     	movff	plusw1,fsr2h
 11361  01250C  0E02               	movlw	2
 11362  01250E  5EDE               	subwf	postinc2,f,c
 11363  012510  0E00               	movlw	0
 11364  012512  5ADD               	subwfb	postdec2,f,c
 11365  012514  006F FF78  F030    	movff	postinc2,btemp+10
 11366  01251A  006F FF74  F031    	movff	postdec2,btemp+11
 11367  012520  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11368  012526  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11369  01252C  006F FF78  F00C    	movff	postinc2,_prec
 11370  012532  006F FF74  F00D    	movff	postdec2,_prec+1
 11371                           
 11372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11373  012538  D060               	goto	u11780
 11374  01253A                     l12209:
 11375                           
 11376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11377                           ;stkvar	_fmt @ sp[(-32)+-4]
 11378  01253A  0EDC               	movlw	-36
 11379  01253C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11380  012542  0EDD               	movlw	-35
 11381  012544  006F FF8F FFDA     	movff	plusw1,fsr2h
 11382  01254A  006F FF78  F030    	movff	postinc2,btemp+10
 11383  012550  006F FF74  F031    	movff	postdec2,btemp+11
 11384  012556  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 11385  01255C  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 11386  012562  ECA1  F0B8         	call	_atoi	;wreg free
 11387  012566  0060  F098  F00C   	movff	btemp,_prec
 11388  01256C  0060  F09C  F00D   	movff	btemp+1,_prec+1
 11389                           
 11390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11391  012572  D00B               	goto	l12213
 11392  012574                     l12211:
 11393                           
 11394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 11395                           ;stkvar	_fmt @ sp[(-32)+-4]
 11396  012574  0EDC               	movlw	-36
 11397  012576  006F FF8F FFD9     	movff	plusw1,fsr2l
 11398  01257C  0EDD               	movlw	-35
 11399  01257E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11400  012584  2ADE               	incf	postinc2,f,c
 11401  012586  0E00               	movlw	0
 11402  012588  22DD               	addwfc	postdec2,f,c
 11403  01258A                     l12213:
 11404  01258A  0ED0               	movlw	208
 11405  01258C  6E30               	movwf	(btemp+10)^0,c
 11406  01258E  0EFF               	movlw	255
 11407  012590  6E31               	movwf	(btemp+11)^0,c
 11408                           
 11409                           ;stkvar	_fmt @ sp[(-32)+-4]
 11410  012592  0EDC               	movlw	-36
 11411  012594  006F FF8F FFD9     	movff	plusw1,fsr2l
 11412  01259A  0EDD               	movlw	-35
 11413  01259C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11414  0125A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 11415  0125A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 11416  0125AE                     	if	0	;tblptru may be non-zero
 11417  0125AE                     	endif
 11418  0125AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11419  0125AE  0E00               	movlw	low (__mediumconst shr (0+16))
 11420  0125B0  6EF8               	movwf	tblptru,c
 11421  0125B2                     	endif
 11422  0125B2  0008               	tblrd		*
 11423  0125B4  50F5               	movf	tablat,w,c
 11424  0125B6  6E2E               	movwf	(btemp+8)^0,c
 11425  0125B8  6A2F               	clrf	(btemp+9)^0,c
 11426  0125BA  5030               	movf	(btemp+10)^0,w,c
 11427  0125BC  262E               	addwf	(btemp+8)^0,f,c
 11428  0125BE  5031               	movf	(btemp+11)^0,w,c
 11429  0125C0  222F               	addwfc	(btemp+9)^0,f,c
 11430  0125C2  502F               	movf	(btemp+9)^0,w,c
 11431  0125C4  E106               	bnz	u11760
 11432  0125C6  0E0A               	movlw	10
 11433  0125C8  5C2E               	subwf	(btemp+8)^0,w,c
 11434  0125CA  B0D8               	btfsc	status,0,c
 11435  0125CC  D002               	goto	u11760
 11436  0125CE  0E01               	movlw	1
 11437  0125D0  D001               	goto	u11770
 11438  0125D2                     u11760:
 11439  0125D2  0E00               	movlw	0
 11440  0125D4                     u11770:
 11441  0125D4  6E30               	movwf	(btemp+10)^0,c
 11442  0125D6  6A31               	clrf	(btemp+11)^0,c
 11443                           
 11444                           ;stkvar	_vfpfcnvrt$5463 @ sp[(-32)+0]
 11445  0125D8  0EE0               	movlw	-32
 11446  0125DA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 11447  0125E0  0EE1               	movlw	-31
 11448  0125E2  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11449                           
 11450                           ;stkvar	_vfpfcnvrt$5463 @ sp[(-32)+0]
 11451  0125E8  0EE0               	movlw	-32
 11452  0125EA  006F FF8C  F026    	movff	plusw1,btemp
 11453  0125F0  0EE1               	movlw	-31
 11454  0125F2  50E3               	movf	plusw1,w,c
 11455  0125F4  1026               	iorwf	btemp^0,w,c
 11456  0125F6  A4D8               	btfss	status,2,c
 11457  0125F8  D7BD               	goto	l12211
 11458  0125FA                     u11780:
 11459                           
 11460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 11461                           ;stkvar	_fmt @ sp[(-32)+-4]
 11462  0125FA  0EDC               	movlw	-36
 11463  0125FC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11464  012602  0EDD               	movlw	-35
 11465  012604  006F FF8F FFDA     	movff	plusw1,fsr2h
 11466  01260A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11467  012610  006F FF77 FFF7     	movff	postdec2,tblptrh
 11468  012616                     	if	0	;tblptru may be non-zero
 11469  012616                     	endif
 11470  012616                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11471  012616  0E00               	movlw	low (__mediumconst shr (0+16))
 11472  012618  6EF8               	movwf	tblptru,c
 11473  01261A                     	endif
 11474  01261A  0008               	tblrd		*
 11475  01261C  50F5               	movf	tablat,w,c
 11476  01261E  6EE6               	movwf	postinc1,c
 11477  012620  0E00               	movlw	0
 11478  012622  6EE6               	movwf	postinc1,c
 11479  012624  ECA0  F0D2         	call	_tolower	;wreg free
 11480                           
 11481                           ;stkvar	_ct @ sp[(-32)+26]
 11482  012628  0EFA               	movlw	-6
 11483  01262A  0060  F09B  FFE3   	movff	btemp,plusw1
 11484                           
 11485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 11486                           ;stkvar	_ct @ sp[(-32)+26]
 11487  012630  0EFA               	movlw	-6
 11488  012632  50E3               	movf	plusw1,w,c
 11489  012634  B4D8               	btfsc	status,2,c
 11490  012636  D05B               	goto	l12229
 11491                           
 11492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 11493                           ;stkvar	_ct @ sp[(-32)+26]
 11494  012638  0EFB               	movlw	251
 11495  01263A  24E1               	addwf	fsr1l,w,c
 11496  01263C  6ED9               	movwf	fsr2l,c
 11497  01263E  0EFF               	movlw	255
 11498  012640  20E2               	addwfc	fsr1h,w,c
 11499  012642  6EDA               	movwf	fsr2h,c
 11500                           
 11501                           ;stkvar	_fmt @ sp[(-32)+-4]
 11502  012644  0EDC               	movlw	-36
 11503  012646  006F FF8F FFE9     	movff	plusw1,fsr0l
 11504  01264C  0EDD               	movlw	-35
 11505  01264E  006F FF8F FFEA     	movff	plusw1,fsr0h
 11506  012654  006F FFB8  F030    	movff	postinc0,btemp+10
 11507  01265A  006F FFB4  F031    	movff	postdec0,btemp+11
 11508  012660  0E01               	movlw	1
 11509  012662  2630               	addwf	(btemp+10)^0,f,c
 11510  012664  0E00               	movlw	0
 11511  012666  2231               	addwfc	(btemp+11)^0,f,c
 11512  012668  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 11513  01266E  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 11514  012674                     	if	0	;tblptru may be non-zero
 11515  012674                     	endif
 11516  012674                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11517  012674  0E00               	movlw	low (__mediumconst shr (0+16))
 11518  012676  6EF8               	movwf	tblptru,c
 11519  012678                     	endif
 11520  012678  0008               	tblrd		*
 11521  01267A  50F5               	movf	tablat,w,c
 11522  01267C  6EE6               	movwf	postinc1,c
 11523  01267E  0E00               	movlw	0
 11524  012680  6EE6               	movwf	postinc1,c
 11525  012682  ECA0  F0D2         	call	_tolower	;wreg free
 11526  012686  5026               	movf	btemp^0,w,c
 11527  012688  6EDF               	movwf	indf2,c
 11528                           
 11529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 11530                           ;stkvar	_ct @ sp[(-32)+26]
 11531  01268A  0EFB               	movlw	251
 11532  01268C  24E1               	addwf	fsr1l,w,c
 11533  01268E  6ED9               	movwf	fsr2l,c
 11534  012690  0EFF               	movlw	255
 11535  012692  20E2               	addwfc	fsr1h,w,c
 11536  012694  6EDA               	movwf	fsr2h,c
 11537  012696  50DF               	movf	indf2,w,c
 11538  012698  B4D8               	btfsc	status,2,c
 11539  01269A  D029               	goto	l12229
 11540                           
 11541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 11542                           ;stkvar	_ct @ sp[(-32)+26]
 11543  01269C  0EFC               	movlw	252
 11544  01269E  24E1               	addwf	fsr1l,w,c
 11545  0126A0  6ED9               	movwf	fsr2l,c
 11546  0126A2  0EFF               	movlw	255
 11547  0126A4  20E2               	addwfc	fsr1h,w,c
 11548  0126A6  6EDA               	movwf	fsr2h,c
 11549                           
 11550                           ;stkvar	_fmt @ sp[(-32)+-4]
 11551  0126A8  0EDC               	movlw	-36
 11552  0126AA  006F FF8F FFE9     	movff	plusw1,fsr0l
 11553  0126B0  0EDD               	movlw	-35
 11554  0126B2  006F FF8F FFEA     	movff	plusw1,fsr0h
 11555  0126B8  006F FFB8  F030    	movff	postinc0,btemp+10
 11556  0126BE  006F FFB4  F031    	movff	postdec0,btemp+11
 11557  0126C4  0E02               	movlw	2
 11558  0126C6  2630               	addwf	(btemp+10)^0,f,c
 11559  0126C8  0E00               	movlw	0
 11560  0126CA  2231               	addwfc	(btemp+11)^0,f,c
 11561  0126CC  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 11562  0126D2  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 11563  0126D8                     	if	0	;tblptru may be non-zero
 11564  0126D8                     	endif
 11565  0126D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11566  0126D8  0E00               	movlw	low (__mediumconst shr (0+16))
 11567  0126DA  6EF8               	movwf	tblptru,c
 11568  0126DC                     	endif
 11569  0126DC  0008               	tblrd		*
 11570  0126DE  50F5               	movf	tablat,w,c
 11571  0126E0  6EE6               	movwf	postinc1,c
 11572  0126E2  0E00               	movlw	0
 11573  0126E4  6EE6               	movwf	postinc1,c
 11574  0126E6  ECA0  F0D2         	call	_tolower	;wreg free
 11575  0126EA  5026               	movf	btemp^0,w,c
 11576  0126EC  6EDF               	movwf	indf2,c
 11577  0126EE                     l12229:
 11578                           
 11579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 11580                           ;stkvar	_fmt @ sp[(-32)+-4]
 11581  0126EE  0EDC               	movlw	-36
 11582  0126F0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11583  0126F6  0EDD               	movlw	-35
 11584  0126F8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11585  0126FE  006F FF7B FFF6     	movff	postinc2,tblptrl
 11586  012704  006F FF77 FFF7     	movff	postdec2,tblptrh
 11587  01270A                     	if	0	;tblptru may be non-zero
 11588  01270A                     	endif
 11589  01270A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11590  01270A  0E00               	movlw	low (__mediumconst shr (0+16))
 11591  01270C  6EF8               	movwf	tblptru,c
 11592  01270E                     	endif
 11593  01270E  0008               	tblrd		*
 11594  012710  50F5               	movf	tablat,w,c
 11595  012712  0A63               	xorlw	99
 11596  012714  A4D8               	btfss	status,2,c
 11597  012716  D037               	goto	l12239
 11598                           
 11599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 11600                           ;stkvar	_fmt @ sp[(-32)+-4]
 11601  012718  0EDC               	movlw	-36
 11602  01271A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11603  012720  0EDD               	movlw	-35
 11604  012722  006F FF8F FFDA     	movff	plusw1,fsr2h
 11605  012728  2ADE               	incf	postinc2,f,c
 11606  01272A  0E00               	movlw	0
 11607  01272C  22DD               	addwfc	postdec2,f,c
 11608                           
 11609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11610                           ;stkvar	_ap @ sp[(-32)+-6]
 11611  01272E  0EDA               	movlw	-38
 11612  012730  006F FF8F FFD9     	movff	plusw1,fsr2l
 11613  012736  0EDB               	movlw	-37
 11614  012738  006F FF8F FFDA     	movff	plusw1,fsr2h
 11615  01273E  0E02               	movlw	2
 11616  012740  5EDE               	subwf	postinc2,f,c
 11617  012742  0E00               	movlw	0
 11618  012744  5ADD               	subwfb	postdec2,f,c
 11619  012746  006F FF78  F030    	movff	postinc2,btemp+10
 11620  01274C  006F FF74  F031    	movff	postdec2,btemp+11
 11621  012752  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11622  012758  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11623  01275E  50DF               	movf	indf2,w,c
 11624  012760  6E31               	movwf	(btemp+11)^0,c
 11625                           
 11626                           ;stkvar	_c @ sp[(-32)+31]
 11627  012762  0EFF               	movlw	-1
 11628  012764  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11629                           
 11630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 11631                           ;stkvar	_c @ sp[(-32)+31]
 11632  01276A  0EFF               	movlw	-1
 11633  01276C  50E3               	movf	plusw1,w,c
 11634  01276E  6EE6               	movwf	postinc1,c
 11635                           
 11636                           ;stkvar	_fp @ sp[(-33)+-2]
 11637  012770  0EDD               	movlw	-35
 11638  012772  006F FF8F FFE6     	movff	plusw1,postinc1
 11639  012778  006F FF8F FFE6     	movff	plusw1,postinc1
 11640  01277E  EC1A  F0D2         	call	_ctoa	;wreg free
 11641  012782  EF3C  F099         	goto	l2355
 11642  012786                     l12239:
 11643                           
 11644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 11645                           ;stkvar	_fmt @ sp[(-32)+-4]
 11646  012786  0EDC               	movlw	-36
 11647  012788  006F FF8F FFD9     	movff	plusw1,fsr2l
 11648  01278E  0EDD               	movlw	-35
 11649  012790  006F FF8F FFDA     	movff	plusw1,fsr2h
 11650  012796  006F FF7B FFF6     	movff	postinc2,tblptrl
 11651  01279C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11652  0127A2                     	if	0	;tblptru may be non-zero
 11653  0127A2                     	endif
 11654  0127A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11655  0127A2  0E00               	movlw	low (__mediumconst shr (0+16))
 11656  0127A4  6EF8               	movwf	tblptru,c
 11657  0127A6                     	endif
 11658  0127A6  0008               	tblrd		*
 11659  0127A8  50F5               	movf	tablat,w,c
 11660  0127AA  0A64               	xorlw	100
 11661  0127AC  B4D8               	btfsc	status,2,c
 11662  0127AE  D015               	goto	u11830
 11663                           
 11664                           ;stkvar	_fmt @ sp[(-32)+-4]
 11665  0127B0  0EDC               	movlw	-36
 11666  0127B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11667  0127B8  0EDD               	movlw	-35
 11668  0127BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11669  0127C0  006F FF7B FFF6     	movff	postinc2,tblptrl
 11670  0127C6  006F FF77 FFF7     	movff	postdec2,tblptrh
 11671  0127CC                     	if	0	;tblptru may be non-zero
 11672  0127CC                     	endif
 11673  0127CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11674  0127CC  0E00               	movlw	low (__mediumconst shr (0+16))
 11675  0127CE  6EF8               	movwf	tblptru,c
 11676  0127D0                     	endif
 11677  0127D0  0008               	tblrd		*
 11678  0127D2  50F5               	movf	tablat,w,c
 11679  0127D4  0A69               	xorlw	105
 11680  0127D6  A4D8               	btfss	status,2,c
 11681  0127D8  D076               	goto	l12251
 11682  0127DA                     u11830:
 11683                           
 11684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 11685                           ;stkvar	_fmt @ sp[(-32)+-4]
 11686  0127DA  0EDC               	movlw	-36
 11687  0127DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11688  0127E2  0EDD               	movlw	-35
 11689  0127E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11690  0127EA  2ADE               	incf	postinc2,f,c
 11691  0127EC  0E00               	movlw	0
 11692  0127EE  22DD               	addwfc	postdec2,f,c
 11693                           
 11694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 11695                           ;stkvar	_ap @ sp[(-32)+-6]
 11696  0127F0  0EDA               	movlw	-38
 11697  0127F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11698  0127F8  0EDB               	movlw	-37
 11699  0127FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11700  012800  0E02               	movlw	2
 11701  012802  5EDE               	subwf	postinc2,f,c
 11702  012804  0E00               	movlw	0
 11703  012806  5ADD               	subwfb	postdec2,f,c
 11704  012808  006F FF78  F030    	movff	postinc2,btemp+10
 11705  01280E  006F FF74  F031    	movff	postdec2,btemp+11
 11706  012814  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11707  01281A  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11708  012820  006F FF78  F030    	movff	postinc2,btemp+10
 11709  012826  006F FF74  F031    	movff	postdec2,btemp+11
 11710                           
 11711                           ;stkvar	_ll @ sp[(-32)+14]
 11712  01282C  0EEE               	movlw	-18
 11713  01282E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 11714  012834  0EEF               	movlw	-17
 11715  012836  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11716  01283C  6A26               	clrf	btemp^0,c
 11717  01283E  BEE3               	btfsc	plusw1,7,c
 11718  012840  6826               	setf	btemp^0,c
 11719  012842  0EF0               	movlw	-16
 11720  012844  0060  F09B  FFE3   	movff	btemp,plusw1
 11721  01284A  0EF1               	movlw	-15
 11722  01284C  0060  F09B  FFE3   	movff	btemp,plusw1
 11723  012852  0EF2               	movlw	-14
 11724  012854  0060  F09B  FFE3   	movff	btemp,plusw1
 11725  01285A  0EF3               	movlw	-13
 11726  01285C  0060  F09B  FFE3   	movff	btemp,plusw1
 11727  012862  0EF4               	movlw	-12
 11728  012864  0060  F09B  FFE3   	movff	btemp,plusw1
 11729  01286A  0EF5               	movlw	-11
 11730  01286C  0060  F09B  FFE3   	movff	btemp,plusw1
 11731  012872                     l12247:
 11732                           
 11733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 11734                           ;stkvar	_ll @ sp[(-32)+14]
 11735  012872  50E1               	movf	fsr1l,w,c
 11736  012874  0FEE               	addlw	-18
 11737  012876  6ED9               	movwf	fsr2l,c
 11738  012878  50E2               	movf	fsr1h,w,c
 11739  01287A  6EDA               	movwf	fsr2h,c
 11740  01287C  0EFF               	movlw	255
 11741  01287E  22DA               	addwfc	fsr2h,f,c
 11742  012880  006F FF7B FFE6     	movff	postinc2,postinc1
 11743  012886  006F FF7B FFE6     	movff	postinc2,postinc1
 11744  01288C  006F FF7B FFE6     	movff	postinc2,postinc1
 11745  012892  006F FF7B FFE6     	movff	postinc2,postinc1
 11746  012898  006F FF7B FFE6     	movff	postinc2,postinc1
 11747  01289E  006F FF7B FFE6     	movff	postinc2,postinc1
 11748  0128A4  006F FF7B FFE6     	movff	postinc2,postinc1
 11749  0128AA  006F FF7B FFE6     	movff	postinc2,postinc1
 11750                           
 11751                           ;stkvar	_fp @ sp[(-40)+-2]
 11752  0128B0  0ED6               	movlw	-42
 11753  0128B2  006F FF8F FFE6     	movff	plusw1,postinc1
 11754  0128B8  006F FF8F FFE6     	movff	plusw1,postinc1
 11755  0128BE  ECE8  F0A9         	call	_dtoa	;wreg free
 11756  0128C2  EF3C  F099         	goto	l2355
 11757  0128C6                     l12251:
 11758                           
 11759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 11760  0128C6  0E02               	movlw	2
 11761  0128C8  6EE6               	movwf	postinc1,c
 11762  0128CA  0E00               	movlw	0
 11763  0128CC  6EE6               	movwf	postinc1,c
 11764  0128CE  0EE9               	movlw	low STR_74
 11765  0128D0  6EE6               	movwf	postinc1,c
 11766  0128D2  0EFF               	movlw	high STR_74
 11767  0128D4  6EE6               	movwf	postinc1,c
 11768                           
 11769                           ;stkvar	_fmt @ sp[(-36)+-4]
 11770  0128D6  0ED8               	movlw	-40
 11771  0128D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11772  0128DE  0ED9               	movlw	-39
 11773  0128E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11774  0128E6  006F FF78  F030    	movff	postinc2,btemp+10
 11775  0128EC  006F FF74  F031    	movff	postdec2,btemp+11
 11776  0128F2  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 11777  0128F8  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 11778  0128FE  ECFB  F0BA         	call	_strncmp	;wreg free
 11779  012902  5026               	movf	btemp^0,w,c
 11780  012904  1027               	iorwf	(btemp+1)^0,w,c
 11781  012906  B4D8               	btfsc	status,2,c
 11782  012908  D022               	goto	u11850
 11783  01290A  0E02               	movlw	2
 11784  01290C  6EE6               	movwf	postinc1,c
 11785  01290E  0E00               	movlw	0
 11786  012910  6EE6               	movwf	postinc1,c
 11787  012912  0EEF               	movlw	low STR_78
 11788  012914  6EE6               	movwf	postinc1,c
 11789  012916  0EFF               	movlw	high STR_78
 11790  012918  6EE6               	movwf	postinc1,c
 11791                           
 11792                           ;stkvar	_fmt @ sp[(-36)+-4]
 11793  01291A  0ED8               	movlw	-40
 11794  01291C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11795  012922  0ED9               	movlw	-39
 11796  012924  006F FF8F FFDA     	movff	plusw1,fsr2h
 11797  01292A  006F FF78  F030    	movff	postinc2,btemp+10
 11798  012930  006F FF74  F031    	movff	postdec2,btemp+11
 11799  012936  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 11800  01293C  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 11801  012942  ECFB  F0BA         	call	_strncmp	;wreg free
 11802  012946  5026               	movf	btemp^0,w,c
 11803  012948  1027               	iorwf	(btemp+1)^0,w,c
 11804  01294A  A4D8               	btfss	status,2,c
 11805  01294C  D069               	goto	l12263
 11806  01294E                     u11850:
 11807                           
 11808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 11809                           ;stkvar	_fmt @ sp[(-32)+-4]
 11810  01294E  0EDC               	movlw	-36
 11811  012950  006F FF8F FFD9     	movff	plusw1,fsr2l
 11812  012956  0EDD               	movlw	-35
 11813  012958  006F FF8F FFDA     	movff	plusw1,fsr2h
 11814  01295E  0E02               	movlw	2
 11815  012960  26DE               	addwf	postinc2,f,c
 11816  012962  0E00               	movlw	0
 11817  012964  22DD               	addwfc	postdec2,f,c
 11818                           
 11819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 11820                           ;stkvar	_ap @ sp[(-32)+-6]
 11821  012966  0EDA               	movlw	-38
 11822  012968  006F FF8F FFD9     	movff	plusw1,fsr2l
 11823  01296E  0EDB               	movlw	-37
 11824  012970  006F FF8F FFDA     	movff	plusw1,fsr2h
 11825  012976  0E04               	movlw	4
 11826  012978  5EDE               	subwf	postinc2,f,c
 11827  01297A  0E00               	movlw	0
 11828  01297C  5ADD               	subwfb	postdec2,f,c
 11829  01297E  006F FF78  F030    	movff	postinc2,btemp+10
 11830  012984  006F FF74  F031    	movff	postdec2,btemp+11
 11831  01298A  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11832  012990  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11833  012996  006F FF78  F02E    	movff	postinc2,btemp+8
 11834  01299C  006F FF78  F02F    	movff	postinc2,btemp+9
 11835  0129A2  006F FF78  F030    	movff	postinc2,btemp+10
 11836  0129A8  006F FF78  F031    	movff	postinc2,btemp+11
 11837  0129AE  0060  F0B8  F036   	movff	btemp+8,btemp+16
 11838  0129B4  0060  F0BC  F037   	movff	btemp+9,btemp+17
 11839  0129BA  0060  F0C0  F038   	movff	btemp+10,btemp+18
 11840  0129C0  0060  F0C4  F039   	movff	btemp+11,btemp+19
 11841  0129C6  6A3A               	clrf	(btemp+20)^0,c
 11842  0129C8  BE39               	btfsc	(btemp+19)^0,7,c
 11843  0129CA  683A               	setf	(btemp+20)^0,c
 11844  0129CC  0060  F0E8  F03B   	movff	btemp+20,btemp+21
 11845  0129D2  0060  F0E8  F03C   	movff	btemp+20,btemp+22
 11846  0129D8  0060  F0E8  F03D   	movff	btemp+20,btemp+23
 11847                           
 11848                           ;stkvar	_ll @ sp[(-32)+14]
 11849  0129DE  0EEE               	movlw	-18
 11850  0129E0  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 11851  0129E6  0EEF               	movlw	-17
 11852  0129E8  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 11853  0129EE  0EF0               	movlw	-16
 11854  0129F0  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 11855  0129F6  0EF1               	movlw	-15
 11856  0129F8  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 11857  0129FE  0EF2               	movlw	-14
 11858  012A00  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 11859  012A06  0EF3               	movlw	-13
 11860  012A08  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 11861  012A0E  0EF4               	movlw	-12
 11862  012A10  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 11863  012A16  0EF5               	movlw	-11
 11864  012A18  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 11865  012A1E  D729               	goto	l12247
 11866  012A20                     l12263:
 11867                           
 11868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 11869                           ;stkvar	_ct @ sp[(-32)+26]
 11870  012A20  0EFA               	movlw	-6
 11871  012A22  006F FF8C  F026    	movff	plusw1,btemp
 11872  012A28  0E66               	movlw	102
 11873  012A2A  1826               	xorwf	btemp^0,w,c
 11874  012A2C  A4D8               	btfss	status,2,c
 11875  012A2E  D06E               	goto	l12275
 11876                           
 11877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 11878                           ;stkvar	_fmt @ sp[(-32)+-4]
 11879  012A30  0EDC               	movlw	-36
 11880  012A32  006F FF8F FFD9     	movff	plusw1,fsr2l
 11881  012A38  0EDD               	movlw	-35
 11882  012A3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11883  012A40  006F FF7B FFF6     	movff	postinc2,tblptrl
 11884  012A46  006F FF77 FFF7     	movff	postdec2,tblptrh
 11885  012A4C                     	if	0	;tblptru may be non-zero
 11886  012A4C                     	endif
 11887  012A4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11888  012A4C  0E00               	movlw	low (__mediumconst shr (0+16))
 11889  012A4E  6EF8               	movwf	tblptru,c
 11890  012A50                     	endif
 11891                           
 11892                           ;stkvar	_c @ sp[(-32)+31]
 11893  012A50  0008               	tblrd		*
 11894  012A52  0EFF               	movlw	-1
 11895  012A54  006F FFD7 FFE3     	movff	tablat,plusw1
 11896                           
 11897                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 11898                           ;stkvar	_fmt @ sp[(-32)+-4]
 11899  012A5A  0EDC               	movlw	-36
 11900  012A5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11901  012A62  0EDD               	movlw	-35
 11902  012A64  006F FF8F FFDA     	movff	plusw1,fsr2h
 11903  012A6A  2ADE               	incf	postinc2,f,c
 11904  012A6C  0E00               	movlw	0
 11905  012A6E  22DD               	addwfc	postdec2,f,c
 11906                           
 11907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 11908                           ;stkvar	_ap @ sp[(-32)+-6]
 11909  012A70  0EDA               	movlw	-38
 11910  012A72  006F FF8F FFD9     	movff	plusw1,fsr2l
 11911  012A78  0EDB               	movlw	-37
 11912  012A7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11913  012A80  0E04               	movlw	4
 11914  012A82  5EDE               	subwf	postinc2,f,c
 11915  012A84  0E00               	movlw	0
 11916  012A86  5ADD               	subwfb	postdec2,f,c
 11917  012A88  006F FF78  F030    	movff	postinc2,btemp+10
 11918  012A8E  006F FF74  F031    	movff	postdec2,btemp+11
 11919  012A94  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11920  012A9A  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11921  012AA0  006F FF78  F02E    	movff	postinc2,btemp+8
 11922  012AA6  006F FF78  F02F    	movff	postinc2,btemp+9
 11923  012AAC  006F FF78  F030    	movff	postinc2,btemp+10
 11924  012AB2  006F FF78  F031    	movff	postinc2,btemp+11
 11925                           
 11926                           ;stkvar	_f @ sp[(-32)+22]
 11927  012AB8  0EF6               	movlw	-10
 11928  012ABA  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 11929  012AC0  0EF7               	movlw	-9
 11930  012AC2  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 11931  012AC8  0EF8               	movlw	-8
 11932  012ACA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 11933  012AD0  0EF9               	movlw	-7
 11934  012AD2  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11935  012AD8                     l12271:
 11936                           
 11937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 11938                           ;stkvar	_c @ sp[(-32)+31]
 11939  012AD8  0EFF               	movlw	-1
 11940  012ADA  50E3               	movf	plusw1,w,c
 11941  012ADC  6EE6               	movwf	postinc1,c
 11942                           
 11943                           ;stkvar	_f @ sp[(-33)+22]
 11944  012ADE  0EF5               	movlw	-11
 11945  012AE0  006F FF8F FFE6     	movff	plusw1,postinc1
 11946  012AE6  006F FF8F FFE6     	movff	plusw1,postinc1
 11947  012AEC  006F FF8F FFE6     	movff	plusw1,postinc1
 11948  012AF2  006F FF8F FFE6     	movff	plusw1,postinc1
 11949                           
 11950                           ;stkvar	_fp @ sp[(-37)+-2]
 11951  012AF8  0ED9               	movlw	-39
 11952  012AFA  006F FF8F FFE6     	movff	plusw1,postinc1
 11953  012B00  006F FF8F FFE6     	movff	plusw1,postinc1
 11954  012B06  EC00  F080         	call	_efgtoa	;wreg free
 11955  012B0A  D3B6               	goto	l2355
 11956  012B0C                     l12275:
 11957                           
 11958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 11959  012B0C  0E02               	movlw	2
 11960  012B0E  6EE6               	movwf	postinc1,c
 11961  012B10  0E00               	movlw	0
 11962  012B12  6EE6               	movwf	postinc1,c
 11963  012B14  0EEC               	movlw	low STR_83
 11964  012B16  6EE6               	movwf	postinc1,c
 11965  012B18  0EFF               	movlw	high STR_83
 11966  012B1A  6EE6               	movwf	postinc1,c
 11967                           
 11968                           ;stkvar	_ct @ sp[(-36)+26]
 11969  012B1C  0EF6               	movlw	246
 11970  012B1E  24E1               	addwf	fsr1l,w,c
 11971  012B20  6E26               	movwf	btemp^0,c
 11972  012B22  0EFF               	movlw	255
 11973  012B24  20E2               	addwfc	fsr1h,w,c
 11974  012B26  6E27               	movwf	(btemp+1)^0,c
 11975  012B28  0060  F09B  FFE6   	movff	btemp,postinc1
 11976  012B2E  0060  F09F  FFE6   	movff	btemp+1,postinc1
 11977  012B34  ECFB  F0BA         	call	_strncmp	;wreg free
 11978  012B38  5026               	movf	btemp^0,w,c
 11979  012B3A  1027               	iorwf	(btemp+1)^0,w,c
 11980  012B3C  A4D8               	btfss	status,2,c
 11981  012B3E  D096               	goto	l12295
 11982                           
 11983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 11984                           ;stkvar	_fmt @ sp[(-32)+-4]
 11985  012B40  0EDC               	movlw	-36
 11986  012B42  006F FF8F FFD9     	movff	plusw1,fsr2l
 11987  012B48  0EDD               	movlw	-35
 11988  012B4A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11989  012B50  006F FF78  F030    	movff	postinc2,btemp+10
 11990  012B56  006F FF74  F031    	movff	postdec2,btemp+11
 11991  012B5C  0E01               	movlw	1
 11992  012B5E  2630               	addwf	(btemp+10)^0,f,c
 11993  012B60  0E00               	movlw	0
 11994  012B62  2231               	addwfc	(btemp+11)^0,f,c
 11995  012B64  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 11996  012B6A  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 11997  012B70                     	if	0	;tblptru may be non-zero
 11998  012B70                     	endif
 11999  012B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12000  012B70  0E00               	movlw	low (__mediumconst shr (0+16))
 12001  012B72  6EF8               	movwf	tblptru,c
 12002  012B74                     	endif
 12003                           
 12004                           ;stkvar	_c @ sp[(-32)+31]
 12005  012B74  0008               	tblrd		*
 12006  012B76  0EFF               	movlw	-1
 12007  012B78  006F FFD7 FFE3     	movff	tablat,plusw1
 12008  012B7E  0EBF               	movlw	191
 12009  012B80  6E30               	movwf	(btemp+10)^0,c
 12010  012B82  0EFF               	movlw	255
 12011  012B84  6E31               	movwf	(btemp+11)^0,c
 12012                           
 12013                           ;stkvar	_fmt @ sp[(-32)+-4]
 12014  012B86  0EDC               	movlw	-36
 12015  012B88  006F FF8F FFD9     	movff	plusw1,fsr2l
 12016  012B8E  0EDD               	movlw	-35
 12017  012B90  006F FF8F FFDA     	movff	plusw1,fsr2h
 12018  012B96  006F FF7B FFF6     	movff	postinc2,tblptrl
 12019  012B9C  006F FF77 FFF7     	movff	postdec2,tblptrh
 12020  012BA2                     	if	0	;tblptru may be non-zero
 12021  012BA2                     	endif
 12022  012BA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12023  012BA2  0E00               	movlw	low (__mediumconst shr (0+16))
 12024  012BA4  6EF8               	movwf	tblptru,c
 12025  012BA6                     	endif
 12026  012BA6  0008               	tblrd		*
 12027  012BA8  50F5               	movf	tablat,w,c
 12028  012BAA  6E2E               	movwf	(btemp+8)^0,c
 12029  012BAC  6A2F               	clrf	(btemp+9)^0,c
 12030  012BAE  5030               	movf	(btemp+10)^0,w,c
 12031  012BB0  262E               	addwf	(btemp+8)^0,f,c
 12032  012BB2  5031               	movf	(btemp+11)^0,w,c
 12033  012BB4  222F               	addwfc	(btemp+9)^0,f,c
 12034  012BB6  502F               	movf	(btemp+9)^0,w,c
 12035  012BB8  E106               	bnz	u11880
 12036  012BBA  0E1A               	movlw	26
 12037  012BBC  5C2E               	subwf	(btemp+8)^0,w,c
 12038  012BBE  B0D8               	btfsc	status,0,c
 12039  012BC0  D002               	goto	u11880
 12040  012BC2  0E01               	movlw	1
 12041  012BC4  D001               	goto	u11890
 12042  012BC6                     u11880:
 12043  012BC6  0E00               	movlw	0
 12044  012BC8                     u11890:
 12045  012BC8  6E30               	movwf	(btemp+10)^0,c
 12046  012BCA  6A31               	clrf	(btemp+11)^0,c
 12047                           
 12048                           ;stkvar	_vfpfcnvrt$5474 @ sp[(-32)+2]
 12049  012BCC  0EE2               	movlw	-30
 12050  012BCE  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12051  012BD4  0EE3               	movlw	-29
 12052  012BD6  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12053                           
 12054                           ;stkvar	_vfpfcnvrt$5474 @ sp[(-32)+2]
 12055  012BDC  0EE2               	movlw	-30
 12056  012BDE  006F FF8C  F026    	movff	plusw1,btemp
 12057  012BE4  0EE3               	movlw	-29
 12058  012BE6  50E3               	movf	plusw1,w,c
 12059  012BE8  1026               	iorwf	btemp^0,w,c
 12060                           
 12061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 12062                           ;stkvar	_ap @ sp[(-32)+-6]
 12063                           
 12064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 12065                           
 12066                           ;stkvar	_f @ sp[(-32)+22]
 12067                           
 12068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12069                           ;stkvar	_ap @ sp[(-32)+-6]
 12070  012BEA  0EDA               	movlw	-38
 12071  012BEC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12072  012BF2  0EDB               	movlw	-37
 12073  012BF4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12074  012BFA  0E04               	movlw	4
 12075  012BFC  5EDE               	subwf	postinc2,f,c
 12076  012BFE  0E00               	movlw	0
 12077  012C00  5ADD               	subwfb	postdec2,f,c
 12078  012C02  006F FF78  F030    	movff	postinc2,btemp+10
 12079  012C08  006F FF74  F031    	movff	postdec2,btemp+11
 12080  012C0E  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12081  012C14  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12082  012C1A  006F FF78  F02E    	movff	postinc2,btemp+8
 12083  012C20  006F FF78  F02F    	movff	postinc2,btemp+9
 12084  012C26  006F FF78  F030    	movff	postinc2,btemp+10
 12085  012C2C  006F FF78  F031    	movff	postinc2,btemp+11
 12086                           
 12087                           ;stkvar	_f @ sp[(-32)+22]
 12088  012C32  0EF6               	movlw	-10
 12089  012C34  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 12090  012C3A  0EF7               	movlw	-9
 12091  012C3C  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 12092  012C42  0EF8               	movlw	-8
 12093  012C44  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12094  012C4A  0EF9               	movlw	-7
 12095  012C4C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12096                           
 12097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12098                           ;stkvar	_fmt @ sp[(-32)+-4]
 12099  012C52  0EDC               	movlw	-36
 12100  012C54  006F FF8F FFD9     	movff	plusw1,fsr2l
 12101  012C5A  0EDD               	movlw	-35
 12102  012C5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12103  012C62  0E02               	movlw	2
 12104  012C64  26DE               	addwf	postinc2,f,c
 12105  012C66  0E00               	movlw	0
 12106  012C68  22DD               	addwfc	postdec2,f,c
 12107  012C6A  D736               	goto	l12271
 12108  012C6C                     l12295:
 12109                           
 12110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12111                           ;stkvar	_fmt @ sp[(-32)+-4]
 12112  012C6C  0EDC               	movlw	-36
 12113  012C6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12114  012C74  0EDD               	movlw	-35
 12115  012C76  006F FF8F FFDA     	movff	plusw1,fsr2h
 12116  012C7C  006F FF7B FFF6     	movff	postinc2,tblptrl
 12117  012C82  006F FF77 FFF7     	movff	postdec2,tblptrh
 12118  012C88                     	if	0	;tblptru may be non-zero
 12119  012C88                     	endif
 12120  012C88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12121  012C88  0E00               	movlw	low (__mediumconst shr (0+16))
 12122  012C8A  6EF8               	movwf	tblptru,c
 12123  012C8C                     	endif
 12124  012C8C  0008               	tblrd		*
 12125  012C8E  50F5               	movf	tablat,w,c
 12126  012C90  0A73               	xorlw	115
 12127  012C92  A4D8               	btfss	status,2,c
 12128  012C94  D042               	goto	l12305
 12129                           
 12130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12131                           ;stkvar	_fmt @ sp[(-32)+-4]
 12132  012C96  0EDC               	movlw	-36
 12133  012C98  006F FF8F FFD9     	movff	plusw1,fsr2l
 12134  012C9E  0EDD               	movlw	-35
 12135  012CA0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12136  012CA6  2ADE               	incf	postinc2,f,c
 12137  012CA8  0E00               	movlw	0
 12138  012CAA  22DD               	addwfc	postdec2,f,c
 12139                           
 12140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12141                           ;stkvar	_ap @ sp[(-32)+-6]
 12142  012CAC  0EDA               	movlw	-38
 12143  012CAE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12144  012CB4  0EDB               	movlw	-37
 12145  012CB6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12146  012CBC  0E02               	movlw	2
 12147  012CBE  5EDE               	subwf	postinc2,f,c
 12148  012CC0  0E00               	movlw	0
 12149  012CC2  5ADD               	subwfb	postdec2,f,c
 12150  012CC4  006F FF78  F030    	movff	postinc2,btemp+10
 12151  012CCA  006F FF74  F031    	movff	postdec2,btemp+11
 12152  012CD0  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12153  012CD6  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12154  012CDC  006F FF78  F030    	movff	postinc2,btemp+10
 12155  012CE2  006F FF74  F031    	movff	postdec2,btemp+11
 12156                           
 12157                           ;stkvar	_cp @ sp[(-32)+29]
 12158  012CE8  0EFE               	movlw	-2
 12159  012CEA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12160  012CF0  0EFD               	movlw	-3
 12161  012CF2  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12162                           
 12163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12164                           ;stkvar	_cp @ sp[(-32)+29]
 12165  012CF8  0EFD               	movlw	-3
 12166  012CFA  006F FF8F FFE6     	movff	plusw1,postinc1
 12167  012D00  006F FF8F FFE6     	movff	plusw1,postinc1
 12168                           
 12169                           ;stkvar	_fp @ sp[(-34)+-2]
 12170  012D06  0EDC               	movlw	-36
 12171  012D08  006F FF8F FFE6     	movff	plusw1,postinc1
 12172  012D0E  006F FF8F FFE6     	movff	plusw1,postinc1
 12173  012D14  EC02  F0B6         	call	_stoa	;wreg free
 12174  012D18  D2AF               	goto	l2355
 12175  012D1A                     l12305:
 12176                           
 12177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12178                           ;stkvar	_fmt @ sp[(-32)+-4]
 12179  012D1A  0EDC               	movlw	-36
 12180  012D1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12181  012D22  0EDD               	movlw	-35
 12182  012D24  006F FF8F FFDA     	movff	plusw1,fsr2h
 12183  012D2A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12184  012D30  006F FF77 FFF7     	movff	postdec2,tblptrh
 12185  012D36                     	if	0	;tblptru may be non-zero
 12186  012D36                     	endif
 12187  012D36                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12188  012D36  0E00               	movlw	low (__mediumconst shr (0+16))
 12189  012D38  6EF8               	movwf	tblptru,c
 12190  012D3A                     	endif
 12191  012D3A  0008               	tblrd		*
 12192  012D3C  50F5               	movf	tablat,w,c
 12193  012D3E  0A75               	xorlw	117
 12194  012D40  A4D8               	btfss	status,2,c
 12195  012D42  D07C               	goto	l12315
 12196                           
 12197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12198                           ;stkvar	_fmt @ sp[(-32)+-4]
 12199  012D44  0EDC               	movlw	-36
 12200  012D46  006F FF8F FFD9     	movff	plusw1,fsr2l
 12201  012D4C  0EDD               	movlw	-35
 12202  012D4E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12203  012D54  2ADE               	incf	postinc2,f,c
 12204  012D56  0E00               	movlw	0
 12205  012D58  22DD               	addwfc	postdec2,f,c
 12206                           
 12207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12208                           ;stkvar	_ap @ sp[(-32)+-6]
 12209  012D5A  0EDA               	movlw	-38
 12210  012D5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12211  012D62  0EDB               	movlw	-37
 12212  012D64  006F FF8F FFDA     	movff	plusw1,fsr2h
 12213  012D6A  0E02               	movlw	2
 12214  012D6C  5EDE               	subwf	postinc2,f,c
 12215  012D6E  0E00               	movlw	0
 12216  012D70  5ADD               	subwfb	postdec2,f,c
 12217  012D72  006F FF78  F030    	movff	postinc2,btemp+10
 12218  012D78  006F FF74  F031    	movff	postdec2,btemp+11
 12219  012D7E  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12220  012D84  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12221  012D8A  006F FF78  F030    	movff	postinc2,btemp+10
 12222  012D90  006F FF74  F031    	movff	postdec2,btemp+11
 12223  012D96  5030               	movf	(btemp+10)^0,w,c
 12224  012D98  6E36               	movwf	(btemp+16)^0,c
 12225  012D9A  5031               	movf	(btemp+11)^0,w,c
 12226  012D9C  6E37               	movwf	(btemp+17)^0,c
 12227  012D9E  6A38               	clrf	(btemp+18)^0,c
 12228  012DA0  6A39               	clrf	(btemp+19)^0,c
 12229  012DA2  6A3A               	clrf	(btemp+20)^0,c
 12230  012DA4  6A3B               	clrf	(btemp+21)^0,c
 12231  012DA6  6A3C               	clrf	(btemp+22)^0,c
 12232  012DA8  6A3D               	clrf	(btemp+23)^0,c
 12233                           
 12234                           ;stkvar	_llu @ sp[(-32)+6]
 12235  012DAA  0EE6               	movlw	-26
 12236  012DAC  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 12237  012DB2  0EE7               	movlw	-25
 12238  012DB4  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 12239  012DBA  0EE8               	movlw	-24
 12240  012DBC  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 12241  012DC2  0EE9               	movlw	-23
 12242  012DC4  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 12243  012DCA  0EEA               	movlw	-22
 12244  012DCC  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 12245  012DD2  0EEB               	movlw	-21
 12246  012DD4  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 12247  012DDA  0EEC               	movlw	-20
 12248  012DDC  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 12249  012DE2  0EED               	movlw	-19
 12250  012DE4  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 12251                           
 12252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12253                           ;stkvar	_llu @ sp[(-32)+6]
 12254  012DEA  50E1               	movf	fsr1l,w,c
 12255  012DEC  0FE6               	addlw	-26
 12256  012DEE  6ED9               	movwf	fsr2l,c
 12257  012DF0  50E2               	movf	fsr1h,w,c
 12258  012DF2  6EDA               	movwf	fsr2h,c
 12259  012DF4  0EFF               	movlw	255
 12260  012DF6  22DA               	addwfc	fsr2h,f,c
 12261  012DF8  006F FF7B FFE6     	movff	postinc2,postinc1
 12262  012DFE  006F FF7B FFE6     	movff	postinc2,postinc1
 12263  012E04  006F FF7B FFE6     	movff	postinc2,postinc1
 12264  012E0A  006F FF7B FFE6     	movff	postinc2,postinc1
 12265  012E10  006F FF7B FFE6     	movff	postinc2,postinc1
 12266  012E16  006F FF7B FFE6     	movff	postinc2,postinc1
 12267  012E1C  006F FF7B FFE6     	movff	postinc2,postinc1
 12268  012E22  006F FF7B FFE6     	movff	postinc2,postinc1
 12269                           
 12270                           ;stkvar	_fp @ sp[(-40)+-2]
 12271  012E28  0ED6               	movlw	-42
 12272  012E2A  006F FF8F FFE6     	movff	plusw1,postinc1
 12273  012E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12274  012E36  EC8C  F0B1         	call	_utoa	;wreg free
 12275  012E3A  D21E               	goto	l2355
 12276  012E3C                     l12315:
 12277                           
 12278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12279  012E3C  0E02               	movlw	2
 12280  012E3E  6EE6               	movwf	postinc1,c
 12281  012E40  0E00               	movlw	0
 12282  012E42  6EE6               	movwf	postinc1,c
 12283  012E44  0EF2               	movlw	low STR_88
 12284  012E46  6EE6               	movwf	postinc1,c
 12285  012E48  0EFF               	movlw	high STR_88
 12286  012E4A  6EE6               	movwf	postinc1,c
 12287                           
 12288                           ;stkvar	_fmt @ sp[(-36)+-4]
 12289  012E4C  0ED8               	movlw	-40
 12290  012E4E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12291  012E54  0ED9               	movlw	-39
 12292  012E56  006F FF8F FFDA     	movff	plusw1,fsr2h
 12293  012E5C  006F FF78  F030    	movff	postinc2,btemp+10
 12294  012E62  006F FF74  F031    	movff	postdec2,btemp+11
 12295  012E68  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 12296  012E6E  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 12297  012E74  ECFB  F0BA         	call	_strncmp	;wreg free
 12298  012E78  5026               	movf	btemp^0,w,c
 12299  012E7A  1027               	iorwf	(btemp+1)^0,w,c
 12300  012E7C  A4D8               	btfss	status,2,c
 12301  012E7E  D039               	goto	l12325
 12302                           
 12303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12304                           ;stkvar	_fmt @ sp[(-32)+-4]
 12305  012E80  0EDC               	movlw	-36
 12306  012E82  006F FF8F FFD9     	movff	plusw1,fsr2l
 12307  012E88  0EDD               	movlw	-35
 12308  012E8A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12309  012E90  0E02               	movlw	2
 12310  012E92  26DE               	addwf	postinc2,f,c
 12311  012E94  0E00               	movlw	0
 12312  012E96  22DD               	addwfc	postdec2,f,c
 12313                           
 12314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12315                           ;stkvar	_ap @ sp[(-32)+-6]
 12316  012E98  0EDA               	movlw	-38
 12317  012E9A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12318  012EA0  0EDB               	movlw	-37
 12319  012EA2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12320  012EA8  0E04               	movlw	4
 12321  012EAA  5EDE               	subwf	postinc2,f,c
 12322  012EAC  0E00               	movlw	0
 12323  012EAE  5ADD               	subwfb	postdec2,f,c
 12324  012EB0  006F FF78  F030    	movff	postinc2,btemp+10
 12325  012EB6  006F FF74  F031    	movff	postdec2,btemp+11
 12326  012EBC  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12327  012EC2  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12328  012EC8  006F FF78  F02E    	movff	postinc2,btemp+8
 12329  012ECE  006F FF78  F02F    	movff	postinc2,btemp+9
 12330  012ED4  006F FF78  F030    	movff	postinc2,btemp+10
 12331  012EDA  006F FF78  F031    	movff	postinc2,btemp+11
 12332  012EE0  502E               	movf	(btemp+8)^0,w,c
 12333  012EE2  6E36               	movwf	(btemp+16)^0,c
 12334  012EE4  502F               	movf	(btemp+9)^0,w,c
 12335  012EE6  6E37               	movwf	(btemp+17)^0,c
 12336  012EE8  5030               	movf	(btemp+10)^0,w,c
 12337  012EEA  6E38               	movwf	(btemp+18)^0,c
 12338  012EEC  5031               	movf	(btemp+11)^0,w,c
 12339  012EEE  6E39               	movwf	(btemp+19)^0,c
 12340  012EF0  D758               	goto	L10
 12341  012EF2                     l12325:
 12342                           
 12343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12344                           ;stkvar	_fmt @ sp[(-32)+-4]
 12345  012EF2  0EDC               	movlw	-36
 12346  012EF4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12347  012EFA  0EDD               	movlw	-35
 12348  012EFC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12349  012F02  006F FF7B FFF6     	movff	postinc2,tblptrl
 12350  012F08  006F FF77 FFF7     	movff	postdec2,tblptrh
 12351  012F0E                     	if	0	;tblptru may be non-zero
 12352  012F0E                     	endif
 12353  012F0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12354  012F0E  0E00               	movlw	low (__mediumconst shr (0+16))
 12355  012F10  6EF8               	movwf	tblptru,c
 12356  012F12                     	endif
 12357  012F12  0008               	tblrd		*
 12358  012F14  50F5               	movf	tablat,w,c
 12359  012F16  0A78               	xorlw	120
 12360  012F18  B4D8               	btfsc	status,2,c
 12361  012F1A  D015               	goto	u11950
 12362                           
 12363                           ;stkvar	_fmt @ sp[(-32)+-4]
 12364  012F1C  0EDC               	movlw	-36
 12365  012F1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12366  012F24  0EDD               	movlw	-35
 12367  012F26  006F FF8F FFDA     	movff	plusw1,fsr2h
 12368  012F2C  006F FF7B FFF6     	movff	postinc2,tblptrl
 12369  012F32  006F FF77 FFF7     	movff	postdec2,tblptrh
 12370  012F38                     	if	0	;tblptru may be non-zero
 12371  012F38                     	endif
 12372  012F38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12373  012F38  0E00               	movlw	low (__mediumconst shr (0+16))
 12374  012F3A  6EF8               	movwf	tblptru,c
 12375  012F3C                     	endif
 12376  012F3C  0008               	tblrd		*
 12377  012F3E  50F5               	movf	tablat,w,c
 12378  012F40  0A58               	xorlw	88
 12379  012F42  A4D8               	btfss	status,2,c
 12380  012F44  D094               	goto	l12339
 12381  012F46                     u11950:
 12382                           
 12383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 12384                           ;stkvar	_fmt @ sp[(-32)+-4]
 12385  012F46  0EDC               	movlw	-36
 12386  012F48  006F FF8F FFD9     	movff	plusw1,fsr2l
 12387  012F4E  0EDD               	movlw	-35
 12388  012F50  006F FF8F FFDA     	movff	plusw1,fsr2h
 12389  012F56  006F FF7B FFF6     	movff	postinc2,tblptrl
 12390  012F5C  006F FF77 FFF7     	movff	postdec2,tblptrh
 12391  012F62                     	if	0	;tblptru may be non-zero
 12392  012F62                     	endif
 12393  012F62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12394  012F62  0E00               	movlw	low (__mediumconst shr (0+16))
 12395  012F64  6EF8               	movwf	tblptru,c
 12396  012F66                     	endif
 12397                           
 12398                           ;stkvar	_c @ sp[(-32)+31]
 12399  012F66  0008               	tblrd		*
 12400  012F68  0EFF               	movlw	-1
 12401  012F6A  006F FFD7 FFE3     	movff	tablat,plusw1
 12402                           
 12403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 12404                           ;stkvar	_fmt @ sp[(-32)+-4]
 12405  012F70  0EDC               	movlw	-36
 12406  012F72  006F FF8F FFD9     	movff	plusw1,fsr2l
 12407  012F78  0EDD               	movlw	-35
 12408  012F7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12409  012F80  2ADE               	incf	postinc2,f,c
 12410  012F82  0E00               	movlw	0
 12411  012F84  22DD               	addwfc	postdec2,f,c
 12412                           
 12413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12414                           ;stkvar	_ap @ sp[(-32)+-6]
 12415  012F86  0EDA               	movlw	-38
 12416  012F88  006F FF8F FFD9     	movff	plusw1,fsr2l
 12417  012F8E  0EDB               	movlw	-37
 12418  012F90  006F FF8F FFDA     	movff	plusw1,fsr2h
 12419  012F96  0E02               	movlw	2
 12420  012F98  5EDE               	subwf	postinc2,f,c
 12421  012F9A  0E00               	movlw	0
 12422  012F9C  5ADD               	subwfb	postdec2,f,c
 12423  012F9E  006F FF78  F030    	movff	postinc2,btemp+10
 12424  012FA4  006F FF74  F031    	movff	postdec2,btemp+11
 12425  012FAA  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12426  012FB0  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12427  012FB6  006F FF78  F030    	movff	postinc2,btemp+10
 12428  012FBC  006F FF74  F031    	movff	postdec2,btemp+11
 12429  012FC2  5030               	movf	(btemp+10)^0,w,c
 12430  012FC4  6E36               	movwf	(btemp+16)^0,c
 12431  012FC6  5031               	movf	(btemp+11)^0,w,c
 12432  012FC8  6E37               	movwf	(btemp+17)^0,c
 12433  012FCA  6A38               	clrf	(btemp+18)^0,c
 12434  012FCC  6A39               	clrf	(btemp+19)^0,c
 12435  012FCE  6A3A               	clrf	(btemp+20)^0,c
 12436  012FD0  6A3B               	clrf	(btemp+21)^0,c
 12437  012FD2  6A3C               	clrf	(btemp+22)^0,c
 12438  012FD4  6A3D               	clrf	(btemp+23)^0,c
 12439                           
 12440                           ;stkvar	_llu @ sp[(-32)+6]
 12441  012FD6  0EE6               	movlw	-26
 12442  012FD8  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 12443  012FDE  0EE7               	movlw	-25
 12444  012FE0  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 12445  012FE6  0EE8               	movlw	-24
 12446  012FE8  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 12447  012FEE  0EE9               	movlw	-23
 12448  012FF0  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 12449  012FF6  0EEA               	movlw	-22
 12450  012FF8  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 12451  012FFE  0EEB               	movlw	-21
 12452  013000  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 12453  013006  0EEC               	movlw	-20
 12454  013008  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 12455  01300E  0EED               	movlw	-19
 12456  013010  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 12457                           
 12458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 12459                           ;stkvar	_c @ sp[(-32)+31]
 12460  013016  0EFF               	movlw	-1
 12461  013018  50E3               	movf	plusw1,w,c
 12462  01301A  6EE6               	movwf	postinc1,c
 12463                           
 12464                           ;stkvar	_llu @ sp[(-33)+6]
 12465  01301C  50E1               	movf	fsr1l,w,c
 12466  01301E  0FE5               	addlw	-27
 12467  013020  6ED9               	movwf	fsr2l,c
 12468  013022  50E2               	movf	fsr1h,w,c
 12469  013024  6EDA               	movwf	fsr2h,c
 12470  013026  0EFF               	movlw	255
 12471  013028  22DA               	addwfc	fsr2h,f,c
 12472  01302A  006F FF7B FFE6     	movff	postinc2,postinc1
 12473  013030  006F FF7B FFE6     	movff	postinc2,postinc1
 12474  013036  006F FF7B FFE6     	movff	postinc2,postinc1
 12475  01303C  006F FF7B FFE6     	movff	postinc2,postinc1
 12476  013042  006F FF7B FFE6     	movff	postinc2,postinc1
 12477  013048  006F FF7B FFE6     	movff	postinc2,postinc1
 12478  01304E  006F FF7B FFE6     	movff	postinc2,postinc1
 12479  013054  006F FF7B FFE6     	movff	postinc2,postinc1
 12480                           
 12481                           ;stkvar	_fp @ sp[(-41)+-2]
 12482  01305A  0ED5               	movlw	-43
 12483  01305C  006F FF8F FFE6     	movff	plusw1,postinc1
 12484  013062  006F FF8F FFE6     	movff	plusw1,postinc1
 12485  013068  EC28  F0AC         	call	_xtoa	;wreg free
 12486  01306C  D105               	goto	l2355
 12487  01306E                     l12339:
 12488                           
 12489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 12490  01306E  0E02               	movlw	2
 12491  013070  6EE6               	movwf	postinc1,c
 12492  013072  0E00               	movlw	0
 12493  013074  6EE6               	movwf	postinc1,c
 12494  013076  0EF5               	movlw	low STR_93
 12495  013078  6EE6               	movwf	postinc1,c
 12496  01307A  0EFF               	movlw	high STR_93
 12497  01307C  6EE6               	movwf	postinc1,c
 12498                           
 12499                           ;stkvar	_fmt @ sp[(-36)+-4]
 12500  01307E  0ED8               	movlw	-40
 12501  013080  006F FF8F FFD9     	movff	plusw1,fsr2l
 12502  013086  0ED9               	movlw	-39
 12503  013088  006F FF8F FFDA     	movff	plusw1,fsr2h
 12504  01308E  006F FF78  F030    	movff	postinc2,btemp+10
 12505  013094  006F FF74  F031    	movff	postdec2,btemp+11
 12506  01309A  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 12507  0130A0  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 12508  0130A6  ECFB  F0BA         	call	_strncmp	;wreg free
 12509  0130AA  5026               	movf	btemp^0,w,c
 12510  0130AC  1027               	iorwf	(btemp+1)^0,w,c
 12511  0130AE  B4D8               	btfsc	status,2,c
 12512  0130B0  D022               	goto	u11970
 12513  0130B2  0E02               	movlw	2
 12514  0130B4  6EE6               	movwf	postinc1,c
 12515  0130B6  0E00               	movlw	0
 12516  0130B8  6EE6               	movwf	postinc1,c
 12517  0130BA  0EE6               	movlw	low STR_97
 12518  0130BC  6EE6               	movwf	postinc1,c
 12519  0130BE  0EFF               	movlw	high STR_97
 12520  0130C0  6EE6               	movwf	postinc1,c
 12521                           
 12522                           ;stkvar	_fmt @ sp[(-36)+-4]
 12523  0130C2  0ED8               	movlw	-40
 12524  0130C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12525  0130CA  0ED9               	movlw	-39
 12526  0130CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12527  0130D2  006F FF78  F030    	movff	postinc2,btemp+10
 12528  0130D8  006F FF74  F031    	movff	postdec2,btemp+11
 12529  0130DE  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 12530  0130E4  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 12531  0130EA  ECFB  F0BA         	call	_strncmp	;wreg free
 12532  0130EE  5026               	movf	btemp^0,w,c
 12533  0130F0  1027               	iorwf	(btemp+1)^0,w,c
 12534  0130F2  A4D8               	btfss	status,2,c
 12535  0130F4  D058               	goto	l12353
 12536  0130F6                     u11970:
 12537                           
 12538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 12539                           ;stkvar	_fmt @ sp[(-32)+-4]
 12540  0130F6  0EDC               	movlw	-36
 12541  0130F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12542  0130FE  0EDD               	movlw	-35
 12543  013100  006F FF8F FFDA     	movff	plusw1,fsr2h
 12544  013106  006F FF78  F030    	movff	postinc2,btemp+10
 12545  01310C  006F FF74  F031    	movff	postdec2,btemp+11
 12546  013112  0E01               	movlw	1
 12547  013114  2630               	addwf	(btemp+10)^0,f,c
 12548  013116  0E00               	movlw	0
 12549  013118  2231               	addwfc	(btemp+11)^0,f,c
 12550  01311A  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 12551  013120  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 12552  013126                     	if	0	;tblptru may be non-zero
 12553  013126                     	endif
 12554  013126                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12555  013126  0E00               	movlw	low (__mediumconst shr (0+16))
 12556  013128  6EF8               	movwf	tblptru,c
 12557  01312A                     	endif
 12558                           
 12559                           ;stkvar	_c @ sp[(-32)+31]
 12560  01312A  0008               	tblrd		*
 12561  01312C  0EFF               	movlw	-1
 12562  01312E  006F FFD7 FFE3     	movff	tablat,plusw1
 12563                           
 12564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 12565                           ;stkvar	_fmt @ sp[(-32)+-4]
 12566  013134  0EDC               	movlw	-36
 12567  013136  006F FF8F FFD9     	movff	plusw1,fsr2l
 12568  01313C  0EDD               	movlw	-35
 12569  01313E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12570  013144  0E02               	movlw	2
 12571  013146  26DE               	addwf	postinc2,f,c
 12572  013148  0E00               	movlw	0
 12573  01314A  22DD               	addwfc	postdec2,f,c
 12574                           
 12575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12576                           ;stkvar	_ap @ sp[(-32)+-6]
 12577  01314C  0EDA               	movlw	-38
 12578  01314E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12579  013154  0EDB               	movlw	-37
 12580  013156  006F FF8F FFDA     	movff	plusw1,fsr2h
 12581  01315C  0E04               	movlw	4
 12582  01315E  5EDE               	subwf	postinc2,f,c
 12583  013160  0E00               	movlw	0
 12584  013162  5ADD               	subwfb	postdec2,f,c
 12585  013164  006F FF78  F030    	movff	postinc2,btemp+10
 12586  01316A  006F FF74  F031    	movff	postdec2,btemp+11
 12587  013170  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12588  013176  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12589  01317C  006F FF78  F02E    	movff	postinc2,btemp+8
 12590  013182  006F FF78  F02F    	movff	postinc2,btemp+9
 12591  013188  006F FF78  F030    	movff	postinc2,btemp+10
 12592  01318E  006F FF78  F031    	movff	postinc2,btemp+11
 12593  013194  502E               	movf	(btemp+8)^0,w,c
 12594  013196  6E36               	movwf	(btemp+16)^0,c
 12595  013198  502F               	movf	(btemp+9)^0,w,c
 12596  01319A  6E37               	movwf	(btemp+17)^0,c
 12597  01319C  5030               	movf	(btemp+10)^0,w,c
 12598  01319E  6E38               	movwf	(btemp+18)^0,c
 12599  0131A0  5031               	movf	(btemp+11)^0,w,c
 12600  0131A2  6E39               	movwf	(btemp+19)^0,c
 12601  0131A4  D714               	goto	L11
 12602  0131A6                     l12353:
 12603                           
 12604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 12605                           ;stkvar	_fmt @ sp[(-32)+-4]
 12606  0131A6  0EDC               	movlw	-36
 12607  0131A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12608  0131AE  0EDD               	movlw	-35
 12609  0131B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12610  0131B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 12611  0131BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 12612  0131C2                     	if	0	;tblptru may be non-zero
 12613  0131C2                     	endif
 12614  0131C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12615  0131C2  0E00               	movlw	low (__mediumconst shr (0+16))
 12616  0131C4  6EF8               	movwf	tblptru,c
 12617  0131C6                     	endif
 12618  0131C6  0008               	tblrd		*
 12619  0131C8  50F5               	movf	tablat,w,c
 12620  0131CA  0A25               	xorlw	37
 12621  0131CC  A4D8               	btfss	status,2,c
 12622  0131CE  D01A               	goto	l12363
 12623                           
 12624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 12625                           ;stkvar	_fmt @ sp[(-32)+-4]
 12626  0131D0  0EDC               	movlw	-36
 12627  0131D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12628  0131D8  0EDD               	movlw	-35
 12629  0131DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12630  0131E0  2ADE               	incf	postinc2,f,c
 12631  0131E2  0E00               	movlw	0
 12632  0131E4  22DD               	addwfc	postdec2,f,c
 12633                           
 12634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 12635                           ;stkvar	_fp @ sp[(-32)+-2]
 12636  0131E6  0EDE               	movlw	-34
 12637  0131E8  006F FF8F FFE6     	movff	plusw1,postinc1
 12638  0131EE  006F FF8F FFE6     	movff	plusw1,postinc1
 12639  0131F4  0E25               	movlw	37
 12640  0131F6  6EE6               	movwf	postinc1,c
 12641  0131F8  0E00               	movlw	0
 12642  0131FA  6EE6               	movwf	postinc1,c
 12643  0131FC  EC89  F0C7         	call	_fputc	;wreg free
 12644  013200                     l12359:
 12645                           
 12646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 12647  013200  0E01               	movlw	1
 12648  013202  D00C               	goto	L12
 12649  013204                     l12363:
 12650                           
 12651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 12652                           ;stkvar	_fmt @ sp[(-32)+-4]
 12653  013204  0EDC               	movlw	-36
 12654  013206  006F FF8F FFD9     	movff	plusw1,fsr2l
 12655  01320C  0EDD               	movlw	-35
 12656  01320E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12657  013214  2ADE               	incf	postinc2,f,c
 12658  013216  0E00               	movlw	0
 12659  013218  22DD               	addwfc	postdec2,f,c
 12660                           
 12661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 12662  01321A  0E00               	movlw	0
 12663  01321C                     L12:
 12664  01321C  6E26               	movwf	btemp^0,c
 12665  01321E  0E00               	movlw	0
 12666  013220  6E27               	movwf	(btemp+1)^0,c
 12667  013222  D02A               	goto	l2355
 12668  013224                     l12369:
 12669                           
 12670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 12671                           ;stkvar	_fp @ sp[(-32)+-2]
 12672  013224  0EDE               	movlw	-34
 12673  013226  006F FF8F FFE6     	movff	plusw1,postinc1
 12674  01322C  006F FF8F FFE6     	movff	plusw1,postinc1
 12675                           
 12676                           ;stkvar	_fmt @ sp[(-34)+-4]
 12677  013232  0EDA               	movlw	-38
 12678  013234  006F FF8F FFD9     	movff	plusw1,fsr2l
 12679  01323A  0EDB               	movlw	-37
 12680  01323C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12681  013242  006F FF7B FFF6     	movff	postinc2,tblptrl
 12682  013248  006F FF77 FFF7     	movff	postdec2,tblptrh
 12683  01324E                     	if	0	;tblptru may be non-zero
 12684  01324E                     	endif
 12685  01324E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12686  01324E  0E00               	movlw	low (__mediumconst shr (0+16))
 12687  013250  6EF8               	movwf	tblptru,c
 12688  013252                     	endif
 12689  013252  0008               	tblrd		*
 12690  013254  50F5               	movf	tablat,w,c
 12691  013256  6EE6               	movwf	postinc1,c
 12692  013258  0E00               	movlw	0
 12693  01325A  6EE6               	movwf	postinc1,c
 12694  01325C  EC89  F0C7         	call	_fputc	;wreg free
 12695                           
 12696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 12697                           ;stkvar	_fmt @ sp[(-32)+-4]
 12698  013260  0EDC               	movlw	-36
 12699  013262  006F FF8F FFD9     	movff	plusw1,fsr2l
 12700  013268  0EDD               	movlw	-35
 12701  01326A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12702  013270  2ADE               	incf	postinc2,f,c
 12703  013272  0E00               	movlw	0
 12704  013274  22DD               	addwfc	postdec2,f,c
 12705  013276  D7C4               	goto	l12359
 12706  013278                     l2355:
 12707                           
 12708                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 12709  013278  0EDA               	movlw	218
 12710  01327A  26E1               	addwf	fsr1l,f,c
 12711  01327C  0EFF               	movlw	255
 12712  01327E  22E2               	addwfc	fsr1h,f,c
 12713  013280  0012               	return		;funcret
 12714  013282                     __end_of_vfpfcnvrt:
 12715                           	opt callstack 0
 12716                           
 12717 ;; *************** function _xtoa *****************
 12718 ;; Defined at:
 12719 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12720 ;; Parameters:    Size  Location     Type
 12721 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12722 ;;		 -> f(6), NULL(0), 
 12723 ;;  d               8  [STACK] unsigned long long 
 12724 ;;  x               1  [STACK] unsigned char 
 12725 ;; Auto vars:     Size  Location     Type
 12726 ;;  n               8  [STACK] unsigned long long 
 12727 ;;  c               2  [STACK] int 
 12728 ;;  i               2  [STACK] int 
 12729 ;;  w               2  [STACK] int 
 12730 ;;  p               2  [STACK] int 
 12731 ;; Return value:  Size  Location     Type
 12732 ;;                  2  [STACK] int 
 12733 ;; Registers used:
 12734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12735 ;; Tracked objects:
 12736 ;;		On entry : 0/0
 12737 ;;		On exit  : 0/0
 12738 ;;		Unchanged: 0/0
 12739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12744 ;;Total ram usage:        0 bytes
 12745 ;; Hardware stack levels used:    1
 12746 ;; Hardware stack levels required when called:   20
 12747 ;; This function calls:
 12748 ;;		_isalpha
 12749 ;;		_isupper
 12750 ;;		_pad
 12751 ;;		_toupper
 12752 ;; This function is called by:
 12753 ;;		_vfpfcnvrt
 12754 ;; This function uses a reentrant model
 12755 ;;
 12756                           
 12757                           	psect	text46
 12758  015850                     __ptext46:
 12759                           	opt callstack 0
 12760  015850                     _xtoa:
 12761                           	opt callstack 0
 12762                           
 12763                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12764  015850  0E14               	movlw	20
 12765  015852  26E1               	addwf	fsr1l,f,c
 12766  015854  0E00               	movlw	0
 12767  015856  22E2               	addwfc	fsr1h,f,c
 12768                           
 12769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 12770                           
 12771                           ;incstack = 0
 12772 ;; hardware stack exceeded
 12773  015858  AE0D               	btfss	(_prec+1)^0,7,c
 12774                           
 12775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 12776  01585A  920E               	bcf	_flags^0,1,c
 12777                           
 12778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 12779  01585C  BE0D               	btfsc	(_prec+1)^0,7,c
 12780  01585E  D005               	goto	u11500
 12781  015860  500D               	movf	(_prec+1)^0,w,c
 12782  015862  E110               	bnz	l12093
 12783  015864  040C               	decf	_prec^0,w,c
 12784  015866  B0D8               	btfsc	status,0,c
 12785  015868  D00D               	goto	l12093
 12786  01586A                     u11500:
 12787  01586A  0E01               	movlw	1
 12788  01586C  6E30               	movwf	(btemp+10)^0,c
 12789  01586E  0E00               	movlw	0
 12790  015870  6E31               	movwf	(btemp+11)^0,c
 12791                           
 12792                           ;stkvar	_p @ sp[(-20)+18]
 12793  015872  0EFE               	movlw	-2
 12794  015874  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12795  01587A  0EFF               	movlw	-1
 12796  01587C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12797  015882  D008               	goto	l2305
 12798  015884                     l12093:
 12799                           
 12800                           ;stkvar	_p @ sp[(-20)+18]
 12801  015884  0EFE               	movlw	-2
 12802  015886  0060  F033  FFE3   	movff	_prec,plusw1
 12803  01588C  0EFF               	movlw	-1
 12804  01588E  0060  F037  FFE3   	movff	_prec+1,plusw1
 12805  015894                     l2305:
 12806                           
 12807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 12808                           ;stkvar	_w @ sp[(-20)+16]
 12809  015894  0EFC               	movlw	-4
 12810  015896  0060  F02B  FFE3   	movff	_width,plusw1
 12811  01589C  0EFD               	movlw	-3
 12812  01589E  0060  F02F  FFE3   	movff	_width+1,plusw1
 12813                           
 12814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 12815  0158A4  A80E               	btfss	_flags^0,4,c
 12816  0158A6  D00B               	goto	l12099
 12817                           
 12818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 12819                           ;stkvar	_w @ sp[(-20)+16]
 12820  0158A8  50E1               	movf	fsr1l,w,c
 12821  0158AA  0FFC               	addlw	-4
 12822  0158AC  6ED9               	movwf	fsr2l,c
 12823  0158AE  50E2               	movf	fsr1h,w,c
 12824  0158B0  6EDA               	movwf	fsr2h,c
 12825  0158B2  0EFF               	movlw	255
 12826  0158B4  22DA               	addwfc	fsr2h,f,c
 12827  0158B6  0EFE               	movlw	254
 12828  0158B8  26DE               	addwf	postinc2,f,c
 12829  0158BA  0EFF               	movlw	255
 12830  0158BC  22DD               	addwfc	postdec2,f,c
 12831  0158BE                     l12099:
 12832                           
 12833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 12834                           ;stkvar	_d @ sp[(-20)+-10]
 12835  0158BE  0EE2               	movlw	226
 12836  0158C0  24E1               	addwf	fsr1l,w,c
 12837  0158C2  6ED9               	movwf	fsr2l,c
 12838  0158C4  0EFF               	movlw	255
 12839  0158C6  20E2               	addwfc	fsr1h,w,c
 12840  0158C8  6EDA               	movwf	fsr2h,c
 12841                           
 12842                           ;stkvar	_n @ sp[(-20)+4]
 12843  0158CA  0E08               	movlw	8
 12844  0158CC  6E26               	movwf	btemp^0,c
 12845  0158CE  0EF0               	movlw	-16
 12846  0158D0                     us1152999:
 12847  0158D0  006F FF7B FFE3     	movff	postinc2,plusw1
 12848  0158D6  28E8               	incf	wreg,w,c
 12849  0158D8  2E26               	decfsz	btemp^0,f,c
 12850  0158DA  D7FA               	bra	us1152999
 12851                           
 12852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 12853  0158DC  0E4F               	movlw	79
 12854  0158DE  6E30               	movwf	(btemp+10)^0,c
 12855  0158E0  0E00               	movlw	0
 12856  0158E2  6E31               	movwf	(btemp+11)^0,c
 12857                           
 12858                           ;stkvar	_i @ sp[(-20)+14]
 12859  0158E4  0EFA               	movlw	-6
 12860  0158E6  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12861  0158EC  0EFB               	movlw	-5
 12862  0158EE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12863                           
 12864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 12865  0158F4  0103               	movlb	3	; () banked
 12866  0158F6  6BFD               	clrf	(_dbuf+79)& (0+255),b
 12867                           
 12868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12869  0158F8  D0EE               	goto	l12137
 12870  0158FA                     l12105:
 12871                           
 12872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 12873                           ;stkvar	_i @ sp[(-20)+14]
 12874  0158FA  50E1               	movf	fsr1l,w,c
 12875  0158FC  0FFA               	addlw	-6
 12876  0158FE  6ED9               	movwf	fsr2l,c
 12877  015900  50E2               	movf	fsr1h,w,c
 12878  015902  6EDA               	movwf	fsr2h,c
 12879  015904  0EFF               	movlw	255
 12880  015906  22DA               	addwfc	fsr2h,f,c
 12881  015908  06DE               	decf	postinc2,f,c
 12882  01590A  0E00               	movlw	0
 12883  01590C  5ADD               	subwfb	postdec2,f,c
 12884                           
 12885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 12886                           ;stkvar	_n @ sp[(-20)+4]
 12887  01590E  0EF0               	movlw	-16
 12888  015910  006F FF8C  F030    	movff	plusw1,btemp+10
 12889  015916  0EF1               	movlw	-15
 12890  015918  006F FF8C  F031    	movff	plusw1,btemp+11
 12891  01591E  0E0F               	movlw	15
 12892  015920  1630               	andwf	(btemp+10)^0,f,c
 12893  015922  0E00               	movlw	0
 12894  015924  1631               	andwf	(btemp+11)^0,f,c
 12895                           
 12896                           ;stkvar	_c @ sp[(-20)+12]
 12897  015926  0EF8               	movlw	-8
 12898  015928  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12899  01592E  0EF9               	movlw	-7
 12900  015930  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12901                           
 12902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 12903                           ;stkvar	_c @ sp[(-20)+12]
 12904  015936  0EF9               	movlw	-7
 12905  015938  BEE3               	btfsc	plusw1,7,c
 12906  01593A  D00F               	goto	l12113
 12907  01593C  0EF9               	movlw	-7
 12908  01593E  50E3               	movf	plusw1,w,c
 12909  015940  E108               	bnz	u11530
 12910  015942  0EF8               	movlw	-8
 12911  015944  006F FF8C  F026    	movff	plusw1,btemp
 12912  01594A  0E0A               	movlw	10
 12913  01594C  5E26               	subwf	btemp^0,f,c
 12914  01594E  A0D8               	btfss	status,0,c
 12915  015950  D004               	goto	l12113
 12916  015952                     u11530:
 12917                           
 12918                           ;stkvar	_c @ sp[(-20)+12]
 12919  015952  0EF8               	movlw	-8
 12920  015954  50E3               	movf	plusw1,w,c
 12921  015956  0F57               	addlw	87
 12922  015958  D003               	goto	L13
 12923  01595A                     l12113:
 12924                           
 12925                           ;stkvar	_c @ sp[(-20)+12]
 12926  01595A  0EF8               	movlw	-8
 12927  01595C  50E3               	movf	plusw1,w,c
 12928  01595E  0F30               	addlw	48
 12929  015960                     L13:
 12930  015960  6E30               	movwf	(btemp+10)^0,c
 12931  015962  0EF9               	movlw	-7
 12932  015964  006F FF8C  F031    	movff	plusw1,btemp+11
 12933  01596A  0E00               	movlw	0
 12934  01596C  2231               	addwfc	(btemp+11)^0,f,c
 12935                           
 12936                           ;stkvar	_c @ sp[(-20)+12]
 12937  01596E  0EF8               	movlw	-8
 12938  015970  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12939  015976  0EF9               	movlw	-7
 12940  015978  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12941  01597E  0EBF               	movlw	191
 12942  015980  6E30               	movwf	(btemp+10)^0,c
 12943  015982  0EFF               	movlw	255
 12944  015984  6E31               	movwf	(btemp+11)^0,c
 12945                           
 12946                           ;stkvar	_x @ sp[(-20)+-11]
 12947  015986  0EE1               	movlw	-31
 12948  015988  50E3               	movf	plusw1,w,c
 12949  01598A  6E2E               	movwf	(btemp+8)^0,c
 12950  01598C  6A2F               	clrf	(btemp+9)^0,c
 12951  01598E  5030               	movf	(btemp+10)^0,w,c
 12952  015990  262E               	addwf	(btemp+8)^0,f,c
 12953  015992  5031               	movf	(btemp+11)^0,w,c
 12954  015994  222F               	addwfc	(btemp+9)^0,f,c
 12955  015996  502F               	movf	(btemp+9)^0,w,c
 12956  015998  E106               	bnz	u11540
 12957  01599A  0E1A               	movlw	26
 12958  01599C  5C2E               	subwf	(btemp+8)^0,w,c
 12959  01599E  B0D8               	btfsc	status,0,c
 12960  0159A0  D002               	goto	u11540
 12961  0159A2  0E01               	movlw	1
 12962  0159A4  D001               	goto	u11550
 12963  0159A6                     u11540:
 12964  0159A6  0E00               	movlw	0
 12965  0159A8                     u11550:
 12966  0159A8  6E30               	movwf	(btemp+10)^0,c
 12967  0159AA  6A31               	clrf	(btemp+11)^0,c
 12968                           
 12969                           ;stkvar	_xtoa$5447 @ sp[(-20)+2]
 12970  0159AC  0EEE               	movlw	-18
 12971  0159AE  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12972  0159B4  0EEF               	movlw	-17
 12973  0159B6  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12974                           
 12975                           ;stkvar	_xtoa$5447 @ sp[(-20)+2]
 12976  0159BC  0EEE               	movlw	-18
 12977  0159BE  006F FF8C  F026    	movff	plusw1,btemp
 12978  0159C4  0EEF               	movlw	-17
 12979  0159C6  50E3               	movf	plusw1,w,c
 12980  0159C8  1026               	iorwf	btemp^0,w,c
 12981  0159CA  B4D8               	btfsc	status,2,c
 12982  0159CC  D041               	goto	l12129
 12983  0159CE  0E9F               	movlw	159
 12984  0159D0  6E30               	movwf	(btemp+10)^0,c
 12985  0159D2  0EFF               	movlw	255
 12986  0159D4  6E31               	movwf	(btemp+11)^0,c
 12987                           
 12988                           ;stkvar	_c @ sp[(-20)+12]
 12989  0159D6  0EF8               	movlw	-8
 12990  0159D8  006F FF8C  F02E    	movff	plusw1,btemp+8
 12991  0159DE  0EF9               	movlw	-7
 12992  0159E0  006F FF8C  F02F    	movff	plusw1,btemp+9
 12993  0159E6  0E20               	movlw	32
 12994  0159E8  122E               	iorwf	(btemp+8)^0,f,c
 12995  0159EA  0E00               	movlw	0
 12996  0159EC  122F               	iorwf	(btemp+9)^0,f,c
 12997  0159EE  5030               	movf	(btemp+10)^0,w,c
 12998  0159F0  262E               	addwf	(btemp+8)^0,f,c
 12999  0159F2  5031               	movf	(btemp+11)^0,w,c
 13000  0159F4  222F               	addwfc	(btemp+9)^0,f,c
 13001  0159F6  502F               	movf	(btemp+9)^0,w,c
 13002  0159F8  E106               	bnz	u11570
 13003  0159FA  0E1A               	movlw	26
 13004  0159FC  5C2E               	subwf	(btemp+8)^0,w,c
 13005  0159FE  B0D8               	btfsc	status,0,c
 13006  015A00  D002               	goto	u11570
 13007  015A02  0E01               	movlw	1
 13008  015A04  D001               	goto	u11580
 13009  015A06                     u11570:
 13010  015A06  0E00               	movlw	0
 13011  015A08                     u11580:
 13012  015A08  6E30               	movwf	(btemp+10)^0,c
 13013  015A0A  6A31               	clrf	(btemp+11)^0,c
 13014                           
 13015                           ;stkvar	_xtoa$5448 @ sp[(-20)+0]
 13016  015A0C  0EEC               	movlw	-20
 13017  015A0E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 13018  015A14  0EED               	movlw	-19
 13019  015A16  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 13020                           
 13021                           ;stkvar	_xtoa$5448 @ sp[(-20)+0]
 13022  015A1C  0EEC               	movlw	-20
 13023  015A1E  006F FF8C  F026    	movff	plusw1,btemp
 13024  015A24  0EED               	movlw	-19
 13025  015A26  50E3               	movf	plusw1,w,c
 13026  015A28  1026               	iorwf	btemp^0,w,c
 13027  015A2A  B4D8               	btfsc	status,2,c
 13028  015A2C  D011               	goto	l12129
 13029                           
 13030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 13031                           ;stkvar	_c @ sp[(-20)+12]
 13032  015A2E  0EF8               	movlw	-8
 13033  015A30  006F FF8F FFE6     	movff	plusw1,postinc1
 13034  015A36  006F FF8F FFE6     	movff	plusw1,postinc1
 13035  015A3C  EC5E  F0D2         	call	_toupper	;wreg free
 13036                           
 13037                           ;stkvar	_c @ sp[(-20)+12]
 13038  015A40  0EF8               	movlw	-8
 13039  015A42  0060  F09B  FFE3   	movff	btemp,plusw1
 13040  015A48  0EF9               	movlw	-7
 13041  015A4A  0060  F09F  FFE3   	movff	btemp+1,plusw1
 13042  015A50                     l12129:
 13043                           
 13044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 13045                           ;stkvar	_c @ sp[(-20)+12]
 13046                           ;stkvar	_i @ sp[(-20)+14]
 13047  015A50  0EFA               	movlw	-6
 13048  015A52  006F FF8C  F030    	movff	plusw1,btemp+10
 13049  015A58  0EFB               	movlw	-5
 13050  015A5A  006F FF8C  F031    	movff	plusw1,btemp+11
 13051  015A60  0EAE               	movlw	low _dbuf
 13052  015A62  2430               	addwf	(btemp+10)^0,w,c
 13053  015A64  6ED9               	movwf	fsr2l,c
 13054  015A66  0E03               	movlw	high _dbuf
 13055  015A68  2031               	addwfc	(btemp+11)^0,w,c
 13056  015A6A  6EDA               	movwf	fsr2h,c
 13057  015A6C  0EF8               	movlw	-8
 13058  015A6E  006F FF8F FFDF     	movff	plusw1,indf2
 13059                           
 13060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 13061                           ;stkvar	_p @ sp[(-20)+18]
 13062  015A74  50E1               	movf	fsr1l,w,c
 13063  015A76  0FFE               	addlw	-2
 13064  015A78  6ED9               	movwf	fsr2l,c
 13065  015A7A  50E2               	movf	fsr1h,w,c
 13066  015A7C  6EDA               	movwf	fsr2h,c
 13067  015A7E  0EFF               	movlw	255
 13068  015A80  22DA               	addwfc	fsr2h,f,c
 13069  015A82  06DE               	decf	postinc2,f,c
 13070  015A84  0E00               	movlw	0
 13071  015A86  5ADD               	subwfb	postdec2,f,c
 13072                           
 13073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13074                           ;stkvar	_w @ sp[(-20)+16]
 13075  015A88  50E1               	movf	fsr1l,w,c
 13076  015A8A  0FFC               	addlw	-4
 13077  015A8C  6ED9               	movwf	fsr2l,c
 13078  015A8E  50E2               	movf	fsr1h,w,c
 13079  015A90  6EDA               	movwf	fsr2h,c
 13080  015A92  0EFF               	movlw	255
 13081  015A94  22DA               	addwfc	fsr2h,f,c
 13082  015A96  06DE               	decf	postinc2,f,c
 13083  015A98  0E00               	movlw	0
 13084  015A9A  5ADD               	subwfb	postdec2,f,c
 13085                           
 13086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13087  015A9C  0E04               	movlw	4
 13088  015A9E  6E31               	movwf	(btemp+11)^0,c
 13089                           
 13090                           ;stkvar	_n @ sp[(-20)+4]
 13091  015AA0  50E1               	movf	fsr1l,w,c
 13092  015AA2  0FF0               	addlw	-16
 13093  015AA4  6ED9               	movwf	fsr2l,c
 13094  015AA6  50E2               	movf	fsr1h,w,c
 13095  015AA8  6EDA               	movwf	fsr2h,c
 13096  015AAA  0EFF               	movlw	255
 13097  015AAC  22DA               	addwfc	fsr2h,f,c
 13098  015AAE  2831               	incf	(btemp+11)^0,w,c
 13099  015AB0  52DE               	movf	postinc2,f,c
 13100  015AB2  D00F               	goto	u11600
 13101  015AB4                     u11605:
 13102  015AB4  52DE               	movf	postinc2,f,c
 13103  015AB6  52DE               	movf	postinc2,f,c
 13104  015AB8  52DE               	movf	postinc2,f,c
 13105  015ABA  52DE               	movf	postinc2,f,c
 13106  015ABC  52DE               	movf	postinc2,f,c
 13107  015ABE  52DE               	movf	postinc2,f,c
 13108  015AC0  90D8               	bcf	status,0,c
 13109  015AC2  32DD               	rrcf	postdec2,f,c
 13110  015AC4  32DD               	rrcf	postdec2,f,c
 13111  015AC6  32DD               	rrcf	postdec2,f,c
 13112  015AC8  32DD               	rrcf	postdec2,f,c
 13113  015ACA  32DD               	rrcf	postdec2,f,c
 13114  015ACC  32DD               	rrcf	postdec2,f,c
 13115  015ACE  32DD               	rrcf	postdec2,f,c
 13116  015AD0  32DE               	rrcf	postinc2,f,c
 13117  015AD2                     u11600:
 13118  015AD2  2EE8               	decfsz	wreg,f,c
 13119  015AD4  D7EF               	goto	u11605
 13120  015AD6                     l12137:
 13121                           
 13122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13123                           ;stkvar	_i @ sp[(-20)+14]
 13124  015AD6  0EFB               	movlw	-5
 13125  015AD8  BEE3               	btfsc	plusw1,7,c
 13126  015ADA  D03A               	goto	u11650
 13127  015ADC  0EFB               	movlw	-5
 13128  015ADE  50E3               	movf	plusw1,w,c
 13129  015AE0  E108               	bnz	u11610
 13130  015AE2  0EFA               	movlw	-6
 13131  015AE4  006F FF8C  F026    	movff	plusw1,btemp
 13132  015AEA  0E02               	movlw	2
 13133  015AEC  5E26               	subwf	btemp^0,f,c
 13134  015AEE  A0D8               	btfss	status,0,c
 13135  015AF0  D02F               	goto	u11650
 13136  015AF2                     u11610:
 13137                           
 13138                           ;stkvar	_n @ sp[(-20)+4]
 13139  015AF2  0EF0               	movlw	-16
 13140  015AF4  50E3               	movf	plusw1,w,c
 13141  015AF6  E115               	bnz	u11621
 13142  015AF8  0EF1               	movlw	-15
 13143  015AFA  50E3               	movf	plusw1,w,c
 13144  015AFC  E112               	bnz	u11621
 13145  015AFE  0EF2               	movlw	-14
 13146  015B00  50E3               	movf	plusw1,w,c
 13147  015B02  E10F               	bnz	u11621
 13148  015B04  0EF3               	movlw	-13
 13149  015B06  50E3               	movf	plusw1,w,c
 13150  015B08  E10C               	bnz	u11621
 13151  015B0A  0EF4               	movlw	-12
 13152  015B0C  50E3               	movf	plusw1,w,c
 13153  015B0E  E109               	bnz	u11621
 13154  015B10  0EF5               	movlw	-11
 13155  015B12  50E3               	movf	plusw1,w,c
 13156  015B14  E106               	bnz	u11621
 13157  015B16  0EF6               	movlw	-10
 13158  015B18  50E3               	movf	plusw1,w,c
 13159  015B1A  E103               	bnz	u11621
 13160  015B1C  0EF7               	movlw	-9
 13161  015B1E  50E3               	movf	plusw1,w,c
 13162  015B20  A4D8               	btfss	status,2,c
 13163  015B22                     u11621:
 13164  015B22  D6EB               	goto	l12105
 13165                           
 13166                           ;stkvar	_p @ sp[(-20)+18]
 13167  015B24  0EFF               	movlw	-1
 13168  015B26  BEE3               	btfsc	plusw1,7,c
 13169  015B28  D007               	goto	u11630
 13170  015B2A  0EFF               	movlw	-1
 13171  015B2C  50E3               	movf	plusw1,w,c
 13172  015B2E  E103               	bnz	u11631
 13173  015B30  0EFE               	movlw	-2
 13174  015B32  04E3               	decf	plusw1,w,c
 13175  015B34  B0D8               	btfsc	status,0,c
 13176  015B36                     u11631:
 13177  015B36  D6E1               	goto	l12105
 13178  015B38                     u11630:
 13179                           
 13180                           ;stkvar	_w @ sp[(-20)+16]
 13181  015B38  0EFD               	movlw	-3
 13182  015B3A  BEE3               	btfsc	plusw1,7,c
 13183  015B3C  D009               	goto	u11650
 13184  015B3E  0EFD               	movlw	-3
 13185  015B40  50E3               	movf	plusw1,w,c
 13186  015B42  E104               	bnz	u11640
 13187  015B44  0EFC               	movlw	-4
 13188  015B46  04E3               	decf	plusw1,w,c
 13189  015B48  A0D8               	btfss	status,0,c
 13190  015B4A  D002               	goto	u11650
 13191  015B4C                     u11640:
 13192  015B4C  B20E               	btfsc	_flags^0,1,c
 13193  015B4E  D6D5               	goto	l12105
 13194  015B50                     u11650:
 13195                           
 13196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13197  015B50  A80E               	btfss	_flags^0,4,c
 13198  015B52  D036               	goto	l12153
 13199                           
 13200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13201                           ;stkvar	_i @ sp[(-20)+14]
 13202  015B54  50E1               	movf	fsr1l,w,c
 13203  015B56  0FFA               	addlw	-6
 13204  015B58  6ED9               	movwf	fsr2l,c
 13205  015B5A  50E2               	movf	fsr1h,w,c
 13206  015B5C  6EDA               	movwf	fsr2h,c
 13207  015B5E  0EFF               	movlw	255
 13208  015B60  22DA               	addwfc	fsr2h,f,c
 13209  015B62  06DE               	decf	postinc2,f,c
 13210  015B64  0E00               	movlw	0
 13211  015B66  5ADD               	subwfb	postdec2,f,c
 13212                           
 13213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13214                           ;stkvar	_x @ sp[(-20)+-11]
 13215                           ;stkvar	_i @ sp[(-20)+14]
 13216  015B68  0EFA               	movlw	-6
 13217  015B6A  006F FF8C  F030    	movff	plusw1,btemp+10
 13218  015B70  0EFB               	movlw	-5
 13219  015B72  006F FF8C  F031    	movff	plusw1,btemp+11
 13220  015B78  0EAE               	movlw	low _dbuf
 13221  015B7A  2430               	addwf	(btemp+10)^0,w,c
 13222  015B7C  6ED9               	movwf	fsr2l,c
 13223  015B7E  0E03               	movlw	high _dbuf
 13224  015B80  2031               	addwfc	(btemp+11)^0,w,c
 13225  015B82  6EDA               	movwf	fsr2h,c
 13226  015B84  0EE1               	movlw	-31
 13227  015B86  006F FF8F FFDF     	movff	plusw1,indf2
 13228                           
 13229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13230                           ;stkvar	_i @ sp[(-20)+14]
 13231  015B8C  50E1               	movf	fsr1l,w,c
 13232  015B8E  0FFA               	addlw	-6
 13233  015B90  6ED9               	movwf	fsr2l,c
 13234  015B92  50E2               	movf	fsr1h,w,c
 13235  015B94  6EDA               	movwf	fsr2h,c
 13236  015B96  0EFF               	movlw	255
 13237  015B98  22DA               	addwfc	fsr2h,f,c
 13238  015B9A  06DE               	decf	postinc2,f,c
 13239  015B9C  0E00               	movlw	0
 13240  015B9E  5ADD               	subwfb	postdec2,f,c
 13241                           
 13242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13243                           ;stkvar	_i @ sp[(-20)+14]
 13244  015BA0  0EFA               	movlw	-6
 13245  015BA2  006F FF8C  F030    	movff	plusw1,btemp+10
 13246  015BA8  0EFB               	movlw	-5
 13247  015BAA  006F FF8C  F031    	movff	plusw1,btemp+11
 13248  015BB0  0EAE               	movlw	low _dbuf
 13249  015BB2  2430               	addwf	(btemp+10)^0,w,c
 13250  015BB4  6ED9               	movwf	fsr2l,c
 13251  015BB6  0E03               	movlw	high _dbuf
 13252  015BB8  2031               	addwfc	(btemp+11)^0,w,c
 13253  015BBA  6EDA               	movwf	fsr2h,c
 13254  015BBC  0E30               	movlw	48
 13255  015BBE  6EDF               	movwf	indf2,c
 13256  015BC0                     l12153:
 13257                           
 13258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13259                           ;stkvar	_w @ sp[(-20)+16]
 13260  015BC0  0EFC               	movlw	-4
 13261  015BC2  006F FF8F FFE6     	movff	plusw1,postinc1
 13262  015BC8  006F FF8F FFE6     	movff	plusw1,postinc1
 13263                           
 13264                           ;stkvar	_i @ sp[(-22)+14]
 13265  015BCE  0EAE               	movlw	low _dbuf
 13266  015BD0  6E30               	movwf	(btemp+10)^0,c
 13267  015BD2  0E03               	movlw	high _dbuf
 13268  015BD4  6E31               	movwf	(btemp+11)^0,c
 13269  015BD6  0EF8               	movlw	-8
 13270  015BD8  50E3               	movf	plusw1,w,c
 13271  015BDA  2630               	addwf	(btemp+10)^0,f,c
 13272  015BDC  0EF9               	movlw	-7
 13273  015BDE  50E3               	movf	plusw1,w,c
 13274  015BE0  2231               	addwfc	(btemp+11)^0,f,c
 13275  015BE2  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 13276  015BE8  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 13277                           
 13278                           ;stkvar	_fp @ sp[(-24)+-2]
 13279  015BEE  0EE6               	movlw	-26
 13280  015BF0  006F FF8F FFE6     	movff	plusw1,postinc1
 13281  015BF6  006F FF8F FFE6     	movff	plusw1,postinc1
 13282  015BFC  ECA7  F0C8         	call	_pad	;wreg free
 13283                           
 13284                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13285  015C00  0EE1               	movlw	225
 13286  015C02  26E1               	addwf	fsr1l,f,c
 13287  015C04  0EFF               	movlw	255
 13288  015C06  22E2               	addwfc	fsr1h,f,c
 13289  015C08  0012               	return		;funcret
 13290  015C0A                     __end_of_xtoa:
 13291                           	opt callstack 0
 13292                           
 13293 ;; *************** function _toupper *****************
 13294 ;; Defined at:
 13295 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13296 ;; Parameters:    Size  Location     Type
 13297 ;;  c               2  [STACK] int 
 13298 ;; Auto vars:     Size  Location     Type
 13299 ;;		None
 13300 ;; Return value:  Size  Location     Type
 13301 ;;                  2  [STACK] int 
 13302 ;; Registers used:
 13303 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13304 ;; Tracked objects:
 13305 ;;		On entry : 0/3
 13306 ;;		On exit  : 0/0
 13307 ;;		Unchanged: 0/0
 13308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13313 ;;Total ram usage:        0 bytes
 13314 ;; Hardware stack levels used:    1
 13315 ;; Hardware stack levels required when called:   16
 13316 ;; This function calls:
 13317 ;;		_islower
 13318 ;; This function is called by:
 13319 ;;		_xtoa
 13320 ;; This function uses a reentrant model
 13321 ;;
 13322                           
 13323                           	psect	text47
 13324  01A4BC                     __ptext47:
 13325                           	opt callstack 0
 13326  01A4BC                     _toupper:
 13327                           	opt callstack 0
 13328                           
 13329                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13330  01A4BC  52E6               	movf	postinc1,f,c
 13331  01A4BE  52E6               	movf	postinc1,f,c
 13332                           
 13333                           ;stkvar	_c @ sp[(-2)+-2]
 13334                           
 13335                           ;incstack = 0
 13336 ;; hardware stack exceeded
 13337  01A4C0  0EFC               	movlw	-4
 13338  01A4C2  50E3               	movf	plusw1,w,c
 13339  01A4C4  0F9F               	addlw	159
 13340  01A4C6  6E30               	movwf	(btemp+10)^0,c
 13341  01A4C8  0EFD               	movlw	-3
 13342  01A4CA  006F FF8C  F031    	movff	plusw1,btemp+11
 13343  01A4D0  0EFF               	movlw	255
 13344  01A4D2  2231               	addwfc	(btemp+11)^0,f,c
 13345  01A4D4  5031               	movf	(btemp+11)^0,w,c
 13346  01A4D6  E106               	bnz	u6070
 13347  01A4D8  0E1A               	movlw	26
 13348  01A4DA  5C30               	subwf	(btemp+10)^0,w,c
 13349  01A4DC  B0D8               	btfsc	status,0,c
 13350  01A4DE  D002               	goto	u6070
 13351  01A4E0  0E01               	movlw	1
 13352  01A4E2  D001               	goto	u6080
 13353  01A4E4                     u6070:
 13354  01A4E4  0E00               	movlw	0
 13355  01A4E6                     u6080:
 13356  01A4E6  6E30               	movwf	(btemp+10)^0,c
 13357  01A4E8  6A31               	clrf	(btemp+11)^0,c
 13358                           
 13359                           ;stkvar	_toupper$6254 @ sp[(-2)+0]
 13360  01A4EA  0EFE               	movlw	-2
 13361  01A4EC  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 13362  01A4F2  0EFF               	movlw	-1
 13363  01A4F4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 13364                           
 13365                           ;stkvar	_toupper$6254 @ sp[(-2)+0]
 13366  01A4FA  0EFE               	movlw	-2
 13367  01A4FC  006F FF8C  F026    	movff	plusw1,btemp
 13368  01A502  0EFF               	movlw	-1
 13369  01A504  50E3               	movf	plusw1,w,c
 13370  01A506  1026               	iorwf	btemp^0,w,c
 13371  01A508  B4D8               	btfsc	status,2,c
 13372  01A50A  D00D               	goto	l7933
 13373                           
 13374                           ;stkvar	_c @ sp[(-2)+-2]
 13375  01A50C  0EFC               	movlw	-4
 13376  01A50E  006F FF8C  F026    	movff	plusw1,btemp
 13377  01A514  0EFD               	movlw	-3
 13378  01A516  006F FF8C  F027    	movff	plusw1,btemp+1
 13379  01A51C  0E5F               	movlw	95
 13380  01A51E  1626               	andwf	btemp^0,f,c
 13381  01A520  0E00               	movlw	0
 13382  01A522  1627               	andwf	(btemp+1)^0,f,c
 13383  01A524  D008               	goto	l3472
 13384  01A526                     l7933:
 13385                           
 13386                           ;stkvar	_c @ sp[(-2)+-2]
 13387  01A526  0EFC               	movlw	-4
 13388  01A528  006F FF8C  F026    	movff	plusw1,btemp
 13389  01A52E  0EFD               	movlw	-3
 13390  01A530  006F FF8C  F027    	movff	plusw1,btemp+1
 13391  01A536                     l3472:
 13392                           
 13393                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13394  01A536  52E5               	movf	postdec1,f,c
 13395  01A538  52E5               	movf	postdec1,f,c
 13396  01A53A  52E5               	movf	postdec1,f,c
 13397  01A53C  52E5               	movf	postdec1,f,c
 13398  01A53E  0012               	return		;funcret
 13399  01A540                     __end_of_toupper:
 13400                           	opt callstack 0
 13401                           
 13402 ;; *************** function _islower *****************
 13403 ;; Defined at:
 13404 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 13405 ;; Parameters:    Size  Location     Type
 13406 ;;  c               2  [STACK] int 
 13407 ;; Auto vars:     Size  Location     Type
 13408 ;;		None
 13409 ;; Return value:  Size  Location     Type
 13410 ;;                  2  [STACK] int 
 13411 ;; Registers used:
 13412 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13413 ;; Tracked objects:
 13414 ;;		On entry : 0/0
 13415 ;;		On exit  : 0/0
 13416 ;;		Unchanged: 0/0
 13417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13422 ;;Total ram usage:        0 bytes
 13423 ;; Hardware stack levels used:    1
 13424 ;; Hardware stack levels required when called:   15
 13425 ;; This function calls:
 13426 ;;		Nothing
 13427 ;; This function is called by:
 13428 ;;		_toupper
 13429 ;; This function uses a reentrant model
 13430 ;;
 13431                           
 13432                           	psect	text48
 13433  01B0C8                     __ptext48:
 13434                           	opt callstack 0
 13435  01B0C8                     _islower:
 13436                           	opt callstack 0
 13437                           
 13438                           ;stkvar	_c @ sp[(0)+-2]
 13439                           
 13440                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13441                           ;incstack = 0
 13442 ;; hardware stack exceeded
 13443  01B0C8  0EFE               	movlw	-2
 13444  01B0CA  50E3               	movf	plusw1,w,c
 13445  01B0CC  0F9F               	addlw	159
 13446  01B0CE  6E30               	movwf	(btemp+10)^0,c
 13447  01B0D0  0EFF               	movlw	-1
 13448  01B0D2  006F FF8C  F031    	movff	plusw1,btemp+11
 13449  01B0D8  0EFF               	movlw	255
 13450  01B0DA  2231               	addwfc	(btemp+11)^0,f,c
 13451  01B0DC  5031               	movf	(btemp+11)^0,w,c
 13452  01B0DE  E106               	bnz	u5760
 13453  01B0E0  0E1A               	movlw	26
 13454  01B0E2  5C30               	subwf	(btemp+10)^0,w,c
 13455  01B0E4  B0D8               	btfsc	status,0,c
 13456  01B0E6  D002               	goto	u5760
 13457  01B0E8  0E01               	movlw	1
 13458  01B0EA  D001               	goto	u5770
 13459  01B0EC                     u5760:
 13460  01B0EC  0E00               	movlw	0
 13461  01B0EE                     u5770:
 13462  01B0EE  6E26               	movwf	btemp^0,c
 13463  01B0F0  6A27               	clrf	(btemp+1)^0,c
 13464                           
 13465                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13466  01B0F2  52E5               	movf	postdec1,f,c
 13467  01B0F4  52E5               	movf	postdec1,f,c
 13468  01B0F6  0012               	return		;funcret
 13469  01B0F8                     __end_of_islower:
 13470                           	opt callstack 0
 13471                           
 13472 ;; *************** function _isalpha *****************
 13473 ;; Defined at:
 13474 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 13475 ;; Parameters:    Size  Location     Type
 13476 ;;  c               2  [STACK] int 
 13477 ;; Auto vars:     Size  Location     Type
 13478 ;;		None
 13479 ;; Return value:  Size  Location     Type
 13480 ;;                  2  [STACK] int 
 13481 ;; Registers used:
 13482 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 13483 ;; Tracked objects:
 13484 ;;		On entry : 0/0
 13485 ;;		On exit  : 0/0
 13486 ;;		Unchanged: 0/0
 13487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13492 ;;Total ram usage:        0 bytes
 13493 ;; Hardware stack levels used:    1
 13494 ;; Hardware stack levels required when called:   15
 13495 ;; This function calls:
 13496 ;;		Nothing
 13497 ;; This function is called by:
 13498 ;;		_xtoa
 13499 ;; This function uses a reentrant model
 13500 ;;
 13501                           
 13502                           	psect	text49
 13503  01AD56                     __ptext49:
 13504                           	opt callstack 0
 13505  01AD56                     _isalpha:
 13506                           	opt callstack 0
 13507                           
 13508                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13509                           ;incstack = 0
 13510 ;; hardware stack exceeded
 13511  01AD56  0E9F               	movlw	159
 13512  01AD58  6E30               	movwf	(btemp+10)^0,c
 13513  01AD5A  0EFF               	movlw	255
 13514  01AD5C  6E31               	movwf	(btemp+11)^0,c
 13515                           
 13516                           ;stkvar	_c @ sp[(0)+-2]
 13517  01AD5E  0EFE               	movlw	-2
 13518  01AD60  006F FF8C  F02E    	movff	plusw1,btemp+8
 13519  01AD66  0EFF               	movlw	-1
 13520  01AD68  006F FF8C  F02F    	movff	plusw1,btemp+9
 13521  01AD6E  0E20               	movlw	32
 13522  01AD70  122E               	iorwf	(btemp+8)^0,f,c
 13523  01AD72  0E00               	movlw	0
 13524  01AD74  122F               	iorwf	(btemp+9)^0,f,c
 13525  01AD76  5030               	movf	(btemp+10)^0,w,c
 13526  01AD78  262E               	addwf	(btemp+8)^0,f,c
 13527  01AD7A  5031               	movf	(btemp+11)^0,w,c
 13528  01AD7C  222F               	addwfc	(btemp+9)^0,f,c
 13529  01AD7E  502F               	movf	(btemp+9)^0,w,c
 13530  01AD80  E106               	bnz	u6050
 13531  01AD82  0E1A               	movlw	26
 13532  01AD84  5C2E               	subwf	(btemp+8)^0,w,c
 13533  01AD86  B0D8               	btfsc	status,0,c
 13534  01AD88  D002               	goto	u6050
 13535  01AD8A  0E01               	movlw	1
 13536  01AD8C  D001               	goto	u6060
 13537  01AD8E                     u6050:
 13538  01AD8E  0E00               	movlw	0
 13539  01AD90                     u6060:
 13540  01AD90  6E26               	movwf	btemp^0,c
 13541  01AD92  6A27               	clrf	(btemp+1)^0,c
 13542                           
 13543                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13544  01AD94  52E5               	movf	postdec1,f,c
 13545  01AD96  52E5               	movf	postdec1,f,c
 13546  01AD98  0012               	return		;funcret
 13547  01AD9A                     __end_of_isalpha:
 13548                           	opt callstack 0
 13549                           
 13550 ;; *************** function _utoa *****************
 13551 ;; Defined at:
 13552 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13553 ;; Parameters:    Size  Location     Type
 13554 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13555 ;;		 -> f(6), NULL(0), 
 13556 ;;  d               8  [STACK] unsigned long long 
 13557 ;; Auto vars:     Size  Location     Type
 13558 ;;  n               8  [STACK] unsigned long long 
 13559 ;;  i               2  [STACK] int 
 13560 ;;  w               2  [STACK] int 
 13561 ;;  p               2  [STACK] int 
 13562 ;; Return value:  Size  Location     Type
 13563 ;;                  2  [STACK] int 
 13564 ;; Registers used:
 13565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 13566 ;; Tracked objects:
 13567 ;;		On entry : 0/0
 13568 ;;		On exit  : 0/0
 13569 ;;		Unchanged: 0/0
 13570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13575 ;;Total ram usage:        0 bytes
 13576 ;; Hardware stack levels used:    1
 13577 ;; Hardware stack levels required when called:   20
 13578 ;; This function calls:
 13579 ;;		___lodiv
 13580 ;;		___lomod
 13581 ;;		_pad
 13582 ;; This function is called by:
 13583 ;;		_vfpfcnvrt
 13584 ;; This function uses a reentrant model
 13585 ;;
 13586                           
 13587                           	psect	text50
 13588  016318                     __ptext50:
 13589                           	opt callstack 0
 13590  016318                     _utoa:
 13591                           	opt callstack 0
 13592                           
 13593                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13594  016318  0E0E               	movlw	14
 13595  01631A  26E1               	addwf	fsr1l,f,c
 13596  01631C  0E00               	movlw	0
 13597  01631E  22E2               	addwfc	fsr1h,f,c
 13598                           
 13599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 13600                           
 13601                           ;incstack = 0
 13602 ;; hardware stack exceeded
 13603  016320  AE0D               	btfss	(_prec+1)^0,7,c
 13604                           
 13605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 13606  016322  920E               	bcf	_flags^0,1,c
 13607                           
 13608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 13609  016324  BE0D               	btfsc	(_prec+1)^0,7,c
 13610  016326  D005               	goto	u11420
 13611  016328  500D               	movf	(_prec+1)^0,w,c
 13612  01632A  E110               	bnz	l12053
 13613  01632C  040C               	decf	_prec^0,w,c
 13614  01632E  B0D8               	btfsc	status,0,c
 13615  016330  D00D               	goto	l12053
 13616  016332                     u11420:
 13617  016332  0E01               	movlw	1
 13618  016334  6E30               	movwf	(btemp+10)^0,c
 13619  016336  0E00               	movlw	0
 13620  016338  6E31               	movwf	(btemp+11)^0,c
 13621                           
 13622                           ;stkvar	_p @ sp[(-14)+12]
 13623  01633A  0EFE               	movlw	-2
 13624  01633C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 13625  016342  0EFF               	movlw	-1
 13626  016344  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 13627  01634A  D008               	goto	l2290
 13628  01634C                     l12053:
 13629                           
 13630                           ;stkvar	_p @ sp[(-14)+12]
 13631  01634C  0EFE               	movlw	-2
 13632  01634E  0060  F033  FFE3   	movff	_prec,plusw1
 13633  016354  0EFF               	movlw	-1
 13634  016356  0060  F037  FFE3   	movff	_prec+1,plusw1
 13635  01635C                     l2290:
 13636                           
 13637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 13638                           ;stkvar	_w @ sp[(-14)+10]
 13639  01635C  0EFC               	movlw	-4
 13640  01635E  0060  F02B  FFE3   	movff	_width,plusw1
 13641  016364  0EFD               	movlw	-3
 13642  016366  0060  F02F  FFE3   	movff	_width+1,plusw1
 13643                           
 13644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 13645                           ;stkvar	_d @ sp[(-14)+-10]
 13646  01636C  0EE8               	movlw	232
 13647  01636E  24E1               	addwf	fsr1l,w,c
 13648  016370  6ED9               	movwf	fsr2l,c
 13649  016372  0EFF               	movlw	255
 13650  016374  20E2               	addwfc	fsr1h,w,c
 13651  016376  6EDA               	movwf	fsr2h,c
 13652                           
 13653                           ;stkvar	_n @ sp[(-14)+0]
 13654  016378  0E08               	movlw	8
 13655  01637A  6E26               	movwf	btemp^0,c
 13656  01637C  0EF2               	movlw	-14
 13657  01637E                     us1143999:
 13658  01637E  006F FF7B FFE3     	movff	postinc2,plusw1
 13659  016384  28E8               	incf	wreg,w,c
 13660  016386  2E26               	decfsz	btemp^0,f,c
 13661  016388  D7FA               	bra	us1143999
 13662                           
 13663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 13664  01638A  0E4F               	movlw	79
 13665  01638C  6E30               	movwf	(btemp+10)^0,c
 13666  01638E  0E00               	movlw	0
 13667  016390  6E31               	movwf	(btemp+11)^0,c
 13668                           
 13669                           ;stkvar	_i @ sp[(-14)+8]
 13670  016392  0EFA               	movlw	-6
 13671  016394  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 13672  01639A  0EFB               	movlw	-5
 13673  01639C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 13674                           
 13675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 13676  0163A2  0103               	movlb	3	; () banked
 13677  0163A4  6BFD               	clrf	(_dbuf+79)& (0+255),b
 13678                           
 13679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13680  0163A6  D0FB               	goto	l12071
 13681  0163A8                     l12061:
 13682                           
 13683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 13684                           ;stkvar	_i @ sp[(-14)+8]
 13685  0163A8  50E1               	movf	fsr1l,w,c
 13686  0163AA  0FFA               	addlw	-6
 13687  0163AC  6ED9               	movwf	fsr2l,c
 13688  0163AE  50E2               	movf	fsr1h,w,c
 13689  0163B0  6EDA               	movwf	fsr2h,c
 13690  0163B2  0EFF               	movlw	255
 13691  0163B4  22DA               	addwfc	fsr2h,f,c
 13692  0163B6  06DE               	decf	postinc2,f,c
 13693  0163B8  0E00               	movlw	0
 13694  0163BA  5ADD               	subwfb	postdec2,f,c
 13695                           
 13696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 13697  0163BC  0E0A               	movlw	10
 13698  0163BE  6EE6               	movwf	postinc1,c
 13699  0163C0  0E00               	movlw	0
 13700  0163C2  6EE6               	movwf	postinc1,c
 13701  0163C4  0E00               	movlw	0
 13702  0163C6  6EE6               	movwf	postinc1,c
 13703  0163C8  0E00               	movlw	0
 13704  0163CA  6EE6               	movwf	postinc1,c
 13705  0163CC  0E00               	movlw	0
 13706  0163CE  6EE6               	movwf	postinc1,c
 13707  0163D0  0E00               	movlw	0
 13708  0163D2  6EE6               	movwf	postinc1,c
 13709  0163D4  0E00               	movlw	0
 13710  0163D6  6EE6               	movwf	postinc1,c
 13711  0163D8  0E00               	movlw	0
 13712  0163DA  6EE6               	movwf	postinc1,c
 13713                           
 13714                           ;stkvar	_n @ sp[(-22)+0]
 13715  0163DC  50E1               	movf	fsr1l,w,c
 13716  0163DE  0FEA               	addlw	-22
 13717  0163E0  6ED9               	movwf	fsr2l,c
 13718  0163E2  50E2               	movf	fsr1h,w,c
 13719  0163E4  6EDA               	movwf	fsr2h,c
 13720  0163E6  0EFF               	movlw	255
 13721  0163E8  22DA               	addwfc	fsr2h,f,c
 13722  0163EA  006F FF7B FFE6     	movff	postinc2,postinc1
 13723  0163F0  006F FF7B FFE6     	movff	postinc2,postinc1
 13724  0163F6  006F FF7B FFE6     	movff	postinc2,postinc1
 13725  0163FC  006F FF7B FFE6     	movff	postinc2,postinc1
 13726  016402  006F FF7B FFE6     	movff	postinc2,postinc1
 13727  016408  006F FF7B FFE6     	movff	postinc2,postinc1
 13728  01640E  006F FF7B FFE6     	movff	postinc2,postinc1
 13729  016414  006F FF7B FFE6     	movff	postinc2,postinc1
 13730  01641A  ECB2  F0C5         	call	___lomod	;wreg free
 13731  01641E  52E5               	movf	postdec1,f,c
 13732  016420  006F FF9C  F03D    	movff	indf1,btemp+23
 13733  016426  52E5               	movf	postdec1,f,c
 13734  016428  006F FF9C  F03C    	movff	indf1,btemp+22
 13735  01642E  52E5               	movf	postdec1,f,c
 13736  016430  006F FF9C  F03B    	movff	indf1,btemp+21
 13737  016436  52E5               	movf	postdec1,f,c
 13738  016438  006F FF9C  F03A    	movff	indf1,btemp+20
 13739  01643E  52E5               	movf	postdec1,f,c
 13740  016440  006F FF9C  F039    	movff	indf1,btemp+19
 13741  016446  52E5               	movf	postdec1,f,c
 13742  016448  006F FF9C  F038    	movff	indf1,btemp+18
 13743  01644E  52E5               	movf	postdec1,f,c
 13744  016450  006F FF9C  F037    	movff	indf1,btemp+17
 13745  016456  52E5               	movf	postdec1,f,c
 13746  016458  006F FF9C  F036    	movff	indf1,btemp+16
 13747  01645E  0EF8               	movlw	248
 13748  016460  26E1               	addwf	fsr1l,f,c
 13749  016462  0EFF               	movlw	255
 13750  016464  22E2               	addwfc	fsr1h,f,c
 13751  016466  0E30               	movlw	48
 13752  016468  2636               	addwf	(btemp+16)^0,f,c
 13753                           
 13754                           ;stkvar	_i @ sp[(-14)+8]
 13755  01646A  0EFA               	movlw	-6
 13756  01646C  006F FF8C  F030    	movff	plusw1,btemp+10
 13757  016472  0EFB               	movlw	-5
 13758  016474  006F FF8C  F031    	movff	plusw1,btemp+11
 13759  01647A  0EAE               	movlw	low _dbuf
 13760  01647C  2430               	addwf	(btemp+10)^0,w,c
 13761  01647E  6ED9               	movwf	fsr2l,c
 13762  016480  0E03               	movlw	high _dbuf
 13763  016482  2031               	addwfc	(btemp+11)^0,w,c
 13764  016484  6EDA               	movwf	fsr2h,c
 13765  016486  0060  F0DB  FFDF   	movff	btemp+16,indf2
 13766                           
 13767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 13768                           ;stkvar	_p @ sp[(-14)+12]
 13769  01648C  50E1               	movf	fsr1l,w,c
 13770  01648E  0FFE               	addlw	-2
 13771  016490  6ED9               	movwf	fsr2l,c
 13772  016492  50E2               	movf	fsr1h,w,c
 13773  016494  6EDA               	movwf	fsr2h,c
 13774  016496  0EFF               	movlw	255
 13775  016498  22DA               	addwfc	fsr2h,f,c
 13776  01649A  06DE               	decf	postinc2,f,c
 13777  01649C  0E00               	movlw	0
 13778  01649E  5ADD               	subwfb	postdec2,f,c
 13779                           
 13780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 13781                           ;stkvar	_w @ sp[(-14)+10]
 13782  0164A0  50E1               	movf	fsr1l,w,c
 13783  0164A2  0FFC               	addlw	-4
 13784  0164A4  6ED9               	movwf	fsr2l,c
 13785  0164A6  50E2               	movf	fsr1h,w,c
 13786  0164A8  6EDA               	movwf	fsr2h,c
 13787  0164AA  0EFF               	movlw	255
 13788  0164AC  22DA               	addwfc	fsr2h,f,c
 13789  0164AE  06DE               	decf	postinc2,f,c
 13790  0164B0  0E00               	movlw	0
 13791  0164B2  5ADD               	subwfb	postdec2,f,c
 13792                           
 13793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 13794  0164B4  0E0A               	movlw	10
 13795  0164B6  6EE6               	movwf	postinc1,c
 13796  0164B8  0E00               	movlw	0
 13797  0164BA  6EE6               	movwf	postinc1,c
 13798  0164BC  0E00               	movlw	0
 13799  0164BE  6EE6               	movwf	postinc1,c
 13800  0164C0  0E00               	movlw	0
 13801  0164C2  6EE6               	movwf	postinc1,c
 13802  0164C4  0E00               	movlw	0
 13803  0164C6  6EE6               	movwf	postinc1,c
 13804  0164C8  0E00               	movlw	0
 13805  0164CA  6EE6               	movwf	postinc1,c
 13806  0164CC  0E00               	movlw	0
 13807  0164CE  6EE6               	movwf	postinc1,c
 13808  0164D0  0E00               	movlw	0
 13809  0164D2  6EE6               	movwf	postinc1,c
 13810                           
 13811                           ;stkvar	_n @ sp[(-22)+0]
 13812  0164D4  50E1               	movf	fsr1l,w,c
 13813  0164D6  0FEA               	addlw	-22
 13814  0164D8  6ED9               	movwf	fsr2l,c
 13815  0164DA  50E2               	movf	fsr1h,w,c
 13816  0164DC  6EDA               	movwf	fsr2h,c
 13817  0164DE  0EFF               	movlw	255
 13818  0164E0  22DA               	addwfc	fsr2h,f,c
 13819  0164E2  006F FF7B FFE6     	movff	postinc2,postinc1
 13820  0164E8  006F FF7B FFE6     	movff	postinc2,postinc1
 13821  0164EE  006F FF7B FFE6     	movff	postinc2,postinc1
 13822  0164F4  006F FF7B FFE6     	movff	postinc2,postinc1
 13823  0164FA  006F FF7B FFE6     	movff	postinc2,postinc1
 13824  016500  006F FF7B FFE6     	movff	postinc2,postinc1
 13825  016506  006F FF7B FFE6     	movff	postinc2,postinc1
 13826  01650C  006F FF7B FFE6     	movff	postinc2,postinc1
 13827  016512  ECBF  F0C0         	call	___lodiv	;wreg free
 13828  016516  52E5               	movf	postdec1,f,c
 13829  016518  006F FF9C  F03D    	movff	indf1,btemp+23
 13830  01651E  52E5               	movf	postdec1,f,c
 13831  016520  006F FF9C  F03C    	movff	indf1,btemp+22
 13832  016526  52E5               	movf	postdec1,f,c
 13833  016528  006F FF9C  F03B    	movff	indf1,btemp+21
 13834  01652E  52E5               	movf	postdec1,f,c
 13835  016530  006F FF9C  F03A    	movff	indf1,btemp+20
 13836  016536  52E5               	movf	postdec1,f,c
 13837  016538  006F FF9C  F039    	movff	indf1,btemp+19
 13838  01653E  52E5               	movf	postdec1,f,c
 13839  016540  006F FF9C  F038    	movff	indf1,btemp+18
 13840  016546  52E5               	movf	postdec1,f,c
 13841  016548  006F FF9C  F037    	movff	indf1,btemp+17
 13842  01654E  52E5               	movf	postdec1,f,c
 13843  016550  006F FF9C  F036    	movff	indf1,btemp+16
 13844  016556  0EF8               	movlw	248
 13845  016558  26E1               	addwf	fsr1l,f,c
 13846  01655A  0EFF               	movlw	255
 13847  01655C  22E2               	addwfc	fsr1h,f,c
 13848                           
 13849                           ;stkvar	_n @ sp[(-14)+0]
 13850  01655E  0EF2               	movlw	-14
 13851  016560  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 13852  016566  0EF3               	movlw	-13
 13853  016568  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 13854  01656E  0EF4               	movlw	-12
 13855  016570  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 13856  016576  0EF5               	movlw	-11
 13857  016578  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 13858  01657E  0EF6               	movlw	-10
 13859  016580  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 13860  016586  0EF7               	movlw	-9
 13861  016588  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 13862  01658E  0EF8               	movlw	-8
 13863  016590  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 13864  016596  0EF9               	movlw	-7
 13865  016598  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 13866  01659E                     l12071:
 13867                           
 13868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13869                           ;stkvar	_i @ sp[(-14)+8]
 13870  01659E  0EFA               	movlw	-6
 13871  0165A0  006F FF8C  F026    	movff	plusw1,btemp
 13872  0165A6  0EFB               	movlw	-5
 13873  0165A8  50E3               	movf	plusw1,w,c
 13874  0165AA  1026               	iorwf	btemp^0,w,c
 13875  0165AC  B4D8               	btfsc	status,2,c
 13876  0165AE  D02F               	goto	u11480
 13877                           
 13878                           ;stkvar	_n @ sp[(-14)+0]
 13879  0165B0  0EF2               	movlw	-14
 13880  0165B2  50E3               	movf	plusw1,w,c
 13881  0165B4  E115               	bnz	u11451
 13882  0165B6  0EF3               	movlw	-13
 13883  0165B8  50E3               	movf	plusw1,w,c
 13884  0165BA  E112               	bnz	u11451
 13885  0165BC  0EF4               	movlw	-12
 13886  0165BE  50E3               	movf	plusw1,w,c
 13887  0165C0  E10F               	bnz	u11451
 13888  0165C2  0EF5               	movlw	-11
 13889  0165C4  50E3               	movf	plusw1,w,c
 13890  0165C6  E10C               	bnz	u11451
 13891  0165C8  0EF6               	movlw	-10
 13892  0165CA  50E3               	movf	plusw1,w,c
 13893  0165CC  E109               	bnz	u11451
 13894  0165CE  0EF7               	movlw	-9
 13895  0165D0  50E3               	movf	plusw1,w,c
 13896  0165D2  E106               	bnz	u11451
 13897  0165D4  0EF8               	movlw	-8
 13898  0165D6  50E3               	movf	plusw1,w,c
 13899  0165D8  E103               	bnz	u11451
 13900  0165DA  0EF9               	movlw	-7
 13901  0165DC  50E3               	movf	plusw1,w,c
 13902  0165DE  A4D8               	btfss	status,2,c
 13903  0165E0                     u11451:
 13904  0165E0  D6E3               	goto	l12061
 13905                           
 13906                           ;stkvar	_p @ sp[(-14)+12]
 13907  0165E2  0EFF               	movlw	-1
 13908  0165E4  BEE3               	btfsc	plusw1,7,c
 13909  0165E6  D007               	goto	u11460
 13910  0165E8  0EFF               	movlw	-1
 13911  0165EA  50E3               	movf	plusw1,w,c
 13912  0165EC  E103               	bnz	u11461
 13913  0165EE  0EFE               	movlw	-2
 13914  0165F0  04E3               	decf	plusw1,w,c
 13915  0165F2  B0D8               	btfsc	status,0,c
 13916  0165F4                     u11461:
 13917  0165F4  D6D9               	goto	l12061
 13918  0165F6                     u11460:
 13919                           
 13920                           ;stkvar	_w @ sp[(-14)+10]
 13921  0165F6  0EFD               	movlw	-3
 13922  0165F8  BEE3               	btfsc	plusw1,7,c
 13923  0165FA  D009               	goto	u11480
 13924  0165FC  0EFD               	movlw	-3
 13925  0165FE  50E3               	movf	plusw1,w,c
 13926  016600  E104               	bnz	u11470
 13927  016602  0EFC               	movlw	-4
 13928  016604  04E3               	decf	plusw1,w,c
 13929  016606  A0D8               	btfss	status,0,c
 13930  016608  D002               	goto	u11480
 13931  01660A                     u11470:
 13932  01660A  B20E               	btfsc	_flags^0,1,c
 13933  01660C  D6CD               	goto	l12061
 13934  01660E                     u11480:
 13935                           
 13936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 13937                           ;stkvar	_w @ sp[(-14)+10]
 13938  01660E  0EFC               	movlw	-4
 13939  016610  006F FF8F FFE6     	movff	plusw1,postinc1
 13940  016616  006F FF8F FFE6     	movff	plusw1,postinc1
 13941                           
 13942                           ;stkvar	_i @ sp[(-16)+8]
 13943  01661C  0EAE               	movlw	low _dbuf
 13944  01661E  6E30               	movwf	(btemp+10)^0,c
 13945  016620  0E03               	movlw	high _dbuf
 13946  016622  6E31               	movwf	(btemp+11)^0,c
 13947  016624  0EF8               	movlw	-8
 13948  016626  50E3               	movf	plusw1,w,c
 13949  016628  2630               	addwf	(btemp+10)^0,f,c
 13950  01662A  0EF9               	movlw	-7
 13951  01662C  50E3               	movf	plusw1,w,c
 13952  01662E  2231               	addwfc	(btemp+11)^0,f,c
 13953  016630  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 13954  016636  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 13955                           
 13956                           ;stkvar	_fp @ sp[(-18)+-2]
 13957  01663C  0EEC               	movlw	-20
 13958  01663E  006F FF8F FFE6     	movff	plusw1,postinc1
 13959  016644  006F FF8F FFE6     	movff	plusw1,postinc1
 13960  01664A  ECA7  F0C8         	call	_pad	;wreg free
 13961                           
 13962                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 13963  01664E  0EE8               	movlw	232
 13964  016650  26E1               	addwf	fsr1l,f,c
 13965  016652  0EFF               	movlw	255
 13966  016654  22E2               	addwfc	fsr1h,f,c
 13967  016656  0012               	return		;funcret
 13968  016658                     __end_of_utoa:
 13969                           	opt callstack 0
 13970                           
 13971 ;; *************** function ___lomod *****************
 13972 ;; Defined at:
 13973 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 13974 ;; Parameters:    Size  Location     Type
 13975 ;;  dividend        8  [STACK] unsigned long long 
 13976 ;;  divisor         8  [STACK] unsigned long long 
 13977 ;; Auto vars:     Size  Location     Type
 13978 ;;  counter         1  [STACK] unsigned char 
 13979 ;; Return value:  Size  Location     Type
 13980 ;;                  8  [STACK] unsigned long long 
 13981 ;; Registers used:
 13982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13983 ;; Tracked objects:
 13984 ;;		On entry : 0/3
 13985 ;;		On exit  : 0/0
 13986 ;;		Unchanged: 0/0
 13987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13992 ;;Total ram usage:        0 bytes
 13993 ;; Hardware stack levels used:    1
 13994 ;; Hardware stack levels required when called:   15
 13995 ;; This function calls:
 13996 ;;		Nothing
 13997 ;; This function is called by:
 13998 ;;		_utoa
 13999 ;; This function uses a reentrant model
 14000 ;;
 14001                           
 14002                           	psect	text51
 14003  018B64                     __ptext51:
 14004                           	opt callstack 0
 14005  018B64                     ___lomod:
 14006                           	opt callstack 0
 14007                           
 14008                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14009  018B64  52E6               	movf	postinc1,f,c
 14010                           
 14011                           ;stkvar	_divisor @ sp[(-1)+-16]
 14012                           
 14013                           ;incstack = 0
 14014 ;; hardware stack exceeded
 14015  018B66  0EEF               	movlw	-17
 14016  018B68  50E3               	movf	plusw1,w,c
 14017  018B6A  E116               	bnz	u7200
 14018  018B6C  0EF0               	movlw	-16
 14019  018B6E  50E3               	movf	plusw1,w,c
 14020  018B70  E113               	bnz	u7200
 14021  018B72  0EF1               	movlw	-15
 14022  018B74  50E3               	movf	plusw1,w,c
 14023  018B76  E110               	bnz	u7200
 14024  018B78  0EF2               	movlw	-14
 14025  018B7A  50E3               	movf	plusw1,w,c
 14026  018B7C  E10D               	bnz	u7200
 14027  018B7E  0EF3               	movlw	-13
 14028  018B80  50E3               	movf	plusw1,w,c
 14029  018B82  E10A               	bnz	u7200
 14030  018B84  0EF4               	movlw	-12
 14031  018B86  50E3               	movf	plusw1,w,c
 14032  018B88  E107               	bnz	u7200
 14033  018B8A  0EF5               	movlw	-11
 14034  018B8C  50E3               	movf	plusw1,w,c
 14035  018B8E  E104               	bnz	u7200
 14036  018B90  0EF6               	movlw	-10
 14037  018B92  50E3               	movf	plusw1,w,c
 14038  018B94  B4D8               	btfsc	status,2,c
 14039  018B96  D075               	goto	u7230
 14040  018B98                     u7200:
 14041                           
 14042                           ;stkvar	_counter @ sp[(-1)+0]
 14043  018B98  0EFF               	movlw	-1
 14044  018B9A  6AE3               	clrf	plusw1,c
 14045  018B9C  D012               	goto	L14
 14046  018B9E                     l8543:
 14047                           
 14048                           ;stkvar	_divisor @ sp[(-1)+-16]
 14049  018B9E  90D8               	bcf	status,0,c
 14050  018BA0  0EEF               	movlw	-17
 14051  018BA2  36E3               	rlcf	plusw1,f,c
 14052  018BA4  0EF0               	movlw	-16
 14053  018BA6  36E3               	rlcf	plusw1,f,c
 14054  018BA8  0EF1               	movlw	-15
 14055  018BAA  36E3               	rlcf	plusw1,f,c
 14056  018BAC  0EF2               	movlw	-14
 14057  018BAE  36E3               	rlcf	plusw1,f,c
 14058  018BB0  0EF3               	movlw	-13
 14059  018BB2  36E3               	rlcf	plusw1,f,c
 14060  018BB4  0EF4               	movlw	-12
 14061  018BB6  36E3               	rlcf	plusw1,f,c
 14062  018BB8  0EF5               	movlw	-11
 14063  018BBA  36E3               	rlcf	plusw1,f,c
 14064  018BBC  0EF6               	movlw	-10
 14065  018BBE  36E3               	rlcf	plusw1,f,c
 14066                           
 14067                           ;stkvar	_counter @ sp[(-1)+0]
 14068  018BC0  0EFF               	movlw	-1
 14069  018BC2                     L14:
 14070  018BC2  2AE3               	incf	plusw1,f,c
 14071                           
 14072                           ;stkvar	_divisor @ sp[(-1)+-16]
 14073  018BC4  0EF6               	movlw	-10
 14074  018BC6  AEE3               	btfss	plusw1,7,c
 14075  018BC8  D7EA               	goto	l8543
 14076  018BCA                     u7210:
 14077                           
 14078                           ;stkvar	_divisor @ sp[(-1)+-16]
 14079                           ;stkvar	_dividend @ sp[(-1)+-8]
 14080  018BCA  50E1               	movf	fsr1l,w,c
 14081  018BCC  0FF7               	addlw	-9
 14082  018BCE  6ED9               	movwf	fsr2l,c
 14083  018BD0  50E2               	movf	fsr1h,w,c
 14084  018BD2  6EDA               	movwf	fsr2h,c
 14085  018BD4  0EFF               	movlw	255
 14086  018BD6  22DA               	addwfc	fsr2h,f,c
 14087  018BD8  0EEF               	movlw	-17
 14088  018BDA  50E3               	movf	plusw1,w,c
 14089  018BDC  5CDE               	subwf	postinc2,w,c
 14090  018BDE  0EF0               	movlw	-16
 14091  018BE0  50E3               	movf	plusw1,w,c
 14092  018BE2  58DE               	subwfb	postinc2,w,c
 14093  018BE4  0EF1               	movlw	-15
 14094  018BE6  50E3               	movf	plusw1,w,c
 14095  018BE8  58DE               	subwfb	postinc2,w,c
 14096  018BEA  0EF2               	movlw	-14
 14097  018BEC  50E3               	movf	plusw1,w,c
 14098  018BEE  58DE               	subwfb	postinc2,w,c
 14099  018BF0  0EF3               	movlw	-13
 14100  018BF2  50E3               	movf	plusw1,w,c
 14101  018BF4  58DE               	subwfb	postinc2,w,c
 14102  018BF6  0EF4               	movlw	-12
 14103  018BF8  50E3               	movf	plusw1,w,c
 14104  018BFA  58DE               	subwfb	postinc2,w,c
 14105  018BFC  0EF5               	movlw	-11
 14106  018BFE  50E3               	movf	plusw1,w,c
 14107  018C00  58DE               	subwfb	postinc2,w,c
 14108  018C02  0EF6               	movlw	-10
 14109  018C04  50E3               	movf	plusw1,w,c
 14110  018C06  58DE               	subwfb	postinc2,w,c
 14111  018C08  A0D8               	btfss	status,0,c
 14112  018C0A  D01F               	goto	l8551
 14113                           
 14114                           ;stkvar	_divisor @ sp[(-1)+-16]
 14115                           ;stkvar	_dividend @ sp[(-1)+-8]
 14116  018C0C  50E1               	movf	fsr1l,w,c
 14117  018C0E  0FF7               	addlw	-9
 14118  018C10  6ED9               	movwf	fsr2l,c
 14119  018C12  50E2               	movf	fsr1h,w,c
 14120  018C14  6EDA               	movwf	fsr2h,c
 14121  018C16  0EFF               	movlw	255
 14122  018C18  22DA               	addwfc	fsr2h,f,c
 14123  018C1A  0EEF               	movlw	-17
 14124  018C1C  50E3               	movf	plusw1,w,c
 14125  018C1E  5EDE               	subwf	postinc2,f,c
 14126  018C20  0EF0               	movlw	-16
 14127  018C22  50E3               	movf	plusw1,w,c
 14128  018C24  5ADE               	subwfb	postinc2,f,c
 14129  018C26  0EF1               	movlw	-15
 14130  018C28  50E3               	movf	plusw1,w,c
 14131  018C2A  5ADE               	subwfb	postinc2,f,c
 14132  018C2C  0EF2               	movlw	-14
 14133  018C2E  50E3               	movf	plusw1,w,c
 14134  018C30  5ADE               	subwfb	postinc2,f,c
 14135  018C32  0EF3               	movlw	-13
 14136  018C34  50E3               	movf	plusw1,w,c
 14137  018C36  5ADE               	subwfb	postinc2,f,c
 14138  018C38  0EF4               	movlw	-12
 14139  018C3A  50E3               	movf	plusw1,w,c
 14140  018C3C  5ADE               	subwfb	postinc2,f,c
 14141  018C3E  0EF5               	movlw	-11
 14142  018C40  50E3               	movf	plusw1,w,c
 14143  018C42  5ADE               	subwfb	postinc2,f,c
 14144  018C44  0EF6               	movlw	-10
 14145  018C46  50E3               	movf	plusw1,w,c
 14146  018C48  5ADE               	subwfb	postinc2,f,c
 14147  018C4A                     l8551:
 14148                           
 14149                           ;stkvar	_divisor @ sp[(-1)+-16]
 14150  018C4A  90D8               	bcf	status,0,c
 14151  018C4C  0EF6               	movlw	-10
 14152  018C4E  32E3               	rrcf	plusw1,f,c
 14153  018C50  0EF5               	movlw	-11
 14154  018C52  32E3               	rrcf	plusw1,f,c
 14155  018C54  0EF4               	movlw	-12
 14156  018C56  32E3               	rrcf	plusw1,f,c
 14157  018C58  0EF3               	movlw	-13
 14158  018C5A  32E3               	rrcf	plusw1,f,c
 14159  018C5C  0EF2               	movlw	-14
 14160  018C5E  32E3               	rrcf	plusw1,f,c
 14161  018C60  0EF1               	movlw	-15
 14162  018C62  32E3               	rrcf	plusw1,f,c
 14163  018C64  0EF0               	movlw	-16
 14164  018C66  32E3               	rrcf	plusw1,f,c
 14165  018C68  0EEF               	movlw	-17
 14166  018C6A  32E3               	rrcf	plusw1,f,c
 14167                           
 14168                           ;stkvar	_counter @ sp[(-1)+0]
 14169  018C6C  0EFF               	movlw	-1
 14170  018C6E  50E3               	movf	plusw1,w,c
 14171  018C70  6E26               	movwf	btemp^0,c
 14172  018C72  0E01               	movlw	1
 14173  018C74  5E26               	subwf	btemp^0,f,c
 14174  018C76  0EFF               	movlw	-1
 14175  018C78  0060  F09B  FFE3   	movff	btemp,plusw1
 14176  018C7E  A4D8               	btfss	status,2,c
 14177  018C80  D7A4               	goto	u7210
 14178  018C82                     u7230:
 14179                           
 14180                           ;stkvar	_dividend @ sp[(-1)+-8]
 14181  018C82  0EF7               	movlw	247
 14182  018C84  24E1               	addwf	fsr1l,w,c
 14183  018C86  6ED9               	movwf	fsr2l,c
 14184  018C88  0EFF               	movlw	255
 14185  018C8A  20E2               	addwfc	fsr1h,w,c
 14186  018C8C  6EDA               	movwf	fsr2h,c
 14187                           
 14188                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14189  018C8E  0E08               	movlw	8
 14190  018C90  6E26               	movwf	btemp^0,c
 14191  018C92  0EF7               	movlw	-9
 14192  018C94                     us724999:
 14193  018C94  006F FF7B FFE3     	movff	postinc2,plusw1
 14194  018C9A  28E8               	incf	wreg,w,c
 14195  018C9C  2E26               	decfsz	btemp^0,f,c
 14196  018C9E  D7FA               	bra	us724999
 14197                           
 14198                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14199  018CA0  52E5               	movf	postdec1,f,c
 14200  018CA2  0012               	return		;funcret
 14201  018CA4                     __end_of___lomod:
 14202                           	opt callstack 0
 14203                           
 14204 ;; *************** function ___lodiv *****************
 14205 ;; Defined at:
 14206 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14207 ;; Parameters:    Size  Location     Type
 14208 ;;  dividend        8  [STACK] unsigned long long 
 14209 ;;  divisor         8  [STACK] unsigned long long 
 14210 ;; Auto vars:     Size  Location     Type
 14211 ;;  quotient        8  [STACK] unsigned long long 
 14212 ;;  counter         1  [STACK] unsigned char 
 14213 ;; Return value:  Size  Location     Type
 14214 ;;                  8  [STACK] unsigned long long 
 14215 ;; Registers used:
 14216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14217 ;; Tracked objects:
 14218 ;;		On entry : 0/3
 14219 ;;		On exit  : 0/0
 14220 ;;		Unchanged: 0/0
 14221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14226 ;;Total ram usage:        0 bytes
 14227 ;; Hardware stack levels used:    1
 14228 ;; Hardware stack levels required when called:   15
 14229 ;; This function calls:
 14230 ;;		Nothing
 14231 ;; This function is called by:
 14232 ;;		_utoa
 14233 ;; This function uses a reentrant model
 14234 ;;
 14235                           
 14236                           	psect	text52
 14237  01817E                     __ptext52:
 14238                           	opt callstack 0
 14239  01817E                     ___lodiv:
 14240                           	opt callstack 0
 14241                           
 14242                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14243  01817E  0E09               	movlw	9
 14244  018180  26E1               	addwf	fsr1l,f,c
 14245  018182  0E00               	movlw	0
 14246  018184  22E2               	addwfc	fsr1h,f,c
 14247                           
 14248                           ;stkvar	_quotient @ sp[(-9)+0]
 14249                           
 14250                           ;incstack = 0
 14251 ;; hardware stack exceeded
 14252  018186  0E07               	movlw	7
 14253  018188  6E26               	movwf	btemp^0,c
 14254  01818A  0EF7               	movlw	-9
 14255  01818C                     u7141:
 14256  01818C  6AE3               	clrf	plusw1,c
 14257  01818E  2AE8               	incf	wreg,f,c
 14258  018190  0626               	decf	btemp^0,f,c
 14259  018192  E2FC               	bc	u7141
 14260                           
 14261                           ;stkvar	_divisor @ sp[(-9)+-16]
 14262  018194  0EE7               	movlw	-25
 14263  018196  50E3               	movf	plusw1,w,c
 14264  018198  E116               	bnz	u7150
 14265  01819A  0EE8               	movlw	-24
 14266  01819C  50E3               	movf	plusw1,w,c
 14267  01819E  E113               	bnz	u7150
 14268  0181A0  0EE9               	movlw	-23
 14269  0181A2  50E3               	movf	plusw1,w,c
 14270  0181A4  E110               	bnz	u7150
 14271  0181A6  0EEA               	movlw	-22
 14272  0181A8  50E3               	movf	plusw1,w,c
 14273  0181AA  E10D               	bnz	u7150
 14274  0181AC  0EEB               	movlw	-21
 14275  0181AE  50E3               	movf	plusw1,w,c
 14276  0181B0  E10A               	bnz	u7150
 14277  0181B2  0EEC               	movlw	-20
 14278  0181B4  50E3               	movf	plusw1,w,c
 14279  0181B6  E107               	bnz	u7150
 14280  0181B8  0EED               	movlw	-19
 14281  0181BA  50E3               	movf	plusw1,w,c
 14282  0181BC  E104               	bnz	u7150
 14283  0181BE  0EEE               	movlw	-18
 14284  0181C0  50E3               	movf	plusw1,w,c
 14285  0181C2  B4D8               	btfsc	status,2,c
 14286  0181C4  D088               	goto	u7180
 14287  0181C6                     u7150:
 14288                           
 14289                           ;stkvar	_counter @ sp[(-9)+8]
 14290  0181C6  0EFF               	movlw	-1
 14291  0181C8  6AE3               	clrf	plusw1,c
 14292  0181CA  D012               	goto	L15
 14293  0181CC                     l8519:
 14294                           
 14295                           ;stkvar	_divisor @ sp[(-9)+-16]
 14296  0181CC  90D8               	bcf	status,0,c
 14297  0181CE  0EE7               	movlw	-25
 14298  0181D0  36E3               	rlcf	plusw1,f,c
 14299  0181D2  0EE8               	movlw	-24
 14300  0181D4  36E3               	rlcf	plusw1,f,c
 14301  0181D6  0EE9               	movlw	-23
 14302  0181D8  36E3               	rlcf	plusw1,f,c
 14303  0181DA  0EEA               	movlw	-22
 14304  0181DC  36E3               	rlcf	plusw1,f,c
 14305  0181DE  0EEB               	movlw	-21
 14306  0181E0  36E3               	rlcf	plusw1,f,c
 14307  0181E2  0EEC               	movlw	-20
 14308  0181E4  36E3               	rlcf	plusw1,f,c
 14309  0181E6  0EED               	movlw	-19
 14310  0181E8  36E3               	rlcf	plusw1,f,c
 14311  0181EA  0EEE               	movlw	-18
 14312  0181EC  36E3               	rlcf	plusw1,f,c
 14313                           
 14314                           ;stkvar	_counter @ sp[(-9)+8]
 14315  0181EE  0EFF               	movlw	-1
 14316  0181F0                     L15:
 14317  0181F0  2AE3               	incf	plusw1,f,c
 14318                           
 14319                           ;stkvar	_divisor @ sp[(-9)+-16]
 14320  0181F2  0EEE               	movlw	-18
 14321  0181F4  AEE3               	btfss	plusw1,7,c
 14322  0181F6  D7EA               	goto	l8519
 14323  0181F8                     u7160:
 14324                           
 14325                           ;stkvar	_quotient @ sp[(-9)+0]
 14326  0181F8  90D8               	bcf	status,0,c
 14327  0181FA  0EF7               	movlw	-9
 14328  0181FC  36E3               	rlcf	plusw1,f,c
 14329  0181FE  0EF8               	movlw	-8
 14330  018200  36E3               	rlcf	plusw1,f,c
 14331  018202  0EF9               	movlw	-7
 14332  018204  36E3               	rlcf	plusw1,f,c
 14333  018206  0EFA               	movlw	-6
 14334  018208  36E3               	rlcf	plusw1,f,c
 14335  01820A  0EFB               	movlw	-5
 14336  01820C  36E3               	rlcf	plusw1,f,c
 14337  01820E  0EFC               	movlw	-4
 14338  018210  36E3               	rlcf	plusw1,f,c
 14339  018212  0EFD               	movlw	-3
 14340  018214  36E3               	rlcf	plusw1,f,c
 14341  018216  0EFE               	movlw	-2
 14342  018218  36E3               	rlcf	plusw1,f,c
 14343                           
 14344                           ;stkvar	_divisor @ sp[(-9)+-16]
 14345                           ;stkvar	_dividend @ sp[(-9)+-8]
 14346  01821A  50E1               	movf	fsr1l,w,c
 14347  01821C  0FEF               	addlw	-17
 14348  01821E  6ED9               	movwf	fsr2l,c
 14349  018220  50E2               	movf	fsr1h,w,c
 14350  018222  6EDA               	movwf	fsr2h,c
 14351  018224  0EFF               	movlw	255
 14352  018226  22DA               	addwfc	fsr2h,f,c
 14353  018228  0EE7               	movlw	-25
 14354  01822A  50E3               	movf	plusw1,w,c
 14355  01822C  5CDE               	subwf	postinc2,w,c
 14356  01822E  0EE8               	movlw	-24
 14357  018230  50E3               	movf	plusw1,w,c
 14358  018232  58DE               	subwfb	postinc2,w,c
 14359  018234  0EE9               	movlw	-23
 14360  018236  50E3               	movf	plusw1,w,c
 14361  018238  58DE               	subwfb	postinc2,w,c
 14362  01823A  0EEA               	movlw	-22
 14363  01823C  50E3               	movf	plusw1,w,c
 14364  01823E  58DE               	subwfb	postinc2,w,c
 14365  018240  0EEB               	movlw	-21
 14366  018242  50E3               	movf	plusw1,w,c
 14367  018244  58DE               	subwfb	postinc2,w,c
 14368  018246  0EEC               	movlw	-20
 14369  018248  50E3               	movf	plusw1,w,c
 14370  01824A  58DE               	subwfb	postinc2,w,c
 14371  01824C  0EED               	movlw	-19
 14372  01824E  50E3               	movf	plusw1,w,c
 14373  018250  58DE               	subwfb	postinc2,w,c
 14374  018252  0EEE               	movlw	-18
 14375  018254  50E3               	movf	plusw1,w,c
 14376  018256  58DE               	subwfb	postinc2,w,c
 14377  018258  A0D8               	btfss	status,0,c
 14378  01825A  D021               	goto	l8531
 14379                           
 14380                           ;stkvar	_divisor @ sp[(-9)+-16]
 14381                           ;stkvar	_dividend @ sp[(-9)+-8]
 14382  01825C  50E1               	movf	fsr1l,w,c
 14383  01825E  0FEF               	addlw	-17
 14384  018260  6ED9               	movwf	fsr2l,c
 14385  018262  50E2               	movf	fsr1h,w,c
 14386  018264  6EDA               	movwf	fsr2h,c
 14387  018266  0EFF               	movlw	255
 14388  018268  22DA               	addwfc	fsr2h,f,c
 14389  01826A  0EE7               	movlw	-25
 14390  01826C  50E3               	movf	plusw1,w,c
 14391  01826E  5EDE               	subwf	postinc2,f,c
 14392  018270  0EE8               	movlw	-24
 14393  018272  50E3               	movf	plusw1,w,c
 14394  018274  5ADE               	subwfb	postinc2,f,c
 14395  018276  0EE9               	movlw	-23
 14396  018278  50E3               	movf	plusw1,w,c
 14397  01827A  5ADE               	subwfb	postinc2,f,c
 14398  01827C  0EEA               	movlw	-22
 14399  01827E  50E3               	movf	plusw1,w,c
 14400  018280  5ADE               	subwfb	postinc2,f,c
 14401  018282  0EEB               	movlw	-21
 14402  018284  50E3               	movf	plusw1,w,c
 14403  018286  5ADE               	subwfb	postinc2,f,c
 14404  018288  0EEC               	movlw	-20
 14405  01828A  50E3               	movf	plusw1,w,c
 14406  01828C  5ADE               	subwfb	postinc2,f,c
 14407  01828E  0EED               	movlw	-19
 14408  018290  50E3               	movf	plusw1,w,c
 14409  018292  5ADE               	subwfb	postinc2,f,c
 14410  018294  0EEE               	movlw	-18
 14411  018296  50E3               	movf	plusw1,w,c
 14412  018298  5ADE               	subwfb	postinc2,f,c
 14413                           
 14414                           ;stkvar	_quotient @ sp[(-9)+0]
 14415  01829A  0EF7               	movlw	-9
 14416  01829C  80E3               	bsf	plusw1,0,c
 14417  01829E                     l8531:
 14418                           
 14419                           ;stkvar	_divisor @ sp[(-9)+-16]
 14420  01829E  90D8               	bcf	status,0,c
 14421  0182A0  0EEE               	movlw	-18
 14422  0182A2  32E3               	rrcf	plusw1,f,c
 14423  0182A4  0EED               	movlw	-19
 14424  0182A6  32E3               	rrcf	plusw1,f,c
 14425  0182A8  0EEC               	movlw	-20
 14426  0182AA  32E3               	rrcf	plusw1,f,c
 14427  0182AC  0EEB               	movlw	-21
 14428  0182AE  32E3               	rrcf	plusw1,f,c
 14429  0182B0  0EEA               	movlw	-22
 14430  0182B2  32E3               	rrcf	plusw1,f,c
 14431  0182B4  0EE9               	movlw	-23
 14432  0182B6  32E3               	rrcf	plusw1,f,c
 14433  0182B8  0EE8               	movlw	-24
 14434  0182BA  32E3               	rrcf	plusw1,f,c
 14435  0182BC  0EE7               	movlw	-25
 14436  0182BE  32E3               	rrcf	plusw1,f,c
 14437                           
 14438                           ;stkvar	_counter @ sp[(-9)+8]
 14439  0182C0  0EFF               	movlw	-1
 14440  0182C2  50E3               	movf	plusw1,w,c
 14441  0182C4  6E26               	movwf	btemp^0,c
 14442  0182C6  0E01               	movlw	1
 14443  0182C8  5E26               	subwf	btemp^0,f,c
 14444  0182CA  0EFF               	movlw	-1
 14445  0182CC  0060  F09B  FFE3   	movff	btemp,plusw1
 14446  0182D2  A4D8               	btfss	status,2,c
 14447  0182D4  D791               	goto	u7160
 14448  0182D6                     u7180:
 14449                           
 14450                           ;stkvar	_quotient @ sp[(-9)+0]
 14451  0182D6  0EF7               	movlw	247
 14452  0182D8  24E1               	addwf	fsr1l,w,c
 14453  0182DA  6ED9               	movwf	fsr2l,c
 14454  0182DC  0EFF               	movlw	255
 14455  0182DE  20E2               	addwfc	fsr1h,w,c
 14456  0182E0  6EDA               	movwf	fsr2h,c
 14457                           
 14458                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 14459  0182E2  0E08               	movlw	8
 14460  0182E4  6E26               	movwf	btemp^0,c
 14461  0182E6  0EEF               	movlw	-17
 14462  0182E8                     us719999:
 14463  0182E8  006F FF7B FFE3     	movff	postinc2,plusw1
 14464  0182EE  28E8               	incf	wreg,w,c
 14465  0182F0  2E26               	decfsz	btemp^0,f,c
 14466  0182F2  D7FA               	bra	us719999
 14467                           
 14468                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14469  0182F4  0EF7               	movlw	247
 14470  0182F6  26E1               	addwf	fsr1l,f,c
 14471  0182F8  0EFF               	movlw	255
 14472  0182FA  22E2               	addwfc	fsr1h,f,c
 14473  0182FC  0012               	return		;funcret
 14474  0182FE                     __end_of___lodiv:
 14475                           	opt callstack 0
 14476                           
 14477 ;; *************** function _strncmp *****************
 14478 ;; Defined at:
 14479 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 14480 ;; Parameters:    Size  Location     Type
 14481 ;;  _l              2  [STACK] PTR const unsigned char 
 14482 ;;		 -> ct(3), STR_65(85), STR_63(3), STR_62(3), 
 14483 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14484 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14485 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14486 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14487 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14488 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14489 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14490 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14491 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
 14492 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
 14493 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14494 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14495 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14496 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14497 ;;		 -> STR_2(15), STR_1(17), 
 14498 ;;  _r              2  [STACK] PTR const unsigned char 
 14499 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14500 ;;		 -> STR_80(3), STR_76(3), 
 14501 ;;  n               2  [STACK] unsigned int 
 14502 ;; Auto vars:     Size  Location     Type
 14503 ;;  r               2  [STACK] PTR const unsigned char 
 14504 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14505 ;;		 -> STR_80(3), STR_76(3), 
 14506 ;;  l               2  [STACK] PTR const unsigned char 
 14507 ;;		 -> ct(3), STR_65(85), STR_63(3), STR_62(3), 
 14508 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14509 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14510 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14511 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14512 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14513 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14514 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14515 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14516 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
 14517 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
 14518 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14519 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14520 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14521 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14522 ;;		 -> STR_2(15), STR_1(17), 
 14523 ;; Return value:  Size  Location     Type
 14524 ;;                  2  [STACK] int 
 14525 ;; Registers used:
 14526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 14527 ;; Tracked objects:
 14528 ;;		On entry : 0/0
 14529 ;;		On exit  : 0/0
 14530 ;;		Unchanged: 0/0
 14531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14536 ;;Total ram usage:        0 bytes
 14537 ;; Hardware stack levels used:    1
 14538 ;; Hardware stack levels required when called:   15
 14539 ;; This function calls:
 14540 ;;		Nothing
 14541 ;; This function is called by:
 14542 ;;		_vfpfcnvrt
 14543 ;; This function uses a reentrant model
 14544 ;;
 14545                           
 14546                           	psect	text53
 14547  0175F6                     __ptext53:
 14548                           	opt callstack 0
 14549  0175F6                     _strncmp:
 14550                           	opt callstack 0
 14551                           
 14552                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14553  0175F6  52E6               	movf	postinc1,f,c
 14554  0175F8  52E6               	movf	postinc1,f,c
 14555  0175FA  52E6               	movf	postinc1,f,c
 14556  0175FC  52E6               	movf	postinc1,f,c
 14557                           
 14558                           ;stkvar	__l @ sp[(-4)+-2]
 14559                           
 14560                           ;incstack = 0
 14561 ;; hardware stack exceeded
 14562  0175FE  0EFA               	movlw	-6
 14563  017600  006F FF8C  F030    	movff	plusw1,btemp+10
 14564  017606  0EFB               	movlw	-5
 14565  017608  006F FF8C  F031    	movff	plusw1,btemp+11
 14566                           
 14567                           ;stkvar	_l @ sp[(-4)+2]
 14568  01760E  0EFF               	movlw	-1
 14569  017610  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 14570  017616  0EFE               	movlw	-2
 14571  017618  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 14572                           
 14573                           ;stkvar	__r @ sp[(-4)+-4]
 14574  01761E  0EF8               	movlw	-8
 14575  017620  006F FF8C  F030    	movff	plusw1,btemp+10
 14576  017626  0EF9               	movlw	-7
 14577  017628  006F FF8C  F031    	movff	plusw1,btemp+11
 14578                           
 14579                           ;stkvar	_r @ sp[(-4)+0]
 14580  01762E  0EFD               	movlw	-3
 14581  017630  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 14582  017636  0EFC               	movlw	-4
 14583  017638  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 14584                           
 14585                           ;stkvar	_n @ sp[(-4)+-6]
 14586  01763E  0EF6               	movlw	-10
 14587  017640  006F FF8C  F026    	movff	plusw1,btemp
 14588  017646  0E01               	movlw	1
 14589  017648  5E26               	subwf	btemp^0,f,c
 14590  01764A  0EF6               	movlw	-10
 14591  01764C  0060  F09B  FFE3   	movff	btemp,plusw1
 14592  017652  0EF7               	movlw	-9
 14593  017654  006F FF8C  F026    	movff	plusw1,btemp
 14594  01765A  0E00               	movlw	0
 14595  01765C  5A26               	subwfb	btemp^0,f,c
 14596  01765E  0EF7               	movlw	-9
 14597  017660  0060  F09B  FFE3   	movff	btemp,plusw1
 14598  017666  0EF6               	movlw	-10
 14599  017668  28E3               	incf	plusw1,w,c
 14600  01766A  E13F               	bnz	l9227
 14601  01766C  0EF7               	movlw	-9
 14602  01766E  28E3               	incf	plusw1,w,c
 14603  017670  A4D8               	btfss	status,2,c
 14604  017672  D03B               	goto	l9227
 14605  017674  0E00               	movlw	0
 14606  017676  6E26               	movwf	btemp^0,c
 14607  017678  0E00               	movlw	0
 14608  01767A  6E27               	movwf	(btemp+1)^0,c
 14609  01767C  D0C7               	goto	l3444
 14610  01767E                     l9225:
 14611                           
 14612                           ;stkvar	_l @ sp[(-4)+2]
 14613  01767E  0EFE               	movlw	-2
 14614  017680  50E3               	movf	plusw1,w,c
 14615  017682  0F01               	addlw	1
 14616  017684  6E26               	movwf	btemp^0,c
 14617  017686  0EFE               	movlw	-2
 14618  017688  0060  F09B  FFE3   	movff	btemp,plusw1
 14619  01768E  6A26               	clrf	btemp^0,c
 14620  017690  0EFF               	movlw	-1
 14621  017692  50E3               	movf	plusw1,w,c
 14622  017694  2026               	addwfc	btemp^0,w,c
 14623  017696  6E26               	movwf	btemp^0,c
 14624  017698  0EFF               	movlw	-1
 14625  01769A  0060  F09B  FFE3   	movff	btemp,plusw1
 14626                           
 14627                           ;stkvar	_r @ sp[(-4)+0]
 14628  0176A0  0EFC               	movlw	-4
 14629  0176A2  50E3               	movf	plusw1,w,c
 14630  0176A4  0F01               	addlw	1
 14631  0176A6  6E26               	movwf	btemp^0,c
 14632  0176A8  0EFC               	movlw	-4
 14633  0176AA  0060  F09B  FFE3   	movff	btemp,plusw1
 14634  0176B0  6A26               	clrf	btemp^0,c
 14635  0176B2  0EFD               	movlw	-3
 14636  0176B4  50E3               	movf	plusw1,w,c
 14637  0176B6  2026               	addwfc	btemp^0,w,c
 14638  0176B8  6E26               	movwf	btemp^0,c
 14639  0176BA  0EFD               	movlw	-3
 14640  0176BC  0060  F09B  FFE3   	movff	btemp,plusw1
 14641                           
 14642                           ;stkvar	_n @ sp[(-4)+-6]
 14643  0176C2  0EF6               	movlw	-10
 14644  0176C4  006F FF8C  F026    	movff	plusw1,btemp
 14645  0176CA  0E01               	movlw	1
 14646  0176CC  5E26               	subwf	btemp^0,f,c
 14647  0176CE  0EF6               	movlw	-10
 14648  0176D0  0060  F09B  FFE3   	movff	btemp,plusw1
 14649  0176D6  0EF7               	movlw	-9
 14650  0176D8  006F FF8C  F026    	movff	plusw1,btemp
 14651  0176DE  0E00               	movlw	0
 14652  0176E0  5A26               	subwfb	btemp^0,f,c
 14653  0176E2  0EF7               	movlw	-9
 14654  0176E4  0060  F09B  FFE3   	movff	btemp,plusw1
 14655  0176EA                     l9227:
 14656                           
 14657                           ;stkvar	_l @ sp[(-4)+2]
 14658  0176EA  0EFE               	movlw	-2
 14659  0176EC  006F FF8F FFF6     	movff	plusw1,tblptrl
 14660  0176F2  0EFF               	movlw	-1
 14661  0176F4  006F FF8F FFF7     	movff	plusw1,tblptrh
 14662  0176FA  0E00               	movlw	low (__mediumconst shr (0+16))
 14663  0176FC  6EF8               	movwf	tblptru,c
 14664  0176FE  0E1F               	movlw	(high __ramtop+-1)
 14665  017700  64F7               	cpfsgt	tblptrh,c
 14666  017702  D003               	bra	u8477
 14667  017704  0008               	tblrd		*
 14668  017706  50F5               	movf	tablat,w,c
 14669  017708  D007               	bra	u8470
 14670  01770A                     u8477:
 14671  01770A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14672  017710  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14673  017716  50EF               	movf	indf0,w,c
 14674  017718                     u8470:
 14675  017718  0900               	iorlw	0
 14676  01771A  B4D8               	btfsc	status,2,c
 14677  01771C  D04A               	goto	u8510
 14678                           
 14679                           ;stkvar	_r @ sp[(-4)+0]
 14680  01771E  50E1               	movf	fsr1l,w,c
 14681  017720  0FFC               	addlw	-4
 14682  017722  6ED9               	movwf	fsr2l,c
 14683  017724  50E2               	movf	fsr1h,w,c
 14684  017726  6EDA               	movwf	fsr2h,c
 14685  017728  0EFF               	movlw	255
 14686  01772A  22DA               	addwfc	fsr2h,f,c
 14687  01772C  006F FF7B FFF6     	movff	postinc2,tblptrl
 14688  017732  006F FF77 FFF7     	movff	postdec2,tblptrh
 14689  017738                     	if	0	;tblptru may be non-zero
 14690  017738                     	endif
 14691  017738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14692  017738  0E00               	movlw	low (__mediumconst shr (0+16))
 14693  01773A  6EF8               	movwf	tblptru,c
 14694  01773C                     	endif
 14695  01773C  0008               	tblrd		*
 14696  01773E  50F5               	movf	tablat,w,c
 14697  017740  0900               	iorlw	0
 14698  017742  B4D8               	btfsc	status,2,c
 14699  017744  D036               	goto	u8510
 14700                           
 14701                           ;stkvar	_n @ sp[(-4)+-6]
 14702  017746  0EF6               	movlw	-10
 14703  017748  006F FF8C  F026    	movff	plusw1,btemp
 14704  01774E  0EF7               	movlw	-9
 14705  017750  50E3               	movf	plusw1,w,c
 14706  017752  1026               	iorwf	btemp^0,w,c
 14707  017754  B4D8               	btfsc	status,2,c
 14708  017756  D02D               	goto	u8510
 14709                           
 14710                           ;stkvar	_r @ sp[(-4)+0]
 14711  017758  50E1               	movf	fsr1l,w,c
 14712  01775A  0FFC               	addlw	-4
 14713  01775C  6ED9               	movwf	fsr2l,c
 14714  01775E  50E2               	movf	fsr1h,w,c
 14715  017760  6EDA               	movwf	fsr2h,c
 14716  017762  0EFF               	movlw	255
 14717  017764  22DA               	addwfc	fsr2h,f,c
 14718  017766  006F FF7B FFF6     	movff	postinc2,tblptrl
 14719  01776C  006F FF77 FFF7     	movff	postdec2,tblptrh
 14720  017772                     	if	0	;tblptru may be non-zero
 14721  017772                     	endif
 14722  017772                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14723  017772  0E00               	movlw	low (__mediumconst shr (0+16))
 14724  017774  6EF8               	movwf	tblptru,c
 14725  017776                     	endif
 14726  017776  0008               	tblrd		*
 14727  017778  006F FFD4  F031    	movff	tablat,btemp+11
 14728                           
 14729                           ;stkvar	_l @ sp[(-4)+2]
 14730  01777E  0EFE               	movlw	-2
 14731  017780  006F FF8F FFF6     	movff	plusw1,tblptrl
 14732  017786  0EFF               	movlw	-1
 14733  017788  006F FF8F FFF7     	movff	plusw1,tblptrh
 14734  01778E  0E00               	movlw	low (__mediumconst shr (0+16))
 14735  017790  6EF8               	movwf	tblptru,c
 14736  017792  0E1F               	movlw	(high __ramtop+-1)
 14737  017794  64F7               	cpfsgt	tblptrh,c
 14738  017796  D003               	bra	u8517
 14739  017798  0008               	tblrd		*
 14740  01779A  50F5               	movf	tablat,w,c
 14741  01779C  D007               	bra	u8515
 14742  01779E                     u8517:
 14743  01779E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14744  0177A4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14745  0177AA  50EF               	movf	indf0,w,c
 14746  0177AC                     u8515:
 14747  0177AC  1831               	xorwf	(btemp+11)^0,w,c
 14748  0177AE  B4D8               	btfsc	status,2,c
 14749  0177B0  D766               	goto	l9225
 14750  0177B2                     u8510:
 14751                           
 14752                           ;stkvar	_l @ sp[(-4)+2]
 14753  0177B2  0EFE               	movlw	-2
 14754  0177B4  006F FF8F FFF6     	movff	plusw1,tblptrl
 14755  0177BA  0EFF               	movlw	-1
 14756  0177BC  006F FF8F FFF7     	movff	plusw1,tblptrh
 14757  0177C2  0E00               	movlw	low (__mediumconst shr (0+16))
 14758  0177C4  6EF8               	movwf	tblptru,c
 14759  0177C6  0E1F               	movlw	(high __ramtop+-1)
 14760  0177C8  64F7               	cpfsgt	tblptrh,c
 14761  0177CA  D003               	bra	u8527
 14762  0177CC  0008               	tblrd		*
 14763  0177CE  50F5               	movf	tablat,w,c
 14764  0177D0  D007               	bra	u8520
 14765  0177D2                     u8527:
 14766  0177D2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14767  0177D8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14768  0177DE  50EF               	movf	indf0,w,c
 14769  0177E0                     u8520:
 14770  0177E0  6E26               	movwf	btemp^0,c
 14771  0177E2  6A27               	clrf	(btemp+1)^0,c
 14772                           
 14773                           ;stkvar	_r @ sp[(-4)+0]
 14774  0177E4  50E1               	movf	fsr1l,w,c
 14775  0177E6  0FFC               	addlw	-4
 14776  0177E8  6ED9               	movwf	fsr2l,c
 14777  0177EA  50E2               	movf	fsr1h,w,c
 14778  0177EC  6EDA               	movwf	fsr2h,c
 14779  0177EE  0EFF               	movlw	255
 14780  0177F0  22DA               	addwfc	fsr2h,f,c
 14781  0177F2  006F FF7B FFF6     	movff	postinc2,tblptrl
 14782  0177F8  006F FF77 FFF7     	movff	postdec2,tblptrh
 14783  0177FE                     	if	0	;tblptru may be non-zero
 14784  0177FE                     	endif
 14785  0177FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14786  0177FE  0E00               	movlw	low (__mediumconst shr (0+16))
 14787  017800  6EF8               	movwf	tblptru,c
 14788  017802                     	endif
 14789  017802  0008               	tblrd		*
 14790  017804  50F5               	movf	tablat,w,c
 14791  017806  5E26               	subwf	btemp^0,f,c
 14792  017808  0E00               	movlw	0
 14793  01780A  5A27               	subwfb	(btemp+1)^0,f,c
 14794  01780C                     l3444:
 14795                           
 14796                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 14797  01780C  0EF6               	movlw	246
 14798  01780E  26E1               	addwf	fsr1l,f,c
 14799  017810  0EFF               	movlw	255
 14800  017812  22E2               	addwfc	fsr1h,f,c
 14801  017814  0012               	return		;funcret
 14802  017816                     __end_of_strncmp:
 14803                           	opt callstack 0
 14804                           
 14805 ;; *************** function _stoa *****************
 14806 ;; Defined at:
 14807 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14808 ;; Parameters:    Size  Location     Type
 14809 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14810 ;;		 -> f(6), NULL(0), 
 14811 ;;  s               2  [STACK] PTR unsigned char 
 14812 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 14813 ;;		 -> D.lcd(480), D(482), T(144), STR_3(6), 
 14814 ;;		 -> V(190), 
 14815 ;; Auto vars:     Size  Location     Type
 14816 ;;  nuls            7  [STACK] unsigned char [7]
 14817 ;;  l               2  [STACK] int 
 14818 ;;  p               2  [STACK] int 
 14819 ;;  cp              2  [STACK] PTR unsigned char 
 14820 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_47(9), 
 14821 ;;		 -> STR_46(12), D.lcd(480), D(482), T(144), 
 14822 ;;		 -> STR_3(6), V(190), 
 14823 ;;  w               2  [STACK] int 
 14824 ;;  i               2  [STACK] int 
 14825 ;; Return value:  Size  Location     Type
 14826 ;;                  2  [STACK] int 
 14827 ;; Registers used:
 14828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14829 ;; Tracked objects:
 14830 ;;		On entry : 0/0
 14831 ;;		On exit  : 0/0
 14832 ;;		Unchanged: 0/0
 14833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14838 ;;Total ram usage:        0 bytes
 14839 ;; Hardware stack levels used:    1
 14840 ;; Hardware stack levels required when called:   18
 14841 ;; This function calls:
 14842 ;;		_fputc
 14843 ;;		_strlen
 14844 ;; This function is called by:
 14845 ;;		_vfpfcnvrt
 14846 ;; This function uses a reentrant model
 14847 ;;
 14848                           
 14849                           	psect	text54
 14850  016C04                     __ptext54:
 14851                           	opt callstack 0
 14852  016C04                     _stoa:
 14853                           	opt callstack 0
 14854                           
 14855                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14856  016C04  0E11               	movlw	17
 14857  016C06  26E1               	addwf	fsr1l,f,c
 14858  016C08  0E00               	movlw	0
 14859  016C0A  22E2               	addwfc	fsr1h,f,c
 14860                           
 14861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 14862                           
 14863                           ;incstack = 0
 14864 ;; hardware stack exceeded
 14865  016C0C  EE20  F200         	lfsr	2,stoa@F1166
 14866                           
 14867                           ;stkvar	_nuls @ sp[(-17)+0]
 14868  016C10  0E07               	movlw	7
 14869  016C12  6E26               	movwf	btemp^0,c
 14870  016C14  0EEF               	movlw	-17
 14871  016C16                     us1131999:
 14872  016C16  006F FF7B FFE3     	movff	postinc2,plusw1
 14873  016C1C  28E8               	incf	wreg,w,c
 14874  016C1E  2E26               	decfsz	btemp^0,f,c
 14875  016C20  D7FA               	bra	us1131999
 14876                           
 14877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 14878                           ;stkvar	_s @ sp[(-17)+-4]
 14879  016C22  0EEB               	movlw	-21
 14880  016C24  006F FF8C  F030    	movff	plusw1,btemp+10
 14881  016C2A  0EEC               	movlw	-20
 14882  016C2C  006F FF8C  F031    	movff	plusw1,btemp+11
 14883                           
 14884                           ;stkvar	_cp @ sp[(-17)+11]
 14885  016C32  0EFB               	movlw	-5
 14886  016C34  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 14887  016C3A  0EFA               	movlw	-6
 14888  016C3C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 14889                           
 14890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 14891                           ;stkvar	_cp @ sp[(-17)+11]
 14892  016C42  0EFA               	movlw	-6
 14893  016C44  006F FF8C  F026    	movff	plusw1,btemp
 14894  016C4A  0EFB               	movlw	-5
 14895  016C4C  50E3               	movf	plusw1,w,c
 14896  016C4E  1026               	iorwf	btemp^0,w,c
 14897  016C50  A4D8               	btfss	status,2,c
 14898  016C52  D00E               	goto	l12001
 14899                           
 14900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 14901                           ;stkvar	_nuls @ sp[(-17)+0]
 14902  016C54  0EEF               	movlw	239
 14903  016C56  24E1               	addwf	fsr1l,w,c
 14904  016C58  6E30               	movwf	(btemp+10)^0,c
 14905  016C5A  0EFF               	movlw	255
 14906  016C5C  20E2               	addwfc	fsr1h,w,c
 14907  016C5E  6E31               	movwf	(btemp+11)^0,c
 14908                           
 14909                           ;stkvar	_cp @ sp[(-17)+11]
 14910  016C60  0EFB               	movlw	-5
 14911  016C62  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 14912  016C68  0EFA               	movlw	-6
 14913  016C6A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 14914  016C70                     l12001:
 14915                           
 14916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 14917                           ;stkvar	_cp @ sp[(-17)+11]
 14918  016C70  0EFA               	movlw	-6
 14919  016C72  006F FF8F FFE6     	movff	plusw1,postinc1
 14920  016C78  006F FF8F FFE6     	movff	plusw1,postinc1
 14921  016C7E  EC59  F0D0         	call	_strlen	;wreg free
 14922                           
 14923                           ;stkvar	_l @ sp[(-17)+7]
 14924  016C82  0EF6               	movlw	-10
 14925  016C84  0060  F09B  FFE3   	movff	btemp,plusw1
 14926  016C8A  0EF7               	movlw	-9
 14927  016C8C  0060  F09F  FFE3   	movff	btemp+1,plusw1
 14928                           
 14929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 14930                           ;stkvar	_p @ sp[(-17)+9]
 14931  016C92  0EF8               	movlw	-8
 14932  016C94  0060  F033  FFE3   	movff	_prec,plusw1
 14933  016C9A  0EF9               	movlw	-7
 14934  016C9C  0060  F037  FFE3   	movff	_prec+1,plusw1
 14935                           
 14936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 14937                           ;stkvar	_p @ sp[(-17)+9]
 14938  016CA2  0EF9               	movlw	-7
 14939  016CA4  BEE3               	btfsc	plusw1,7,c
 14940  016CA6  D023               	goto	l2269
 14941                           
 14942                           ;stkvar	_l @ sp[(-17)+7]
 14943                           ;stkvar	_p @ sp[(-17)+9]
 14944  016CA8  50E1               	movf	fsr1l,w,c
 14945  016CAA  0FF8               	addlw	-8
 14946  016CAC  6ED9               	movwf	fsr2l,c
 14947  016CAE  50E2               	movf	fsr1h,w,c
 14948  016CB0  6EDA               	movwf	fsr2h,c
 14949  016CB2  0EFF               	movlw	255
 14950  016CB4  22DA               	addwfc	fsr2h,f,c
 14951  016CB6  0EF6               	movlw	-10
 14952  016CB8  50E3               	movf	plusw1,w,c
 14953  016CBA  5CDE               	subwf	postinc2,w,c
 14954  016CBC  50DE               	movf	postinc2,w,c
 14955  016CBE  0A80               	xorlw	128
 14956  016CC0  6E26               	movwf	btemp^0,c
 14957  016CC2  0EF7               	movlw	-9
 14958  016CC4  50E3               	movf	plusw1,w,c
 14959  016CC6  0A80               	xorlw	128
 14960  016CC8  5826               	subwfb	btemp^0,w,c
 14961  016CCA  B0D8               	btfsc	status,0,c
 14962  016CCC  D010               	goto	l2269
 14963                           
 14964                           ;stkvar	_p @ sp[(-17)+9]
 14965                           ;stkvar	_l @ sp[(-17)+7]
 14966  016CCE  0EF8               	movlw	-8
 14967  016CD0  006F FF8C  F026    	movff	plusw1,btemp
 14968  016CD6  0EF6               	movlw	-10
 14969  016CD8  0060  F09B  FFE3   	movff	btemp,plusw1
 14970  016CDE  0EF9               	movlw	-7
 14971  016CE0  006F FF8C  F026    	movff	plusw1,btemp
 14972  016CE6  0EF7               	movlw	-9
 14973  016CE8  0060  F09B  FFE3   	movff	btemp,plusw1
 14974  016CEE                     l2269:
 14975                           
 14976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 14977                           ;stkvar	_l @ sp[(-17)+7]
 14978                           ;stkvar	_p @ sp[(-17)+9]
 14979  016CEE  0EF6               	movlw	-10
 14980  016CF0  006F FF8C  F026    	movff	plusw1,btemp
 14981  016CF6  0EF8               	movlw	-8
 14982  016CF8  0060  F09B  FFE3   	movff	btemp,plusw1
 14983  016CFE  0EF7               	movlw	-9
 14984  016D00  006F FF8C  F026    	movff	plusw1,btemp
 14985  016D06  0EF9               	movlw	-7
 14986  016D08  0060  F09B  FFE3   	movff	btemp,plusw1
 14987                           
 14988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 14989                           ;stkvar	_w @ sp[(-17)+13]
 14990  016D0E  0EFC               	movlw	-4
 14991  016D10  0060  F02B  FFE3   	movff	_width,plusw1
 14992  016D16  0EFD               	movlw	-3
 14993  016D18  0060  F02F  FFE3   	movff	_width+1,plusw1
 14994                           
 14995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 14996  016D1E  A00E               	btfss	_flags^0,0,c
 14997  016D20  D01F               	goto	l12021
 14998  016D22  D031               	goto	u11360
 14999  016D24                     l12017:
 15000                           
 15001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 15002                           ;stkvar	_fp @ sp[(-17)+-2]
 15003  016D24  0EED               	movlw	-19
 15004  016D26  006F FF8F FFE6     	movff	plusw1,postinc1
 15005  016D2C  006F FF8F FFE6     	movff	plusw1,postinc1
 15006  016D32  0E20               	movlw	32
 15007  016D34  6EE6               	movwf	postinc1,c
 15008  016D36  0E00               	movlw	0
 15009  016D38  6EE6               	movwf	postinc1,c
 15010  016D3A  EC89  F0C7         	call	_fputc	;wreg free
 15011                           
 15012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 15013                           ;stkvar	_l @ sp[(-17)+7]
 15014  016D3E  0EF6               	movlw	-10
 15015  016D40  50E3               	movf	plusw1,w,c
 15016  016D42  0F01               	addlw	1
 15017  016D44  6E26               	movwf	btemp^0,c
 15018  016D46  0EF6               	movlw	-10
 15019  016D48  0060  F09B  FFE3   	movff	btemp,plusw1
 15020  016D4E  6A26               	clrf	btemp^0,c
 15021  016D50  0EF7               	movlw	-9
 15022  016D52  50E3               	movf	plusw1,w,c
 15023  016D54  2026               	addwfc	btemp^0,w,c
 15024  016D56  6E26               	movwf	btemp^0,c
 15025  016D58  0EF7               	movlw	-9
 15026  016D5A  0060  F09B  FFE3   	movff	btemp,plusw1
 15027  016D60                     l12021:
 15028                           
 15029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 15030                           ;stkvar	_w @ sp[(-17)+13]
 15031                           ;stkvar	_l @ sp[(-17)+7]
 15032  016D60  50E1               	movf	fsr1l,w,c
 15033  016D62  0FF6               	addlw	-10
 15034  016D64  6ED9               	movwf	fsr2l,c
 15035  016D66  50E2               	movf	fsr1h,w,c
 15036  016D68  6EDA               	movwf	fsr2h,c
 15037  016D6A  0EFF               	movlw	255
 15038  016D6C  22DA               	addwfc	fsr2h,f,c
 15039  016D6E  0EFC               	movlw	-4
 15040  016D70  50E3               	movf	plusw1,w,c
 15041  016D72  5CDE               	subwf	postinc2,w,c
 15042  016D74  50DE               	movf	postinc2,w,c
 15043  016D76  0A80               	xorlw	128
 15044  016D78  6E26               	movwf	btemp^0,c
 15045  016D7A  0EFD               	movlw	-3
 15046  016D7C  50E3               	movf	plusw1,w,c
 15047  016D7E  0A80               	xorlw	128
 15048  016D80  5826               	subwfb	btemp^0,w,c
 15049  016D82  A0D8               	btfss	status,0,c
 15050  016D84  D7CF               	goto	l12017
 15051  016D86                     u11360:
 15052                           
 15053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 15054                           ;stkvar	_i @ sp[(-17)+15]
 15055  016D86  0EFE               	movlw	-2
 15056  016D88  6AE3               	clrf	plusw1,c
 15057  016D8A  0EFF               	movlw	-1
 15058  016D8C  6AE3               	clrf	plusw1,c
 15059                           
 15060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15061  016D8E  D045               	goto	l12031
 15062  016D90                     l12025:
 15063                           
 15064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 15065                           ;stkvar	_fp @ sp[(-17)+-2]
 15066  016D90  0EED               	movlw	-19
 15067  016D92  006F FF8F FFE6     	movff	plusw1,postinc1
 15068  016D98  006F FF8F FFE6     	movff	plusw1,postinc1
 15069                           
 15070                           ;stkvar	_cp @ sp[(-19)+11]
 15071  016D9E  0EF8               	movlw	-8
 15072  016DA0  006F FF8F FFF6     	movff	plusw1,tblptrl
 15073  016DA6  0EF9               	movlw	-7
 15074  016DA8  006F FF8F FFF7     	movff	plusw1,tblptrh
 15075  016DAE  0E00               	movlw	low (__mediumconst shr (0+16))
 15076  016DB0  6EF8               	movwf	tblptru,c
 15077  016DB2  0E1F               	movlw	(high __ramtop+-1)
 15078  016DB4  64F7               	cpfsgt	tblptrh,c
 15079  016DB6  D003               	bra	u11377
 15080  016DB8  0008               	tblrd		*
 15081  016DBA  50F5               	movf	tablat,w,c
 15082  016DBC  D007               	bra	u11370
 15083  016DBE                     u11377:
 15084  016DBE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15085  016DC4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15086  016DCA  50EF               	movf	indf0,w,c
 15087  016DCC                     u11370:
 15088  016DCC  6EE6               	movwf	postinc1,c
 15089  016DCE  0E00               	movlw	0
 15090  016DD0  6EE6               	movwf	postinc1,c
 15091  016DD2  EC89  F0C7         	call	_fputc	;wreg free
 15092                           
 15093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15094                           ;stkvar	_cp @ sp[(-17)+11]
 15095  016DD6  0EFA               	movlw	-6
 15096  016DD8  50E3               	movf	plusw1,w,c
 15097  016DDA  0F01               	addlw	1
 15098  016DDC  6E26               	movwf	btemp^0,c
 15099  016DDE  0EFA               	movlw	-6
 15100  016DE0  0060  F09B  FFE3   	movff	btemp,plusw1
 15101  016DE6  6A26               	clrf	btemp^0,c
 15102  016DE8  0EFB               	movlw	-5
 15103  016DEA  50E3               	movf	plusw1,w,c
 15104  016DEC  2026               	addwfc	btemp^0,w,c
 15105  016DEE  6E26               	movwf	btemp^0,c
 15106  016DF0  0EFB               	movlw	-5
 15107  016DF2  0060  F09B  FFE3   	movff	btemp,plusw1
 15108                           
 15109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15110                           ;stkvar	_i @ sp[(-17)+15]
 15111  016DF8  0EFE               	movlw	-2
 15112  016DFA  50E3               	movf	plusw1,w,c
 15113  016DFC  0F01               	addlw	1
 15114  016DFE  6E26               	movwf	btemp^0,c
 15115  016E00  0EFE               	movlw	-2
 15116  016E02  0060  F09B  FFE3   	movff	btemp,plusw1
 15117  016E08  6A26               	clrf	btemp^0,c
 15118  016E0A  0EFF               	movlw	-1
 15119  016E0C  50E3               	movf	plusw1,w,c
 15120  016E0E  2026               	addwfc	btemp^0,w,c
 15121  016E10  6E26               	movwf	btemp^0,c
 15122  016E12  0EFF               	movlw	-1
 15123  016E14  0060  F09B  FFE3   	movff	btemp,plusw1
 15124  016E1A                     l12031:
 15125                           
 15126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15127                           ;stkvar	_p @ sp[(-17)+9]
 15128                           ;stkvar	_i @ sp[(-17)+15]
 15129  016E1A  50E1               	movf	fsr1l,w,c
 15130  016E1C  0FFE               	addlw	-2
 15131  016E1E  6ED9               	movwf	fsr2l,c
 15132  016E20  50E2               	movf	fsr1h,w,c
 15133  016E22  6EDA               	movwf	fsr2h,c
 15134  016E24  0EFF               	movlw	255
 15135  016E26  22DA               	addwfc	fsr2h,f,c
 15136  016E28  0EF8               	movlw	-8
 15137  016E2A  50E3               	movf	plusw1,w,c
 15138  016E2C  5CDE               	subwf	postinc2,w,c
 15139  016E2E  50DE               	movf	postinc2,w,c
 15140  016E30  0A80               	xorlw	128
 15141  016E32  6E26               	movwf	btemp^0,c
 15142  016E34  0EF9               	movlw	-7
 15143  016E36  50E3               	movf	plusw1,w,c
 15144  016E38  0A80               	xorlw	128
 15145  016E3A  5826               	subwfb	btemp^0,w,c
 15146  016E3C  A0D8               	btfss	status,0,c
 15147  016E3E  D7A8               	goto	l12025
 15148                           
 15149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15150  016E40  B00E               	btfsc	_flags^0,0,c
 15151  016E42  D01F               	goto	l12039
 15152  016E44  D031               	goto	u11400
 15153  016E46                     l12035:
 15154                           
 15155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15156                           ;stkvar	_fp @ sp[(-17)+-2]
 15157  016E46  0EED               	movlw	-19
 15158  016E48  006F FF8F FFE6     	movff	plusw1,postinc1
 15159  016E4E  006F FF8F FFE6     	movff	plusw1,postinc1
 15160  016E54  0E20               	movlw	32
 15161  016E56  6EE6               	movwf	postinc1,c
 15162  016E58  0E00               	movlw	0
 15163  016E5A  6EE6               	movwf	postinc1,c
 15164  016E5C  EC89  F0C7         	call	_fputc	;wreg free
 15165                           
 15166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15167                           ;stkvar	_l @ sp[(-17)+7]
 15168  016E60  0EF6               	movlw	-10
 15169  016E62  50E3               	movf	plusw1,w,c
 15170  016E64  0F01               	addlw	1
 15171  016E66  6E26               	movwf	btemp^0,c
 15172  016E68  0EF6               	movlw	-10
 15173  016E6A  0060  F09B  FFE3   	movff	btemp,plusw1
 15174  016E70  6A26               	clrf	btemp^0,c
 15175  016E72  0EF7               	movlw	-9
 15176  016E74  50E3               	movf	plusw1,w,c
 15177  016E76  2026               	addwfc	btemp^0,w,c
 15178  016E78  6E26               	movwf	btemp^0,c
 15179  016E7A  0EF7               	movlw	-9
 15180  016E7C  0060  F09B  FFE3   	movff	btemp,plusw1
 15181  016E82                     l12039:
 15182                           
 15183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15184                           ;stkvar	_w @ sp[(-17)+13]
 15185                           ;stkvar	_l @ sp[(-17)+7]
 15186  016E82  50E1               	movf	fsr1l,w,c
 15187  016E84  0FF6               	addlw	-10
 15188  016E86  6ED9               	movwf	fsr2l,c
 15189  016E88  50E2               	movf	fsr1h,w,c
 15190  016E8A  6EDA               	movwf	fsr2h,c
 15191  016E8C  0EFF               	movlw	255
 15192  016E8E  22DA               	addwfc	fsr2h,f,c
 15193  016E90  0EFC               	movlw	-4
 15194  016E92  50E3               	movf	plusw1,w,c
 15195  016E94  5CDE               	subwf	postinc2,w,c
 15196  016E96  50DE               	movf	postinc2,w,c
 15197  016E98  0A80               	xorlw	128
 15198  016E9A  6E26               	movwf	btemp^0,c
 15199  016E9C  0EFD               	movlw	-3
 15200  016E9E  50E3               	movf	plusw1,w,c
 15201  016EA0  0A80               	xorlw	128
 15202  016EA2  5826               	subwfb	btemp^0,w,c
 15203  016EA4  A0D8               	btfss	status,0,c
 15204  016EA6  D7CF               	goto	l12035
 15205  016EA8                     u11400:
 15206                           
 15207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15208                           ;stkvar	_l @ sp[(-17)+7]
 15209  016EA8  0EF6               	movlw	-10
 15210  016EAA  006F FF8C  F026    	movff	plusw1,btemp
 15211  016EB0  0EF7               	movlw	-9
 15212  016EB2  006F FF8C  F027    	movff	plusw1,btemp+1
 15213                           
 15214                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15215  016EB8  0EEB               	movlw	235
 15216  016EBA  26E1               	addwf	fsr1l,f,c
 15217  016EBC  0EFF               	movlw	255
 15218  016EBE  22E2               	addwfc	fsr1h,f,c
 15219  016EC0  0012               	return		;funcret
 15220  016EC2                     __end_of_stoa:
 15221                           	opt callstack 0
 15222                           
 15223 ;; *************** function _efgtoa *****************
 15224 ;; Defined at:
 15225 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15226 ;; Parameters:    Size  Location     Type
 15227 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15228 ;;		 -> f(6), NULL(0), 
 15229 ;;  f               4  [STACK] PTR struct _IO_FILE
 15230 ;;  c               1  [STACK] unsigned char 
 15231 ;; Auto vars:     Size  Location     Type
 15232 ;;  u               4  [STACK] unsigned char 
 15233 ;;  g               4  [STACK] unsigned char 
 15234 ;;  l               4  [STACK] unsigned char 
 15235 ;;  h               4  [STACK] unsigned char 
 15236 ;;  ou              4  [STACK] unsigned char 
 15237 ;;  n               2  [STACK] int 
 15238 ;;  e               2  [STACK] int 
 15239 ;;  i               2  [STACK] int 
 15240 ;;  w               2  [STACK] int 
 15241 ;;  p               2  [STACK] int 
 15242 ;;  sign            2  [STACK] int 
 15243 ;;  d               2  [STACK] int 
 15244 ;;  ne              2  [STACK] int 
 15245 ;;  m               2  [STACK] int 
 15246 ;;  pp              2  [STACK] int 
 15247 ;;  t               2  [STACK] int 
 15248 ;;  mode            1  [STACK] unsigned char 
 15249 ;;  nmode           1  [STACK] unsigned char 
 15250 ;; Return value:  Size  Location     Type
 15251 ;;                  2  [STACK] int 
 15252 ;; Registers used:
 15253 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15254 ;; Tracked objects:
 15255 ;;		On entry : 0/0
 15256 ;;		On exit  : 0/0
 15257 ;;		Unchanged: 0/0
 15258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15263 ;;Total ram usage:        0 bytes
 15264 ;; Hardware stack levels used:    1
 15265 ;; Hardware stack levels required when called:   20
 15266 ;; This function calls:
 15267 ;;		___awdiv
 15268 ;;		___awmod
 15269 ;;		___fladd
 15270 ;;		___fldiv
 15271 ;;		___fleq
 15272 ;;		___flge
 15273 ;;		___flmul
 15274 ;;		___flneg
 15275 ;;		___flsub
 15276 ;;		___fltol
 15277 ;;		___fpclassifyf
 15278 ;;		_floorf
 15279 ;;		_isupper
 15280 ;;		_pad
 15281 ;;		_strcpy
 15282 ;;		_tolower
 15283 ;; This function is called by:
 15284 ;;		_vfpfcnvrt
 15285 ;; This function uses a reentrant model
 15286 ;;
 15287                           
 15288                           	psect	text55
 15289  010000                     __ptext55:
 15290                           	opt callstack 0
 15291  010000                     _efgtoa:
 15292                           	opt callstack 0
 15293                           
 15294                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15295  010000  0E38               	movlw	56
 15296  010002  26E1               	addwf	fsr1l,f,c
 15297  010004  0E00               	movlw	0
 15298  010006  22E2               	addwfc	fsr1h,f,c
 15299                           
 15300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15301                           ;stkvar	_sign @ sp[(-56)+42]
 15302                           
 15303                           ;incstack = 0
 15304 ;; hardware stack exceeded
 15305  010008  0EF2               	movlw	-14
 15306  01000A  6AE3               	clrf	plusw1,c
 15307  01000C  0EF3               	movlw	-13
 15308  01000E  6AE3               	clrf	plusw1,c
 15309                           
 15310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15311                           ;stkvar	_f @ sp[(-56)+-6]
 15312  010010  0EC2               	movlw	-62
 15313  010012  006F FF8C  F02E    	movff	plusw1,btemp+8
 15314  010018  0EC3               	movlw	-61
 15315  01001A  006F FF8C  F02F    	movff	plusw1,btemp+9
 15316  010020  0EC4               	movlw	-60
 15317  010022  006F FF8C  F030    	movff	plusw1,btemp+10
 15318  010028  0EC5               	movlw	-59
 15319  01002A  006F FF8C  F031    	movff	plusw1,btemp+11
 15320                           
 15321                           ;stkvar	_g @ sp[(-56)+16]
 15322  010030  0ED8               	movlw	-40
 15323  010032  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 15324  010038  0ED9               	movlw	-39
 15325  01003A  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 15326  010040  0EDA               	movlw	-38
 15327  010042  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15328  010048  0EDB               	movlw	-37
 15329  01004A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15330                           
 15331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15332                           ;stkvar	_g @ sp[(-56)+16]
 15333  010050  0EDB               	movlw	-37
 15334  010052  AEE3               	btfss	plusw1,7,c
 15335  010054  D02B               	goto	l11699
 15336                           
 15337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15338  010056  0E01               	movlw	1
 15339  010058  6E30               	movwf	(btemp+10)^0,c
 15340  01005A  0E00               	movlw	0
 15341  01005C  6E31               	movwf	(btemp+11)^0,c
 15342                           
 15343                           ;stkvar	_sign @ sp[(-56)+42]
 15344  01005E  0EF2               	movlw	-14
 15345  010060  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15346  010066  0EF3               	movlw	-13
 15347  010068  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15348                           
 15349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15350                           ;stkvar	_g @ sp[(-56)+16]
 15351  01006E  0ED8               	movlw	-40
 15352  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15353  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15354  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15355  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15356  010088  ECD8  F0D5         	call	___flneg	;wreg free
 15357                           
 15358                           ;stkvar	_g @ sp[(-56)+16]
 15359  01008C  0ED8               	movlw	-40
 15360  01008E  0060  F09B  FFE3   	movff	btemp,plusw1
 15361  010094  0ED9               	movlw	-39
 15362  010096  0060  F09F  FFE3   	movff	btemp+1,plusw1
 15363  01009C  0EDA               	movlw	-38
 15364  01009E  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 15365  0100A4  0EDB               	movlw	-37
 15366  0100A6  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 15367  0100AC                     l11699:
 15368                           
 15369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15370                           ;stkvar	_n @ sp[(-56)+32]
 15371  0100AC  0EE8               	movlw	-24
 15372  0100AE  6AE3               	clrf	plusw1,c
 15373  0100B0  0EE9               	movlw	-23
 15374  0100B2  6AE3               	clrf	plusw1,c
 15375                           
 15376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15377                           ;stkvar	_w @ sp[(-56)+38]
 15378  0100B4  0EEE               	movlw	-18
 15379  0100B6  0060  F02B  FFE3   	movff	_width,plusw1
 15380  0100BC  0EEF               	movlw	-17
 15381  0100BE  0060  F02F  FFE3   	movff	_width+1,plusw1
 15382                           
 15383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 15384                           ;stkvar	_sign @ sp[(-56)+42]
 15385  0100C4  0EF2               	movlw	-14
 15386  0100C6  006F FF8C  F026    	movff	plusw1,btemp
 15387  0100CC  0EF3               	movlw	-13
 15388  0100CE  50E3               	movf	plusw1,w,c
 15389  0100D0  1026               	iorwf	btemp^0,w,c
 15390  0100D2  A4D8               	btfss	status,2,c
 15391  0100D4  D002               	goto	u10810
 15392  0100D6  A40E               	btfss	_flags^0,2,c
 15393  0100D8  D036               	goto	l11719
 15394  0100DA                     u10810:
 15395                           
 15396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 15397                           ;stkvar	_sign @ sp[(-56)+42]
 15398  0100DA  0EF2               	movlw	-14
 15399  0100DC  006F FF8C  F026    	movff	plusw1,btemp
 15400  0100E2  0EF3               	movlw	-13
 15401  0100E4  50E3               	movf	plusw1,w,c
 15402  0100E6  1026               	iorwf	btemp^0,w,c
 15403  0100E8  A4D8               	btfss	status,2,c
 15404  0100EA  D002               	goto	l11711
 15405  0100EC  0E2B               	movlw	43
 15406  0100EE  D001               	goto	L16
 15407  0100F0                     l11711:
 15408  0100F0  0E2D               	movlw	45
 15409  0100F2                     L16:
 15410  0100F2  6E30               	movwf	(btemp+10)^0,c
 15411  0100F4  0E00               	movlw	0
 15412  0100F6  6E31               	movwf	(btemp+11)^0,c
 15413                           
 15414                           ;stkvar	_efgtoa$5409 @ sp[(-56)+10]
 15415  0100F8  0ED2               	movlw	-46
 15416  0100FA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15417  010100  0ED3               	movlw	-45
 15418  010102  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15419                           
 15420                           ;stkvar	_efgtoa$5409 @ sp[(-56)+10]
 15421  010108  0ED2               	movlw	-46
 15422  01010A  006F FF8C  F3AE    	movff	plusw1,_dbuf
 15423                           
 15424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 15425                           ;stkvar	_n @ sp[(-56)+32]
 15426  010110  0EE8               	movlw	-24
 15427  010112  50E3               	movf	plusw1,w,c
 15428  010114  0F01               	addlw	1
 15429  010116  6E26               	movwf	btemp^0,c
 15430  010118  0EE8               	movlw	-24
 15431  01011A  0060  F09B  FFE3   	movff	btemp,plusw1
 15432  010120  6A26               	clrf	btemp^0,c
 15433  010122  0EE9               	movlw	-23
 15434  010124  50E3               	movf	plusw1,w,c
 15435  010126  2026               	addwfc	btemp^0,w,c
 15436  010128  6E26               	movwf	btemp^0,c
 15437  01012A  0EE9               	movlw	-23
 15438  01012C  0060  F09B  FFE3   	movff	btemp,plusw1
 15439                           
 15440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 15441                           ;stkvar	_w @ sp[(-56)+38]
 15442  010132  50E1               	movf	fsr1l,w,c
 15443  010134  0FEE               	addlw	-18
 15444  010136  6ED9               	movwf	fsr2l,c
 15445  010138  50E2               	movf	fsr1h,w,c
 15446  01013A  6EDA               	movwf	fsr2h,c
 15447  01013C  0EFF               	movlw	255
 15448  01013E  22DA               	addwfc	fsr2h,f,c
 15449  010140  06DE               	decf	postinc2,f,c
 15450  010142  0E00               	movlw	0
 15451  010144  5ADD               	subwfb	postdec2,f,c
 15452  010146                     l11719:
 15453                           
 15454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15455                           ;stkvar	_g @ sp[(-56)+16]
 15456  010146  0ED8               	movlw	-40
 15457  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 15458  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 15459  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 15460  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 15461  010160  ECF4  F0BF         	call	___fpclassifyf	;wreg free
 15462  010164  0426               	decf	btemp^0,w,c
 15463  010166  1027               	iorwf	(btemp+1)^0,w,c
 15464  010168  A4D8               	btfss	status,2,c
 15465  01016A  D076               	goto	l11737
 15466  01016C  0EBF               	movlw	191
 15467  01016E  6E30               	movwf	(btemp+10)^0,c
 15468  010170  0EFF               	movlw	255
 15469  010172  6E31               	movwf	(btemp+11)^0,c
 15470                           
 15471                           ;stkvar	_c @ sp[(-56)+-7]
 15472  010174  0EC1               	movlw	-63
 15473  010176  50E3               	movf	plusw1,w,c
 15474  010178  6E2E               	movwf	(btemp+8)^0,c
 15475  01017A  6A2F               	clrf	(btemp+9)^0,c
 15476  01017C  5030               	movf	(btemp+10)^0,w,c
 15477  01017E  262E               	addwf	(btemp+8)^0,f,c
 15478  010180  5031               	movf	(btemp+11)^0,w,c
 15479  010182  222F               	addwfc	(btemp+9)^0,f,c
 15480  010184  502F               	movf	(btemp+9)^0,w,c
 15481  010186  E106               	bnz	u10840
 15482  010188  0E1A               	movlw	26
 15483  01018A  5C2E               	subwf	(btemp+8)^0,w,c
 15484  01018C  B0D8               	btfsc	status,0,c
 15485  01018E  D002               	goto	u10840
 15486  010190  0E01               	movlw	1
 15487  010192  D001               	goto	u10850
 15488  010194                     u10840:
 15489  010194  0E00               	movlw	0
 15490  010196                     u10850:
 15491  010196  6E30               	movwf	(btemp+10)^0,c
 15492  010198  6A31               	clrf	(btemp+11)^0,c
 15493                           
 15494                           ;stkvar	_efgtoa$5410 @ sp[(-56)+8]
 15495  01019A  0ED0               	movlw	-48
 15496  01019C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15497  0101A2  0ED1               	movlw	-47
 15498  0101A4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15499                           
 15500                           ;stkvar	_efgtoa$5410 @ sp[(-56)+8]
 15501  0101AA  0ED0               	movlw	-48
 15502  0101AC  006F FF8C  F026    	movff	plusw1,btemp
 15503  0101B2  0ED1               	movlw	-47
 15504  0101B4  50E3               	movf	plusw1,w,c
 15505  0101B6  1026               	iorwf	btemp^0,w,c
 15506  0101B8  B4D8               	btfsc	status,2,c
 15507  0101BA  D017               	goto	l11729
 15508                           
 15509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 15510  0101BC  0ED6               	movlw	low STR_66
 15511  0101BE  6EE6               	movwf	postinc1,c
 15512  0101C0  0EFF               	movlw	high STR_66
 15513  0101C2  6EE6               	movwf	postinc1,c
 15514                           
 15515                           ;stkvar	_n @ sp[(-58)+32]
 15516  0101C4  0EAE               	movlw	low _dbuf
 15517  0101C6  6E30               	movwf	(btemp+10)^0,c
 15518  0101C8  0E03               	movlw	high _dbuf
 15519  0101CA  6E31               	movwf	(btemp+11)^0,c
 15520  0101CC  0EE6               	movlw	-26
 15521  0101CE  50E3               	movf	plusw1,w,c
 15522  0101D0  2630               	addwf	(btemp+10)^0,f,c
 15523  0101D2  0EE7               	movlw	-25
 15524  0101D4  50E3               	movf	plusw1,w,c
 15525  0101D6  2231               	addwfc	(btemp+11)^0,f,c
 15526  0101D8  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 15527  0101DE  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 15528  0101E4  EC19  F0CD         	call	_strcpy	;wreg free
 15529                           
 15530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 15531  0101E8  D016               	goto	l11731
 15532  0101EA                     l11729:
 15533                           
 15534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 15535  0101EA  0EDE               	movlw	low STR_67
 15536  0101EC  6EE6               	movwf	postinc1,c
 15537  0101EE  0EFF               	movlw	high STR_67
 15538  0101F0  6EE6               	movwf	postinc1,c
 15539                           
 15540                           ;stkvar	_n @ sp[(-58)+32]
 15541  0101F2  0EAE               	movlw	low _dbuf
 15542  0101F4  6E30               	movwf	(btemp+10)^0,c
 15543  0101F6  0E03               	movlw	high _dbuf
 15544  0101F8  6E31               	movwf	(btemp+11)^0,c
 15545  0101FA  0EE6               	movlw	-26
 15546  0101FC  50E3               	movf	plusw1,w,c
 15547  0101FE  2630               	addwf	(btemp+10)^0,f,c
 15548  010200  0EE7               	movlw	-25
 15549  010202  50E3               	movf	plusw1,w,c
 15550  010204  2231               	addwfc	(btemp+11)^0,f,c
 15551  010206  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 15552  01020C  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 15553  010212  EC19  F0CD         	call	_strcpy	;wreg free
 15554  010216                     l11731:
 15555                           
 15556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 15557                           ;stkvar	_w @ sp[(-56)+38]
 15558  010216  50E1               	movf	fsr1l,w,c
 15559  010218  0FEE               	addlw	-18
 15560  01021A  6ED9               	movwf	fsr2l,c
 15561  01021C  50E2               	movf	fsr1h,w,c
 15562  01021E  6EDA               	movwf	fsr2h,c
 15563  010220  0EFF               	movlw	255
 15564  010222  22DA               	addwfc	fsr2h,f,c
 15565  010224  0EFD               	movlw	253
 15566  010226  26DE               	addwf	postinc2,f,c
 15567  010228  0EFF               	movlw	255
 15568  01022A  22DD               	addwfc	postdec2,f,c
 15569  01022C                     l11733:
 15570                           
 15571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 15572                           ;stkvar	_w @ sp[(-56)+38]
 15573  01022C  0EEE               	movlw	-18
 15574  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 15575  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 15576  01023A  0EAE               	movlw	low _dbuf
 15577  01023C  6EE6               	movwf	postinc1,c
 15578  01023E  0E03               	movlw	high _dbuf
 15579  010240  6EE6               	movwf	postinc1,c
 15580                           
 15581                           ;stkvar	_fp @ sp[(-60)+-2]
 15582  010242  0EC2               	movlw	-62
 15583  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 15584  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 15585  010250  ECA7  F0C8         	call	_pad	;wreg free
 15586  010254  EF1D  F089         	goto	l2187
 15587  010258                     l11737:
 15588                           
 15589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15590                           ;stkvar	_g @ sp[(-56)+16]
 15591  010258  0ED8               	movlw	-40
 15592  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 15593  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 15594  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 15595  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 15596  010272  ECF4  F0BF         	call	___fpclassifyf	;wreg free
 15597  010276  5026               	movf	btemp^0,w,c
 15598  010278  1027               	iorwf	(btemp+1)^0,w,c
 15599  01027A  A4D8               	btfss	status,2,c
 15600  01027C  D056               	goto	l11755
 15601  01027E  0EBF               	movlw	191
 15602  010280  6E30               	movwf	(btemp+10)^0,c
 15603  010282  0EFF               	movlw	255
 15604  010284  6E31               	movwf	(btemp+11)^0,c
 15605                           
 15606                           ;stkvar	_c @ sp[(-56)+-7]
 15607  010286  0EC1               	movlw	-63
 15608  010288  50E3               	movf	plusw1,w,c
 15609  01028A  6E2E               	movwf	(btemp+8)^0,c
 15610  01028C  6A2F               	clrf	(btemp+9)^0,c
 15611  01028E  5030               	movf	(btemp+10)^0,w,c
 15612  010290  262E               	addwf	(btemp+8)^0,f,c
 15613  010292  5031               	movf	(btemp+11)^0,w,c
 15614  010294  222F               	addwfc	(btemp+9)^0,f,c
 15615  010296  502F               	movf	(btemp+9)^0,w,c
 15616  010298  E106               	bnz	u10880
 15617  01029A  0E1A               	movlw	26
 15618  01029C  5C2E               	subwf	(btemp+8)^0,w,c
 15619  01029E  B0D8               	btfsc	status,0,c
 15620  0102A0  D002               	goto	u10880
 15621  0102A2  0E01               	movlw	1
 15622  0102A4  D001               	goto	u10890
 15623  0102A6                     u10880:
 15624  0102A6  0E00               	movlw	0
 15625  0102A8                     u10890:
 15626  0102A8  6E30               	movwf	(btemp+10)^0,c
 15627  0102AA  6A31               	clrf	(btemp+11)^0,c
 15628                           
 15629                           ;stkvar	_efgtoa$5414 @ sp[(-56)+6]
 15630  0102AC  0ECE               	movlw	-50
 15631  0102AE  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15632  0102B4  0ECF               	movlw	-49
 15633  0102B6  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15634                           
 15635                           ;stkvar	_efgtoa$5414 @ sp[(-56)+6]
 15636  0102BC  0ECE               	movlw	-50
 15637  0102BE  006F FF8C  F026    	movff	plusw1,btemp
 15638  0102C4  0ECF               	movlw	-49
 15639  0102C6  50E3               	movf	plusw1,w,c
 15640  0102C8  1026               	iorwf	btemp^0,w,c
 15641  0102CA  B4D8               	btfsc	status,2,c
 15642  0102CC  D017               	goto	l11747
 15643                           
 15644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 15645  0102CE  0EDA               	movlw	low STR_70
 15646  0102D0  6EE6               	movwf	postinc1,c
 15647  0102D2  0EFF               	movlw	high STR_70
 15648  0102D4  6EE6               	movwf	postinc1,c
 15649                           
 15650                           ;stkvar	_n @ sp[(-58)+32]
 15651  0102D6  0EAE               	movlw	low _dbuf
 15652  0102D8  6E30               	movwf	(btemp+10)^0,c
 15653  0102DA  0E03               	movlw	high _dbuf
 15654  0102DC  6E31               	movwf	(btemp+11)^0,c
 15655  0102DE  0EE6               	movlw	-26
 15656  0102E0  50E3               	movf	plusw1,w,c
 15657  0102E2  2630               	addwf	(btemp+10)^0,f,c
 15658  0102E4  0EE7               	movlw	-25
 15659  0102E6  50E3               	movf	plusw1,w,c
 15660  0102E8  2231               	addwfc	(btemp+11)^0,f,c
 15661  0102EA  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 15662  0102F0  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 15663  0102F6  EC19  F0CD         	call	_strcpy	;wreg free
 15664                           
 15665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 15666  0102FA  D78D               	goto	l11731
 15667  0102FC                     l11747:
 15668                           
 15669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 15670  0102FC  0EE2               	movlw	low STR_71
 15671  0102FE  6EE6               	movwf	postinc1,c
 15672  010300  0EFF               	movlw	high STR_71
 15673  010302  6EE6               	movwf	postinc1,c
 15674                           
 15675                           ;stkvar	_n @ sp[(-58)+32]
 15676  010304  0EAE               	movlw	low _dbuf
 15677  010306  6E30               	movwf	(btemp+10)^0,c
 15678  010308  0E03               	movlw	high _dbuf
 15679  01030A  6E31               	movwf	(btemp+11)^0,c
 15680  01030C  0EE6               	movlw	-26
 15681  01030E  50E3               	movf	plusw1,w,c
 15682  010310  2630               	addwf	(btemp+10)^0,f,c
 15683  010312  0EE7               	movlw	-25
 15684  010314  50E3               	movf	plusw1,w,c
 15685  010316  2231               	addwfc	(btemp+11)^0,f,c
 15686  010318  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 15687  01031E  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 15688  010324  EC19  F0CD         	call	_strcpy	;wreg free
 15689  010328  D776               	goto	l11731
 15690  01032A                     l11755:
 15691                           
 15692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 15693  01032A  0E00               	movlw	0
 15694  01032C  6E2E               	movwf	(btemp+8)^0,c
 15695  01032E  0E00               	movlw	0
 15696  010330  6E2F               	movwf	(btemp+9)^0,c
 15697  010332  0E80               	movlw	128
 15698  010334  6E30               	movwf	(btemp+10)^0,c
 15699  010336  0E3F               	movlw	63
 15700  010338  6E31               	movwf	(btemp+11)^0,c
 15701                           
 15702                           ;stkvar	_u @ sp[(-56)+12]
 15703  01033A  0ED4               	movlw	-44
 15704  01033C  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 15705  010342  0ED5               	movlw	-43
 15706  010344  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 15707  01034A  0ED6               	movlw	-42
 15708  01034C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15709  010352  0ED7               	movlw	-41
 15710  010354  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15711                           
 15712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 15713                           ;stkvar	_e @ sp[(-56)+34]
 15714  01035A  0EEA               	movlw	-22
 15715  01035C  6AE3               	clrf	plusw1,c
 15716  01035E  0EEB               	movlw	-21
 15717  010360  6AE3               	clrf	plusw1,c
 15718                           
 15719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 15720  010362  0E00               	movlw	0
 15721  010364  6EE6               	movwf	postinc1,c
 15722  010366  0E00               	movlw	0
 15723  010368  6EE6               	movwf	postinc1,c
 15724  01036A  0E00               	movlw	0
 15725  01036C  6EE6               	movwf	postinc1,c
 15726  01036E  0E00               	movlw	0
 15727  010370  6EE6               	movwf	postinc1,c
 15728                           
 15729                           ;stkvar	_g @ sp[(-60)+16]
 15730  010372  0ED4               	movlw	-44
 15731  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 15732  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 15733  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 15734  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 15735  01038C  ECE6  F0CD         	call	___fleq	;wreg free
 15736  010390  A026               	btfss	btemp& (0+255),0,c
 15737  010392  D039               	goto	l11767
 15738  010394  D0BC               	goto	u10930
 15739  010396                     l11763:
 15740                           
 15741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 15742  010396  0E00               	movlw	0
 15743  010398  6EE6               	movwf	postinc1,c
 15744  01039A  0E00               	movlw	0
 15745  01039C  6EE6               	movwf	postinc1,c
 15746  01039E  0E20               	movlw	32
 15747  0103A0  6EE6               	movwf	postinc1,c
 15748  0103A2  0E41               	movlw	65
 15749  0103A4  6EE6               	movwf	postinc1,c
 15750                           
 15751                           ;stkvar	_u @ sp[(-60)+12]
 15752  0103A6  0ED0               	movlw	-48
 15753  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15754  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15755  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 15756  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 15757  0103C0  EC41  F099         	call	___flmul	;wreg free
 15758                           
 15759                           ;stkvar	_u @ sp[(-56)+12]
 15760  0103C4  0ED4               	movlw	-44
 15761  0103C6  0060  F09B  FFE3   	movff	btemp,plusw1
 15762  0103CC  0ED5               	movlw	-43
 15763  0103CE  0060  F09F  FFE3   	movff	btemp+1,plusw1
 15764  0103D4  0ED6               	movlw	-42
 15765  0103D6  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 15766  0103DC  0ED7               	movlw	-41
 15767  0103DE  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 15768                           
 15769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 15770                           ;stkvar	_e @ sp[(-56)+34]
 15771  0103E4  0EEA               	movlw	-22
 15772  0103E6  50E3               	movf	plusw1,w,c
 15773  0103E8  0F01               	addlw	1
 15774  0103EA  6E26               	movwf	btemp^0,c
 15775  0103EC  0EEA               	movlw	-22
 15776  0103EE  0060  F09B  FFE3   	movff	btemp,plusw1
 15777  0103F4  6A26               	clrf	btemp^0,c
 15778  0103F6  0EEB               	movlw	-21
 15779  0103F8  50E3               	movf	plusw1,w,c
 15780  0103FA  2026               	addwfc	btemp^0,w,c
 15781  0103FC  6E26               	movwf	btemp^0,c
 15782  0103FE  0EEB               	movlw	-21
 15783  010400  0060  F09B  FFE3   	movff	btemp,plusw1
 15784  010406                     l11767:
 15785                           
 15786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 15787  010406  0E00               	movlw	0
 15788  010408  6EE6               	movwf	postinc1,c
 15789  01040A  0E00               	movlw	0
 15790  01040C  6EE6               	movwf	postinc1,c
 15791  01040E  0E20               	movlw	32
 15792  010410  6EE6               	movwf	postinc1,c
 15793  010412  0E41               	movlw	65
 15794  010414  6EE6               	movwf	postinc1,c
 15795                           
 15796                           ;stkvar	_u @ sp[(-60)+12]
 15797  010416  0ED0               	movlw	-48
 15798  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 15799  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 15800  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 15801  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 15802  010430  EC41  F099         	call	___flmul	;wreg free
 15803  010434  0060  F09B  FFE6   	movff	btemp,postinc1
 15804  01043A  0060  F09F  FFE6   	movff	btemp+1,postinc1
 15805  010440  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 15806  010446  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 15807                           
 15808                           ;stkvar	_g @ sp[(-60)+16]
 15809  01044C  0ED4               	movlw	-44
 15810  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 15811  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 15812  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 15813  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 15814  010466  ECAA  F0C3         	call	___flge	;wreg free
 15815  01046A  A026               	btfss	btemp& (0+255),0,c
 15816  01046C  D032               	goto	l11773
 15817  01046E  D793               	goto	l11763
 15818  010470                     l11769:
 15819                           
 15820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 15821  010470  0E00               	movlw	0
 15822  010472  6EE6               	movwf	postinc1,c
 15823  010474  0E00               	movlw	0
 15824  010476  6EE6               	movwf	postinc1,c
 15825  010478  0E20               	movlw	32
 15826  01047A  6EE6               	movwf	postinc1,c
 15827  01047C  0E41               	movlw	65
 15828  01047E  6EE6               	movwf	postinc1,c
 15829                           
 15830                           ;stkvar	_u @ sp[(-60)+12]
 15831  010480  0ED0               	movlw	-48
 15832  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 15833  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 15834  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 15835  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 15836  01049A  ECD5  F0A4         	call	___fldiv	;wreg free
 15837                           
 15838                           ;stkvar	_u @ sp[(-56)+12]
 15839  01049E  0ED4               	movlw	-44
 15840  0104A0  0060  F09B  FFE3   	movff	btemp,plusw1
 15841  0104A6  0ED5               	movlw	-43
 15842  0104A8  0060  F09F  FFE3   	movff	btemp+1,plusw1
 15843  0104AE  0ED6               	movlw	-42
 15844  0104B0  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 15845  0104B6  0ED7               	movlw	-41
 15846  0104B8  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 15847                           
 15848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 15849                           ;stkvar	_e @ sp[(-56)+34]
 15850  0104BE  50E1               	movf	fsr1l,w,c
 15851  0104C0  0FEA               	addlw	-22
 15852  0104C2  6ED9               	movwf	fsr2l,c
 15853  0104C4  50E2               	movf	fsr1h,w,c
 15854  0104C6  6EDA               	movwf	fsr2h,c
 15855  0104C8  0EFF               	movlw	255
 15856  0104CA  22DA               	addwfc	fsr2h,f,c
 15857  0104CC  06DE               	decf	postinc2,f,c
 15858  0104CE  0E00               	movlw	0
 15859  0104D0  5ADD               	subwfb	postdec2,f,c
 15860  0104D2                     l11773:
 15861                           
 15862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 15863                           ;stkvar	_u @ sp[(-56)+12]
 15864  0104D2  0ED4               	movlw	-44
 15865  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15866  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15867  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 15868  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 15869                           
 15870                           ;stkvar	_g @ sp[(-60)+16]
 15871  0104EC  0ED4               	movlw	-44
 15872  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 15873  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 15874  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 15875  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 15876  010506  ECAA  F0C3         	call	___flge	;wreg free
 15877  01050A  A026               	btfss	btemp& (0+255),0,c
 15878  01050C  D7B1               	goto	l11769
 15879  01050E                     u10930:
 15880                           
 15881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 15882                           ;stkvar	_c @ sp[(-56)+-7]
 15883  01050E  0EC1               	movlw	-63
 15884  010510  50E3               	movf	plusw1,w,c
 15885  010512  6EE6               	movwf	postinc1,c
 15886  010514  0E00               	movlw	0
 15887  010516  6EE6               	movwf	postinc1,c
 15888  010518  ECA0  F0D2         	call	_tolower	;wreg free
 15889                           
 15890                           ;stkvar	_mode @ sp[(-56)+54]
 15891  01051C  0EFE               	movlw	-2
 15892  01051E  0060  F09B  FFE3   	movff	btemp,plusw1
 15893                           
 15894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 15895                           ;stkvar	_mode @ sp[(-56)+54]
 15896                           ;stkvar	_nmode @ sp[(-56)+55]
 15897  010524  0EFE               	movlw	-2
 15898  010526  006F FF8C  F026    	movff	plusw1,btemp
 15899  01052C  0EFF               	movlw	-1
 15900  01052E  0060  F09B  FFE3   	movff	btemp,plusw1
 15901                           
 15902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 15903                           ;stkvar	_mode @ sp[(-56)+54]
 15904  010534  0EFE               	movlw	-2
 15905  010536  006F FF8C  F026    	movff	plusw1,btemp
 15906  01053C  0E67               	movlw	103
 15907  01053E  1826               	xorwf	btemp^0,w,c
 15908  010540  A4D8               	btfss	status,2,c
 15909  010542  D025               	goto	l11791
 15910                           
 15911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 15912  010544  500C               	movf	_prec^0,w,c
 15913  010546  100D               	iorwf	(_prec+1)^0,w,c
 15914  010548  A4D8               	btfss	status,2,c
 15915  01054A  D004               	goto	l11785
 15916                           
 15917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 15918  01054C  0E00               	movlw	0
 15919  01054E  6E0D               	movwf	(_prec+1)^0,c
 15920  010550  0E01               	movlw	1
 15921  010552  6E0C               	movwf	_prec^0,c
 15922  010554                     l11785:
 15923                           
 15924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 15925  010554  BE0D               	btfsc	(_prec+1)^0,7,c
 15926  010556  D005               	goto	u10960
 15927  010558  500D               	movf	(_prec+1)^0,w,c
 15928  01055A  E110               	bnz	l11789
 15929  01055C  040C               	decf	_prec^0,w,c
 15930  01055E  B0D8               	btfsc	status,0,c
 15931  010560  D00D               	goto	l11789
 15932  010562                     u10960:
 15933  010562  0E06               	movlw	6
 15934  010564  6E30               	movwf	(btemp+10)^0,c
 15935  010566  0E00               	movlw	0
 15936  010568  6E31               	movwf	(btemp+11)^0,c
 15937                           
 15938                           ;stkvar	_p @ sp[(-56)+40]
 15939  01056A  0EF0               	movlw	-16
 15940  01056C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15941  010572  0EF1               	movlw	-15
 15942  010574  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15943  01057A  D00C               	goto	l11797
 15944  01057C                     l11789:
 15945                           
 15946                           ;stkvar	_p @ sp[(-56)+40]
 15947  01057C  0EF0               	movlw	-16
 15948  01057E  0060  F033  FFE3   	movff	_prec,plusw1
 15949  010584  0EF1               	movlw	-15
 15950  010586  0060  F037  FFE3   	movff	_prec+1,plusw1
 15951  01058C  D003               	goto	l11797
 15952  01058E                     l11791:
 15953                           
 15954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 15955  01058E  AE0D               	btfss	(_prec+1)^0,7,c
 15956  010590  D7F5               	goto	l11789
 15957  010592  D7E7               	goto	u10960
 15958  010594                     l11797:
 15959                           
 15960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 15961                           ;stkvar	_mode @ sp[(-56)+54]
 15962  010594  0EFE               	movlw	-2
 15963  010596  006F FF8C  F026    	movff	plusw1,btemp
 15964  01059C  0E67               	movlw	103
 15965  01059E  1826               	xorwf	btemp^0,w,c
 15966  0105A0  A4D8               	btfss	status,2,c
 15967  0105A2  D02F               	goto	l11807
 15968                           
 15969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 15970                           ;stkvar	_e @ sp[(-56)+34]
 15971  0105A4  0EEB               	movlw	-21
 15972  0105A6  AEE3               	btfss	plusw1,7,c
 15973  0105A8  D00E               	goto	u10990
 15974  0105AA  0EEA               	movlw	-22
 15975  0105AC  006F FF8C  F026    	movff	plusw1,btemp
 15976  0105B2  0EFC               	movlw	252
 15977  0105B4  5E26               	subwf	btemp^0,f,c
 15978  0105B6  0EEB               	movlw	-21
 15979  0105B8  006F FF8C  F026    	movff	plusw1,btemp
 15980  0105BE  0EFF               	movlw	255
 15981  0105C0  5A26               	subwfb	btemp^0,f,c
 15982  0105C2  A0D8               	btfss	status,0,c
 15983  0105C4  D018               	goto	l11805
 15984  0105C6                     u10990:
 15985                           
 15986                           ;stkvar	_e @ sp[(-56)+34]
 15987                           ;stkvar	_p @ sp[(-56)+40]
 15988  0105C6  0EF0               	movlw	-16
 15989  0105C8  50E3               	movf	plusw1,w,c
 15990  0105CA  0FFF               	addlw	255
 15991  0105CC  6E30               	movwf	(btemp+10)^0,c
 15992  0105CE  0EF1               	movlw	-15
 15993  0105D0  006F FF8C  F031    	movff	plusw1,btemp+11
 15994  0105D6  0EFF               	movlw	255
 15995  0105D8  2231               	addwfc	(btemp+11)^0,f,c
 15996  0105DA  0EEA               	movlw	-22
 15997  0105DC  50E3               	movf	plusw1,w,c
 15998  0105DE  5C30               	subwf	(btemp+10)^0,w,c
 15999  0105E0  5031               	movf	(btemp+11)^0,w,c
 16000  0105E2  0A80               	xorlw	128
 16001  0105E4  6E26               	movwf	btemp^0,c
 16002  0105E6  0EEB               	movlw	-21
 16003  0105E8  50E3               	movf	plusw1,w,c
 16004  0105EA  0A80               	xorlw	128
 16005  0105EC  5826               	subwfb	btemp^0,w,c
 16006  0105EE  A0D8               	btfss	status,0,c
 16007  0105F0  D002               	goto	l11805
 16008                           
 16009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 16010  0105F2  0E66               	movlw	102
 16011  0105F4  D001               	goto	L17
 16012  0105F6                     l11805:
 16013                           
 16014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 16015  0105F6  0E65               	movlw	101
 16016  0105F8                     L17:
 16017  0105F8  6E31               	movwf	(btemp+11)^0,c
 16018                           
 16019                           ;stkvar	_nmode @ sp[(-56)+55]
 16020  0105FA  0EFF               	movlw	-1
 16021  0105FC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16022  010602                     l11807:
 16023                           
 16024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 16025                           ;stkvar	_p @ sp[(-56)+40]
 16026                           ;stkvar	_m @ sp[(-56)+48]
 16027  010602  0EF0               	movlw	-16
 16028  010604  006F FF8C  F026    	movff	plusw1,btemp
 16029  01060A  0EF8               	movlw	-8
 16030  01060C  0060  F09B  FFE3   	movff	btemp,plusw1
 16031  010612  0EF1               	movlw	-15
 16032  010614  006F FF8C  F026    	movff	plusw1,btemp
 16033  01061A  0EF9               	movlw	-7
 16034  01061C  0060  F09B  FFE3   	movff	btemp,plusw1
 16035                           
 16036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 16037                           ;stkvar	_mode @ sp[(-56)+54]
 16038  010622  0EFE               	movlw	-2
 16039  010624  006F FF8C  F026    	movff	plusw1,btemp
 16040  01062A  0E67               	movlw	103
 16041  01062C  1826               	xorwf	btemp^0,w,c
 16042  01062E  A4D8               	btfss	status,2,c
 16043  010630  D00B               	goto	u11030
 16044                           
 16045                           ;stkvar	_nmode @ sp[(-56)+55]
 16046  010632  0EFF               	movlw	-1
 16047  010634  006F FF8C  F026    	movff	plusw1,btemp
 16048  01063A  0E66               	movlw	102
 16049  01063C  1826               	xorwf	btemp^0,w,c
 16050  01063E  A4D8               	btfss	status,2,c
 16051  010640  D014               	goto	l2216
 16052                           
 16053                           ;stkvar	_e @ sp[(-56)+34]
 16054  010642  0EEB               	movlw	-21
 16055  010644  AEE3               	btfss	plusw1,7,c
 16056  010646  D011               	goto	l2216
 16057  010648                     u11030:
 16058                           
 16059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 16060                           ;stkvar	_m @ sp[(-56)+48]
 16061  010648  0EF8               	movlw	-8
 16062  01064A  50E3               	movf	plusw1,w,c
 16063  01064C  0F01               	addlw	1
 16064  01064E  6E26               	movwf	btemp^0,c
 16065  010650  0EF8               	movlw	-8
 16066  010652  0060  F09B  FFE3   	movff	btemp,plusw1
 16067  010658  6A26               	clrf	btemp^0,c
 16068  01065A  0EF9               	movlw	-7
 16069  01065C  50E3               	movf	plusw1,w,c
 16070  01065E  2026               	addwfc	btemp^0,w,c
 16071  010660  6E26               	movwf	btemp^0,c
 16072  010662  0EF9               	movlw	-7
 16073  010664  0060  F09B  FFE3   	movff	btemp,plusw1
 16074  01066A                     l2216:
 16075                           
 16076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16077                           ;stkvar	_nmode @ sp[(-56)+55]
 16078  01066A  0EFF               	movlw	-1
 16079  01066C  006F FF8C  F026    	movff	plusw1,btemp
 16080  010672  0E66               	movlw	102
 16081  010674  1826               	xorwf	btemp^0,w,c
 16082  010676  A4D8               	btfss	status,2,c
 16083  010678  D03B               	goto	l11827
 16084                           
 16085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16086                           ;stkvar	_e @ sp[(-56)+34]
 16087  01067A  0EEB               	movlw	-21
 16088  01067C  AEE3               	btfss	plusw1,7,c
 16089  01067E  D01C               	goto	l11823
 16090                           
 16091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16092  010680  0E00               	movlw	0
 16093  010682  6E2E               	movwf	(btemp+8)^0,c
 16094  010684  0E00               	movlw	0
 16095  010686  6E2F               	movwf	(btemp+9)^0,c
 16096  010688  0E80               	movlw	128
 16097  01068A  6E30               	movwf	(btemp+10)^0,c
 16098  01068C  0E3F               	movlw	63
 16099  01068E  6E31               	movwf	(btemp+11)^0,c
 16100                           
 16101                           ;stkvar	_u @ sp[(-56)+12]
 16102  010690  0ED4               	movlw	-44
 16103  010692  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16104  010698  0ED5               	movlw	-43
 16105  01069A  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16106  0106A0  0ED6               	movlw	-42
 16107  0106A2  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16108  0106A8  0ED7               	movlw	-41
 16109  0106AA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16110                           
 16111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16112                           ;stkvar	_e @ sp[(-56)+34]
 16113  0106B0  0EEA               	movlw	-22
 16114  0106B2  6AE3               	clrf	plusw1,c
 16115  0106B4  0EEB               	movlw	-21
 16116  0106B6  6AE3               	clrf	plusw1,c
 16117  0106B8                     l11823:
 16118                           
 16119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16120                           ;stkvar	_mode @ sp[(-56)+54]
 16121  0106B8  0EFE               	movlw	-2
 16122  0106BA  006F FF8C  F026    	movff	plusw1,btemp
 16123  0106C0  0E67               	movlw	103
 16124  0106C2  1826               	xorwf	btemp^0,w,c
 16125  0106C4  B4D8               	btfsc	status,2,c
 16126  0106C6  D014               	goto	l11827
 16127                           
 16128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16129                           ;stkvar	_e @ sp[(-56)+34]
 16130                           ;stkvar	_m @ sp[(-56)+48]
 16131  0106C8  0EF8               	movlw	-8
 16132  0106CA  50E3               	movf	plusw1,w,c
 16133  0106CC  6E26               	movwf	btemp^0,c
 16134  0106CE  0EEA               	movlw	-22
 16135  0106D0  50E3               	movf	plusw1,w,c
 16136  0106D2  2626               	addwf	btemp^0,f,c
 16137  0106D4  0EF8               	movlw	-8
 16138  0106D6  0060  F09B  FFE3   	movff	btemp,plusw1
 16139  0106DC  0EF9               	movlw	-7
 16140  0106DE  50E3               	movf	plusw1,w,c
 16141  0106E0  6E26               	movwf	btemp^0,c
 16142  0106E2  0EEB               	movlw	-21
 16143  0106E4  50E3               	movf	plusw1,w,c
 16144  0106E6  2226               	addwfc	btemp^0,f,c
 16145  0106E8  0EF9               	movlw	-7
 16146  0106EA  0060  F09B  FFE3   	movff	btemp,plusw1
 16147  0106F0                     l11827:
 16148                           
 16149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16150                           ;stkvar	_i @ sp[(-56)+36]
 16151  0106F0  0EEC               	movlw	-20
 16152  0106F2  6AE3               	clrf	plusw1,c
 16153  0106F4  0EED               	movlw	-19
 16154  0106F6  6AE3               	clrf	plusw1,c
 16155                           
 16156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16157                           ;stkvar	_g @ sp[(-56)+16]
 16158  0106F8  0ED8               	movlw	-40
 16159  0106FA  006F FF8C  F02E    	movff	plusw1,btemp+8
 16160  010700  0ED9               	movlw	-39
 16161  010702  006F FF8C  F02F    	movff	plusw1,btemp+9
 16162  010708  0EDA               	movlw	-38
 16163  01070A  006F FF8C  F030    	movff	plusw1,btemp+10
 16164  010710  0EDB               	movlw	-37
 16165  010712  006F FF8C  F031    	movff	plusw1,btemp+11
 16166                           
 16167                           ;stkvar	_h @ sp[(-56)+24]
 16168  010718  0EE0               	movlw	-32
 16169  01071A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16170  010720  0EE1               	movlw	-31
 16171  010722  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16172  010728  0EE2               	movlw	-30
 16173  01072A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16174  010730  0EE3               	movlw	-29
 16175  010732  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16176                           
 16177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16178                           ;stkvar	_u @ sp[(-56)+12]
 16179  010738  0ED4               	movlw	-44
 16180  01073A  006F FF8C  F02E    	movff	plusw1,btemp+8
 16181  010740  0ED5               	movlw	-43
 16182  010742  006F FF8C  F02F    	movff	plusw1,btemp+9
 16183  010748  0ED6               	movlw	-42
 16184  01074A  006F FF8C  F030    	movff	plusw1,btemp+10
 16185  010750  0ED7               	movlw	-41
 16186  010752  006F FF8C  F031    	movff	plusw1,btemp+11
 16187                           
 16188                           ;stkvar	_ou @ sp[(-56)+28]
 16189  010758  0EE4               	movlw	-28
 16190  01075A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16191  010760  0EE5               	movlw	-27
 16192  010762  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16193  010768  0EE6               	movlw	-26
 16194  01076A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16195  010770  0EE7               	movlw	-25
 16196  010772  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16197                           
 16198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16199  010778  D0D6               	goto	l11843
 16200  01077A                     l11833:
 16201                           
 16202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16203                           ;stkvar	_u @ sp[(-56)+12]
 16204  01077A  0ED4               	movlw	-44
 16205  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16206  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16207  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16208  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16209                           
 16210                           ;stkvar	_h @ sp[(-60)+24]
 16211  010794  0EDC               	movlw	-36
 16212  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16213  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16214  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16215  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16216  0107AE  ECD5  F0A4         	call	___fldiv	;wreg free
 16217  0107B2  0060  F09B  FFE6   	movff	btemp,postinc1
 16218  0107B8  0060  F09F  FFE6   	movff	btemp+1,postinc1
 16219  0107BE  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 16220  0107C4  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 16221  0107CA  ECD6  F0AF         	call	_floorf	;wreg free
 16222                           
 16223                           ;stkvar	_l @ sp[(-56)+20]
 16224  0107CE  0EDC               	movlw	-36
 16225  0107D0  0060  F09B  FFE3   	movff	btemp,plusw1
 16226  0107D6  0EDD               	movlw	-35
 16227  0107D8  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16228  0107DE  0EDE               	movlw	-34
 16229  0107E0  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16230  0107E6  0EDF               	movlw	-33
 16231  0107E8  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16232                           
 16233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16234                           ;stkvar	_l @ sp[(-56)+20]
 16235  0107EE  0EDC               	movlw	-36
 16236  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16237  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16238  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16239  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16240  010808  EC39  F0C2         	call	___fltol	;wreg free
 16241  01080C  0060  F098  F030   	movff	btemp,btemp+10
 16242  010812  0060  F09C  F031   	movff	btemp+1,btemp+11
 16243                           
 16244                           ;stkvar	_d @ sp[(-56)+44]
 16245  010818  0EF4               	movlw	-12
 16246  01081A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16247  010820  0EF5               	movlw	-11
 16248  010822  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16249                           
 16250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16251                           ;stkvar	_u @ sp[(-56)+12]
 16252  010828  0ED4               	movlw	-44
 16253  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16254  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16255  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16256  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16257                           
 16258                           ;stkvar	_l @ sp[(-60)+20]
 16259  010842  0ED8               	movlw	-40
 16260  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16261  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16262  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16263  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16264  01085C  EC41  F099         	call	___flmul	;wreg free
 16265  010860  0060  F09B  FFE6   	movff	btemp,postinc1
 16266  010866  0060  F09F  FFE6   	movff	btemp+1,postinc1
 16267  01086C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 16268  010872  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 16269                           
 16270                           ;stkvar	_h @ sp[(-60)+24]
 16271  010878  0EDC               	movlw	-36
 16272  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16273  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16274  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16275  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16276  010892  EC1F  F0D6         	call	___flsub	;wreg free
 16277                           
 16278                           ;stkvar	_h @ sp[(-56)+24]
 16279  010896  0EE0               	movlw	-32
 16280  010898  0060  F09B  FFE3   	movff	btemp,plusw1
 16281  01089E  0EE1               	movlw	-31
 16282  0108A0  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16283  0108A6  0EE2               	movlw	-30
 16284  0108A8  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16285  0108AE  0EE3               	movlw	-29
 16286  0108B0  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16287                           
 16288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16289  0108B6  0E00               	movlw	0
 16290  0108B8  6EE6               	movwf	postinc1,c
 16291  0108BA  0E00               	movlw	0
 16292  0108BC  6EE6               	movwf	postinc1,c
 16293  0108BE  0E20               	movlw	32
 16294  0108C0  6EE6               	movwf	postinc1,c
 16295  0108C2  0E41               	movlw	65
 16296  0108C4  6EE6               	movwf	postinc1,c
 16297                           
 16298                           ;stkvar	_u @ sp[(-60)+12]
 16299  0108C6  0ED0               	movlw	-48
 16300  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16301  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16302  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16303  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16304  0108E0  ECD5  F0A4         	call	___fldiv	;wreg free
 16305                           
 16306                           ;stkvar	_u @ sp[(-56)+12]
 16307  0108E4  0ED4               	movlw	-44
 16308  0108E6  0060  F09B  FFE3   	movff	btemp,plusw1
 16309  0108EC  0ED5               	movlw	-43
 16310  0108EE  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16311  0108F4  0ED6               	movlw	-42
 16312  0108F6  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16313  0108FC  0ED7               	movlw	-41
 16314  0108FE  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16315                           
 16316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16317                           ;stkvar	_i @ sp[(-56)+36]
 16318  010904  0EEC               	movlw	-20
 16319  010906  50E3               	movf	plusw1,w,c
 16320  010908  0F01               	addlw	1
 16321  01090A  6E26               	movwf	btemp^0,c
 16322  01090C  0EEC               	movlw	-20
 16323  01090E  0060  F09B  FFE3   	movff	btemp,plusw1
 16324  010914  6A26               	clrf	btemp^0,c
 16325  010916  0EED               	movlw	-19
 16326  010918  50E3               	movf	plusw1,w,c
 16327  01091A  2026               	addwfc	btemp^0,w,c
 16328  01091C  6E26               	movwf	btemp^0,c
 16329  01091E  0EED               	movlw	-19
 16330  010920  0060  F09B  FFE3   	movff	btemp,plusw1
 16331  010926                     l11843:
 16332                           
 16333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16334                           ;stkvar	_m @ sp[(-56)+48]
 16335                           ;stkvar	_i @ sp[(-56)+36]
 16336  010926  50E1               	movf	fsr1l,w,c
 16337  010928  0FEC               	addlw	-20
 16338  01092A  6ED9               	movwf	fsr2l,c
 16339  01092C  50E2               	movf	fsr1h,w,c
 16340  01092E  6EDA               	movwf	fsr2h,c
 16341  010930  0EFF               	movlw	255
 16342  010932  22DA               	addwfc	fsr2h,f,c
 16343  010934  0EF8               	movlw	-8
 16344  010936  50E3               	movf	plusw1,w,c
 16345  010938  5CDE               	subwf	postinc2,w,c
 16346  01093A  50DE               	movf	postinc2,w,c
 16347  01093C  0A80               	xorlw	128
 16348  01093E  6E26               	movwf	btemp^0,c
 16349  010940  0EF9               	movlw	-7
 16350  010942  50E3               	movf	plusw1,w,c
 16351  010944  0A80               	xorlw	128
 16352  010946  5826               	subwfb	btemp^0,w,c
 16353  010948  A0D8               	btfss	status,0,c
 16354  01094A  D717               	goto	l11833
 16355                           
 16356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16357  01094C  0E00               	movlw	0
 16358  01094E  6EE6               	movwf	postinc1,c
 16359  010950  0E00               	movlw	0
 16360  010952  6EE6               	movwf	postinc1,c
 16361  010954  0EA0               	movlw	160
 16362  010956  6EE6               	movwf	postinc1,c
 16363  010958  0E40               	movlw	64
 16364  01095A  6EE6               	movwf	postinc1,c
 16365                           
 16366                           ;stkvar	_u @ sp[(-60)+12]
 16367  01095C  0ED0               	movlw	-48
 16368  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16369  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16370  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16371  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16372  010976  EC41  F099         	call	___flmul	;wreg free
 16373                           
 16374                           ;stkvar	_l @ sp[(-56)+20]
 16375  01097A  0EDC               	movlw	-36
 16376  01097C  0060  F09B  FFE3   	movff	btemp,plusw1
 16377  010982  0EDD               	movlw	-35
 16378  010984  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16379  01098A  0EDE               	movlw	-34
 16380  01098C  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16381  010992  0EDF               	movlw	-33
 16382  010994  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16383                           
 16384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 16385                           ;stkvar	_l @ sp[(-56)+20]
 16386  01099A  0EDC               	movlw	-36
 16387  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 16388  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16389  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16390  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16391                           
 16392                           ;stkvar	_h @ sp[(-60)+24]
 16393  0109B4  0EDC               	movlw	-36
 16394  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 16395  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 16396  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 16397  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16398  0109CE  ECAA  F0C3         	call	___flge	;wreg free
 16399  0109D2  A026               	btfss	btemp& (0+255),0,c
 16400  0109D4  D021               	goto	u11100
 16401                           
 16402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 16403                           ;stkvar	_l @ sp[(-56)+20]
 16404                           
 16405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 16406                           
 16407                           ;stkvar	_l @ sp[(-56)+20]
 16408                           
 16409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 16410  0109D6  0EDC               	movlw	-36
 16411  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16412  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 16413  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 16414  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 16415                           
 16416                           ;stkvar	_h @ sp[(-60)+24]
 16417  0109F0  0EDC               	movlw	-36
 16418  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16419  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 16420  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 16421  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 16422  010A0A  ECE6  F0CD         	call	___fleq	;wreg free
 16423  010A0E  A026               	btfss	btemp& (0+255),0,c
 16424  010A10  D01B               	goto	l11857
 16425                           
 16426                           ;stkvar	_d @ sp[(-56)+44]
 16427  010A12  0EF4               	movlw	-12
 16428  010A14  B0E3               	btfsc	plusw1,0,c
 16429  010A16  D018               	goto	l11857
 16430  010A18                     u11100:
 16431                           
 16432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 16433  010A18  0E00               	movlw	0
 16434  010A1A  6E2E               	movwf	(btemp+8)^0,c
 16435  010A1C  0E00               	movlw	0
 16436  010A1E  6E2F               	movwf	(btemp+9)^0,c
 16437  010A20  0E00               	movlw	0
 16438  010A22  6E30               	movwf	(btemp+10)^0,c
 16439  010A24  0E00               	movlw	0
 16440  010A26  6E31               	movwf	(btemp+11)^0,c
 16441                           
 16442                           ;stkvar	_l @ sp[(-56)+20]
 16443  010A28  0EDC               	movlw	-36
 16444  010A2A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16445  010A30  0EDD               	movlw	-35
 16446  010A32  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16447  010A38  0EDE               	movlw	-34
 16448  010A3A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16449  010A40  0EDF               	movlw	-33
 16450  010A42  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16451  010A48                     l11857:
 16452                           
 16453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 16454                           ;stkvar	_l @ sp[(-56)+20]
 16455  010A48  0EDC               	movlw	-36
 16456  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 16457  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 16458  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 16459  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16460                           
 16461                           ;stkvar	_g @ sp[(-60)+16]
 16462  010A62  0ED4               	movlw	-44
 16463  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 16464  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 16465  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 16466  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 16467  010A7C  EC56  F09D         	call	___fladd	;wreg free
 16468                           
 16469                           ;stkvar	_h @ sp[(-56)+24]
 16470  010A80  0EE0               	movlw	-32
 16471  010A82  0060  F09B  FFE3   	movff	btemp,plusw1
 16472  010A88  0EE1               	movlw	-31
 16473  010A8A  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16474  010A90  0EE2               	movlw	-30
 16475  010A92  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16476  010A98  0EE3               	movlw	-29
 16477  010A9A  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16478                           
 16479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 16480                           ;stkvar	_ou @ sp[(-56)+28]
 16481  010AA0  0EE4               	movlw	-28
 16482  010AA2  006F FF8C  F02E    	movff	plusw1,btemp+8
 16483  010AA8  0EE5               	movlw	-27
 16484  010AAA  006F FF8C  F02F    	movff	plusw1,btemp+9
 16485  010AB0  0EE6               	movlw	-26
 16486  010AB2  006F FF8C  F030    	movff	plusw1,btemp+10
 16487  010AB8  0EE7               	movlw	-25
 16488  010ABA  006F FF8C  F031    	movff	plusw1,btemp+11
 16489                           
 16490                           ;stkvar	_u @ sp[(-56)+12]
 16491  010AC0  0ED4               	movlw	-44
 16492  010AC2  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16493  010AC8  0ED5               	movlw	-43
 16494  010ACA  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16495  010AD0  0ED6               	movlw	-42
 16496  010AD2  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16497  010AD8  0ED7               	movlw	-41
 16498  010ADA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16499                           
 16500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 16501                           ;stkvar	_nmode @ sp[(-56)+55]
 16502  010AE0  0EFF               	movlw	-1
 16503  010AE2  006F FF8C  F026    	movff	plusw1,btemp
 16504  010AE8  0E65               	movlw	101
 16505  010AEA  1826               	xorwf	btemp^0,w,c
 16506  010AEC  B4D8               	btfsc	status,2,c
 16507  010AEE  D011               	goto	l11865
 16508                           
 16509                           ;stkvar	_e @ sp[(-56)+34]
 16510                           ;stkvar	_ne @ sp[(-56)+46]
 16511  010AF0  0EEA               	movlw	-22
 16512  010AF2  006F FF8C  F026    	movff	plusw1,btemp
 16513  010AF8  0EF6               	movlw	-10
 16514  010AFA  0060  F09B  FFE3   	movff	btemp,plusw1
 16515  010B00  0EEB               	movlw	-21
 16516  010B02  006F FF8C  F026    	movff	plusw1,btemp
 16517  010B08  0EF7               	movlw	-9
 16518  010B0A  0060  F09B  FFE3   	movff	btemp,plusw1
 16519  010B10  D004               	goto	l2231
 16520  010B12                     l11865:
 16521                           
 16522                           ;stkvar	_ne @ sp[(-56)+46]
 16523  010B12  0EF6               	movlw	-10
 16524  010B14  6AE3               	clrf	plusw1,c
 16525  010B16  0EF7               	movlw	-9
 16526  010B18  6AE3               	clrf	plusw1,c
 16527  010B1A                     l2231:
 16528                           
 16529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 16530                           ;stkvar	_pp @ sp[(-56)+50]
 16531  010B1A  0EFA               	movlw	-6
 16532  010B1C  6AE3               	clrf	plusw1,c
 16533  010B1E  0EFB               	movlw	-5
 16534  010B20  6AE3               	clrf	plusw1,c
 16535                           
 16536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 16537                           ;stkvar	_t @ sp[(-56)+52]
 16538  010B22  0EFC               	movlw	-4
 16539  010B24  6AE3               	clrf	plusw1,c
 16540  010B26  0EFD               	movlw	-3
 16541  010B28  6AE3               	clrf	plusw1,c
 16542                           
 16543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 16544                           ;stkvar	_i @ sp[(-56)+36]
 16545  010B2A  0EEC               	movlw	-20
 16546  010B2C  6AE3               	clrf	plusw1,c
 16547  010B2E  0EED               	movlw	-19
 16548  010B30  6AE3               	clrf	plusw1,c
 16549                           
 16550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16551  010B32  D1B7               	goto	l11917
 16552  010B34                     l11867:
 16553                           
 16554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 16555                           ;stkvar	_u @ sp[(-56)+12]
 16556  010B34  0ED4               	movlw	-44
 16557  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 16558  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16559  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 16560  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 16561                           
 16562                           ;stkvar	_h @ sp[(-60)+24]
 16563  010B4E  0EDC               	movlw	-36
 16564  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 16565  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 16566  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16567  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 16568  010B68  ECD5  F0A4         	call	___fldiv	;wreg free
 16569  010B6C  0060  F09B  FFE6   	movff	btemp,postinc1
 16570  010B72  0060  F09F  FFE6   	movff	btemp+1,postinc1
 16571  010B78  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 16572  010B7E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 16573  010B84  ECD6  F0AF         	call	_floorf	;wreg free
 16574                           
 16575                           ;stkvar	_l @ sp[(-56)+20]
 16576  010B88  0EDC               	movlw	-36
 16577  010B8A  0060  F09B  FFE3   	movff	btemp,plusw1
 16578  010B90  0EDD               	movlw	-35
 16579  010B92  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16580  010B98  0EDE               	movlw	-34
 16581  010B9A  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16582  010BA0  0EDF               	movlw	-33
 16583  010BA2  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16584                           
 16585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 16586                           ;stkvar	_l @ sp[(-56)+20]
 16587  010BA8  0EDC               	movlw	-36
 16588  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 16589  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 16590  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 16591  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 16592  010BC2  EC39  F0C2         	call	___fltol	;wreg free
 16593  010BC6  0060  F098  F030   	movff	btemp,btemp+10
 16594  010BCC  0060  F09C  F031   	movff	btemp+1,btemp+11
 16595                           
 16596                           ;stkvar	_d @ sp[(-56)+44]
 16597  010BD2  0EF4               	movlw	-12
 16598  010BD4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16599  010BDA  0EF5               	movlw	-11
 16600  010BDC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16601                           
 16602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16603  010BE2  B80E               	btfsc	_flags^0,4,c
 16604  010BE4  D026               	goto	l11881
 16605                           
 16606                           ;stkvar	_d @ sp[(-56)+44]
 16607  010BE6  0EF4               	movlw	-12
 16608  010BE8  006F FF8C  F026    	movff	plusw1,btemp
 16609  010BEE  0EF5               	movlw	-11
 16610  010BF0  50E3               	movf	plusw1,w,c
 16611  010BF2  1026               	iorwf	btemp^0,w,c
 16612  010BF4  A4D8               	btfss	status,2,c
 16613  010BF6  D01D               	goto	l11881
 16614                           
 16615                           ;stkvar	_mode @ sp[(-56)+54]
 16616  010BF8  0EFE               	movlw	-2
 16617  010BFA  006F FF8C  F026    	movff	plusw1,btemp
 16618  010C00  0E67               	movlw	103
 16619  010C02  1826               	xorwf	btemp^0,w,c
 16620  010C04  A4D8               	btfss	status,2,c
 16621  010C06  D015               	goto	l11881
 16622                           
 16623                           ;stkvar	_ne @ sp[(-56)+46]
 16624  010C08  0EF7               	movlw	-9
 16625  010C0A  AEE3               	btfss	plusw1,7,c
 16626  010C0C  D012               	goto	l11881
 16627                           
 16628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 16629                           ;stkvar	_t @ sp[(-56)+52]
 16630  010C0E  0EFC               	movlw	-4
 16631  010C10  50E3               	movf	plusw1,w,c
 16632  010C12  0F01               	addlw	1
 16633  010C14  6E26               	movwf	btemp^0,c
 16634  010C16  0EFC               	movlw	-4
 16635  010C18  0060  F09B  FFE3   	movff	btemp,plusw1
 16636  010C1E  6A26               	clrf	btemp^0,c
 16637  010C20  0EFD               	movlw	-3
 16638  010C22  50E3               	movf	plusw1,w,c
 16639  010C24  2026               	addwfc	btemp^0,w,c
 16640  010C26  6E26               	movwf	btemp^0,c
 16641  010C28  0EFD               	movlw	-3
 16642  010C2A  0060  F09B  FFE3   	movff	btemp,plusw1
 16643                           
 16644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 16645  010C30  D0AF               	goto	l11909
 16646  010C32                     l11881:
 16647                           
 16648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 16649                           ;stkvar	_pp @ sp[(-56)+50]
 16650  010C32  0EFA               	movlw	-6
 16651  010C34  006F FF8C  F026    	movff	plusw1,btemp
 16652  010C3A  0EFB               	movlw	-5
 16653  010C3C  50E3               	movf	plusw1,w,c
 16654  010C3E  1026               	iorwf	btemp^0,w,c
 16655  010C40  A4D8               	btfss	status,2,c
 16656  010C42  D070               	goto	l11901
 16657                           
 16658                           ;stkvar	_ne @ sp[(-56)+46]
 16659  010C44  0EF7               	movlw	-9
 16660  010C46  AEE3               	btfss	plusw1,7,c
 16661  010C48  D06D               	goto	l11901
 16662                           
 16663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 16664                           ;stkvar	_n @ sp[(-56)+32]
 16665  010C4A  0EE8               	movlw	-24
 16666  010C4C  006F FF8C  F030    	movff	plusw1,btemp+10
 16667  010C52  0EE9               	movlw	-23
 16668  010C54  006F FF8C  F031    	movff	plusw1,btemp+11
 16669  010C5A  0EAE               	movlw	low _dbuf
 16670  010C5C  2430               	addwf	(btemp+10)^0,w,c
 16671  010C5E  6ED9               	movwf	fsr2l,c
 16672  010C60  0E03               	movlw	high _dbuf
 16673  010C62  2031               	addwfc	(btemp+11)^0,w,c
 16674  010C64  6EDA               	movwf	fsr2h,c
 16675  010C66  0E2E               	movlw	46
 16676  010C68  6EDF               	movwf	indf2,c
 16677                           
 16678                           ;stkvar	_n @ sp[(-56)+32]
 16679  010C6A  0EE8               	movlw	-24
 16680  010C6C  50E3               	movf	plusw1,w,c
 16681  010C6E  0F01               	addlw	1
 16682  010C70  6E26               	movwf	btemp^0,c
 16683  010C72  0EE8               	movlw	-24
 16684  010C74  0060  F09B  FFE3   	movff	btemp,plusw1
 16685  010C7A  6A26               	clrf	btemp^0,c
 16686  010C7C  0EE9               	movlw	-23
 16687  010C7E  50E3               	movf	plusw1,w,c
 16688  010C80  2026               	addwfc	btemp^0,w,c
 16689  010C82  6E26               	movwf	btemp^0,c
 16690  010C84  0EE9               	movlw	-23
 16691  010C86  0060  F09B  FFE3   	movff	btemp,plusw1
 16692                           
 16693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 16694                           ;stkvar	_w @ sp[(-56)+38]
 16695  010C8C  50E1               	movf	fsr1l,w,c
 16696  010C8E  0FEE               	addlw	-18
 16697  010C90  6ED9               	movwf	fsr2l,c
 16698  010C92  50E2               	movf	fsr1h,w,c
 16699  010C94  6EDA               	movwf	fsr2h,c
 16700  010C96  0EFF               	movlw	255
 16701  010C98  22DA               	addwfc	fsr2h,f,c
 16702  010C9A  06DE               	decf	postinc2,f,c
 16703  010C9C  0E00               	movlw	0
 16704  010C9E  5ADD               	subwfb	postdec2,f,c
 16705                           
 16706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 16707  010CA0  0E01               	movlw	1
 16708  010CA2  6E30               	movwf	(btemp+10)^0,c
 16709  010CA4  0E00               	movlw	0
 16710  010CA6  6E31               	movwf	(btemp+11)^0,c
 16711                           
 16712                           ;stkvar	_pp @ sp[(-56)+50]
 16713  010CA8  0EFA               	movlw	-6
 16714  010CAA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16715  010CB0  0EFB               	movlw	-5
 16716  010CB2  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16717  010CB8  D035               	goto	l11901
 16718  010CBA                     l11893:
 16719                           
 16720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 16721                           ;stkvar	_n @ sp[(-56)+32]
 16722  010CBA  0EE8               	movlw	-24
 16723  010CBC  006F FF8C  F030    	movff	plusw1,btemp+10
 16724  010CC2  0EE9               	movlw	-23
 16725  010CC4  006F FF8C  F031    	movff	plusw1,btemp+11
 16726  010CCA  0EAE               	movlw	low _dbuf
 16727  010CCC  2430               	addwf	(btemp+10)^0,w,c
 16728  010CCE  6ED9               	movwf	fsr2l,c
 16729  010CD0  0E03               	movlw	high _dbuf
 16730  010CD2  2031               	addwfc	(btemp+11)^0,w,c
 16731  010CD4  6EDA               	movwf	fsr2h,c
 16732  010CD6  0E30               	movlw	48
 16733  010CD8  6EDF               	movwf	indf2,c
 16734                           
 16735                           ;stkvar	_n @ sp[(-56)+32]
 16736  010CDA  0EE8               	movlw	-24
 16737  010CDC  50E3               	movf	plusw1,w,c
 16738  010CDE  0F01               	addlw	1
 16739  010CE0  6E26               	movwf	btemp^0,c
 16740  010CE2  0EE8               	movlw	-24
 16741  010CE4  0060  F09B  FFE3   	movff	btemp,plusw1
 16742  010CEA  6A26               	clrf	btemp^0,c
 16743  010CEC  0EE9               	movlw	-23
 16744  010CEE  50E3               	movf	plusw1,w,c
 16745  010CF0  2026               	addwfc	btemp^0,w,c
 16746  010CF2  6E26               	movwf	btemp^0,c
 16747  010CF4  0EE9               	movlw	-23
 16748  010CF6  0060  F09B  FFE3   	movff	btemp,plusw1
 16749                           
 16750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 16751                           ;stkvar	_w @ sp[(-56)+38]
 16752  010CFC  50E1               	movf	fsr1l,w,c
 16753  010CFE  0FEE               	addlw	-18
 16754  010D00  6ED9               	movwf	fsr2l,c
 16755  010D02  50E2               	movf	fsr1h,w,c
 16756  010D04  6EDA               	movwf	fsr2h,c
 16757  010D06  0EFF               	movlw	255
 16758  010D08  22DA               	addwfc	fsr2h,f,c
 16759  010D0A  06DE               	decf	postinc2,f,c
 16760  010D0C  0E00               	movlw	0
 16761  010D0E  5ADD               	subwfb	postdec2,f,c
 16762                           
 16763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 16764                           ;stkvar	_t @ sp[(-56)+52]
 16765  010D10  50E1               	movf	fsr1l,w,c
 16766  010D12  0FFC               	addlw	-4
 16767  010D14  6ED9               	movwf	fsr2l,c
 16768  010D16  50E2               	movf	fsr1h,w,c
 16769  010D18  6EDA               	movwf	fsr2h,c
 16770  010D1A  0EFF               	movlw	255
 16771  010D1C  22DA               	addwfc	fsr2h,f,c
 16772  010D1E  06DE               	decf	postinc2,f,c
 16773  010D20  0E00               	movlw	0
 16774  010D22  5ADD               	subwfb	postdec2,f,c
 16775  010D24                     l11901:
 16776                           
 16777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 16778                           ;stkvar	_t @ sp[(-56)+52]
 16779  010D24  0EFC               	movlw	-4
 16780  010D26  006F FF8C  F026    	movff	plusw1,btemp
 16781  010D2C  0EFD               	movlw	-3
 16782  010D2E  50E3               	movf	plusw1,w,c
 16783  010D30  1026               	iorwf	btemp^0,w,c
 16784  010D32  A4D8               	btfss	status,2,c
 16785  010D34  D7C2               	goto	l11893
 16786                           
 16787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 16788                           ;stkvar	_n @ sp[(-56)+32]
 16789  010D36  0EE8               	movlw	-24
 16790  010D38  006F FF8C  F030    	movff	plusw1,btemp+10
 16791  010D3E  0EE9               	movlw	-23
 16792  010D40  006F FF8C  F031    	movff	plusw1,btemp+11
 16793  010D46  0EAE               	movlw	low _dbuf
 16794  010D48  2430               	addwf	(btemp+10)^0,w,c
 16795  010D4A  6ED9               	movwf	fsr2l,c
 16796  010D4C  0E03               	movlw	high _dbuf
 16797  010D4E  2031               	addwfc	(btemp+11)^0,w,c
 16798  010D50  6EDA               	movwf	fsr2h,c
 16799                           
 16800                           ;stkvar	_d @ sp[(-56)+44]
 16801  010D52  0EF4               	movlw	-12
 16802  010D54  50E3               	movf	plusw1,w,c
 16803  010D56  0F30               	addlw	48
 16804  010D58  6EDF               	movwf	indf2,c
 16805                           
 16806                           ;stkvar	_n @ sp[(-56)+32]
 16807  010D5A  0EE8               	movlw	-24
 16808  010D5C  50E3               	movf	plusw1,w,c
 16809  010D5E  0F01               	addlw	1
 16810  010D60  6E26               	movwf	btemp^0,c
 16811  010D62  0EE8               	movlw	-24
 16812  010D64  0060  F09B  FFE3   	movff	btemp,plusw1
 16813  010D6A  6A26               	clrf	btemp^0,c
 16814  010D6C  0EE9               	movlw	-23
 16815  010D6E  50E3               	movf	plusw1,w,c
 16816  010D70  2026               	addwfc	btemp^0,w,c
 16817  010D72  6E26               	movwf	btemp^0,c
 16818  010D74  0EE9               	movlw	-23
 16819  010D76  0060  F09B  FFE3   	movff	btemp,plusw1
 16820                           
 16821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 16822                           ;stkvar	_w @ sp[(-56)+38]
 16823  010D7C  50E1               	movf	fsr1l,w,c
 16824  010D7E  0FEE               	addlw	-18
 16825  010D80  6ED9               	movwf	fsr2l,c
 16826  010D82  50E2               	movf	fsr1h,w,c
 16827  010D84  6EDA               	movwf	fsr2h,c
 16828  010D86  0EFF               	movlw	255
 16829  010D88  22DA               	addwfc	fsr2h,f,c
 16830  010D8A  06DE               	decf	postinc2,f,c
 16831  010D8C  0E00               	movlw	0
 16832  010D8E  5ADD               	subwfb	postdec2,f,c
 16833  010D90                     l11909:
 16834                           
 16835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 16836                           ;stkvar	_u @ sp[(-56)+12]
 16837  010D90  0ED4               	movlw	-44
 16838  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 16839  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 16840  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 16841  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 16842                           
 16843                           ;stkvar	_l @ sp[(-60)+20]
 16844  010DAA  0ED8               	movlw	-40
 16845  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 16846  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 16847  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 16848  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 16849  010DC4  EC41  F099         	call	___flmul	;wreg free
 16850  010DC8  0060  F09B  FFE6   	movff	btemp,postinc1
 16851  010DCE  0060  F09F  FFE6   	movff	btemp+1,postinc1
 16852  010DD4  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 16853  010DDA  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 16854                           
 16855                           ;stkvar	_h @ sp[(-60)+24]
 16856  010DE0  0EDC               	movlw	-36
 16857  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 16858  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 16859  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 16860  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 16861  010DFA  EC1F  F0D6         	call	___flsub	;wreg free
 16862                           
 16863                           ;stkvar	_h @ sp[(-56)+24]
 16864  010DFE  0EE0               	movlw	-32
 16865  010E00  0060  F09B  FFE3   	movff	btemp,plusw1
 16866  010E06  0EE1               	movlw	-31
 16867  010E08  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16868  010E0E  0EE2               	movlw	-30
 16869  010E10  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16870  010E16  0EE3               	movlw	-29
 16871  010E18  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16872                           
 16873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 16874  010E1E  0E00               	movlw	0
 16875  010E20  6EE6               	movwf	postinc1,c
 16876  010E22  0E00               	movlw	0
 16877  010E24  6EE6               	movwf	postinc1,c
 16878  010E26  0E20               	movlw	32
 16879  010E28  6EE6               	movwf	postinc1,c
 16880  010E2A  0E41               	movlw	65
 16881  010E2C  6EE6               	movwf	postinc1,c
 16882                           
 16883                           ;stkvar	_u @ sp[(-60)+12]
 16884  010E2E  0ED0               	movlw	-48
 16885  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 16886  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 16887  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16888  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 16889  010E48  ECD5  F0A4         	call	___fldiv	;wreg free
 16890                           
 16891                           ;stkvar	_u @ sp[(-56)+12]
 16892  010E4C  0ED4               	movlw	-44
 16893  010E4E  0060  F09B  FFE3   	movff	btemp,plusw1
 16894  010E54  0ED5               	movlw	-43
 16895  010E56  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16896  010E5C  0ED6               	movlw	-42
 16897  010E5E  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16898  010E64  0ED7               	movlw	-41
 16899  010E66  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16900                           
 16901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 16902                           ;stkvar	_ne @ sp[(-56)+46]
 16903  010E6C  50E1               	movf	fsr1l,w,c
 16904  010E6E  0FF6               	addlw	-10
 16905  010E70  6ED9               	movwf	fsr2l,c
 16906  010E72  50E2               	movf	fsr1h,w,c
 16907  010E74  6EDA               	movwf	fsr2h,c
 16908  010E76  0EFF               	movlw	255
 16909  010E78  22DA               	addwfc	fsr2h,f,c
 16910  010E7A  06DE               	decf	postinc2,f,c
 16911  010E7C  0E00               	movlw	0
 16912  010E7E  5ADD               	subwfb	postdec2,f,c
 16913                           
 16914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 16915                           ;stkvar	_i @ sp[(-56)+36]
 16916  010E80  0EEC               	movlw	-20
 16917  010E82  50E3               	movf	plusw1,w,c
 16918  010E84  0F01               	addlw	1
 16919  010E86  6E26               	movwf	btemp^0,c
 16920  010E88  0EEC               	movlw	-20
 16921  010E8A  0060  F09B  FFE3   	movff	btemp,plusw1
 16922  010E90  6A26               	clrf	btemp^0,c
 16923  010E92  0EED               	movlw	-19
 16924  010E94  50E3               	movf	plusw1,w,c
 16925  010E96  2026               	addwfc	btemp^0,w,c
 16926  010E98  6E26               	movwf	btemp^0,c
 16927  010E9A  0EED               	movlw	-19
 16928  010E9C  0060  F09B  FFE3   	movff	btemp,plusw1
 16929  010EA2                     l11917:
 16930                           
 16931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16932                           ;stkvar	_m @ sp[(-56)+48]
 16933                           ;stkvar	_i @ sp[(-56)+36]
 16934  010EA2  50E1               	movf	fsr1l,w,c
 16935  010EA4  0FEC               	addlw	-20
 16936  010EA6  6ED9               	movwf	fsr2l,c
 16937  010EA8  50E2               	movf	fsr1h,w,c
 16938  010EAA  6EDA               	movwf	fsr2h,c
 16939  010EAC  0EFF               	movlw	255
 16940  010EAE  22DA               	addwfc	fsr2h,f,c
 16941  010EB0  0EF8               	movlw	-8
 16942  010EB2  50E3               	movf	plusw1,w,c
 16943  010EB4  5CDE               	subwf	postinc2,w,c
 16944  010EB6  50DE               	movf	postinc2,w,c
 16945  010EB8  0A80               	xorlw	128
 16946  010EBA  6E26               	movwf	btemp^0,c
 16947  010EBC  0EF9               	movlw	-7
 16948  010EBE  50E3               	movf	plusw1,w,c
 16949  010EC0  0A80               	xorlw	128
 16950  010EC2  5826               	subwfb	btemp^0,w,c
 16951  010EC4  B0D8               	btfsc	status,0,c
 16952  010EC6  D00E               	goto	u11200
 16953                           
 16954                           ;stkvar	_n @ sp[(-56)+32]
 16955  010EC8  0EE9               	movlw	-23
 16956  010ECA  BEE3               	btfsc	plusw1,7,c
 16957  010ECC  D633               	goto	l11867
 16958  010ECE  0EE9               	movlw	-23
 16959  010ED0  50E3               	movf	plusw1,w,c
 16960  010ED2  E108               	bnz	u11200
 16961  010ED4  0EE8               	movlw	-24
 16962  010ED6  006F FF8C  F026    	movff	plusw1,btemp
 16963  010EDC  0E4B               	movlw	75
 16964  010EDE  5E26               	subwf	btemp^0,f,c
 16965  010EE0  A0D8               	btfss	status,0,c
 16966  010EE2  D628               	goto	l11867
 16967  010EE4                     u11200:
 16968                           
 16969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 16970                           ;stkvar	_pp @ sp[(-56)+50]
 16971  010EE4  0EFA               	movlw	-6
 16972  010EE6  006F FF8C  F026    	movff	plusw1,btemp
 16973  010EEC  0EFB               	movlw	-5
 16974  010EEE  50E3               	movf	plusw1,w,c
 16975  010EF0  1026               	iorwf	btemp^0,w,c
 16976  010EF2  B4D8               	btfsc	status,2,c
 16977  010EF4  A80E               	btfss	_flags^0,4,c
 16978  010EF6  D021               	goto	l11929
 16979                           
 16980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 16981                           ;stkvar	_n @ sp[(-56)+32]
 16982  010EF8  0EE8               	movlw	-24
 16983  010EFA  006F FF8C  F030    	movff	plusw1,btemp+10
 16984  010F00  0EE9               	movlw	-23
 16985  010F02  006F FF8C  F031    	movff	plusw1,btemp+11
 16986  010F08  0EAE               	movlw	low _dbuf
 16987  010F0A  2430               	addwf	(btemp+10)^0,w,c
 16988  010F0C  6ED9               	movwf	fsr2l,c
 16989  010F0E  0E03               	movlw	high _dbuf
 16990  010F10  2031               	addwfc	(btemp+11)^0,w,c
 16991  010F12  6EDA               	movwf	fsr2h,c
 16992  010F14  0E2E               	movlw	46
 16993  010F16  6EDF               	movwf	indf2,c
 16994                           
 16995                           ;stkvar	_n @ sp[(-56)+32]
 16996  010F18  0EE8               	movlw	-24
 16997  010F1A  50E3               	movf	plusw1,w,c
 16998  010F1C  0F01               	addlw	1
 16999  010F1E  6E26               	movwf	btemp^0,c
 17000  010F20  0EE8               	movlw	-24
 17001  010F22  0060  F09B  FFE3   	movff	btemp,plusw1
 17002  010F28  6A26               	clrf	btemp^0,c
 17003  010F2A  0EE9               	movlw	-23
 17004  010F2C  50E3               	movf	plusw1,w,c
 17005  010F2E  2026               	addwfc	btemp^0,w,c
 17006  010F30  6E26               	movwf	btemp^0,c
 17007  010F32  0EE9               	movlw	-23
 17008  010F34  0060  F09B  FFE3   	movff	btemp,plusw1
 17009  010F3A                     l11929:
 17010                           
 17011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 17012                           ;stkvar	_n @ sp[(-56)+32]
 17013  010F3A  0EE8               	movlw	-24
 17014  010F3C  006F FF8C  F030    	movff	plusw1,btemp+10
 17015  010F42  0EE9               	movlw	-23
 17016  010F44  006F FF8C  F031    	movff	plusw1,btemp+11
 17017  010F4A  0EAE               	movlw	low _dbuf
 17018  010F4C  2430               	addwf	(btemp+10)^0,w,c
 17019  010F4E  6ED9               	movwf	fsr2l,c
 17020  010F50  0E03               	movlw	high _dbuf
 17021  010F52  2031               	addwfc	(btemp+11)^0,w,c
 17022  010F54  6EDA               	movwf	fsr2h,c
 17023  010F56  0E00               	movlw	0
 17024  010F58  6EDF               	movwf	indf2,c
 17025                           
 17026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 17027                           ;stkvar	_nmode @ sp[(-56)+55]
 17028  010F5A  0EFF               	movlw	-1
 17029  010F5C  006F FF8C  F026    	movff	plusw1,btemp
 17030  010F62  0E65               	movlw	101
 17031  010F64  1826               	xorwf	btemp^0,w,c
 17032  010F66  A4D8               	btfss	status,2,c
 17033  010F68  EF16  F081         	goto	l11733
 17034                           
 17035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 17036  010F6C  0E4F               	movlw	79
 17037  010F6E  6E30               	movwf	(btemp+10)^0,c
 17038  010F70  0E00               	movlw	0
 17039  010F72  6E31               	movwf	(btemp+11)^0,c
 17040                           
 17041                           ;stkvar	_i @ sp[(-56)+36]
 17042  010F74  0EEC               	movlw	-20
 17043  010F76  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17044  010F7C  0EED               	movlw	-19
 17045  010F7E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17046                           
 17047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 17048                           ;stkvar	_i @ sp[(-56)+36]
 17049  010F84  0EEC               	movlw	-20
 17050  010F86  006F FF8C  F030    	movff	plusw1,btemp+10
 17051  010F8C  0EED               	movlw	-19
 17052  010F8E  006F FF8C  F031    	movff	plusw1,btemp+11
 17053  010F94  0EAE               	movlw	low _dbuf
 17054  010F96  2430               	addwf	(btemp+10)^0,w,c
 17055  010F98  6ED9               	movwf	fsr2l,c
 17056  010F9A  0E03               	movlw	high _dbuf
 17057  010F9C  2031               	addwfc	(btemp+11)^0,w,c
 17058  010F9E  6EDA               	movwf	fsr2h,c
 17059  010FA0  0E00               	movlw	0
 17060  010FA2  6EDF               	movwf	indf2,c
 17061                           
 17062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 17063                           ;stkvar	_sign @ sp[(-56)+42]
 17064  010FA4  0EF2               	movlw	-14
 17065  010FA6  6AE3               	clrf	plusw1,c
 17066  010FA8  0EF3               	movlw	-13
 17067  010FAA  6AE3               	clrf	plusw1,c
 17068                           
 17069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17070                           ;stkvar	_e @ sp[(-56)+34]
 17071  010FAC  0EEB               	movlw	-21
 17072  010FAE  AEE3               	btfss	plusw1,7,c
 17073  010FB0  D012               	goto	l11943
 17074                           
 17075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17076  010FB2  0E01               	movlw	1
 17077  010FB4  6E30               	movwf	(btemp+10)^0,c
 17078  010FB6  0E00               	movlw	0
 17079  010FB8  6E31               	movwf	(btemp+11)^0,c
 17080                           
 17081                           ;stkvar	_sign @ sp[(-56)+42]
 17082  010FBA  0EF2               	movlw	-14
 17083  010FBC  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17084  010FC2  0EF3               	movlw	-13
 17085  010FC4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17086                           
 17087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17088                           ;stkvar	_e @ sp[(-56)+34]
 17089                           ;stkvar	_e @ sp[(-56)+34]
 17090  010FCA  0EEA               	movlw	-22
 17091  010FCC  6CE3               	negf	plusw1,c
 17092  010FCE  0EEB               	movlw	-21
 17093  010FD0  1EE3               	comf	plusw1,f,c
 17094  010FD2  B0D8               	btfsc	status,0,c
 17095  010FD4  2AE3               	incf	plusw1,f,c
 17096  010FD6                     l11943:
 17097                           
 17098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17099  010FD6  0E02               	movlw	2
 17100  010FD8  6E30               	movwf	(btemp+10)^0,c
 17101  010FDA  0E00               	movlw	0
 17102  010FDC  6E31               	movwf	(btemp+11)^0,c
 17103                           
 17104                           ;stkvar	_p @ sp[(-56)+40]
 17105  010FDE  0EF0               	movlw	-16
 17106  010FE0  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17107  010FE6  0EF1               	movlw	-15
 17108  010FE8  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17109                           
 17110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17111  010FEE  D051               	goto	l11955
 17112  010FF0                     l11945:
 17113                           
 17114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17115                           ;stkvar	_i @ sp[(-56)+36]
 17116  010FF0  50E1               	movf	fsr1l,w,c
 17117  010FF2  0FEC               	addlw	-20
 17118  010FF4  6ED9               	movwf	fsr2l,c
 17119  010FF6  50E2               	movf	fsr1h,w,c
 17120  010FF8  6EDA               	movwf	fsr2h,c
 17121  010FFA  0EFF               	movlw	255
 17122  010FFC  22DA               	addwfc	fsr2h,f,c
 17123  010FFE  06DE               	decf	postinc2,f,c
 17124  011000  0E00               	movlw	0
 17125  011002  5ADD               	subwfb	postdec2,f,c
 17126                           
 17127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17128                           ;stkvar	_i @ sp[(-56)+36]
 17129  011004  0EEC               	movlw	-20
 17130  011006  006F FF8C  F030    	movff	plusw1,btemp+10
 17131  01100C  0EED               	movlw	-19
 17132  01100E  006F FF8C  F031    	movff	plusw1,btemp+11
 17133  011014  0EAE               	movlw	low _dbuf
 17134  011016  2430               	addwf	(btemp+10)^0,w,c
 17135  011018  6ED9               	movwf	fsr2l,c
 17136  01101A  0E03               	movlw	high _dbuf
 17137  01101C  2031               	addwfc	(btemp+11)^0,w,c
 17138  01101E  6EDA               	movwf	fsr2h,c
 17139  011020  0E0A               	movlw	10
 17140  011022  6EE6               	movwf	postinc1,c
 17141  011024  0E00               	movlw	0
 17142  011026  6EE6               	movwf	postinc1,c
 17143                           
 17144                           ;stkvar	_e @ sp[(-58)+34]
 17145  011028  0EE8               	movlw	-24
 17146  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17147  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17148  011036  EC1B  F0C8         	call	___awmod	;wreg free
 17149  01103A  5026               	movf	btemp^0,w,c
 17150  01103C  0F30               	addlw	48
 17151  01103E  6EDF               	movwf	indf2,c
 17152                           
 17153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17154  011040  0E0A               	movlw	10
 17155  011042  6EE6               	movwf	postinc1,c
 17156  011044  0E00               	movlw	0
 17157  011046  6EE6               	movwf	postinc1,c
 17158                           
 17159                           ;stkvar	_e @ sp[(-58)+34]
 17160  011048  0EE8               	movlw	-24
 17161  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17162  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17163  011056  EC0B  F0C5         	call	___awdiv	;wreg free
 17164                           
 17165                           ;stkvar	_e @ sp[(-56)+34]
 17166  01105A  0EEA               	movlw	-22
 17167  01105C  0060  F09B  FFE3   	movff	btemp,plusw1
 17168  011062  0EEB               	movlw	-21
 17169  011064  0060  F09F  FFE3   	movff	btemp+1,plusw1
 17170                           
 17171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17172                           ;stkvar	_p @ sp[(-56)+40]
 17173  01106A  50E1               	movf	fsr1l,w,c
 17174  01106C  0FF0               	addlw	-16
 17175  01106E  6ED9               	movwf	fsr2l,c
 17176  011070  50E2               	movf	fsr1h,w,c
 17177  011072  6EDA               	movwf	fsr2h,c
 17178  011074  0EFF               	movlw	255
 17179  011076  22DA               	addwfc	fsr2h,f,c
 17180  011078  06DE               	decf	postinc2,f,c
 17181  01107A  0E00               	movlw	0
 17182  01107C  5ADD               	subwfb	postdec2,f,c
 17183                           
 17184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17185                           ;stkvar	_w @ sp[(-56)+38]
 17186  01107E  50E1               	movf	fsr1l,w,c
 17187  011080  0FEE               	addlw	-18
 17188  011082  6ED9               	movwf	fsr2l,c
 17189  011084  50E2               	movf	fsr1h,w,c
 17190  011086  6EDA               	movwf	fsr2h,c
 17191  011088  0EFF               	movlw	255
 17192  01108A  22DA               	addwfc	fsr2h,f,c
 17193  01108C  06DE               	decf	postinc2,f,c
 17194  01108E  0E00               	movlw	0
 17195  011090  5ADD               	subwfb	postdec2,f,c
 17196  011092                     l11955:
 17197                           
 17198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17199                           ;stkvar	_e @ sp[(-56)+34]
 17200  011092  0EEA               	movlw	-22
 17201  011094  006F FF8C  F026    	movff	plusw1,btemp
 17202  01109A  0EEB               	movlw	-21
 17203  01109C  50E3               	movf	plusw1,w,c
 17204  01109E  1026               	iorwf	btemp^0,w,c
 17205  0110A0  A4D8               	btfss	status,2,c
 17206  0110A2  D7A6               	goto	l11945
 17207                           
 17208                           ;stkvar	_p @ sp[(-56)+40]
 17209  0110A4  0EF1               	movlw	-15
 17210  0110A6  BEE3               	btfsc	plusw1,7,c
 17211  0110A8  D007               	goto	u11260
 17212  0110AA  0EF1               	movlw	-15
 17213  0110AC  50E3               	movf	plusw1,w,c
 17214  0110AE  E1A0               	bnz	l11945
 17215  0110B0  0EF0               	movlw	-16
 17216  0110B2  04E3               	decf	plusw1,w,c
 17217  0110B4  B0D8               	btfsc	status,0,c
 17218  0110B6  D79C               	goto	l11945
 17219  0110B8                     u11260:
 17220                           
 17221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17222                           ;stkvar	_i @ sp[(-56)+36]
 17223  0110B8  50E1               	movf	fsr1l,w,c
 17224  0110BA  0FEC               	addlw	-20
 17225  0110BC  6ED9               	movwf	fsr2l,c
 17226  0110BE  50E2               	movf	fsr1h,w,c
 17227  0110C0  6EDA               	movwf	fsr2h,c
 17228  0110C2  0EFF               	movlw	255
 17229  0110C4  22DA               	addwfc	fsr2h,f,c
 17230  0110C6  06DE               	decf	postinc2,f,c
 17231  0110C8  0E00               	movlw	0
 17232  0110CA  5ADD               	subwfb	postdec2,f,c
 17233                           
 17234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17235                           ;stkvar	_sign @ sp[(-56)+42]
 17236  0110CC  0EF2               	movlw	-14
 17237  0110CE  006F FF8C  F026    	movff	plusw1,btemp
 17238  0110D4  0EF3               	movlw	-13
 17239  0110D6  50E3               	movf	plusw1,w,c
 17240  0110D8  1026               	iorwf	btemp^0,w,c
 17241  0110DA  A4D8               	btfss	status,2,c
 17242  0110DC  D002               	goto	l11965
 17243  0110DE  0E2B               	movlw	43
 17244  0110E0  D001               	goto	L18
 17245  0110E2                     l11965:
 17246  0110E2  0E2D               	movlw	45
 17247  0110E4                     L18:
 17248  0110E4  6E30               	movwf	(btemp+10)^0,c
 17249  0110E6  0E00               	movlw	0
 17250  0110E8  6E31               	movwf	(btemp+11)^0,c
 17251                           
 17252                           ;stkvar	_efgtoa$5418 @ sp[(-56)+4]
 17253  0110EA  0ECC               	movlw	-52
 17254  0110EC  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17255  0110F2  0ECD               	movlw	-51
 17256  0110F4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17257                           
 17258                           ;stkvar	_efgtoa$5418 @ sp[(-56)+4]
 17259                           ;stkvar	_i @ sp[(-56)+36]
 17260  0110FA  0EEC               	movlw	-20
 17261  0110FC  006F FF8C  F030    	movff	plusw1,btemp+10
 17262  011102  0EED               	movlw	-19
 17263  011104  006F FF8C  F031    	movff	plusw1,btemp+11
 17264  01110A  0EAE               	movlw	low _dbuf
 17265  01110C  2430               	addwf	(btemp+10)^0,w,c
 17266  01110E  6ED9               	movwf	fsr2l,c
 17267  011110  0E03               	movlw	high _dbuf
 17268  011112  2031               	addwfc	(btemp+11)^0,w,c
 17269  011114  6EDA               	movwf	fsr2h,c
 17270  011116  0ECC               	movlw	-52
 17271  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17272                           
 17273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17274                           ;stkvar	_w @ sp[(-56)+38]
 17275  01111E  50E1               	movf	fsr1l,w,c
 17276  011120  0FEE               	addlw	-18
 17277  011122  6ED9               	movwf	fsr2l,c
 17278  011124  50E2               	movf	fsr1h,w,c
 17279  011126  6EDA               	movwf	fsr2h,c
 17280  011128  0EFF               	movlw	255
 17281  01112A  22DA               	addwfc	fsr2h,f,c
 17282  01112C  06DE               	decf	postinc2,f,c
 17283  01112E  0E00               	movlw	0
 17284  011130  5ADD               	subwfb	postdec2,f,c
 17285                           
 17286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17287                           ;stkvar	_i @ sp[(-56)+36]
 17288  011132  50E1               	movf	fsr1l,w,c
 17289  011134  0FEC               	addlw	-20
 17290  011136  6ED9               	movwf	fsr2l,c
 17291  011138  50E2               	movf	fsr1h,w,c
 17292  01113A  6EDA               	movwf	fsr2h,c
 17293  01113C  0EFF               	movlw	255
 17294  01113E  22DA               	addwfc	fsr2h,f,c
 17295  011140  06DE               	decf	postinc2,f,c
 17296  011142  0E00               	movlw	0
 17297  011144  5ADD               	subwfb	postdec2,f,c
 17298  011146  0EBF               	movlw	191
 17299  011148  6E30               	movwf	(btemp+10)^0,c
 17300  01114A  0EFF               	movlw	255
 17301  01114C  6E31               	movwf	(btemp+11)^0,c
 17302                           
 17303                           ;stkvar	_c @ sp[(-56)+-7]
 17304  01114E  0EC1               	movlw	-63
 17305  011150  50E3               	movf	plusw1,w,c
 17306  011152  6E2E               	movwf	(btemp+8)^0,c
 17307  011154  6A2F               	clrf	(btemp+9)^0,c
 17308  011156  5030               	movf	(btemp+10)^0,w,c
 17309  011158  262E               	addwf	(btemp+8)^0,f,c
 17310  01115A  5031               	movf	(btemp+11)^0,w,c
 17311  01115C  222F               	addwfc	(btemp+9)^0,f,c
 17312  01115E  502F               	movf	(btemp+9)^0,w,c
 17313  011160  E106               	bnz	u11280
 17314  011162  0E1A               	movlw	26
 17315  011164  5C2E               	subwf	(btemp+8)^0,w,c
 17316  011166  B0D8               	btfsc	status,0,c
 17317  011168  D002               	goto	u11280
 17318  01116A  0E01               	movlw	1
 17319  01116C  D001               	goto	u11290
 17320  01116E                     u11280:
 17321  01116E  0E00               	movlw	0
 17322  011170                     u11290:
 17323  011170  6E30               	movwf	(btemp+10)^0,c
 17324  011172  6A31               	clrf	(btemp+11)^0,c
 17325                           
 17326                           ;stkvar	_efgtoa$5420 @ sp[(-56)+0]
 17327  011174  0EC8               	movlw	-56
 17328  011176  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17329  01117C  0EC9               	movlw	-55
 17330  01117E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17331                           
 17332                           ;stkvar	_efgtoa$5420 @ sp[(-56)+0]
 17333  011184  0EC8               	movlw	-56
 17334  011186  006F FF8C  F026    	movff	plusw1,btemp
 17335  01118C  0EC9               	movlw	-55
 17336  01118E  50E3               	movf	plusw1,w,c
 17337  011190  1026               	iorwf	btemp^0,w,c
 17338  011192  A4D8               	btfss	status,2,c
 17339  011194  D002               	goto	l11981
 17340  011196  0E65               	movlw	101
 17341  011198  D001               	goto	L19
 17342  01119A                     l11981:
 17343  01119A  0E45               	movlw	69
 17344  01119C                     L19:
 17345  01119C  6E30               	movwf	(btemp+10)^0,c
 17346  01119E  0E00               	movlw	0
 17347  0111A0  6E31               	movwf	(btemp+11)^0,c
 17348                           
 17349                           ;stkvar	_efgtoa$5419 @ sp[(-56)+2]
 17350  0111A2  0ECA               	movlw	-54
 17351  0111A4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17352  0111AA  0ECB               	movlw	-53
 17353  0111AC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17354                           
 17355                           ;stkvar	_efgtoa$5419 @ sp[(-56)+2]
 17356                           ;stkvar	_i @ sp[(-56)+36]
 17357  0111B2  0EEC               	movlw	-20
 17358  0111B4  006F FF8C  F030    	movff	plusw1,btemp+10
 17359  0111BA  0EED               	movlw	-19
 17360  0111BC  006F FF8C  F031    	movff	plusw1,btemp+11
 17361  0111C2  0EAE               	movlw	low _dbuf
 17362  0111C4  2430               	addwf	(btemp+10)^0,w,c
 17363  0111C6  6ED9               	movwf	fsr2l,c
 17364  0111C8  0E03               	movlw	high _dbuf
 17365  0111CA  2031               	addwfc	(btemp+11)^0,w,c
 17366  0111CC  6EDA               	movwf	fsr2h,c
 17367  0111CE  0ECA               	movlw	-54
 17368  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17369                           
 17370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17371                           ;stkvar	_w @ sp[(-56)+38]
 17372  0111D6  50E1               	movf	fsr1l,w,c
 17373  0111D8  0FEE               	addlw	-18
 17374  0111DA  6ED9               	movwf	fsr2l,c
 17375  0111DC  50E2               	movf	fsr1h,w,c
 17376  0111DE  6EDA               	movwf	fsr2h,c
 17377  0111E0  0EFF               	movlw	255
 17378  0111E2  22DA               	addwfc	fsr2h,f,c
 17379  0111E4  06DE               	decf	postinc2,f,c
 17380  0111E6  0E00               	movlw	0
 17381  0111E8  5ADD               	subwfb	postdec2,f,c
 17382                           
 17383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 17384                           ;stkvar	_i @ sp[(-56)+36]
 17385  0111EA  0EEC               	movlw	-20
 17386  0111EC  006F FF8C  F030    	movff	plusw1,btemp+10
 17387  0111F2  0EED               	movlw	-19
 17388  0111F4  006F FF8C  F031    	movff	plusw1,btemp+11
 17389  0111FA  0EAE               	movlw	low _dbuf
 17390  0111FC  2430               	addwf	(btemp+10)^0,w,c
 17391  0111FE  6E2E               	movwf	(btemp+8)^0,c
 17392  011200  0E03               	movlw	high _dbuf
 17393  011202  2031               	addwfc	(btemp+11)^0,w,c
 17394  011204  6E2F               	movwf	(btemp+9)^0,c
 17395  011206  0060  F0BB  FFE6   	movff	btemp+8,postinc1
 17396  01120C  0060  F0BF  FFE6   	movff	btemp+9,postinc1
 17397                           
 17398                           ;stkvar	_n @ sp[(-58)+32]
 17399  011212  0EAE               	movlw	low _dbuf
 17400  011214  6E30               	movwf	(btemp+10)^0,c
 17401  011216  0E03               	movlw	high _dbuf
 17402  011218  6E31               	movwf	(btemp+11)^0,c
 17403  01121A  0EE6               	movlw	-26
 17404  01121C  50E3               	movf	plusw1,w,c
 17405  01121E  2630               	addwf	(btemp+10)^0,f,c
 17406  011220  0EE7               	movlw	-25
 17407  011222  50E3               	movf	plusw1,w,c
 17408  011224  2231               	addwfc	(btemp+11)^0,f,c
 17409  011226  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 17410  01122C  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 17411  011232  EC19  F0CD         	call	_strcpy	;wreg free
 17412  011236  EF16  F081         	goto	l11733
 17413  01123A                     l2187:
 17414                           
 17415                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 17416  01123A  0EC1               	movlw	193
 17417  01123C  26E1               	addwf	fsr1l,f,c
 17418  01123E  0EFF               	movlw	255
 17419  011240  22E2               	addwfc	fsr1h,f,c
 17420  011242  0012               	return		;funcret
 17421  011244                     __end_of_efgtoa:
 17422                           	opt callstack 0
 17423                           
 17424 ;; *************** function _tolower *****************
 17425 ;; Defined at:
 17426 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 17427 ;; Parameters:    Size  Location     Type
 17428 ;;  c               2  [STACK] int 
 17429 ;; Auto vars:     Size  Location     Type
 17430 ;;		None
 17431 ;; Return value:  Size  Location     Type
 17432 ;;                  2  [STACK] int 
 17433 ;; Registers used:
 17434 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17435 ;; Tracked objects:
 17436 ;;		On entry : 0/0
 17437 ;;		On exit  : 0/0
 17438 ;;		Unchanged: 0/0
 17439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17444 ;;Total ram usage:        0 bytes
 17445 ;; Hardware stack levels used:    1
 17446 ;; Hardware stack levels required when called:   16
 17447 ;; This function calls:
 17448 ;;		_isupper
 17449 ;; This function is called by:
 17450 ;;		_efgtoa
 17451 ;;		_vfpfcnvrt
 17452 ;; This function uses a reentrant model
 17453 ;;
 17454                           
 17455                           	psect	text56
 17456  01A540                     __ptext56:
 17457                           	opt callstack 0
 17458  01A540                     _tolower:
 17459                           	opt callstack 0
 17460                           
 17461                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17462  01A540  52E6               	movf	postinc1,f,c
 17463  01A542  52E6               	movf	postinc1,f,c
 17464                           
 17465                           ;stkvar	_c @ sp[(-2)+-2]
 17466                           
 17467                           ;incstack = 0
 17468 ;; hardware stack exceeded
 17469  01A544  0EFC               	movlw	-4
 17470  01A546  50E3               	movf	plusw1,w,c
 17471  01A548  0FBF               	addlw	191
 17472  01A54A  6E30               	movwf	(btemp+10)^0,c
 17473  01A54C  0EFD               	movlw	-3
 17474  01A54E  006F FF8C  F031    	movff	plusw1,btemp+11
 17475  01A554  0EFF               	movlw	255
 17476  01A556  2231               	addwfc	(btemp+11)^0,f,c
 17477  01A558  5031               	movf	(btemp+11)^0,w,c
 17478  01A55A  E106               	bnz	u5920
 17479  01A55C  0E1A               	movlw	26
 17480  01A55E  5C30               	subwf	(btemp+10)^0,w,c
 17481  01A560  B0D8               	btfsc	status,0,c
 17482  01A562  D002               	goto	u5920
 17483  01A564  0E01               	movlw	1
 17484  01A566  D001               	goto	u5930
 17485  01A568                     u5920:
 17486  01A568  0E00               	movlw	0
 17487  01A56A                     u5930:
 17488  01A56A  6E30               	movwf	(btemp+10)^0,c
 17489  01A56C  6A31               	clrf	(btemp+11)^0,c
 17490                           
 17491                           ;stkvar	_tolower$6239 @ sp[(-2)+0]
 17492  01A56E  0EFE               	movlw	-2
 17493  01A570  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17494  01A576  0EFF               	movlw	-1
 17495  01A578  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17496                           
 17497                           ;stkvar	_tolower$6239 @ sp[(-2)+0]
 17498  01A57E  0EFE               	movlw	-2
 17499  01A580  006F FF8C  F026    	movff	plusw1,btemp
 17500  01A586  0EFF               	movlw	-1
 17501  01A588  50E3               	movf	plusw1,w,c
 17502  01A58A  1026               	iorwf	btemp^0,w,c
 17503  01A58C  B4D8               	btfsc	status,2,c
 17504  01A58E  D00D               	goto	l7877
 17505                           
 17506                           ;stkvar	_c @ sp[(-2)+-2]
 17507  01A590  0EFC               	movlw	-4
 17508  01A592  006F FF8C  F026    	movff	plusw1,btemp
 17509  01A598  0EFD               	movlw	-3
 17510  01A59A  006F FF8C  F027    	movff	plusw1,btemp+1
 17511  01A5A0  0E20               	movlw	32
 17512  01A5A2  1226               	iorwf	btemp^0,f,c
 17513  01A5A4  0E00               	movlw	0
 17514  01A5A6  1227               	iorwf	(btemp+1)^0,f,c
 17515  01A5A8  D008               	goto	l3459
 17516  01A5AA                     l7877:
 17517                           
 17518                           ;stkvar	_c @ sp[(-2)+-2]
 17519  01A5AA  0EFC               	movlw	-4
 17520  01A5AC  006F FF8C  F026    	movff	plusw1,btemp
 17521  01A5B2  0EFD               	movlw	-3
 17522  01A5B4  006F FF8C  F027    	movff	plusw1,btemp+1
 17523  01A5BA                     l3459:
 17524                           
 17525                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17526  01A5BA  52E5               	movf	postdec1,f,c
 17527  01A5BC  52E5               	movf	postdec1,f,c
 17528  01A5BE  52E5               	movf	postdec1,f,c
 17529  01A5C0  52E5               	movf	postdec1,f,c
 17530  01A5C2  0012               	return		;funcret
 17531  01A5C4                     __end_of_tolower:
 17532                           	opt callstack 0
 17533                           
 17534 ;; *************** function _isupper *****************
 17535 ;; Defined at:
 17536 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 17537 ;; Parameters:    Size  Location     Type
 17538 ;;  c               2  [STACK] int 
 17539 ;; Auto vars:     Size  Location     Type
 17540 ;;		None
 17541 ;; Return value:  Size  Location     Type
 17542 ;;                  2  [STACK] int 
 17543 ;; Registers used:
 17544 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17545 ;; Tracked objects:
 17546 ;;		On entry : 0/0
 17547 ;;		On exit  : 0/0
 17548 ;;		Unchanged: 0/0
 17549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17554 ;;Total ram usage:        0 bytes
 17555 ;; Hardware stack levels used:    1
 17556 ;; Hardware stack levels required when called:   15
 17557 ;; This function calls:
 17558 ;;		Nothing
 17559 ;; This function is called by:
 17560 ;;		_efgtoa
 17561 ;;		_xtoa
 17562 ;;		_vfpfcnvrt
 17563 ;;		_tolower
 17564 ;; This function uses a reentrant model
 17565 ;;
 17566                           
 17567                           	psect	text57
 17568  01B0F8                     __ptext57:
 17569                           	opt callstack 0
 17570  01B0F8                     _isupper:
 17571                           	opt callstack 0
 17572                           
 17573                           ;stkvar	_c @ sp[(0)+-2]
 17574                           
 17575                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17576                           ;incstack = 0
 17577 ;; hardware stack exceeded
 17578  01B0F8  0EFE               	movlw	-2
 17579  01B0FA  50E3               	movf	plusw1,w,c
 17580  01B0FC  0FBF               	addlw	191
 17581  01B0FE  6E30               	movwf	(btemp+10)^0,c
 17582  01B100  0EFF               	movlw	-1
 17583  01B102  006F FF8C  F031    	movff	plusw1,btemp+11
 17584  01B108  0EFF               	movlw	255
 17585  01B10A  2231               	addwfc	(btemp+11)^0,f,c
 17586  01B10C  5031               	movf	(btemp+11)^0,w,c
 17587  01B10E  E106               	bnz	u5320
 17588  01B110  0E1A               	movlw	26
 17589  01B112  5C30               	subwf	(btemp+10)^0,w,c
 17590  01B114  B0D8               	btfsc	status,0,c
 17591  01B116  D002               	goto	u5320
 17592  01B118  0E01               	movlw	1
 17593  01B11A  D001               	goto	u5330
 17594  01B11C                     u5320:
 17595  01B11C  0E00               	movlw	0
 17596  01B11E                     u5330:
 17597  01B11E  6E26               	movwf	btemp^0,c
 17598  01B120  6A27               	clrf	(btemp+1)^0,c
 17599                           
 17600                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17601  01B122  52E5               	movf	postdec1,f,c
 17602  01B124  52E5               	movf	postdec1,f,c
 17603  01B126  0012               	return		;funcret
 17604  01B128                     __end_of_isupper:
 17605                           	opt callstack 0
 17606                           
 17607 ;; *************** function _strcpy *****************
 17608 ;; Defined at:
 17609 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 17610 ;; Parameters:    Size  Location     Type
 17611 ;;  dest            2  [STACK] PTR unsigned char 
 17612 ;;		 -> dbuf(80), 
 17613 ;;  src             2  [STACK] PTR const unsigned char 
 17614 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17615 ;;		 -> dbuf(80), 
 17616 ;; Auto vars:     Size  Location     Type
 17617 ;;  d               2  [STACK] PTR unsigned char 
 17618 ;;		 -> dbuf(80), 
 17619 ;;  s               2  [STACK] PTR const unsigned char 
 17620 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17621 ;;		 -> dbuf(80), 
 17622 ;; Return value:  Size  Location     Type
 17623 ;;                  2  [STACK] PTR unsigned char 
 17624 ;; Registers used:
 17625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 17626 ;; Tracked objects:
 17627 ;;		On entry : 0/0
 17628 ;;		On exit  : 0/0
 17629 ;;		Unchanged: 0/0
 17630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17635 ;;Total ram usage:        0 bytes
 17636 ;; Hardware stack levels used:    1
 17637 ;; Hardware stack levels required when called:   15
 17638 ;; This function calls:
 17639 ;;		Nothing
 17640 ;; This function is called by:
 17641 ;;		_efgtoa
 17642 ;; This function uses a reentrant model
 17643 ;;
 17644                           
 17645                           	psect	text58
 17646  019A32                     __ptext58:
 17647                           	opt callstack 0
 17648  019A32                     _strcpy:
 17649                           	opt callstack 0
 17650                           
 17651                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17652  019A32  52E6               	movf	postinc1,f,c
 17653  019A34  52E6               	movf	postinc1,f,c
 17654  019A36  52E6               	movf	postinc1,f,c
 17655  019A38  52E6               	movf	postinc1,f,c
 17656                           
 17657                           ;stkvar	_src @ sp[(-4)+-4]
 17658                           
 17659                           ;incstack = 0
 17660 ;; hardware stack exceeded
 17661  019A3A  0EF8               	movlw	-8
 17662  019A3C  006F FF8C  F030    	movff	plusw1,btemp+10
 17663  019A42  0EF9               	movlw	-7
 17664  019A44  006F FF8C  F031    	movff	plusw1,btemp+11
 17665                           
 17666                           ;stkvar	_s @ sp[(-4)+2]
 17667  019A4A  0EFF               	movlw	-1
 17668  019A4C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17669  019A52  0EFE               	movlw	-2
 17670  019A54  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17671                           
 17672                           ;stkvar	_dest @ sp[(-4)+-2]
 17673  019A5A  0EFA               	movlw	-6
 17674  019A5C  006F FF8C  F030    	movff	plusw1,btemp+10
 17675  019A62  0EFB               	movlw	-5
 17676  019A64  006F FF8C  F031    	movff	plusw1,btemp+11
 17677                           
 17678                           ;stkvar	_d @ sp[(-4)+0]
 17679  019A6A  0EFD               	movlw	-3
 17680  019A6C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17681  019A72  0EFC               	movlw	-4
 17682  019A74  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17683  019A7A                     l11565:
 17684                           
 17685                           ;stkvar	_s @ sp[(-4)+2]
 17686  019A7A  50E1               	movf	fsr1l,w,c
 17687  019A7C  0FFE               	addlw	-2
 17688  019A7E  6ED9               	movwf	fsr2l,c
 17689  019A80  50E2               	movf	fsr1h,w,c
 17690  019A82  6EDA               	movwf	fsr2h,c
 17691  019A84  0EFF               	movlw	255
 17692  019A86  22DA               	addwfc	fsr2h,f,c
 17693  019A88  006F FF7C  F030    	movff	indf2,btemp+10
 17694  019A8E  0E01               	movlw	1
 17695  019A90  26DE               	addwf	postinc2,f,c
 17696  019A92  006F FF7C  F031    	movff	indf2,btemp+11
 17697  019A98  0E00               	movlw	0
 17698  019A9A  22DD               	addwfc	postdec2,f,c
 17699  019A9C  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 17700  019AA2  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 17701  019AA8  0E00               	movlw	low (__mediumconst shr (0+16))
 17702  019AAA  6EF8               	movwf	tblptru,c
 17703                           
 17704                           ;stkvar	_d @ sp[(-4)+0]
 17705  019AAC  50E1               	movf	fsr1l,w,c
 17706  019AAE  0FFC               	addlw	-4
 17707  019AB0  6ED9               	movwf	fsr2l,c
 17708  019AB2  50E2               	movf	fsr1h,w,c
 17709  019AB4  6EDA               	movwf	fsr2h,c
 17710  019AB6  0EFF               	movlw	255
 17711  019AB8  22DA               	addwfc	fsr2h,f,c
 17712  019ABA  006F FF7C  F030    	movff	indf2,btemp+10
 17713  019AC0  0E01               	movlw	1
 17714  019AC2  26DE               	addwf	postinc2,f,c
 17715  019AC4  006F FF7C  F031    	movff	indf2,btemp+11
 17716  019ACA  0E00               	movlw	0
 17717  019ACC  22DD               	addwfc	postdec2,f,c
 17718  019ACE  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 17719  019AD4  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 17720  019ADA  0E1F               	movlw	(high __ramtop+-1)
 17721  019ADC  64F7               	cpfsgt	tblptrh,c
 17722  019ADE  D003               	bra	u10547
 17723  019AE0  0008               	tblrd		*
 17724  019AE2  50F5               	movf	tablat,w,c
 17725  019AE4  D007               	bra	u10540
 17726  019AE6                     u10547:
 17727  019AE6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17728  019AEC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17729  019AF2  50EF               	movf	indf0,w,c
 17730  019AF4                     u10540:
 17731  019AF4  6EDF               	movwf	indf2,c
 17732  019AF6  50DF               	movf	indf2,w,c
 17733  019AF8  A4D8               	btfss	status,2,c
 17734  019AFA  D7BF               	goto	l11565
 17735                           
 17736                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 17737  019AFC  0EF8               	movlw	248
 17738  019AFE  26E1               	addwf	fsr1l,f,c
 17739  019B00  0EFF               	movlw	255
 17740  019B02  22E2               	addwfc	fsr1h,f,c
 17741  019B04  0012               	return		;funcret
 17742  019B06                     __end_of_strcpy:
 17743                           	opt callstack 0
 17744                           
 17745 ;; *************** function _floorf *****************
 17746 ;; Defined at:
 17747 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 17748 ;; Parameters:    Size  Location     Type
 17749 ;;  x               4  [STACK] float 
 17750 ;; Auto vars:     Size  Location     Type
 17751 ;;  u               4  [STACK] struct .
 17752 ;;  m               4  [STACK] unsigned long 
 17753 ;;  e               2  [STACK] int 
 17754 ;; Return value:  Size  Location     Type
 17755 ;;                  4  [STACK] float 
 17756 ;; Registers used:
 17757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 17758 ;; Tracked objects:
 17759 ;;		On entry : 0/0
 17760 ;;		On exit  : 0/0
 17761 ;;		Unchanged: 0/0
 17762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17767 ;;Total ram usage:        0 bytes
 17768 ;; Hardware stack levels used:    1
 17769 ;; Hardware stack levels required when called:   15
 17770 ;; This function calls:
 17771 ;;		Nothing
 17772 ;; This function is called by:
 17773 ;;		_efgtoa
 17774 ;; This function uses a reentrant model
 17775 ;;
 17776                           
 17777                           	psect	text59
 17778  015FAC                     __ptext59:
 17779                           	opt callstack 0
 17780  015FAC                     _floorf:
 17781                           	opt callstack 0
 17782                           
 17783                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17784  015FAC  0E0A               	movlw	10
 17785  015FAE  26E1               	addwf	fsr1l,f,c
 17786  015FB0  0E00               	movlw	0
 17787  015FB2  22E2               	addwfc	fsr1h,f,c
 17788                           
 17789                           ;incstack = 0
 17790 ;; hardware stack exceeded
 17791  015FB4  0060  F1C8  F02E   	movff	floorf@F524,btemp+8
 17792  015FBA  0060  F1CC  F02F   	movff	floorf@F524+1,btemp+9
 17793  015FC0  0060  F1D0  F030   	movff	floorf@F524+2,btemp+10
 17794  015FC6  0060  F1D4  F031   	movff	floorf@F524+3,btemp+11
 17795                           
 17796                           ;stkvar	_u @ sp[(-10)+0]
 17797  015FCC  0EF6               	movlw	-10
 17798  015FCE  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 17799  015FD4  0EF7               	movlw	-9
 17800  015FD6  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 17801  015FDC  0EF8               	movlw	-8
 17802  015FDE  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17803  015FE4  0EF9               	movlw	-7
 17804  015FE6  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17805                           
 17806                           ;stkvar	_x @ sp[(-10)+-4]
 17807  015FEC  0EF2               	movlw	-14
 17808  015FEE  006F FF8C  F02E    	movff	plusw1,btemp+8
 17809  015FF4  0EF3               	movlw	-13
 17810  015FF6  006F FF8C  F02F    	movff	plusw1,btemp+9
 17811  015FFC  0EF4               	movlw	-12
 17812  015FFE  006F FF8C  F030    	movff	plusw1,btemp+10
 17813  016004  0EF5               	movlw	-11
 17814  016006  006F FF8C  F031    	movff	plusw1,btemp+11
 17815                           
 17816                           ;stkvar	_u @ sp[(-10)+0]
 17817  01600C  0EF6               	movlw	-10
 17818  01600E  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 17819  016014  0EF7               	movlw	-9
 17820  016016  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 17821  01601C  0EF8               	movlw	-8
 17822  01601E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17823  016024  0EF9               	movlw	-7
 17824  016026  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17825  01602C  0E81               	movlw	129
 17826  01602E  6E30               	movwf	(btemp+10)^0,c
 17827  016030  0EFF               	movlw	255
 17828  016032  6E31               	movwf	(btemp+11)^0,c
 17829                           
 17830                           ;stkvar	_u @ sp[(-10)+0]
 17831  016034  0EF6               	movlw	-10
 17832  016036  006F FF8C  F02A    	movff	plusw1,btemp+4
 17833  01603C  0EF7               	movlw	-9
 17834  01603E  006F FF8C  F02B    	movff	plusw1,btemp+5
 17835  016044  0EF8               	movlw	-8
 17836  016046  006F FF8C  F02C    	movff	plusw1,btemp+6
 17837  01604C  0EF9               	movlw	-7
 17838  01604E  006F FF8C  F02D    	movff	plusw1,btemp+7
 17839  016054  0E18               	movlw	24
 17840  016056  D005               	goto	u5950
 17841  016058                     u5955:
 17842  016058  90D8               	bcf	status,0,c
 17843  01605A  322D               	rrcf	(btemp+7)^0,f,c
 17844  01605C  322C               	rrcf	(btemp+6)^0,f,c
 17845  01605E  322B               	rrcf	(btemp+5)^0,f,c
 17846  016060  322A               	rrcf	(btemp+4)^0,f,c
 17847  016062                     u5950:
 17848  016062  2EE8               	decfsz	wreg,f,c
 17849  016064  D7F9               	goto	u5955
 17850  016066  0060  F0A8  F02E   	movff	btemp+4,btemp+8
 17851  01606C  0060  F0AC  F02F   	movff	btemp+5,btemp+9
 17852  016072  0EFF               	movlw	255
 17853  016074  162E               	andwf	(btemp+8)^0,f,c
 17854  016076  0E00               	movlw	0
 17855  016078  162F               	andwf	(btemp+9)^0,f,c
 17856  01607A  5030               	movf	(btemp+10)^0,w,c
 17857  01607C  262E               	addwf	(btemp+8)^0,f,c
 17858  01607E  5031               	movf	(btemp+11)^0,w,c
 17859  016080  222F               	addwfc	(btemp+9)^0,f,c
 17860                           
 17861                           ;stkvar	_e @ sp[(-10)+8]
 17862  016082  0EFE               	movlw	-2
 17863  016084  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 17864  01608A  0EFF               	movlw	-1
 17865  01608C  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 17866                           
 17867                           ;stkvar	_e @ sp[(-10)+8]
 17868  016092  0EFF               	movlw	-1
 17869  016094  BEE3               	btfsc	plusw1,7,c
 17870  016096  D019               	goto	l7891
 17871  016098  0EFF               	movlw	-1
 17872  01609A  50E3               	movf	plusw1,w,c
 17873  01609C  E108               	bnz	u5960
 17874  01609E  0EFE               	movlw	-2
 17875  0160A0  006F FF8C  F026    	movff	plusw1,btemp
 17876  0160A6  0E17               	movlw	23
 17877  0160A8  5E26               	subwf	btemp^0,f,c
 17878  0160AA  A0D8               	btfss	status,0,c
 17879  0160AC  D00E               	goto	l7891
 17880  0160AE                     u5960:
 17881                           
 17882                           ;stkvar	_x @ sp[(-10)+-4]
 17883  0160AE  0EF2               	movlw	-14
 17884  0160B0  006F FF8C  F026    	movff	plusw1,btemp
 17885  0160B6  0EF3               	movlw	-13
 17886  0160B8  006F FF8C  F027    	movff	plusw1,btemp+1
 17887  0160BE  0EF4               	movlw	-12
 17888  0160C0  006F FF8C  F028    	movff	plusw1,btemp+2
 17889  0160C6  0EF5               	movlw	-11
 17890  0160C8  D11F               	goto	L20
 17891  0160CA                     l7891:
 17892                           
 17893                           ;stkvar	_e @ sp[(-10)+8]
 17894  0160CA  0EFF               	movlw	-1
 17895  0160CC  BEE3               	btfsc	plusw1,7,c
 17896  0160CE  D0B4               	goto	l7907
 17897                           
 17898                           ;stkvar	_e @ sp[(-10)+8]
 17899  0160D0  0EFE               	movlw	-2
 17900  0160D2  006F FF8C  F031    	movff	plusw1,btemp+11
 17901  0160D8  0EFF               	movlw	255
 17902  0160DA  6E2A               	movwf	(btemp+4)^0,c
 17903  0160DC  0EFF               	movlw	255
 17904  0160DE  6E2B               	movwf	(btemp+5)^0,c
 17905  0160E0  0E7F               	movlw	127
 17906  0160E2  6E2C               	movwf	(btemp+6)^0,c
 17907  0160E4  0E00               	movlw	0
 17908  0160E6  6E2D               	movwf	(btemp+7)^0,c
 17909  0160E8                     u5985:
 17910  0160E8  6631               	tstfsz	(btemp+11)^0,c
 17911  0160EA  D001               	goto	u5986
 17912  0160EC  D007               	goto	u5987
 17913  0160EE                     u5986:
 17914  0160EE  342D               	rlcf	(btemp+7)^0,w,c
 17915  0160F0  322D               	rrcf	(btemp+7)^0,f,c
 17916  0160F2  322C               	rrcf	(btemp+6)^0,f,c
 17917  0160F4  322B               	rrcf	(btemp+5)^0,f,c
 17918  0160F6  322A               	rrcf	(btemp+4)^0,f,c
 17919  0160F8  2E31               	decfsz	(btemp+11)^0,f,c
 17920  0160FA  D7F6               	goto	u5985
 17921  0160FC                     u5987:
 17922                           
 17923                           ;stkvar	_m @ sp[(-10)+4]
 17924  0160FC  0EFA               	movlw	-6
 17925  0160FE  0060  F0AB  FFE3   	movff	btemp+4,plusw1
 17926  016104  0EFB               	movlw	-5
 17927  016106  0060  F0AF  FFE3   	movff	btemp+5,plusw1
 17928  01610C  0EFC               	movlw	-4
 17929  01610E  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 17930  016114  0EFD               	movlw	-3
 17931  016116  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 17932                           
 17933                           ;stkvar	_m @ sp[(-10)+4]
 17934                           ;stkvar	_u @ sp[(-10)+0]
 17935  01611C  0EF6               	movlw	-10
 17936  01611E  006F FF8C  F02E    	movff	plusw1,btemp+8
 17937  016124  0EF7               	movlw	-9
 17938  016126  006F FF8C  F02F    	movff	plusw1,btemp+9
 17939  01612C  0EF8               	movlw	-8
 17940  01612E  006F FF8C  F030    	movff	plusw1,btemp+10
 17941  016134  0EF9               	movlw	-7
 17942  016136  006F FF8C  F031    	movff	plusw1,btemp+11
 17943  01613C  0EFA               	movlw	-6
 17944  01613E  50E3               	movf	plusw1,w,c
 17945  016140  162E               	andwf	(btemp+8)^0,f,c
 17946  016142  0EFB               	movlw	-5
 17947  016144  50E3               	movf	plusw1,w,c
 17948  016146  162F               	andwf	(btemp+9)^0,f,c
 17949  016148  0EFC               	movlw	-4
 17950  01614A  50E3               	movf	plusw1,w,c
 17951  01614C  1630               	andwf	(btemp+10)^0,f,c
 17952  01614E  0EFD               	movlw	-3
 17953  016150  50E3               	movf	plusw1,w,c
 17954  016152  1631               	andwf	(btemp+11)^0,f,c
 17955  016154  502E               	movf	(btemp+8)^0,w,c
 17956  016156  102F               	iorwf	(btemp+9)^0,w,c
 17957  016158  1030               	iorwf	(btemp+10)^0,w,c
 17958  01615A  1031               	iorwf	(btemp+11)^0,w,c
 17959  01615C  B4D8               	btfsc	status,2,c
 17960  01615E  D7A7               	goto	u5960
 17961                           
 17962                           ;stkvar	_u @ sp[(-10)+0]
 17963  016160  0EF6               	movlw	-10
 17964  016162  006F FF8C  F02E    	movff	plusw1,btemp+8
 17965  016168  0EF7               	movlw	-9
 17966  01616A  006F FF8C  F02F    	movff	plusw1,btemp+9
 17967  016170  0EF8               	movlw	-8
 17968  016172  006F FF8C  F030    	movff	plusw1,btemp+10
 17969  016178  0EF9               	movlw	-7
 17970  01617A  006F FF8C  F031    	movff	plusw1,btemp+11
 17971  016180  0E20               	movlw	32
 17972  016182  D005               	goto	u6000
 17973  016184                     u6005:
 17974  016184  90D8               	bcf	status,0,c
 17975  016186  3231               	rrcf	(btemp+11)^0,f,c
 17976  016188  3230               	rrcf	(btemp+10)^0,f,c
 17977  01618A  322F               	rrcf	(btemp+9)^0,f,c
 17978  01618C  322E               	rrcf	(btemp+8)^0,f,c
 17979  01618E                     u6000:
 17980  01618E  2EE8               	decfsz	wreg,f,c
 17981  016190  D7F9               	goto	u6005
 17982  016192  502E               	movf	(btemp+8)^0,w,c
 17983  016194  B4D8               	btfsc	status,2,c
 17984  016196  D028               	goto	l7905
 17985                           
 17986                           ;stkvar	_m @ sp[(-10)+4]
 17987                           ;stkvar	_u @ sp[(-10)+0]
 17988  016198  0EF6               	movlw	-10
 17989  01619A  50E3               	movf	plusw1,w,c
 17990  01619C  6E26               	movwf	btemp^0,c
 17991  01619E  0EFA               	movlw	-6
 17992  0161A0  50E3               	movf	plusw1,w,c
 17993  0161A2  2626               	addwf	btemp^0,f,c
 17994  0161A4  0EF6               	movlw	-10
 17995  0161A6  0060  F09B  FFE3   	movff	btemp,plusw1
 17996  0161AC  0EF7               	movlw	-9
 17997  0161AE  50E3               	movf	plusw1,w,c
 17998  0161B0  6E26               	movwf	btemp^0,c
 17999  0161B2  0EFB               	movlw	-5
 18000  0161B4  50E3               	movf	plusw1,w,c
 18001  0161B6  2226               	addwfc	btemp^0,f,c
 18002  0161B8  0EF7               	movlw	-9
 18003  0161BA  0060  F09B  FFE3   	movff	btemp,plusw1
 18004  0161C0  0EF8               	movlw	-8
 18005  0161C2  50E3               	movf	plusw1,w,c
 18006  0161C4  6E26               	movwf	btemp^0,c
 18007  0161C6  0EFC               	movlw	-4
 18008  0161C8  50E3               	movf	plusw1,w,c
 18009  0161CA  2226               	addwfc	btemp^0,f,c
 18010  0161CC  0EF8               	movlw	-8
 18011  0161CE  0060  F09B  FFE3   	movff	btemp,plusw1
 18012  0161D4  0EF9               	movlw	-7
 18013  0161D6  50E3               	movf	plusw1,w,c
 18014  0161D8  6E26               	movwf	btemp^0,c
 18015  0161DA  0EFD               	movlw	-3
 18016  0161DC  50E3               	movf	plusw1,w,c
 18017  0161DE  2226               	addwfc	btemp^0,f,c
 18018  0161E0  0EF9               	movlw	-7
 18019  0161E2  0060  F09B  FFE3   	movff	btemp,plusw1
 18020  0161E8                     l7905:
 18021                           
 18022                           ;stkvar	_m @ sp[(-10)+4]
 18023  0161E8  0EFA               	movlw	-6
 18024  0161EA  006F FF8C  F02E    	movff	plusw1,btemp+8
 18025  0161F0  0EFB               	movlw	-5
 18026  0161F2  006F FF8C  F02F    	movff	plusw1,btemp+9
 18027  0161F8  0EFC               	movlw	-4
 18028  0161FA  006F FF8C  F030    	movff	plusw1,btemp+10
 18029  016200  0EFD               	movlw	-3
 18030  016202  006F FF8C  F031    	movff	plusw1,btemp+11
 18031  016208  1C2E               	comf	(btemp+8)^0,w,c
 18032  01620A  6E2A               	movwf	(btemp+4)^0,c
 18033  01620C  1C2F               	comf	(btemp+9)^0,w,c
 18034  01620E  6E2B               	movwf	(btemp+5)^0,c
 18035  016210  1C30               	comf	(btemp+10)^0,w,c
 18036  016212  6E2C               	movwf	(btemp+6)^0,c
 18037  016214  1C31               	comf	(btemp+11)^0,w,c
 18038  016216  6E2D               	movwf	(btemp+7)^0,c
 18039                           
 18040                           ;stkvar	_u @ sp[(-10)+0]
 18041  016218  50E1               	movf	fsr1l,w,c
 18042  01621A  0FF6               	addlw	-10
 18043  01621C  6ED9               	movwf	fsr2l,c
 18044  01621E  50E2               	movf	fsr1h,w,c
 18045  016220  6EDA               	movwf	fsr2h,c
 18046  016222  0EFF               	movlw	255
 18047  016224  22DA               	addwfc	fsr2h,f,c
 18048  016226  502A               	movf	(btemp+4)^0,w,c
 18049  016228  16DE               	andwf	postinc2,f,c
 18050  01622A  502B               	movf	(btemp+5)^0,w,c
 18051  01622C  16DE               	andwf	postinc2,f,c
 18052  01622E  502C               	movf	(btemp+6)^0,w,c
 18053  016230  16DE               	andwf	postinc2,f,c
 18054  016232  502D               	movf	(btemp+7)^0,w,c
 18055  016234  16DE               	andwf	postinc2,f,c
 18056  016236  D05B               	goto	l7915
 18057  016238                     l7907:
 18058                           
 18059                           ;stkvar	_u @ sp[(-10)+0]
 18060  016238  0EF6               	movlw	-10
 18061  01623A  006F FF8C  F02E    	movff	plusw1,btemp+8
 18062  016240  0EF7               	movlw	-9
 18063  016242  006F FF8C  F02F    	movff	plusw1,btemp+9
 18064  016248  0EF8               	movlw	-8
 18065  01624A  006F FF8C  F030    	movff	plusw1,btemp+10
 18066  016250  0EF9               	movlw	-7
 18067  016252  006F FF8C  F031    	movff	plusw1,btemp+11
 18068  016258  0E20               	movlw	32
 18069  01625A  D005               	goto	u6020
 18070  01625C                     u6025:
 18071  01625C  90D8               	bcf	status,0,c
 18072  01625E  3231               	rrcf	(btemp+11)^0,f,c
 18073  016260  3230               	rrcf	(btemp+10)^0,f,c
 18074  016262  322F               	rrcf	(btemp+9)^0,f,c
 18075  016264  322E               	rrcf	(btemp+8)^0,f,c
 18076  016266                     u6020:
 18077  016266  2EE8               	decfsz	wreg,f,c
 18078  016268  D7F9               	goto	u6025
 18079  01626A  662E               	tstfsz	(btemp+8)^0,c
 18080  01626C  D009               	goto	l7911
 18081                           
 18082                           ;stkvar	_u @ sp[(-10)+0]
 18083  01626E  0EF6               	movlw	-10
 18084  016270  6AE3               	clrf	plusw1,c
 18085  016272  0EF7               	movlw	-9
 18086  016274  6AE3               	clrf	plusw1,c
 18087  016276  0EF8               	movlw	-8
 18088  016278  6AE3               	clrf	plusw1,c
 18089  01627A  0EF9               	movlw	-7
 18090  01627C  6AE3               	clrf	plusw1,c
 18091  01627E  D037               	goto	l7915
 18092  016280                     l7911:
 18093                           
 18094                           ;stkvar	_u @ sp[(-10)+0]
 18095  016280  0EF6               	movlw	-10
 18096  016282  006F FF8C  F02E    	movff	plusw1,btemp+8
 18097  016288  0EF7               	movlw	-9
 18098  01628A  006F FF8C  F02F    	movff	plusw1,btemp+9
 18099  016290  0EF8               	movlw	-8
 18100  016292  006F FF8C  F030    	movff	plusw1,btemp+10
 18101  016298  0EF9               	movlw	-7
 18102  01629A  006F FF8C  F031    	movff	plusw1,btemp+11
 18103  0162A0  90D8               	bcf	status,0,c
 18104  0162A2  342E               	rlcf	(btemp+8)^0,w,c
 18105  0162A4  6E2A               	movwf	(btemp+4)^0,c
 18106  0162A6  342F               	rlcf	(btemp+9)^0,w,c
 18107  0162A8  6E2B               	movwf	(btemp+5)^0,c
 18108  0162AA  3430               	rlcf	(btemp+10)^0,w,c
 18109  0162AC  6E2C               	movwf	(btemp+6)^0,c
 18110  0162AE  3431               	rlcf	(btemp+11)^0,w,c
 18111  0162B0  6E2D               	movwf	(btemp+7)^0,c
 18112  0162B2  502A               	movf	(btemp+4)^0,w,c
 18113  0162B4  102B               	iorwf	(btemp+5)^0,w,c
 18114  0162B6  102C               	iorwf	(btemp+6)^0,w,c
 18115  0162B8  102D               	iorwf	(btemp+7)^0,w,c
 18116  0162BA  B4D8               	btfsc	status,2,c
 18117  0162BC  D018               	goto	l7915
 18118  0162BE  0E00               	movlw	0
 18119  0162C0  6E2E               	movwf	(btemp+8)^0,c
 18120  0162C2  0E00               	movlw	0
 18121  0162C4  6E2F               	movwf	(btemp+9)^0,c
 18122  0162C6  0E80               	movlw	128
 18123  0162C8  6E30               	movwf	(btemp+10)^0,c
 18124  0162CA  0EBF               	movlw	191
 18125  0162CC  6E31               	movwf	(btemp+11)^0,c
 18126                           
 18127                           ;stkvar	_u @ sp[(-10)+0]
 18128  0162CE  0EF6               	movlw	-10
 18129  0162D0  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18130  0162D6  0EF7               	movlw	-9
 18131  0162D8  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 18132  0162DE  0EF8               	movlw	-8
 18133  0162E0  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 18134  0162E6  0EF9               	movlw	-7
 18135  0162E8  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 18136  0162EE                     l7915:
 18137                           
 18138                           ;stkvar	_u @ sp[(-10)+0]
 18139  0162EE  0EF6               	movlw	-10
 18140  0162F0  006F FF8C  F026    	movff	plusw1,btemp
 18141  0162F6  0EF7               	movlw	-9
 18142  0162F8  006F FF8C  F027    	movff	plusw1,btemp+1
 18143  0162FE  0EF8               	movlw	-8
 18144  016300  006F FF8C  F028    	movff	plusw1,btemp+2
 18145  016306  0EF9               	movlw	-7
 18146  016308                     L20:
 18147  016308  006F FF8C  F029    	movff	plusw1,btemp+3
 18148                           
 18149                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18150  01630E  0EF2               	movlw	242
 18151  016310  26E1               	addwf	fsr1l,f,c
 18152  016312  0EFF               	movlw	255
 18153  016314  22E2               	addwfc	fsr1h,f,c
 18154  016316  0012               	return		;funcret
 18155  016318                     __end_of_floorf:
 18156                           	opt callstack 0
 18157                           
 18158 ;; *************** function ___fpclassifyf *****************
 18159 ;; Defined at:
 18160 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18161 ;; Parameters:    Size  Location     Type
 18162 ;;  x               4  [STACK] float 
 18163 ;; Auto vars:     Size  Location     Type
 18164 ;;  u               4  [STACK] struct .
 18165 ;;  e               2  [STACK] int 
 18166 ;; Return value:  Size  Location     Type
 18167 ;;                  2  [STACK] int 
 18168 ;; Registers used:
 18169 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18170 ;; Tracked objects:
 18171 ;;		On entry : 0/0
 18172 ;;		On exit  : 0/0
 18173 ;;		Unchanged: 0/0
 18174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18179 ;;Total ram usage:        0 bytes
 18180 ;; Hardware stack levels used:    1
 18181 ;; Hardware stack levels required when called:   15
 18182 ;; This function calls:
 18183 ;;		Nothing
 18184 ;; This function is called by:
 18185 ;;		_efgtoa
 18186 ;; This function uses a reentrant model
 18187 ;;
 18188                           
 18189                           	psect	text60
 18190  017FE8                     __ptext60:
 18191                           	opt callstack 0
 18192  017FE8                     ___fpclassifyf:
 18193                           	opt callstack 0
 18194                           
 18195                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18196  017FE8  0E06               	movlw	6
 18197  017FEA  26E1               	addwf	fsr1l,f,c
 18198  017FEC  0E00               	movlw	0
 18199  017FEE  22E2               	addwfc	fsr1h,f,c
 18200                           
 18201                           ;incstack = 0
 18202 ;; hardware stack exceeded
 18203  017FF0  0060  F1E8  F02E   	movff	___fpclassifyf@F463,btemp+8
 18204  017FF6  0060  F1EC  F02F   	movff	___fpclassifyf@F463+1,btemp+9
 18205  017FFC  0060  F1F0  F030   	movff	___fpclassifyf@F463+2,btemp+10
 18206  018002  0060  F1F4  F031   	movff	___fpclassifyf@F463+3,btemp+11
 18207                           
 18208                           ;stkvar	_u @ sp[(-6)+0]
 18209  018008  0EFA               	movlw	-6
 18210  01800A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18211  018010  0EFB               	movlw	-5
 18212  018012  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 18213  018018  0EFC               	movlw	-4
 18214  01801A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 18215  018020  0EFD               	movlw	-3
 18216  018022  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 18217                           
 18218                           ;stkvar	_x @ sp[(-6)+-4]
 18219  018028  0EF6               	movlw	-10
 18220  01802A  006F FF8C  F02E    	movff	plusw1,btemp+8
 18221  018030  0EF7               	movlw	-9
 18222  018032  006F FF8C  F02F    	movff	plusw1,btemp+9
 18223  018038  0EF8               	movlw	-8
 18224  01803A  006F FF8C  F030    	movff	plusw1,btemp+10
 18225  018040  0EF9               	movlw	-7
 18226  018042  006F FF8C  F031    	movff	plusw1,btemp+11
 18227                           
 18228                           ;stkvar	_u @ sp[(-6)+0]
 18229  018048  0EFA               	movlw	-6
 18230  01804A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18231  018050  0EFB               	movlw	-5
 18232  018052  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 18233  018058  0EFC               	movlw	-4
 18234  01805A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 18235  018060  0EFD               	movlw	-3
 18236  018062  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 18237                           
 18238                           ;stkvar	_u @ sp[(-6)+0]
 18239  018068  0EFA               	movlw	-6
 18240  01806A  006F FF8C  F02E    	movff	plusw1,btemp+8
 18241  018070  0EFB               	movlw	-5
 18242  018072  006F FF8C  F02F    	movff	plusw1,btemp+9
 18243  018078  0EFC               	movlw	-4
 18244  01807A  006F FF8C  F030    	movff	plusw1,btemp+10
 18245  018080  0EFD               	movlw	-3
 18246  018082  006F FF8C  F031    	movff	plusw1,btemp+11
 18247  018088  0E18               	movlw	24
 18248  01808A  D005               	goto	u5830
 18249  01808C                     u5835:
 18250  01808C  90D8               	bcf	status,0,c
 18251  01808E  3231               	rrcf	(btemp+11)^0,f,c
 18252  018090  3230               	rrcf	(btemp+10)^0,f,c
 18253  018092  322F               	rrcf	(btemp+9)^0,f,c
 18254  018094  322E               	rrcf	(btemp+8)^0,f,c
 18255  018096                     u5830:
 18256  018096  2EE8               	decfsz	wreg,f,c
 18257  018098  D7F9               	goto	u5835
 18258  01809A  0060  F0B8  F02C   	movff	btemp+8,btemp+6
 18259  0180A0  0060  F0BC  F02D   	movff	btemp+9,btemp+7
 18260  0180A6  0EFF               	movlw	255
 18261  0180A8  162C               	andwf	(btemp+6)^0,f,c
 18262  0180AA  0E00               	movlw	0
 18263  0180AC  162D               	andwf	(btemp+7)^0,f,c
 18264                           
 18265                           ;stkvar	_e @ sp[(-6)+4]
 18266  0180AE  0EFE               	movlw	-2
 18267  0180B0  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 18268  0180B6  0EFF               	movlw	-1
 18269  0180B8  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 18270                           
 18271                           ;stkvar	_e @ sp[(-6)+4]
 18272  0180BE  0EFE               	movlw	-2
 18273  0180C0  006F FF8C  F026    	movff	plusw1,btemp
 18274  0180C6  0EFF               	movlw	-1
 18275  0180C8  50E3               	movf	plusw1,w,c
 18276  0180CA  1026               	iorwf	btemp^0,w,c
 18277  0180CC  A4D8               	btfss	status,2,c
 18278  0180CE  D023               	goto	l7853
 18279                           
 18280                           ;stkvar	_u @ sp[(-6)+0]
 18281  0180D0  0EFA               	movlw	-6
 18282  0180D2  006F FF8C  F02E    	movff	plusw1,btemp+8
 18283  0180D8  0EFB               	movlw	-5
 18284  0180DA  006F FF8C  F02F    	movff	plusw1,btemp+9
 18285  0180E0  0EFC               	movlw	-4
 18286  0180E2  006F FF8C  F030    	movff	plusw1,btemp+10
 18287  0180E8  0EFD               	movlw	-3
 18288  0180EA  006F FF8C  F031    	movff	plusw1,btemp+11
 18289  0180F0  90D8               	bcf	status,0,c
 18290  0180F2  342E               	rlcf	(btemp+8)^0,w,c
 18291  0180F4  6E2A               	movwf	(btemp+4)^0,c
 18292  0180F6  342F               	rlcf	(btemp+9)^0,w,c
 18293  0180F8  6E2B               	movwf	(btemp+5)^0,c
 18294  0180FA  3430               	rlcf	(btemp+10)^0,w,c
 18295  0180FC  6E2C               	movwf	(btemp+6)^0,c
 18296  0180FE  3431               	rlcf	(btemp+11)^0,w,c
 18297  018100  6E2D               	movwf	(btemp+7)^0,c
 18298  018102  502A               	movf	(btemp+4)^0,w,c
 18299  018104  102B               	iorwf	(btemp+5)^0,w,c
 18300  018106  102C               	iorwf	(btemp+6)^0,w,c
 18301  018108  102D               	iorwf	(btemp+7)^0,w,c
 18302  01810A  A4D8               	btfss	status,2,c
 18303  01810C  D002               	goto	l7849
 18304  01810E  0E02               	movlw	2
 18305  018110  D02E               	goto	L21
 18306  018112                     l7849:
 18307  018112  0E03               	movlw	3
 18308  018114  D02C               	goto	L21
 18309  018116                     l7853:
 18310                           
 18311                           ;stkvar	_e @ sp[(-6)+4]
 18312  018116  0EFE               	movlw	-2
 18313  018118  28E3               	incf	plusw1,w,c
 18314  01811A  E128               	bnz	l7859
 18315  01811C  0EFF               	movlw	-1
 18316  01811E  50E3               	movf	plusw1,w,c
 18317  018120  A4D8               	btfss	status,2,c
 18318  018122  D024               	goto	l7859
 18319                           
 18320                           ;stkvar	_u @ sp[(-6)+0]
 18321  018124  0EFA               	movlw	-6
 18322  018126  006F FF8C  F02E    	movff	plusw1,btemp+8
 18323  01812C  0EFB               	movlw	-5
 18324  01812E  006F FF8C  F02F    	movff	plusw1,btemp+9
 18325  018134  0EFC               	movlw	-4
 18326  018136  006F FF8C  F030    	movff	plusw1,btemp+10
 18327  01813C  0EFD               	movlw	-3
 18328  01813E  006F FF8C  F031    	movff	plusw1,btemp+11
 18329  018144  0E09               	movlw	9
 18330  018146                     u5875:
 18331  018146  90D8               	bcf	status,0,c
 18332  018148  362E               	rlcf	(btemp+8)^0,f,c
 18333  01814A  362F               	rlcf	(btemp+9)^0,f,c
 18334  01814C  3630               	rlcf	(btemp+10)^0,f,c
 18335  01814E  3631               	rlcf	(btemp+11)^0,f,c
 18336  018150  2EE8               	decfsz	wreg,f,c
 18337  018152  D7F9               	goto	u5875
 18338  018154  502E               	movf	(btemp+8)^0,w,c
 18339  018156  102F               	iorwf	(btemp+9)^0,w,c
 18340  018158  1030               	iorwf	(btemp+10)^0,w,c
 18341  01815A  1031               	iorwf	(btemp+11)^0,w,c
 18342  01815C  A4D8               	btfss	status,2,c
 18343  01815E  D002               	goto	u5880
 18344  018160  0E01               	movlw	1
 18345  018162  D001               	goto	u5890
 18346  018164                     u5880:
 18347  018164  0E00               	movlw	0
 18348  018166                     u5890:
 18349  018166  6E26               	movwf	btemp^0,c
 18350  018168  6A27               	clrf	(btemp+1)^0,c
 18351  01816A  D004               	goto	l3069
 18352  01816C                     l7859:
 18353  01816C  0E04               	movlw	4
 18354  01816E                     L21:
 18355  01816E  6E26               	movwf	btemp^0,c
 18356  018170  0E00               	movlw	0
 18357  018172  6E27               	movwf	(btemp+1)^0,c
 18358  018174                     l3069:
 18359                           
 18360                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18361  018174  0EF6               	movlw	246
 18362  018176  26E1               	addwf	fsr1l,f,c
 18363  018178  0EFF               	movlw	255
 18364  01817A  22E2               	addwfc	fsr1h,f,c
 18365  01817C  0012               	return		;funcret
 18366  01817E                     __end_of___fpclassifyf:
 18367                           	opt callstack 0
 18368                           
 18369 ;; *************** function ___fltol *****************
 18370 ;; Defined at:
 18371 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18372 ;; Parameters:    Size  Location     Type
 18373 ;;  f1              4  [STACK] int 
 18374 ;; Auto vars:     Size  Location     Type
 18375 ;;  exp1            1  [STACK] unsigned char 
 18376 ;;  sign1           1  [STACK] unsigned char 
 18377 ;; Return value:  Size  Location     Type
 18378 ;;                  4  [STACK] long 
 18379 ;; Registers used:
 18380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18381 ;; Tracked objects:
 18382 ;;		On entry : 0/0
 18383 ;;		On exit  : 0/0
 18384 ;;		Unchanged: 0/0
 18385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18390 ;;Total ram usage:        0 bytes
 18391 ;; Hardware stack levels used:    1
 18392 ;; Hardware stack levels required when called:   15
 18393 ;; This function calls:
 18394 ;;		Nothing
 18395 ;; This function is called by:
 18396 ;;		_main
 18397 ;;		_calc_bsoc
 18398 ;;		_init_bsoc
 18399 ;;		_efgtoa
 18400 ;; This function uses a reentrant model
 18401 ;;
 18402                           
 18403                           	psect	text61
 18404  018472                     __ptext61:
 18405                           	opt callstack 0
 18406  018472                     ___fltol:
 18407                           	opt callstack 0
 18408                           
 18409                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18410  018472  52E6               	movf	postinc1,f,c
 18411  018474  52E6               	movf	postinc1,f,c
 18412                           
 18413                           ;stkvar	_f1 @ sp[(-2)+-4]
 18414                           
 18415                           ;incstack = 0
 18416 ;; hardware stack exceeded
 18417  018476  0EFA               	movlw	-6
 18418  018478  006F FF8C  F02E    	movff	plusw1,btemp+8
 18419  01847E  0EFB               	movlw	-5
 18420  018480  006F FF8C  F02F    	movff	plusw1,btemp+9
 18421  018486  0EFC               	movlw	-4
 18422  018488  006F FF8C  F030    	movff	plusw1,btemp+10
 18423  01848E  0EFD               	movlw	-3
 18424  018490  006F FF8C  F031    	movff	plusw1,btemp+11
 18425  018496  0E18               	movlw	24
 18426  018498  D005               	goto	u7040
 18427  01849A                     u7045:
 18428  01849A  90D8               	bcf	status,0,c
 18429  01849C  3231               	rrcf	(btemp+11)^0,f,c
 18430  01849E  3230               	rrcf	(btemp+10)^0,f,c
 18431  0184A0  322F               	rrcf	(btemp+9)^0,f,c
 18432  0184A2  322E               	rrcf	(btemp+8)^0,f,c
 18433  0184A4                     u7040:
 18434  0184A4  2EE8               	decfsz	wreg,f,c
 18435  0184A6  D7F9               	goto	u7045
 18436                           
 18437                           ;stkvar	_exp1 @ sp[(-2)+0]
 18438  0184A8  0EFE               	movlw	-2
 18439  0184AA  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18440  0184B0  0EFE               	movlw	-2
 18441  0184B2  50E3               	movf	plusw1,w,c
 18442  0184B4  A4D8               	btfss	status,2,c
 18443  0184B6  D006               	goto	l8479
 18444  0184B8                     u7050:
 18445  0184B8  0E00               	movlw	0
 18446  0184BA  6E26               	movwf	btemp^0,c
 18447  0184BC  6A27               	clrf	(btemp+1)^0,c
 18448  0184BE  6A28               	clrf	(btemp+2)^0,c
 18449  0184C0  6A29               	clrf	(btemp+3)^0,c
 18450  0184C2  D08B               	goto	l2685
 18451  0184C4                     l8479:
 18452                           
 18453                           ;stkvar	_f1 @ sp[(-2)+-4]
 18454  0184C4  0EFA               	movlw	-6
 18455  0184C6  006F FF8C  F02E    	movff	plusw1,btemp+8
 18456  0184CC  0EFB               	movlw	-5
 18457  0184CE  006F FF8C  F02F    	movff	plusw1,btemp+9
 18458  0184D4  0EFC               	movlw	-4
 18459  0184D6  006F FF8C  F030    	movff	plusw1,btemp+10
 18460  0184DC  0EFD               	movlw	-3
 18461  0184DE  006F FF8C  F031    	movff	plusw1,btemp+11
 18462  0184E4  0E20               	movlw	32
 18463  0184E6  D005               	goto	u7060
 18464  0184E8                     u7065:
 18465  0184E8  90D8               	bcf	status,0,c
 18466  0184EA  3231               	rrcf	(btemp+11)^0,f,c
 18467  0184EC  3230               	rrcf	(btemp+10)^0,f,c
 18468  0184EE  322F               	rrcf	(btemp+9)^0,f,c
 18469  0184F0  322E               	rrcf	(btemp+8)^0,f,c
 18470  0184F2                     u7060:
 18471  0184F2  2EE8               	decfsz	wreg,f,c
 18472  0184F4  D7F9               	goto	u7065
 18473                           
 18474                           ;stkvar	_sign1 @ sp[(-2)+1]
 18475  0184F6  0EFF               	movlw	-1
 18476  0184F8  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18477                           
 18478                           ;stkvar	_f1 @ sp[(-2)+-4]
 18479  0184FE  0EFC               	movlw	-4
 18480  018500  8EE3               	bsf	plusw1,7,c
 18481                           
 18482                           ;stkvar	_f1 @ sp[(-2)+-4]
 18483  018502  50E1               	movf	fsr1l,w,c
 18484  018504  0FFA               	addlw	-6
 18485  018506  6ED9               	movwf	fsr2l,c
 18486  018508  50E2               	movf	fsr1h,w,c
 18487  01850A  6EDA               	movwf	fsr2h,c
 18488  01850C  0EFF               	movlw	255
 18489  01850E  22DA               	addwfc	fsr2h,f,c
 18490  018510  0EFF               	movlw	255
 18491  018512  16DE               	andwf	postinc2,f,c
 18492  018514  0EFF               	movlw	255
 18493  018516  16DE               	andwf	postinc2,f,c
 18494  018518  0EFF               	movlw	255
 18495  01851A  16DE               	andwf	postinc2,f,c
 18496  01851C  0E00               	movlw	0
 18497  01851E  16DE               	andwf	postinc2,f,c
 18498                           
 18499                           ;stkvar	_exp1 @ sp[(-2)+0]
 18500  018520  0EFE               	movlw	-2
 18501  018522  006F FF8C  F026    	movff	plusw1,btemp
 18502  018528  0E96               	movlw	150
 18503  01852A  5E26               	subwf	btemp^0,f,c
 18504  01852C  0EFE               	movlw	-2
 18505  01852E  0060  F09B  FFE3   	movff	btemp,plusw1
 18506                           
 18507                           ;stkvar	_exp1 @ sp[(-2)+0]
 18508  018534  0EFE               	movlw	-2
 18509  018536  AEE3               	btfss	plusw1,7,c
 18510  018538  D014               	goto	l8497
 18511                           
 18512                           ;stkvar	_exp1 @ sp[(-2)+0]
 18513  01853A  0EFE               	movlw	-2
 18514  01853C  50E3               	movf	plusw1,w,c
 18515  01853E  0A80               	xorlw	128
 18516  018540  0F97               	addlw	151
 18517  018542  A0D8               	btfss	status,0,c
 18518  018544  D7B9               	goto	u7050
 18519  018546                     l8495:
 18520                           
 18521                           ;stkvar	_f1 @ sp[(-2)+-4]
 18522  018546  90D8               	bcf	status,0,c
 18523  018548  0EFD               	movlw	-3
 18524  01854A  32E3               	rrcf	plusw1,f,c
 18525  01854C  0EFC               	movlw	-4
 18526  01854E  32E3               	rrcf	plusw1,f,c
 18527  018550  0EFB               	movlw	-5
 18528  018552  32E3               	rrcf	plusw1,f,c
 18529  018554  0EFA               	movlw	-6
 18530  018556  32E3               	rrcf	plusw1,f,c
 18531                           
 18532                           ;stkvar	_exp1 @ sp[(-2)+0]
 18533  018558  0EFE               	movlw	-2
 18534  01855A  2AE3               	incf	plusw1,f,c
 18535  01855C  B4D8               	btfsc	status,2,c
 18536  01855E  D018               	goto	u7110
 18537  018560  D7F2               	goto	l8495
 18538  018562                     l8497:
 18539                           
 18540                           ;stkvar	_exp1 @ sp[(-2)+0]
 18541  018562  0EFE               	movlw	-2
 18542  018564  006F FF8C  F026    	movff	plusw1,btemp
 18543  01856A  0E1F               	movlw	31
 18544  01856C  6426               	cpfsgt	btemp^0,c
 18545  01856E  D00C               	goto	l8505
 18546  018570  D7A3               	goto	u7050
 18547  018572                     l8503:
 18548                           
 18549                           ;stkvar	_f1 @ sp[(-2)+-4]
 18550  018572  90D8               	bcf	status,0,c
 18551  018574  0EFA               	movlw	-6
 18552  018576  36E3               	rlcf	plusw1,f,c
 18553  018578  0EFB               	movlw	-5
 18554  01857A  36E3               	rlcf	plusw1,f,c
 18555  01857C  0EFC               	movlw	-4
 18556  01857E  36E3               	rlcf	plusw1,f,c
 18557  018580  0EFD               	movlw	-3
 18558  018582  36E3               	rlcf	plusw1,f,c
 18559                           
 18560                           ;stkvar	_exp1 @ sp[(-2)+0]
 18561  018584  0EFE               	movlw	-2
 18562  018586  06E3               	decf	plusw1,f,c
 18563  018588                     l8505:
 18564                           
 18565                           ;stkvar	_exp1 @ sp[(-2)+0]
 18566  018588  0EFE               	movlw	-2
 18567  01858A  50E3               	movf	plusw1,w,c
 18568  01858C  A4D8               	btfss	status,2,c
 18569  01858E  D7F1               	goto	l8503
 18570  018590                     u7110:
 18571                           
 18572                           ;stkvar	_sign1 @ sp[(-2)+1]
 18573  018590  0EFF               	movlw	-1
 18574  018592  50E3               	movf	plusw1,w,c
 18575  018594  B4D8               	btfsc	status,2,c
 18576  018596  D011               	goto	u7130
 18577                           
 18578                           ;stkvar	_f1 @ sp[(-2)+-4]
 18579                           ;stkvar	_f1 @ sp[(-2)+-4]
 18580  018598  0EFA               	movlw	-6
 18581  01859A  6CE3               	negf	plusw1,c
 18582  01859C  0EFB               	movlw	-5
 18583  01859E  1EE3               	comf	plusw1,f,c
 18584  0185A0  0EFC               	movlw	-4
 18585  0185A2  1EE3               	comf	plusw1,f,c
 18586  0185A4  0EFD               	movlw	-3
 18587  0185A6  1EE3               	comf	plusw1,f,c
 18588  0185A8  E308               	bnc	u7130
 18589  0185AA  0EFB               	movlw	-5
 18590  0185AC  2AE3               	incf	plusw1,f,c
 18591  0185AE  E305               	bnc	u7130
 18592  0185B0  0EFC               	movlw	-4
 18593  0185B2  2AE3               	incf	plusw1,f,c
 18594  0185B4  E302               	bnc	u7130
 18595  0185B6  0EFD               	movlw	-3
 18596  0185B8  2AE3               	incf	plusw1,f,c
 18597  0185BA                     u7130:
 18598                           
 18599                           ;stkvar	_f1 @ sp[(-2)+-4]
 18600  0185BA  0EFA               	movlw	-6
 18601  0185BC  006F FF8C  F026    	movff	plusw1,btemp
 18602  0185C2  0EFB               	movlw	-5
 18603  0185C4  006F FF8C  F027    	movff	plusw1,btemp+1
 18604  0185CA  0EFC               	movlw	-4
 18605  0185CC  006F FF8C  F028    	movff	plusw1,btemp+2
 18606  0185D2  0EFD               	movlw	-3
 18607  0185D4  006F FF8C  F029    	movff	plusw1,btemp+3
 18608  0185DA                     l2685:
 18609                           
 18610                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18611  0185DA  0EFA               	movlw	250
 18612  0185DC  26E1               	addwf	fsr1l,f,c
 18613  0185DE  0EFF               	movlw	255
 18614  0185E0  22E2               	addwfc	fsr1h,f,c
 18615  0185E2  0012               	return		;funcret
 18616  0185E4                     __end_of___fltol:
 18617                           	opt callstack 0
 18618                           
 18619 ;; *************** function ___flneg *****************
 18620 ;; Defined at:
 18621 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 18622 ;; Parameters:    Size  Location     Type
 18623 ;;  f1              4  [STACK] long 
 18624 ;; Auto vars:     Size  Location     Type
 18625 ;;		None
 18626 ;; Return value:  Size  Location     Type
 18627 ;;                  4  [STACK] long 
 18628 ;; Registers used:
 18629 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18630 ;; Tracked objects:
 18631 ;;		On entry : 0/0
 18632 ;;		On exit  : 0/0
 18633 ;;		Unchanged: 0/0
 18634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18639 ;;Total ram usage:        0 bytes
 18640 ;; Hardware stack levels used:    1
 18641 ;; Hardware stack levels required when called:   15
 18642 ;; This function calls:
 18643 ;;		Nothing
 18644 ;; This function is called by:
 18645 ;;		_calc_bsoc
 18646 ;;		_efgtoa
 18647 ;; This function uses a reentrant model
 18648 ;;
 18649                           
 18650                           	psect	text62
 18651  01ABB0                     __ptext62:
 18652                           	opt callstack 0
 18653  01ABB0                     ___flneg:
 18654                           	opt callstack 0
 18655                           
 18656                           ;stkvar	_f1 @ sp[(0)+-4]
 18657                           
 18658                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18659                           ;incstack = 0
 18660 ;; hardware stack exceeded
 18661  01ABB0  0EFC               	movlw	-4
 18662  01ABB2  50E3               	movf	plusw1,w,c
 18663  01ABB4  E10A               	bnz	u7030
 18664  01ABB6  0EFD               	movlw	-3
 18665  01ABB8  50E3               	movf	plusw1,w,c
 18666  01ABBA  E107               	bnz	u7030
 18667  01ABBC  0EFE               	movlw	-2
 18668  01ABBE  50E3               	movf	plusw1,w,c
 18669  01ABC0  E104               	bnz	u7030
 18670  01ABC2  0EFF               	movlw	-1
 18671  01ABC4  50E3               	movf	plusw1,w,c
 18672  01ABC6  B4D8               	btfsc	status,2,c
 18673  01ABC8  D002               	goto	l8469
 18674  01ABCA                     u7030:
 18675                           
 18676                           ;stkvar	_f1 @ sp[(0)+-4]
 18677  01ABCA  0EFF               	movlw	-1
 18678  01ABCC  7EE3               	btg	plusw1,7,c
 18679  01ABCE                     l8469:
 18680                           
 18681                           ;stkvar	_f1 @ sp[(0)+-4]
 18682  01ABCE  0EFC               	movlw	-4
 18683  01ABD0  006F FF8C  F026    	movff	plusw1,btemp
 18684  01ABD6  0EFD               	movlw	-3
 18685  01ABD8  006F FF8C  F027    	movff	plusw1,btemp+1
 18686  01ABDE  0EFE               	movlw	-2
 18687  01ABE0  006F FF8C  F028    	movff	plusw1,btemp+2
 18688  01ABE6  0EFF               	movlw	-1
 18689  01ABE8  006F FF8C  F029    	movff	plusw1,btemp+3
 18690                           
 18691                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18692  01ABEE  52E5               	movf	postdec1,f,c
 18693  01ABF0  52E5               	movf	postdec1,f,c
 18694  01ABF2  52E5               	movf	postdec1,f,c
 18695  01ABF4  52E5               	movf	postdec1,f,c
 18696  01ABF6  0012               	return		;funcret
 18697  01ABF8                     __end_of___flneg:
 18698                           	opt callstack 0
 18699                           
 18700 ;; *************** function ___fleq *****************
 18701 ;; Defined at:
 18702 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 18703 ;; Parameters:    Size  Location     Type
 18704 ;;  ff1             4  [STACK] long 
 18705 ;;  ff2             4  [STACK] long 
 18706 ;; Auto vars:     Size  Location     Type
 18707 ;;		None
 18708 ;; Return value:  Size  Location     Type
 18709 ;;		None               void
 18710 ;; Registers used:
 18711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18712 ;; Tracked objects:
 18713 ;;		On entry : 0/0
 18714 ;;		On exit  : 0/0
 18715 ;;		Unchanged: 0/0
 18716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18721 ;;Total ram usage:        0 bytes
 18722 ;; Hardware stack levels used:    1
 18723 ;; Hardware stack levels required when called:   15
 18724 ;; This function calls:
 18725 ;;		Nothing
 18726 ;; This function is called by:
 18727 ;;		_efgtoa
 18728 ;; This function uses a reentrant model
 18729 ;;
 18730                           
 18731                           	psect	text63
 18732  019BCC                     __ptext63:
 18733                           	opt callstack 0
 18734  019BCC                     ___fleq:
 18735                           	opt callstack 0
 18736                           
 18737                           ;stkvar	_ff1 @ sp[(0)+-4]
 18738                           
 18739                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18740                           ;incstack = 0
 18741 ;; hardware stack exceeded
 18742  019BCC  50E1               	movf	fsr1l,w,c
 18743  019BCE  0FFC               	addlw	-4
 18744  019BD0  6ED9               	movwf	fsr2l,c
 18745  019BD2  50E2               	movf	fsr1h,w,c
 18746  019BD4  6EDA               	movwf	fsr2h,c
 18747  019BD6  0EFF               	movlw	255
 18748  019BD8  22DA               	addwfc	fsr2h,f,c
 18749  019BDA  0E00               	movlw	0
 18750  019BDC  14DE               	andwf	postinc2,w,c
 18751  019BDE  6E2E               	movwf	(btemp+8)^0,c
 18752  019BE0  0E00               	movlw	0
 18753  019BE2  14DE               	andwf	postinc2,w,c
 18754  019BE4  6E2F               	movwf	(btemp+9)^0,c
 18755  019BE6  0E80               	movlw	128
 18756  019BE8  14DE               	andwf	postinc2,w,c
 18757  019BEA  6E30               	movwf	(btemp+10)^0,c
 18758  019BEC  0E7F               	movlw	127
 18759  019BEE  14DE               	andwf	postinc2,w,c
 18760  019BF0  6E31               	movwf	(btemp+11)^0,c
 18761  019BF2  502E               	movf	(btemp+8)^0,w,c
 18762  019BF4  102F               	iorwf	(btemp+9)^0,w,c
 18763  019BF6  1030               	iorwf	(btemp+10)^0,w,c
 18764  019BF8  1031               	iorwf	(btemp+11)^0,w,c
 18765  019BFA  A4D8               	btfss	status,2,c
 18766  019BFC  D008               	goto	l8427
 18767                           
 18768                           ;stkvar	_ff1 @ sp[(0)+-4]
 18769  019BFE  0EFC               	movlw	-4
 18770  019C00  6AE3               	clrf	plusw1,c
 18771  019C02  0EFD               	movlw	-3
 18772  019C04  6AE3               	clrf	plusw1,c
 18773  019C06  0EFE               	movlw	-2
 18774  019C08  6AE3               	clrf	plusw1,c
 18775  019C0A  0EFF               	movlw	-1
 18776  019C0C  6AE3               	clrf	plusw1,c
 18777  019C0E                     l8427:
 18778                           
 18779                           ;stkvar	_ff2 @ sp[(0)+-8]
 18780  019C0E  50E1               	movf	fsr1l,w,c
 18781  019C10  0FF8               	addlw	-8
 18782  019C12  6ED9               	movwf	fsr2l,c
 18783  019C14  50E2               	movf	fsr1h,w,c
 18784  019C16  6EDA               	movwf	fsr2h,c
 18785  019C18  0EFF               	movlw	255
 18786  019C1A  22DA               	addwfc	fsr2h,f,c
 18787  019C1C  0E00               	movlw	0
 18788  019C1E  14DE               	andwf	postinc2,w,c
 18789  019C20  6E2E               	movwf	(btemp+8)^0,c
 18790  019C22  0E00               	movlw	0
 18791  019C24  14DE               	andwf	postinc2,w,c
 18792  019C26  6E2F               	movwf	(btemp+9)^0,c
 18793  019C28  0E80               	movlw	128
 18794  019C2A  14DE               	andwf	postinc2,w,c
 18795  019C2C  6E30               	movwf	(btemp+10)^0,c
 18796  019C2E  0E7F               	movlw	127
 18797  019C30  14DE               	andwf	postinc2,w,c
 18798  019C32  6E31               	movwf	(btemp+11)^0,c
 18799  019C34  502E               	movf	(btemp+8)^0,w,c
 18800  019C36  102F               	iorwf	(btemp+9)^0,w,c
 18801  019C38  1030               	iorwf	(btemp+10)^0,w,c
 18802  019C3A  1031               	iorwf	(btemp+11)^0,w,c
 18803  019C3C  A4D8               	btfss	status,2,c
 18804  019C3E  D008               	goto	l8431
 18805                           
 18806                           ;stkvar	_ff2 @ sp[(0)+-8]
 18807  019C40  0EF8               	movlw	-8
 18808  019C42  6AE3               	clrf	plusw1,c
 18809  019C44  0EF9               	movlw	-7
 18810  019C46  6AE3               	clrf	plusw1,c
 18811  019C48  0EFA               	movlw	-6
 18812  019C4A  6AE3               	clrf	plusw1,c
 18813  019C4C  0EFB               	movlw	-5
 18814  019C4E  6AE3               	clrf	plusw1,c
 18815  019C50                     l8431:
 18816                           
 18817                           ;stkvar	_ff2 @ sp[(0)+-8]
 18818                           ;stkvar	_ff1 @ sp[(0)+-4]
 18819  019C50  50E1               	movf	fsr1l,w,c
 18820  019C52  0FFC               	addlw	-4
 18821  019C54  6ED9               	movwf	fsr2l,c
 18822  019C56  50E2               	movf	fsr1h,w,c
 18823  019C58  6EDA               	movwf	fsr2h,c
 18824  019C5A  0EFF               	movlw	255
 18825  019C5C  22DA               	addwfc	fsr2h,f,c
 18826  019C5E  0EF8               	movlw	-8
 18827  019C60  50E3               	movf	plusw1,w,c
 18828  019C62  18DE               	xorwf	postinc2,w,c
 18829  019C64  E10D               	bnz	u6970
 18830  019C66  0EF9               	movlw	-7
 18831  019C68  50E3               	movf	plusw1,w,c
 18832  019C6A  18DE               	xorwf	postinc2,w,c
 18833  019C6C  E109               	bnz	u6970
 18834  019C6E  0EFA               	movlw	-6
 18835  019C70  50E3               	movf	plusw1,w,c
 18836  019C72  18DE               	xorwf	postinc2,w,c
 18837  019C74  E105               	bnz	u6970
 18838  019C76  0EFB               	movlw	-5
 18839  019C78  50E3               	movf	plusw1,w,c
 18840  019C7A  18DE               	xorwf	postinc2,w,c
 18841  019C7C  B4D8               	btfsc	status,2,c
 18842  019C7E  D002               	goto	l8435
 18843  019C80                     u6970:
 18844  019C80  9026               	bcf	btemp& (0+255),0,c
 18845  019C82  D001               	goto	l2647
 18846  019C84                     l8435:
 18847  019C84  8026               	bsf	btemp& (0+255),0,c
 18848  019C86                     l2647:
 18849                           
 18850                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18851  019C86  0EF8               	movlw	248
 18852  019C88  26E1               	addwf	fsr1l,f,c
 18853  019C8A  0EFF               	movlw	255
 18854  019C8C  22E2               	addwfc	fsr1h,f,c
 18855  019C8E  0012               	return		;funcret
 18856  019C90                     __end_of___fleq:
 18857                           	opt callstack 0
 18858                           
 18859 ;; *************** function ___awmod *****************
 18860 ;; Defined at:
 18861 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18862 ;; Parameters:    Size  Location     Type
 18863 ;;  dividend        2  [STACK] int 
 18864 ;;  divisor         2  [STACK] int 
 18865 ;; Auto vars:     Size  Location     Type
 18866 ;;  sign            1  [STACK] unsigned char 
 18867 ;;  counter         1  [STACK] unsigned char 
 18868 ;; Return value:  Size  Location     Type
 18869 ;;                  2  [STACK] int 
 18870 ;; Registers used:
 18871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18872 ;; Tracked objects:
 18873 ;;		On entry : 0/0
 18874 ;;		On exit  : 0/0
 18875 ;;		Unchanged: 0/0
 18876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18881 ;;Total ram usage:        0 bytes
 18882 ;; Hardware stack levels used:    1
 18883 ;; Hardware stack levels required when called:   15
 18884 ;; This function calls:
 18885 ;;		Nothing
 18886 ;; This function is called by:
 18887 ;;		_efgtoa
 18888 ;; This function uses a reentrant model
 18889 ;;
 18890                           
 18891                           	psect	text64
 18892  019036                     __ptext64:
 18893                           	opt callstack 0
 18894  019036                     ___awmod:
 18895                           	opt callstack 0
 18896                           
 18897                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18898  019036  52E6               	movf	postinc1,f,c
 18899  019038  52E6               	movf	postinc1,f,c
 18900                           
 18901                           ;stkvar	_sign @ sp[(-2)+0]
 18902                           
 18903                           ;incstack = 0
 18904 ;; hardware stack exceeded
 18905  01903A  0EFE               	movlw	-2
 18906  01903C  6AE3               	clrf	plusw1,c
 18907                           
 18908                           ;stkvar	_dividend @ sp[(-2)+-2]
 18909  01903E  0EFD               	movlw	-3
 18910  019040  AEE3               	btfss	plusw1,7,c
 18911  019042  D009               	goto	l8393
 18912                           
 18913                           ;stkvar	_dividend @ sp[(-2)+-2]
 18914                           ;stkvar	_dividend @ sp[(-2)+-2]
 18915  019044  0EFC               	movlw	-4
 18916  019046  6CE3               	negf	plusw1,c
 18917  019048  0EFD               	movlw	-3
 18918  01904A  1EE3               	comf	plusw1,f,c
 18919  01904C  B0D8               	btfsc	status,0,c
 18920  01904E  2AE3               	incf	plusw1,f,c
 18921                           
 18922                           ;stkvar	_sign @ sp[(-2)+0]
 18923  019050  0EFE               	movlw	-2
 18924  019052  6AE3               	clrf	plusw1,c
 18925  019054  2AE3               	incf	plusw1,f,c
 18926  019056                     l8393:
 18927                           
 18928                           ;stkvar	_divisor @ sp[(-2)+-4]
 18929  019056  0EFB               	movlw	-5
 18930  019058  AEE3               	btfss	plusw1,7,c
 18931  01905A  D006               	goto	l8397
 18932                           
 18933                           ;stkvar	_divisor @ sp[(-2)+-4]
 18934                           ;stkvar	_divisor @ sp[(-2)+-4]
 18935  01905C  0EFA               	movlw	-6
 18936  01905E  6CE3               	negf	plusw1,c
 18937  019060  0EFB               	movlw	-5
 18938  019062  1EE3               	comf	plusw1,f,c
 18939  019064  B0D8               	btfsc	status,0,c
 18940  019066  2AE3               	incf	plusw1,f,c
 18941  019068                     l8397:
 18942                           
 18943                           ;stkvar	_divisor @ sp[(-2)+-4]
 18944  019068  0EFA               	movlw	-6
 18945  01906A  006F FF8C  F026    	movff	plusw1,btemp
 18946  019070  0EFB               	movlw	-5
 18947  019072  50E3               	movf	plusw1,w,c
 18948  019074  1026               	iorwf	btemp^0,w,c
 18949  019076  B4D8               	btfsc	status,2,c
 18950  019078  D053               	goto	u6930
 18951                           
 18952                           ;stkvar	_counter @ sp[(-2)+1]
 18953  01907A  0EFF               	movlw	-1
 18954  01907C  6AE3               	clrf	plusw1,c
 18955  01907E  D012               	goto	L22
 18956  019080                     l8401:
 18957                           
 18958                           ;stkvar	_divisor @ sp[(-2)+-4]
 18959  019080  0EFA               	movlw	-6
 18960  019082  50E3               	movf	plusw1,w,c
 18961  019084  90D8               	bcf	status,0,c
 18962  019086  34E8               	rlcf	wreg,w,c
 18963  019088  6E26               	movwf	btemp^0,c
 18964  01908A  0EFA               	movlw	-6
 18965  01908C  0060  F09B  FFE3   	movff	btemp,plusw1
 18966  019092  0EFB               	movlw	-5
 18967  019094  50E3               	movf	plusw1,w,c
 18968  019096  34E8               	rlcf	wreg,w,c
 18969  019098  6E26               	movwf	btemp^0,c
 18970  01909A  0EFB               	movlw	-5
 18971  01909C  0060  F09B  FFE3   	movff	btemp,plusw1
 18972                           
 18973                           ;stkvar	_counter @ sp[(-2)+1]
 18974  0190A2  0EFF               	movlw	-1
 18975  0190A4                     L22:
 18976  0190A4  2AE3               	incf	plusw1,f,c
 18977                           
 18978                           ;stkvar	_divisor @ sp[(-2)+-4]
 18979  0190A6  0EFB               	movlw	-5
 18980  0190A8  AEE3               	btfss	plusw1,7,c
 18981  0190AA  D7EA               	goto	l8401
 18982  0190AC                     u6910:
 18983                           
 18984                           ;stkvar	_divisor @ sp[(-2)+-4]
 18985  0190AC  0EFA               	movlw	-6
 18986  0190AE  006F FF8C  F030    	movff	plusw1,btemp+10
 18987  0190B4  0EFB               	movlw	-5
 18988  0190B6  006F FF8C  F031    	movff	plusw1,btemp+11
 18989                           
 18990                           ;stkvar	_dividend @ sp[(-2)+-2]
 18991  0190BC  0EFC               	movlw	-4
 18992  0190BE  006F FF8C  F02E    	movff	plusw1,btemp+8
 18993  0190C4  0EFD               	movlw	-3
 18994  0190C6  006F FF8C  F02F    	movff	plusw1,btemp+9
 18995  0190CC  5030               	movf	(btemp+10)^0,w,c
 18996  0190CE  5C2E               	subwf	(btemp+8)^0,w,c
 18997  0190D0  5031               	movf	(btemp+11)^0,w,c
 18998  0190D2  582F               	subwfb	(btemp+9)^0,w,c
 18999  0190D4  A0D8               	btfss	status,0,c
 19000  0190D6  D014               	goto	l8411
 19001                           
 19002                           ;stkvar	_divisor @ sp[(-2)+-4]
 19003                           ;stkvar	_dividend @ sp[(-2)+-2]
 19004  0190D8  0EFC               	movlw	-4
 19005  0190DA  50E3               	movf	plusw1,w,c
 19006  0190DC  6E26               	movwf	btemp^0,c
 19007  0190DE  0EFA               	movlw	-6
 19008  0190E0  50E3               	movf	plusw1,w,c
 19009  0190E2  5E26               	subwf	btemp^0,f,c
 19010  0190E4  0EFC               	movlw	-4
 19011  0190E6  0060  F09B  FFE3   	movff	btemp,plusw1
 19012  0190EC  0EFD               	movlw	-3
 19013  0190EE  50E3               	movf	plusw1,w,c
 19014  0190F0  6E26               	movwf	btemp^0,c
 19015  0190F2  0EFB               	movlw	-5
 19016  0190F4  50E3               	movf	plusw1,w,c
 19017  0190F6  5A26               	subwfb	btemp^0,f,c
 19018  0190F8  0EFD               	movlw	-3
 19019  0190FA  0060  F09B  FFE3   	movff	btemp,plusw1
 19020  019100                     l8411:
 19021                           
 19022                           ;stkvar	_divisor @ sp[(-2)+-4]
 19023  019100  90D8               	bcf	status,0,c
 19024  019102  0EFB               	movlw	-5
 19025  019104  32E3               	rrcf	plusw1,f,c
 19026  019106  0EFA               	movlw	-6
 19027  019108  32E3               	rrcf	plusw1,f,c
 19028                           
 19029                           ;stkvar	_counter @ sp[(-2)+1]
 19030  01910A  0EFF               	movlw	-1
 19031  01910C  50E3               	movf	plusw1,w,c
 19032  01910E  6E26               	movwf	btemp^0,c
 19033  019110  0E01               	movlw	1
 19034  019112  5E26               	subwf	btemp^0,f,c
 19035  019114  0EFF               	movlw	-1
 19036  019116  0060  F09B  FFE3   	movff	btemp,plusw1
 19037  01911C  A4D8               	btfss	status,2,c
 19038  01911E  D7C6               	goto	u6910
 19039  019120                     u6930:
 19040                           
 19041                           ;stkvar	_sign @ sp[(-2)+0]
 19042  019120  0EFE               	movlw	-2
 19043  019122  50E3               	movf	plusw1,w,c
 19044  019124  B4D8               	btfsc	status,2,c
 19045  019126  D006               	goto	l8419
 19046                           
 19047                           ;stkvar	_dividend @ sp[(-2)+-2]
 19048                           ;stkvar	_dividend @ sp[(-2)+-2]
 19049  019128  0EFC               	movlw	-4
 19050  01912A  6CE3               	negf	plusw1,c
 19051  01912C  0EFD               	movlw	-3
 19052  01912E  1EE3               	comf	plusw1,f,c
 19053  019130  B0D8               	btfsc	status,0,c
 19054  019132  2AE3               	incf	plusw1,f,c
 19055  019134                     l8419:
 19056                           
 19057                           ;stkvar	_dividend @ sp[(-2)+-2]
 19058  019134  0EFC               	movlw	-4
 19059  019136  006F FF8C  F026    	movff	plusw1,btemp
 19060  01913C  0EFD               	movlw	-3
 19061  01913E  006F FF8C  F027    	movff	plusw1,btemp+1
 19062                           
 19063                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19064  019144  0EFA               	movlw	250
 19065  019146  26E1               	addwf	fsr1l,f,c
 19066  019148  0EFF               	movlw	255
 19067  01914A  22E2               	addwfc	fsr1h,f,c
 19068  01914C  0012               	return		;funcret
 19069  01914E                     __end_of___awmod:
 19070                           	opt callstack 0
 19071                           
 19072 ;; *************** function ___awdiv *****************
 19073 ;; Defined at:
 19074 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19075 ;; Parameters:    Size  Location     Type
 19076 ;;  dividend        2  [STACK] int 
 19077 ;;  divisor         2  [STACK] int 
 19078 ;; Auto vars:     Size  Location     Type
 19079 ;;  quotient        2  [STACK] int 
 19080 ;;  sign            1  [STACK] unsigned char 
 19081 ;;  counter         1  [STACK] unsigned char 
 19082 ;; Return value:  Size  Location     Type
 19083 ;;                  2  [STACK] int 
 19084 ;; Registers used:
 19085 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19086 ;; Tracked objects:
 19087 ;;		On entry : 0/0
 19088 ;;		On exit  : 0/0
 19089 ;;		Unchanged: 0/0
 19090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19095 ;;Total ram usage:        0 bytes
 19096 ;; Hardware stack levels used:    1
 19097 ;; Hardware stack levels required when called:   15
 19098 ;; This function calls:
 19099 ;;		Nothing
 19100 ;; This function is called by:
 19101 ;;		_efgtoa
 19102 ;; This function uses a reentrant model
 19103 ;;
 19104                           
 19105                           	psect	text65
 19106  018A16                     __ptext65:
 19107                           	opt callstack 0
 19108  018A16                     ___awdiv:
 19109                           	opt callstack 0
 19110                           
 19111                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19112  018A16  52E6               	movf	postinc1,f,c
 19113  018A18  52E6               	movf	postinc1,f,c
 19114  018A1A  52E6               	movf	postinc1,f,c
 19115  018A1C  52E6               	movf	postinc1,f,c
 19116                           
 19117                           ;stkvar	_sign @ sp[(-4)+2]
 19118                           
 19119                           ;incstack = 0
 19120 ;; hardware stack exceeded
 19121  018A1E  0EFE               	movlw	-2
 19122  018A20  6AE3               	clrf	plusw1,c
 19123                           
 19124                           ;stkvar	_divisor @ sp[(-4)+-4]
 19125  018A22  0EF9               	movlw	-7
 19126  018A24  AEE3               	btfss	plusw1,7,c
 19127  018A26  D009               	goto	l8347
 19128                           
 19129                           ;stkvar	_divisor @ sp[(-4)+-4]
 19130                           ;stkvar	_divisor @ sp[(-4)+-4]
 19131  018A28  0EF8               	movlw	-8
 19132  018A2A  6CE3               	negf	plusw1,c
 19133  018A2C  0EF9               	movlw	-7
 19134  018A2E  1EE3               	comf	plusw1,f,c
 19135  018A30  B0D8               	btfsc	status,0,c
 19136  018A32  2AE3               	incf	plusw1,f,c
 19137                           
 19138                           ;stkvar	_sign @ sp[(-4)+2]
 19139  018A34  0EFE               	movlw	-2
 19140  018A36  6AE3               	clrf	plusw1,c
 19141  018A38  2AE3               	incf	plusw1,f,c
 19142  018A3A                     l8347:
 19143                           
 19144                           ;stkvar	_dividend @ sp[(-4)+-2]
 19145  018A3A  0EFB               	movlw	-5
 19146  018A3C  AEE3               	btfss	plusw1,7,c
 19147  018A3E  D008               	goto	l8353
 19148                           
 19149                           ;stkvar	_dividend @ sp[(-4)+-2]
 19150                           ;stkvar	_dividend @ sp[(-4)+-2]
 19151  018A40  0EFA               	movlw	-6
 19152  018A42  6CE3               	negf	plusw1,c
 19153  018A44  0EFB               	movlw	-5
 19154  018A46  1EE3               	comf	plusw1,f,c
 19155  018A48  B0D8               	btfsc	status,0,c
 19156  018A4A  2AE3               	incf	plusw1,f,c
 19157                           
 19158                           ;stkvar	_sign @ sp[(-4)+2]
 19159  018A4C  0EFE               	movlw	-2
 19160  018A4E  70E3               	btg	plusw1,0,c
 19161  018A50                     l8353:
 19162                           
 19163                           ;stkvar	_quotient @ sp[(-4)+0]
 19164  018A50  0EFC               	movlw	-4
 19165  018A52  6AE3               	clrf	plusw1,c
 19166  018A54  0EFD               	movlw	-3
 19167  018A56  6AE3               	clrf	plusw1,c
 19168                           
 19169                           ;stkvar	_divisor @ sp[(-4)+-4]
 19170  018A58  0EF8               	movlw	-8
 19171  018A5A  006F FF8C  F026    	movff	plusw1,btemp
 19172  018A60  0EF9               	movlw	-7
 19173  018A62  50E3               	movf	plusw1,w,c
 19174  018A64  1026               	iorwf	btemp^0,w,c
 19175  018A66  B4D8               	btfsc	status,2,c
 19176  018A68  D066               	goto	u6860
 19177                           
 19178                           ;stkvar	_counter @ sp[(-4)+3]
 19179  018A6A  0EFF               	movlw	-1
 19180  018A6C  6AE3               	clrf	plusw1,c
 19181  018A6E  D012               	goto	L23
 19182  018A70                     l8359:
 19183                           
 19184                           ;stkvar	_divisor @ sp[(-4)+-4]
 19185  018A70  0EF8               	movlw	-8
 19186  018A72  50E3               	movf	plusw1,w,c
 19187  018A74  90D8               	bcf	status,0,c
 19188  018A76  34E8               	rlcf	wreg,w,c
 19189  018A78  6E26               	movwf	btemp^0,c
 19190  018A7A  0EF8               	movlw	-8
 19191  018A7C  0060  F09B  FFE3   	movff	btemp,plusw1
 19192  018A82  0EF9               	movlw	-7
 19193  018A84  50E3               	movf	plusw1,w,c
 19194  018A86  34E8               	rlcf	wreg,w,c
 19195  018A88  6E26               	movwf	btemp^0,c
 19196  018A8A  0EF9               	movlw	-7
 19197  018A8C  0060  F09B  FFE3   	movff	btemp,plusw1
 19198                           
 19199                           ;stkvar	_counter @ sp[(-4)+3]
 19200  018A92  0EFF               	movlw	-1
 19201  018A94                     L23:
 19202  018A94  2AE3               	incf	plusw1,f,c
 19203                           
 19204                           ;stkvar	_divisor @ sp[(-4)+-4]
 19205  018A96  0EF9               	movlw	-7
 19206  018A98  AEE3               	btfss	plusw1,7,c
 19207  018A9A  D7EA               	goto	l8359
 19208  018A9C                     u6840:
 19209                           
 19210                           ;stkvar	_quotient @ sp[(-4)+0]
 19211  018A9C  0EFC               	movlw	-4
 19212  018A9E  50E3               	movf	plusw1,w,c
 19213  018AA0  90D8               	bcf	status,0,c
 19214  018AA2  34E8               	rlcf	wreg,w,c
 19215  018AA4  6E26               	movwf	btemp^0,c
 19216  018AA6  0EFC               	movlw	-4
 19217  018AA8  0060  F09B  FFE3   	movff	btemp,plusw1
 19218  018AAE  0EFD               	movlw	-3
 19219  018AB0  50E3               	movf	plusw1,w,c
 19220  018AB2  34E8               	rlcf	wreg,w,c
 19221  018AB4  6E26               	movwf	btemp^0,c
 19222  018AB6  0EFD               	movlw	-3
 19223  018AB8  0060  F09B  FFE3   	movff	btemp,plusw1
 19224                           
 19225                           ;stkvar	_divisor @ sp[(-4)+-4]
 19226  018ABE  0EF8               	movlw	-8
 19227  018AC0  006F FF8C  F030    	movff	plusw1,btemp+10
 19228  018AC6  0EF9               	movlw	-7
 19229  018AC8  006F FF8C  F031    	movff	plusw1,btemp+11
 19230                           
 19231                           ;stkvar	_dividend @ sp[(-4)+-2]
 19232  018ACE  0EFA               	movlw	-6
 19233  018AD0  006F FF8C  F02E    	movff	plusw1,btemp+8
 19234  018AD6  0EFB               	movlw	-5
 19235  018AD8  006F FF8C  F02F    	movff	plusw1,btemp+9
 19236  018ADE  5030               	movf	(btemp+10)^0,w,c
 19237  018AE0  5C2E               	subwf	(btemp+8)^0,w,c
 19238  018AE2  5031               	movf	(btemp+11)^0,w,c
 19239  018AE4  582F               	subwfb	(btemp+9)^0,w,c
 19240  018AE6  A0D8               	btfss	status,0,c
 19241  018AE8  D016               	goto	l8373
 19242                           
 19243                           ;stkvar	_divisor @ sp[(-4)+-4]
 19244                           ;stkvar	_dividend @ sp[(-4)+-2]
 19245  018AEA  0EFA               	movlw	-6
 19246  018AEC  50E3               	movf	plusw1,w,c
 19247  018AEE  6E26               	movwf	btemp^0,c
 19248  018AF0  0EF8               	movlw	-8
 19249  018AF2  50E3               	movf	plusw1,w,c
 19250  018AF4  5E26               	subwf	btemp^0,f,c
 19251  018AF6  0EFA               	movlw	-6
 19252  018AF8  0060  F09B  FFE3   	movff	btemp,plusw1
 19253  018AFE  0EFB               	movlw	-5
 19254  018B00  50E3               	movf	plusw1,w,c
 19255  018B02  6E26               	movwf	btemp^0,c
 19256  018B04  0EF9               	movlw	-7
 19257  018B06  50E3               	movf	plusw1,w,c
 19258  018B08  5A26               	subwfb	btemp^0,f,c
 19259  018B0A  0EFB               	movlw	-5
 19260  018B0C  0060  F09B  FFE3   	movff	btemp,plusw1
 19261                           
 19262                           ;stkvar	_quotient @ sp[(-4)+0]
 19263  018B12  0EFC               	movlw	-4
 19264  018B14  80E3               	bsf	plusw1,0,c
 19265  018B16                     l8373:
 19266                           
 19267                           ;stkvar	_divisor @ sp[(-4)+-4]
 19268  018B16  90D8               	bcf	status,0,c
 19269  018B18  0EF9               	movlw	-7
 19270  018B1A  32E3               	rrcf	plusw1,f,c
 19271  018B1C  0EF8               	movlw	-8
 19272  018B1E  32E3               	rrcf	plusw1,f,c
 19273                           
 19274                           ;stkvar	_counter @ sp[(-4)+3]
 19275  018B20  0EFF               	movlw	-1
 19276  018B22  50E3               	movf	plusw1,w,c
 19277  018B24  6E26               	movwf	btemp^0,c
 19278  018B26  0E01               	movlw	1
 19279  018B28  5E26               	subwf	btemp^0,f,c
 19280  018B2A  0EFF               	movlw	-1
 19281  018B2C  0060  F09B  FFE3   	movff	btemp,plusw1
 19282  018B32  A4D8               	btfss	status,2,c
 19283  018B34  D7B3               	goto	u6840
 19284  018B36                     u6860:
 19285                           
 19286                           ;stkvar	_sign @ sp[(-4)+2]
 19287  018B36  0EFE               	movlw	-2
 19288  018B38  50E3               	movf	plusw1,w,c
 19289  018B3A  B4D8               	btfsc	status,2,c
 19290  018B3C  D006               	goto	l8381
 19291                           
 19292                           ;stkvar	_quotient @ sp[(-4)+0]
 19293                           ;stkvar	_quotient @ sp[(-4)+0]
 19294  018B3E  0EFC               	movlw	-4
 19295  018B40  6CE3               	negf	plusw1,c
 19296  018B42  0EFD               	movlw	-3
 19297  018B44  1EE3               	comf	plusw1,f,c
 19298  018B46  B0D8               	btfsc	status,0,c
 19299  018B48  2AE3               	incf	plusw1,f,c
 19300  018B4A                     l8381:
 19301                           
 19302                           ;stkvar	_quotient @ sp[(-4)+0]
 19303  018B4A  0EFC               	movlw	-4
 19304  018B4C  006F FF8C  F026    	movff	plusw1,btemp
 19305  018B52  0EFD               	movlw	-3
 19306  018B54  006F FF8C  F027    	movff	plusw1,btemp+1
 19307                           
 19308                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19309  018B5A  0EF8               	movlw	248
 19310  018B5C  26E1               	addwf	fsr1l,f,c
 19311  018B5E  0EFF               	movlw	255
 19312  018B60  22E2               	addwfc	fsr1h,f,c
 19313  018B62  0012               	return		;funcret
 19314  018B64                     __end_of___awdiv:
 19315                           	opt callstack 0
 19316                           
 19317 ;; *************** function _dtoa *****************
 19318 ;; Defined at:
 19319 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19320 ;; Parameters:    Size  Location     Type
 19321 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19322 ;;		 -> f(6), NULL(0), 
 19323 ;;  d               8  [STACK] long long 
 19324 ;; Auto vars:     Size  Location     Type
 19325 ;;  n               8  [STACK] long long 
 19326 ;;  i               2  [STACK] int 
 19327 ;;  s               2  [STACK] int 
 19328 ;;  w               2  [STACK] int 
 19329 ;;  p               2  [STACK] int 
 19330 ;; Return value:  Size  Location     Type
 19331 ;;                  2  [STACK] int 
 19332 ;; Registers used:
 19333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19334 ;; Tracked objects:
 19335 ;;		On entry : 0/0
 19336 ;;		On exit  : 0/0
 19337 ;;		Unchanged: 0/0
 19338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19343 ;;Total ram usage:        0 bytes
 19344 ;; Hardware stack levels used:    1
 19345 ;; Hardware stack levels required when called:   20
 19346 ;; This function calls:
 19347 ;;		___aodiv
 19348 ;;		___aomod
 19349 ;;		_abs
 19350 ;;		_pad
 19351 ;; This function is called by:
 19352 ;;		_vfpfcnvrt
 19353 ;; This function uses a reentrant model
 19354 ;;
 19355                           
 19356                           	psect	text66
 19357  0153D0                     __ptext66:
 19358                           	opt callstack 0
 19359  0153D0                     _dtoa:
 19360                           	opt callstack 0
 19361                           
 19362                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19363  0153D0  0E12               	movlw	18
 19364  0153D2  26E1               	addwf	fsr1l,f,c
 19365  0153D4  0E00               	movlw	0
 19366  0153D6  22E2               	addwfc	fsr1h,f,c
 19367                           
 19368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19369                           ;stkvar	_d @ sp[(-18)+-10]
 19370                           
 19371                           ;incstack = 0
 19372 ;; hardware stack exceeded
 19373  0153D8  0EE4               	movlw	228
 19374  0153DA  24E1               	addwf	fsr1l,w,c
 19375  0153DC  6ED9               	movwf	fsr2l,c
 19376  0153DE  0EFF               	movlw	255
 19377  0153E0  20E2               	addwfc	fsr1h,w,c
 19378  0153E2  6EDA               	movwf	fsr2h,c
 19379                           
 19380                           ;stkvar	_n @ sp[(-18)+2]
 19381  0153E4  0E08               	movlw	8
 19382  0153E6  6E26               	movwf	btemp^0,c
 19383  0153E8  0EF0               	movlw	-16
 19384  0153EA                     us1062999:
 19385  0153EA  006F FF7B FFE3     	movff	postinc2,plusw1
 19386  0153F0  28E8               	incf	wreg,w,c
 19387  0153F2  2E26               	decfsz	btemp^0,f,c
 19388  0153F4  D7FA               	bra	us1062999
 19389                           
 19390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19391                           ;stkvar	_n @ sp[(-18)+2]
 19392  0153F6  0EF7               	movlw	-9
 19393  0153F8  AEE3               	btfss	plusw1,7,c
 19394  0153FA  D002               	goto	u10630
 19395  0153FC  0E01               	movlw	1
 19396  0153FE  D001               	goto	u10640
 19397  015400                     u10630:
 19398  015400  0E00               	movlw	0
 19399  015402                     u10640:
 19400  015402  6E30               	movwf	(btemp+10)^0,c
 19401  015404  6A31               	clrf	(btemp+11)^0,c
 19402                           
 19403                           ;stkvar	_s @ sp[(-18)+12]
 19404  015406  0EFA               	movlw	-6
 19405  015408  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 19406  01540E  0EFB               	movlw	-5
 19407  015410  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 19408                           
 19409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19410                           ;stkvar	_s @ sp[(-18)+12]
 19411  015416  0EFA               	movlw	-6
 19412  015418  006F FF8C  F026    	movff	plusw1,btemp
 19413  01541E  0EFB               	movlw	-5
 19414  015420  50E3               	movf	plusw1,w,c
 19415  015422  1026               	iorwf	btemp^0,w,c
 19416  015424  B4D8               	btfsc	status,2,c
 19417  015426  D025               	goto	u10660
 19418                           
 19419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19420                           ;stkvar	_n @ sp[(-18)+2]
 19421                           ;stkvar	_n @ sp[(-18)+2]
 19422  015428  0EF0               	movlw	-16
 19423  01542A  6CE3               	negf	plusw1,c
 19424  01542C  0EF1               	movlw	-15
 19425  01542E  1EE3               	comf	plusw1,f,c
 19426  015430  0EF2               	movlw	-14
 19427  015432  1EE3               	comf	plusw1,f,c
 19428  015434  0EF3               	movlw	-13
 19429  015436  1EE3               	comf	plusw1,f,c
 19430  015438  0EF4               	movlw	-12
 19431  01543A  1EE3               	comf	plusw1,f,c
 19432  01543C  0EF5               	movlw	-11
 19433  01543E  1EE3               	comf	plusw1,f,c
 19434  015440  0EF6               	movlw	-10
 19435  015442  1EE3               	comf	plusw1,f,c
 19436  015444  0EF7               	movlw	-9
 19437  015446  1EE3               	comf	plusw1,f,c
 19438  015448  E314               	bnc	u10660
 19439  01544A  0EF1               	movlw	-15
 19440  01544C  2AE3               	incf	plusw1,f,c
 19441  01544E  E311               	bnc	u10660
 19442  015450  0EF2               	movlw	-14
 19443  015452  2AE3               	incf	plusw1,f,c
 19444  015454  E30E               	bnc	u10660
 19445  015456  0EF3               	movlw	-13
 19446  015458  2AE3               	incf	plusw1,f,c
 19447  01545A  E30B               	bnc	u10660
 19448  01545C  0EF4               	movlw	-12
 19449  01545E  2AE3               	incf	plusw1,f,c
 19450  015460  E308               	bnc	u10660
 19451  015462  0EF5               	movlw	-11
 19452  015464  2AE3               	incf	plusw1,f,c
 19453  015466  E305               	bnc	u10660
 19454  015468  0EF6               	movlw	-10
 19455  01546A  2AE3               	incf	plusw1,f,c
 19456  01546C  E302               	bnc	u10660
 19457  01546E  0EF7               	movlw	-9
 19458  015470  2AE3               	incf	plusw1,f,c
 19459  015472                     u10660:
 19460                           
 19461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19462  015472  AE0D               	btfss	(_prec+1)^0,7,c
 19463                           
 19464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19465  015474  920E               	bcf	_flags^0,1,c
 19466                           
 19467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19468  015476  BE0D               	btfsc	(_prec+1)^0,7,c
 19469  015478  D005               	goto	u10680
 19470  01547A  500D               	movf	(_prec+1)^0,w,c
 19471  01547C  E110               	bnz	l11639
 19472  01547E  040C               	decf	_prec^0,w,c
 19473  015480  B0D8               	btfsc	status,0,c
 19474  015482  D00D               	goto	l11639
 19475  015484                     u10680:
 19476  015484  0E01               	movlw	1
 19477  015486  6E30               	movwf	(btemp+10)^0,c
 19478  015488  0E00               	movlw	0
 19479  01548A  6E31               	movwf	(btemp+11)^0,c
 19480                           
 19481                           ;stkvar	_p @ sp[(-18)+16]
 19482  01548C  0EFE               	movlw	-2
 19483  01548E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 19484  015494  0EFF               	movlw	-1
 19485  015496  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 19486  01549C  D008               	goto	l2151
 19487  01549E                     l11639:
 19488                           
 19489                           ;stkvar	_p @ sp[(-18)+16]
 19490  01549E  0EFE               	movlw	-2
 19491  0154A0  0060  F033  FFE3   	movff	_prec,plusw1
 19492  0154A6  0EFF               	movlw	-1
 19493  0154A8  0060  F037  FFE3   	movff	_prec+1,plusw1
 19494  0154AE                     l2151:
 19495                           
 19496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19497                           ;stkvar	_w @ sp[(-18)+14]
 19498  0154AE  0EFC               	movlw	-4
 19499  0154B0  0060  F02B  FFE3   	movff	_width,plusw1
 19500  0154B6  0EFD               	movlw	-3
 19501  0154B8  0060  F02F  FFE3   	movff	_width+1,plusw1
 19502                           
 19503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19504                           ;stkvar	_s @ sp[(-18)+12]
 19505  0154BE  0EFA               	movlw	-6
 19506  0154C0  006F FF8C  F026    	movff	plusw1,btemp
 19507  0154C6  0EFB               	movlw	-5
 19508  0154C8  50E3               	movf	plusw1,w,c
 19509  0154CA  1026               	iorwf	btemp^0,w,c
 19510  0154CC  A4D8               	btfss	status,2,c
 19511  0154CE  D002               	goto	u10700
 19512  0154D0  A40E               	btfss	_flags^0,2,c
 19513  0154D2  D00A               	goto	l11647
 19514  0154D4                     u10700:
 19515                           
 19516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19517                           ;stkvar	_w @ sp[(-18)+14]
 19518  0154D4  50E1               	movf	fsr1l,w,c
 19519  0154D6  0FFC               	addlw	-4
 19520  0154D8  6ED9               	movwf	fsr2l,c
 19521  0154DA  50E2               	movf	fsr1h,w,c
 19522  0154DC  6EDA               	movwf	fsr2h,c
 19523  0154DE  0EFF               	movlw	255
 19524  0154E0  22DA               	addwfc	fsr2h,f,c
 19525  0154E2  06DE               	decf	postinc2,f,c
 19526  0154E4  0E00               	movlw	0
 19527  0154E6  5ADD               	subwfb	postdec2,f,c
 19528  0154E8                     l11647:
 19529                           
 19530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19531  0154E8  0E4F               	movlw	79
 19532  0154EA  6E30               	movwf	(btemp+10)^0,c
 19533  0154EC  0E00               	movlw	0
 19534  0154EE  6E31               	movwf	(btemp+11)^0,c
 19535                           
 19536                           ;stkvar	_i @ sp[(-18)+10]
 19537  0154F0  0EF8               	movlw	-8
 19538  0154F2  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 19539  0154F8  0EF9               	movlw	-7
 19540  0154FA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 19541                           
 19542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19543  015500  0103               	movlb	3	; () banked
 19544  015502  6BFD               	clrf	(_dbuf+79)& (0+255),b
 19545                           
 19546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19547  015504  D109               	goto	l11661
 19548  015506                     l11651:
 19549                           
 19550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19551                           ;stkvar	_i @ sp[(-18)+10]
 19552  015506  50E1               	movf	fsr1l,w,c
 19553  015508  0FF8               	addlw	-8
 19554  01550A  6ED9               	movwf	fsr2l,c
 19555  01550C  50E2               	movf	fsr1h,w,c
 19556  01550E  6EDA               	movwf	fsr2h,c
 19557  015510  0EFF               	movlw	255
 19558  015512  22DA               	addwfc	fsr2h,f,c
 19559  015514  06DE               	decf	postinc2,f,c
 19560  015516  0E00               	movlw	0
 19561  015518  5ADD               	subwfb	postdec2,f,c
 19562                           
 19563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19564  01551A  0E0A               	movlw	10
 19565  01551C  6EE6               	movwf	postinc1,c
 19566  01551E  0E00               	movlw	0
 19567  015520  6EE6               	movwf	postinc1,c
 19568  015522  0E00               	movlw	0
 19569  015524  6EE6               	movwf	postinc1,c
 19570  015526  0E00               	movlw	0
 19571  015528  6EE6               	movwf	postinc1,c
 19572  01552A  0E00               	movlw	0
 19573  01552C  6EE6               	movwf	postinc1,c
 19574  01552E  0E00               	movlw	0
 19575  015530  6EE6               	movwf	postinc1,c
 19576  015532  0E00               	movlw	0
 19577  015534  6EE6               	movwf	postinc1,c
 19578  015536  0E00               	movlw	0
 19579  015538  6EE6               	movwf	postinc1,c
 19580                           
 19581                           ;stkvar	_n @ sp[(-26)+2]
 19582  01553A  50E1               	movf	fsr1l,w,c
 19583  01553C  0FE8               	addlw	-24
 19584  01553E  6ED9               	movwf	fsr2l,c
 19585  015540  50E2               	movf	fsr1h,w,c
 19586  015542  6EDA               	movwf	fsr2h,c
 19587  015544  0EFF               	movlw	255
 19588  015546  22DA               	addwfc	fsr2h,f,c
 19589  015548  006F FF7B FFE6     	movff	postinc2,postinc1
 19590  01554E  006F FF7B FFE6     	movff	postinc2,postinc1
 19591  015554  006F FF7B FFE6     	movff	postinc2,postinc1
 19592  01555A  006F FF7B FFE6     	movff	postinc2,postinc1
 19593  015560  006F FF7B FFE6     	movff	postinc2,postinc1
 19594  015566  006F FF7B FFE6     	movff	postinc2,postinc1
 19595  01556C  006F FF7B FFE6     	movff	postinc2,postinc1
 19596  015572  006F FF7B FFE6     	movff	postinc2,postinc1
 19597  015578  ECDB  F0B9         	call	___aomod	;wreg free
 19598  01557C  52E5               	movf	postdec1,f,c
 19599  01557E  006F FF9C  F03D    	movff	indf1,btemp+23
 19600  015584  52E5               	movf	postdec1,f,c
 19601  015586  006F FF9C  F03C    	movff	indf1,btemp+22
 19602  01558C  52E5               	movf	postdec1,f,c
 19603  01558E  006F FF9C  F03B    	movff	indf1,btemp+21
 19604  015594  52E5               	movf	postdec1,f,c
 19605  015596  006F FF9C  F03A    	movff	indf1,btemp+20
 19606  01559C  52E5               	movf	postdec1,f,c
 19607  01559E  006F FF9C  F039    	movff	indf1,btemp+19
 19608  0155A4  52E5               	movf	postdec1,f,c
 19609  0155A6  006F FF9C  F038    	movff	indf1,btemp+18
 19610  0155AC  52E5               	movf	postdec1,f,c
 19611  0155AE  006F FF9C  F037    	movff	indf1,btemp+17
 19612  0155B4  52E5               	movf	postdec1,f,c
 19613  0155B6  006F FF9C  F036    	movff	indf1,btemp+16
 19614  0155BC  0EF8               	movlw	248
 19615  0155BE  26E1               	addwf	fsr1l,f,c
 19616  0155C0  0EFF               	movlw	255
 19617  0155C2  22E2               	addwfc	fsr1h,f,c
 19618  0155C4  0060  F0D8  F030   	movff	btemp+16,btemp+10
 19619  0155CA  0060  F0DC  F031   	movff	btemp+17,btemp+11
 19620  0155D0  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 19621  0155D6  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 19622  0155DC  ECFC  F0D5         	call	_abs	;wreg free
 19623  0155E0  0E30               	movlw	48
 19624  0155E2  2626               	addwf	btemp^0,f,c
 19625                           
 19626                           ;stkvar	_i @ sp[(-18)+10]
 19627  0155E4  0EF8               	movlw	-8
 19628  0155E6  006F FF8C  F030    	movff	plusw1,btemp+10
 19629  0155EC  0EF9               	movlw	-7
 19630  0155EE  006F FF8C  F031    	movff	plusw1,btemp+11
 19631  0155F4  0EAE               	movlw	low _dbuf
 19632  0155F6  2430               	addwf	(btemp+10)^0,w,c
 19633  0155F8  6ED9               	movwf	fsr2l,c
 19634  0155FA  0E03               	movlw	high _dbuf
 19635  0155FC  2031               	addwfc	(btemp+11)^0,w,c
 19636  0155FE  6EDA               	movwf	fsr2h,c
 19637  015600  0060  F09B  FFDF   	movff	btemp,indf2
 19638                           
 19639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19640                           ;stkvar	_p @ sp[(-18)+16]
 19641  015606  50E1               	movf	fsr1l,w,c
 19642  015608  0FFE               	addlw	-2
 19643  01560A  6ED9               	movwf	fsr2l,c
 19644  01560C  50E2               	movf	fsr1h,w,c
 19645  01560E  6EDA               	movwf	fsr2h,c
 19646  015610  0EFF               	movlw	255
 19647  015612  22DA               	addwfc	fsr2h,f,c
 19648  015614  06DE               	decf	postinc2,f,c
 19649  015616  0E00               	movlw	0
 19650  015618  5ADD               	subwfb	postdec2,f,c
 19651                           
 19652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19653                           ;stkvar	_w @ sp[(-18)+14]
 19654  01561A  50E1               	movf	fsr1l,w,c
 19655  01561C  0FFC               	addlw	-4
 19656  01561E  6ED9               	movwf	fsr2l,c
 19657  015620  50E2               	movf	fsr1h,w,c
 19658  015622  6EDA               	movwf	fsr2h,c
 19659  015624  0EFF               	movlw	255
 19660  015626  22DA               	addwfc	fsr2h,f,c
 19661  015628  06DE               	decf	postinc2,f,c
 19662  01562A  0E00               	movlw	0
 19663  01562C  5ADD               	subwfb	postdec2,f,c
 19664                           
 19665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19666  01562E  0E0A               	movlw	10
 19667  015630  6EE6               	movwf	postinc1,c
 19668  015632  0E00               	movlw	0
 19669  015634  6EE6               	movwf	postinc1,c
 19670  015636  0E00               	movlw	0
 19671  015638  6EE6               	movwf	postinc1,c
 19672  01563A  0E00               	movlw	0
 19673  01563C  6EE6               	movwf	postinc1,c
 19674  01563E  0E00               	movlw	0
 19675  015640  6EE6               	movwf	postinc1,c
 19676  015642  0E00               	movlw	0
 19677  015644  6EE6               	movwf	postinc1,c
 19678  015646  0E00               	movlw	0
 19679  015648  6EE6               	movwf	postinc1,c
 19680  01564A  0E00               	movlw	0
 19681  01564C  6EE6               	movwf	postinc1,c
 19682                           
 19683                           ;stkvar	_n @ sp[(-26)+2]
 19684  01564E  50E1               	movf	fsr1l,w,c
 19685  015650  0FE8               	addlw	-24
 19686  015652  6ED9               	movwf	fsr2l,c
 19687  015654  50E2               	movf	fsr1h,w,c
 19688  015656  6EDA               	movwf	fsr2h,c
 19689  015658  0EFF               	movlw	255
 19690  01565A  22DA               	addwfc	fsr2h,f,c
 19691  01565C  006F FF7B FFE6     	movff	postinc2,postinc1
 19692  015662  006F FF7B FFE6     	movff	postinc2,postinc1
 19693  015668  006F FF7B FFE6     	movff	postinc2,postinc1
 19694  01566E  006F FF7B FFE6     	movff	postinc2,postinc1
 19695  015674  006F FF7B FFE6     	movff	postinc2,postinc1
 19696  01567A  006F FF7B FFE6     	movff	postinc2,postinc1
 19697  015680  006F FF7B FFE6     	movff	postinc2,postinc1
 19698  015686  006F FF7B FFE6     	movff	postinc2,postinc1
 19699  01568C  EC61  F0B7         	call	___aodiv	;wreg free
 19700  015690  52E5               	movf	postdec1,f,c
 19701  015692  006F FF9C  F03D    	movff	indf1,btemp+23
 19702  015698  52E5               	movf	postdec1,f,c
 19703  01569A  006F FF9C  F03C    	movff	indf1,btemp+22
 19704  0156A0  52E5               	movf	postdec1,f,c
 19705  0156A2  006F FF9C  F03B    	movff	indf1,btemp+21
 19706  0156A8  52E5               	movf	postdec1,f,c
 19707  0156AA  006F FF9C  F03A    	movff	indf1,btemp+20
 19708  0156B0  52E5               	movf	postdec1,f,c
 19709  0156B2  006F FF9C  F039    	movff	indf1,btemp+19
 19710  0156B8  52E5               	movf	postdec1,f,c
 19711  0156BA  006F FF9C  F038    	movff	indf1,btemp+18
 19712  0156C0  52E5               	movf	postdec1,f,c
 19713  0156C2  006F FF9C  F037    	movff	indf1,btemp+17
 19714  0156C8  52E5               	movf	postdec1,f,c
 19715  0156CA  006F FF9C  F036    	movff	indf1,btemp+16
 19716  0156D0  0EF8               	movlw	248
 19717  0156D2  26E1               	addwf	fsr1l,f,c
 19718  0156D4  0EFF               	movlw	255
 19719  0156D6  22E2               	addwfc	fsr1h,f,c
 19720                           
 19721                           ;stkvar	_n @ sp[(-18)+2]
 19722  0156D8  0EF0               	movlw	-16
 19723  0156DA  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 19724  0156E0  0EF1               	movlw	-15
 19725  0156E2  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 19726  0156E8  0EF2               	movlw	-14
 19727  0156EA  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 19728  0156F0  0EF3               	movlw	-13
 19729  0156F2  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 19730  0156F8  0EF4               	movlw	-12
 19731  0156FA  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 19732  015700  0EF5               	movlw	-11
 19733  015702  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 19734  015708  0EF6               	movlw	-10
 19735  01570A  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 19736  015710  0EF7               	movlw	-9
 19737  015712  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 19738  015718                     l11661:
 19739                           
 19740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19741                           ;stkvar	_i @ sp[(-18)+10]
 19742  015718  0EF9               	movlw	-7
 19743  01571A  BEE3               	btfsc	plusw1,7,c
 19744  01571C  D036               	goto	u10750
 19745  01571E  0EF9               	movlw	-7
 19746  015720  50E3               	movf	plusw1,w,c
 19747  015722  E104               	bnz	u10710
 19748  015724  0EF8               	movlw	-8
 19749  015726  04E3               	decf	plusw1,w,c
 19750  015728  A0D8               	btfss	status,0,c
 19751  01572A  D02F               	goto	u10750
 19752  01572C                     u10710:
 19753                           
 19754                           ;stkvar	_n @ sp[(-18)+2]
 19755  01572C  0EF0               	movlw	-16
 19756  01572E  50E3               	movf	plusw1,w,c
 19757  015730  E115               	bnz	u10721
 19758  015732  0EF1               	movlw	-15
 19759  015734  50E3               	movf	plusw1,w,c
 19760  015736  E112               	bnz	u10721
 19761  015738  0EF2               	movlw	-14
 19762  01573A  50E3               	movf	plusw1,w,c
 19763  01573C  E10F               	bnz	u10721
 19764  01573E  0EF3               	movlw	-13
 19765  015740  50E3               	movf	plusw1,w,c
 19766  015742  E10C               	bnz	u10721
 19767  015744  0EF4               	movlw	-12
 19768  015746  50E3               	movf	plusw1,w,c
 19769  015748  E109               	bnz	u10721
 19770  01574A  0EF5               	movlw	-11
 19771  01574C  50E3               	movf	plusw1,w,c
 19772  01574E  E106               	bnz	u10721
 19773  015750  0EF6               	movlw	-10
 19774  015752  50E3               	movf	plusw1,w,c
 19775  015754  E103               	bnz	u10721
 19776  015756  0EF7               	movlw	-9
 19777  015758  50E3               	movf	plusw1,w,c
 19778  01575A  A4D8               	btfss	status,2,c
 19779  01575C                     u10721:
 19780  01575C  D6D4               	goto	l11651
 19781                           
 19782                           ;stkvar	_p @ sp[(-18)+16]
 19783  01575E  0EFF               	movlw	-1
 19784  015760  BEE3               	btfsc	plusw1,7,c
 19785  015762  D007               	goto	u10730
 19786  015764  0EFF               	movlw	-1
 19787  015766  50E3               	movf	plusw1,w,c
 19788  015768  E103               	bnz	u10731
 19789  01576A  0EFE               	movlw	-2
 19790  01576C  04E3               	decf	plusw1,w,c
 19791  01576E  B0D8               	btfsc	status,0,c
 19792  015770                     u10731:
 19793  015770  D6CA               	goto	l11651
 19794  015772                     u10730:
 19795                           
 19796                           ;stkvar	_w @ sp[(-18)+14]
 19797  015772  0EFD               	movlw	-3
 19798  015774  BEE3               	btfsc	plusw1,7,c
 19799  015776  D009               	goto	u10750
 19800  015778  0EFD               	movlw	-3
 19801  01577A  50E3               	movf	plusw1,w,c
 19802  01577C  E104               	bnz	u10740
 19803  01577E  0EFC               	movlw	-4
 19804  015780  04E3               	decf	plusw1,w,c
 19805  015782  A0D8               	btfss	status,0,c
 19806  015784  D002               	goto	u10750
 19807  015786                     u10740:
 19808  015786  B20E               	btfsc	_flags^0,1,c
 19809  015788  D6BE               	goto	l11651
 19810  01578A                     u10750:
 19811                           
 19812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19813                           ;stkvar	_s @ sp[(-18)+12]
 19814  01578A  0EFA               	movlw	-6
 19815  01578C  006F FF8C  F026    	movff	plusw1,btemp
 19816  015792  0EFB               	movlw	-5
 19817  015794  50E3               	movf	plusw1,w,c
 19818  015796  1026               	iorwf	btemp^0,w,c
 19819  015798  A4D8               	btfss	status,2,c
 19820  01579A  D002               	goto	u10770
 19821  01579C  A40E               	btfss	_flags^0,2,c
 19822  01579E  D033               	goto	l11685
 19823  0157A0                     u10770:
 19824                           
 19825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19826                           ;stkvar	_i @ sp[(-18)+10]
 19827  0157A0  50E1               	movf	fsr1l,w,c
 19828  0157A2  0FF8               	addlw	-8
 19829  0157A4  6ED9               	movwf	fsr2l,c
 19830  0157A6  50E2               	movf	fsr1h,w,c
 19831  0157A8  6EDA               	movwf	fsr2h,c
 19832  0157AA  0EFF               	movlw	255
 19833  0157AC  22DA               	addwfc	fsr2h,f,c
 19834  0157AE  06DE               	decf	postinc2,f,c
 19835  0157B0  0E00               	movlw	0
 19836  0157B2  5ADD               	subwfb	postdec2,f,c
 19837                           
 19838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19839                           ;stkvar	_s @ sp[(-18)+12]
 19840  0157B4  0EFA               	movlw	-6
 19841  0157B6  006F FF8C  F026    	movff	plusw1,btemp
 19842  0157BC  0EFB               	movlw	-5
 19843  0157BE  50E3               	movf	plusw1,w,c
 19844  0157C0  1026               	iorwf	btemp^0,w,c
 19845  0157C2  A4D8               	btfss	status,2,c
 19846  0157C4  D002               	goto	l11681
 19847  0157C6  0E2B               	movlw	43
 19848  0157C8  D001               	goto	L24
 19849  0157CA                     l11681:
 19850  0157CA  0E2D               	movlw	45
 19851  0157CC                     L24:
 19852  0157CC  6E30               	movwf	(btemp+10)^0,c
 19853  0157CE  0E00               	movlw	0
 19854  0157D0  6E31               	movwf	(btemp+11)^0,c
 19855                           
 19856                           ;stkvar	_dtoa$5386 @ sp[(-18)+0]
 19857  0157D2  0EEE               	movlw	-18
 19858  0157D4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 19859  0157DA  0EEF               	movlw	-17
 19860  0157DC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 19861                           
 19862                           ;stkvar	_dtoa$5386 @ sp[(-18)+0]
 19863                           ;stkvar	_i @ sp[(-18)+10]
 19864  0157E2  0EF8               	movlw	-8
 19865  0157E4  006F FF8C  F030    	movff	plusw1,btemp+10
 19866  0157EA  0EF9               	movlw	-7
 19867  0157EC  006F FF8C  F031    	movff	plusw1,btemp+11
 19868  0157F2  0EAE               	movlw	low _dbuf
 19869  0157F4  2430               	addwf	(btemp+10)^0,w,c
 19870  0157F6  6ED9               	movwf	fsr2l,c
 19871  0157F8  0E03               	movlw	high _dbuf
 19872  0157FA  2031               	addwfc	(btemp+11)^0,w,c
 19873  0157FC  6EDA               	movwf	fsr2h,c
 19874  0157FE  0EEE               	movlw	-18
 19875  015800  006F FF8F FFDF     	movff	plusw1,indf2
 19876  015806                     l11685:
 19877                           
 19878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19879                           ;stkvar	_w @ sp[(-18)+14]
 19880  015806  0EFC               	movlw	-4
 19881  015808  006F FF8F FFE6     	movff	plusw1,postinc1
 19882  01580E  006F FF8F FFE6     	movff	plusw1,postinc1
 19883                           
 19884                           ;stkvar	_i @ sp[(-20)+10]
 19885  015814  0EAE               	movlw	low _dbuf
 19886  015816  6E30               	movwf	(btemp+10)^0,c
 19887  015818  0E03               	movlw	high _dbuf
 19888  01581A  6E31               	movwf	(btemp+11)^0,c
 19889  01581C  0EF6               	movlw	-10
 19890  01581E  50E3               	movf	plusw1,w,c
 19891  015820  2630               	addwf	(btemp+10)^0,f,c
 19892  015822  0EF7               	movlw	-9
 19893  015824  50E3               	movf	plusw1,w,c
 19894  015826  2231               	addwfc	(btemp+11)^0,f,c
 19895  015828  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 19896  01582E  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 19897                           
 19898                           ;stkvar	_fp @ sp[(-22)+-2]
 19899  015834  0EE8               	movlw	-24
 19900  015836  006F FF8F FFE6     	movff	plusw1,postinc1
 19901  01583C  006F FF8F FFE6     	movff	plusw1,postinc1
 19902  015842  ECA7  F0C8         	call	_pad	;wreg free
 19903                           
 19904                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19905  015846  0EE4               	movlw	228
 19906  015848  26E1               	addwf	fsr1l,f,c
 19907  01584A  0EFF               	movlw	255
 19908  01584C  22E2               	addwfc	fsr1h,f,c
 19909  01584E  0012               	return		;funcret
 19910  015850                     __end_of_dtoa:
 19911                           	opt callstack 0
 19912                           
 19913 ;; *************** function _abs *****************
 19914 ;; Defined at:
 19915 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19916 ;; Parameters:    Size  Location     Type
 19917 ;;  a               2  [STACK] int 
 19918 ;; Auto vars:     Size  Location     Type
 19919 ;;		None
 19920 ;; Return value:  Size  Location     Type
 19921 ;;                  2  [STACK] int 
 19922 ;; Registers used:
 19923 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19924 ;; Tracked objects:
 19925 ;;		On entry : 0/3
 19926 ;;		On exit  : 0/0
 19927 ;;		Unchanged: 0/0
 19928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19933 ;;Total ram usage:        0 bytes
 19934 ;; Hardware stack levels used:    1
 19935 ;; Hardware stack levels required when called:   15
 19936 ;; This function calls:
 19937 ;;		Nothing
 19938 ;; This function is called by:
 19939 ;;		_dtoa
 19940 ;; This function uses a reentrant model
 19941 ;;
 19942                           
 19943                           	psect	text67
 19944  01ABF8                     __ptext67:
 19945                           	opt callstack 0
 19946  01ABF8                     _abs:
 19947                           	opt callstack 0
 19948                           
 19949                           ;stkvar	_a @ sp[(0)+-2]
 19950                           
 19951                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19952                           ;incstack = 0
 19953 ;; hardware stack exceeded
 19954  01ABF8  0EFF               	movlw	-1
 19955  01ABFA  BEE3               	btfsc	plusw1,7,c
 19956  01ABFC  D007               	goto	u5820
 19957  01ABFE  0EFF               	movlw	-1
 19958  01AC00  50E3               	movf	plusw1,w,c
 19959  01AC02  E112               	bnz	l7835
 19960  01AC04  0EFE               	movlw	-2
 19961  01AC06  04E3               	decf	plusw1,w,c
 19962  01AC08  B0D8               	btfsc	status,0,c
 19963  01AC0A  D00E               	goto	l7835
 19964  01AC0C                     u5820:
 19965                           
 19966                           ;stkvar	_a @ sp[(0)+-2]
 19967  01AC0C  0EFE               	movlw	-2
 19968  01AC0E  006F FF8C  F026    	movff	plusw1,btemp
 19969  01AC14  1E26               	comf	btemp^0,f,c
 19970  01AC16  0EFF               	movlw	-1
 19971  01AC18  006F FF8C  F027    	movff	plusw1,btemp+1
 19972  01AC1E  1E27               	comf	(btemp+1)^0,f,c
 19973  01AC20  2A26               	incf	btemp^0,f,c
 19974  01AC22  B4D8               	btfsc	status,2,c
 19975  01AC24  2A27               	incf	(btemp+1)^0,f,c
 19976  01AC26  D008               	goto	l3077
 19977  01AC28                     l7835:
 19978                           
 19979                           ;stkvar	_a @ sp[(0)+-2]
 19980  01AC28  0EFE               	movlw	-2
 19981  01AC2A  006F FF8C  F026    	movff	plusw1,btemp
 19982  01AC30  0EFF               	movlw	-1
 19983  01AC32  006F FF8C  F027    	movff	plusw1,btemp+1
 19984  01AC38                     l3077:
 19985                           
 19986                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19987  01AC38  52E5               	movf	postdec1,f,c
 19988  01AC3A  52E5               	movf	postdec1,f,c
 19989  01AC3C  0012               	return		;funcret
 19990  01AC3E                     __end_of_abs:
 19991                           	opt callstack 0
 19992                           
 19993 ;; *************** function ___aomod *****************
 19994 ;; Defined at:
 19995 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19996 ;; Parameters:    Size  Location     Type
 19997 ;;  dividend        8  [STACK] long long 
 19998 ;;  divisor         8  [STACK] long long 
 19999 ;; Auto vars:     Size  Location     Type
 20000 ;;  sign            1  [STACK] unsigned char 
 20001 ;;  counter         1  [STACK] unsigned char 
 20002 ;; Return value:  Size  Location     Type
 20003 ;;                  8  [STACK] long long 
 20004 ;; Registers used:
 20005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20006 ;; Tracked objects:
 20007 ;;		On entry : 0/3
 20008 ;;		On exit  : 0/0
 20009 ;;		Unchanged: 0/0
 20010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20015 ;;Total ram usage:        0 bytes
 20016 ;; Hardware stack levels used:    1
 20017 ;; Hardware stack levels required when called:   15
 20018 ;; This function calls:
 20019 ;;		Nothing
 20020 ;; This function is called by:
 20021 ;;		_dtoa
 20022 ;; This function uses a reentrant model
 20023 ;;
 20024                           
 20025                           	psect	text68
 20026  0173B6                     __ptext68:
 20027                           	opt callstack 0
 20028  0173B6                     ___aomod:
 20029                           	opt callstack 0
 20030                           
 20031                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 20032  0173B6  52E6               	movf	postinc1,f,c
 20033  0173B8  52E6               	movf	postinc1,f,c
 20034                           
 20035                           ;stkvar	_sign @ sp[(-2)+0]
 20036                           
 20037                           ;incstack = 0
 20038 ;; hardware stack exceeded
 20039  0173BA  0EFE               	movlw	-2
 20040  0173BC  6AE3               	clrf	plusw1,c
 20041                           
 20042                           ;stkvar	_dividend @ sp[(-2)+-8]
 20043  0173BE  0EFD               	movlw	-3
 20044  0173C0  AEE3               	btfss	plusw1,7,c
 20045  0173C2  D028               	goto	l7993
 20046                           
 20047                           ;stkvar	_dividend @ sp[(-2)+-8]
 20048                           ;stkvar	_dividend @ sp[(-2)+-8]
 20049  0173C4  0EF6               	movlw	-10
 20050  0173C6  6CE3               	negf	plusw1,c
 20051  0173C8  0EF7               	movlw	-9
 20052  0173CA  1EE3               	comf	plusw1,f,c
 20053  0173CC  0EF8               	movlw	-8
 20054  0173CE  1EE3               	comf	plusw1,f,c
 20055  0173D0  0EF9               	movlw	-7
 20056  0173D2  1EE3               	comf	plusw1,f,c
 20057  0173D4  0EFA               	movlw	-6
 20058  0173D6  1EE3               	comf	plusw1,f,c
 20059  0173D8  0EFB               	movlw	-5
 20060  0173DA  1EE3               	comf	plusw1,f,c
 20061  0173DC  0EFC               	movlw	-4
 20062  0173DE  1EE3               	comf	plusw1,f,c
 20063  0173E0  0EFD               	movlw	-3
 20064  0173E2  1EE3               	comf	plusw1,f,c
 20065  0173E4  E314               	bnc	u6250
 20066  0173E6  0EF7               	movlw	-9
 20067  0173E8  2AE3               	incf	plusw1,f,c
 20068  0173EA  E311               	bnc	u6250
 20069  0173EC  0EF8               	movlw	-8
 20070  0173EE  2AE3               	incf	plusw1,f,c
 20071  0173F0  E30E               	bnc	u6250
 20072  0173F2  0EF9               	movlw	-7
 20073  0173F4  2AE3               	incf	plusw1,f,c
 20074  0173F6  E30B               	bnc	u6250
 20075  0173F8  0EFA               	movlw	-6
 20076  0173FA  2AE3               	incf	plusw1,f,c
 20077  0173FC  E308               	bnc	u6250
 20078  0173FE  0EFB               	movlw	-5
 20079  017400  2AE3               	incf	plusw1,f,c
 20080  017402  E305               	bnc	u6250
 20081  017404  0EFC               	movlw	-4
 20082  017406  2AE3               	incf	plusw1,f,c
 20083  017408  E302               	bnc	u6250
 20084  01740A  0EFD               	movlw	-3
 20085  01740C  2AE3               	incf	plusw1,f,c
 20086  01740E                     u6250:
 20087                           
 20088                           ;stkvar	_sign @ sp[(-2)+0]
 20089  01740E  0EFE               	movlw	-2
 20090  017410  6AE3               	clrf	plusw1,c
 20091  017412  2AE3               	incf	plusw1,f,c
 20092  017414                     l7993:
 20093                           
 20094                           ;stkvar	_divisor @ sp[(-2)+-16]
 20095  017414  0EF5               	movlw	-11
 20096  017416  AEE3               	btfss	plusw1,7,c
 20097  017418  D025               	goto	u6270
 20098                           
 20099                           ;stkvar	_divisor @ sp[(-2)+-16]
 20100                           ;stkvar	_divisor @ sp[(-2)+-16]
 20101  01741A  0EEE               	movlw	-18
 20102  01741C  6CE3               	negf	plusw1,c
 20103  01741E  0EEF               	movlw	-17
 20104  017420  1EE3               	comf	plusw1,f,c
 20105  017422  0EF0               	movlw	-16
 20106  017424  1EE3               	comf	plusw1,f,c
 20107  017426  0EF1               	movlw	-15
 20108  017428  1EE3               	comf	plusw1,f,c
 20109  01742A  0EF2               	movlw	-14
 20110  01742C  1EE3               	comf	plusw1,f,c
 20111  01742E  0EF3               	movlw	-13
 20112  017430  1EE3               	comf	plusw1,f,c
 20113  017432  0EF4               	movlw	-12
 20114  017434  1EE3               	comf	plusw1,f,c
 20115  017436  0EF5               	movlw	-11
 20116  017438  1EE3               	comf	plusw1,f,c
 20117  01743A  E314               	bnc	u6270
 20118  01743C  0EEF               	movlw	-17
 20119  01743E  2AE3               	incf	plusw1,f,c
 20120  017440  E311               	bnc	u6270
 20121  017442  0EF0               	movlw	-16
 20122  017444  2AE3               	incf	plusw1,f,c
 20123  017446  E30E               	bnc	u6270
 20124  017448  0EF1               	movlw	-15
 20125  01744A  2AE3               	incf	plusw1,f,c
 20126  01744C  E30B               	bnc	u6270
 20127  01744E  0EF2               	movlw	-14
 20128  017450  2AE3               	incf	plusw1,f,c
 20129  017452  E308               	bnc	u6270
 20130  017454  0EF3               	movlw	-13
 20131  017456  2AE3               	incf	plusw1,f,c
 20132  017458  E305               	bnc	u6270
 20133  01745A  0EF4               	movlw	-12
 20134  01745C  2AE3               	incf	plusw1,f,c
 20135  01745E  E302               	bnc	u6270
 20136  017460  0EF5               	movlw	-11
 20137  017462  2AE3               	incf	plusw1,f,c
 20138  017464                     u6270:
 20139                           
 20140                           ;stkvar	_divisor @ sp[(-2)+-16]
 20141  017464  0EEE               	movlw	-18
 20142  017466  50E3               	movf	plusw1,w,c
 20143  017468  E116               	bnz	u6280
 20144  01746A  0EEF               	movlw	-17
 20145  01746C  50E3               	movf	plusw1,w,c
 20146  01746E  E113               	bnz	u6280
 20147  017470  0EF0               	movlw	-16
 20148  017472  50E3               	movf	plusw1,w,c
 20149  017474  E110               	bnz	u6280
 20150  017476  0EF1               	movlw	-15
 20151  017478  50E3               	movf	plusw1,w,c
 20152  01747A  E10D               	bnz	u6280
 20153  01747C  0EF2               	movlw	-14
 20154  01747E  50E3               	movf	plusw1,w,c
 20155  017480  E10A               	bnz	u6280
 20156  017482  0EF3               	movlw	-13
 20157  017484  50E3               	movf	plusw1,w,c
 20158  017486  E107               	bnz	u6280
 20159  017488  0EF4               	movlw	-12
 20160  01748A  50E3               	movf	plusw1,w,c
 20161  01748C  E104               	bnz	u6280
 20162  01748E  0EF5               	movlw	-11
 20163  017490  50E3               	movf	plusw1,w,c
 20164  017492  B4D8               	btfsc	status,2,c
 20165  017494  D075               	goto	u6310
 20166  017496                     u6280:
 20167                           
 20168                           ;stkvar	_counter @ sp[(-2)+1]
 20169  017496  0EFF               	movlw	-1
 20170  017498  6AE3               	clrf	plusw1,c
 20171  01749A  D012               	goto	L25
 20172  01749C                     l8001:
 20173                           
 20174                           ;stkvar	_divisor @ sp[(-2)+-16]
 20175  01749C  90D8               	bcf	status,0,c
 20176  01749E  0EEE               	movlw	-18
 20177  0174A0  36E3               	rlcf	plusw1,f,c
 20178  0174A2  0EEF               	movlw	-17
 20179  0174A4  36E3               	rlcf	plusw1,f,c
 20180  0174A6  0EF0               	movlw	-16
 20181  0174A8  36E3               	rlcf	plusw1,f,c
 20182  0174AA  0EF1               	movlw	-15
 20183  0174AC  36E3               	rlcf	plusw1,f,c
 20184  0174AE  0EF2               	movlw	-14
 20185  0174B0  36E3               	rlcf	plusw1,f,c
 20186  0174B2  0EF3               	movlw	-13
 20187  0174B4  36E3               	rlcf	plusw1,f,c
 20188  0174B6  0EF4               	movlw	-12
 20189  0174B8  36E3               	rlcf	plusw1,f,c
 20190  0174BA  0EF5               	movlw	-11
 20191  0174BC  36E3               	rlcf	plusw1,f,c
 20192                           
 20193                           ;stkvar	_counter @ sp[(-2)+1]
 20194  0174BE  0EFF               	movlw	-1
 20195  0174C0                     L25:
 20196  0174C0  2AE3               	incf	plusw1,f,c
 20197                           
 20198                           ;stkvar	_divisor @ sp[(-2)+-16]
 20199  0174C2  0EF5               	movlw	-11
 20200  0174C4  AEE3               	btfss	plusw1,7,c
 20201  0174C6  D7EA               	goto	l8001
 20202  0174C8                     u6290:
 20203                           
 20204                           ;stkvar	_divisor @ sp[(-2)+-16]
 20205                           ;stkvar	_dividend @ sp[(-2)+-8]
 20206  0174C8  50E1               	movf	fsr1l,w,c
 20207  0174CA  0FF6               	addlw	-10
 20208  0174CC  6ED9               	movwf	fsr2l,c
 20209  0174CE  50E2               	movf	fsr1h,w,c
 20210  0174D0  6EDA               	movwf	fsr2h,c
 20211  0174D2  0EFF               	movlw	255
 20212  0174D4  22DA               	addwfc	fsr2h,f,c
 20213  0174D6  0EEE               	movlw	-18
 20214  0174D8  50E3               	movf	plusw1,w,c
 20215  0174DA  5CDE               	subwf	postinc2,w,c
 20216  0174DC  0EEF               	movlw	-17
 20217  0174DE  50E3               	movf	plusw1,w,c
 20218  0174E0  58DE               	subwfb	postinc2,w,c
 20219  0174E2  0EF0               	movlw	-16
 20220  0174E4  50E3               	movf	plusw1,w,c
 20221  0174E6  58DE               	subwfb	postinc2,w,c
 20222  0174E8  0EF1               	movlw	-15
 20223  0174EA  50E3               	movf	plusw1,w,c
 20224  0174EC  58DE               	subwfb	postinc2,w,c
 20225  0174EE  0EF2               	movlw	-14
 20226  0174F0  50E3               	movf	plusw1,w,c
 20227  0174F2  58DE               	subwfb	postinc2,w,c
 20228  0174F4  0EF3               	movlw	-13
 20229  0174F6  50E3               	movf	plusw1,w,c
 20230  0174F8  58DE               	subwfb	postinc2,w,c
 20231  0174FA  0EF4               	movlw	-12
 20232  0174FC  50E3               	movf	plusw1,w,c
 20233  0174FE  58DE               	subwfb	postinc2,w,c
 20234  017500  0EF5               	movlw	-11
 20235  017502  50E3               	movf	plusw1,w,c
 20236  017504  58DE               	subwfb	postinc2,w,c
 20237  017506  A0D8               	btfss	status,0,c
 20238  017508  D01F               	goto	l8009
 20239                           
 20240                           ;stkvar	_divisor @ sp[(-2)+-16]
 20241                           ;stkvar	_dividend @ sp[(-2)+-8]
 20242  01750A  50E1               	movf	fsr1l,w,c
 20243  01750C  0FF6               	addlw	-10
 20244  01750E  6ED9               	movwf	fsr2l,c
 20245  017510  50E2               	movf	fsr1h,w,c
 20246  017512  6EDA               	movwf	fsr2h,c
 20247  017514  0EFF               	movlw	255
 20248  017516  22DA               	addwfc	fsr2h,f,c
 20249  017518  0EEE               	movlw	-18
 20250  01751A  50E3               	movf	plusw1,w,c
 20251  01751C  5EDE               	subwf	postinc2,f,c
 20252  01751E  0EEF               	movlw	-17
 20253  017520  50E3               	movf	plusw1,w,c
 20254  017522  5ADE               	subwfb	postinc2,f,c
 20255  017524  0EF0               	movlw	-16
 20256  017526  50E3               	movf	plusw1,w,c
 20257  017528  5ADE               	subwfb	postinc2,f,c
 20258  01752A  0EF1               	movlw	-15
 20259  01752C  50E3               	movf	plusw1,w,c
 20260  01752E  5ADE               	subwfb	postinc2,f,c
 20261  017530  0EF2               	movlw	-14
 20262  017532  50E3               	movf	plusw1,w,c
 20263  017534  5ADE               	subwfb	postinc2,f,c
 20264  017536  0EF3               	movlw	-13
 20265  017538  50E3               	movf	plusw1,w,c
 20266  01753A  5ADE               	subwfb	postinc2,f,c
 20267  01753C  0EF4               	movlw	-12
 20268  01753E  50E3               	movf	plusw1,w,c
 20269  017540  5ADE               	subwfb	postinc2,f,c
 20270  017542  0EF5               	movlw	-11
 20271  017544  50E3               	movf	plusw1,w,c
 20272  017546  5ADE               	subwfb	postinc2,f,c
 20273  017548                     l8009:
 20274                           
 20275                           ;stkvar	_divisor @ sp[(-2)+-16]
 20276  017548  90D8               	bcf	status,0,c
 20277  01754A  0EF5               	movlw	-11
 20278  01754C  32E3               	rrcf	plusw1,f,c
 20279  01754E  0EF4               	movlw	-12
 20280  017550  32E3               	rrcf	plusw1,f,c
 20281  017552  0EF3               	movlw	-13
 20282  017554  32E3               	rrcf	plusw1,f,c
 20283  017556  0EF2               	movlw	-14
 20284  017558  32E3               	rrcf	plusw1,f,c
 20285  01755A  0EF1               	movlw	-15
 20286  01755C  32E3               	rrcf	plusw1,f,c
 20287  01755E  0EF0               	movlw	-16
 20288  017560  32E3               	rrcf	plusw1,f,c
 20289  017562  0EEF               	movlw	-17
 20290  017564  32E3               	rrcf	plusw1,f,c
 20291  017566  0EEE               	movlw	-18
 20292  017568  32E3               	rrcf	plusw1,f,c
 20293                           
 20294                           ;stkvar	_counter @ sp[(-2)+1]
 20295  01756A  0EFF               	movlw	-1
 20296  01756C  50E3               	movf	plusw1,w,c
 20297  01756E  6E26               	movwf	btemp^0,c
 20298  017570  0E01               	movlw	1
 20299  017572  5E26               	subwf	btemp^0,f,c
 20300  017574  0EFF               	movlw	-1
 20301  017576  0060  F09B  FFE3   	movff	btemp,plusw1
 20302  01757C  A4D8               	btfss	status,2,c
 20303  01757E  D7A4               	goto	u6290
 20304  017580                     u6310:
 20305                           
 20306                           ;stkvar	_sign @ sp[(-2)+0]
 20307  017580  0EFE               	movlw	-2
 20308  017582  50E3               	movf	plusw1,w,c
 20309  017584  B4D8               	btfsc	status,2,c
 20310  017586  D025               	goto	u6330
 20311                           
 20312                           ;stkvar	_dividend @ sp[(-2)+-8]
 20313                           ;stkvar	_dividend @ sp[(-2)+-8]
 20314  017588  0EF6               	movlw	-10
 20315  01758A  6CE3               	negf	plusw1,c
 20316  01758C  0EF7               	movlw	-9
 20317  01758E  1EE3               	comf	plusw1,f,c
 20318  017590  0EF8               	movlw	-8
 20319  017592  1EE3               	comf	plusw1,f,c
 20320  017594  0EF9               	movlw	-7
 20321  017596  1EE3               	comf	plusw1,f,c
 20322  017598  0EFA               	movlw	-6
 20323  01759A  1EE3               	comf	plusw1,f,c
 20324  01759C  0EFB               	movlw	-5
 20325  01759E  1EE3               	comf	plusw1,f,c
 20326  0175A0  0EFC               	movlw	-4
 20327  0175A2  1EE3               	comf	plusw1,f,c
 20328  0175A4  0EFD               	movlw	-3
 20329  0175A6  1EE3               	comf	plusw1,f,c
 20330  0175A8  E314               	bnc	u6330
 20331  0175AA  0EF7               	movlw	-9
 20332  0175AC  2AE3               	incf	plusw1,f,c
 20333  0175AE  E311               	bnc	u6330
 20334  0175B0  0EF8               	movlw	-8
 20335  0175B2  2AE3               	incf	plusw1,f,c
 20336  0175B4  E30E               	bnc	u6330
 20337  0175B6  0EF9               	movlw	-7
 20338  0175B8  2AE3               	incf	plusw1,f,c
 20339  0175BA  E30B               	bnc	u6330
 20340  0175BC  0EFA               	movlw	-6
 20341  0175BE  2AE3               	incf	plusw1,f,c
 20342  0175C0  E308               	bnc	u6330
 20343  0175C2  0EFB               	movlw	-5
 20344  0175C4  2AE3               	incf	plusw1,f,c
 20345  0175C6  E305               	bnc	u6330
 20346  0175C8  0EFC               	movlw	-4
 20347  0175CA  2AE3               	incf	plusw1,f,c
 20348  0175CC  E302               	bnc	u6330
 20349  0175CE  0EFD               	movlw	-3
 20350  0175D0  2AE3               	incf	plusw1,f,c
 20351  0175D2                     u6330:
 20352                           
 20353                           ;stkvar	_dividend @ sp[(-2)+-8]
 20354  0175D2  0EF6               	movlw	246
 20355  0175D4  24E1               	addwf	fsr1l,w,c
 20356  0175D6  6ED9               	movwf	fsr2l,c
 20357  0175D8  0EFF               	movlw	255
 20358  0175DA  20E2               	addwfc	fsr1h,w,c
 20359  0175DC  6EDA               	movwf	fsr2h,c
 20360                           
 20361                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20362  0175DE  0E08               	movlw	8
 20363  0175E0  6E26               	movwf	btemp^0,c
 20364  0175E2  0EF6               	movlw	-10
 20365  0175E4                     us634999:
 20366  0175E4  006F FF7B FFE3     	movff	postinc2,plusw1
 20367  0175EA  28E8               	incf	wreg,w,c
 20368  0175EC  2E26               	decfsz	btemp^0,f,c
 20369  0175EE  D7FA               	bra	us634999
 20370                           
 20371                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20372  0175F0  52E5               	movf	postdec1,f,c
 20373  0175F2  52E5               	movf	postdec1,f,c
 20374  0175F4  0012               	return		;funcret
 20375  0175F6                     __end_of___aomod:
 20376                           	opt callstack 0
 20377                           
 20378 ;; *************** function ___aodiv *****************
 20379 ;; Defined at:
 20380 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20381 ;; Parameters:    Size  Location     Type
 20382 ;;  dividend        8  [STACK] long long 
 20383 ;;  divisor         8  [STACK] long long 
 20384 ;; Auto vars:     Size  Location     Type
 20385 ;;  quotient        8  [STACK] long long 
 20386 ;;  sign            1  [STACK] unsigned char 
 20387 ;;  counter         1  [STACK] unsigned char 
 20388 ;; Return value:  Size  Location     Type
 20389 ;;                  8  [STACK] long long 
 20390 ;; Registers used:
 20391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20392 ;; Tracked objects:
 20393 ;;		On entry : 0/3
 20394 ;;		On exit  : 0/0
 20395 ;;		Unchanged: 0/0
 20396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20401 ;;Total ram usage:        0 bytes
 20402 ;; Hardware stack levels used:    1
 20403 ;; Hardware stack levels required when called:   15
 20404 ;; This function calls:
 20405 ;;		Nothing
 20406 ;; This function is called by:
 20407 ;;		_dtoa
 20408 ;; This function uses a reentrant model
 20409 ;;
 20410                           
 20411                           	psect	text69
 20412  016EC2                     __ptext69:
 20413                           	opt callstack 0
 20414  016EC2                     ___aodiv:
 20415                           	opt callstack 0
 20416                           
 20417                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20418  016EC2  0E0A               	movlw	10
 20419  016EC4  26E1               	addwf	fsr1l,f,c
 20420  016EC6  0E00               	movlw	0
 20421  016EC8  22E2               	addwfc	fsr1h,f,c
 20422                           
 20423                           ;stkvar	_sign @ sp[(-10)+8]
 20424                           
 20425                           ;incstack = 0
 20426 ;; hardware stack exceeded
 20427  016ECA  0EFE               	movlw	-2
 20428  016ECC  6AE3               	clrf	plusw1,c
 20429                           
 20430                           ;stkvar	_divisor @ sp[(-10)+-16]
 20431  016ECE  0EED               	movlw	-19
 20432  016ED0  AEE3               	btfss	plusw1,7,c
 20433  016ED2  D028               	goto	l7949
 20434                           
 20435                           ;stkvar	_divisor @ sp[(-10)+-16]
 20436                           ;stkvar	_divisor @ sp[(-10)+-16]
 20437  016ED4  0EE6               	movlw	-26
 20438  016ED6  6CE3               	negf	plusw1,c
 20439  016ED8  0EE7               	movlw	-25
 20440  016EDA  1EE3               	comf	plusw1,f,c
 20441  016EDC  0EE8               	movlw	-24
 20442  016EDE  1EE3               	comf	plusw1,f,c
 20443  016EE0  0EE9               	movlw	-23
 20444  016EE2  1EE3               	comf	plusw1,f,c
 20445  016EE4  0EEA               	movlw	-22
 20446  016EE6  1EE3               	comf	plusw1,f,c
 20447  016EE8  0EEB               	movlw	-21
 20448  016EEA  1EE3               	comf	plusw1,f,c
 20449  016EEC  0EEC               	movlw	-20
 20450  016EEE  1EE3               	comf	plusw1,f,c
 20451  016EF0  0EED               	movlw	-19
 20452  016EF2  1EE3               	comf	plusw1,f,c
 20453  016EF4  E314               	bnc	u6130
 20454  016EF6  0EE7               	movlw	-25
 20455  016EF8  2AE3               	incf	plusw1,f,c
 20456  016EFA  E311               	bnc	u6130
 20457  016EFC  0EE8               	movlw	-24
 20458  016EFE  2AE3               	incf	plusw1,f,c
 20459  016F00  E30E               	bnc	u6130
 20460  016F02  0EE9               	movlw	-23
 20461  016F04  2AE3               	incf	plusw1,f,c
 20462  016F06  E30B               	bnc	u6130
 20463  016F08  0EEA               	movlw	-22
 20464  016F0A  2AE3               	incf	plusw1,f,c
 20465  016F0C  E308               	bnc	u6130
 20466  016F0E  0EEB               	movlw	-21
 20467  016F10  2AE3               	incf	plusw1,f,c
 20468  016F12  E305               	bnc	u6130
 20469  016F14  0EEC               	movlw	-20
 20470  016F16  2AE3               	incf	plusw1,f,c
 20471  016F18  E302               	bnc	u6130
 20472  016F1A  0EED               	movlw	-19
 20473  016F1C  2AE3               	incf	plusw1,f,c
 20474  016F1E                     u6130:
 20475                           
 20476                           ;stkvar	_sign @ sp[(-10)+8]
 20477  016F1E  0EFE               	movlw	-2
 20478  016F20  6AE3               	clrf	plusw1,c
 20479  016F22  2AE3               	incf	plusw1,f,c
 20480  016F24                     l7949:
 20481                           
 20482                           ;stkvar	_dividend @ sp[(-10)+-8]
 20483  016F24  0EF5               	movlw	-11
 20484  016F26  AEE3               	btfss	plusw1,7,c
 20485  016F28  D027               	goto	l7955
 20486                           
 20487                           ;stkvar	_dividend @ sp[(-10)+-8]
 20488                           ;stkvar	_dividend @ sp[(-10)+-8]
 20489  016F2A  0EEE               	movlw	-18
 20490  016F2C  6CE3               	negf	plusw1,c
 20491  016F2E  0EEF               	movlw	-17
 20492  016F30  1EE3               	comf	plusw1,f,c
 20493  016F32  0EF0               	movlw	-16
 20494  016F34  1EE3               	comf	plusw1,f,c
 20495  016F36  0EF1               	movlw	-15
 20496  016F38  1EE3               	comf	plusw1,f,c
 20497  016F3A  0EF2               	movlw	-14
 20498  016F3C  1EE3               	comf	plusw1,f,c
 20499  016F3E  0EF3               	movlw	-13
 20500  016F40  1EE3               	comf	plusw1,f,c
 20501  016F42  0EF4               	movlw	-12
 20502  016F44  1EE3               	comf	plusw1,f,c
 20503  016F46  0EF5               	movlw	-11
 20504  016F48  1EE3               	comf	plusw1,f,c
 20505  016F4A  E314               	bnc	u6150
 20506  016F4C  0EEF               	movlw	-17
 20507  016F4E  2AE3               	incf	plusw1,f,c
 20508  016F50  E311               	bnc	u6150
 20509  016F52  0EF0               	movlw	-16
 20510  016F54  2AE3               	incf	plusw1,f,c
 20511  016F56  E30E               	bnc	u6150
 20512  016F58  0EF1               	movlw	-15
 20513  016F5A  2AE3               	incf	plusw1,f,c
 20514  016F5C  E30B               	bnc	u6150
 20515  016F5E  0EF2               	movlw	-14
 20516  016F60  2AE3               	incf	plusw1,f,c
 20517  016F62  E308               	bnc	u6150
 20518  016F64  0EF3               	movlw	-13
 20519  016F66  2AE3               	incf	plusw1,f,c
 20520  016F68  E305               	bnc	u6150
 20521  016F6A  0EF4               	movlw	-12
 20522  016F6C  2AE3               	incf	plusw1,f,c
 20523  016F6E  E302               	bnc	u6150
 20524  016F70  0EF5               	movlw	-11
 20525  016F72  2AE3               	incf	plusw1,f,c
 20526  016F74                     u6150:
 20527                           
 20528                           ;stkvar	_sign @ sp[(-10)+8]
 20529  016F74  0EFE               	movlw	-2
 20530  016F76  70E3               	btg	plusw1,0,c
 20531  016F78                     l7955:
 20532                           
 20533                           ;stkvar	_quotient @ sp[(-10)+0]
 20534  016F78  0E07               	movlw	7
 20535  016F7A  6E26               	movwf	btemp^0,c
 20536  016F7C  0EF6               	movlw	-10
 20537  016F7E                     u6161:
 20538  016F7E  6AE3               	clrf	plusw1,c
 20539  016F80  2AE8               	incf	wreg,f,c
 20540  016F82  0626               	decf	btemp^0,f,c
 20541  016F84  E2FC               	bc	u6161
 20542                           
 20543                           ;stkvar	_divisor @ sp[(-10)+-16]
 20544  016F86  0EE6               	movlw	-26
 20545  016F88  50E3               	movf	plusw1,w,c
 20546  016F8A  E116               	bnz	u6170
 20547  016F8C  0EE7               	movlw	-25
 20548  016F8E  50E3               	movf	plusw1,w,c
 20549  016F90  E113               	bnz	u6170
 20550  016F92  0EE8               	movlw	-24
 20551  016F94  50E3               	movf	plusw1,w,c
 20552  016F96  E110               	bnz	u6170
 20553  016F98  0EE9               	movlw	-23
 20554  016F9A  50E3               	movf	plusw1,w,c
 20555  016F9C  E10D               	bnz	u6170
 20556  016F9E  0EEA               	movlw	-22
 20557  016FA0  50E3               	movf	plusw1,w,c
 20558  016FA2  E10A               	bnz	u6170
 20559  016FA4  0EEB               	movlw	-21
 20560  016FA6  50E3               	movf	plusw1,w,c
 20561  016FA8  E107               	bnz	u6170
 20562  016FAA  0EEC               	movlw	-20
 20563  016FAC  50E3               	movf	plusw1,w,c
 20564  016FAE  E104               	bnz	u6170
 20565  016FB0  0EED               	movlw	-19
 20566  016FB2  50E3               	movf	plusw1,w,c
 20567  016FB4  B4D8               	btfsc	status,2,c
 20568  016FB6  D088               	goto	u6200
 20569  016FB8                     u6170:
 20570                           
 20571                           ;stkvar	_counter @ sp[(-10)+9]
 20572  016FB8  0EFF               	movlw	-1
 20573  016FBA  6AE3               	clrf	plusw1,c
 20574  016FBC  D012               	goto	L26
 20575  016FBE                     l7961:
 20576                           
 20577                           ;stkvar	_divisor @ sp[(-10)+-16]
 20578  016FBE  90D8               	bcf	status,0,c
 20579  016FC0  0EE6               	movlw	-26
 20580  016FC2  36E3               	rlcf	plusw1,f,c
 20581  016FC4  0EE7               	movlw	-25
 20582  016FC6  36E3               	rlcf	plusw1,f,c
 20583  016FC8  0EE8               	movlw	-24
 20584  016FCA  36E3               	rlcf	plusw1,f,c
 20585  016FCC  0EE9               	movlw	-23
 20586  016FCE  36E3               	rlcf	plusw1,f,c
 20587  016FD0  0EEA               	movlw	-22
 20588  016FD2  36E3               	rlcf	plusw1,f,c
 20589  016FD4  0EEB               	movlw	-21
 20590  016FD6  36E3               	rlcf	plusw1,f,c
 20591  016FD8  0EEC               	movlw	-20
 20592  016FDA  36E3               	rlcf	plusw1,f,c
 20593  016FDC  0EED               	movlw	-19
 20594  016FDE  36E3               	rlcf	plusw1,f,c
 20595                           
 20596                           ;stkvar	_counter @ sp[(-10)+9]
 20597  016FE0  0EFF               	movlw	-1
 20598  016FE2                     L26:
 20599  016FE2  2AE3               	incf	plusw1,f,c
 20600                           
 20601                           ;stkvar	_divisor @ sp[(-10)+-16]
 20602  016FE4  0EED               	movlw	-19
 20603  016FE6  AEE3               	btfss	plusw1,7,c
 20604  016FE8  D7EA               	goto	l7961
 20605  016FEA                     u6180:
 20606                           
 20607                           ;stkvar	_quotient @ sp[(-10)+0]
 20608  016FEA  90D8               	bcf	status,0,c
 20609  016FEC  0EF6               	movlw	-10
 20610  016FEE  36E3               	rlcf	plusw1,f,c
 20611  016FF0  0EF7               	movlw	-9
 20612  016FF2  36E3               	rlcf	plusw1,f,c
 20613  016FF4  0EF8               	movlw	-8
 20614  016FF6  36E3               	rlcf	plusw1,f,c
 20615  016FF8  0EF9               	movlw	-7
 20616  016FFA  36E3               	rlcf	plusw1,f,c
 20617  016FFC  0EFA               	movlw	-6
 20618  016FFE  36E3               	rlcf	plusw1,f,c
 20619  017000  0EFB               	movlw	-5
 20620  017002  36E3               	rlcf	plusw1,f,c
 20621  017004  0EFC               	movlw	-4
 20622  017006  36E3               	rlcf	plusw1,f,c
 20623  017008  0EFD               	movlw	-3
 20624  01700A  36E3               	rlcf	plusw1,f,c
 20625                           
 20626                           ;stkvar	_divisor @ sp[(-10)+-16]
 20627                           ;stkvar	_dividend @ sp[(-10)+-8]
 20628  01700C  50E1               	movf	fsr1l,w,c
 20629  01700E  0FEE               	addlw	-18
 20630  017010  6ED9               	movwf	fsr2l,c
 20631  017012  50E2               	movf	fsr1h,w,c
 20632  017014  6EDA               	movwf	fsr2h,c
 20633  017016  0EFF               	movlw	255
 20634  017018  22DA               	addwfc	fsr2h,f,c
 20635  01701A  0EE6               	movlw	-26
 20636  01701C  50E3               	movf	plusw1,w,c
 20637  01701E  5CDE               	subwf	postinc2,w,c
 20638  017020  0EE7               	movlw	-25
 20639  017022  50E3               	movf	plusw1,w,c
 20640  017024  58DE               	subwfb	postinc2,w,c
 20641  017026  0EE8               	movlw	-24
 20642  017028  50E3               	movf	plusw1,w,c
 20643  01702A  58DE               	subwfb	postinc2,w,c
 20644  01702C  0EE9               	movlw	-23
 20645  01702E  50E3               	movf	plusw1,w,c
 20646  017030  58DE               	subwfb	postinc2,w,c
 20647  017032  0EEA               	movlw	-22
 20648  017034  50E3               	movf	plusw1,w,c
 20649  017036  58DE               	subwfb	postinc2,w,c
 20650  017038  0EEB               	movlw	-21
 20651  01703A  50E3               	movf	plusw1,w,c
 20652  01703C  58DE               	subwfb	postinc2,w,c
 20653  01703E  0EEC               	movlw	-20
 20654  017040  50E3               	movf	plusw1,w,c
 20655  017042  58DE               	subwfb	postinc2,w,c
 20656  017044  0EED               	movlw	-19
 20657  017046  50E3               	movf	plusw1,w,c
 20658  017048  58DE               	subwfb	postinc2,w,c
 20659  01704A  A0D8               	btfss	status,0,c
 20660  01704C  D021               	goto	l7973
 20661                           
 20662                           ;stkvar	_divisor @ sp[(-10)+-16]
 20663                           ;stkvar	_dividend @ sp[(-10)+-8]
 20664  01704E  50E1               	movf	fsr1l,w,c
 20665  017050  0FEE               	addlw	-18
 20666  017052  6ED9               	movwf	fsr2l,c
 20667  017054  50E2               	movf	fsr1h,w,c
 20668  017056  6EDA               	movwf	fsr2h,c
 20669  017058  0EFF               	movlw	255
 20670  01705A  22DA               	addwfc	fsr2h,f,c
 20671  01705C  0EE6               	movlw	-26
 20672  01705E  50E3               	movf	plusw1,w,c
 20673  017060  5EDE               	subwf	postinc2,f,c
 20674  017062  0EE7               	movlw	-25
 20675  017064  50E3               	movf	plusw1,w,c
 20676  017066  5ADE               	subwfb	postinc2,f,c
 20677  017068  0EE8               	movlw	-24
 20678  01706A  50E3               	movf	plusw1,w,c
 20679  01706C  5ADE               	subwfb	postinc2,f,c
 20680  01706E  0EE9               	movlw	-23
 20681  017070  50E3               	movf	plusw1,w,c
 20682  017072  5ADE               	subwfb	postinc2,f,c
 20683  017074  0EEA               	movlw	-22
 20684  017076  50E3               	movf	plusw1,w,c
 20685  017078  5ADE               	subwfb	postinc2,f,c
 20686  01707A  0EEB               	movlw	-21
 20687  01707C  50E3               	movf	plusw1,w,c
 20688  01707E  5ADE               	subwfb	postinc2,f,c
 20689  017080  0EEC               	movlw	-20
 20690  017082  50E3               	movf	plusw1,w,c
 20691  017084  5ADE               	subwfb	postinc2,f,c
 20692  017086  0EED               	movlw	-19
 20693  017088  50E3               	movf	plusw1,w,c
 20694  01708A  5ADE               	subwfb	postinc2,f,c
 20695                           
 20696                           ;stkvar	_quotient @ sp[(-10)+0]
 20697  01708C  0EF6               	movlw	-10
 20698  01708E  80E3               	bsf	plusw1,0,c
 20699  017090                     l7973:
 20700                           
 20701                           ;stkvar	_divisor @ sp[(-10)+-16]
 20702  017090  90D8               	bcf	status,0,c
 20703  017092  0EED               	movlw	-19
 20704  017094  32E3               	rrcf	plusw1,f,c
 20705  017096  0EEC               	movlw	-20
 20706  017098  32E3               	rrcf	plusw1,f,c
 20707  01709A  0EEB               	movlw	-21
 20708  01709C  32E3               	rrcf	plusw1,f,c
 20709  01709E  0EEA               	movlw	-22
 20710  0170A0  32E3               	rrcf	plusw1,f,c
 20711  0170A2  0EE9               	movlw	-23
 20712  0170A4  32E3               	rrcf	plusw1,f,c
 20713  0170A6  0EE8               	movlw	-24
 20714  0170A8  32E3               	rrcf	plusw1,f,c
 20715  0170AA  0EE7               	movlw	-25
 20716  0170AC  32E3               	rrcf	plusw1,f,c
 20717  0170AE  0EE6               	movlw	-26
 20718  0170B0  32E3               	rrcf	plusw1,f,c
 20719                           
 20720                           ;stkvar	_counter @ sp[(-10)+9]
 20721  0170B2  0EFF               	movlw	-1
 20722  0170B4  50E3               	movf	plusw1,w,c
 20723  0170B6  6E26               	movwf	btemp^0,c
 20724  0170B8  0E01               	movlw	1
 20725  0170BA  5E26               	subwf	btemp^0,f,c
 20726  0170BC  0EFF               	movlw	-1
 20727  0170BE  0060  F09B  FFE3   	movff	btemp,plusw1
 20728  0170C4  A4D8               	btfss	status,2,c
 20729  0170C6  D791               	goto	u6180
 20730  0170C8                     u6200:
 20731                           
 20732                           ;stkvar	_sign @ sp[(-10)+8]
 20733  0170C8  0EFE               	movlw	-2
 20734  0170CA  50E3               	movf	plusw1,w,c
 20735  0170CC  B4D8               	btfsc	status,2,c
 20736  0170CE  D025               	goto	u6220
 20737                           
 20738                           ;stkvar	_quotient @ sp[(-10)+0]
 20739                           ;stkvar	_quotient @ sp[(-10)+0]
 20740  0170D0  0EF6               	movlw	-10
 20741  0170D2  6CE3               	negf	plusw1,c
 20742  0170D4  0EF7               	movlw	-9
 20743  0170D6  1EE3               	comf	plusw1,f,c
 20744  0170D8  0EF8               	movlw	-8
 20745  0170DA  1EE3               	comf	plusw1,f,c
 20746  0170DC  0EF9               	movlw	-7
 20747  0170DE  1EE3               	comf	plusw1,f,c
 20748  0170E0  0EFA               	movlw	-6
 20749  0170E2  1EE3               	comf	plusw1,f,c
 20750  0170E4  0EFB               	movlw	-5
 20751  0170E6  1EE3               	comf	plusw1,f,c
 20752  0170E8  0EFC               	movlw	-4
 20753  0170EA  1EE3               	comf	plusw1,f,c
 20754  0170EC  0EFD               	movlw	-3
 20755  0170EE  1EE3               	comf	plusw1,f,c
 20756  0170F0  E314               	bnc	u6220
 20757  0170F2  0EF7               	movlw	-9
 20758  0170F4  2AE3               	incf	plusw1,f,c
 20759  0170F6  E311               	bnc	u6220
 20760  0170F8  0EF8               	movlw	-8
 20761  0170FA  2AE3               	incf	plusw1,f,c
 20762  0170FC  E30E               	bnc	u6220
 20763  0170FE  0EF9               	movlw	-7
 20764  017100  2AE3               	incf	plusw1,f,c
 20765  017102  E30B               	bnc	u6220
 20766  017104  0EFA               	movlw	-6
 20767  017106  2AE3               	incf	plusw1,f,c
 20768  017108  E308               	bnc	u6220
 20769  01710A  0EFB               	movlw	-5
 20770  01710C  2AE3               	incf	plusw1,f,c
 20771  01710E  E305               	bnc	u6220
 20772  017110  0EFC               	movlw	-4
 20773  017112  2AE3               	incf	plusw1,f,c
 20774  017114  E302               	bnc	u6220
 20775  017116  0EFD               	movlw	-3
 20776  017118  2AE3               	incf	plusw1,f,c
 20777  01711A                     u6220:
 20778                           
 20779                           ;stkvar	_quotient @ sp[(-10)+0]
 20780  01711A  0EF6               	movlw	246
 20781  01711C  24E1               	addwf	fsr1l,w,c
 20782  01711E  6ED9               	movwf	fsr2l,c
 20783  017120  0EFF               	movlw	255
 20784  017122  20E2               	addwfc	fsr1h,w,c
 20785  017124  6EDA               	movwf	fsr2h,c
 20786                           
 20787                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20788  017126  0E08               	movlw	8
 20789  017128  6E26               	movwf	btemp^0,c
 20790  01712A  0EEE               	movlw	-18
 20791  01712C                     us623999:
 20792  01712C  006F FF7B FFE3     	movff	postinc2,plusw1
 20793  017132  28E8               	incf	wreg,w,c
 20794  017134  2E26               	decfsz	btemp^0,f,c
 20795  017136  D7FA               	bra	us623999
 20796                           
 20797                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20798  017138  0EF6               	movlw	246
 20799  01713A  26E1               	addwf	fsr1l,f,c
 20800  01713C  0EFF               	movlw	255
 20801  01713E  22E2               	addwfc	fsr1h,f,c
 20802  017140  0012               	return		;funcret
 20803  017142                     __end_of___aodiv:
 20804                           	opt callstack 0
 20805                           
 20806 ;; *************** function _ctoa *****************
 20807 ;; Defined at:
 20808 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20809 ;; Parameters:    Size  Location     Type
 20810 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20811 ;;		 -> f(6), NULL(0), 
 20812 ;;  c               1  [STACK] unsigned char 
 20813 ;; Auto vars:     Size  Location     Type
 20814 ;;  w               2  [STACK] int 
 20815 ;;  l               2    0        int 
 20816 ;; Return value:  Size  Location     Type
 20817 ;;                  2  [STACK] int 
 20818 ;; Registers used:
 20819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20820 ;; Tracked objects:
 20821 ;;		On entry : 0/0
 20822 ;;		On exit  : 0/0
 20823 ;;		Unchanged: 0/0
 20824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20829 ;;Total ram usage:        0 bytes
 20830 ;; Hardware stack levels used:    1
 20831 ;; Hardware stack levels required when called:   20
 20832 ;; This function calls:
 20833 ;;		_pad
 20834 ;; This function is called by:
 20835 ;;		_vfpfcnvrt
 20836 ;; This function uses a reentrant model
 20837 ;;
 20838                           
 20839                           	psect	text70
 20840  01A434                     __ptext70:
 20841                           	opt callstack 0
 20842  01A434                     _ctoa:
 20843                           	opt callstack 0
 20844                           
 20845                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20846  01A434  52E6               	movf	postinc1,f,c
 20847  01A436  52E6               	movf	postinc1,f,c
 20848                           
 20849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20850                           
 20851                           ;incstack = 0
 20852 ;; hardware stack exceeded
 20853  01A438  500A               	movf	_width^0,w,c
 20854  01A43A  100B               	iorwf	(_width+1)^0,w,c
 20855  01A43C  A4D8               	btfss	status,2,c
 20856  01A43E  D009               	goto	l11613
 20857                           
 20858                           ;stkvar	_w @ sp[(-2)+0]
 20859  01A440  0EFE               	movlw	-2
 20860  01A442  0060  F02B  FFE3   	movff	_width,plusw1
 20861  01A448  0EFF               	movlw	-1
 20862  01A44A  0060  F02F  FFE3   	movff	_width+1,plusw1
 20863  01A450  D016               	goto	l11615
 20864  01A452                     l11613:
 20865  01A452  0EFF               	movlw	255
 20866  01A454  6E30               	movwf	(btemp+10)^0,c
 20867  01A456  0EFF               	movlw	255
 20868  01A458  6E31               	movwf	(btemp+11)^0,c
 20869  01A45A  0060  F028  F02E   	movff	_width,btemp+8
 20870  01A460  0060  F02C  F02F   	movff	_width+1,btemp+9
 20871  01A466  5030               	movf	(btemp+10)^0,w,c
 20872  01A468  262E               	addwf	(btemp+8)^0,f,c
 20873  01A46A  5031               	movf	(btemp+11)^0,w,c
 20874  01A46C  222F               	addwfc	(btemp+9)^0,f,c
 20875                           
 20876                           ;stkvar	_w @ sp[(-2)+0]
 20877  01A46E  0EFE               	movlw	-2
 20878  01A470  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 20879  01A476  0EFF               	movlw	-1
 20880  01A478  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 20881  01A47E                     l11615:
 20882                           
 20883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20884                           ;stkvar	_c @ sp[(-2)+-3]
 20885  01A47E  0EFB               	movlw	-5
 20886  01A480  006F FF8C  F3AE    	movff	plusw1,_dbuf
 20887                           
 20888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20889  01A486  0103               	movlb	3	; () banked
 20890  01A488  6BAF               	clrf	(_dbuf+1)& (0+255),b
 20891                           
 20892                           ; BSR set to: 3
 20893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20894                           ;stkvar	_w @ sp[(-2)+0]
 20895  01A48A  0EFE               	movlw	-2
 20896  01A48C  006F FF8F FFE6     	movff	plusw1,postinc1
 20897  01A492  006F FF8F FFE6     	movff	plusw1,postinc1
 20898  01A498  0EAE               	movlw	low _dbuf
 20899  01A49A  6EE6               	movwf	postinc1,c
 20900  01A49C  0E03               	movlw	high _dbuf
 20901  01A49E  6EE6               	movwf	postinc1,c
 20902                           
 20903                           ;stkvar	_fp @ sp[(-6)+-2]
 20904  01A4A0  0EF8               	movlw	-8
 20905  01A4A2  006F FF8F FFE6     	movff	plusw1,postinc1
 20906  01A4A8  006F FF8F FFE6     	movff	plusw1,postinc1
 20907  01A4AE  ECA7  F0C8         	call	_pad	;wreg free
 20908                           
 20909                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20910  01A4B2  0EFB               	movlw	251
 20911  01A4B4  26E1               	addwf	fsr1l,f,c
 20912  01A4B6  0EFF               	movlw	255
 20913  01A4B8  22E2               	addwfc	fsr1h,f,c
 20914  01A4BA  0012               	return		;funcret
 20915  01A4BC                     __end_of_ctoa:
 20916                           	opt callstack 0
 20917                           
 20918 ;; *************** function _pad *****************
 20919 ;; Defined at:
 20920 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20921 ;; Parameters:    Size  Location     Type
 20922 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20923 ;;		 -> f(6), NULL(0), 
 20924 ;;  buf             2  [STACK] PTR unsigned char 
 20925 ;;		 -> dbuf(80), 
 20926 ;;  p               2  [STACK] int 
 20927 ;; Auto vars:     Size  Location     Type
 20928 ;;  w               2  [STACK] int 
 20929 ;;  i               2  [STACK] int 
 20930 ;; Return value:  Size  Location     Type
 20931 ;;                  2  [STACK] int 
 20932 ;; Registers used:
 20933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20934 ;; Tracked objects:
 20935 ;;		On entry : 0/3
 20936 ;;		On exit  : 0/0
 20937 ;;		Unchanged: 0/0
 20938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20943 ;;Total ram usage:        0 bytes
 20944 ;; Hardware stack levels used:    1
 20945 ;; Hardware stack levels required when called:   19
 20946 ;; This function calls:
 20947 ;;		_fputc
 20948 ;;		_fputs
 20949 ;;		_strlen
 20950 ;; This function is called by:
 20951 ;;		_ctoa
 20952 ;;		_dtoa
 20953 ;;		_efgtoa
 20954 ;;		_utoa
 20955 ;;		_xtoa
 20956 ;; This function uses a reentrant model
 20957 ;;
 20958                           
 20959                           	psect	text71
 20960  01914E                     __ptext71:
 20961                           	opt callstack 0
 20962  01914E                     _pad:
 20963                           	opt callstack 0
 20964                           
 20965                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20966  01914E  52E6               	movf	postinc1,f,c
 20967  019150  52E6               	movf	postinc1,f,c
 20968  019152  52E6               	movf	postinc1,f,c
 20969  019154  52E6               	movf	postinc1,f,c
 20970                           
 20971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20972                           
 20973                           ;incstack = 0
 20974 ;; hardware stack exceeded
 20975  019156  A00E               	btfss	_flags^0,0,c
 20976  019158  D010               	goto	l11545
 20977                           
 20978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20979                           ;stkvar	_fp @ sp[(-4)+-2]
 20980  01915A  0EFA               	movlw	-6
 20981  01915C  006F FF8F FFE6     	movff	plusw1,postinc1
 20982  019162  006F FF8F FFE6     	movff	plusw1,postinc1
 20983                           
 20984                           ;stkvar	_buf @ sp[(-6)+-4]
 20985  019168  0EF6               	movlw	-10
 20986  01916A  006F FF8F FFE6     	movff	plusw1,postinc1
 20987  019170  006F FF8F FFE6     	movff	plusw1,postinc1
 20988  019176  ECAA  F0D0         	call	_fputs	;wreg free
 20989  01917A                     l11545:
 20990                           
 20991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20992                           ;stkvar	_p @ sp[(-4)+-6]
 20993  01917A  0EF7               	movlw	-9
 20994  01917C  BEE3               	btfsc	plusw1,7,c
 20995  01917E  D011               	goto	l11549
 20996                           
 20997                           ;stkvar	_p @ sp[(-4)+-6]
 20998                           ;stkvar	_w @ sp[(-4)+0]
 20999  019180  0EF6               	movlw	-10
 21000  019182  006F FF8C  F026    	movff	plusw1,btemp
 21001  019188  0EFC               	movlw	-4
 21002  01918A  0060  F09B  FFE3   	movff	btemp,plusw1
 21003  019190  0EF7               	movlw	-9
 21004  019192  006F FF8C  F026    	movff	plusw1,btemp
 21005  019198  0EFD               	movlw	-3
 21006  01919A  0060  F09B  FFE3   	movff	btemp,plusw1
 21007  0191A0  D004               	goto	l2131
 21008  0191A2                     l11549:
 21009                           
 21010                           ;stkvar	_w @ sp[(-4)+0]
 21011  0191A2  0EFC               	movlw	-4
 21012  0191A4  6AE3               	clrf	plusw1,c
 21013  0191A6  0EFD               	movlw	-3
 21014  0191A8  6AE3               	clrf	plusw1,c
 21015  0191AA                     l2131:
 21016                           
 21017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 21018                           ;stkvar	_i @ sp[(-4)+2]
 21019  0191AA  0EFE               	movlw	-2
 21020  0191AC  6AE3               	clrf	plusw1,c
 21021  0191AE  0EFF               	movlw	-1
 21022  0191B0  6AE3               	clrf	plusw1,c
 21023                           
 21024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21025  0191B2  D01E               	goto	l11555
 21026  0191B4                     l11551:
 21027                           
 21028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 21029                           ;stkvar	_fp @ sp[(-4)+-2]
 21030  0191B4  0EFA               	movlw	-6
 21031  0191B6  006F FF8F FFE6     	movff	plusw1,postinc1
 21032  0191BC  006F FF8F FFE6     	movff	plusw1,postinc1
 21033  0191C2  0E20               	movlw	32
 21034  0191C4  6EE6               	movwf	postinc1,c
 21035  0191C6  0E00               	movlw	0
 21036  0191C8  6EE6               	movwf	postinc1,c
 21037  0191CA  EC89  F0C7         	call	_fputc	;wreg free
 21038                           
 21039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 21040                           ;stkvar	_i @ sp[(-4)+2]
 21041  0191CE  0EFE               	movlw	-2
 21042  0191D0  50E3               	movf	plusw1,w,c
 21043  0191D2  0F01               	addlw	1
 21044  0191D4  6E26               	movwf	btemp^0,c
 21045  0191D6  0EFE               	movlw	-2
 21046  0191D8  0060  F09B  FFE3   	movff	btemp,plusw1
 21047  0191DE  6A26               	clrf	btemp^0,c
 21048  0191E0  0EFF               	movlw	-1
 21049  0191E2  50E3               	movf	plusw1,w,c
 21050  0191E4  2026               	addwfc	btemp^0,w,c
 21051  0191E6  6E26               	movwf	btemp^0,c
 21052  0191E8  0EFF               	movlw	-1
 21053  0191EA  0060  F09B  FFE3   	movff	btemp,plusw1
 21054  0191F0                     l11555:
 21055                           
 21056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21057                           ;stkvar	_w @ sp[(-4)+0]
 21058                           ;stkvar	_i @ sp[(-4)+2]
 21059  0191F0  50E1               	movf	fsr1l,w,c
 21060  0191F2  0FFE               	addlw	-2
 21061  0191F4  6ED9               	movwf	fsr2l,c
 21062  0191F6  50E2               	movf	fsr1h,w,c
 21063  0191F8  6EDA               	movwf	fsr2h,c
 21064  0191FA  0EFF               	movlw	255
 21065  0191FC  22DA               	addwfc	fsr2h,f,c
 21066  0191FE  0EFC               	movlw	-4
 21067  019200  50E3               	movf	plusw1,w,c
 21068  019202  5CDE               	subwf	postinc2,w,c
 21069  019204  50DE               	movf	postinc2,w,c
 21070  019206  0A80               	xorlw	128
 21071  019208  6E26               	movwf	btemp^0,c
 21072  01920A  0EFD               	movlw	-3
 21073  01920C  50E3               	movf	plusw1,w,c
 21074  01920E  0A80               	xorlw	128
 21075  019210  5826               	subwfb	btemp^0,w,c
 21076  019212  A0D8               	btfss	status,0,c
 21077  019214  D7CF               	goto	l11551
 21078                           
 21079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21080  019216  B00E               	btfsc	_flags^0,0,c
 21081  019218  D010               	goto	l11559
 21082                           
 21083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21084                           ;stkvar	_fp @ sp[(-4)+-2]
 21085  01921A  0EFA               	movlw	-6
 21086  01921C  006F FF8F FFE6     	movff	plusw1,postinc1
 21087  019222  006F FF8F FFE6     	movff	plusw1,postinc1
 21088                           
 21089                           ;stkvar	_buf @ sp[(-6)+-4]
 21090  019228  0EF6               	movlw	-10
 21091  01922A  006F FF8F FFE6     	movff	plusw1,postinc1
 21092  019230  006F FF8F FFE6     	movff	plusw1,postinc1
 21093  019236  ECAA  F0D0         	call	_fputs	;wreg free
 21094  01923A                     l11559:
 21095                           
 21096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21097                           ;stkvar	_w @ sp[(-4)+0]
 21098                           ;stkvar	_buf @ sp[(-4)+-4]
 21099  01923A  0EF8               	movlw	-8
 21100  01923C  006F FF8F FFE6     	movff	plusw1,postinc1
 21101  019242  006F FF8F FFE6     	movff	plusw1,postinc1
 21102  019248  EC59  F0D0         	call	_strlen	;wreg free
 21103  01924C  0EFC               	movlw	-4
 21104  01924E  50E3               	movf	plusw1,w,c
 21105  019250  2626               	addwf	btemp^0,f,c
 21106  019252  0EFD               	movlw	-3
 21107  019254  50E3               	movf	plusw1,w,c
 21108  019256  2227               	addwfc	(btemp+1)^0,f,c
 21109                           
 21110                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21111  019258  0EF6               	movlw	246
 21112  01925A  26E1               	addwf	fsr1l,f,c
 21113  01925C  0EFF               	movlw	255
 21114  01925E  22E2               	addwfc	fsr1h,f,c
 21115  019260  0012               	return		;funcret
 21116  019262                     __end_of_pad:
 21117                           	opt callstack 0
 21118                           
 21119 ;; *************** function _strlen *****************
 21120 ;; Defined at:
 21121 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21122 ;; Parameters:    Size  Location     Type
 21123 ;;  s               2  [STACK] PTR const unsigned char 
 21124 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21125 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21126 ;;		 -> D(482), T(144), port_data(512), STR_3(6), 
 21127 ;;		 -> V(190), 
 21128 ;; Auto vars:     Size  Location     Type
 21129 ;;  a               2  [STACK] PTR const unsigned char 
 21130 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21131 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21132 ;;		 -> D(482), T(144), port_data(512), STR_3(6), 
 21133 ;;		 -> V(190), 
 21134 ;; Return value:  Size  Location     Type
 21135 ;;                  2  [STACK] unsigned int 
 21136 ;; Registers used:
 21137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21138 ;; Tracked objects:
 21139 ;;		On entry : 0/0
 21140 ;;		On exit  : 0/0
 21141 ;;		Unchanged: 0/0
 21142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21147 ;;Total ram usage:        0 bytes
 21148 ;; Hardware stack levels used:    1
 21149 ;; Hardware stack levels required when called:   15
 21150 ;; This function calls:
 21151 ;;		Nothing
 21152 ;; This function is called by:
 21153 ;;		_eaDogM_WriteString
 21154 ;;		_spinners
 21155 ;;		_calc_bsoc
 21156 ;;		_pad
 21157 ;;		_stoa
 21158 ;; This function uses a reentrant model
 21159 ;;
 21160                           
 21161                           	psect	text72
 21162  01A0B2                     __ptext72:
 21163                           	opt callstack 0
 21164  01A0B2                     _strlen:
 21165                           	opt callstack 0
 21166                           
 21167                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21168  01A0B2  52E6               	movf	postinc1,f,c
 21169  01A0B4  52E6               	movf	postinc1,f,c
 21170                           
 21171                           ;stkvar	_s @ sp[(-2)+-2]
 21172                           
 21173                           ;incstack = 0
 21174 ;; hardware stack exceeded
 21175  01A0B6  0EFC               	movlw	-4
 21176  01A0B8  006F FF8C  F030    	movff	plusw1,btemp+10
 21177  01A0BE  0EFD               	movlw	-3
 21178  01A0C0  006F FF8C  F031    	movff	plusw1,btemp+11
 21179                           
 21180                           ;stkvar	_a @ sp[(-2)+0]
 21181  01A0C6  0EFF               	movlw	-1
 21182  01A0C8  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 21183  01A0CE  0EFE               	movlw	-2
 21184  01A0D0  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 21185  01A0D6  D011               	goto	l7567
 21186  01A0D8                     l7565:
 21187                           
 21188                           ;stkvar	_s @ sp[(-2)+-2]
 21189  01A0D8  0EFC               	movlw	-4
 21190  01A0DA  50E3               	movf	plusw1,w,c
 21191  01A0DC  0F01               	addlw	1
 21192  01A0DE  6E26               	movwf	btemp^0,c
 21193  01A0E0  0EFC               	movlw	-4
 21194  01A0E2  0060  F09B  FFE3   	movff	btemp,plusw1
 21195  01A0E8  6A26               	clrf	btemp^0,c
 21196  01A0EA  0EFD               	movlw	-3
 21197  01A0EC  50E3               	movf	plusw1,w,c
 21198  01A0EE  2026               	addwfc	btemp^0,w,c
 21199  01A0F0  6E26               	movwf	btemp^0,c
 21200  01A0F2  0EFD               	movlw	-3
 21201  01A0F4  0060  F09B  FFE3   	movff	btemp,plusw1
 21202  01A0FA                     l7567:
 21203                           
 21204                           ;stkvar	_s @ sp[(-2)+-2]
 21205  01A0FA  0EFC               	movlw	-4
 21206  01A0FC  006F FF8F FFF6     	movff	plusw1,tblptrl
 21207  01A102  0EFD               	movlw	-3
 21208  01A104  006F FF8F FFF7     	movff	plusw1,tblptrh
 21209  01A10A  0E00               	movlw	low (__mediumconst shr (0+16))
 21210  01A10C  6EF8               	movwf	tblptru,c
 21211  01A10E  0E1F               	movlw	(high __ramtop+-1)
 21212  01A110  64F7               	cpfsgt	tblptrh,c
 21213  01A112  D003               	bra	u5297
 21214  01A114  0008               	tblrd		*
 21215  01A116  50F5               	movf	tablat,w,c
 21216  01A118  D007               	bra	u5290
 21217  01A11A                     u5297:
 21218  01A11A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21219  01A120  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21220  01A126  50EF               	movf	indf0,w,c
 21221  01A128                     u5290:
 21222  01A128  0900               	iorlw	0
 21223  01A12A  A4D8               	btfss	status,2,c
 21224  01A12C  D7D5               	goto	l7565
 21225                           
 21226                           ;stkvar	_a @ sp[(-2)+0]
 21227                           ;stkvar	_s @ sp[(-2)+-2]
 21228  01A12E  0EFC               	movlw	-4
 21229  01A130  006F FF8C  F026    	movff	plusw1,btemp
 21230  01A136  0EFD               	movlw	-3
 21231  01A138  006F FF8C  F027    	movff	plusw1,btemp+1
 21232  01A13E  0EFE               	movlw	-2
 21233  01A140  50E3               	movf	plusw1,w,c
 21234  01A142  5E26               	subwf	btemp^0,f,c
 21235  01A144  0EFF               	movlw	-1
 21236  01A146  50E3               	movf	plusw1,w,c
 21237  01A148  5A27               	subwfb	(btemp+1)^0,f,c
 21238                           
 21239                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21240  01A14A  52E5               	movf	postdec1,f,c
 21241  01A14C  52E5               	movf	postdec1,f,c
 21242  01A14E  52E5               	movf	postdec1,f,c
 21243  01A150  52E5               	movf	postdec1,f,c
 21244  01A152  0012               	return		;funcret
 21245  01A154                     __end_of_strlen:
 21246                           	opt callstack 0
 21247                           
 21248 ;; *************** function _fputs *****************
 21249 ;; Defined at:
 21250 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21251 ;; Parameters:    Size  Location     Type
 21252 ;;  s               2  [STACK] PTR const unsigned char 
 21253 ;;		 -> dbuf(80), 
 21254 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21255 ;;		 -> f(6), NULL(0), 
 21256 ;; Auto vars:     Size  Location     Type
 21257 ;;  i               2  [STACK] int 
 21258 ;;  c               1  [STACK] unsigned char 
 21259 ;; Return value:  Size  Location     Type
 21260 ;;                  2  [STACK] int 
 21261 ;; Registers used:
 21262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21263 ;; Tracked objects:
 21264 ;;		On entry : 0/3
 21265 ;;		On exit  : 0/0
 21266 ;;		Unchanged: 0/0
 21267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21272 ;;Total ram usage:        0 bytes
 21273 ;; Hardware stack levels used:    1
 21274 ;; Hardware stack levels required when called:   18
 21275 ;; This function calls:
 21276 ;;		_fputc
 21277 ;; This function is called by:
 21278 ;;		_pad
 21279 ;; This function uses a reentrant model
 21280 ;;
 21281                           
 21282                           	psect	text73
 21283  01A154                     __ptext73:
 21284                           	opt callstack 0
 21285  01A154                     _fputs:
 21286                           	opt callstack 0
 21287                           
 21288                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21289  01A154  52E6               	movf	postinc1,f,c
 21290  01A156  52E6               	movf	postinc1,f,c
 21291  01A158  52E6               	movf	postinc1,f,c
 21292                           
 21293                           ;stkvar	_i @ sp[(-3)+0]
 21294                           
 21295                           ;incstack = 0
 21296 ;; hardware stack exceeded
 21297  01A15A  0EFD               	movlw	-3
 21298  01A15C  6AE3               	clrf	plusw1,c
 21299  01A15E  0EFE               	movlw	-2
 21300  01A160  6AE3               	clrf	plusw1,c
 21301  01A162  D01F               	goto	l11539
 21302  01A164                     l11535:
 21303                           
 21304                           ;stkvar	_fp @ sp[(-3)+-4]
 21305  01A164  0EF9               	movlw	-7
 21306  01A166  006F FF8F FFE6     	movff	plusw1,postinc1
 21307  01A16C  006F FF8F FFE6     	movff	plusw1,postinc1
 21308                           
 21309                           ;stkvar	_c @ sp[(-5)+2]
 21310  01A172  0EFD               	movlw	-3
 21311  01A174  50E3               	movf	plusw1,w,c
 21312  01A176  6EE6               	movwf	postinc1,c
 21313  01A178  0E00               	movlw	0
 21314  01A17A  6EE6               	movwf	postinc1,c
 21315  01A17C  EC89  F0C7         	call	_fputc	;wreg free
 21316                           
 21317                           ;stkvar	_i @ sp[(-3)+0]
 21318  01A180  0EFD               	movlw	-3
 21319  01A182  50E3               	movf	plusw1,w,c
 21320  01A184  0F01               	addlw	1
 21321  01A186  6E26               	movwf	btemp^0,c
 21322  01A188  0EFD               	movlw	-3
 21323  01A18A  0060  F09B  FFE3   	movff	btemp,plusw1
 21324  01A190  6A26               	clrf	btemp^0,c
 21325  01A192  0EFE               	movlw	-2
 21326  01A194  50E3               	movf	plusw1,w,c
 21327  01A196  2026               	addwfc	btemp^0,w,c
 21328  01A198  6E26               	movwf	btemp^0,c
 21329  01A19A  0EFE               	movlw	-2
 21330  01A19C  0060  F09B  FFE3   	movff	btemp,plusw1
 21331  01A1A2                     l11539:
 21332                           
 21333                           ;stkvar	_i @ sp[(-3)+0]
 21334  01A1A2  0EFD               	movlw	-3
 21335  01A1A4  006F FF8C  F030    	movff	plusw1,btemp+10
 21336  01A1AA  0EFE               	movlw	-2
 21337  01A1AC  006F FF8C  F031    	movff	plusw1,btemp+11
 21338                           
 21339                           ;stkvar	_s @ sp[(-3)+-2]
 21340  01A1B2  0EFB               	movlw	-5
 21341  01A1B4  006F FF8C  F02E    	movff	plusw1,btemp+8
 21342  01A1BA  0EFC               	movlw	-4
 21343  01A1BC  006F FF8C  F02F    	movff	plusw1,btemp+9
 21344  01A1C2  5030               	movf	(btemp+10)^0,w,c
 21345  01A1C4  242E               	addwf	(btemp+8)^0,w,c
 21346  01A1C6  6ED9               	movwf	fsr2l,c
 21347  01A1C8  5031               	movf	(btemp+11)^0,w,c
 21348  01A1CA  202F               	addwfc	(btemp+9)^0,w,c
 21349  01A1CC  6EDA               	movwf	fsr2h,c
 21350  01A1CE  50DF               	movf	indf2,w,c
 21351  01A1D0  6E31               	movwf	(btemp+11)^0,c
 21352                           
 21353                           ;stkvar	_c @ sp[(-3)+2]
 21354  01A1D2  0EFF               	movlw	-1
 21355  01A1D4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 21356  01A1DA  0EFF               	movlw	-1
 21357  01A1DC  50E3               	movf	plusw1,w,c
 21358  01A1DE  A4D8               	btfss	status,2,c
 21359  01A1E0  D7C1               	goto	l11535
 21360                           
 21361                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21362  01A1E2  0EF9               	movlw	249
 21363  01A1E4  26E1               	addwf	fsr1l,f,c
 21364  01A1E6  0EFF               	movlw	255
 21365  01A1E8  22E2               	addwfc	fsr1h,f,c
 21366  01A1EA  0012               	return		;funcret
 21367  01A1EC                     __end_of_fputs:
 21368                           	opt callstack 0
 21369                           
 21370 ;; *************** function _fputc *****************
 21371 ;; Defined at:
 21372 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21373 ;; Parameters:    Size  Location     Type
 21374 ;;  c               2  [STACK] int 
 21375 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21376 ;;		 -> f(6), NULL(0), 
 21377 ;; Auto vars:     Size  Location     Type
 21378 ;;		None
 21379 ;; Return value:  Size  Location     Type
 21380 ;;                  2  [STACK] int 
 21381 ;; Registers used:
 21382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21383 ;; Tracked objects:
 21384 ;;		On entry : 0/0
 21385 ;;		On exit  : 0/0
 21386 ;;		Unchanged: 0/0
 21387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21392 ;;Total ram usage:        0 bytes
 21393 ;; Hardware stack levels used:    1
 21394 ;; Hardware stack levels required when called:   17
 21395 ;; This function calls:
 21396 ;;		_putch
 21397 ;; This function is called by:
 21398 ;;		_pad
 21399 ;;		_stoa
 21400 ;;		_vfpfcnvrt
 21401 ;;		_fputs
 21402 ;; This function uses a reentrant model
 21403 ;;
 21404                           
 21405                           	psect	text74
 21406  018F12                     __ptext74:
 21407                           	opt callstack 0
 21408  018F12                     _fputc:
 21409                           	opt callstack 0
 21410                           
 21411                           ;stkvar	_fp @ sp[(0)+-4]
 21412                           
 21413                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21414                           ;incstack = 0
 21415 ;; hardware stack exceeded
 21416  018F12  0EFC               	movlw	-4
 21417  018F14  006F FF8C  F026    	movff	plusw1,btemp
 21418  018F1A  0EFD               	movlw	-3
 21419  018F1C  50E3               	movf	plusw1,w,c
 21420  018F1E  1026               	iorwf	btemp^0,w,c
 21421  018F20  B4D8               	btfsc	status,2,c
 21422  018F22  D009               	goto	u10460
 21423                           
 21424                           ;stkvar	_fp @ sp[(0)+-4]
 21425  018F24  0EFC               	movlw	-4
 21426  018F26  006F FF8C  F026    	movff	plusw1,btemp
 21427  018F2C  0EFD               	movlw	-3
 21428  018F2E  50E3               	movf	plusw1,w,c
 21429  018F30  1026               	iorwf	btemp^0,w,c
 21430  018F32  A4D8               	btfss	status,2,c
 21431  018F34  D006               	goto	l11523
 21432  018F36                     u10460:
 21433                           
 21434                           ;stkvar	_c @ sp[(0)+-2]
 21435  018F36  0EFE               	movlw	-2
 21436  018F38  50E3               	movf	plusw1,w,c
 21437  018F3A  6EE6               	movwf	postinc1,c
 21438  018F3C  EC8D  F0DB         	call	_putch	;wreg free
 21439  018F40  D075               	goto	l3177
 21440  018F42                     l11523:
 21441                           
 21442                           ;stkvar	_fp @ sp[(0)+-4]
 21443  018F42  0EFC               	movlw	-4
 21444  018F44  006F FF8C  F030    	movff	plusw1,btemp+10
 21445  018F4A  0EFD               	movlw	-3
 21446  018F4C  006F FF8C  F031    	movff	plusw1,btemp+11
 21447  018F52  0E04               	movlw	4
 21448  018F54  2430               	addwf	(btemp+10)^0,w,c
 21449  018F56  6ED9               	movwf	fsr2l,c
 21450  018F58  0E00               	movlw	0
 21451  018F5A  2031               	addwfc	(btemp+11)^0,w,c
 21452  018F5C  6EDA               	movwf	fsr2h,c
 21453  018F5E  50DE               	movf	postinc2,w,c
 21454  018F60  10DE               	iorwf	postinc2,w,c
 21455  018F62  B4D8               	btfsc	status,2,c
 21456  018F64  D026               	goto	u10480
 21457                           
 21458                           ;stkvar	_fp @ sp[(0)+-4]
 21459  018F66  0EFC               	movlw	-4
 21460  018F68  006F FF8C  F030    	movff	plusw1,btemp+10
 21461  018F6E  0EFD               	movlw	-3
 21462  018F70  006F FF8C  F031    	movff	plusw1,btemp+11
 21463  018F76  0E04               	movlw	4
 21464  018F78  2430               	addwf	(btemp+10)^0,w,c
 21465  018F7A  6ED9               	movwf	fsr2l,c
 21466  018F7C  0E00               	movlw	0
 21467  018F7E  2031               	addwfc	(btemp+11)^0,w,c
 21468  018F80  6EDA               	movwf	fsr2h,c
 21469                           
 21470                           ;stkvar	_fp @ sp[(0)+-4]
 21471  018F82  0EFC               	movlw	-4
 21472  018F84  006F FF8C  F030    	movff	plusw1,btemp+10
 21473  018F8A  0EFD               	movlw	-3
 21474  018F8C  006F FF8C  F031    	movff	plusw1,btemp+11
 21475  018F92  0E02               	movlw	2
 21476  018F94  2430               	addwf	(btemp+10)^0,w,c
 21477  018F96  6EE9               	movwf	fsr0l,c
 21478  018F98  0E00               	movlw	0
 21479  018F9A  2031               	addwfc	(btemp+11)^0,w,c
 21480  018F9C  6EEA               	movwf	fsr0h,c
 21481  018F9E  50DE               	movf	postinc2,w,c
 21482  018FA0  5CEE               	subwf	postinc0,w,c
 21483  018FA2  50EE               	movf	postinc0,w,c
 21484  018FA4  0A80               	xorlw	128
 21485  018FA6  6E26               	movwf	btemp^0,c
 21486  018FA8  50DE               	movf	postinc2,w,c
 21487  018FAA  0A80               	xorlw	128
 21488  018FAC  5826               	subwfb	btemp^0,w,c
 21489  018FAE  B0D8               	btfsc	status,0,c
 21490  018FB0  D03D               	goto	l3177
 21491  018FB2                     u10480:
 21492                           
 21493                           ;stkvar	_c @ sp[(0)+-2]
 21494                           ;stkvar	_fp @ sp[(0)+-4]
 21495  018FB2  0EFC               	movlw	-4
 21496  018FB4  006F FF8C  F030    	movff	plusw1,btemp+10
 21497  018FBA  0EFD               	movlw	-3
 21498  018FBC  006F FF8C  F031    	movff	plusw1,btemp+11
 21499  018FC2  0E02               	movlw	2
 21500  018FC4  2430               	addwf	(btemp+10)^0,w,c
 21501  018FC6  6ED9               	movwf	fsr2l,c
 21502  018FC8  0E00               	movlw	0
 21503  018FCA  2031               	addwfc	(btemp+11)^0,w,c
 21504  018FCC  6EDA               	movwf	fsr2h,c
 21505  018FCE  006F FF78  F030    	movff	postinc2,btemp+10
 21506  018FD4  006F FF74  F031    	movff	postdec2,btemp+11
 21507                           
 21508                           ;stkvar	_fp @ sp[(0)+-4]
 21509  018FDA  0EFC               	movlw	-4
 21510  018FDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 21511  018FE2  0EFD               	movlw	-3
 21512  018FE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 21513  018FEA  006F FF78  F02E    	movff	postinc2,btemp+8
 21514  018FF0  006F FF74  F02F    	movff	postdec2,btemp+9
 21515  018FF6  5030               	movf	(btemp+10)^0,w,c
 21516  018FF8  242E               	addwf	(btemp+8)^0,w,c
 21517  018FFA  6ED9               	movwf	fsr2l,c
 21518  018FFC  5031               	movf	(btemp+11)^0,w,c
 21519  018FFE  202F               	addwfc	(btemp+9)^0,w,c
 21520  019000  6EDA               	movwf	fsr2h,c
 21521  019002  0EFE               	movlw	-2
 21522  019004  006F FF8F FFDF     	movff	plusw1,indf2
 21523                           
 21524                           ;stkvar	_fp @ sp[(0)+-4]
 21525  01900A  0EFC               	movlw	-4
 21526  01900C  006F FF8C  F030    	movff	plusw1,btemp+10
 21527  019012  0EFD               	movlw	-3
 21528  019014  006F FF8C  F031    	movff	plusw1,btemp+11
 21529  01901A  0E02               	movlw	2
 21530  01901C  2430               	addwf	(btemp+10)^0,w,c
 21531  01901E  6ED9               	movwf	fsr2l,c
 21532  019020  0E00               	movlw	0
 21533  019022  2031               	addwfc	(btemp+11)^0,w,c
 21534  019024  6EDA               	movwf	fsr2h,c
 21535  019026  2ADE               	incf	postinc2,f,c
 21536  019028  0E00               	movlw	0
 21537  01902A  22DD               	addwfc	postdec2,f,c
 21538  01902C                     l3177:
 21539                           
 21540                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21541  01902C  52E5               	movf	postdec1,f,c
 21542  01902E  52E5               	movf	postdec1,f,c
 21543  019030  52E5               	movf	postdec1,f,c
 21544  019032  52E5               	movf	postdec1,f,c
 21545  019034  0012               	return		;funcret
 21546  019036                     __end_of_fputc:
 21547                           	opt callstack 0
 21548                           
 21549 ;; *************** function _putch *****************
 21550 ;; Defined at:
 21551 ;;		line 170 in file "eadog.c"
 21552 ;; Parameters:    Size  Location     Type
 21553 ;;  c               1  [STACK] unsigned char 
 21554 ;; Auto vars:     Size  Location     Type
 21555 ;;		None
 21556 ;; Return value:  Size  Location     Type
 21557 ;;                  1  [STACK] void 
 21558 ;; Registers used:
 21559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21560 ;; Tracked objects:
 21561 ;;		On entry : 0/0
 21562 ;;		On exit  : 0/0
 21563 ;;		Unchanged: 0/0
 21564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21569 ;;Total ram usage:        0 bytes
 21570 ;; Hardware stack levels used:    1
 21571 ;; Hardware stack levels required when called:   16
 21572 ;; This function calls:
 21573 ;;		_ringBufS_put_dma
 21574 ;; This function is called by:
 21575 ;;		_fputc
 21576 ;; This function uses a reentrant model
 21577 ;;
 21578                           
 21579                           	psect	text75
 21580  01B71A                     __ptext75:
 21581                           	opt callstack 0
 21582  01B71A                     _putch:
 21583                           	opt callstack 0
 21584                           
 21585                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21586                           ;stkvar	_c @ sp[(0)+-1]
 21587                           
 21588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21589                           ;incstack = 0
 21590 ;; hardware stack exceeded
 21591  01B71A  0EFF               	movlw	-1
 21592  01B71C  50E3               	movf	plusw1,w,c
 21593  01B71E  6EE6               	movwf	postinc1,c
 21594  01B720  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 21595  01B726  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 21596  01B72C  ECB1  F0CF         	call	_ringBufS_put_dma	;wreg free
 21597                           
 21598                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21599  01B730  52E5               	movf	postdec1,f,c
 21600  01B732  0012               	return		;funcret
 21601  01B734                     __end_of_putch:
 21602                           	opt callstack 0
 21603                           
 21604 ;; *************** function _ringBufS_put_dma *****************
 21605 ;; Defined at:
 21606 ;;		line 67 in file "ringbufs.c"
 21607 ;; Parameters:    Size  Location     Type
 21608 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21609 ;;		 -> ring_buf1(67), 
 21610 ;;  c               1  [STACK] const unsigned char 
 21611 ;; Auto vars:     Size  Location     Type
 21612 ;;		None
 21613 ;; Return value:  Size  Location     Type
 21614 ;;                  1  [STACK] void 
 21615 ;; Registers used:
 21616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21617 ;; Tracked objects:
 21618 ;;		On entry : 0/0
 21619 ;;		On exit  : 0/0
 21620 ;;		Unchanged: 0/0
 21621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21626 ;;Total ram usage:        0 bytes
 21627 ;; Hardware stack levels used:    1
 21628 ;; Hardware stack levels required when called:   15
 21629 ;; This function calls:
 21630 ;;		Nothing
 21631 ;; This function is called by:
 21632 ;;		_putch
 21633 ;; This function uses a reentrant model
 21634 ;;
 21635                           
 21636                           	psect	text76
 21637  019F62                     __ptext76:
 21638                           	opt callstack 0
 21639  019F62                     _ringBufS_put_dma:
 21640                           	opt callstack 0
 21641                           
 21642                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21643                           ;stkvar	__this @ sp[(0)+-2]
 21644                           
 21645                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21646                           ;incstack = 0
 21647 ;; hardware stack exceeded
 21648  019F62  0EFE               	movlw	-2
 21649  019F64  006F FF8C  F030    	movff	plusw1,btemp+10
 21650  019F6A  0EFF               	movlw	-1
 21651  019F6C  006F FF8C  F031    	movff	plusw1,btemp+11
 21652  019F72  0E42               	movlw	66
 21653  019F74  2430               	addwf	(btemp+10)^0,w,c
 21654  019F76  6ED9               	movwf	fsr2l,c
 21655  019F78  0E00               	movlw	0
 21656  019F7A  2031               	addwfc	(btemp+11)^0,w,c
 21657  019F7C  6EDA               	movwf	fsr2h,c
 21658  019F7E  0E40               	movlw	64
 21659  019F80  60DF               	cpfslt	indf2,c
 21660  019F82  D040               	goto	l1587
 21661                           
 21662                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21663                           ;stkvar	_c @ sp[(0)+-3]
 21664                           ;stkvar	__this @ sp[(0)+-2]
 21665  019F84  0EFE               	movlw	-2
 21666  019F86  006F FF8C  F030    	movff	plusw1,btemp+10
 21667  019F8C  0EFF               	movlw	-1
 21668  019F8E  006F FF8C  F031    	movff	plusw1,btemp+11
 21669  019F94  0E40               	movlw	64
 21670  019F96  2430               	addwf	(btemp+10)^0,w,c
 21671  019F98  6ED9               	movwf	fsr2l,c
 21672  019F9A  0E00               	movlw	0
 21673  019F9C  2031               	addwfc	(btemp+11)^0,w,c
 21674  019F9E  6EDA               	movwf	fsr2h,c
 21675  019FA0  50DF               	movf	indf2,w,c
 21676  019FA2  6E31               	movwf	(btemp+11)^0,c
 21677                           
 21678                           ;stkvar	__this @ sp[(0)+-2]
 21679  019FA4  0EFE               	movlw	-2
 21680  019FA6  006F FF8C  F02E    	movff	plusw1,btemp+8
 21681  019FAC  0EFF               	movlw	-1
 21682  019FAE  006F FF8C  F02F    	movff	plusw1,btemp+9
 21683  019FB4  5031               	movf	(btemp+11)^0,w,c
 21684  019FB6  242E               	addwf	(btemp+8)^0,w,c
 21685  019FB8  6ED9               	movwf	fsr2l,c
 21686  019FBA  0E00               	movlw	0
 21687  019FBC  202F               	addwfc	(btemp+9)^0,w,c
 21688  019FBE  6EDA               	movwf	fsr2h,c
 21689  019FC0  0EFD               	movlw	-3
 21690  019FC2  006F FF8F FFDF     	movff	plusw1,indf2
 21691                           
 21692                           ;ringbufs.c: 71:   ++_this->head;
 21693                           ;stkvar	__this @ sp[(0)+-2]
 21694  019FC8  0EFE               	movlw	-2
 21695  019FCA  006F FF8C  F030    	movff	plusw1,btemp+10
 21696  019FD0  0EFF               	movlw	-1
 21697  019FD2  006F FF8C  F031    	movff	plusw1,btemp+11
 21698  019FD8  0E40               	movlw	64
 21699  019FDA  2430               	addwf	(btemp+10)^0,w,c
 21700  019FDC  6ED9               	movwf	fsr2l,c
 21701  019FDE  0E00               	movlw	0
 21702  019FE0  2031               	addwfc	(btemp+11)^0,w,c
 21703  019FE2  6EDA               	movwf	fsr2h,c
 21704  019FE4  2ADF               	incf	indf2,f,c
 21705                           
 21706                           ;ringbufs.c: 72:   ++_this->count;
 21707                           ;stkvar	__this @ sp[(0)+-2]
 21708  019FE6  0EFE               	movlw	-2
 21709  019FE8  006F FF8C  F030    	movff	plusw1,btemp+10
 21710  019FEE  0EFF               	movlw	-1
 21711  019FF0  006F FF8C  F031    	movff	plusw1,btemp+11
 21712  019FF6  0E42               	movlw	66
 21713  019FF8  2430               	addwf	(btemp+10)^0,w,c
 21714  019FFA  6ED9               	movwf	fsr2l,c
 21715  019FFC  0E00               	movlw	0
 21716  019FFE  2031               	addwfc	(btemp+11)^0,w,c
 21717  01A000  6EDA               	movwf	fsr2h,c
 21718  01A002  2ADF               	incf	indf2,f,c
 21719  01A004                     l1587:
 21720                           
 21721                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21722  01A004  52E5               	movf	postdec1,f,c
 21723  01A006  52E5               	movf	postdec1,f,c
 21724  01A008  52E5               	movf	postdec1,f,c
 21725  01A00A  0012               	return		;funcret
 21726  01A00C                     __end_of_ringBufS_put_dma:
 21727                           	opt callstack 0
 21728                           
 21729 ;; *************** function _atoi *****************
 21730 ;; Defined at:
 21731 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21732 ;; Parameters:    Size  Location     Type
 21733 ;;  s               2  [STACK] PTR const unsigned char 
 21734 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 21735 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 21736 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 21737 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 21738 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 21739 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 21740 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 21741 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 21742 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 21743 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 21744 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 21745 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 21746 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 21747 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 21748 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 21749 ;;		 -> STR_1(17), 
 21750 ;; Auto vars:     Size  Location     Type
 21751 ;;  n               2  [STACK] int 
 21752 ;;  neg             2  [STACK] int 
 21753 ;; Return value:  Size  Location     Type
 21754 ;;                  2  [STACK] int 
 21755 ;; Registers used:
 21756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21757 ;; Tracked objects:
 21758 ;;		On entry : 0/0
 21759 ;;		On exit  : 0/0
 21760 ;;		Unchanged: 0/0
 21761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21766 ;;Total ram usage:        0 bytes
 21767 ;; Hardware stack levels used:    1
 21768 ;; Hardware stack levels required when called:   16
 21769 ;; This function calls:
 21770 ;;		_isdigit
 21771 ;;		_isspace
 21772 ;; This function is called by:
 21773 ;;		_vfpfcnvrt
 21774 ;; This function uses a reentrant model
 21775 ;;
 21776                           
 21777                           	psect	text77
 21778  017142                     __ptext77:
 21779                           	opt callstack 0
 21780  017142                     _atoi:
 21781                           	opt callstack 0
 21782                           
 21783                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21784  017142  0E09               	movlw	9
 21785  017144  26E1               	addwf	fsr1l,f,c
 21786  017146  0E00               	movlw	0
 21787  017148  22E2               	addwfc	fsr1h,f,c
 21788                           
 21789                           ;stkvar	_n @ sp[(-9)+5]
 21790                           
 21791                           ;incstack = 0
 21792 ;; hardware stack exceeded
 21793  01714A  0EFC               	movlw	-4
 21794  01714C  6AE3               	clrf	plusw1,c
 21795  01714E  0EFD               	movlw	-3
 21796  017150  6AE3               	clrf	plusw1,c
 21797                           
 21798                           ;stkvar	_neg @ sp[(-9)+7]
 21799  017152  0EFE               	movlw	-2
 21800  017154  6AE3               	clrf	plusw1,c
 21801  017156  0EFF               	movlw	-1
 21802  017158  6AE3               	clrf	plusw1,c
 21803  01715A  D011               	goto	l9175
 21804  01715C                     l9173:
 21805                           
 21806                           ;stkvar	_s @ sp[(-9)+-2]
 21807  01715C  0EF5               	movlw	-11
 21808  01715E  50E3               	movf	plusw1,w,c
 21809  017160  0F01               	addlw	1
 21810  017162  6E26               	movwf	btemp^0,c
 21811  017164  0EF5               	movlw	-11
 21812  017166  0060  F09B  FFE3   	movff	btemp,plusw1
 21813  01716C  6A26               	clrf	btemp^0,c
 21814  01716E  0EF6               	movlw	-10
 21815  017170  50E3               	movf	plusw1,w,c
 21816  017172  2026               	addwfc	btemp^0,w,c
 21817  017174  6E26               	movwf	btemp^0,c
 21818  017176  0EF6               	movlw	-10
 21819  017178  0060  F09B  FFE3   	movff	btemp,plusw1
 21820  01717E                     l9175:
 21821                           
 21822                           ;stkvar	_atoi$5969 @ sp[(-9)+4]
 21823  01717E  0EFB               	movlw	-5
 21824  017180  6AE3               	clrf	plusw1,c
 21825  017182  2AE3               	incf	plusw1,f,c
 21826                           
 21827                           ;stkvar	_s @ sp[(-9)+-2]
 21828  017184  50E1               	movf	fsr1l,w,c
 21829  017186  0FF5               	addlw	-11
 21830  017188  6ED9               	movwf	fsr2l,c
 21831  01718A  50E2               	movf	fsr1h,w,c
 21832  01718C  6EDA               	movwf	fsr2h,c
 21833  01718E  0EFF               	movlw	255
 21834  017190  22DA               	addwfc	fsr2h,f,c
 21835  017192  006F FF7B FFF6     	movff	postinc2,tblptrl
 21836  017198  006F FF77 FFF7     	movff	postdec2,tblptrh
 21837  01719E                     	if	0	;tblptru may be non-zero
 21838  01719E                     	endif
 21839  01719E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21840  01719E  0E00               	movlw	low (__mediumconst shr (0+16))
 21841  0171A0  6EF8               	movwf	tblptru,c
 21842  0171A2                     	endif
 21843  0171A2  0008               	tblrd		*
 21844  0171A4  50F5               	movf	tablat,w,c
 21845  0171A6  0A20               	xorlw	32
 21846  0171A8  B4D8               	btfsc	status,2,c
 21847  0171AA  D023               	goto	l9183
 21848  0171AC  0EF7               	movlw	247
 21849  0171AE  6E30               	movwf	(btemp+10)^0,c
 21850  0171B0  0EFF               	movlw	255
 21851  0171B2  6E31               	movwf	(btemp+11)^0,c
 21852                           
 21853                           ;stkvar	_s @ sp[(-9)+-2]
 21854  0171B4  50E1               	movf	fsr1l,w,c
 21855  0171B6  0FF5               	addlw	-11
 21856  0171B8  6ED9               	movwf	fsr2l,c
 21857  0171BA  50E2               	movf	fsr1h,w,c
 21858  0171BC  6EDA               	movwf	fsr2h,c
 21859  0171BE  0EFF               	movlw	255
 21860  0171C0  22DA               	addwfc	fsr2h,f,c
 21861  0171C2  006F FF7B FFF6     	movff	postinc2,tblptrl
 21862  0171C8  006F FF77 FFF7     	movff	postdec2,tblptrh
 21863  0171CE                     	if	0	;tblptru may be non-zero
 21864  0171CE                     	endif
 21865  0171CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21866  0171CE  0E00               	movlw	low (__mediumconst shr (0+16))
 21867  0171D0  6EF8               	movwf	tblptru,c
 21868  0171D2                     	endif
 21869  0171D2  0008               	tblrd		*
 21870  0171D4  50F5               	movf	tablat,w,c
 21871  0171D6  6E2E               	movwf	(btemp+8)^0,c
 21872  0171D8  6A2F               	clrf	(btemp+9)^0,c
 21873  0171DA  5030               	movf	(btemp+10)^0,w,c
 21874  0171DC  262E               	addwf	(btemp+8)^0,f,c
 21875  0171DE  5031               	movf	(btemp+11)^0,w,c
 21876  0171E0  222F               	addwfc	(btemp+9)^0,f,c
 21877  0171E2  502F               	movf	(btemp+9)^0,w,c
 21878  0171E4  E104               	bnz	u8400
 21879  0171E6  0E05               	movlw	5
 21880  0171E8  5C2E               	subwf	(btemp+8)^0,w,c
 21881  0171EA  A0D8               	btfss	status,0,c
 21882  0171EC  D002               	goto	l9183
 21883  0171EE                     u8400:
 21884                           
 21885                           ;stkvar	_atoi$5969 @ sp[(-9)+4]
 21886  0171EE  0EFB               	movlw	-5
 21887  0171F0  6AE3               	clrf	plusw1,c
 21888  0171F2                     l9183:
 21889                           
 21890                           ;stkvar	_atoi$5969 @ sp[(-9)+4]
 21891  0171F2  0EFB               	movlw	-5
 21892  0171F4  50E3               	movf	plusw1,w,c
 21893  0171F6  6E30               	movwf	(btemp+10)^0,c
 21894  0171F8  6A31               	clrf	(btemp+11)^0,c
 21895                           
 21896                           ;stkvar	_atoi$5968 @ sp[(-9)+2]
 21897  0171FA  0EF9               	movlw	-7
 21898  0171FC  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 21899  017202  0EFA               	movlw	-6
 21900  017204  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 21901                           
 21902                           ;stkvar	_atoi$5968 @ sp[(-9)+2]
 21903  01720A  0EF9               	movlw	-7
 21904  01720C  006F FF8C  F026    	movff	plusw1,btemp
 21905  017212  0EFA               	movlw	-6
 21906  017214  50E3               	movf	plusw1,w,c
 21907  017216  1026               	iorwf	btemp^0,w,c
 21908  017218  B4D8               	btfsc	status,2,c
 21909  01721A  D01F               	goto	l9193
 21910  01721C  D79F               	goto	l9173
 21911  01721E                     l9189:
 21912  01721E  0E01               	movlw	1
 21913  017220  6E30               	movwf	(btemp+10)^0,c
 21914  017222  0E00               	movlw	0
 21915  017224  6E31               	movwf	(btemp+11)^0,c
 21916                           
 21917                           ;stkvar	_neg @ sp[(-9)+7]
 21918  017226  0EFE               	movlw	-2
 21919  017228  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 21920  01722E  0EFF               	movlw	-1
 21921  017230  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 21922  017236                     l9191:
 21923                           
 21924                           ;stkvar	_s @ sp[(-9)+-2]
 21925  017236  0EF5               	movlw	-11
 21926  017238  50E3               	movf	plusw1,w,c
 21927  01723A  0F01               	addlw	1
 21928  01723C  6E26               	movwf	btemp^0,c
 21929  01723E  0EF5               	movlw	-11
 21930  017240  0060  F09B  FFE3   	movff	btemp,plusw1
 21931  017246  6A26               	clrf	btemp^0,c
 21932  017248  0EF6               	movlw	-10
 21933  01724A  50E3               	movf	plusw1,w,c
 21934  01724C  2026               	addwfc	btemp^0,w,c
 21935  01724E  6E26               	movwf	btemp^0,c
 21936  017250  0EF6               	movlw	-10
 21937  017252  0060  F09B  FFE3   	movff	btemp,plusw1
 21938  017258  D053               	goto	l9199
 21939  01725A                     l9193:
 21940                           
 21941                           ;stkvar	_s @ sp[(-9)+-2]
 21942  01725A  50E1               	movf	fsr1l,w,c
 21943  01725C  0FF5               	addlw	-11
 21944  01725E  6ED9               	movwf	fsr2l,c
 21945  017260  50E2               	movf	fsr1h,w,c
 21946  017262  6EDA               	movwf	fsr2h,c
 21947  017264  0EFF               	movlw	255
 21948  017266  22DA               	addwfc	fsr2h,f,c
 21949  017268  006F FF7B FFF6     	movff	postinc2,tblptrl
 21950  01726E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21951  017274                     	if	0	;tblptru may be non-zero
 21952  017274                     	endif
 21953  017274                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21954  017274  0E00               	movlw	low (__mediumconst shr (0+16))
 21955  017276  6EF8               	movwf	tblptru,c
 21956  017278                     	endif
 21957  017278  0008               	tblrd		*
 21958  01727A  50F5               	movf	tablat,w,c
 21959  01727C  6E30               	movwf	(btemp+10)^0,c
 21960  01727E  6A31               	clrf	(btemp+11)^0,c
 21961                           
 21962                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21963                           ; Switch size 1, requested type "simple"
 21964                           ; Number of cases is 1, Range of values is 0 to 0
 21965                           ; switch strategies available:
 21966                           ; Name         Instructions Cycles
 21967                           ; simple_byte            4     3 (average)
 21968                           ;	Chosen strategy is simple_byte
 21969  017280  5031               	movf	(btemp+11)^0,w,c
 21970  017282  0A00               	xorlw	0	; case 0
 21971  017284  A4D8               	btfss	status,2,c
 21972  017286  D03C               	goto	l9199
 21973                           
 21974                           ; Switch size 1, requested type "simple"
 21975                           ; Number of cases is 2, Range of values is 43 to 45
 21976                           ; switch strategies available:
 21977                           ; Name         Instructions Cycles
 21978                           ; simple_byte            7     4 (average)
 21979                           ;	Chosen strategy is simple_byte
 21980  017288  5030               	movf	(btemp+10)^0,w,c
 21981  01728A  0A2B               	xorlw	43	; case 43
 21982  01728C  B4D8               	btfsc	status,2,c
 21983  01728E  D7D3               	goto	l9191
 21984  017290  0A06               	xorlw	6	; case 45
 21985  017292  B4D8               	btfsc	status,2,c
 21986  017294  D7C4               	goto	l9189
 21987  017296  D034               	goto	l9199
 21988  017298                     l9195:
 21989                           
 21990                           ;stkvar	_n @ sp[(-9)+5]
 21991  017298  0EFC               	movlw	-4
 21992  01729A  006F FF8C  F030    	movff	plusw1,btemp+10
 21993  0172A0  0EFD               	movlw	-3
 21994  0172A2  006F FF8C  F031    	movff	plusw1,btemp+11
 21995  0172A8  0E0A               	movlw	10
 21996  0172AA  0230               	mulwf	(btemp+10)^0,c
 21997  0172AC  006F FFCC  F02E    	movff	prodl,btemp+8
 21998  0172B2  006F FFD0  F02F    	movff	prodh,btemp+9
 21999  0172B8  0231               	mulwf	(btemp+11)^0,c
 22000  0172BA  50F3               	movf	prodl,w,c
 22001  0172BC  262F               	addwf	(btemp+9)^0,f,c
 22002                           
 22003                           ;stkvar	_s @ sp[(-9)+-2]
 22004  0172BE  50E1               	movf	fsr1l,w,c
 22005  0172C0  0FF5               	addlw	-11
 22006  0172C2  6ED9               	movwf	fsr2l,c
 22007  0172C4  50E2               	movf	fsr1h,w,c
 22008  0172C6  6EDA               	movwf	fsr2h,c
 22009  0172C8  0EFF               	movlw	255
 22010  0172CA  22DA               	addwfc	fsr2h,f,c
 22011  0172CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 22012  0172D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 22013  0172D8                     	if	0	;tblptru may be non-zero
 22014  0172D8                     	endif
 22015  0172D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22016  0172D8  0E00               	movlw	low (__mediumconst shr (0+16))
 22017  0172DA  6EF8               	movwf	tblptru,c
 22018  0172DC                     	endif
 22019  0172DC  0008               	tblrd		*
 22020  0172DE  50F5               	movf	tablat,w,c
 22021  0172E0  5E2E               	subwf	(btemp+8)^0,f,c
 22022  0172E2  0E00               	movlw	0
 22023  0172E4  5A2F               	subwfb	(btemp+9)^0,f,c
 22024  0172E6  0E30               	movlw	48
 22025  0172E8  262E               	addwf	(btemp+8)^0,f,c
 22026  0172EA  0E00               	movlw	0
 22027  0172EC  222F               	addwfc	(btemp+9)^0,f,c
 22028                           
 22029                           ;stkvar	_n @ sp[(-9)+5]
 22030  0172EE  0EFC               	movlw	-4
 22031  0172F0  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 22032  0172F6  0EFD               	movlw	-3
 22033  0172F8  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 22034  0172FE  D79B               	goto	l9191
 22035  017300                     l9199:
 22036  017300  0ED0               	movlw	208
 22037  017302  6E30               	movwf	(btemp+10)^0,c
 22038  017304  0EFF               	movlw	255
 22039  017306  6E31               	movwf	(btemp+11)^0,c
 22040                           
 22041                           ;stkvar	_s @ sp[(-9)+-2]
 22042  017308  50E1               	movf	fsr1l,w,c
 22043  01730A  0FF5               	addlw	-11
 22044  01730C  6ED9               	movwf	fsr2l,c
 22045  01730E  50E2               	movf	fsr1h,w,c
 22046  017310  6EDA               	movwf	fsr2h,c
 22047  017312  0EFF               	movlw	255
 22048  017314  22DA               	addwfc	fsr2h,f,c
 22049  017316  006F FF7B FFF6     	movff	postinc2,tblptrl
 22050  01731C  006F FF77 FFF7     	movff	postdec2,tblptrh
 22051  017322                     	if	0	;tblptru may be non-zero
 22052  017322                     	endif
 22053  017322                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22054  017322  0E00               	movlw	low (__mediumconst shr (0+16))
 22055  017324  6EF8               	movwf	tblptru,c
 22056  017326                     	endif
 22057  017326  0008               	tblrd		*
 22058  017328  50F5               	movf	tablat,w,c
 22059  01732A  6E2E               	movwf	(btemp+8)^0,c
 22060  01732C  6A2F               	clrf	(btemp+9)^0,c
 22061  01732E  5030               	movf	(btemp+10)^0,w,c
 22062  017330  262E               	addwf	(btemp+8)^0,f,c
 22063  017332  5031               	movf	(btemp+11)^0,w,c
 22064  017334  222F               	addwfc	(btemp+9)^0,f,c
 22065  017336  502F               	movf	(btemp+9)^0,w,c
 22066  017338  E106               	bnz	u8420
 22067  01733A  0E0A               	movlw	10
 22068  01733C  5C2E               	subwf	(btemp+8)^0,w,c
 22069  01733E  B0D8               	btfsc	status,0,c
 22070  017340  D002               	goto	u8420
 22071  017342  0E01               	movlw	1
 22072  017344  D001               	goto	u8430
 22073  017346                     u8420:
 22074  017346  0E00               	movlw	0
 22075  017348                     u8430:
 22076  017348  6E30               	movwf	(btemp+10)^0,c
 22077  01734A  6A31               	clrf	(btemp+11)^0,c
 22078                           
 22079                           ;stkvar	_atoi$5970 @ sp[(-9)+0]
 22080  01734C  0EF7               	movlw	-9
 22081  01734E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 22082  017354  0EF8               	movlw	-8
 22083  017356  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 22084                           
 22085                           ;stkvar	_atoi$5970 @ sp[(-9)+0]
 22086  01735C  0EF7               	movlw	-9
 22087  01735E  006F FF8C  F026    	movff	plusw1,btemp
 22088  017364  0EF8               	movlw	-8
 22089  017366  50E3               	movf	plusw1,w,c
 22090  017368  1026               	iorwf	btemp^0,w,c
 22091  01736A  A4D8               	btfss	status,2,c
 22092  01736C  D795               	goto	l9195
 22093                           
 22094                           ;stkvar	_neg @ sp[(-9)+7]
 22095  01736E  0EFE               	movlw	-2
 22096  017370  006F FF8C  F026    	movff	plusw1,btemp
 22097  017376  0EFF               	movlw	-1
 22098  017378  50E3               	movf	plusw1,w,c
 22099  01737A  1026               	iorwf	btemp^0,w,c
 22100  01737C  A4D8               	btfss	status,2,c
 22101  01737E  D00E               	goto	l9209
 22102                           
 22103                           ;stkvar	_n @ sp[(-9)+5]
 22104  017380  0EFC               	movlw	-4
 22105  017382  006F FF8C  F026    	movff	plusw1,btemp
 22106  017388  1E26               	comf	btemp^0,f,c
 22107  01738A  0EFD               	movlw	-3
 22108  01738C  006F FF8C  F027    	movff	plusw1,btemp+1
 22109  017392  1E27               	comf	(btemp+1)^0,f,c
 22110  017394  2A26               	incf	btemp^0,f,c
 22111  017396  B4D8               	btfsc	status,2,c
 22112  017398  2A27               	incf	(btemp+1)^0,f,c
 22113  01739A  D008               	goto	l3108
 22114  01739C                     l9209:
 22115                           
 22116                           ;stkvar	_n @ sp[(-9)+5]
 22117  01739C  0EFC               	movlw	-4
 22118  01739E  006F FF8C  F026    	movff	plusw1,btemp
 22119  0173A4  0EFD               	movlw	-3
 22120  0173A6  006F FF8C  F027    	movff	plusw1,btemp+1
 22121  0173AC                     l3108:
 22122                           
 22123                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22124  0173AC  0EF5               	movlw	245
 22125  0173AE  26E1               	addwf	fsr1l,f,c
 22126  0173B0  0EFF               	movlw	255
 22127  0173B2  22E2               	addwfc	fsr1h,f,c
 22128  0173B4  0012               	return		;funcret
 22129  0173B6                     __end_of_atoi:
 22130                           	opt callstack 0
 22131                           
 22132 ;; *************** function _isspace *****************
 22133 ;; Defined at:
 22134 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22135 ;; Parameters:    Size  Location     Type
 22136 ;;  c               2  [STACK] int 
 22137 ;; Auto vars:     Size  Location     Type
 22138 ;;		None
 22139 ;; Return value:  Size  Location     Type
 22140 ;;                  2  [STACK] int 
 22141 ;; Registers used:
 22142 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22143 ;; Tracked objects:
 22144 ;;		On entry : 0/0
 22145 ;;		On exit  : 0/0
 22146 ;;		Unchanged: 0/0
 22147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22152 ;;Total ram usage:        0 bytes
 22153 ;; Hardware stack levels used:    1
 22154 ;; Hardware stack levels required when called:   15
 22155 ;; This function calls:
 22156 ;;		Nothing
 22157 ;; This function is called by:
 22158 ;;		_atoi
 22159 ;; This function uses a reentrant model
 22160 ;;
 22161                           
 22162                           	psect	text78
 22163  01AA74                     __ptext78:
 22164                           	opt callstack 0
 22165  01AA74                     _isspace:
 22166                           	opt callstack 0
 22167                           
 22168                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22169  01AA74  52E6               	movf	postinc1,f,c
 22170                           
 22171                           ;stkvar	_isspace$6019 @ sp[(-1)+0]
 22172                           
 22173                           ;incstack = 0
 22174 ;; hardware stack exceeded
 22175  01AA76  0EFF               	movlw	-1
 22176  01AA78  6AE3               	clrf	plusw1,c
 22177  01AA7A  2AE3               	incf	plusw1,f,c
 22178                           
 22179                           ;stkvar	_c @ sp[(-1)+-2]
 22180  01AA7C  0EFD               	movlw	-3
 22181  01AA7E  006F FF8C  F026    	movff	plusw1,btemp
 22182  01AA84  0E20               	movlw	32
 22183  01AA86  1826               	xorwf	btemp^0,w,c
 22184  01AA88  E104               	bnz	u7250
 22185  01AA8A  0EFE               	movlw	-2
 22186  01AA8C  50E3               	movf	plusw1,w,c
 22187  01AA8E  B4D8               	btfsc	status,2,c
 22188  01AA90  D012               	goto	l8567
 22189  01AA92                     u7250:
 22190                           
 22191                           ;stkvar	_c @ sp[(-1)+-2]
 22192  01AA92  0EFD               	movlw	-3
 22193  01AA94  50E3               	movf	plusw1,w,c
 22194  01AA96  0FF7               	addlw	247
 22195  01AA98  6E30               	movwf	(btemp+10)^0,c
 22196  01AA9A  0EFE               	movlw	-2
 22197  01AA9C  006F FF8C  F031    	movff	plusw1,btemp+11
 22198  01AAA2  0EFF               	movlw	255
 22199  01AAA4  2231               	addwfc	(btemp+11)^0,f,c
 22200  01AAA6  5031               	movf	(btemp+11)^0,w,c
 22201  01AAA8  E104               	bnz	u7260
 22202  01AAAA  0E05               	movlw	5
 22203  01AAAC  5C30               	subwf	(btemp+10)^0,w,c
 22204  01AAAE  A0D8               	btfss	status,0,c
 22205  01AAB0  D002               	goto	l8567
 22206  01AAB2                     u7260:
 22207                           
 22208                           ;stkvar	_isspace$6019 @ sp[(-1)+0]
 22209  01AAB2  0EFF               	movlw	-1
 22210  01AAB4  6AE3               	clrf	plusw1,c
 22211  01AAB6                     l8567:
 22212                           
 22213                           ;stkvar	_isspace$6019 @ sp[(-1)+0]
 22214  01AAB6  0EFF               	movlw	-1
 22215  01AAB8  50E3               	movf	plusw1,w,c
 22216  01AABA  6E26               	movwf	btemp^0,c
 22217  01AABC  6A27               	clrf	(btemp+1)^0,c
 22218                           
 22219                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22220  01AABE  52E5               	movf	postdec1,f,c
 22221  01AAC0  52E5               	movf	postdec1,f,c
 22222  01AAC2  52E5               	movf	postdec1,f,c
 22223  01AAC4  0012               	return		;funcret
 22224  01AAC6                     __end_of_isspace:
 22225                           	opt callstack 0
 22226                           
 22227 ;; *************** function _isdigit *****************
 22228 ;; Defined at:
 22229 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22230 ;; Parameters:    Size  Location     Type
 22231 ;;  c               2  [STACK] int 
 22232 ;; Auto vars:     Size  Location     Type
 22233 ;;		None
 22234 ;; Return value:  Size  Location     Type
 22235 ;;                  2  [STACK] int 
 22236 ;; Registers used:
 22237 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22238 ;; Tracked objects:
 22239 ;;		On entry : 0/0
 22240 ;;		On exit  : 0/0
 22241 ;;		Unchanged: 0/0
 22242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22247 ;;Total ram usage:        0 bytes
 22248 ;; Hardware stack levels used:    1
 22249 ;; Hardware stack levels required when called:   15
 22250 ;; This function calls:
 22251 ;;		Nothing
 22252 ;; This function is called by:
 22253 ;;		_vfpfcnvrt
 22254 ;;		_atoi
 22255 ;; This function uses a reentrant model
 22256 ;;
 22257                           
 22258                           	psect	text79
 22259  01B128                     __ptext79:
 22260                           	opt callstack 0
 22261  01B128                     _isdigit:
 22262                           	opt callstack 0
 22263                           
 22264                           ;stkvar	_c @ sp[(0)+-2]
 22265                           
 22266                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22267                           ;incstack = 0
 22268 ;; hardware stack exceeded
 22269  01B128  0EFE               	movlw	-2
 22270  01B12A  50E3               	movf	plusw1,w,c
 22271  01B12C  0FD0               	addlw	208
 22272  01B12E  6E30               	movwf	(btemp+10)^0,c
 22273  01B130  0EFF               	movlw	-1
 22274  01B132  006F FF8C  F031    	movff	plusw1,btemp+11
 22275  01B138  0EFF               	movlw	255
 22276  01B13A  2231               	addwfc	(btemp+11)^0,f,c
 22277  01B13C  5031               	movf	(btemp+11)^0,w,c
 22278  01B13E  E106               	bnz	u6100
 22279  01B140  0E0A               	movlw	10
 22280  01B142  5C30               	subwf	(btemp+10)^0,w,c
 22281  01B144  B0D8               	btfsc	status,0,c
 22282  01B146  D002               	goto	u6100
 22283  01B148  0E01               	movlw	1
 22284  01B14A  D001               	goto	u6110
 22285  01B14C                     u6100:
 22286  01B14C  0E00               	movlw	0
 22287  01B14E                     u6110:
 22288  01B14E  6E26               	movwf	btemp^0,c
 22289  01B150  6A27               	clrf	(btemp+1)^0,c
 22290                           
 22291                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22292  01B152  52E5               	movf	postdec1,f,c
 22293  01B154  52E5               	movf	postdec1,f,c
 22294  01B156  0012               	return		;funcret
 22295  01B158                     __end_of_isdigit:
 22296                           	opt callstack 0
 22297                           
 22298 ;; *************** function _set_vterm *****************
 22299 ;; Defined at:
 22300 ;;		line 107 in file "mconfig.c"
 22301 ;; Parameters:    Size  Location     Type
 22302 ;;  vterm           1  [STACK] const unsigned char 
 22303 ;; Auto vars:     Size  Location     Type
 22304 ;;		None
 22305 ;; Return value:  Size  Location     Type
 22306 ;;                  1  [STACK] unsigned char 
 22307 ;; Registers used:
 22308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22309 ;; Tracked objects:
 22310 ;;		On entry : 0/2
 22311 ;;		On exit  : 0/0
 22312 ;;		Unchanged: 0/0
 22313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22318 ;;Total ram usage:        0 bytes
 22319 ;; Hardware stack levels used:    1
 22320 ;; Hardware stack levels required when called:   15
 22321 ;; This function calls:
 22322 ;;		Nothing
 22323 ;; This function is called by:
 22324 ;;		_main
 22325 ;;		_check_help
 22326 ;; This function uses a reentrant model
 22327 ;;
 22328                           
 22329                           	psect	text80
 22330  01B686                     __ptext80:
 22331                           	opt callstack 0
 22332  01B686                     _set_vterm:
 22333                           	opt callstack 15
 22334                           
 22335                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22336                           ;stkvar	_vterm @ sp[(0)+-1]
 22337                           
 22338                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22339                           ;incstack = 0
 22340  01B686  0EFF               	movlw	-1
 22341  01B688  006F FF8C  F031    	movff	plusw1,btemp+11
 22342  01B68E  0E03               	movlw	3
 22343  01B690  1631               	andwf	(btemp+11)^0,f,c
 22344  01B692  EE22  F1DF         	lfsr	2,_D+480
 22345  01B696  50DF               	movf	223,w,c
 22346  01B698  1831               	xorwf	(btemp+11)^0,w,c
 22347  01B69A  0BFE               	andlw	-2
 22348  01B69C  1831               	xorwf	(btemp+11)^0,w,c
 22349  01B69E  6EDF               	movwf	223,c
 22350                           
 22351                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22352  01B6A0  52E5               	movf	postdec1,f,c
 22353  01B6A2  0012               	return		;funcret
 22354  01B6A4                     __end_of_set_vterm:
 22355                           	opt callstack 0
 22356                           
 22357 ;; *************** function _set_temp_display_help *****************
 22358 ;; Defined at:
 22359 ;;		line 211 in file "mconfig.c"
 22360 ;; Parameters:    Size  Location     Type
 22361 ;;  new_response    1  [STACK] const enum E16509
 22362 ;; Auto vars:     Size  Location     Type
 22363 ;;		None
 22364 ;; Return value:  Size  Location     Type
 22365 ;;                  1  [STACK] enum E16509
 22366 ;; Registers used:
 22367 ;;		wreg, fsr1l, fsr1h
 22368 ;; Tracked objects:
 22369 ;;		On entry : 0/2
 22370 ;;		On exit  : 3F/2
 22371 ;;		Unchanged: 0/0
 22372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22377 ;;Total ram usage:        0 bytes
 22378 ;; Hardware stack levels used:    1
 22379 ;; Hardware stack levels required when called:   15
 22380 ;; This function calls:
 22381 ;;		Nothing
 22382 ;; This function is called by:
 22383 ;;		_check_help
 22384 ;; This function uses a reentrant model
 22385 ;;
 22386                           
 22387                           	psect	text81
 22388  01B806                     __ptext81:
 22389                           	opt callstack 0
 22390  01B806                     _set_temp_display_help:
 22391                           	opt callstack 14
 22392                           
 22393                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22394                           
 22395                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22396                           ;incstack = 0
 22397  01B806  0102               	movlb	2	; () banked
 22398  01B808  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 22399                           
 22400                           ; BSR set to: 2
 22401                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22402                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22403  01B80A  0EFF               	movlw	-1
 22404  01B80C  006F FF8C  F2AC    	movff	plusw1,_V+165	;volatile
 22405                           
 22406                           ; BSR set to: 2
 22407                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22408  01B812  52E5               	movf	postdec1,f,c
 22409  01B814  0012               	return		;funcret
 22410  01B816                     __end_of_set_temp_display_help:
 22411                           	opt callstack 0
 22412                           
 22413 ;; *************** function _set_display_info *****************
 22414 ;; Defined at:
 22415 ;;		line 200 in file "mconfig.c"
 22416 ;; Parameters:    Size  Location     Type
 22417 ;;  new_response    1  [STACK] const enum E16509
 22418 ;; Auto vars:     Size  Location     Type
 22419 ;;		None
 22420 ;; Return value:  Size  Location     Type
 22421 ;;                  1  [STACK] enum E16994
 22422 ;; Registers used:
 22423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22424 ;; Tracked objects:
 22425 ;;		On entry : 0/0
 22426 ;;		On exit  : 0/0
 22427 ;;		Unchanged: 0/0
 22428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22433 ;;Total ram usage:        0 bytes
 22434 ;; Hardware stack levels used:    1
 22435 ;; Hardware stack levels required when called:   16
 22436 ;; This function calls:
 22437 ;;		_TimerDone
 22438 ;; This function is called by:
 22439 ;;		_main
 22440 ;;		_check_help
 22441 ;; This function uses a reentrant model
 22442 ;;
 22443                           
 22444                           	psect	text82
 22445  01B6A4                     __ptext82:
 22446                           	opt callstack 0
 22447  01B6A4                     _set_display_info:
 22448                           	opt callstack 14
 22449                           
 22450                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22451                           
 22452                           ; BSR set to: 2
 22453                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22454                           ;incstack = 0
 22455  01B6A4  0E07               	movlw	7
 22456  01B6A6  6EE6               	movwf	postinc1,c
 22457  01B6A8  EC6F  F0D9         	call	_TimerDone	;wreg free
 22458  01B6AC  5026               	movf	btemp^0,w,c
 22459  01B6AE  B4D8               	btfsc	status,2,c
 22460  01B6B0  D006               	goto	l1722
 22461                           
 22462                           ;mconfig.c: 205:   old_info = V.response.info;
 22463  01B6B2  0102               	movlb	2	; () banked
 22464  01B6B4  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 22465                           
 22466                           ; BSR set to: 2
 22467                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22468                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22469  01B6B6  0EFF               	movlw	-1
 22470  01B6B8  006F FF8C  F2AB    	movff	plusw1,_V+164	;volatile
 22471  01B6BE                     l1722:
 22472                           
 22473                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22474  01B6BE  52E5               	movf	postdec1,f,c
 22475  01B6C0  0012               	return		;funcret
 22476  01B6C2                     __end_of_set_display_info:
 22477                           	opt callstack 0
 22478                           
 22479 ;; *************** function _mode_lamp_dim *****************
 22480 ;; Defined at:
 22481 ;;		line 13 in file "mconfig.c"
 22482 ;; Parameters:    Size  Location     Type
 22483 ;;  level           2  [STACK] const unsigned short 
 22484 ;; Auto vars:     Size  Location     Type
 22485 ;;		None
 22486 ;; Return value:  Size  Location     Type
 22487 ;;                  1  [STACK] void 
 22488 ;; Registers used:
 22489 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22490 ;; Tracked objects:
 22491 ;;		On entry : 0/2
 22492 ;;		On exit  : 0/0
 22493 ;;		Unchanged: 0/0
 22494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22499 ;;Total ram usage:        0 bytes
 22500 ;; Hardware stack levels used:    1
 22501 ;; Hardware stack levels required when called:   16
 22502 ;; This function calls:
 22503 ;;		_PWM8_LoadDutyValue
 22504 ;; This function is called by:
 22505 ;;		_main
 22506 ;;		_check_help
 22507 ;; This function uses a reentrant model
 22508 ;;
 22509                           
 22510                           	psect	text83
 22511  01B74E                     __ptext83:
 22512                           	opt callstack 0
 22513  01B74E                     _mode_lamp_dim:
 22514                           	opt callstack 14
 22515                           
 22516                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22517                           ;stkvar	_level @ sp[(0)+-2]
 22518                           
 22519                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22520                           ;incstack = 0
 22521  01B74E  0EFE               	movlw	-2
 22522  01B750  006F FF8F FFE6     	movff	plusw1,postinc1
 22523  01B756  006F FF8F FFE6     	movff	plusw1,postinc1
 22524  01B75C  ECCD  F0D6         	call	_PWM8_LoadDutyValue	;wreg free
 22525                           
 22526                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22527  01B760  52E5               	movf	postdec1,f,c
 22528  01B762  52E5               	movf	postdec1,f,c
 22529  01B764  0012               	return		;funcret
 22530  01B766                     __end_of_mode_lamp_dim:
 22531                           	opt callstack 0
 22532                           
 22533 ;; *************** function _mode_lamp_bright *****************
 22534 ;; Defined at:
 22535 ;;		line 18 in file "mconfig.c"
 22536 ;; Parameters:    Size  Location     Type
 22537 ;;		None
 22538 ;; Auto vars:     Size  Location     Type
 22539 ;;		None
 22540 ;; Return value:  Size  Location     Type
 22541 ;;                  1  [STACK] void 
 22542 ;; Registers used:
 22543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22544 ;; Tracked objects:
 22545 ;;		On entry : 0/0
 22546 ;;		On exit  : 0/0
 22547 ;;		Unchanged: 0/0
 22548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22553 ;;Total ram usage:        0 bytes
 22554 ;; Hardware stack levels used:    1
 22555 ;; Hardware stack levels required when called:   16
 22556 ;; This function calls:
 22557 ;;		_PWM8_LoadDutyValue
 22558 ;; This function is called by:
 22559 ;;		_check_help
 22560 ;; This function uses a reentrant model
 22561 ;;
 22562                           
 22563                           	psect	text84
 22564  01B824                     __ptext84:
 22565                           	opt callstack 0
 22566  01B824                     _mode_lamp_bright:
 22567                           	opt callstack 13
 22568                           
 22569                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22570                           
 22571                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22572                           ;incstack = 0
 22573  01B824  0E2C               	movlw	44
 22574  01B826  6EE6               	movwf	postinc1,c
 22575  01B828  0E01               	movlw	1
 22576  01B82A  6EE6               	movwf	postinc1,c
 22577  01B82C  ECCD  F0D6         	call	_PWM8_LoadDutyValue	;wreg free
 22578                           
 22579                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22580  01B830  0012               	return		;funcret
 22581  01B832                     __end_of_mode_lamp_bright:
 22582                           	opt callstack 0
 22583                           
 22584 ;; *************** function _PWM8_LoadDutyValue *****************
 22585 ;; Defined at:
 22586 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22587 ;; Parameters:    Size  Location     Type
 22588 ;;  dutyValue       2  [STACK] unsigned short 
 22589 ;; Auto vars:     Size  Location     Type
 22590 ;;		None
 22591 ;; Return value:  Size  Location     Type
 22592 ;;                  1  [STACK] void 
 22593 ;; Registers used:
 22594 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22595 ;; Tracked objects:
 22596 ;;		On entry : 0/2
 22597 ;;		On exit  : 0/0
 22598 ;;		Unchanged: 0/0
 22599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22604 ;;Total ram usage:        0 bytes
 22605 ;; Hardware stack levels used:    1
 22606 ;; Hardware stack levels required when called:   15
 22607 ;; This function calls:
 22608 ;;		Nothing
 22609 ;; This function is called by:
 22610 ;;		_mode_lamp_dim
 22611 ;;		_mode_lamp_bright
 22612 ;; This function uses a reentrant model
 22613 ;;
 22614                           
 22615                           	psect	text85
 22616  01AD9A                     __ptext85:
 22617                           	opt callstack 0
 22618  01AD9A                     _PWM8_LoadDutyValue:
 22619                           	opt callstack 14
 22620                           
 22621                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22622                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22623                           
 22624                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22625                           ;incstack = 0
 22626  01AD9A  0EFE               	movlw	-2
 22627  01AD9C  006F FF8C  F030    	movff	plusw1,btemp+10
 22628  01ADA2  0EFF               	movlw	-1
 22629  01ADA4  006F FF8C  F031    	movff	plusw1,btemp+11
 22630  01ADAA  90D8               	bcf	status,0,c
 22631  01ADAC  3231               	rrcf	(btemp+11)^0,f,c
 22632  01ADAE  3230               	rrcf	(btemp+10)^0,f,c
 22633  01ADB0  90D8               	bcf	status,0,c
 22634  01ADB2  3231               	rrcf	(btemp+11)^0,f,c
 22635  01ADB4  3230               	rrcf	(btemp+10)^0,f,c
 22636  01ADB6  5030               	movf	(btemp+10)^0,w,c
 22637  01ADB8  6E61               	movwf	97,c	;volatile
 22638                           
 22639                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22640                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22641  01ADBA  0EFE               	movlw	-2
 22642  01ADBC  006F FF8C  F031    	movff	plusw1,btemp+11
 22643  01ADC2  0E03               	movlw	3
 22644  01ADC4  1631               	andwf	(btemp+11)^0,f,c
 22645  01ADC6  0E06               	movlw	6
 22646  01ADC8  6E26               	movwf	btemp^0,c
 22647  01ADCA                     u9175:
 22648  01ADCA  90D8               	bcf	status,0,c
 22649  01ADCC  3631               	rlcf	(btemp+11)^0,f,c
 22650  01ADCE  2E26               	decfsz	btemp^0,f,c
 22651  01ADD0  D7FC               	goto	u9175
 22652  01ADD2  5031               	movf	(btemp+11)^0,w,c
 22653  01ADD4  6E60               	movwf	96,c	;volatile
 22654                           
 22655                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22656  01ADD6  52E5               	movf	postdec1,f,c
 22657  01ADD8  52E5               	movf	postdec1,f,c
 22658  01ADDA  0012               	return		;funcret
 22659  01ADDC                     __end_of_PWM8_LoadDutyValue:
 22660                           	opt callstack 0
 22661                           
 22662 ;; *************** function _help_button *****************
 22663 ;; Defined at:
 22664 ;;		line 26 in file "mconfig.c"
 22665 ;; Parameters:    Size  Location     Type
 22666 ;;		None
 22667 ;; Auto vars:     Size  Location     Type
 22668 ;;		None
 22669 ;; Return value:  Size  Location     Type
 22670 ;;                  1  [STACK] _Bool 
 22671 ;; Registers used:
 22672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22673 ;; Tracked objects:
 22674 ;;		On entry : 0/2
 22675 ;;		On exit  : 0/0
 22676 ;;		Unchanged: 0/0
 22677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22682 ;;Total ram usage:        0 bytes
 22683 ;; Hardware stack levels used:    1
 22684 ;; Hardware stack levels required when called:   16
 22685 ;; This function calls:
 22686 ;;		_StartTimer
 22687 ;;		_TimerDone
 22688 ;; This function is called by:
 22689 ;;		_check_help
 22690 ;; This function uses a reentrant model
 22691 ;;
 22692                           
 22693                           	psect	text86
 22694  01AF54                     __ptext86:
 22695                           	opt callstack 0
 22696  01AF54                     _help_button:
 22697                           	opt callstack 13
 22698                           
 22699                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22700                           
 22701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22702                           ;incstack = 0
 22703  01AF54  B0CB               	btfsc	203,0,c	;volatile
 22704  01AF56  D00C               	goto	l1665
 22705                           
 22706                           ;mconfig.c: 29:   V.help = 1;
 22707  01AF58  0102               	movlb	2	; () banked
 22708  01AF5A  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 22709                           
 22710                           ; BSR set to: 2
 22711                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22712  01AF5C  0E08               	movlw	8
 22713  01AF5E  6EE6               	movwf	postinc1,c
 22714  01AF60  EC6F  F0D9         	call	_TimerDone	;wreg free
 22715  01AF64  5026               	movf	btemp^0,w,c
 22716  01AF66  B4D8               	btfsc	status,2,c
 22717  01AF68  D003               	goto	l1665
 22718                           
 22719                           ;mconfig.c: 31:    return 1;
 22720  01AF6A  0E01               	movlw	1
 22721  01AF6C  6E26               	movwf	btemp^0,c
 22722  01AF6E  0012               	return	
 22723  01AF70                     l1665:
 22724                           
 22725                           ;mconfig.c: 34:  if (!V.help)
 22726  01AF70  0102               	movlb	2	; () banked
 22727  01AF72  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22728  01AF74  D008               	goto	l10273
 22729                           
 22730                           ; BSR set to: 2
 22731                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22732  01AF76  0E2C               	movlw	44
 22733  01AF78  6EE6               	movwf	postinc1,c
 22734  01AF7A  0E01               	movlw	1
 22735  01AF7C  6EE6               	movwf	postinc1,c
 22736  01AF7E  0E08               	movlw	8
 22737  01AF80  6EE6               	movwf	postinc1,c
 22738  01AF82  ECEE  F0D6         	call	_StartTimer	;wreg free
 22739  01AF86                     l10273:
 22740                           
 22741                           ;mconfig.c: 37:  return 0;
 22742  01AF86  0E00               	movlw	0
 22743  01AF88  6E26               	movwf	btemp^0,c
 22744                           
 22745                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22746  01AF8A  0012               	return		;funcret
 22747  01AF8C                     __end_of_help_button:
 22748                           	opt callstack 0
 22749                           
 22750 ;; *************** function _TimerDone *****************
 22751 ;; Defined at:
 22752 ;;		line 20 in file "timers.c"
 22753 ;; Parameters:    Size  Location     Type
 22754 ;;  timer           1  [STACK] const unsigned char 
 22755 ;; Auto vars:     Size  Location     Type
 22756 ;;		None
 22757 ;; Return value:  Size  Location     Type
 22758 ;;                  1  [STACK] _Bool 
 22759 ;; Registers used:
 22760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22761 ;; Tracked objects:
 22762 ;;		On entry : 0/0
 22763 ;;		On exit  : 0/0
 22764 ;;		Unchanged: 0/0
 22765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22770 ;;Total ram usage:        0 bytes
 22771 ;; Hardware stack levels used:    1
 22772 ;; Hardware stack levels required when called:   15
 22773 ;; This function calls:
 22774 ;;		Nothing
 22775 ;; This function is called by:
 22776 ;;		_main
 22777 ;;		_WaitMs
 22778 ;;		_help_button
 22779 ;;		_check_help
 22780 ;;		_set_display_info
 22781 ;;		_update_adc_result
 22782 ;;		_esr_check
 22783 ;; This function uses a reentrant model
 22784 ;;
 22785                           
 22786                           	psect	text87
 22787  01B2DE                     __ptext87:
 22788                           	opt callstack 0
 22789  01B2DE                     _TimerDone:
 22790                           	opt callstack 14
 22791                           
 22792                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22793                           ;incstack = 0
 22794  01B2DE  0004               	clrwdt		;# 
 22795                           
 22796                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22797                           ;stkvar	_timer @ sp[(0)+-1]
 22798  01B2E0  0EFF               	movlw	-1
 22799  01B2E2  50E3               	movf	plusw1,w,c
 22800  01B2E4  0D02               	mullw	2
 22801  01B2E6  0E94               	movlw	low _tickCount
 22802  01B2E8  24F3               	addwf	243,w,c
 22803  01B2EA  6ED9               	movwf	fsr2l,c
 22804  01B2EC  0E03               	movlw	high _tickCount
 22805  01B2EE  20F4               	addwfc	prodh,w,c
 22806  01B2F0  6EDA               	movwf	fsr2h,c
 22807  01B2F2  50DE               	movf	postinc2,w,c
 22808  01B2F4  10DE               	iorwf	postinc2,w,c
 22809  01B2F6  A4D8               	btfss	status,2,c
 22810  01B2F8  D002               	goto	l9607
 22811                           
 22812                           ;timers.c: 24:   return 1;
 22813  01B2FA  0E01               	movlw	1
 22814  01B2FC  D001               	goto	L27
 22815  01B2FE                     l9607:
 22816                           
 22817                           ;timers.c: 26:  return 0;
 22818  01B2FE  0E00               	movlw	0
 22819  01B300                     L27:
 22820  01B300  6E26               	movwf	btemp^0,c
 22821                           
 22822                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22823  01B302  52E5               	movf	postdec1,f,c
 22824  01B304  0012               	return		;funcret
 22825  01B306                     __end_of_TimerDone:
 22826                           	opt callstack 0
 22827                           
 22828 ;; *************** function _StartTimer *****************
 22829 ;; Defined at:
 22830 ;;		line 12 in file "timers.c"
 22831 ;; Parameters:    Size  Location     Type
 22832 ;;  timer           1  [STACK] const unsigned char 
 22833 ;;  count           2  [STACK] const unsigned short 
 22834 ;; Auto vars:     Size  Location     Type
 22835 ;;		None
 22836 ;; Return value:  Size  Location     Type
 22837 ;;                  1  [STACK] void 
 22838 ;; Registers used:
 22839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22840 ;; Tracked objects:
 22841 ;;		On entry : 0/0
 22842 ;;		On exit  : 0/0
 22843 ;;		Unchanged: 0/0
 22844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22849 ;;Total ram usage:        0 bytes
 22850 ;; Hardware stack levels used:    1
 22851 ;; Hardware stack levels required when called:   15
 22852 ;; This function calls:
 22853 ;;		Nothing
 22854 ;; This function is called by:
 22855 ;;		_main
 22856 ;;		_WaitMs
 22857 ;;		_help_button
 22858 ;;		_check_help
 22859 ;;		_update_adc_result
 22860 ;;		_calc_bsoc
 22861 ;;		_esr_check
 22862 ;; This function uses a reentrant model
 22863 ;;
 22864                           
 22865                           	psect	text88
 22866  01ADDC                     __ptext88:
 22867                           	opt callstack 0
 22868  01ADDC                     _StartTimer:
 22869                           	opt callstack 0
 22870                           
 22871                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22872                           ;stkvar	_count @ sp[(0)+-3]
 22873                           
 22874                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22875                           ;incstack = 0
 22876 ;; hardware stack exceeded
 22877  01ADDC  0EFD               	movlw	-3
 22878  01ADDE  006F FF8C  F030    	movff	plusw1,btemp+10
 22879  01ADE4  0EFE               	movlw	-2
 22880  01ADE6  006F FF8C  F031    	movff	plusw1,btemp+11
 22881  01ADEC  90D8               	bcf	status,0,c
 22882  01ADEE  3430               	rlcf	(btemp+10)^0,w,c
 22883  01ADF0  6E2E               	movwf	(btemp+8)^0,c
 22884  01ADF2  3431               	rlcf	(btemp+11)^0,w,c
 22885  01ADF4  6E2F               	movwf	(btemp+9)^0,c
 22886                           
 22887                           ;stkvar	_timer @ sp[(0)+-1]
 22888  01ADF6  0EFF               	movlw	-1
 22889  01ADF8  50E3               	movf	plusw1,w,c
 22890  01ADFA  0D02               	mullw	2
 22891  01ADFC  0E94               	movlw	low _tickCount
 22892  01ADFE  24F3               	addwf	243,w,c
 22893  01AE00  6ED9               	movwf	fsr2l,c
 22894  01AE02  0E03               	movlw	high _tickCount
 22895  01AE04  20F4               	addwfc	prodh,w,c
 22896  01AE06  6EDA               	movwf	fsr2h,c
 22897  01AE08  0060  F0BB  FFDE   	movff	btemp+8,postinc2
 22898  01AE0E  0060  F0BF  FFDD   	movff	btemp+9,postdec2
 22899                           
 22900                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22901  01AE14  52E5               	movf	postdec1,f,c
 22902  01AE16  52E5               	movf	postdec1,f,c
 22903  01AE18  52E5               	movf	postdec1,f,c
 22904  01AE1A  0012               	return		;funcret
 22905  01AE1C                     __end_of_StartTimer:
 22906                           	opt callstack 0
 22907                           
 22908 ;; *************** function _display_info *****************
 22909 ;; Defined at:
 22910 ;;		line 190 in file "mconfig.c"
 22911 ;; Parameters:    Size  Location     Type
 22912 ;;		None
 22913 ;; Auto vars:     Size  Location     Type
 22914 ;;		None
 22915 ;; Return value:  Size  Location     Type
 22916 ;;                  1  [STACK] enum E16509
 22917 ;; Registers used:
 22918 ;;		btemp
 22919 ;; Tracked objects:
 22920 ;;		On entry : 0/2
 22921 ;;		On exit  : 0/0
 22922 ;;		Unchanged: 0/0
 22923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22928 ;;Total ram usage:        0 bytes
 22929 ;; Hardware stack levels used:    1
 22930 ;; Hardware stack levels required when called:   15
 22931 ;; This function calls:
 22932 ;;		Nothing
 22933 ;; This function is called by:
 22934 ;;		_check_help
 22935 ;; This function uses a reentrant model
 22936 ;;
 22937                           
 22938                           	psect	text89
 22939  01B89A                     __ptext89:
 22940                           	opt callstack 0
 22941  01B89A                     _display_info:
 22942                           	opt callstack 14
 22943                           
 22944                           ;mconfig.c: 192:  return V.response.info;
 22945                           
 22946                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22947                           ;incstack = 0
 22948  01B89A  0060  FAAC  F026   	movff	_V+164,btemp	;volatile
 22949                           
 22950                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22951  01B8A0  0012               	return		;funcret
 22952  01B8A2                     __end_of_display_info:
 22953                           	opt callstack 0
 22954                           
 22955 ;; *************** function _display_help *****************
 22956 ;; Defined at:
 22957 ;;		line 195 in file "mconfig.c"
 22958 ;; Parameters:    Size  Location     Type
 22959 ;;		None
 22960 ;; Auto vars:     Size  Location     Type
 22961 ;;		None
 22962 ;; Return value:  Size  Location     Type
 22963 ;;                  1  [STACK] enum E16509
 22964 ;; Registers used:
 22965 ;;		btemp
 22966 ;; Tracked objects:
 22967 ;;		On entry : 3F/2
 22968 ;;		On exit  : 0/0
 22969 ;;		Unchanged: 0/0
 22970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22975 ;;Total ram usage:        0 bytes
 22976 ;; Hardware stack levels used:    1
 22977 ;; Hardware stack levels required when called:   15
 22978 ;; This function calls:
 22979 ;;		Nothing
 22980 ;; This function is called by:
 22981 ;;		_check_help
 22982 ;; This function uses a reentrant model
 22983 ;;
 22984                           
 22985                           	psect	text90
 22986  01B8A2                     __ptext90:
 22987                           	opt callstack 0
 22988  01B8A2                     _display_help:
 22989                           	opt callstack 14
 22990                           
 22991                           ;mconfig.c: 197:  return V.response.help_temp;
 22992                           
 22993                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22994                           ;incstack = 0
 22995  01B8A2  0060  FAB0  F026   	movff	_V+165,btemp	;volatile
 22996                           
 22997                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22998  01B8A8  0012               	return		;funcret
 22999  01B8AA                     __end_of_display_help:
 23000                           	opt callstack 0
 23001                           
 23002 ;; *************** function _check_enter_button *****************
 23003 ;; Defined at:
 23004 ;;		line 42 in file "hid.c"
 23005 ;; Parameters:    Size  Location     Type
 23006 ;;  h               1  [STACK] PTR struct H_data
 23007 ;;		 -> H(7), 
 23008 ;; Auto vars:     Size  Location     Type
 23009 ;;		None
 23010 ;; Return value:  Size  Location     Type
 23011 ;;                  1  [STACK] _Bool 
 23012 ;; Registers used:
 23013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 23014 ;; Tracked objects:
 23015 ;;		On entry : 0/0
 23016 ;;		On exit  : 0/0
 23017 ;;		Unchanged: 0/0
 23018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23023 ;;Total ram usage:        0 bytes
 23024 ;; Hardware stack levels used:    1
 23025 ;; Hardware stack levels required when called:   15
 23026 ;; This function calls:
 23027 ;;		Nothing
 23028 ;; This function is called by:
 23029 ;;		_main
 23030 ;; This function uses a reentrant model
 23031 ;;
 23032                           
 23033                           	psect	text91
 23034  01AE1C                     __ptext91:
 23035                           	opt callstack 0
 23036  01AE1C                     _check_enter_button:
 23037                           	opt callstack 15
 23038                           
 23039                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 23040                           ;stkvar	_h @ sp[(0)+-1]
 23041                           
 23042                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23043                           ;incstack = 0
 23044  01AE1C  0EFF               	movlw	-1
 23045  01AE1E  50E3               	movf	plusw1,w,c
 23046  01AE20  6ED9               	movwf	fsr2l,c
 23047  01AE22  6ADA               	clrf	fsr2h,c
 23048  01AE24  0E04               	movlw	4
 23049  01AE26  26D9               	addwf	fsr2l,f,c
 23050  01AE28  50DF               	movf	indf2,w,c
 23051  01AE2A  A4D8               	btfss	status,2,c
 23052  01AE2C  D013               	goto	l10855
 23053                           
 23054                           ;stkvar	_h @ sp[(0)+-1]
 23055  01AE2E  0EFF               	movlw	-1
 23056  01AE30  50E3               	movf	plusw1,w,c
 23057  01AE32  6ED9               	movwf	fsr2l,c
 23058  01AE34  6ADA               	clrf	fsr2h,c
 23059  01AE36  0E05               	movlw	5
 23060  01AE38  26D9               	addwf	fsr2l,f,c
 23061  01AE3A  50DF               	movf	indf2,w,c
 23062  01AE3C  A4D8               	btfss	status,2,c
 23063  01AE3E  D00A               	goto	l10855
 23064                           
 23065                           ;hid.c: 45:   h->wait_enter = 1;
 23066                           ;stkvar	_h @ sp[(0)+-1]
 23067  01AE40  0EFF               	movlw	-1
 23068  01AE42  50E3               	movf	plusw1,w,c
 23069  01AE44  6ED9               	movwf	fsr2l,c
 23070  01AE46  6ADA               	clrf	fsr2h,c
 23071  01AE48  0E04               	movlw	4
 23072  01AE4A  26D9               	addwf	fsr2l,f,c
 23073  01AE4C  0E01               	movlw	1
 23074  01AE4E  6EDF               	movwf	indf2,c
 23075                           
 23076                           ;hid.c: 46:   return 1;
 23077  01AE50  0E01               	movlw	1
 23078  01AE52  D001               	goto	L28
 23079  01AE54                     l10855:
 23080                           
 23081                           ;hid.c: 48:  return 0;
 23082  01AE54  0E00               	movlw	0
 23083  01AE56                     L28:
 23084  01AE56  6E26               	movwf	btemp^0,c
 23085                           
 23086                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23087  01AE58  52E5               	movf	postdec1,f,c
 23088  01AE5A  0012               	return		;funcret
 23089  01AE5C                     __end_of_check_enter_button:
 23090                           	opt callstack 0
 23091                           
 23092 ;; *************** function _calc_ror_data *****************
 23093 ;; Defined at:
 23094 ;;		line 101 in file "mbmc.c"
 23095 ;; Parameters:    Size  Location     Type
 23096 ;;		None
 23097 ;; Auto vars:     Size  Location     Type
 23098 ;;		None
 23099 ;; Return value:  Size  Location     Type
 23100 ;;                  1  [STACK] void 
 23101 ;; Registers used:
 23102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23103 ;; Tracked objects:
 23104 ;;		On entry : 0/39
 23105 ;;		On exit  : 0/0
 23106 ;;		Unchanged: 0/0
 23107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23112 ;;Total ram usage:        0 bytes
 23113 ;; Hardware stack levels used:    1
 23114 ;; Hardware stack levels required when called:   18
 23115 ;; This function calls:
 23116 ;;		___flge
 23117 ;;		___flsub
 23118 ;;		_conv_raw_result
 23119 ;;		_fabsf
 23120 ;; This function is called by:
 23121 ;;		_main
 23122 ;; This function uses a reentrant model
 23123 ;;
 23124                           
 23125                           	psect	text92
 23126  0182FE                     __ptext92:
 23127                           	opt callstack 0
 23128  0182FE                     _calc_ror_data:
 23129                           	opt callstack 12
 23130                           
 23131                           ;mbmc.c: 103:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 105:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23132                           
 23133                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23134                           ;incstack = 0
 23135  0182FE  0060  F1FB  FFE6   	movff	calc_ror_data@bcror,postinc1
 23136  018304  0060  F1FF  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23137  01830A  0060  F203  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23138  018310  0060  F207  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23139  018316  0E00               	movlw	0
 23140  018318  6EE6               	movwf	postinc1,c
 23141  01831A  0E00               	movlw	0
 23142  01831C  6EE6               	movwf	postinc1,c
 23143  01831E  EC92  F0A7         	call	_conv_raw_result	;wreg free
 23144  018322  0060  F09B  FFE6   	movff	btemp,postinc1
 23145  018328  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23146  01832E  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23147  018334  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23148  01833A  EC1F  F0D6         	call	___flsub	;wreg free
 23149  01833E  0060  F09B  FFE6   	movff	btemp,postinc1
 23150  018344  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23151  01834A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23152  018350  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23153  018356  EC04  F0CF         	call	_fabsf	;wreg free
 23154  01835A  0060  F098  F16C   	movff	btemp,_C+108	;volatile
 23155  018360  0060  F09C  F16D   	movff	btemp+1,_C+109	;volatile
 23156  018366  0060  F0A0  F16E   	movff	btemp+2,_C+110	;volatile
 23157  01836C  0060  F0A4  F16F   	movff	btemp+3,_C+111	;volatile
 23158                           
 23159                           ;mbmc.c: 106:  bcror = conv_raw_result(C_BATT, CONV);
 23160  018372  0E00               	movlw	0
 23161  018374  6EE6               	movwf	postinc1,c
 23162  018376  0E00               	movlw	0
 23163  018378  6EE6               	movwf	postinc1,c
 23164  01837A  EC92  F0A7         	call	_conv_raw_result	;wreg free
 23165  01837E  0060  F098  F07E   	movff	btemp,calc_ror_data@bcror
 23166  018384  0060  F09C  F07F   	movff	btemp+1,calc_ror_data@bcror+1
 23167  01838A  0060  F0A0  F080   	movff	btemp+2,calc_ror_data@bcror+2
 23168  018390  0060  F0A4  F081   	movff	btemp+3,calc_ror_data@bcror+3
 23169                           
 23170                           ;mbmc.c: 107:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23171  018396  0060  F20B  FFE6   	movff	calc_ror_data@bvror,postinc1
 23172  01839C  0060  F20F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23173  0183A2  0060  F213  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23174  0183A8  0060  F217  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23175  0183AE  0E00               	movlw	0
 23176  0183B0  6EE6               	movwf	postinc1,c
 23177  0183B2  0E04               	movlw	4
 23178  0183B4  6EE6               	movwf	postinc1,c
 23179  0183B6  EC92  F0A7         	call	_conv_raw_result	;wreg free
 23180  0183BA  0060  F09B  FFE6   	movff	btemp,postinc1
 23181  0183C0  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23182  0183C6  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23183  0183CC  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23184  0183D2  EC1F  F0D6         	call	___flsub	;wreg free
 23185  0183D6  0060  F09B  FFE6   	movff	btemp,postinc1
 23186  0183DC  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23187  0183E2  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23188  0183E8  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23189  0183EE  EC04  F0CF         	call	_fabsf	;wreg free
 23190  0183F2  0060  F098  F168   	movff	btemp,_C+104	;volatile
 23191  0183F8  0060  F09C  F169   	movff	btemp+1,_C+105	;volatile
 23192  0183FE  0060  F0A0  F16A   	movff	btemp+2,_C+106	;volatile
 23193  018404  0060  F0A4  F16B   	movff	btemp+3,_C+107	;volatile
 23194                           
 23195                           ;mbmc.c: 108:  if (C.bv_ror < 0.0051)
 23196  01840A  0EE7               	movlw	231
 23197  01840C  6EE6               	movwf	postinc1,c
 23198  01840E  0E1D               	movlw	29
 23199  018410  6EE6               	movwf	postinc1,c
 23200  018412  0EA7               	movlw	167
 23201  018414  6EE6               	movwf	postinc1,c
 23202  018416  0E3B               	movlw	59
 23203  018418  6EE6               	movwf	postinc1,c
 23204  01841A  0060  F5A3  FFE6   	movff	_C+104,postinc1
 23205  018420  0060  F5A7  FFE6   	movff	_C+105,postinc1
 23206  018426  0060  F5AB  FFE6   	movff	_C+106,postinc1
 23207  01842C  0060  F5AF  FFE6   	movff	_C+107,postinc1
 23208  018432  ECAA  F0C3         	call	___flge	;wreg free
 23209  018436  B026               	btfsc	btemp& (0+255),0,c
 23210  018438  D009               	goto	l10649
 23211                           
 23212                           ;mbmc.c: 109:   C.bv_ror = 0.0140 + 0.0001;
 23213  01843A  0EB0               	movlw	176
 23214  01843C  0101               	movlb	1	; () banked
 23215  01843E  6F68               	movwf	(_C+104)& (0+255),b	;volatile
 23216  018440  0E03               	movlw	3
 23217  018442  6F69               	movwf	(_C+105)& (0+255),b	;volatile
 23218  018444  0E67               	movlw	103
 23219  018446  6F6A               	movwf	(_C+106)& (0+255),b	;volatile
 23220  018448  0E3C               	movlw	60
 23221  01844A  6F6B               	movwf	(_C+107)& (0+255),b	;volatile
 23222  01844C                     l10649:
 23223                           
 23224                           ;mbmc.c: 110:  bvror = conv_raw_result(V_BAT, CONV);
 23225  01844C  0E00               	movlw	0
 23226  01844E  6EE6               	movwf	postinc1,c
 23227  018450  0E04               	movlw	4
 23228  018452  6EE6               	movwf	postinc1,c
 23229  018454  EC92  F0A7         	call	_conv_raw_result	;wreg free
 23230  018458  0060  F098  F082   	movff	btemp,calc_ror_data@bvror
 23231  01845E  0060  F09C  F083   	movff	btemp+1,calc_ror_data@bvror+1
 23232  018464  0060  F0A0  F084   	movff	btemp+2,calc_ror_data@bvror+2
 23233  01846A  0060  F0A4  F085   	movff	btemp+3,calc_ror_data@bvror+3
 23234                           
 23235                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23236  018470  0012               	return		;funcret
 23237  018472                     __end_of_calc_ror_data:
 23238                           	opt callstack 0
 23239                           
 23240 ;; *************** function _fabsf *****************
 23241 ;; Defined at:
 23242 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23243 ;; Parameters:    Size  Location     Type
 23244 ;;  x               4  [STACK] float 
 23245 ;; Auto vars:     Size  Location     Type
 23246 ;;  u               4  [STACK] struct .
 23247 ;; Return value:  Size  Location     Type
 23248 ;;                  4  [STACK] float 
 23249 ;; Registers used:
 23250 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23251 ;; Tracked objects:
 23252 ;;		On entry : 0/0
 23253 ;;		On exit  : 0/0
 23254 ;;		Unchanged: 0/0
 23255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23260 ;;Total ram usage:        0 bytes
 23261 ;; Hardware stack levels used:    1
 23262 ;; Hardware stack levels required when called:   15
 23263 ;; This function calls:
 23264 ;;		Nothing
 23265 ;; This function is called by:
 23266 ;;		_main
 23267 ;;		_calc_ror_data
 23268 ;;		_calc_bsoc
 23269 ;;		_esr_check
 23270 ;; This function uses a reentrant model
 23271 ;;
 23272                           
 23273                           	psect	text93
 23274  019E08                     __ptext93:
 23275                           	opt callstack 0
 23276  019E08                     _fabsf:
 23277                           	opt callstack 0
 23278                           
 23279                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23280  019E08  52E6               	movf	postinc1,f,c
 23281  019E0A  52E6               	movf	postinc1,f,c
 23282  019E0C  52E6               	movf	postinc1,f,c
 23283  019E0E  52E6               	movf	postinc1,f,c
 23284                           
 23285                           ;incstack = 0
 23286 ;; hardware stack exceeded
 23287  019E10  0060  F1D8  F02E   	movff	fabsf@F463,btemp+8
 23288  019E16  0060  F1DC  F02F   	movff	fabsf@F463+1,btemp+9
 23289  019E1C  0060  F1E0  F030   	movff	fabsf@F463+2,btemp+10
 23290  019E22  0060  F1E4  F031   	movff	fabsf@F463+3,btemp+11
 23291                           
 23292                           ;stkvar	_u @ sp[(-4)+0]
 23293  019E28  0EFC               	movlw	-4
 23294  019E2A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 23295  019E30  0EFD               	movlw	-3
 23296  019E32  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 23297  019E38  0EFE               	movlw	-2
 23298  019E3A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 23299  019E40  0EFF               	movlw	-1
 23300  019E42  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 23301                           
 23302                           ;stkvar	_x @ sp[(-4)+-4]
 23303  019E48  0EF8               	movlw	-8
 23304  019E4A  006F FF8C  F02E    	movff	plusw1,btemp+8
 23305  019E50  0EF9               	movlw	-7
 23306  019E52  006F FF8C  F02F    	movff	plusw1,btemp+9
 23307  019E58  0EFA               	movlw	-6
 23308  019E5A  006F FF8C  F030    	movff	plusw1,btemp+10
 23309  019E60  0EFB               	movlw	-5
 23310  019E62  006F FF8C  F031    	movff	plusw1,btemp+11
 23311                           
 23312                           ;stkvar	_u @ sp[(-4)+0]
 23313  019E68  0EFC               	movlw	-4
 23314  019E6A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 23315  019E70  0EFD               	movlw	-3
 23316  019E72  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 23317  019E78  0EFE               	movlw	-2
 23318  019E7A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 23319  019E80  0EFF               	movlw	-1
 23320  019E82  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 23321                           
 23322                           ;stkvar	_u @ sp[(-4)+0]
 23323  019E88  0EFF               	movlw	-1
 23324  019E8A  9EE3               	bcf	plusw1,7,c
 23325                           
 23326                           ;stkvar	_u @ sp[(-4)+0]
 23327  019E8C  0EFC               	movlw	-4
 23328  019E8E  006F FF8C  F026    	movff	plusw1,btemp
 23329  019E94  0EFD               	movlw	-3
 23330  019E96  006F FF8C  F027    	movff	plusw1,btemp+1
 23331  019E9C  0EFE               	movlw	-2
 23332  019E9E  006F FF8C  F028    	movff	plusw1,btemp+2
 23333  019EA4  0EFF               	movlw	-1
 23334  019EA6  006F FF8C  F029    	movff	plusw1,btemp+3
 23335                           
 23336                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23337  019EAC  0EF8               	movlw	248
 23338  019EAE  26E1               	addwf	fsr1l,f,c
 23339  019EB0  0EFF               	movlw	255
 23340  019EB2  22E2               	addwfc	fsr1h,f,c
 23341  019EB4  0012               	return		;funcret
 23342  019EB6                     __end_of_fabsf:
 23343                           	opt callstack 0
 23344                           
 23345 ;; *************** function _conv_raw_result *****************
 23346 ;; Defined at:
 23347 ;;		line 95 in file "daq.c"
 23348 ;; Parameters:    Size  Location     Type
 23349 ;;  chan            1  [STACK] const enum E16582
 23350 ;;  to_what         1  [STACK] const enum E16644
 23351 ;; Auto vars:     Size  Location     Type
 23352 ;;		None
 23353 ;; Return value:  Size  Location     Type
 23354 ;;                  4  [STACK] float 
 23355 ;; Registers used:
 23356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23357 ;; Tracked objects:
 23358 ;;		On entry : 0/39
 23359 ;;		On exit  : 0/0
 23360 ;;		Unchanged: 0/0
 23361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23366 ;;Total ram usage:        0 bytes
 23367 ;; Hardware stack levels used:    1
 23368 ;; Hardware stack levels required when called:   17
 23369 ;; This function calls:
 23370 ;;		___fldiv
 23371 ;;		___flmul
 23372 ;;		___flsub
 23373 ;;		___xxtofl
 23374 ;;		_get_raw_result
 23375 ;;		_nanf
 23376 ;; This function is called by:
 23377 ;;		_main
 23378 ;;		_convert_adc_data
 23379 ;;		_calc_ror_data
 23380 ;;		_check_day_time
 23381 ;;		_init_bsoc
 23382 ;;		_esr_check
 23383 ;; This function uses a reentrant model
 23384 ;;
 23385                           
 23386                           	psect	text94
 23387  014F24                     __ptext94:
 23388                           	opt callstack 0
 23389  014F24                     _conv_raw_result:
 23390                           	opt callstack 0
 23391                           
 23392                           ;daq.c: 95: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 96: {;daq.c: 98:  switch (to_what) {
 23393                           
 23394                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23395                           ;incstack = 0
 23396 ;; hardware stack exceeded
 23397  014F24  D242               	goto	l9589
 23398  014F26                     l9535:
 23399                           
 23400                           ;daq.c: 100:   if (!(0b0011110001110111 >> chan & 0x1))
 23401                           ;stkvar	_chan @ sp[(0)+-1]
 23402  014F26  0EFF               	movlw	-1
 23403  014F28  006F FF8C  F031    	movff	plusw1,btemp+11
 23404  014F2E  0E77               	movlw	119
 23405  014F30  6E2E               	movwf	(btemp+8)^0,c
 23406  014F32  0E3C               	movlw	60
 23407  014F34  6E2F               	movwf	(btemp+9)^0,c
 23408  014F36  2A31               	incf	(btemp+11)^0,f,c
 23409  014F38  D003               	goto	u8964
 23410  014F3A                     u8965:
 23411  014F3A  342F               	rlcf	(btemp+9)^0,w,c
 23412  014F3C  322F               	rrcf	(btemp+9)^0,f,c
 23413  014F3E  322E               	rrcf	(btemp+8)^0,f,c
 23414  014F40                     u8964:
 23415  014F40  2E31               	decfsz	(btemp+11)^0,f,c
 23416  014F42  D7FB               	goto	u8965
 23417  014F44  B02E               	btfsc	(btemp+8)^0,0,c
 23418  014F46  D007               	goto	l9541
 23419                           
 23420                           ;daq.c: 101:    return nanf("");
 23421  014F48  0EB9               	movlw	low (STR_65+84)
 23422  014F4A  6EE6               	movwf	postinc1,c
 23423  014F4C  0EFC               	movlw	high (STR_65+84)
 23424  014F4E  6EE6               	movwf	postinc1,c
 23425  014F50  EC57  F0D4         	call	_nanf	;wreg free
 23426  014F54  D23A               	goto	l1784
 23427  014F56                     l9541:
 23428                           
 23429                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1) {
 23430                           ;stkvar	_chan @ sp[(0)+-1]
 23431  014F56  0EFF               	movlw	-1
 23432  014F58  006F FF8C  F031    	movff	plusw1,btemp+11
 23433  014F5E  0E03               	movlw	3
 23434  014F60  6E2E               	movwf	(btemp+8)^0,c
 23435  014F62  0E00               	movlw	0
 23436  014F64  6E2F               	movwf	(btemp+9)^0,c
 23437  014F66  2A31               	incf	(btemp+11)^0,f,c
 23438  014F68  D003               	goto	u8984
 23439  014F6A                     u8985:
 23440  014F6A  342F               	rlcf	(btemp+9)^0,w,c
 23441  014F6C  322F               	rrcf	(btemp+9)^0,f,c
 23442  014F6E  322E               	rrcf	(btemp+8)^0,f,c
 23443  014F70                     u8984:
 23444  014F70  2E31               	decfsz	(btemp+11)^0,f,c
 23445  014F72  D7FB               	goto	u8985
 23446  014F74  A02E               	btfss	(btemp+8)^0,0,c
 23447  014F76  D0EB               	goto	l9555
 23448                           
 23449                           ;daq.c: 104:    if (0b0000000000000001 >> chan & 0x1) {
 23450                           ;stkvar	_chan @ sp[(0)+-1]
 23451  014F78  0EFF               	movlw	-1
 23452  014F7A  006F FF8C  F031    	movff	plusw1,btemp+11
 23453  014F80  0E01               	movlw	1
 23454  014F82  6E2E               	movwf	(btemp+8)^0,c
 23455  014F84  0E00               	movlw	0
 23456  014F86  6E2F               	movwf	(btemp+9)^0,c
 23457  014F88  2A31               	incf	(btemp+11)^0,f,c
 23458  014F8A  D003               	goto	u9004
 23459  014F8C                     u9005:
 23460  014F8C  342F               	rlcf	(btemp+9)^0,w,c
 23461  014F8E  322F               	rrcf	(btemp+9)^0,f,c
 23462  014F90  322E               	rrcf	(btemp+8)^0,f,c
 23463  014F92                     u9004:
 23464  014F92  2E31               	decfsz	(btemp+11)^0,f,c
 23465  014F94  D7FB               	goto	u9005
 23466  014F96  A02E               	btfss	(btemp+8)^0,0,c
 23467  014F98  D06D               	goto	l9551
 23468                           
 23469                           ;daq.c: 105:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.0850
      +                          000;
 23470  014F9A  0E7B               	movlw	123
 23471  014F9C  6EE6               	movwf	postinc1,c
 23472  014F9E  0E14               	movlw	20
 23473  014FA0  6EE6               	movwf	postinc1,c
 23474  014FA2  0EAE               	movlw	174
 23475  014FA4  6EE6               	movwf	postinc1,c
 23476  014FA6  0E3D               	movlw	61
 23477  014FA8  6EE6               	movwf	postinc1,c
 23478  014FAA  0060  F344  F02E   	movff	_R+32,btemp+8	;volatile
 23479  014FB0  0060  F348  F02F   	movff	_R+33,btemp+9	;volatile
 23480  014FB6  0E00               	movlw	0
 23481  014FB8  BE2F               	btfsc	(btemp+9)^0,7,c
 23482  014FBA  0EFF               	movlw	255
 23483  014FBC  6E30               	movwf	(btemp+10)^0,c
 23484  014FBE  6E31               	movwf	(btemp+11)^0,c
 23485  014FC0  0060  F0BB  FFE6   	movff	btemp+8,postinc1
 23486  014FC6  0060  F0BF  FFE6   	movff	btemp+9,postinc1
 23487  014FCC  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 23488  014FD2  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 23489  014FD8  0E01               	movlw	1
 23490  014FDA  6EE6               	movwf	postinc1,c
 23491  014FDC  EC14  F0BD         	call	___xxtofl	;wreg free
 23492  014FE0  0060  F09B  FFE6   	movff	btemp,postinc1
 23493  014FE6  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23494  014FEC  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23495  014FF2  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23496                           
 23497                           ;stkvar	_chan @ sp[(-8)+-1]
 23498  014FF8  0EF7               	movlw	-9
 23499  014FFA  50E3               	movf	plusw1,w,c
 23500  014FFC  6EE6               	movwf	postinc1,c
 23501  014FFE  EC61  F0DB         	call	_get_raw_result	;wreg free
 23502  015002  0060  F098  F030   	movff	btemp,btemp+10
 23503  015008  0060  F09C  F031   	movff	btemp+1,btemp+11
 23504  01500E  5030               	movf	(btemp+10)^0,w,c
 23505  015010  6E2A               	movwf	(btemp+4)^0,c
 23506  015012  5031               	movf	(btemp+11)^0,w,c
 23507  015014  6E2B               	movwf	(btemp+5)^0,c
 23508  015016  6A2C               	clrf	(btemp+6)^0,c
 23509  015018  6A2D               	clrf	(btemp+7)^0,c
 23510  01501A  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23511  015020  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23512  015026  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23513  01502C  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23514  015032  0E00               	movlw	0
 23515  015034  6EE6               	movwf	postinc1,c
 23516  015036  EC14  F0BD         	call	___xxtofl	;wreg free
 23517  01503A  0060  F09B  FFE6   	movff	btemp,postinc1
 23518  015040  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23519  015046  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23520  01504C  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23521  015052  EC1F  F0D6         	call	___flsub	;wreg free
 23522  015056  0060  F09B  FFE6   	movff	btemp,postinc1
 23523  01505C  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23524  015062  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23525  015068  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23526  01506E  EC41  F099         	call	___flmul	;wreg free
 23527  015072  D1AB               	goto	l1784
 23528  015074                     l9551:
 23529                           
 23530                           ;daq.c: 107:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.0350
      +                          000;
 23531  015074  0E29               	movlw	41
 23532  015076  6EE6               	movwf	postinc1,c
 23533  015078  0E5C               	movlw	92
 23534  01507A  6EE6               	movwf	postinc1,c
 23535  01507C  0E0F               	movlw	15
 23536  01507E  6EE6               	movwf	postinc1,c
 23537  015080  0E3D               	movlw	61
 23538  015082  6EE6               	movwf	postinc1,c
 23539  015084  0060  F34C  F02E   	movff	_R+34,btemp+8	;volatile
 23540  01508A  0060  F350  F02F   	movff	_R+35,btemp+9	;volatile
 23541  015090  0E00               	movlw	0
 23542  015092  BE2F               	btfsc	(btemp+9)^0,7,c
 23543  015094  0EFF               	movlw	255
 23544  015096  6E30               	movwf	(btemp+10)^0,c
 23545  015098  6E31               	movwf	(btemp+11)^0,c
 23546  01509A  0060  F0BB  FFE6   	movff	btemp+8,postinc1
 23547  0150A0  0060  F0BF  FFE6   	movff	btemp+9,postinc1
 23548  0150A6  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 23549  0150AC  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 23550  0150B2  0E01               	movlw	1
 23551  0150B4  6EE6               	movwf	postinc1,c
 23552  0150B6  EC14  F0BD         	call	___xxtofl	;wreg free
 23553  0150BA  0060  F09B  FFE6   	movff	btemp,postinc1
 23554  0150C0  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23555  0150C6  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23556  0150CC  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23557                           
 23558                           ;stkvar	_chan @ sp[(-8)+-1]
 23559  0150D2  0EF7               	movlw	-9
 23560  0150D4  50E3               	movf	plusw1,w,c
 23561  0150D6  6EE6               	movwf	postinc1,c
 23562  0150D8  EC61  F0DB         	call	_get_raw_result	;wreg free
 23563  0150DC  0060  F098  F030   	movff	btemp,btemp+10
 23564  0150E2  0060  F09C  F031   	movff	btemp+1,btemp+11
 23565  0150E8  5030               	movf	(btemp+10)^0,w,c
 23566  0150EA  6E2A               	movwf	(btemp+4)^0,c
 23567  0150EC  5031               	movf	(btemp+11)^0,w,c
 23568  0150EE  6E2B               	movwf	(btemp+5)^0,c
 23569  0150F0  6A2C               	clrf	(btemp+6)^0,c
 23570  0150F2  6A2D               	clrf	(btemp+7)^0,c
 23571  0150F4  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23572  0150FA  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23573  015100  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23574  015106  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23575  01510C  0E00               	movlw	0
 23576  01510E  6EE6               	movwf	postinc1,c
 23577  015110  EC14  F0BD         	call	___xxtofl	;wreg free
 23578  015114  0060  F09B  FFE6   	movff	btemp,postinc1
 23579  01511A  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23580  015120  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23581  015126  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23582  01512C  EC1F  F0D6         	call	___flsub	;wreg free
 23583  015130  0060  F09B  FFE6   	movff	btemp,postinc1
 23584  015136  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23585  01513C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23586  015142  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23587  015148  EC41  F099         	call	___flmul	;wreg free
 23588  01514C  D13E               	goto	l1784
 23589  01514E                     l9555:
 23590                           
 23591                           ;daq.c: 110:    if (0b0000100000000000 >> chan & 0x1) {
 23592                           ;stkvar	_chan @ sp[(0)+-1]
 23593  01514E  0EFF               	movlw	-1
 23594  015150  006F FF8C  F031    	movff	plusw1,btemp+11
 23595  015156  0E00               	movlw	0
 23596  015158  6E2E               	movwf	(btemp+8)^0,c
 23597  01515A  0E08               	movlw	8
 23598  01515C  6E2F               	movwf	(btemp+9)^0,c
 23599  01515E  2A31               	incf	(btemp+11)^0,f,c
 23600  015160  D003               	goto	u9024
 23601  015162                     u9025:
 23602  015162  342F               	rlcf	(btemp+9)^0,w,c
 23603  015164  322F               	rrcf	(btemp+9)^0,f,c
 23604  015166  322E               	rrcf	(btemp+8)^0,f,c
 23605  015168                     u9024:
 23606  015168  2E31               	decfsz	(btemp+11)^0,f,c
 23607  01516A  D7FB               	goto	u9025
 23608  01516C  A02E               	btfss	(btemp+8)^0,0,c
 23609  01516E  D008               	goto	l9563
 23610                           
 23611                           ;daq.c: 111:     return 25.0;
 23612  015170  0E00               	movlw	0
 23613  015172  6E26               	movwf	btemp^0,c
 23614  015174  0E00               	movlw	0
 23615  015176  6E27               	movwf	(btemp+1)^0,c
 23616  015178  0EC8               	movlw	200
 23617  01517A  6E28               	movwf	(btemp+2)^0,c
 23618  01517C  0E41               	movlw	65
 23619  01517E  D113               	goto	L29
 23620  015180                     l9563:
 23621                           
 23622                           ;daq.c: 113:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23623  015180  0E00               	movlw	0
 23624  015182  6EE6               	movwf	postinc1,c
 23625  015184  0E00               	movlw	0
 23626  015186  6EE6               	movwf	postinc1,c
 23627  015188  0E7A               	movlw	122
 23628  01518A  6EE6               	movwf	postinc1,c
 23629  01518C  0E44               	movlw	68
 23630  01518E  6EE6               	movwf	postinc1,c
 23631  015190  0E61               	movlw	97
 23632  015192  6EE6               	movwf	postinc1,c
 23633  015194  0E03               	movlw	3
 23634  015196  6EE6               	movwf	postinc1,c
 23635  015198  0E84               	movlw	132
 23636  01519A  6EE6               	movwf	postinc1,c
 23637  01519C  0E40               	movlw	64
 23638  01519E  6EE6               	movwf	postinc1,c
 23639                           
 23640                           ;stkvar	_chan @ sp[(-8)+-1]
 23641  0151A0  0EF7               	movlw	-9
 23642  0151A2  50E3               	movf	plusw1,w,c
 23643  0151A4  6EE6               	movwf	postinc1,c
 23644  0151A6  EC61  F0DB         	call	_get_raw_result	;wreg free
 23645  0151AA  0060  F098  F030   	movff	btemp,btemp+10
 23646  0151B0  0060  F09C  F031   	movff	btemp+1,btemp+11
 23647  0151B6  5030               	movf	(btemp+10)^0,w,c
 23648  0151B8  6E2A               	movwf	(btemp+4)^0,c
 23649  0151BA  5031               	movf	(btemp+11)^0,w,c
 23650  0151BC  6E2B               	movwf	(btemp+5)^0,c
 23651  0151BE  6A2C               	clrf	(btemp+6)^0,c
 23652  0151C0  6A2D               	clrf	(btemp+7)^0,c
 23653  0151C2  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23654  0151C8  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23655  0151CE  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23656  0151D4  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23657  0151DA  0E00               	movlw	0
 23658  0151DC  6EE6               	movwf	postinc1,c
 23659  0151DE  EC14  F0BD         	call	___xxtofl	;wreg free
 23660  0151E2  0060  F09B  FFE6   	movff	btemp,postinc1
 23661  0151E8  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23662  0151EE  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23663  0151F4  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23664  0151FA  EC41  F099         	call	___flmul	;wreg free
 23665  0151FE  0060  F09B  FFE6   	movff	btemp,postinc1
 23666  015204  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23667  01520A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23668  015210  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23669  015216  ECD5  F0A4         	call	___fldiv	;wreg free
 23670  01521A  D0D7               	goto	l1784
 23671  01521C                     l9567:
 23672                           
 23673                           ;daq.c: 118:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 23674                           ;stkvar	_chan @ sp[(0)+-1]
 23675  01521C  0EFF               	movlw	-1
 23676  01521E  006F FF8C  F031    	movff	plusw1,btemp+11
 23677  015224  0E03               	movlw	3
 23678  015226  6E2E               	movwf	(btemp+8)^0,c
 23679  015228  0E00               	movlw	0
 23680  01522A  6E2F               	movwf	(btemp+9)^0,c
 23681  01522C  2A31               	incf	(btemp+11)^0,f,c
 23682  01522E  D003               	goto	u9044
 23683  015230                     u9045:
 23684  015230  342F               	rlcf	(btemp+9)^0,w,c
 23685  015232  322F               	rrcf	(btemp+9)^0,f,c
 23686  015234  322E               	rrcf	(btemp+8)^0,f,c
 23687  015236                     u9044:
 23688  015236  2E31               	decfsz	(btemp+11)^0,f,c
 23689  015238  D7FB               	goto	u9045
 23690  01523A  B02E               	btfsc	(btemp+8)^0,0,c
 23691  01523C  D011               	goto	u9070
 23692                           
 23693                           ;stkvar	_chan @ sp[(0)+-1]
 23694  01523E  0EFF               	movlw	-1
 23695  015240  006F FF8C  F031    	movff	plusw1,btemp+11
 23696  015246  0E00               	movlw	0
 23697  015248  6E2E               	movwf	(btemp+8)^0,c
 23698  01524A  0E08               	movlw	8
 23699  01524C  6E2F               	movwf	(btemp+9)^0,c
 23700  01524E  2A31               	incf	(btemp+11)^0,f,c
 23701  015250  D003               	goto	u9064
 23702  015252                     u9065:
 23703  015252  342F               	rlcf	(btemp+9)^0,w,c
 23704  015254  322F               	rrcf	(btemp+9)^0,f,c
 23705  015256  322E               	rrcf	(btemp+8)^0,f,c
 23706  015258                     u9064:
 23707  015258  2E31               	decfsz	(btemp+11)^0,f,c
 23708  01525A  D7FB               	goto	u9065
 23709  01525C  A02E               	btfss	(btemp+8)^0,0,c
 23710  01525E  D04E               	goto	l9575
 23711  015260                     u9070:
 23712                           
 23713                           ;daq.c: 119:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 23714  015260  0E00               	movlw	0
 23715  015262  6EE6               	movwf	postinc1,c
 23716  015264  0E00               	movlw	0
 23717  015266  6EE6               	movwf	postinc1,c
 23718  015268  0E7A               	movlw	122
 23719  01526A  6EE6               	movwf	postinc1,c
 23720  01526C  0E44               	movlw	68
 23721  01526E  6EE6               	movwf	postinc1,c
 23722  015270  0E00               	movlw	0
 23723  015272  6EE6               	movwf	postinc1,c
 23724  015274  0E00               	movlw	0
 23725  015276  6EE6               	movwf	postinc1,c
 23726  015278  0E20               	movlw	32
 23727  01527A  6EE6               	movwf	postinc1,c
 23728  01527C  0E3F               	movlw	63
 23729  01527E  6EE6               	movwf	postinc1,c
 23730                           
 23731                           ;stkvar	_chan @ sp[(-8)+-1]
 23732  015280  0EF7               	movlw	-9
 23733  015282  50E3               	movf	plusw1,w,c
 23734  015284  6EE6               	movwf	postinc1,c
 23735  015286  EC61  F0DB         	call	_get_raw_result	;wreg free
 23736  01528A  0060  F098  F030   	movff	btemp,btemp+10
 23737  015290  0060  F09C  F031   	movff	btemp+1,btemp+11
 23738  015296  5030               	movf	(btemp+10)^0,w,c
 23739  015298  6E2A               	movwf	(btemp+4)^0,c
 23740  01529A  5031               	movf	(btemp+11)^0,w,c
 23741  01529C  6E2B               	movwf	(btemp+5)^0,c
 23742  01529E  6A2C               	clrf	(btemp+6)^0,c
 23743  0152A0  6A2D               	clrf	(btemp+7)^0,c
 23744  0152A2  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23745  0152A8  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23746  0152AE  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23747  0152B4  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23748  0152BA  0E00               	movlw	0
 23749  0152BC  6EE6               	movwf	postinc1,c
 23750  0152BE  EC14  F0BD         	call	___xxtofl	;wreg free
 23751  0152C2  0060  F09B  FFE6   	movff	btemp,postinc1
 23752  0152C8  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23753  0152CE  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23754  0152D4  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23755  0152DA  EC41  F099         	call	___flmul	;wreg free
 23756  0152DE  0060  F09B  FFE6   	movff	btemp,postinc1
 23757  0152E4  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23758  0152EA  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23759  0152F0  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23760  0152F6  ECD5  F0A4         	call	___fldiv	;wreg free
 23761  0152FA  D067               	goto	l1784
 23762  0152FC                     l9575:
 23763                           
 23764                           ;daq.c: 121:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23765  0152FC  0E00               	movlw	0
 23766  0152FE  6EE6               	movwf	postinc1,c
 23767  015300  0E00               	movlw	0
 23768  015302  6EE6               	movwf	postinc1,c
 23769  015304  0E7A               	movlw	122
 23770  015306  6EE6               	movwf	postinc1,c
 23771  015308  0E44               	movlw	68
 23772  01530A  6EE6               	movwf	postinc1,c
 23773  01530C  0E61               	movlw	97
 23774  01530E  6EE6               	movwf	postinc1,c
 23775  015310  0E03               	movlw	3
 23776  015312  6EE6               	movwf	postinc1,c
 23777  015314  0E84               	movlw	132
 23778  015316  6EE6               	movwf	postinc1,c
 23779  015318  0E40               	movlw	64
 23780  01531A  6EE6               	movwf	postinc1,c
 23781                           
 23782                           ;stkvar	_chan @ sp[(-8)+-1]
 23783  01531C  0EF7               	movlw	-9
 23784  01531E  50E3               	movf	plusw1,w,c
 23785  015320  6EE6               	movwf	postinc1,c
 23786  015322  EC61  F0DB         	call	_get_raw_result	;wreg free
 23787  015326  0060  F098  F030   	movff	btemp,btemp+10
 23788  01532C  0060  F09C  F031   	movff	btemp+1,btemp+11
 23789  015332  5030               	movf	(btemp+10)^0,w,c
 23790  015334  6E2A               	movwf	(btemp+4)^0,c
 23791  015336  5031               	movf	(btemp+11)^0,w,c
 23792  015338  6E2B               	movwf	(btemp+5)^0,c
 23793  01533A  6A2C               	clrf	(btemp+6)^0,c
 23794  01533C  6A2D               	clrf	(btemp+7)^0,c
 23795  01533E  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23796  015344  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23797  01534A  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23798  015350  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23799  015356  0E00               	movlw	0
 23800  015358  6EE6               	movwf	postinc1,c
 23801  01535A  EC14  F0BD         	call	___xxtofl	;wreg free
 23802  01535E  0060  F09B  FFE6   	movff	btemp,postinc1
 23803  015364  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23804  01536A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23805  015370  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23806  015376  EC41  F099         	call	___flmul	;wreg free
 23807  01537A  0060  F09B  FFE6   	movff	btemp,postinc1
 23808  015380  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23809  015386  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23810  01538C  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23811  015392  ECD5  F0A4         	call	___fldiv	;wreg free
 23812  015396  D019               	goto	l1784
 23813  015398                     l9581:
 23814                           
 23815                           ;daq.c: 124:   return 0.0;
 23816  015398  0E00               	movlw	0
 23817  01539A  6E26               	movwf	btemp^0,c
 23818  01539C  0E00               	movlw	0
 23819  01539E  6E27               	movwf	(btemp+1)^0,c
 23820  0153A0  0E00               	movlw	0
 23821  0153A2  6E28               	movwf	(btemp+2)^0,c
 23822  0153A4  0E00               	movlw	0
 23823  0153A6                     L29:
 23824  0153A6  6E29               	movwf	(btemp+3)^0,c
 23825  0153A8  D010               	goto	l1784
 23826  0153AA                     l9589:
 23827                           
 23828                           ;stkvar	_to_what @ sp[(0)+-2]
 23829  0153AA  0EFE               	movlw	-2
 23830  0153AC  50E3               	movf	plusw1,w,c
 23831  0153AE  6E30               	movwf	(btemp+10)^0,c
 23832  0153B0  6A31               	clrf	(btemp+11)^0,c
 23833                           
 23834                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23835                           ; Switch size 1, requested type "simple"
 23836                           ; Number of cases is 1, Range of values is 0 to 0
 23837                           ; switch strategies available:
 23838                           ; Name         Instructions Cycles
 23839                           ; simple_byte            4     3 (average)
 23840                           ;	Chosen strategy is simple_byte
 23841  0153B2  5031               	movf	(btemp+11)^0,w,c
 23842  0153B4  0A00               	xorlw	0	; case 0
 23843  0153B6  A4D8               	btfss	status,2,c
 23844  0153B8  D7EF               	goto	l9581
 23845                           
 23846                           ; Switch size 1, requested type "simple"
 23847                           ; Number of cases is 2, Range of values is 0 to 1
 23848                           ; switch strategies available:
 23849                           ; Name         Instructions Cycles
 23850                           ; simple_byte            7     4 (average)
 23851                           ;	Chosen strategy is simple_byte
 23852  0153BA  5030               	movf	(btemp+10)^0,w,c
 23853  0153BC  0A00               	xorlw	0	; case 0
 23854  0153BE  B4D8               	btfsc	status,2,c
 23855  0153C0  D5B2               	goto	l9535
 23856  0153C2  0A01               	xorlw	1	; case 1
 23857  0153C4  B4D8               	btfsc	status,2,c
 23858  0153C6  D72A               	goto	l9567
 23859  0153C8  D7E7               	goto	l9581
 23860  0153CA                     l1784:
 23861                           
 23862                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23863  0153CA  52E5               	movf	postdec1,f,c
 23864  0153CC  52E5               	movf	postdec1,f,c
 23865  0153CE  0012               	return		;funcret
 23866  0153D0                     __end_of_conv_raw_result:
 23867                           	opt callstack 0
 23868                           
 23869 ;; *************** function _nanf *****************
 23870 ;; Defined at:
 23871 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 23872 ;; Parameters:    Size  Location     Type
 23873 ;;  s               2  [STACK] PTR const unsigned char 
 23874 ;;		 -> STR_102(1), STR_64(1), 
 23875 ;; Auto vars:     Size  Location     Type
 23876 ;;  u               4  [STACK] struct .
 23877 ;; Return value:  Size  Location     Type
 23878 ;;                  4  [STACK] float 
 23879 ;; Registers used:
 23880 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23881 ;; Tracked objects:
 23882 ;;		On entry : 0/39
 23883 ;;		On exit  : 0/0
 23884 ;;		Unchanged: 0/0
 23885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23890 ;;Total ram usage:        0 bytes
 23891 ;; Hardware stack levels used:    1
 23892 ;; Hardware stack levels required when called:   15
 23893 ;; This function calls:
 23894 ;;		Nothing
 23895 ;; This function is called by:
 23896 ;;		_conv_raw_result
 23897 ;; This function uses a reentrant model
 23898 ;;
 23899                           
 23900                           	psect	text95
 23901  01A8AE                     __ptext95:
 23902                           	opt callstack 0
 23903  01A8AE                     _nanf:
 23904                           	opt callstack 0
 23905                           
 23906                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23907  01A8AE  52E6               	movf	postinc1,f,c
 23908  01A8B0  52E6               	movf	postinc1,f,c
 23909  01A8B2  52E6               	movf	postinc1,f,c
 23910  01A8B4  52E6               	movf	postinc1,f,c
 23911                           
 23912                           ;incstack = 0
 23913 ;; hardware stack exceeded
 23914  01A8B6  0EFF               	movlw	255
 23915  01A8B8  6E2E               	movwf	(btemp+8)^0,c
 23916  01A8BA  0EFF               	movlw	255
 23917  01A8BC  6E2F               	movwf	(btemp+9)^0,c
 23918  01A8BE  0EFF               	movlw	255
 23919  01A8C0  6E30               	movwf	(btemp+10)^0,c
 23920  01A8C2  0E7F               	movlw	127
 23921  01A8C4  6E31               	movwf	(btemp+11)^0,c
 23922                           
 23923                           ;stkvar	_u @ sp[(-4)+0]
 23924  01A8C6  0EFC               	movlw	-4
 23925  01A8C8  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 23926  01A8CE  0EFD               	movlw	-3
 23927  01A8D0  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 23928  01A8D6  0EFE               	movlw	-2
 23929  01A8D8  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 23930  01A8DE  0EFF               	movlw	-1
 23931  01A8E0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 23932                           
 23933                           ;stkvar	_u @ sp[(-4)+0]
 23934  01A8E6  0EFC               	movlw	-4
 23935  01A8E8  006F FF8C  F026    	movff	plusw1,btemp
 23936  01A8EE  0EFD               	movlw	-3
 23937  01A8F0  006F FF8C  F027    	movff	plusw1,btemp+1
 23938  01A8F6  0EFE               	movlw	-2
 23939  01A8F8  006F FF8C  F028    	movff	plusw1,btemp+2
 23940  01A8FE  0EFF               	movlw	-1
 23941  01A900  006F FF8C  F029    	movff	plusw1,btemp+3
 23942                           
 23943                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23944  01A906  0EFA               	movlw	250
 23945  01A908  26E1               	addwf	fsr1l,f,c
 23946  01A90A  0EFF               	movlw	255
 23947  01A90C  22E2               	addwfc	fsr1h,f,c
 23948  01A90E  0012               	return		;funcret
 23949  01A910                     __end_of_nanf:
 23950                           	opt callstack 0
 23951                           
 23952 ;; *************** function _get_raw_result *****************
 23953 ;; Defined at:
 23954 ;;		line 87 in file "daq.c"
 23955 ;; Parameters:    Size  Location     Type
 23956 ;;  index           1  [STACK] const enum E16582
 23957 ;; Auto vars:     Size  Location     Type
 23958 ;;		None
 23959 ;; Return value:  Size  Location     Type
 23960 ;;                  2  [STACK] unsigned short 
 23961 ;; Registers used:
 23962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23963 ;; Tracked objects:
 23964 ;;		On entry : 0/2
 23965 ;;		On exit  : 0/0
 23966 ;;		Unchanged: 0/0
 23967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23972 ;;Total ram usage:        0 bytes
 23973 ;; Hardware stack levels used:    1
 23974 ;; Hardware stack levels required when called:   15
 23975 ;; This function calls:
 23976 ;;		Nothing
 23977 ;; This function is called by:
 23978 ;;		_main
 23979 ;;		_conv_raw_result
 23980 ;; This function uses a reentrant model
 23981 ;;
 23982                           
 23983                           	psect	text96
 23984  01B6C2                     __ptext96:
 23985                           	opt callstack 0
 23986  01B6C2                     _get_raw_result:
 23987                           	opt callstack 0
 23988                           
 23989                           ;daq.c: 87: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 88: {;daq.c: 
      +                          89:  return R.raw_adc[index];
 23990                           ;stkvar	_index @ sp[(0)+-1]
 23991                           
 23992                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23993                           ;incstack = 0
 23994 ;; hardware stack exceeded
 23995  01B6C2  0EFF               	movlw	-1
 23996  01B6C4  50E3               	movf	plusw1,w,c
 23997  01B6C6  0D02               	mullw	2
 23998  01B6C8  50F3               	movf	243,w,c
 23999  01B6CA  0FB1               	addlw	low _R
 24000  01B6CC  6ED9               	movwf	fsr2l,c
 24001  01B6CE  6ADA               	clrf	fsr2h,c
 24002  01B6D0  006F FF78  F026    	movff	postinc2,btemp
 24003  01B6D6  006F FF74  F027    	movff	postdec2,btemp+1
 24004                           
 24005                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 24006  01B6DC  52E5               	movf	postdec1,f,c
 24007  01B6DE  0012               	return		;funcret
 24008  01B6E0                     __end_of_get_raw_result:
 24009                           	opt callstack 0
 24010                           
 24011 ;; *************** function ___xxtofl *****************
 24012 ;; Defined at:
 24013 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 24014 ;; Parameters:    Size  Location     Type
 24015 ;;  sign            1  [STACK] unsigned char 
 24016 ;;  val             4  [STACK] long 
 24017 ;; Auto vars:     Size  Location     Type
 24018 ;;  arg             4  [STACK] unsigned long 
 24019 ;;  exp             1  [STACK] unsigned char 
 24020 ;; Return value:  Size  Location     Type
 24021 ;;                  4  [STACK] unsigned char 
 24022 ;; Registers used:
 24023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24024 ;; Tracked objects:
 24025 ;;		On entry : 0/1
 24026 ;;		On exit  : 0/0
 24027 ;;		Unchanged: 0/0
 24028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24033 ;;Total ram usage:        0 bytes
 24034 ;; Hardware stack levels used:    1
 24035 ;; Hardware stack levels required when called:   15
 24036 ;; This function calls:
 24037 ;;		Nothing
 24038 ;; This function is called by:
 24039 ;;		_conv_raw_result
 24040 ;;		_init_bsoc
 24041 ;; This function uses a reentrant model
 24042 ;;
 24043                           
 24044                           	psect	text97
 24045  017A28                     __ptext97:
 24046                           	opt callstack 0
 24047  017A28                     ___xxtofl:
 24048                           	opt callstack 0
 24049                           
 24050                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24051  017A28  0E05               	movlw	5
 24052  017A2A  26E1               	addwf	fsr1l,f,c
 24053  017A2C  0E00               	movlw	0
 24054  017A2E  22E2               	addwfc	fsr1h,f,c
 24055                           
 24056                           ;stkvar	_sign @ sp[(-5)+-1]
 24057                           
 24058                           ;incstack = 0
 24059 ;; hardware stack exceeded
 24060  017A30  0EFA               	movlw	-6
 24061  017A32  50E3               	movf	plusw1,w,c
 24062  017A34  B4D8               	btfsc	status,2,c
 24063  017A36  D01D               	goto	l9483
 24064                           
 24065                           ;stkvar	_val @ sp[(-5)+-5]
 24066  017A38  0EF9               	movlw	-7
 24067  017A3A  AEE3               	btfss	plusw1,7,c
 24068  017A3C  D01A               	goto	l9483
 24069                           
 24070                           ;stkvar	_val @ sp[(-5)+-5]
 24071  017A3E  0EF6               	movlw	-10
 24072  017A40  006F FF8C  F02E    	movff	plusw1,btemp+8
 24073  017A46  0EF7               	movlw	-9
 24074  017A48  006F FF8C  F02F    	movff	plusw1,btemp+9
 24075  017A4E  0EF8               	movlw	-8
 24076  017A50  006F FF8C  F030    	movff	plusw1,btemp+10
 24077  017A56  0EF9               	movlw	-7
 24078  017A58  006F FF8C  F031    	movff	plusw1,btemp+11
 24079  017A5E  1E2E               	comf	(btemp+8)^0,f,c
 24080  017A60  1E2F               	comf	(btemp+9)^0,f,c
 24081  017A62  1E30               	comf	(btemp+10)^0,f,c
 24082  017A64  1E31               	comf	(btemp+11)^0,f,c
 24083  017A66  2A2E               	incf	(btemp+8)^0,f,c
 24084  017A68  0E00               	movlw	0
 24085  017A6A  222F               	addwfc	(btemp+9)^0,f,c
 24086  017A6C  2230               	addwfc	(btemp+10)^0,f,c
 24087  017A6E  2231               	addwfc	(btemp+11)^0,f,c
 24088  017A70  D010               	goto	L30
 24089  017A72                     l9483:
 24090                           
 24091                           ;stkvar	_val @ sp[(-5)+-5]
 24092  017A72  0EF6               	movlw	-10
 24093  017A74  006F FF8C  F02E    	movff	plusw1,btemp+8
 24094  017A7A  0EF7               	movlw	-9
 24095  017A7C  006F FF8C  F02F    	movff	plusw1,btemp+9
 24096  017A82  0EF8               	movlw	-8
 24097  017A84  006F FF8C  F030    	movff	plusw1,btemp+10
 24098  017A8A  0EF9               	movlw	-7
 24099  017A8C  006F FF8C  F031    	movff	plusw1,btemp+11
 24100  017A92                     L30:
 24101                           
 24102                           ;stkvar	_arg @ sp[(-5)+0]
 24103  017A92  0EFB               	movlw	-5
 24104  017A94  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24105  017A9A  0EFC               	movlw	-4
 24106  017A9C  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24107  017AA2  0EFD               	movlw	-3
 24108  017AA4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24109  017AAA  0EFE               	movlw	-2
 24110  017AAC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24111                           
 24112                           ;stkvar	_val @ sp[(-5)+-5]
 24113  017AB2  0EF6               	movlw	-10
 24114  017AB4  50E3               	movf	plusw1,w,c
 24115  017AB6  E113               	bnz	l9491
 24116  017AB8  0EF7               	movlw	-9
 24117  017ABA  50E3               	movf	plusw1,w,c
 24118  017ABC  E110               	bnz	l9491
 24119  017ABE  0EF8               	movlw	-8
 24120  017AC0  50E3               	movf	plusw1,w,c
 24121  017AC2  E10D               	bnz	l9491
 24122  017AC4  0EF9               	movlw	-7
 24123  017AC6  50E3               	movf	plusw1,w,c
 24124  017AC8  A4D8               	btfss	status,2,c
 24125  017ACA  D009               	goto	l9491
 24126  017ACC  0E00               	movlw	0
 24127  017ACE  6E26               	movwf	btemp^0,c
 24128  017AD0  0E00               	movlw	0
 24129  017AD2  6E27               	movwf	(btemp+1)^0,c
 24130  017AD4  0E00               	movlw	0
 24131  017AD6  6E28               	movwf	(btemp+2)^0,c
 24132  017AD8  0E00               	movlw	0
 24133  017ADA  6E29               	movwf	(btemp+3)^0,c
 24134  017ADC  D0A2               	goto	l3046
 24135  017ADE                     l9491:
 24136  017ADE  0E96               	movlw	150
 24137  017AE0  6E31               	movwf	(btemp+11)^0,c
 24138                           
 24139                           ;stkvar	_exp @ sp[(-5)+4]
 24140  017AE2  0EFF               	movlw	-1
 24141  017AE4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24142  017AEA  D00B               	goto	l9495
 24143  017AEC                     l9493:
 24144                           
 24145                           ;stkvar	_exp @ sp[(-5)+4]
 24146  017AEC  0EFF               	movlw	-1
 24147  017AEE  2AE3               	incf	plusw1,f,c
 24148                           
 24149                           ;stkvar	_arg @ sp[(-5)+0]
 24150  017AF0  90D8               	bcf	status,0,c
 24151  017AF2  0EFE               	movlw	-2
 24152  017AF4  32E3               	rrcf	plusw1,f,c
 24153  017AF6  0EFD               	movlw	-3
 24154  017AF8  32E3               	rrcf	plusw1,f,c
 24155  017AFA  0EFC               	movlw	-4
 24156  017AFC  32E3               	rrcf	plusw1,f,c
 24157  017AFE  0EFB               	movlw	-5
 24158  017B00  32E3               	rrcf	plusw1,f,c
 24159  017B02                     l9495:
 24160                           
 24161                           ;stkvar	_arg @ sp[(-5)+0]
 24162  017B02  50E1               	movf	fsr1l,w,c
 24163  017B04  0FFB               	addlw	-5
 24164  017B06  6ED9               	movwf	fsr2l,c
 24165  017B08  50E2               	movf	fsr1h,w,c
 24166  017B0A  6EDA               	movwf	fsr2h,c
 24167  017B0C  0EFF               	movlw	255
 24168  017B0E  22DA               	addwfc	fsr2h,f,c
 24169  017B10  52DE               	movf	postinc2,f,c
 24170  017B12  52DE               	movf	postinc2,f,c
 24171  017B14  52DE               	movf	postinc2,f,c
 24172  017B16  0EFE               	movlw	254
 24173  017B18  14DD               	andwf	postdec2,w,c
 24174  017B1A  B4D8               	btfsc	status,2,c
 24175  017B1C  D018               	goto	l9503
 24176  017B1E  D7E6               	goto	l9493
 24177  017B20                     l9497:
 24178                           
 24179                           ;stkvar	_exp @ sp[(-5)+4]
 24180  017B20  0EFF               	movlw	-1
 24181  017B22  2AE3               	incf	plusw1,f,c
 24182                           
 24183                           ;stkvar	_arg @ sp[(-5)+0]
 24184  017B24  50E1               	movf	fsr1l,w,c
 24185  017B26  0FFB               	addlw	-5
 24186  017B28  6ED9               	movwf	fsr2l,c
 24187  017B2A  50E2               	movf	fsr1h,w,c
 24188  017B2C  6EDA               	movwf	fsr2h,c
 24189  017B2E  0EFF               	movlw	255
 24190  017B30  22DA               	addwfc	fsr2h,f,c
 24191  017B32  2ADE               	incf	postinc2,f,c
 24192  017B34  0E00               	movlw	0
 24193  017B36  22DE               	addwfc	postinc2,f,c
 24194  017B38  22DE               	addwfc	postinc2,f,c
 24195  017B3A  22DE               	addwfc	postinc2,f,c
 24196                           
 24197                           ;stkvar	_arg @ sp[(-5)+0]
 24198  017B3C  90D8               	bcf	status,0,c
 24199  017B3E  0EFE               	movlw	-2
 24200  017B40  32E3               	rrcf	plusw1,f,c
 24201  017B42  0EFD               	movlw	-3
 24202  017B44  32E3               	rrcf	plusw1,f,c
 24203  017B46  0EFC               	movlw	-4
 24204  017B48  32E3               	rrcf	plusw1,f,c
 24205  017B4A  0EFB               	movlw	-5
 24206  017B4C  32E3               	rrcf	plusw1,f,c
 24207  017B4E                     l9503:
 24208                           
 24209                           ;stkvar	_arg @ sp[(-5)+0]
 24210  017B4E  50E1               	movf	fsr1l,w,c
 24211  017B50  0FFB               	addlw	-5
 24212  017B52  6ED9               	movwf	fsr2l,c
 24213  017B54  50E2               	movf	fsr1h,w,c
 24214  017B56  6EDA               	movwf	fsr2h,c
 24215  017B58  0EFF               	movlw	255
 24216  017B5A  22DA               	addwfc	fsr2h,f,c
 24217  017B5C  52DE               	movf	postinc2,f,c
 24218  017B5E  52DE               	movf	postinc2,f,c
 24219  017B60  52DE               	movf	postinc2,f,c
 24220  017B62  0EFF               	movlw	255
 24221  017B64  14DD               	andwf	postdec2,w,c
 24222  017B66  B4D8               	btfsc	status,2,c
 24223  017B68  D00C               	goto	l9507
 24224  017B6A  D7DA               	goto	l9497
 24225  017B6C                     l9505:
 24226                           
 24227                           ;stkvar	_exp @ sp[(-5)+4]
 24228  017B6C  0EFF               	movlw	-1
 24229  017B6E  06E3               	decf	plusw1,f,c
 24230                           
 24231                           ;stkvar	_arg @ sp[(-5)+0]
 24232  017B70  90D8               	bcf	status,0,c
 24233  017B72  0EFB               	movlw	-5
 24234  017B74  36E3               	rlcf	plusw1,f,c
 24235  017B76  0EFC               	movlw	-4
 24236  017B78  36E3               	rlcf	plusw1,f,c
 24237  017B7A  0EFD               	movlw	-3
 24238  017B7C  36E3               	rlcf	plusw1,f,c
 24239  017B7E  0EFE               	movlw	-2
 24240  017B80  36E3               	rlcf	plusw1,f,c
 24241  017B82                     l9507:
 24242                           
 24243                           ;stkvar	_arg @ sp[(-5)+0]
 24244  017B82  0EFD               	movlw	-3
 24245  017B84  BEE3               	btfsc	plusw1,7,c
 24246  017B86  D007               	goto	u8920
 24247                           
 24248                           ;stkvar	_exp @ sp[(-5)+4]
 24249  017B88  0EFF               	movlw	-1
 24250  017B8A  006F FF8C  F026    	movff	plusw1,btemp
 24251  017B90  0E02               	movlw	2
 24252  017B92  6026               	cpfslt	btemp^0,c
 24253  017B94  D7EB               	goto	l9505
 24254  017B96                     u8920:
 24255                           
 24256                           ;stkvar	_exp @ sp[(-5)+4]
 24257  017B96  0EFF               	movlw	-1
 24258  017B98  B0E3               	btfsc	plusw1,0,c
 24259  017B9A  D002               	goto	l9515
 24260                           
 24261                           ;stkvar	_arg @ sp[(-5)+0]
 24262  017B9C  0EFD               	movlw	-3
 24263  017B9E  9EE3               	bcf	plusw1,7,c
 24264  017BA0                     l9515:
 24265                           
 24266                           ;stkvar	_exp @ sp[(-5)+4]
 24267  017BA0  50E1               	movf	fsr1l,w,c
 24268  017BA2  0FFF               	addlw	-1
 24269  017BA4  6ED9               	movwf	fsr2l,c
 24270  017BA6  50E2               	movf	fsr1h,w,c
 24271  017BA8  6EDA               	movwf	fsr2h,c
 24272  017BAA  0EFF               	movlw	255
 24273  017BAC  22DA               	addwfc	fsr2h,f,c
 24274  017BAE  90D8               	bcf	status,0,c
 24275  017BB0  32DF               	rrcf	indf2,f,c
 24276                           
 24277                           ;stkvar	_exp @ sp[(-5)+4]
 24278  017BB2  0EFF               	movlw	-1
 24279  017BB4  006F FF8C  F031    	movff	plusw1,btemp+11
 24280  017BBA  0060  F0C4  F02A   	movff	btemp+11,btemp+4
 24281  017BC0  6A2B               	clrf	(btemp+5)^0,c
 24282  017BC2  6A2C               	clrf	(btemp+6)^0,c
 24283  017BC4  6A2D               	clrf	(btemp+7)^0,c
 24284  017BC6  0060  F0A8  F02D   	movff	btemp+4,btemp+7
 24285  017BCC  6A2C               	clrf	(btemp+6)^0,c
 24286  017BCE  6A2B               	clrf	(btemp+5)^0,c
 24287  017BD0  6A2A               	clrf	(btemp+4)^0,c
 24288                           
 24289                           ;stkvar	_arg @ sp[(-5)+0]
 24290  017BD2  50E1               	movf	fsr1l,w,c
 24291  017BD4  0FFB               	addlw	-5
 24292  017BD6  6ED9               	movwf	fsr2l,c
 24293  017BD8  50E2               	movf	fsr1h,w,c
 24294  017BDA  6EDA               	movwf	fsr2h,c
 24295  017BDC  0EFF               	movlw	255
 24296  017BDE  22DA               	addwfc	fsr2h,f,c
 24297  017BE0  502A               	movf	(btemp+4)^0,w,c
 24298  017BE2  12DE               	iorwf	postinc2,f,c
 24299  017BE4  502B               	movf	(btemp+5)^0,w,c
 24300  017BE6  12DE               	iorwf	postinc2,f,c
 24301  017BE8  502C               	movf	(btemp+6)^0,w,c
 24302  017BEA  12DE               	iorwf	postinc2,f,c
 24303  017BEC  502D               	movf	(btemp+7)^0,w,c
 24304  017BEE  12DE               	iorwf	postinc2,f,c
 24305                           
 24306                           ;stkvar	_sign @ sp[(-5)+-1]
 24307  017BF0  0EFA               	movlw	-6
 24308  017BF2  50E3               	movf	plusw1,w,c
 24309  017BF4  B4D8               	btfsc	status,2,c
 24310  017BF6  D005               	goto	l9525
 24311                           
 24312                           ;stkvar	_val @ sp[(-5)+-5]
 24313  017BF8  0EF9               	movlw	-7
 24314  017BFA  AEE3               	btfss	plusw1,7,c
 24315  017BFC  D002               	goto	l9525
 24316                           
 24317                           ;stkvar	_arg @ sp[(-5)+0]
 24318  017BFE  0EFE               	movlw	-2
 24319  017C00  8EE3               	bsf	plusw1,7,c
 24320  017C02                     l9525:
 24321                           
 24322                           ;stkvar	_arg @ sp[(-5)+0]
 24323  017C02  0EFB               	movlw	-5
 24324  017C04  006F FF8C  F026    	movff	plusw1,btemp
 24325  017C0A  0EFC               	movlw	-4
 24326  017C0C  006F FF8C  F027    	movff	plusw1,btemp+1
 24327  017C12  0EFD               	movlw	-3
 24328  017C14  006F FF8C  F028    	movff	plusw1,btemp+2
 24329  017C1A  0EFE               	movlw	-2
 24330  017C1C  006F FF8C  F029    	movff	plusw1,btemp+3
 24331  017C22                     l3046:
 24332                           
 24333                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24334  017C22  0EF6               	movlw	246
 24335  017C24  26E1               	addwf	fsr1l,f,c
 24336  017C26  0EFF               	movlw	255
 24337  017C28  22E2               	addwfc	fsr1h,f,c
 24338  017C2A  0012               	return		;funcret
 24339  017C2C                     __end_of___xxtofl:
 24340                           	opt callstack 0
 24341                           
 24342 ;; *************** function ___fldiv *****************
 24343 ;; Defined at:
 24344 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24345 ;; Parameters:    Size  Location     Type
 24346 ;;  b               4  [STACK] unsigned char 
 24347 ;;  a               4  [STACK] unsigned char 
 24348 ;; Auto vars:     Size  Location     Type
 24349 ;;  grs             4  [STACK] unsigned long 
 24350 ;;  rem             4  [STACK] unsigned long 
 24351 ;;  new_exp         2  [STACK] short 
 24352 ;;  aexp            1  [STACK] unsigned char 
 24353 ;;  bexp            1  [STACK] unsigned char 
 24354 ;;  sign            1  [STACK] unsigned char 
 24355 ;; Return value:  Size  Location     Type
 24356 ;;                  4  [STACK] unsigned char 
 24357 ;; Registers used:
 24358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24359 ;; Tracked objects:
 24360 ;;		On entry : 0/1
 24361 ;;		On exit  : 0/0
 24362 ;;		Unchanged: 0/0
 24363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24368 ;;Total ram usage:        0 bytes
 24369 ;; Hardware stack levels used:    1
 24370 ;; Hardware stack levels required when called:   15
 24371 ;; This function calls:
 24372 ;;		Nothing
 24373 ;; This function is called by:
 24374 ;;		_conv_raw_result
 24375 ;;		_calc_bsoc
 24376 ;;		_init_bsoc
 24377 ;;		_esr_check
 24378 ;;		_efgtoa
 24379 ;; This function uses a reentrant model
 24380 ;;
 24381                           
 24382                           	psect	text98
 24383  0149AA                     __ptext98:
 24384                           	opt callstack 0
 24385  0149AA                     ___fldiv:
 24386                           	opt callstack 0
 24387                           
 24388                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24389  0149AA  0E0D               	movlw	13
 24390  0149AC  26E1               	addwf	fsr1l,f,c
 24391  0149AE  0E00               	movlw	0
 24392  0149B0  22E2               	addwfc	fsr1h,f,c
 24393                           
 24394                           ;stkvar	_b @ sp[(-13)+-4]
 24395                           
 24396                           ;incstack = 0
 24397 ;; hardware stack exceeded
 24398  0149B2  0EF2               	movlw	242
 24399  0149B4  24E1               	addwf	fsr1l,w,c
 24400  0149B6  6ED9               	movwf	fsr2l,c
 24401  0149B8  0EFF               	movlw	255
 24402  0149BA  20E2               	addwfc	fsr1h,w,c
 24403  0149BC  6EDA               	movwf	fsr2h,c
 24404  0149BE  50DF               	movf	indf2,w,c
 24405  0149C0  6E31               	movwf	(btemp+11)^0,c
 24406  0149C2  0E80               	movlw	128
 24407  0149C4  1631               	andwf	(btemp+11)^0,f,c
 24408                           
 24409                           ;stkvar	_sign @ sp[(-13)+12]
 24410  0149C6  0EFF               	movlw	-1
 24411  0149C8  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24412                           
 24413                           ;stkvar	_b @ sp[(-13)+-4]
 24414  0149CE  0EF2               	movlw	242
 24415  0149D0  24E1               	addwf	fsr1l,w,c
 24416  0149D2  6ED9               	movwf	fsr2l,c
 24417  0149D4  0EFF               	movlw	255
 24418  0149D6  20E2               	addwfc	fsr1h,w,c
 24419  0149D8  6EDA               	movwf	fsr2h,c
 24420  0149DA  50DF               	movf	indf2,w,c
 24421  0149DC  6E31               	movwf	(btemp+11)^0,c
 24422  0149DE  90D8               	bcf	status,0,c
 24423  0149E0  3431               	rlcf	(btemp+11)^0,w,c
 24424  0149E2  6E30               	movwf	(btemp+10)^0,c
 24425                           
 24426                           ;stkvar	_bexp @ sp[(-13)+11]
 24427  0149E4  0EFE               	movlw	-2
 24428  0149E6  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24429                           
 24430                           ;stkvar	_b @ sp[(-13)+-4]
 24431  0149EC  0EF1               	movlw	241
 24432  0149EE  24E1               	addwf	fsr1l,w,c
 24433  0149F0  6ED9               	movwf	fsr2l,c
 24434  0149F2  0EFF               	movlw	255
 24435  0149F4  20E2               	addwfc	fsr1h,w,c
 24436  0149F6  6EDA               	movwf	fsr2h,c
 24437  0149F8  AEDF               	btfss	indf2,7,c
 24438  0149FA  D002               	goto	l8029
 24439                           
 24440                           ;stkvar	_bexp @ sp[(-13)+11]
 24441  0149FC  0EFE               	movlw	-2
 24442  0149FE  80E3               	bsf	plusw1,0,c
 24443  014A00                     l8029:
 24444                           
 24445                           ;stkvar	_bexp @ sp[(-13)+11]
 24446  014A00  0EFE               	movlw	-2
 24447  014A02  50E3               	movf	plusw1,w,c
 24448  014A04  B4D8               	btfsc	status,2,c
 24449  014A06  D027               	goto	l8039
 24450                           
 24451                           ;stkvar	_bexp @ sp[(-13)+11]
 24452  014A08  0EFE               	movlw	-2
 24453  014A0A  28E3               	incf	plusw1,w,c
 24454  014A0C  A4D8               	btfss	status,2,c
 24455  014A0E  D018               	goto	l8035
 24456  014A10  0E00               	movlw	0
 24457  014A12  6E2E               	movwf	(btemp+8)^0,c
 24458  014A14  0E00               	movlw	0
 24459  014A16  6E2F               	movwf	(btemp+9)^0,c
 24460  014A18  0E00               	movlw	0
 24461  014A1A  6E30               	movwf	(btemp+10)^0,c
 24462  014A1C  0E00               	movlw	0
 24463  014A1E  6E31               	movwf	(btemp+11)^0,c
 24464                           
 24465                           ;stkvar	_b @ sp[(-13)+-4]
 24466  014A20  0EEF               	movlw	-17
 24467  014A22  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24468  014A28  0EF0               	movlw	-16
 24469  014A2A  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24470  014A30  0EF1               	movlw	-15
 24471  014A32  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24472  014A38  0EF2               	movlw	-14
 24473  014A3A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24474  014A40                     l8035:
 24475                           
 24476                           ;stkvar	_b @ sp[(-13)+-4]
 24477  014A40  0EF1               	movlw	-15
 24478  014A42  8EE3               	bsf	plusw1,7,c
 24479                           
 24480                           ;stkvar	_b @ sp[(-13)+-4]
 24481  014A44  0EF2               	movlw	242
 24482  014A46  24E1               	addwf	fsr1l,w,c
 24483  014A48  6ED9               	movwf	fsr2l,c
 24484  014A4A  0EFF               	movlw	255
 24485  014A4C  20E2               	addwfc	fsr1h,w,c
 24486  014A4E  6EDA               	movwf	fsr2h,c
 24487  014A50  0E00               	movlw	0
 24488  014A52  6EDF               	movwf	indf2,c
 24489  014A54  D018               	goto	l8041
 24490  014A56                     l8039:
 24491  014A56  0E00               	movlw	0
 24492  014A58  6E2E               	movwf	(btemp+8)^0,c
 24493  014A5A  0E00               	movlw	0
 24494  014A5C  6E2F               	movwf	(btemp+9)^0,c
 24495  014A5E  0E00               	movlw	0
 24496  014A60  6E30               	movwf	(btemp+10)^0,c
 24497  014A62  0E00               	movlw	0
 24498  014A64  6E31               	movwf	(btemp+11)^0,c
 24499                           
 24500                           ;stkvar	_b @ sp[(-13)+-4]
 24501  014A66  0EEF               	movlw	-17
 24502  014A68  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24503  014A6E  0EF0               	movlw	-16
 24504  014A70  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24505  014A76  0EF1               	movlw	-15
 24506  014A78  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24507  014A7E  0EF2               	movlw	-14
 24508  014A80  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24509  014A86                     l8041:
 24510                           
 24511                           ;stkvar	_a @ sp[(-13)+-8]
 24512  014A86  0EEE               	movlw	238
 24513  014A88  24E1               	addwf	fsr1l,w,c
 24514  014A8A  6ED9               	movwf	fsr2l,c
 24515  014A8C  0EFF               	movlw	255
 24516  014A8E  20E2               	addwfc	fsr1h,w,c
 24517  014A90  6EDA               	movwf	fsr2h,c
 24518  014A92  50DF               	movf	indf2,w,c
 24519  014A94  6E31               	movwf	(btemp+11)^0,c
 24520  014A96  0E80               	movlw	128
 24521  014A98  1631               	andwf	(btemp+11)^0,f,c
 24522                           
 24523                           ;stkvar	_sign @ sp[(-13)+12]
 24524  014A9A  50E1               	movf	fsr1l,w,c
 24525  014A9C  0FFF               	addlw	-1
 24526  014A9E  6ED9               	movwf	fsr2l,c
 24527  014AA0  50E2               	movf	fsr1h,w,c
 24528  014AA2  6EDA               	movwf	fsr2h,c
 24529  014AA4  0EFF               	movlw	255
 24530  014AA6  22DA               	addwfc	fsr2h,f,c
 24531  014AA8  5031               	movf	(btemp+11)^0,w,c
 24532  014AAA  1ADF               	xorwf	indf2,f,c
 24533                           
 24534                           ;stkvar	_a @ sp[(-13)+-8]
 24535  014AAC  0EEE               	movlw	238
 24536  014AAE  24E1               	addwf	fsr1l,w,c
 24537  014AB0  6ED9               	movwf	fsr2l,c
 24538  014AB2  0EFF               	movlw	255
 24539  014AB4  20E2               	addwfc	fsr1h,w,c
 24540  014AB6  6EDA               	movwf	fsr2h,c
 24541  014AB8  50DF               	movf	indf2,w,c
 24542  014ABA  6E31               	movwf	(btemp+11)^0,c
 24543  014ABC  90D8               	bcf	status,0,c
 24544  014ABE  3431               	rlcf	(btemp+11)^0,w,c
 24545  014AC0  6E30               	movwf	(btemp+10)^0,c
 24546                           
 24547                           ;stkvar	_aexp @ sp[(-13)+10]
 24548  014AC2  0EFD               	movlw	-3
 24549  014AC4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24550                           
 24551                           ;stkvar	_a @ sp[(-13)+-8]
 24552  014ACA  0EED               	movlw	237
 24553  014ACC  24E1               	addwf	fsr1l,w,c
 24554  014ACE  6ED9               	movwf	fsr2l,c
 24555  014AD0  0EFF               	movlw	255
 24556  014AD2  20E2               	addwfc	fsr1h,w,c
 24557  014AD4  6EDA               	movwf	fsr2h,c
 24558  014AD6  AEDF               	btfss	indf2,7,c
 24559  014AD8  D002               	goto	l8049
 24560                           
 24561                           ;stkvar	_aexp @ sp[(-13)+10]
 24562  014ADA  0EFD               	movlw	-3
 24563  014ADC  80E3               	bsf	plusw1,0,c
 24564  014ADE                     l8049:
 24565                           
 24566                           ;stkvar	_aexp @ sp[(-13)+10]
 24567  014ADE  0EFD               	movlw	-3
 24568  014AE0  50E3               	movf	plusw1,w,c
 24569  014AE2  B4D8               	btfsc	status,2,c
 24570  014AE4  D027               	goto	l8059
 24571                           
 24572                           ;stkvar	_aexp @ sp[(-13)+10]
 24573  014AE6  0EFD               	movlw	-3
 24574  014AE8  28E3               	incf	plusw1,w,c
 24575  014AEA  A4D8               	btfss	status,2,c
 24576  014AEC  D018               	goto	l8055
 24577  014AEE  0E00               	movlw	0
 24578  014AF0  6E2E               	movwf	(btemp+8)^0,c
 24579  014AF2  0E00               	movlw	0
 24580  014AF4  6E2F               	movwf	(btemp+9)^0,c
 24581  014AF6  0E00               	movlw	0
 24582  014AF8  6E30               	movwf	(btemp+10)^0,c
 24583  014AFA  0E00               	movlw	0
 24584  014AFC  6E31               	movwf	(btemp+11)^0,c
 24585                           
 24586                           ;stkvar	_a @ sp[(-13)+-8]
 24587  014AFE  0EEB               	movlw	-21
 24588  014B00  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24589  014B06  0EEC               	movlw	-20
 24590  014B08  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24591  014B0E  0EED               	movlw	-19
 24592  014B10  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24593  014B16  0EEE               	movlw	-18
 24594  014B18  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24595  014B1E                     l8055:
 24596                           
 24597                           ;stkvar	_a @ sp[(-13)+-8]
 24598  014B1E  0EED               	movlw	-19
 24599  014B20  8EE3               	bsf	plusw1,7,c
 24600                           
 24601                           ;stkvar	_a @ sp[(-13)+-8]
 24602  014B22  0EEE               	movlw	238
 24603  014B24  24E1               	addwf	fsr1l,w,c
 24604  014B26  6ED9               	movwf	fsr2l,c
 24605  014B28  0EFF               	movlw	255
 24606  014B2A  20E2               	addwfc	fsr1h,w,c
 24607  014B2C  6EDA               	movwf	fsr2h,c
 24608  014B2E  0E00               	movlw	0
 24609  014B30  6EDF               	movwf	indf2,c
 24610  014B32  D018               	goto	l8061
 24611  014B34                     l8059:
 24612  014B34  0E00               	movlw	0
 24613  014B36  6E2E               	movwf	(btemp+8)^0,c
 24614  014B38  0E00               	movlw	0
 24615  014B3A  6E2F               	movwf	(btemp+9)^0,c
 24616  014B3C  0E00               	movlw	0
 24617  014B3E  6E30               	movwf	(btemp+10)^0,c
 24618  014B40  0E00               	movlw	0
 24619  014B42  6E31               	movwf	(btemp+11)^0,c
 24620                           
 24621                           ;stkvar	_a @ sp[(-13)+-8]
 24622  014B44  0EEB               	movlw	-21
 24623  014B46  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24624  014B4C  0EEC               	movlw	-20
 24625  014B4E  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24626  014B54  0EED               	movlw	-19
 24627  014B56  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24628  014B5C  0EEE               	movlw	-18
 24629  014B5E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24630  014B64                     l8061:
 24631                           
 24632                           ;stkvar	_a @ sp[(-13)+-8]
 24633  014B64  0EEB               	movlw	-21
 24634  014B66  50E3               	movf	plusw1,w,c
 24635  014B68  E139               	bnz	l8073
 24636  014B6A  0EEC               	movlw	-20
 24637  014B6C  50E3               	movf	plusw1,w,c
 24638  014B6E  E136               	bnz	l8073
 24639  014B70  0EED               	movlw	-19
 24640  014B72  50E3               	movf	plusw1,w,c
 24641  014B74  E133               	bnz	l8073
 24642  014B76  0EEE               	movlw	-18
 24643  014B78  50E3               	movf	plusw1,w,c
 24644  014B7A  A4D8               	btfss	status,2,c
 24645  014B7C  D02F               	goto	l8073
 24646                           
 24647                           ;stkvar	_b @ sp[(-13)+-4]
 24648  014B7E  0EEF               	movlw	-17
 24649  014B80  6AE3               	clrf	plusw1,c
 24650  014B82  0EF0               	movlw	-16
 24651  014B84  6AE3               	clrf	plusw1,c
 24652  014B86  0EF1               	movlw	-15
 24653  014B88  6AE3               	clrf	plusw1,c
 24654  014B8A  0EF2               	movlw	-14
 24655  014B8C  6AE3               	clrf	plusw1,c
 24656                           
 24657                           ;stkvar	_b @ sp[(-13)+-4]
 24658  014B8E  0EF1               	movlw	241
 24659  014B90  24E1               	addwf	fsr1l,w,c
 24660  014B92  6ED9               	movwf	fsr2l,c
 24661  014B94  0EFF               	movlw	255
 24662  014B96  20E2               	addwfc	fsr1h,w,c
 24663  014B98  6EDA               	movwf	fsr2h,c
 24664  014B9A  0E80               	movlw	128
 24665  014B9C  12DE               	iorwf	postinc2,f,c
 24666  014B9E  0E7F               	movlw	127
 24667  014BA0  12DD               	iorwf	postdec2,f,c
 24668  014BA2                     l8067:
 24669                           
 24670                           ;stkvar	_sign @ sp[(-13)+12]
 24671  014BA2  0EFF               	movlw	-1
 24672  014BA4  006F FF8C  F031    	movff	plusw1,btemp+11
 24673                           
 24674                           ;stkvar	_b @ sp[(-13)+-4]
 24675  014BAA  0EF2               	movlw	242
 24676  014BAC  24E1               	addwf	fsr1l,w,c
 24677  014BAE  6ED9               	movwf	fsr2l,c
 24678  014BB0  0EFF               	movlw	255
 24679  014BB2  20E2               	addwfc	fsr1h,w,c
 24680  014BB4  6EDA               	movwf	fsr2h,c
 24681  014BB6  5031               	movf	(btemp+11)^0,w,c
 24682  014BB8  12DF               	iorwf	indf2,f,c
 24683                           
 24684                           ;stkvar	_b @ sp[(-13)+-4]
 24685  014BBA  0EEF               	movlw	-17
 24686  014BBC  006F FF8C  F026    	movff	plusw1,btemp
 24687  014BC2  0EF0               	movlw	-16
 24688  014BC4  006F FF8C  F027    	movff	plusw1,btemp+1
 24689  014BCA  0EF1               	movlw	-15
 24690  014BCC  006F FF8C  F028    	movff	plusw1,btemp+2
 24691  014BD2  0EF2               	movlw	-14
 24692  014BD4  006F FF8C  F029    	movff	plusw1,btemp+3
 24693  014BDA  D19F               	goto	l2970
 24694  014BDC                     l8073:
 24695                           
 24696                           ;stkvar	_bexp @ sp[(-13)+11]
 24697  014BDC  0EFE               	movlw	-2
 24698  014BDE  50E3               	movf	plusw1,w,c
 24699  014BE0  A4D8               	btfss	status,2,c
 24700  014BE2  D009               	goto	l8081
 24701  014BE4  0E00               	movlw	0
 24702  014BE6  6E26               	movwf	btemp^0,c
 24703  014BE8  0E00               	movlw	0
 24704  014BEA  6E27               	movwf	(btemp+1)^0,c
 24705  014BEC  0E00               	movlw	0
 24706  014BEE  6E28               	movwf	(btemp+2)^0,c
 24707  014BF0  0E00               	movlw	0
 24708  014BF2  6E29               	movwf	(btemp+3)^0,c
 24709  014BF4  D192               	goto	l2970
 24710  014BF6                     l8081:
 24711                           
 24712                           ;stkvar	_bexp @ sp[(-13)+11]
 24713  014BF6  0EFE               	movlw	-2
 24714  014BF8  50E3               	movf	plusw1,w,c
 24715  014BFA  6E30               	movwf	(btemp+10)^0,c
 24716  014BFC  6A31               	clrf	(btemp+11)^0,c
 24717                           
 24718                           ;stkvar	_aexp @ sp[(-13)+10]
 24719  014BFE  0EFD               	movlw	-3
 24720  014C00  50E3               	movf	plusw1,w,c
 24721  014C02  5E30               	subwf	(btemp+10)^0,f,c
 24722  014C04  0E00               	movlw	0
 24723  014C06  5A31               	subwfb	(btemp+11)^0,f,c
 24724  014C08  0E7F               	movlw	127
 24725  014C0A  2630               	addwf	(btemp+10)^0,f,c
 24726  014C0C  0E00               	movlw	0
 24727  014C0E  2231               	addwfc	(btemp+11)^0,f,c
 24728                           
 24729                           ;stkvar	_new_exp @ sp[(-13)+8]
 24730  014C10  0EFB               	movlw	-5
 24731  014C12  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24732  014C18  0EFC               	movlw	-4
 24733  014C1A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24734                           
 24735                           ;stkvar	_b @ sp[(-13)+-4]
 24736  014C20  0EEF               	movlw	-17
 24737  014C22  006F FF8C  F02E    	movff	plusw1,btemp+8
 24738  014C28  0EF0               	movlw	-16
 24739  014C2A  006F FF8C  F02F    	movff	plusw1,btemp+9
 24740  014C30  0EF1               	movlw	-15
 24741  014C32  006F FF8C  F030    	movff	plusw1,btemp+10
 24742  014C38  0EF2               	movlw	-14
 24743  014C3A  006F FF8C  F031    	movff	plusw1,btemp+11
 24744                           
 24745                           ;stkvar	_rem @ sp[(-13)+4]
 24746  014C40  0EF7               	movlw	-9
 24747  014C42  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24748  014C48  0EF8               	movlw	-8
 24749  014C4A  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24750  014C50  0EF9               	movlw	-7
 24751  014C52  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24752  014C58  0EFA               	movlw	-6
 24753  014C5A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24754                           
 24755                           ;stkvar	_b @ sp[(-13)+-4]
 24756  014C60  0EEF               	movlw	-17
 24757  014C62  6AE3               	clrf	plusw1,c
 24758  014C64  0EF0               	movlw	-16
 24759  014C66  6AE3               	clrf	plusw1,c
 24760  014C68  0EF1               	movlw	-15
 24761  014C6A  6AE3               	clrf	plusw1,c
 24762  014C6C  0EF2               	movlw	-14
 24763  014C6E  6AE3               	clrf	plusw1,c
 24764                           
 24765                           ;stkvar	_grs @ sp[(-13)+0]
 24766  014C70  0EF3               	movlw	-13
 24767  014C72  6AE3               	clrf	plusw1,c
 24768  014C74  0EF4               	movlw	-12
 24769  014C76  6AE3               	clrf	plusw1,c
 24770  014C78  0EF5               	movlw	-11
 24771  014C7A  6AE3               	clrf	plusw1,c
 24772  014C7C  0EF6               	movlw	-10
 24773  014C7E  6AE3               	clrf	plusw1,c
 24774                           
 24775                           ;stkvar	_aexp @ sp[(-13)+10]
 24776  014C80  0EFD               	movlw	-3
 24777  014C82  6AE3               	clrf	plusw1,c
 24778  014C84  D050               	goto	l8109
 24779  014C86                     l8091:
 24780                           
 24781                           ;stkvar	_aexp @ sp[(-13)+10]
 24782  014C86  0EFD               	movlw	-3
 24783  014C88  50E3               	movf	plusw1,w,c
 24784  014C8A  B4D8               	btfsc	status,2,c
 24785  014C8C  D020               	goto	l8101
 24786                           
 24787                           ;stkvar	_rem @ sp[(-13)+4]
 24788  014C8E  90D8               	bcf	status,0,c
 24789  014C90  0EF7               	movlw	-9
 24790  014C92  36E3               	rlcf	plusw1,f,c
 24791  014C94  0EF8               	movlw	-8
 24792  014C96  36E3               	rlcf	plusw1,f,c
 24793  014C98  0EF9               	movlw	-7
 24794  014C9A  36E3               	rlcf	plusw1,f,c
 24795  014C9C  0EFA               	movlw	-6
 24796  014C9E  36E3               	rlcf	plusw1,f,c
 24797                           
 24798                           ;stkvar	_b @ sp[(-13)+-4]
 24799  014CA0  90D8               	bcf	status,0,c
 24800  014CA2  0EEF               	movlw	-17
 24801  014CA4  36E3               	rlcf	plusw1,f,c
 24802  014CA6  0EF0               	movlw	-16
 24803  014CA8  36E3               	rlcf	plusw1,f,c
 24804  014CAA  0EF1               	movlw	-15
 24805  014CAC  36E3               	rlcf	plusw1,f,c
 24806  014CAE  0EF2               	movlw	-14
 24807  014CB0  36E3               	rlcf	plusw1,f,c
 24808                           
 24809                           ;stkvar	_grs @ sp[(-13)+0]
 24810  014CB2  0EF6               	movlw	-10
 24811  014CB4  AEE3               	btfss	plusw1,7,c
 24812  014CB6  D002               	goto	l8099
 24813                           
 24814                           ;stkvar	_b @ sp[(-13)+-4]
 24815  014CB8  0EEF               	movlw	-17
 24816  014CBA  80E3               	bsf	plusw1,0,c
 24817  014CBC                     l8099:
 24818                           
 24819                           ;stkvar	_grs @ sp[(-13)+0]
 24820  014CBC  90D8               	bcf	status,0,c
 24821  014CBE  0EF3               	movlw	-13
 24822  014CC0  36E3               	rlcf	plusw1,f,c
 24823  014CC2  0EF4               	movlw	-12
 24824  014CC4  36E3               	rlcf	plusw1,f,c
 24825  014CC6  0EF5               	movlw	-11
 24826  014CC8  36E3               	rlcf	plusw1,f,c
 24827  014CCA  0EF6               	movlw	-10
 24828  014CCC  36E3               	rlcf	plusw1,f,c
 24829  014CCE                     l8101:
 24830                           
 24831                           ;stkvar	_a @ sp[(-13)+-8]
 24832                           ;stkvar	_rem @ sp[(-13)+4]
 24833  014CCE  50E1               	movf	fsr1l,w,c
 24834  014CD0  0FF7               	addlw	-9
 24835  014CD2  6ED9               	movwf	fsr2l,c
 24836  014CD4  50E2               	movf	fsr1h,w,c
 24837  014CD6  6EDA               	movwf	fsr2h,c
 24838  014CD8  0EFF               	movlw	255
 24839  014CDA  22DA               	addwfc	fsr2h,f,c
 24840  014CDC  0EEB               	movlw	-21
 24841  014CDE  50E3               	movf	plusw1,w,c
 24842  014CE0  5CDE               	subwf	postinc2,w,c
 24843  014CE2  0EEC               	movlw	-20
 24844  014CE4  50E3               	movf	plusw1,w,c
 24845  014CE6  58DE               	subwfb	postinc2,w,c
 24846  014CE8  0EED               	movlw	-19
 24847  014CEA  50E3               	movf	plusw1,w,c
 24848  014CEC  58DE               	subwfb	postinc2,w,c
 24849  014CEE  0EEE               	movlw	-18
 24850  014CF0  50E3               	movf	plusw1,w,c
 24851  014CF2  58DE               	subwfb	postinc2,w,c
 24852  014CF4  A0D8               	btfss	status,0,c
 24853  014CF6  D015               	goto	l8107
 24854                           
 24855                           ;stkvar	_grs @ sp[(-13)+0]
 24856  014CF8  0EF6               	movlw	-10
 24857  014CFA  8CE3               	bsf	plusw1,6,c
 24858                           
 24859                           ;stkvar	_a @ sp[(-13)+-8]
 24860                           ;stkvar	_rem @ sp[(-13)+4]
 24861  014CFC  50E1               	movf	fsr1l,w,c
 24862  014CFE  0FF7               	addlw	-9
 24863  014D00  6ED9               	movwf	fsr2l,c
 24864  014D02  50E2               	movf	fsr1h,w,c
 24865  014D04  6EDA               	movwf	fsr2h,c
 24866  014D06  0EFF               	movlw	255
 24867  014D08  22DA               	addwfc	fsr2h,f,c
 24868  014D0A  0EEB               	movlw	-21
 24869  014D0C  50E3               	movf	plusw1,w,c
 24870  014D0E  5EDE               	subwf	postinc2,f,c
 24871  014D10  0EEC               	movlw	-20
 24872  014D12  50E3               	movf	plusw1,w,c
 24873  014D14  5ADE               	subwfb	postinc2,f,c
 24874  014D16  0EED               	movlw	-19
 24875  014D18  50E3               	movf	plusw1,w,c
 24876  014D1A  5ADE               	subwfb	postinc2,f,c
 24877  014D1C  0EEE               	movlw	-18
 24878  014D1E  50E3               	movf	plusw1,w,c
 24879  014D20  5ADE               	subwfb	postinc2,f,c
 24880  014D22                     l8107:
 24881                           
 24882                           ;stkvar	_aexp @ sp[(-13)+10]
 24883  014D22  0EFD               	movlw	-3
 24884  014D24  2AE3               	incf	plusw1,f,c
 24885  014D26                     l8109:
 24886                           
 24887                           ;stkvar	_aexp @ sp[(-13)+10]
 24888  014D26  0EFD               	movlw	-3
 24889  014D28  006F FF8C  F026    	movff	plusw1,btemp
 24890  014D2E  0E19               	movlw	25
 24891  014D30  6426               	cpfsgt	btemp^0,c
 24892  014D32  D7A9               	goto	l8091
 24893                           
 24894                           ;stkvar	_rem @ sp[(-13)+4]
 24895  014D34  0EF7               	movlw	-9
 24896  014D36  50E3               	movf	plusw1,w,c
 24897  014D38  E10A               	bnz	u6470
 24898  014D3A  0EF8               	movlw	-8
 24899  014D3C  50E3               	movf	plusw1,w,c
 24900  014D3E  E107               	bnz	u6470
 24901  014D40  0EF9               	movlw	-7
 24902  014D42  50E3               	movf	plusw1,w,c
 24903  014D44  E104               	bnz	u6470
 24904  014D46  0EFA               	movlw	-6
 24905  014D48  50E3               	movf	plusw1,w,c
 24906  014D4A  B4D8               	btfsc	status,2,c
 24907  014D4C  D024               	goto	l8125
 24908  014D4E                     u6470:
 24909                           
 24910                           ;stkvar	_grs @ sp[(-13)+0]
 24911  014D4E  0EF3               	movlw	-13
 24912  014D50  80E3               	bsf	plusw1,0,c
 24913  014D52  D021               	goto	l8125
 24914  014D54                     l8115:
 24915                           
 24916                           ;stkvar	_b @ sp[(-13)+-4]
 24917  014D54  90D8               	bcf	status,0,c
 24918  014D56  0EEF               	movlw	-17
 24919  014D58  36E3               	rlcf	plusw1,f,c
 24920  014D5A  0EF0               	movlw	-16
 24921  014D5C  36E3               	rlcf	plusw1,f,c
 24922  014D5E  0EF1               	movlw	-15
 24923  014D60  36E3               	rlcf	plusw1,f,c
 24924  014D62  0EF2               	movlw	-14
 24925  014D64  36E3               	rlcf	plusw1,f,c
 24926                           
 24927                           ;stkvar	_grs @ sp[(-13)+0]
 24928  014D66  0EF6               	movlw	-10
 24929  014D68  AEE3               	btfss	plusw1,7,c
 24930  014D6A  D002               	goto	l8121
 24931                           
 24932                           ;stkvar	_b @ sp[(-13)+-4]
 24933  014D6C  0EEF               	movlw	-17
 24934  014D6E  80E3               	bsf	plusw1,0,c
 24935  014D70                     l8121:
 24936                           
 24937                           ;stkvar	_grs @ sp[(-13)+0]
 24938  014D70  90D8               	bcf	status,0,c
 24939  014D72  0EF3               	movlw	-13
 24940  014D74  36E3               	rlcf	plusw1,f,c
 24941  014D76  0EF4               	movlw	-12
 24942  014D78  36E3               	rlcf	plusw1,f,c
 24943  014D7A  0EF5               	movlw	-11
 24944  014D7C  36E3               	rlcf	plusw1,f,c
 24945  014D7E  0EF6               	movlw	-10
 24946  014D80  36E3               	rlcf	plusw1,f,c
 24947                           
 24948                           ;stkvar	_new_exp @ sp[(-13)+8]
 24949  014D82  50E1               	movf	fsr1l,w,c
 24950  014D84  0FFB               	addlw	-5
 24951  014D86  6ED9               	movwf	fsr2l,c
 24952  014D88  50E2               	movf	fsr1h,w,c
 24953  014D8A  6EDA               	movwf	fsr2h,c
 24954  014D8C  0EFF               	movlw	255
 24955  014D8E  22DA               	addwfc	fsr2h,f,c
 24956  014D90  06DE               	decf	postinc2,f,c
 24957  014D92  0E00               	movlw	0
 24958  014D94  5ADD               	subwfb	postdec2,f,c
 24959  014D96                     l8125:
 24960                           
 24961                           ;stkvar	_b @ sp[(-13)+-4]
 24962  014D96  0EF1               	movlw	-15
 24963  014D98  AEE3               	btfss	plusw1,7,c
 24964  014D9A  D7DC               	goto	l8115
 24965                           
 24966                           ;stkvar	_aexp @ sp[(-13)+10]
 24967  014D9C  0EFD               	movlw	-3
 24968  014D9E  6AE3               	clrf	plusw1,c
 24969                           
 24970                           ;stkvar	_grs @ sp[(-13)+0]
 24971  014DA0  0EF6               	movlw	-10
 24972  014DA2  AEE3               	btfss	plusw1,7,c
 24973  014DA4  D020               	goto	l8139
 24974                           
 24975                           ;stkvar	_grs @ sp[(-13)+0]
 24976  014DA6  50E1               	movf	fsr1l,w,c
 24977  014DA8  0FF3               	addlw	-13
 24978  014DAA  6ED9               	movwf	fsr2l,c
 24979  014DAC  50E2               	movf	fsr1h,w,c
 24980  014DAE  6EDA               	movwf	fsr2h,c
 24981  014DB0  0EFF               	movlw	255
 24982  014DB2  22DA               	addwfc	fsr2h,f,c
 24983  014DB4  0EFF               	movlw	255
 24984  014DB6  14DE               	andwf	postinc2,w,c
 24985  014DB8  6E2E               	movwf	(btemp+8)^0,c
 24986  014DBA  0EFF               	movlw	255
 24987  014DBC  14DE               	andwf	postinc2,w,c
 24988  014DBE  6E2F               	movwf	(btemp+9)^0,c
 24989  014DC0  0EFF               	movlw	255
 24990  014DC2  14DE               	andwf	postinc2,w,c
 24991  014DC4  6E30               	movwf	(btemp+10)^0,c
 24992  014DC6  0E7F               	movlw	127
 24993  014DC8  14DE               	andwf	postinc2,w,c
 24994  014DCA  6E31               	movwf	(btemp+11)^0,c
 24995  014DCC  502E               	movf	(btemp+8)^0,w,c
 24996  014DCE  102F               	iorwf	(btemp+9)^0,w,c
 24997  014DD0  1030               	iorwf	(btemp+10)^0,w,c
 24998  014DD2  1031               	iorwf	(btemp+11)^0,w,c
 24999  014DD4  B4D8               	btfsc	status,2,c
 25000  014DD6  D004               	goto	l8135
 25001  014DD8                     u6510:
 25002                           
 25003                           ;stkvar	_aexp @ sp[(-13)+10]
 25004  014DD8  0EFD               	movlw	-3
 25005  014DDA  6AE3               	clrf	plusw1,c
 25006  014DDC  2AE3               	incf	plusw1,f,c
 25007  014DDE  D003               	goto	l8139
 25008  014DE0                     l8135:
 25009                           
 25010                           ;stkvar	_b @ sp[(-13)+-4]
 25011  014DE0  0EEF               	movlw	-17
 25012  014DE2  B0E3               	btfsc	plusw1,0,c
 25013  014DE4  D7F9               	goto	u6510
 25014  014DE6                     l8139:
 25015                           
 25016                           ;stkvar	_aexp @ sp[(-13)+10]
 25017  014DE6  0EFD               	movlw	-3
 25018  014DE8  50E3               	movf	plusw1,w,c
 25019  014DEA  B4D8               	btfsc	status,2,c
 25020  014DEC  D036               	goto	l8149
 25021                           
 25022                           ;stkvar	_b @ sp[(-13)+-4]
 25023  014DEE  50E1               	movf	fsr1l,w,c
 25024  014DF0  0FEF               	addlw	-17
 25025  014DF2  6ED9               	movwf	fsr2l,c
 25026  014DF4  50E2               	movf	fsr1h,w,c
 25027  014DF6  6EDA               	movwf	fsr2h,c
 25028  014DF8  0EFF               	movlw	255
 25029  014DFA  22DA               	addwfc	fsr2h,f,c
 25030  014DFC  2ADE               	incf	postinc2,f,c
 25031  014DFE  0E00               	movlw	0
 25032  014E00  22DE               	addwfc	postinc2,f,c
 25033  014E02  22DE               	addwfc	postinc2,f,c
 25034  014E04  22DE               	addwfc	postinc2,f,c
 25035                           
 25036                           ;stkvar	_b @ sp[(-13)+-4]
 25037  014E06  0EF2               	movlw	-14
 25038  014E08  A0E3               	btfss	plusw1,0,c
 25039  014E0A  D027               	goto	l8149
 25040  014E0C  0E01               	movlw	1
 25041  014E0E  6E31               	movwf	(btemp+11)^0,c
 25042                           
 25043                           ;stkvar	_b @ sp[(-13)+-4]
 25044  014E10  50E1               	movf	fsr1l,w,c
 25045  014E12  0FEF               	addlw	-17
 25046  014E14  6ED9               	movwf	fsr2l,c
 25047  014E16  50E2               	movf	fsr1h,w,c
 25048  014E18  6EDA               	movwf	fsr2h,c
 25049  014E1A  0EFF               	movlw	255
 25050  014E1C  22DA               	addwfc	fsr2h,f,c
 25051  014E1E  2831               	incf	(btemp+11)^0,w,c
 25052  014E20  52DE               	movf	postinc2,f,c
 25053  014E22  D008               	goto	u6550
 25054  014E24                     u6555:
 25055  014E24  52DE               	movf	postinc2,f,c
 25056  014E26  90D8               	bcf	status,0,c
 25057  014E28  BEDC               	btfsc	preinc2,7,c
 25058  014E2A  80D8               	bsf	status,0,c
 25059  014E2C  32DD               	rrcf	postdec2,f,c
 25060  014E2E  32DD               	rrcf	postdec2,f,c
 25061  014E30  32DD               	rrcf	postdec2,f,c
 25062  014E32  32DE               	rrcf	postinc2,f,c
 25063  014E34                     u6550:
 25064  014E34  2EE8               	decfsz	wreg,f,c
 25065  014E36  D7F6               	goto	u6555
 25066                           
 25067                           ;stkvar	_new_exp @ sp[(-13)+8]
 25068  014E38  0EFB               	movlw	-5
 25069  014E3A  50E3               	movf	plusw1,w,c
 25070  014E3C  0F01               	addlw	1
 25071  014E3E  6E26               	movwf	btemp^0,c
 25072  014E40  0EFB               	movlw	-5
 25073  014E42  0060  F09B  FFE3   	movff	btemp,plusw1
 25074  014E48  6A26               	clrf	btemp^0,c
 25075  014E4A  0EFC               	movlw	-4
 25076  014E4C  50E3               	movf	plusw1,w,c
 25077  014E4E  2026               	addwfc	btemp^0,w,c
 25078  014E50  6E26               	movwf	btemp^0,c
 25079  014E52  0EFC               	movlw	-4
 25080  014E54  0060  F09B  FFE3   	movff	btemp,plusw1
 25081  014E5A                     l8149:
 25082                           
 25083                           ;stkvar	_new_exp @ sp[(-13)+8]
 25084  014E5A  0EFC               	movlw	-4
 25085  014E5C  BEE3               	btfsc	plusw1,7,c
 25086  014E5E  D01B               	goto	l8155
 25087  014E60  0EFC               	movlw	-4
 25088  014E62  50E3               	movf	plusw1,w,c
 25089  014E64  E104               	bnz	u6560
 25090  014E66  0EFB               	movlw	-5
 25091  014E68  28E3               	incf	plusw1,w,c
 25092  014E6A  A0D8               	btfss	status,0,c
 25093  014E6C  D014               	goto	l8155
 25094  014E6E                     u6560:
 25095  014E6E  0EFF               	movlw	255
 25096  014E70  6E30               	movwf	(btemp+10)^0,c
 25097  014E72  0E00               	movlw	0
 25098  014E74  6E31               	movwf	(btemp+11)^0,c
 25099                           
 25100                           ;stkvar	_new_exp @ sp[(-13)+8]
 25101  014E76  0EFB               	movlw	-5
 25102  014E78  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 25103  014E7E  0EFC               	movlw	-4
 25104  014E80  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 25105                           
 25106                           ;stkvar	_b @ sp[(-13)+-4]
 25107  014E86  0EEF               	movlw	-17
 25108  014E88  6AE3               	clrf	plusw1,c
 25109  014E8A  0EF0               	movlw	-16
 25110  014E8C  6AE3               	clrf	plusw1,c
 25111  014E8E  0EF1               	movlw	-15
 25112  014E90  6AE3               	clrf	plusw1,c
 25113  014E92  0EF2               	movlw	-14
 25114  014E94  6AE3               	clrf	plusw1,c
 25115  014E96                     l8155:
 25116                           
 25117                           ;stkvar	_new_exp @ sp[(-13)+8]
 25118  014E96  0EFC               	movlw	-4
 25119  014E98  BEE3               	btfsc	plusw1,7,c
 25120  014E9A  D007               	goto	u6570
 25121  014E9C  0EFC               	movlw	-4
 25122  014E9E  50E3               	movf	plusw1,w,c
 25123  014EA0  E112               	bnz	l8161
 25124  014EA2  0EFB               	movlw	-5
 25125  014EA4  04E3               	decf	plusw1,w,c
 25126  014EA6  B0D8               	btfsc	status,0,c
 25127  014EA8  D00E               	goto	l8161
 25128  014EAA                     u6570:
 25129                           
 25130                           ;stkvar	_new_exp @ sp[(-13)+8]
 25131  014EAA  0EFB               	movlw	-5
 25132  014EAC  6AE3               	clrf	plusw1,c
 25133  014EAE  0EFC               	movlw	-4
 25134  014EB0  6AE3               	clrf	plusw1,c
 25135                           
 25136                           ;stkvar	_b @ sp[(-13)+-4]
 25137  014EB2  0EEF               	movlw	-17
 25138  014EB4  6AE3               	clrf	plusw1,c
 25139  014EB6  0EF0               	movlw	-16
 25140  014EB8  6AE3               	clrf	plusw1,c
 25141  014EBA  0EF1               	movlw	-15
 25142  014EBC  6AE3               	clrf	plusw1,c
 25143  014EBE  0EF2               	movlw	-14
 25144  014EC0  6AE3               	clrf	plusw1,c
 25145                           
 25146                           ;stkvar	_sign @ sp[(-13)+12]
 25147  014EC2  0EFF               	movlw	-1
 25148  014EC4  6AE3               	clrf	plusw1,c
 25149  014EC6                     l8161:
 25150                           
 25151                           ;stkvar	_new_exp @ sp[(-13)+8]
 25152                           ;stkvar	_bexp @ sp[(-13)+11]
 25153  014EC6  0EFB               	movlw	-5
 25154  014EC8  006F FF8C  F026    	movff	plusw1,btemp
 25155  014ECE  0EFE               	movlw	-2
 25156  014ED0  0060  F09B  FFE3   	movff	btemp,plusw1
 25157                           
 25158                           ;stkvar	_bexp @ sp[(-13)+11]
 25159  014ED6  0EFE               	movlw	-2
 25160  014ED8  A0E3               	btfss	plusw1,0,c
 25161  014EDA  D009               	goto	l8167
 25162                           
 25163                           ;stkvar	_b @ sp[(-13)+-4]
 25164  014EDC  0EF1               	movlw	241
 25165  014EDE  24E1               	addwf	fsr1l,w,c
 25166  014EE0  6ED9               	movwf	fsr2l,c
 25167  014EE2  0EFF               	movlw	255
 25168  014EE4  20E2               	addwfc	fsr1h,w,c
 25169  014EE6  6EDA               	movwf	fsr2h,c
 25170  014EE8  0E00               	movlw	0
 25171  014EEA  8EDB               	bsf	plusw2,7,c
 25172  014EEC  D008               	goto	l8169
 25173  014EEE                     l8167:
 25174                           
 25175                           ;stkvar	_b @ sp[(-13)+-4]
 25176  014EEE  0EF1               	movlw	241
 25177  014EF0  24E1               	addwf	fsr1l,w,c
 25178  014EF2  6ED9               	movwf	fsr2l,c
 25179  014EF4  0EFF               	movlw	255
 25180  014EF6  20E2               	addwfc	fsr1h,w,c
 25181  014EF8  6EDA               	movwf	fsr2h,c
 25182  014EFA  0E7F               	movlw	127
 25183  014EFC  16DF               	andwf	indf2,f,c
 25184  014EFE                     l8169:
 25185                           
 25186                           ;stkvar	_b @ sp[(-13)+-4]
 25187  014EFE  0EF2               	movlw	242
 25188  014F00  24E1               	addwf	fsr1l,w,c
 25189  014F02  6ED9               	movwf	fsr2l,c
 25190  014F04  0EFF               	movlw	255
 25191  014F06  20E2               	addwfc	fsr1h,w,c
 25192  014F08  6EDA               	movwf	fsr2h,c
 25193                           
 25194                           ;stkvar	_bexp @ sp[(-13)+11]
 25195  014F0A  0EFE               	movlw	-2
 25196  014F0C  006F FF8C  F031    	movff	plusw1,btemp+11
 25197  014F12  90D8               	bcf	status,0,c
 25198  014F14  3031               	rrcf	(btemp+11)^0,w,c
 25199  014F16  6EDF               	movwf	indf2,c
 25200  014F18  D644               	goto	l8067
 25201  014F1A                     l2970:
 25202                           
 25203                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25204  014F1A  0EEB               	movlw	235
 25205  014F1C  26E1               	addwf	fsr1l,f,c
 25206  014F1E  0EFF               	movlw	255
 25207  014F20  22E2               	addwfc	fsr1h,f,c
 25208  014F22  0012               	return		;funcret
 25209  014F24                     __end_of___fldiv:
 25210                           	opt callstack 0
 25211                           
 25212 ;; *************** function ___flge *****************
 25213 ;; Defined at:
 25214 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25215 ;; Parameters:    Size  Location     Type
 25216 ;;  ff1             4  [STACK] unsigned char 
 25217 ;;  ff2             4  [STACK] unsigned char 
 25218 ;; Auto vars:     Size  Location     Type
 25219 ;;		None
 25220 ;; Return value:  Size  Location     Type
 25221 ;;		None               void
 25222 ;; Registers used:
 25223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25224 ;; Tracked objects:
 25225 ;;		On entry : 0/0
 25226 ;;		On exit  : 0/0
 25227 ;;		Unchanged: 0/0
 25228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25233 ;;Total ram usage:        0 bytes
 25234 ;; Hardware stack levels used:    1
 25235 ;; Hardware stack levels required when called:   15
 25236 ;; This function calls:
 25237 ;;		Nothing
 25238 ;; This function is called by:
 25239 ;;		_main
 25240 ;;		_calc_ror_data
 25241 ;;		_check_day_time
 25242 ;;		_calc_bsoc
 25243 ;;		_efgtoa
 25244 ;; This function uses a reentrant model
 25245 ;;
 25246                           
 25247                           	psect	text99
 25248  018754                     __ptext99:
 25249                           	opt callstack 0
 25250  018754                     ___flge:
 25251                           	opt callstack 0
 25252                           
 25253                           ;stkvar	_ff1 @ sp[(0)+-4]
 25254                           
 25255                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25256                           ;incstack = 0
 25257 ;; hardware stack exceeded
 25258  018754  50E1               	movf	fsr1l,w,c
 25259  018756  0FFC               	addlw	-4
 25260  018758  6ED9               	movwf	fsr2l,c
 25261  01875A  50E2               	movf	fsr1h,w,c
 25262  01875C  6EDA               	movwf	fsr2h,c
 25263  01875E  0EFF               	movlw	255
 25264  018760  22DA               	addwfc	fsr2h,f,c
 25265  018762  0E00               	movlw	0
 25266  018764  14DE               	andwf	postinc2,w,c
 25267  018766  6E2E               	movwf	(btemp+8)^0,c
 25268  018768  0E00               	movlw	0
 25269  01876A  14DE               	andwf	postinc2,w,c
 25270  01876C  6E2F               	movwf	(btemp+9)^0,c
 25271  01876E  0E80               	movlw	128
 25272  018770  14DE               	andwf	postinc2,w,c
 25273  018772  6E30               	movwf	(btemp+10)^0,c
 25274  018774  0E7F               	movlw	127
 25275  018776  14DE               	andwf	postinc2,w,c
 25276  018778  6E31               	movwf	(btemp+11)^0,c
 25277  01877A  502E               	movf	(btemp+8)^0,w,c
 25278  01877C  102F               	iorwf	(btemp+9)^0,w,c
 25279  01877E  1030               	iorwf	(btemp+10)^0,w,c
 25280  018780  1031               	iorwf	(btemp+11)^0,w,c
 25281  018782  A4D8               	btfss	status,2,c
 25282  018784  D008               	goto	l8443
 25283                           
 25284                           ;stkvar	_ff1 @ sp[(0)+-4]
 25285  018786  0EFC               	movlw	-4
 25286  018788  6AE3               	clrf	plusw1,c
 25287  01878A  0EFD               	movlw	-3
 25288  01878C  6AE3               	clrf	plusw1,c
 25289  01878E  0EFE               	movlw	-2
 25290  018790  6AE3               	clrf	plusw1,c
 25291  018792  0EFF               	movlw	-1
 25292  018794  6AE3               	clrf	plusw1,c
 25293  018796                     l8443:
 25294                           
 25295                           ;stkvar	_ff2 @ sp[(0)+-8]
 25296  018796  50E1               	movf	fsr1l,w,c
 25297  018798  0FF8               	addlw	-8
 25298  01879A  6ED9               	movwf	fsr2l,c
 25299  01879C  50E2               	movf	fsr1h,w,c
 25300  01879E  6EDA               	movwf	fsr2h,c
 25301  0187A0  0EFF               	movlw	255
 25302  0187A2  22DA               	addwfc	fsr2h,f,c
 25303  0187A4  0E00               	movlw	0
 25304  0187A6  14DE               	andwf	postinc2,w,c
 25305  0187A8  6E2E               	movwf	(btemp+8)^0,c
 25306  0187AA  0E00               	movlw	0
 25307  0187AC  14DE               	andwf	postinc2,w,c
 25308  0187AE  6E2F               	movwf	(btemp+9)^0,c
 25309  0187B0  0E80               	movlw	128
 25310  0187B2  14DE               	andwf	postinc2,w,c
 25311  0187B4  6E30               	movwf	(btemp+10)^0,c
 25312  0187B6  0E7F               	movlw	127
 25313  0187B8  14DE               	andwf	postinc2,w,c
 25314  0187BA  6E31               	movwf	(btemp+11)^0,c
 25315  0187BC  502E               	movf	(btemp+8)^0,w,c
 25316  0187BE  102F               	iorwf	(btemp+9)^0,w,c
 25317  0187C0  1030               	iorwf	(btemp+10)^0,w,c
 25318  0187C2  1031               	iorwf	(btemp+11)^0,w,c
 25319  0187C4  A4D8               	btfss	status,2,c
 25320  0187C6  D008               	goto	l2651
 25321                           
 25322                           ;stkvar	_ff2 @ sp[(0)+-8]
 25323  0187C8  0EF8               	movlw	-8
 25324  0187CA  6AE3               	clrf	plusw1,c
 25325  0187CC  0EF9               	movlw	-7
 25326  0187CE  6AE3               	clrf	plusw1,c
 25327  0187D0  0EFA               	movlw	-6
 25328  0187D2  6AE3               	clrf	plusw1,c
 25329  0187D4  0EFB               	movlw	-5
 25330  0187D6  6AE3               	clrf	plusw1,c
 25331  0187D8                     l2651:
 25332                           
 25333                           ;stkvar	_ff1 @ sp[(0)+-4]
 25334  0187D8  0EFF               	movlw	-1
 25335  0187DA  AEE3               	btfss	plusw1,7,c
 25336  0187DC  D024               	goto	l8449
 25337                           
 25338                           ;stkvar	_ff1 @ sp[(0)+-4]
 25339  0187DE  0E00               	movlw	0
 25340  0187E0  6E2E               	movwf	(btemp+8)^0,c
 25341  0187E2  0E00               	movlw	0
 25342  0187E4  6E2F               	movwf	(btemp+9)^0,c
 25343  0187E6  0E00               	movlw	0
 25344  0187E8  6E30               	movwf	(btemp+10)^0,c
 25345  0187EA  0E80               	movlw	128
 25346  0187EC  6E31               	movwf	(btemp+11)^0,c
 25347  0187EE  0EFC               	movlw	-4
 25348  0187F0  50E3               	movf	plusw1,w,c
 25349  0187F2  5E2E               	subwf	(btemp+8)^0,f,c
 25350  0187F4  0EFD               	movlw	-3
 25351  0187F6  50E3               	movf	plusw1,w,c
 25352  0187F8  5A2F               	subwfb	(btemp+9)^0,f,c
 25353  0187FA  0EFE               	movlw	-2
 25354  0187FC  50E3               	movf	plusw1,w,c
 25355  0187FE  5A30               	subwfb	(btemp+10)^0,f,c
 25356  018800  0EFF               	movlw	-1
 25357  018802  50E3               	movf	plusw1,w,c
 25358  018804  5A31               	subwfb	(btemp+11)^0,f,c
 25359                           
 25360                           ;stkvar	_ff1 @ sp[(0)+-4]
 25361  018806  0EFC               	movlw	-4
 25362  018808  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 25363  01880E  0EFD               	movlw	-3
 25364  018810  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 25365  018816  0EFE               	movlw	-2
 25366  018818  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 25367  01881E  0EFF               	movlw	-1
 25368  018820  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 25369  018826                     l8449:
 25370                           
 25371                           ;stkvar	_ff2 @ sp[(0)+-8]
 25372  018826  0EFB               	movlw	-5
 25373  018828  AEE3               	btfss	plusw1,7,c
 25374  01882A  D024               	goto	l8453
 25375                           
 25376                           ;stkvar	_ff2 @ sp[(0)+-8]
 25377  01882C  0E00               	movlw	0
 25378  01882E  6E2E               	movwf	(btemp+8)^0,c
 25379  018830  0E00               	movlw	0
 25380  018832  6E2F               	movwf	(btemp+9)^0,c
 25381  018834  0E00               	movlw	0
 25382  018836  6E30               	movwf	(btemp+10)^0,c
 25383  018838  0E80               	movlw	128
 25384  01883A  6E31               	movwf	(btemp+11)^0,c
 25385  01883C  0EF8               	movlw	-8
 25386  01883E  50E3               	movf	plusw1,w,c
 25387  018840  5E2E               	subwf	(btemp+8)^0,f,c
 25388  018842  0EF9               	movlw	-7
 25389  018844  50E3               	movf	plusw1,w,c
 25390  018846  5A2F               	subwfb	(btemp+9)^0,f,c
 25391  018848  0EFA               	movlw	-6
 25392  01884A  50E3               	movf	plusw1,w,c
 25393  01884C  5A30               	subwfb	(btemp+10)^0,f,c
 25394  01884E  0EFB               	movlw	-5
 25395  018850  50E3               	movf	plusw1,w,c
 25396  018852  5A31               	subwfb	(btemp+11)^0,f,c
 25397                           
 25398                           ;stkvar	_ff2 @ sp[(0)+-8]
 25399  018854  0EF8               	movlw	-8
 25400  018856  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 25401  01885C  0EF9               	movlw	-7
 25402  01885E  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 25403  018864  0EFA               	movlw	-6
 25404  018866  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 25405  01886C  0EFB               	movlw	-5
 25406  01886E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 25407  018874                     l8453:
 25408                           
 25409                           ;stkvar	_ff1 @ sp[(0)+-4]
 25410  018874  0EFF               	movlw	-1
 25411  018876  7EE3               	btg	plusw1,7,c
 25412                           
 25413                           ;stkvar	_ff2 @ sp[(0)+-8]
 25414  018878  0EFB               	movlw	-5
 25415  01887A  7EE3               	btg	plusw1,7,c
 25416                           
 25417                           ;stkvar	_ff2 @ sp[(0)+-8]
 25418                           ;stkvar	_ff1 @ sp[(0)+-4]
 25419  01887C  50E1               	movf	fsr1l,w,c
 25420  01887E  0FFC               	addlw	-4
 25421  018880  6ED9               	movwf	fsr2l,c
 25422  018882  50E2               	movf	fsr1h,w,c
 25423  018884  6EDA               	movwf	fsr2h,c
 25424  018886  0EFF               	movlw	255
 25425  018888  22DA               	addwfc	fsr2h,f,c
 25426  01888A  0EF8               	movlw	-8
 25427  01888C  50E3               	movf	plusw1,w,c
 25428  01888E  5CDE               	subwf	postinc2,w,c
 25429  018890  0EF9               	movlw	-7
 25430  018892  50E3               	movf	plusw1,w,c
 25431  018894  58DE               	subwfb	postinc2,w,c
 25432  018896  0EFA               	movlw	-6
 25433  018898  50E3               	movf	plusw1,w,c
 25434  01889A  58DE               	subwfb	postinc2,w,c
 25435  01889C  0EFB               	movlw	-5
 25436  01889E  50E3               	movf	plusw1,w,c
 25437  0188A0  58DE               	subwfb	postinc2,w,c
 25438  0188A2  B0D8               	btfsc	status,0,c
 25439  0188A4  D002               	goto	l8461
 25440  0188A6  9026               	bcf	btemp& (0+255),0,c
 25441  0188A8  D001               	goto	l2658
 25442  0188AA                     l8461:
 25443  0188AA  8026               	bsf	btemp& (0+255),0,c
 25444  0188AC                     l2658:
 25445                           
 25446                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 25447  0188AC  0EF8               	movlw	248
 25448  0188AE  26E1               	addwf	fsr1l,f,c
 25449  0188B0  0EFF               	movlw	255
 25450  0188B2  22E2               	addwfc	fsr1h,f,c
 25451  0188B4  0012               	return		;funcret
 25452  0188B6                     __end_of___flge:
 25453                           	opt callstack 0
 25454                           
 25455 ;; *************** function _calc_model_data *****************
 25456 ;; Defined at:
 25457 ;;		line 67 in file "mbmc.c"
 25458 ;; Parameters:    Size  Location     Type
 25459 ;;		None
 25460 ;; Auto vars:     Size  Location     Type
 25461 ;;		None
 25462 ;; Return value:  Size  Location     Type
 25463 ;;                  1  [STACK] void 
 25464 ;; Registers used:
 25465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25466 ;; Tracked objects:
 25467 ;;		On entry : 0/0
 25468 ;;		On exit  : 3F/1
 25469 ;;		Unchanged: 0/0
 25470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25475 ;;Total ram usage:        0 bytes
 25476 ;; Hardware stack levels used:    1
 25477 ;; Hardware stack levels required when called:   18
 25478 ;; This function calls:
 25479 ;;		___fladd
 25480 ;;		___flmul
 25481 ;;		___flsub
 25482 ;;		_lp_filter
 25483 ;;		_start_bsoc
 25484 ;;		_stop_bsoc
 25485 ;; This function is called by:
 25486 ;;		_main
 25487 ;; This function uses a reentrant model
 25488 ;;
 25489                           
 25490                           	psect	text100
 25491  015C0A                     __ptext100:
 25492                           	opt callstack 0
 25493  015C0A                     _calc_model_data:
 25494                           	opt callstack 12
 25495                           
 25496                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 25497                           
 25498                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25499                           ;incstack = 0
 25500  015C0A  EC62  F0DC         	call	_stop_bsoc	;wreg free
 25501                           
 25502                           ; BSR set to: 57
 25503                           ;mbmc.c: 72:  if (!V.calib) {
 25504  015C0E  0102               	movlb	2	; () banked
 25505  015C10  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 25506  015C12  A4D8               	btfss	status,2,c
 25507  015C14  D1C5               	goto	l10809
 25508                           
 25509                           ; BSR set to: 2
 25510                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 25511  015C16  C100  F144         	movff	_C,_C+68	;volatile
 25512  015C1A  C101  F145         	movff	_C+1,_C+69	;volatile
 25513  015C1E  C102  F146         	movff	_C+2,_C+70	;volatile
 25514  015C22  C103  F147         	movff	_C+3,_C+71	;volatile
 25515                           
 25516                           ; BSR set to: 2
 25517                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 25518  015C26  0060  F21B  FFE6   	movff	calc_model_data@bcror,postinc1
 25519  015C2C  0060  F21F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 25520  015C32  0060  F223  FFE6   	movff	calc_model_data@bcror+2,postinc1
 25521  015C38  0060  F227  FFE6   	movff	calc_model_data@bcror+3,postinc1
 25522  015C3E  0060  F513  FFE6   	movff	_C+68,postinc1
 25523  015C44  0060  F517  FFE6   	movff	_C+69,postinc1
 25524  015C4A  0060  F51B  FFE6   	movff	_C+70,postinc1
 25525  015C50  0060  F51F  FFE6   	movff	_C+71,postinc1
 25526  015C56  EC1F  F0D6         	call	___flsub	;wreg free
 25527  015C5A  0060  F098  F16C   	movff	btemp,_C+108	;volatile
 25528  015C60  0060  F09C  F16D   	movff	btemp+1,_C+109	;volatile
 25529  015C66  0060  F0A0  F16E   	movff	btemp+2,_C+110	;volatile
 25530  015C6C  0060  F0A4  F16F   	movff	btemp+3,_C+111	;volatile
 25531                           
 25532                           ;mbmc.c: 75:   bcror = C.c_bat;
 25533  015C72  C144  F086         	movff	_C+68,calc_model_data@bcror	;volatile
 25534  015C76  C145  F087         	movff	_C+69,calc_model_data@bcror+1	;volatile
 25535  015C7A  C146  F088         	movff	_C+70,calc_model_data@bcror+2	;volatile
 25536  015C7E  C147  F089         	movff	_C+71,calc_model_data@bcror+3	;volatile
 25537                           
 25538                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 25539  015C82  C104  F148         	movff	_C+4,_C+72	;volatile
 25540  015C86  C105  F149         	movff	_C+5,_C+73	;volatile
 25541  015C8A  C106  F14A         	movff	_C+6,_C+74	;volatile
 25542  015C8E  C107  F14B         	movff	_C+7,_C+75	;volatile
 25543                           
 25544                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 25545  015C92  C110  F154         	movff	_C+16,_C+84	;volatile
 25546  015C96  C111  F155         	movff	_C+17,_C+85	;volatile
 25547  015C9A  C112  F156         	movff	_C+18,_C+86	;volatile
 25548  015C9E  C113  F157         	movff	_C+19,_C+87	;volatile
 25549                           
 25550                           ;mbmc.c: 78:   C.bv_ror = C.v_bat - bvror;
 25551  015CA2  0060  F22B  FFE6   	movff	calc_model_data@bvror,postinc1
 25552  015CA8  0060  F22F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 25553  015CAE  0060  F233  FFE6   	movff	calc_model_data@bvror+2,postinc1
 25554  015CB4  0060  F237  FFE6   	movff	calc_model_data@bvror+3,postinc1
 25555  015CBA  0060  F553  FFE6   	movff	_C+84,postinc1
 25556  015CC0  0060  F557  FFE6   	movff	_C+85,postinc1
 25557  015CC6  0060  F55B  FFE6   	movff	_C+86,postinc1
 25558  015CCC  0060  F55F  FFE6   	movff	_C+87,postinc1
 25559  015CD2  EC1F  F0D6         	call	___flsub	;wreg free
 25560  015CD6  0060  F098  F168   	movff	btemp,_C+104	;volatile
 25561  015CDC  0060  F09C  F169   	movff	btemp+1,_C+105	;volatile
 25562  015CE2  0060  F0A0  F16A   	movff	btemp+2,_C+106	;volatile
 25563  015CE8  0060  F0A4  F16B   	movff	btemp+3,_C+107	;volatile
 25564                           
 25565                           ;mbmc.c: 79:   bvror = C.v_bat;
 25566  015CEE  C154  F08A         	movff	_C+84,calc_model_data@bvror	;volatile
 25567  015CF2  C155  F08B         	movff	_C+85,calc_model_data@bvror+1	;volatile
 25568  015CF6  C156  F08C         	movff	_C+86,calc_model_data@bvror+2	;volatile
 25569  015CFA  C157  F08D         	movff	_C+87,calc_model_data@bvror+3	;volatile
 25570                           
 25571                           ;mbmc.c: 80:   C.v_pv = C.calc[V_PV];
 25572  015CFE  C114  F150         	movff	_C+20,_C+80	;volatile
 25573  015D02  C115  F151         	movff	_C+21,_C+81	;volatile
 25574  015D06  C116  F152         	movff	_C+22,_C+82	;volatile
 25575  015D0A  C117  F153         	movff	_C+23,_C+83	;volatile
 25576                           
 25577                           ;mbmc.c: 81:   C.v_cc = C.calc[V_CC];
 25578  015D0E  C108  F14C         	movff	_C+8,_C+76	;volatile
 25579  015D12  C109  F14D         	movff	_C+9,_C+77	;volatile
 25580  015D16  C10A  F14E         	movff	_C+10,_C+78	;volatile
 25581  015D1A  C10B  F14F         	movff	_C+11,_C+79	;volatile
 25582                           
 25583                           ;mbmc.c: 82:   C.v_inverter = C.calc[V_INVERTER];
 25584  015D1E  C130  F164         	movff	_C+48,_C+100	;volatile
 25585  015D22  C131  F165         	movff	_C+49,_C+101	;volatile
 25586  015D26  C132  F166         	movff	_C+50,_C+102	;volatile
 25587  015D2A  C133  F167         	movff	_C+51,_C+103	;volatile
 25588                           
 25589                           ;mbmc.c: 83:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 25590  015D2E  0E01               	movlw	1
 25591  015D30  6EE6               	movwf	postinc1,c
 25592  015D32  0E10               	movlw	16
 25593  015D34  6EE6               	movwf	postinc1,c
 25594  015D36  0060  F403  FFE6   	movff	_C,postinc1
 25595  015D3C  0060  F407  FFE6   	movff	_C+1,postinc1
 25596  015D42  0060  F40B  FFE6   	movff	_C+2,postinc1
 25597  015D48  0060  F40F  FFE6   	movff	_C+3,postinc1
 25598  015D4E  0060  F413  FFE6   	movff	_C+4,postinc1
 25599  015D54  0060  F417  FFE6   	movff	_C+5,postinc1
 25600  015D5A  0060  F41B  FFE6   	movff	_C+6,postinc1
 25601  015D60  0060  F41F  FFE6   	movff	_C+7,postinc1
 25602  015D66  EC1F  F0D6         	call	___flsub	;wreg free
 25603  015D6A  0060  F09B  FFE6   	movff	btemp,postinc1
 25604  015D70  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25605  015D76  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25606  015D7C  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25607  015D82  EC16  F0BF         	call	_lp_filter	;wreg free
 25608  015D86  0060  F098  F140   	movff	btemp,_C+64	;volatile
 25609  015D8C  0060  F09C  F141   	movff	btemp+1,_C+65	;volatile
 25610  015D92  0060  F0A0  F142   	movff	btemp+2,_C+66	;volatile
 25611  015D98  0060  F0A4  F143   	movff	btemp+3,_C+67	;volatile
 25612                           
 25613                           ;mbmc.c: 84:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 25614  015D9E  0E01               	movlw	1
 25615  015DA0  6EE6               	movwf	postinc1,c
 25616  015DA2  0E11               	movlw	17
 25617  015DA4  6EE6               	movwf	postinc1,c
 25618  015DA6  0060  F553  FFE6   	movff	_C+84,postinc1
 25619  015DAC  0060  F557  FFE6   	movff	_C+85,postinc1
 25620  015DB2  0060  F55B  FFE6   	movff	_C+86,postinc1
 25621  015DB8  0060  F55F  FFE6   	movff	_C+87,postinc1
 25622  015DBE  0060  F503  FFE6   	movff	_C+64,postinc1
 25623  015DC4  0060  F507  FFE6   	movff	_C+65,postinc1
 25624  015DCA  0060  F50B  FFE6   	movff	_C+66,postinc1
 25625  015DD0  0060  F50F  FFE6   	movff	_C+67,postinc1
 25626  015DD6  EC41  F099         	call	___flmul	;wreg free
 25627  015DDA  0060  F09B  FFE6   	movff	btemp,postinc1
 25628  015DE0  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25629  015DE6  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25630  015DEC  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25631  015DF2  EC16  F0BF         	call	_lp_filter	;wreg free
 25632  015DF6  0060  F098  F170   	movff	btemp,_C+112	;volatile
 25633  015DFC  0060  F09C  F171   	movff	btemp+1,_C+113	;volatile
 25634  015E02  0060  F0A0  F172   	movff	btemp+2,_C+114	;volatile
 25635  015E08  0060  F0A4  F173   	movff	btemp+3,_C+115	;volatile
 25636                           
 25637                           ;mbmc.c: 85:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 25638  015E0E  0E01               	movlw	1
 25639  015E10  6EE6               	movwf	postinc1,c
 25640  015E12  0E12               	movlw	18
 25641  015E14  6EE6               	movwf	postinc1,c
 25642  015E16  0060  F543  FFE6   	movff	_C+80,postinc1
 25643  015E1C  0060  F547  FFE6   	movff	_C+81,postinc1
 25644  015E22  0060  F54B  FFE6   	movff	_C+82,postinc1
 25645  015E28  0060  F54F  FFE6   	movff	_C+83,postinc1
 25646  015E2E  0060  F523  FFE6   	movff	_C+72,postinc1
 25647  015E34  0060  F527  FFE6   	movff	_C+73,postinc1
 25648  015E3A  0060  F52B  FFE6   	movff	_C+74,postinc1
 25649  015E40  0060  F52F  FFE6   	movff	_C+75,postinc1
 25650  015E46  EC41  F099         	call	___flmul	;wreg free
 25651  015E4A  0060  F09B  FFE6   	movff	btemp,postinc1
 25652  015E50  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25653  015E56  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25654  015E5C  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25655  015E62  EC16  F0BF         	call	_lp_filter	;wreg free
 25656  015E66  0060  F098  F178   	movff	btemp,_C+120	;volatile
 25657  015E6C  0060  F09C  F179   	movff	btemp+1,_C+121	;volatile
 25658  015E72  0060  F0A0  F17A   	movff	btemp+2,_C+122	;volatile
 25659  015E78  0060  F0A4  F17B   	movff	btemp+3,_C+123	;volatile
 25660                           
 25661                           ;mbmc.c: 86:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 25662  015E7E  0E01               	movlw	1
 25663  015E80  6EE6               	movwf	postinc1,c
 25664  015E82  0E13               	movlw	19
 25665  015E84  6EE6               	movwf	postinc1,c
 25666  015E86  0E00               	movlw	0
 25667  015E88  6EE6               	movwf	postinc1,c
 25668  015E8A  0E00               	movlw	0
 25669  015E8C  6EE6               	movwf	postinc1,c
 25670  015E8E  0E60               	movlw	96
 25671  015E90  6EE6               	movwf	postinc1,c
 25672  015E92  0EC1               	movlw	193
 25673  015E94  6EE6               	movwf	postinc1,c
 25674  015E96  0060  F593  FFE6   	movff	_C+100,postinc1
 25675  015E9C  0060  F597  FFE6   	movff	_C+101,postinc1
 25676  015EA2  0060  F59B  FFE6   	movff	_C+102,postinc1
 25677  015EA8  0060  F59F  FFE6   	movff	_C+103,postinc1
 25678  015EAE  0060  F503  FFE6   	movff	_C+64,postinc1
 25679  015EB4  0060  F507  FFE6   	movff	_C+65,postinc1
 25680  015EBA  0060  F50B  FFE6   	movff	_C+66,postinc1
 25681  015EC0  0060  F50F  FFE6   	movff	_C+67,postinc1
 25682  015EC6  EC41  F099         	call	___flmul	;wreg free
 25683  015ECA  0060  F09B  FFE6   	movff	btemp,postinc1
 25684  015ED0  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25685  015ED6  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25686  015EDC  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25687  015EE2  EC56  F09D         	call	___fladd	;wreg free
 25688  015EE6  0060  F09B  FFE6   	movff	btemp,postinc1
 25689  015EEC  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25690  015EF2  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25691  015EF8  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25692  015EFE  EC16  F0BF         	call	_lp_filter	;wreg free
 25693  015F02  0060  F098  F174   	movff	btemp,_C+116	;volatile
 25694  015F08  0060  F09C  F175   	movff	btemp+1,_C+117	;volatile
 25695  015F0E  0060  F0A0  F176   	movff	btemp+2,_C+118	;volatile
 25696  015F14  0060  F0A4  F177   	movff	btemp+3,_C+119	;volatile
 25697                           
 25698                           ;mbmc.c: 87:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 25699  015F1A  0E01               	movlw	1
 25700  015F1C  6EE6               	movwf	postinc1,c
 25701  015F1E  0E14               	movlw	20
 25702  015F20  6EE6               	movwf	postinc1,c
 25703  015F22  0060  F553  FFE6   	movff	_C+84,postinc1
 25704  015F28  0060  F557  FFE6   	movff	_C+85,postinc1
 25705  015F2E  0060  F55B  FFE6   	movff	_C+86,postinc1
 25706  015F34  0060  F55F  FFE6   	movff	_C+87,postinc1
 25707  015F3A  0060  F513  FFE6   	movff	_C+68,postinc1
 25708  015F40  0060  F517  FFE6   	movff	_C+69,postinc1
 25709  015F46  0060  F51B  FFE6   	movff	_C+70,postinc1
 25710  015F4C  0060  F51F  FFE6   	movff	_C+71,postinc1
 25711  015F52  EC41  F099         	call	___flmul	;wreg free
 25712  015F56  0060  F09B  FFE6   	movff	btemp,postinc1
 25713  015F5C  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25714  015F62  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25715  015F68  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25716  015F6E  EC16  F0BF         	call	_lp_filter	;wreg free
 25717  015F72  0060  F098  F17C   	movff	btemp,_C+124	;volatile
 25718  015F78  0060  F09C  F17D   	movff	btemp+1,_C+125	;volatile
 25719  015F7E  0060  F0A0  F17E   	movff	btemp+2,_C+126	;volatile
 25720  015F84  0060  F0A4  F17F   	movff	btemp+3,_C+127	;volatile
 25721                           
 25722                           ;mbmc.c: 91:   if (C.p_inverter < 0.0)
 25723  015F8A  0101               	movlb	1	; () banked
 25724  015F8C  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 25725  015F8E  D008               	goto	l10809
 25726                           
 25727                           ; BSR set to: 1
 25728                           ;mbmc.c: 92:    C.p_inverter = 0.0001;
 25729  015F90  0E17               	movlw	23
 25730  015F92  6F74               	movwf	(_C+116)& (0+255),b	;volatile
 25731  015F94  0EB7               	movlw	183
 25732  015F96  6F75               	movwf	(_C+117)& (0+255),b	;volatile
 25733  015F98  0ED1               	movlw	209
 25734  015F9A  6F76               	movwf	(_C+118)& (0+255),b	;volatile
 25735  015F9C  0E38               	movlw	56
 25736  015F9E  6F77               	movwf	(_C+119)& (0+255),b	;volatile
 25737  015FA0                     l10809:
 25738                           
 25739                           ;mbmc.c: 94:  start_bsoc();
 25740  015FA0  ECE1  F0DA         	call	_start_bsoc	;wreg free
 25741                           
 25742                           ; BSR set to: 57
 25743                           ;mbmc.c: 95:  C.update = 1;
 25744  015FA4  0E01               	movlw	1
 25745  015FA6  0101               	movlb	1	; () banked
 25746  015FA8  6FB0               	movwf	(_C+176)& (0+255),b	;volatile
 25747                           
 25748                           ; BSR set to: 1
 25749                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25750  015FAA  0012               	return		;funcret
 25751  015FAC                     __end_of_calc_model_data:
 25752                           	opt callstack 0
 25753                           
 25754 ;; *************** function _stop_bsoc *****************
 25755 ;; Defined at:
 25756 ;;		line 114 in file "bsoc.c"
 25757 ;; Parameters:    Size  Location     Type
 25758 ;;		None
 25759 ;; Auto vars:     Size  Location     Type
 25760 ;;		None
 25761 ;; Return value:  Size  Location     Type
 25762 ;;                  1  [STACK] void 
 25763 ;; Registers used:
 25764 ;;		None
 25765 ;; Tracked objects:
 25766 ;;		On entry : 0/0
 25767 ;;		On exit  : 3F/39
 25768 ;;		Unchanged: 0/0
 25769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25774 ;;Total ram usage:        0 bytes
 25775 ;; Hardware stack levels used:    1
 25776 ;; Hardware stack levels required when called:   15
 25777 ;; This function calls:
 25778 ;;		Nothing
 25779 ;; This function is called by:
 25780 ;;		_calc_model_data
 25781 ;; This function uses a reentrant model
 25782 ;;
 25783                           
 25784                           	psect	text101
 25785  01B8C4                     __ptext101:
 25786                           	opt callstack 0
 25787  01B8C4                     _stop_bsoc:
 25788                           	opt callstack 14
 25789                           
 25790                           ;bsoc.c: 117:  PIE6bits.TMR3IE = 0;
 25791                           
 25792                           ; BSR set to: 1
 25793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25794                           ;incstack = 0
 25795  01B8C4  0139               	movlb	57	; () banked
 25796  01B8C6  9D96               	bcf	150,6,b	;volatile
 25797                           
 25798                           ; BSR set to: 57
 25799                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 25800  01B8C8  0012               	return		;funcret
 25801  01B8CA                     __end_of_stop_bsoc:
 25802                           	opt callstack 0
 25803                           
 25804 ;; *************** function _start_bsoc *****************
 25805 ;; Defined at:
 25806 ;;		line 105 in file "bsoc.c"
 25807 ;; Parameters:    Size  Location     Type
 25808 ;;		None
 25809 ;; Auto vars:     Size  Location     Type
 25810 ;;		None
 25811 ;; Return value:  Size  Location     Type
 25812 ;;                  1  [STACK] void 
 25813 ;; Registers used:
 25814 ;;		wreg, status,2, status,0, btemp+11
 25815 ;; Tracked objects:
 25816 ;;		On entry : 3C/2
 25817 ;;		On exit  : 3F/39
 25818 ;;		Unchanged: 0/0
 25819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25824 ;;Total ram usage:        0 bytes
 25825 ;; Hardware stack levels used:    1
 25826 ;; Hardware stack levels required when called:   15
 25827 ;; This function calls:
 25828 ;;		Nothing
 25829 ;; This function is called by:
 25830 ;;		_calc_model_data
 25831 ;; This function uses a reentrant model
 25832 ;;
 25833                           
 25834                           	psect	text102
 25835  01B5C2                     __ptext102:
 25836                           	opt callstack 0
 25837  01B5C2                     _start_bsoc:
 25838                           	opt callstack 14
 25839                           
 25840                           ;bsoc.c: 108:  PIE6bits.TMR3IE = 1;
 25841                           
 25842                           ; BSR set to: 57
 25843                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25844                           ;incstack = 0
 25845  01B5C2  0139               	movlb	57	; () banked
 25846  01B5C4  8D96               	bsf	150,6,b	;volatile
 25847                           
 25848                           ; BSR set to: 57
 25849  01B5C6  A4BE               	btfss	190,2,c	;volatile
 25850  01B5C8  D002               	goto	u9430
 25851  01B5CA  0E01               	movlw	1
 25852  01B5CC  D001               	goto	u9436
 25853  01B5CE                     u9430:
 25854  01B5CE  0E00               	movlw	0
 25855  01B5D0                     u9436:
 25856  01B5D0  0AFF               	xorlw	255
 25857  01B5D2  6E31               	movwf	(btemp+11)^0,c
 25858  01B5D4  4631               	rlncf	(btemp+11)^0,f,c
 25859  01B5D6  4631               	rlncf	(btemp+11)^0,f,c
 25860  01B5D8  50BE               	movf	190,w,c	;volatile
 25861  01B5DA  1831               	xorwf	(btemp+11)^0,w,c
 25862  01B5DC  0BFB               	andlw	-5
 25863  01B5DE  1831               	xorwf	(btemp+11)^0,w,c
 25864  01B5E0  6EBE               	movwf	190,c	;volatile
 25865                           
 25866                           ; BSR set to: 57
 25867                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 25868  01B5E2  0012               	return		;funcret
 25869  01B5E4                     __end_of_start_bsoc:
 25870                           	opt callstack 0
 25871                           
 25872 ;; *************** function _lp_filter *****************
 25873 ;; Defined at:
 25874 ;;		line 29 in file "mbmc.c"
 25875 ;; Parameters:    Size  Location     Type
 25876 ;;  new             4  [STACK] const float 
 25877 ;;  bn              1  [STACK] const unsigned char 
 25878 ;;  slow            1  [STACK] const char 
 25879 ;; Auto vars:     Size  Location     Type
 25880 ;;  lp_speed        4  [STACK] float 
 25881 ;; Return value:  Size  Location     Type
 25882 ;;                  4  [STACK] float 
 25883 ;; Registers used:
 25884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25885 ;; Tracked objects:
 25886 ;;		On entry : 0/2
 25887 ;;		On exit  : 0/0
 25888 ;;		Unchanged: 0/0
 25889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25894 ;;Total ram usage:        0 bytes
 25895 ;; Hardware stack levels used:    1
 25896 ;; Hardware stack levels required when called:   17
 25897 ;; This function calls:
 25898 ;;		___fladd
 25899 ;;		___flmul
 25900 ;;		___flsub
 25901 ;; This function is called by:
 25902 ;;		_main
 25903 ;;		_convert_adc_data
 25904 ;;		_calc_model_data
 25905 ;; This function uses a reentrant model
 25906 ;;
 25907                           
 25908                           	psect	text103
 25909  017E2C                     __ptext103:
 25910                           	opt callstack 0
 25911  017E2C                     _lp_filter:
 25912                           	opt callstack 0
 25913                           
 25914                           ; BSR set to: 57
 25915                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25916  017E2C  52E6               	movf	postinc1,f,c
 25917  017E2E  52E6               	movf	postinc1,f,c
 25918  017E30  52E6               	movf	postinc1,f,c
 25919  017E32  52E6               	movf	postinc1,f,c
 25920                           
 25921                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 25922                           ;stkvar	_bn @ sp[(-4)+-5]
 25923                           
 25924                           ;incstack = 0
 25925  017E34  0EF7               	movlw	-9
 25926  017E36  006F FF8C  F026    	movff	plusw1,btemp
 25927  017E3C  0E14               	movlw	20
 25928  017E3E  6426               	cpfsgt	btemp^0,c
 25929  017E40  D011               	goto	l10227
 25930  017E42                     u9340:
 25931                           
 25932                           ;mbmc.c: 35:   return new;
 25933                           ;stkvar	_new @ sp[(-4)+-4]
 25934  017E42  0EF8               	movlw	-8
 25935  017E44  006F FF8C  F026    	movff	plusw1,btemp
 25936  017E4A  0EF9               	movlw	-7
 25937  017E4C  006F FF8C  F027    	movff	plusw1,btemp+1
 25938  017E52  0EFA               	movlw	-6
 25939  017E54  006F FF8C  F028    	movff	plusw1,btemp+2
 25940  017E5A  0EFB               	movlw	-5
 25941  017E5C  006F FF8C  F029    	movff	plusw1,btemp+3
 25942  017E62  D0BD               	goto	l1835
 25943  017E64                     l10227:
 25944                           
 25945                           ;mbmc.c: 37:  if (slow == (-1)) {
 25946                           ;stkvar	_slow @ sp[(-4)+-6]
 25947  017E64  0EF6               	movlw	-10
 25948  017E66  28E3               	incf	plusw1,w,c
 25949  017E68  A4D8               	btfss	status,2,c
 25950  017E6A  D012               	goto	l10235
 25951                           
 25952                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 25953                           ;stkvar	_bn @ sp[(-4)+-5]
 25954  017E6C  0EF7               	movlw	-9
 25955  017E6E  50E3               	movf	plusw1,w,c
 25956  017E70  0D04               	mullw	4
 25957  017E72  0E00               	movlw	low lp_filter@smooth
 25958  017E74  24F3               	addwf	243,w,c
 25959  017E76  6ED9               	movwf	fsr2l,c
 25960  017E78  0E03               	movlw	high lp_filter@smooth
 25961  017E7A  20F4               	addwfc	prodh,w,c
 25962  017E7C  6EDA               	movwf	fsr2h,c
 25963  017E7E  0E00               	movlw	0
 25964  017E80  6EDE               	movwf	postinc2,c
 25965  017E82  0E00               	movlw	0
 25966  017E84  6EDE               	movwf	postinc2,c
 25967  017E86  0E00               	movlw	0
 25968  017E88  6EDE               	movwf	postinc2,c
 25969  017E8A  0E00               	movlw	0
 25970  017E8C  6EDD               	movwf	postdec2,c
 25971  017E8E  D7D9               	goto	u9340
 25972  017E90                     l10235:
 25973                           
 25974                           ;mbmc.c: 42:  if (slow) {
 25975                           ;stkvar	_slow @ sp[(-4)+-6]
 25976  017E90  0EF6               	movlw	-10
 25977  017E92  50E3               	movf	plusw1,w,c
 25978  017E94  B4D8               	btfsc	status,2,c
 25979  017E96  D006               	goto	l10239
 25980                           
 25981                           ;mbmc.c: 43:   lp_speed = 0.033;
 25982  017E98  0E02               	movlw	2
 25983  017E9A  6E2E               	movwf	(btemp+8)^0,c
 25984  017E9C  0E2B               	movlw	43
 25985  017E9E  6E2F               	movwf	(btemp+9)^0,c
 25986  017EA0  0E07               	movlw	7
 25987  017EA2  D005               	goto	L31
 25988  017EA4                     l10239:
 25989                           
 25990                           ;mbmc.c: 45:   lp_speed = 0.066;
 25991  017EA4  0E02               	movlw	2
 25992  017EA6  6E2E               	movwf	(btemp+8)^0,c
 25993  017EA8  0E2B               	movlw	43
 25994  017EAA  6E2F               	movwf	(btemp+9)^0,c
 25995  017EAC  0E87               	movlw	135
 25996  017EAE                     L31:
 25997  017EAE  6E30               	movwf	(btemp+10)^0,c
 25998  017EB0  0E3D               	movlw	61
 25999  017EB2  6E31               	movwf	(btemp+11)^0,c
 26000                           
 26001                           ;stkvar	_lp_speed @ sp[(-4)+0]
 26002  017EB4  0EFC               	movlw	-4
 26003  017EB6  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 26004  017EBC  0EFD               	movlw	-3
 26005  017EBE  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 26006  017EC4  0EFE               	movlw	-2
 26007  017EC6  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26008  017ECC  0EFF               	movlw	-1
 26009  017ECE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26010                           
 26011                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 26012                           ;stkvar	_bn @ sp[(-4)+-5]
 26013  017ED4  0EF7               	movlw	-9
 26014  017ED6  50E3               	movf	plusw1,w,c
 26015  017ED8  0D04               	mullw	4
 26016  017EDA  0E00               	movlw	low lp_filter@smooth
 26017  017EDC  24F3               	addwf	243,w,c
 26018  017EDE  6ED9               	movwf	fsr2l,c
 26019  017EE0  0E03               	movlw	high lp_filter@smooth
 26020  017EE2  20F4               	addwfc	prodh,w,c
 26021  017EE4  6EDA               	movwf	fsr2h,c
 26022  017EE6  006F FF7B FFE6     	movff	postinc2,postinc1
 26023  017EEC  006F FF7B FFE6     	movff	postinc2,postinc1
 26024  017EF2  006F FF7B FFE6     	movff	postinc2,postinc1
 26025  017EF8  006F FF7B FFE6     	movff	postinc2,postinc1
 26026                           
 26027                           ;stkvar	_lp_speed @ sp[(-8)+0]
 26028  017EFE  0EF8               	movlw	-8
 26029  017F00  006F FF8F FFE6     	movff	plusw1,postinc1
 26030  017F06  006F FF8F FFE6     	movff	plusw1,postinc1
 26031  017F0C  006F FF8F FFE6     	movff	plusw1,postinc1
 26032  017F12  006F FF8F FFE6     	movff	plusw1,postinc1
 26033                           
 26034                           ;stkvar	_bn @ sp[(-12)+-5]
 26035  017F18  0EEF               	movlw	-17
 26036  017F1A  50E3               	movf	plusw1,w,c
 26037  017F1C  0D04               	mullw	4
 26038  017F1E  0E00               	movlw	low lp_filter@smooth
 26039  017F20  24F3               	addwf	243,w,c
 26040  017F22  6ED9               	movwf	fsr2l,c
 26041  017F24  0E03               	movlw	high lp_filter@smooth
 26042  017F26  20F4               	addwfc	prodh,w,c
 26043  017F28  6EDA               	movwf	fsr2h,c
 26044  017F2A  006F FF7B FFE6     	movff	postinc2,postinc1
 26045  017F30  006F FF7B FFE6     	movff	postinc2,postinc1
 26046  017F36  006F FF7B FFE6     	movff	postinc2,postinc1
 26047  017F3C  006F FF7B FFE6     	movff	postinc2,postinc1
 26048                           
 26049                           ;stkvar	_new @ sp[(-16)+-4]
 26050  017F42  0EEC               	movlw	-20
 26051  017F44  006F FF8F FFE6     	movff	plusw1,postinc1
 26052  017F4A  006F FF8F FFE6     	movff	plusw1,postinc1
 26053  017F50  006F FF8F FFE6     	movff	plusw1,postinc1
 26054  017F56  006F FF8F FFE6     	movff	plusw1,postinc1
 26055  017F5C  EC1F  F0D6         	call	___flsub	;wreg free
 26056  017F60  0060  F09B  FFE6   	movff	btemp,postinc1
 26057  017F66  0060  F09F  FFE6   	movff	btemp+1,postinc1
 26058  017F6C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 26059  017F72  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 26060  017F78  EC41  F099         	call	___flmul	;wreg free
 26061  017F7C  0060  F09B  FFE6   	movff	btemp,postinc1
 26062  017F82  0060  F09F  FFE6   	movff	btemp+1,postinc1
 26063  017F88  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 26064  017F8E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 26065  017F94  EC56  F09D         	call	___fladd	;wreg free
 26066                           
 26067                           ;stkvar	_bn @ sp[(-4)+-5]
 26068  017F98  0EF7               	movlw	-9
 26069  017F9A  50E3               	movf	plusw1,w,c
 26070  017F9C  0D04               	mullw	4
 26071  017F9E  0E00               	movlw	low lp_filter@smooth
 26072  017FA0  24F3               	addwf	243,w,c
 26073  017FA2  6ED9               	movwf	fsr2l,c
 26074  017FA4  0E03               	movlw	high lp_filter@smooth
 26075  017FA6  20F4               	addwfc	prodh,w,c
 26076  017FA8  6EDA               	movwf	fsr2h,c
 26077  017FAA  0060  F09B  FFDE   	movff	btemp,postinc2
 26078  017FB0  0060  F09F  FFDE   	movff	btemp+1,postinc2
 26079  017FB6  0060  F0A3  FFDE   	movff	btemp+2,postinc2
 26080  017FBC  0060  F0A7  FFDD   	movff	btemp+3,postdec2
 26081  017FC2  52DD               	movf	postdec2,f,c
 26082  017FC4  52DD               	movf	postdec2,f,c
 26083  017FC6  006F FF78  F026    	movff	postinc2,btemp
 26084  017FCC  006F FF78  F027    	movff	postinc2,btemp+1
 26085  017FD2  006F FF78  F028    	movff	postinc2,btemp+2
 26086  017FD8  006F FF78  F029    	movff	postinc2,btemp+3
 26087  017FDE                     l1835:
 26088                           
 26089                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26090  017FDE  0EF6               	movlw	246
 26091  017FE0  26E1               	addwf	fsr1l,f,c
 26092  017FE2  0EFF               	movlw	255
 26093  017FE4  22E2               	addwfc	fsr1h,f,c
 26094  017FE6  0012               	return		;funcret
 26095  017FE8                     __end_of_lp_filter:
 26096                           	opt callstack 0
 26097                           
 26098 ;; *************** function ___flsub *****************
 26099 ;; Defined at:
 26100 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26101 ;; Parameters:    Size  Location     Type
 26102 ;;  b               4  [STACK] float 
 26103 ;;  a               4  [STACK] float 
 26104 ;; Auto vars:     Size  Location     Type
 26105 ;;		None
 26106 ;; Return value:  Size  Location     Type
 26107 ;;                  4  [STACK] float 
 26108 ;; Registers used:
 26109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26110 ;; Tracked objects:
 26111 ;;		On entry : 0/0
 26112 ;;		On exit  : 0/0
 26113 ;;		Unchanged: 0/0
 26114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26119 ;;Total ram usage:        0 bytes
 26120 ;; Hardware stack levels used:    1
 26121 ;; Hardware stack levels required when called:   16
 26122 ;; This function calls:
 26123 ;;		___fladd
 26124 ;; This function is called by:
 26125 ;;		_conv_raw_result
 26126 ;;		_lp_filter
 26127 ;;		_calc_model_data
 26128 ;;		_calc_ror_data
 26129 ;;		_esr_check
 26130 ;;		_efgtoa
 26131 ;; This function uses a reentrant model
 26132 ;;
 26133                           
 26134                           	psect	text104
 26135  01AC3E                     __ptext104:
 26136                           	opt callstack 0
 26137  01AC3E                     ___flsub:
 26138                           	opt callstack 0
 26139                           
 26140                           ;stkvar	_a @ sp[(0)+-8]
 26141                           
 26142                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26143                           ;incstack = 0
 26144 ;; hardware stack exceeded
 26145  01AC3E  0EFB               	movlw	-5
 26146  01AC40  7EE3               	btg	plusw1,7,c
 26147                           
 26148                           ;stkvar	_a @ sp[(0)+-8]
 26149  01AC42  0EF8               	movlw	-8
 26150  01AC44  006F FF8F FFE6     	movff	plusw1,postinc1
 26151  01AC4A  006F FF8F FFE6     	movff	plusw1,postinc1
 26152  01AC50  006F FF8F FFE6     	movff	plusw1,postinc1
 26153  01AC56  006F FF8F FFE6     	movff	plusw1,postinc1
 26154                           
 26155                           ;stkvar	_b @ sp[(-4)+-4]
 26156  01AC5C  0EF8               	movlw	-8
 26157  01AC5E  006F FF8F FFE6     	movff	plusw1,postinc1
 26158  01AC64  006F FF8F FFE6     	movff	plusw1,postinc1
 26159  01AC6A  006F FF8F FFE6     	movff	plusw1,postinc1
 26160  01AC70  006F FF8F FFE6     	movff	plusw1,postinc1
 26161  01AC76  EC56  F09D         	call	___fladd	;wreg free
 26162                           
 26163                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26164  01AC7A  0EF8               	movlw	248
 26165  01AC7C  26E1               	addwf	fsr1l,f,c
 26166  01AC7E  0EFF               	movlw	255
 26167  01AC80  22E2               	addwfc	fsr1h,f,c
 26168  01AC82  0012               	return		;funcret
 26169  01AC84                     __end_of___flsub:
 26170                           	opt callstack 0
 26171                           
 26172 ;; *************** function ___fladd *****************
 26173 ;; Defined at:
 26174 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26175 ;; Parameters:    Size  Location     Type
 26176 ;;  b               4  [STACK] float 
 26177 ;;  a               4  [STACK] float 
 26178 ;; Auto vars:     Size  Location     Type
 26179 ;;  grs             1  [STACK] unsigned char 
 26180 ;;  bexp            1  [STACK] unsigned char 
 26181 ;;  aexp            1  [STACK] unsigned char 
 26182 ;;  signs           1  [STACK] unsigned char 
 26183 ;; Return value:  Size  Location     Type
 26184 ;;                  4  [STACK] unsigned char 
 26185 ;; Registers used:
 26186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26187 ;; Tracked objects:
 26188 ;;		On entry : 0/0
 26189 ;;		On exit  : 0/0
 26190 ;;		Unchanged: 0/0
 26191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26196 ;;Total ram usage:        0 bytes
 26197 ;; Hardware stack levels used:    1
 26198 ;; Hardware stack levels required when called:   15
 26199 ;; This function calls:
 26200 ;;		Nothing
 26201 ;; This function is called by:
 26202 ;;		_main
 26203 ;;		_lp_filter
 26204 ;;		_calc_model_data
 26205 ;;		_calc_bsoc
 26206 ;;		_efgtoa
 26207 ;;		___flsub
 26208 ;; This function uses a reentrant model
 26209 ;;
 26210                           
 26211                           	psect	text105
 26212  013AAC                     __ptext105:
 26213                           	opt callstack 0
 26214  013AAC                     ___fladd:
 26215                           	opt callstack 0
 26216                           
 26217                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26218  013AAC  52E6               	movf	postinc1,f,c
 26219  013AAE  52E6               	movf	postinc1,f,c
 26220  013AB0  52E6               	movf	postinc1,f,c
 26221  013AB2  52E6               	movf	postinc1,f,c
 26222                           
 26223                           ;stkvar	_b @ sp[(-4)+-4]
 26224                           
 26225                           ;incstack = 0
 26226 ;; hardware stack exceeded
 26227  013AB4  0EFB               	movlw	251
 26228  013AB6  24E1               	addwf	fsr1l,w,c
 26229  013AB8  6ED9               	movwf	fsr2l,c
 26230  013ABA  0EFF               	movlw	255
 26231  013ABC  20E2               	addwfc	fsr1h,w,c
 26232  013ABE  6EDA               	movwf	fsr2h,c
 26233  013AC0  50DF               	movf	indf2,w,c
 26234  013AC2  6E31               	movwf	(btemp+11)^0,c
 26235  013AC4  0E80               	movlw	128
 26236  013AC6  1631               	andwf	(btemp+11)^0,f,c
 26237                           
 26238                           ;stkvar	_signs @ sp[(-4)+3]
 26239  013AC8  0EFF               	movlw	-1
 26240  013ACA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26241                           
 26242                           ;stkvar	_b @ sp[(-4)+-4]
 26243  013AD0  0EFB               	movlw	251
 26244  013AD2  24E1               	addwf	fsr1l,w,c
 26245  013AD4  6ED9               	movwf	fsr2l,c
 26246  013AD6  0EFF               	movlw	255
 26247  013AD8  20E2               	addwfc	fsr1h,w,c
 26248  013ADA  6EDA               	movwf	fsr2h,c
 26249  013ADC  50DF               	movf	indf2,w,c
 26250  013ADE  6E31               	movwf	(btemp+11)^0,c
 26251  013AE0  90D8               	bcf	status,0,c
 26252  013AE2  3431               	rlcf	(btemp+11)^0,w,c
 26253  013AE4  6E30               	movwf	(btemp+10)^0,c
 26254                           
 26255                           ;stkvar	_bexp @ sp[(-4)+1]
 26256  013AE6  0EFD               	movlw	-3
 26257  013AE8  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26258                           
 26259                           ;stkvar	_b @ sp[(-4)+-4]
 26260  013AEE  0EFA               	movlw	250
 26261  013AF0  24E1               	addwf	fsr1l,w,c
 26262  013AF2  6ED9               	movwf	fsr2l,c
 26263  013AF4  0EFF               	movlw	255
 26264  013AF6  20E2               	addwfc	fsr1h,w,c
 26265  013AF8  6EDA               	movwf	fsr2h,c
 26266  013AFA  AEDF               	btfss	indf2,7,c
 26267  013AFC  D002               	goto	l7593
 26268                           
 26269                           ;stkvar	_bexp @ sp[(-4)+1]
 26270  013AFE  0EFD               	movlw	-3
 26271  013B00  80E3               	bsf	plusw1,0,c
 26272  013B02                     l7593:
 26273                           
 26274                           ;stkvar	_bexp @ sp[(-4)+1]
 26275  013B02  0EFD               	movlw	-3
 26276  013B04  50E3               	movf	plusw1,w,c
 26277  013B06  B4D8               	btfsc	status,2,c
 26278  013B08  D027               	goto	l7603
 26279                           
 26280                           ;stkvar	_bexp @ sp[(-4)+1]
 26281  013B0A  0EFD               	movlw	-3
 26282  013B0C  28E3               	incf	plusw1,w,c
 26283  013B0E  A4D8               	btfss	status,2,c
 26284  013B10  D018               	goto	l7599
 26285  013B12  0E00               	movlw	0
 26286  013B14  6E2E               	movwf	(btemp+8)^0,c
 26287  013B16  0E00               	movlw	0
 26288  013B18  6E2F               	movwf	(btemp+9)^0,c
 26289  013B1A  0E00               	movlw	0
 26290  013B1C  6E30               	movwf	(btemp+10)^0,c
 26291  013B1E  0E00               	movlw	0
 26292  013B20  6E31               	movwf	(btemp+11)^0,c
 26293                           
 26294                           ;stkvar	_b @ sp[(-4)+-4]
 26295  013B22  0EF8               	movlw	-8
 26296  013B24  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 26297  013B2A  0EF9               	movlw	-7
 26298  013B2C  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 26299  013B32  0EFA               	movlw	-6
 26300  013B34  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26301  013B3A  0EFB               	movlw	-5
 26302  013B3C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26303  013B42                     l7599:
 26304                           
 26305                           ;stkvar	_b @ sp[(-4)+-4]
 26306  013B42  0EFA               	movlw	-6
 26307  013B44  8EE3               	bsf	plusw1,7,c
 26308                           
 26309                           ;stkvar	_b @ sp[(-4)+-4]
 26310  013B46  0EFB               	movlw	251
 26311  013B48  24E1               	addwf	fsr1l,w,c
 26312  013B4A  6ED9               	movwf	fsr2l,c
 26313  013B4C  0EFF               	movlw	255
 26314  013B4E  20E2               	addwfc	fsr1h,w,c
 26315  013B50  6EDA               	movwf	fsr2h,c
 26316  013B52  0E00               	movlw	0
 26317  013B54  6EDF               	movwf	indf2,c
 26318  013B56  D018               	goto	l7605
 26319  013B58                     l7603:
 26320  013B58  0E00               	movlw	0
 26321  013B5A  6E2E               	movwf	(btemp+8)^0,c
 26322  013B5C  0E00               	movlw	0
 26323  013B5E  6E2F               	movwf	(btemp+9)^0,c
 26324  013B60  0E00               	movlw	0
 26325  013B62  6E30               	movwf	(btemp+10)^0,c
 26326  013B64  0E00               	movlw	0
 26327  013B66  6E31               	movwf	(btemp+11)^0,c
 26328                           
 26329                           ;stkvar	_b @ sp[(-4)+-4]
 26330  013B68  0EF8               	movlw	-8
 26331  013B6A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 26332  013B70  0EF9               	movlw	-7
 26333  013B72  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 26334  013B78  0EFA               	movlw	-6
 26335  013B7A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26336  013B80  0EFB               	movlw	-5
 26337  013B82  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26338  013B88                     l7605:
 26339                           
 26340                           ;stkvar	_a @ sp[(-4)+-8]
 26341  013B88  0EF7               	movlw	247
 26342  013B8A  24E1               	addwf	fsr1l,w,c
 26343  013B8C  6ED9               	movwf	fsr2l,c
 26344  013B8E  0EFF               	movlw	255
 26345  013B90  20E2               	addwfc	fsr1h,w,c
 26346  013B92  6EDA               	movwf	fsr2h,c
 26347  013B94  50DF               	movf	indf2,w,c
 26348  013B96  6E31               	movwf	(btemp+11)^0,c
 26349  013B98  0E80               	movlw	128
 26350  013B9A  1631               	andwf	(btemp+11)^0,f,c
 26351                           
 26352                           ;stkvar	_aexp @ sp[(-4)+2]
 26353  013B9C  0EFE               	movlw	-2
 26354  013B9E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26355                           
 26356                           ;stkvar	_signs @ sp[(-4)+3]
 26357                           ;stkvar	_aexp @ sp[(-4)+2]
 26358  013BA4  50E1               	movf	fsr1l,w,c
 26359  013BA6  0FFE               	addlw	-2
 26360  013BA8  6ED9               	movwf	fsr2l,c
 26361  013BAA  50E2               	movf	fsr1h,w,c
 26362  013BAC  6EDA               	movwf	fsr2h,c
 26363  013BAE  0EFF               	movlw	255
 26364  013BB0  22DA               	addwfc	fsr2h,f,c
 26365  013BB2  0EFF               	movlw	-1
 26366  013BB4  50E3               	movf	plusw1,w,c
 26367  013BB6  18DE               	xorwf	postinc2,w,c
 26368  013BB8  B4D8               	btfsc	status,2,c
 26369  013BBA  D002               	goto	l7611
 26370                           
 26371                           ;stkvar	_signs @ sp[(-4)+3]
 26372  013BBC  0EFF               	movlw	-1
 26373  013BBE  8CE3               	bsf	plusw1,6,c
 26374  013BC0                     l7611:
 26375                           
 26376                           ;stkvar	_a @ sp[(-4)+-8]
 26377  013BC0  0EF7               	movlw	247
 26378  013BC2  24E1               	addwf	fsr1l,w,c
 26379  013BC4  6ED9               	movwf	fsr2l,c
 26380  013BC6  0EFF               	movlw	255
 26381  013BC8  20E2               	addwfc	fsr1h,w,c
 26382  013BCA  6EDA               	movwf	fsr2h,c
 26383  013BCC  50DF               	movf	indf2,w,c
 26384  013BCE  6E31               	movwf	(btemp+11)^0,c
 26385  013BD0  90D8               	bcf	status,0,c
 26386  013BD2  3431               	rlcf	(btemp+11)^0,w,c
 26387  013BD4  6E30               	movwf	(btemp+10)^0,c
 26388                           
 26389                           ;stkvar	_aexp @ sp[(-4)+2]
 26390  013BD6  0EFE               	movlw	-2
 26391  013BD8  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26392                           
 26393                           ;stkvar	_a @ sp[(-4)+-8]
 26394  013BDE  0EF6               	movlw	246
 26395  013BE0  24E1               	addwf	fsr1l,w,c
 26396  013BE2  6ED9               	movwf	fsr2l,c
 26397  013BE4  0EFF               	movlw	255
 26398  013BE6  20E2               	addwfc	fsr1h,w,c
 26399  013BE8  6EDA               	movwf	fsr2h,c
 26400  013BEA  AEDF               	btfss	indf2,7,c
 26401  013BEC  D002               	goto	l7617
 26402                           
 26403                           ;stkvar	_aexp @ sp[(-4)+2]
 26404  013BEE  0EFE               	movlw	-2
 26405  013BF0  80E3               	bsf	plusw1,0,c
 26406  013BF2                     l7617:
 26407                           
 26408                           ;stkvar	_aexp @ sp[(-4)+2]
 26409  013BF2  0EFE               	movlw	-2
 26410  013BF4  50E3               	movf	plusw1,w,c
 26411  013BF6  B4D8               	btfsc	status,2,c
 26412  013BF8  D027               	goto	l7627
 26413                           
 26414                           ;stkvar	_aexp @ sp[(-4)+2]
 26415  013BFA  0EFE               	movlw	-2
 26416  013BFC  28E3               	incf	plusw1,w,c
 26417  013BFE  A4D8               	btfss	status,2,c
 26418  013C00  D018               	goto	l7623
 26419  013C02  0E00               	movlw	0
 26420  013C04  6E2E               	movwf	(btemp+8)^0,c
 26421  013C06  0E00               	movlw	0
 26422  013C08  6E2F               	movwf	(btemp+9)^0,c
 26423  013C0A  0E00               	movlw	0
 26424  013C0C  6E30               	movwf	(btemp+10)^0,c
 26425  013C0E  0E00               	movlw	0
 26426  013C10  6E31               	movwf	(btemp+11)^0,c
 26427                           
 26428                           ;stkvar	_a @ sp[(-4)+-8]
 26429  013C12  0EF4               	movlw	-12
 26430  013C14  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 26431  013C1A  0EF5               	movlw	-11
 26432  013C1C  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 26433  013C22  0EF6               	movlw	-10
 26434  013C24  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26435  013C2A  0EF7               	movlw	-9
 26436  013C2C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26437  013C32                     l7623:
 26438                           
 26439                           ;stkvar	_a @ sp[(-4)+-8]
 26440  013C32  0EF6               	movlw	-10
 26441  013C34  8EE3               	bsf	plusw1,7,c
 26442                           
 26443                           ;stkvar	_a @ sp[(-4)+-8]
 26444  013C36  0EF7               	movlw	247
 26445  013C38  24E1               	addwf	fsr1l,w,c
 26446  013C3A  6ED9               	movwf	fsr2l,c
 26447  013C3C  0EFF               	movlw	255
 26448  013C3E  20E2               	addwfc	fsr1h,w,c
 26449  013C40  6EDA               	movwf	fsr2h,c
 26450  013C42  0E00               	movlw	0
 26451  013C44  6EDF               	movwf	indf2,c
 26452  013C46  D018               	goto	l7629
 26453  013C48                     l7627:
 26454  013C48  0E00               	movlw	0
 26455  013C4A  6E2E               	movwf	(btemp+8)^0,c
 26456  013C4C  0E00               	movlw	0
 26457  013C4E  6E2F               	movwf	(btemp+9)^0,c
 26458  013C50  0E00               	movlw	0
 26459  013C52  6E30               	movwf	(btemp+10)^0,c
 26460  013C54  0E00               	movlw	0
 26461  013C56  6E31               	movwf	(btemp+11)^0,c
 26462                           
 26463                           ;stkvar	_a @ sp[(-4)+-8]
 26464  013C58  0EF4               	movlw	-12
 26465  013C5A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 26466  013C60  0EF5               	movlw	-11
 26467  013C62  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 26468  013C68  0EF6               	movlw	-10
 26469  013C6A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26470  013C70  0EF7               	movlw	-9
 26471  013C72  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26472  013C78                     l7629:
 26473                           
 26474                           ;stkvar	_bexp @ sp[(-4)+1]
 26475                           ;stkvar	_aexp @ sp[(-4)+2]
 26476  013C78  50E1               	movf	fsr1l,w,c
 26477  013C7A  0FFE               	addlw	-2
 26478  013C7C  6ED9               	movwf	fsr2l,c
 26479  013C7E  50E2               	movf	fsr1h,w,c
 26480  013C80  6EDA               	movwf	fsr2h,c
 26481  013C82  0EFF               	movlw	255
 26482  013C84  22DA               	addwfc	fsr2h,f,c
 26483  013C86  0EFD               	movlw	-3
 26484  013C88  50E3               	movf	plusw1,w,c
 26485  013C8A  5CDE               	subwf	postinc2,w,c
 26486  013C8C  B0D8               	btfsc	status,0,c
 26487  013C8E  D0A4               	goto	l7665
 26488                           
 26489                           ;stkvar	_signs @ sp[(-4)+3]
 26490  013C90  0EFF               	movlw	-1
 26491  013C92  ACE3               	btfss	plusw1,6,c
 26492  013C94  D002               	goto	l7635
 26493                           
 26494                           ;stkvar	_signs @ sp[(-4)+3]
 26495  013C96  0EFF               	movlw	-1
 26496  013C98  7EE3               	btg	plusw1,7,c
 26497  013C9A                     l7635:
 26498                           
 26499                           ;stkvar	_bexp @ sp[(-4)+1]
 26500                           ;stkvar	_grs @ sp[(-4)+0]
 26501  013C9A  0EFD               	movlw	-3
 26502  013C9C  006F FF8C  F026    	movff	plusw1,btemp
 26503  013CA2  0EFC               	movlw	-4
 26504  013CA4  0060  F09B  FFE3   	movff	btemp,plusw1
 26505                           
 26506                           ;stkvar	_aexp @ sp[(-4)+2]
 26507                           ;stkvar	_bexp @ sp[(-4)+1]
 26508  013CAA  0EFE               	movlw	-2
 26509  013CAC  006F FF8C  F026    	movff	plusw1,btemp
 26510  013CB2  0EFD               	movlw	-3
 26511  013CB4  0060  F09B  FFE3   	movff	btemp,plusw1
 26512                           
 26513                           ;stkvar	_grs @ sp[(-4)+0]
 26514                           ;stkvar	_aexp @ sp[(-4)+2]
 26515  013CBA  0EFC               	movlw	-4
 26516  013CBC  006F FF8C  F026    	movff	plusw1,btemp
 26517  013CC2  0EFE               	movlw	-2
 26518  013CC4  0060  F09B  FFE3   	movff	btemp,plusw1
 26519                           
 26520                           ;stkvar	_b @ sp[(-4)+-4]
 26521                           ;stkvar	_grs @ sp[(-4)+0]
 26522  013CCA  0EF8               	movlw	-8
 26523  013CCC  006F FF8C  F026    	movff	plusw1,btemp
 26524  013CD2  0EFC               	movlw	-4
 26525  013CD4  0060  F09B  FFE3   	movff	btemp,plusw1
 26526                           
 26527                           ;stkvar	_a @ sp[(-4)+-8]
 26528                           ;stkvar	_b @ sp[(-4)+-4]
 26529  013CDA  0EF4               	movlw	-12
 26530  013CDC  006F FF8C  F026    	movff	plusw1,btemp
 26531  013CE2  0EF8               	movlw	-8
 26532  013CE4  0060  F09B  FFE3   	movff	btemp,plusw1
 26533                           
 26534                           ;stkvar	_grs @ sp[(-4)+0]
 26535                           ;stkvar	_a @ sp[(-4)+-8]
 26536  013CEA  0EFC               	movlw	-4
 26537  013CEC  006F FF8C  F026    	movff	plusw1,btemp
 26538  013CF2  0EF4               	movlw	-12
 26539  013CF4  0060  F09B  FFE3   	movff	btemp,plusw1
 26540                           
 26541                           ;stkvar	_b @ sp[(-4)+-4]
 26542  013CFA  0EF9               	movlw	249
 26543  013CFC  24E1               	addwf	fsr1l,w,c
 26544  013CFE  6ED9               	movwf	fsr2l,c
 26545  013D00  0EFF               	movlw	255
 26546  013D02  20E2               	addwfc	fsr1h,w,c
 26547  013D04  6EDA               	movwf	fsr2h,c
 26548  013D06  50DF               	movf	indf2,w,c
 26549  013D08  6E31               	movwf	(btemp+11)^0,c
 26550                           
 26551                           ;stkvar	_grs @ sp[(-4)+0]
 26552  013D0A  0EFC               	movlw	-4
 26553  013D0C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26554                           
 26555                           ;stkvar	_a @ sp[(-4)+-8]
 26556  013D12  0EF5               	movlw	245
 26557  013D14  24E1               	addwf	fsr1l,w,c
 26558  013D16  6ED9               	movwf	fsr2l,c
 26559  013D18  0EFF               	movlw	255
 26560  013D1A  20E2               	addwfc	fsr1h,w,c
 26561  013D1C  6EDA               	movwf	fsr2h,c
 26562                           
 26563                           ;stkvar	_b @ sp[(-4)+-4]
 26564  013D1E  0EF9               	movlw	249
 26565  013D20  24E1               	addwf	fsr1l,w,c
 26566  013D22  6EE9               	movwf	fsr0l,c
 26567  013D24  0EFF               	movlw	255
 26568  013D26  20E2               	addwfc	fsr1h,w,c
 26569  013D28  6EEA               	movwf	fsr0h,c
 26570  013D2A  006F FF7F FFEF     	movff	indf2,indf0
 26571                           
 26572                           ;stkvar	_grs @ sp[(-4)+0]
 26573                           ;stkvar	_a @ sp[(-4)+-8]
 26574  013D30  0EF5               	movlw	245
 26575  013D32  24E1               	addwf	fsr1l,w,c
 26576  013D34  6ED9               	movwf	fsr2l,c
 26577  013D36  0EFF               	movlw	255
 26578  013D38  20E2               	addwfc	fsr1h,w,c
 26579  013D3A  6EDA               	movwf	fsr2h,c
 26580  013D3C  0EFC               	movlw	-4
 26581  013D3E  006F FF8F FFDF     	movff	plusw1,indf2
 26582                           
 26583                           ;stkvar	_b @ sp[(-4)+-4]
 26584  013D44  0EFA               	movlw	250
 26585  013D46  24E1               	addwf	fsr1l,w,c
 26586  013D48  6ED9               	movwf	fsr2l,c
 26587  013D4A  0EFF               	movlw	255
 26588  013D4C  20E2               	addwfc	fsr1h,w,c
 26589  013D4E  6EDA               	movwf	fsr2h,c
 26590  013D50  50DF               	movf	indf2,w,c
 26591  013D52  6E31               	movwf	(btemp+11)^0,c
 26592                           
 26593                           ;stkvar	_grs @ sp[(-4)+0]
 26594  013D54  0EFC               	movlw	-4
 26595  013D56  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26596                           
 26597                           ;stkvar	_a @ sp[(-4)+-8]
 26598  013D5C  0EF6               	movlw	246
 26599  013D5E  24E1               	addwf	fsr1l,w,c
 26600  013D60  6ED9               	movwf	fsr2l,c
 26601  013D62  0EFF               	movlw	255
 26602  013D64  20E2               	addwfc	fsr1h,w,c
 26603  013D66  6EDA               	movwf	fsr2h,c
 26604                           
 26605                           ;stkvar	_b @ sp[(-4)+-4]
 26606  013D68  0EFA               	movlw	250
 26607  013D6A  24E1               	addwf	fsr1l,w,c
 26608  013D6C  6EE9               	movwf	fsr0l,c
 26609  013D6E  0EFF               	movlw	255
 26610  013D70  20E2               	addwfc	fsr1h,w,c
 26611  013D72  6EEA               	movwf	fsr0h,c
 26612  013D74  006F FF7F FFEF     	movff	indf2,indf0
 26613                           
 26614                           ;stkvar	_grs @ sp[(-4)+0]
 26615                           ;stkvar	_a @ sp[(-4)+-8]
 26616  013D7A  0EF6               	movlw	246
 26617  013D7C  24E1               	addwf	fsr1l,w,c
 26618  013D7E  6ED9               	movwf	fsr2l,c
 26619  013D80  0EFF               	movlw	255
 26620  013D82  20E2               	addwfc	fsr1h,w,c
 26621  013D84  6EDA               	movwf	fsr2h,c
 26622  013D86  0EFC               	movlw	-4
 26623  013D88  006F FF8F FFDF     	movff	plusw1,indf2
 26624                           
 26625                           ;stkvar	_b @ sp[(-4)+-4]
 26626  013D8E  0EFB               	movlw	251
 26627  013D90  24E1               	addwf	fsr1l,w,c
 26628  013D92  6ED9               	movwf	fsr2l,c
 26629  013D94  0EFF               	movlw	255
 26630  013D96  20E2               	addwfc	fsr1h,w,c
 26631  013D98  6EDA               	movwf	fsr2h,c
 26632  013D9A  50DF               	movf	indf2,w,c
 26633  013D9C  6E31               	movwf	(btemp+11)^0,c
 26634                           
 26635                           ;stkvar	_grs @ sp[(-4)+0]
 26636  013D9E  0EFC               	movlw	-4
 26637  013DA0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26638                           
 26639                           ;stkvar	_a @ sp[(-4)+-8]
 26640  013DA6  0EF7               	movlw	247
 26641  013DA8  24E1               	addwf	fsr1l,w,c
 26642  013DAA  6ED9               	movwf	fsr2l,c
 26643  013DAC  0EFF               	movlw	255
 26644  013DAE  20E2               	addwfc	fsr1h,w,c
 26645  013DB0  6EDA               	movwf	fsr2h,c
 26646                           
 26647                           ;stkvar	_b @ sp[(-4)+-4]
 26648  013DB2  0EFB               	movlw	251
 26649  013DB4  24E1               	addwf	fsr1l,w,c
 26650  013DB6  6EE9               	movwf	fsr0l,c
 26651  013DB8  0EFF               	movlw	255
 26652  013DBA  20E2               	addwfc	fsr1h,w,c
 26653  013DBC  6EEA               	movwf	fsr0h,c
 26654  013DBE  006F FF7F FFEF     	movff	indf2,indf0
 26655                           
 26656                           ;stkvar	_grs @ sp[(-4)+0]
 26657                           ;stkvar	_a @ sp[(-4)+-8]
 26658  013DC4  0EF7               	movlw	247
 26659  013DC6  24E1               	addwf	fsr1l,w,c
 26660  013DC8  6ED9               	movwf	fsr2l,c
 26661  013DCA  0EFF               	movlw	255
 26662  013DCC  20E2               	addwfc	fsr1h,w,c
 26663  013DCE  6EDA               	movwf	fsr2h,c
 26664  013DD0  0EFC               	movlw	-4
 26665  013DD2  006F FF8F FFDF     	movff	plusw1,indf2
 26666  013DD8                     l7665:
 26667                           
 26668                           ;stkvar	_grs @ sp[(-4)+0]
 26669  013DD8  0EFC               	movlw	-4
 26670  013DDA  6AE3               	clrf	plusw1,c
 26671                           
 26672                           ;stkvar	_aexp @ sp[(-4)+2]
 26673  013DDC  0EFE               	movlw	-2
 26674  013DDE  50E3               	movf	plusw1,w,c
 26675  013DE0  6E30               	movwf	(btemp+10)^0,c
 26676  013DE2  6A31               	clrf	(btemp+11)^0,c
 26677                           
 26678                           ;stkvar	_bexp @ sp[(-4)+1]
 26679  013DE4  0EFD               	movlw	-3
 26680  013DE6  50E3               	movf	plusw1,w,c
 26681  013DE8  5E30               	subwf	(btemp+10)^0,f,c
 26682  013DEA  0E00               	movlw	0
 26683  013DEC  5A31               	subwfb	(btemp+11)^0,f,c
 26684  013DEE  BE31               	btfsc	(btemp+11)^0,7,c
 26685  013DF0  D062               	goto	l7689
 26686  013DF2  5031               	movf	(btemp+11)^0,w,c
 26687  013DF4  E104               	bnz	u5430
 26688  013DF6  0E1A               	movlw	26
 26689  013DF8  5C30               	subwf	(btemp+10)^0,w,c
 26690  013DFA  A0D8               	btfss	status,0,c
 26691  013DFC  D05C               	goto	l7689
 26692  013DFE                     u5430:
 26693                           
 26694                           ;stkvar	_b @ sp[(-4)+-4]
 26695  013DFE  0EF8               	movlw	-8
 26696  013E00  50E3               	movf	plusw1,w,c
 26697  013E02  E10A               	bnz	u5441
 26698  013E04  0EF9               	movlw	-7
 26699  013E06  50E3               	movf	plusw1,w,c
 26700  013E08  E107               	bnz	u5441
 26701  013E0A  0EFA               	movlw	-6
 26702  013E0C  50E3               	movf	plusw1,w,c
 26703  013E0E  E104               	bnz	u5441
 26704  013E10  0EFB               	movlw	-5
 26705  013E12  50E3               	movf	plusw1,w,c
 26706  013E14  B4D8               	btfsc	status,2,c
 26707  013E16  D003               	goto	u5440
 26708  013E18                     u5441:
 26709  013E18  6A31               	clrf	(btemp+11)^0,c
 26710  013E1A  2A31               	incf	(btemp+11)^0,f,c
 26711  013E1C  D001               	goto	u5458
 26712  013E1E                     u5440:
 26713  013E1E  6A31               	clrf	(btemp+11)^0,c
 26714  013E20                     u5458:
 26715                           
 26716                           ;stkvar	_grs @ sp[(-4)+0]
 26717  013E20  0EFC               	movlw	-4
 26718  013E22  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26719                           
 26720                           ;stkvar	_b @ sp[(-4)+-4]
 26721  013E28  0EF8               	movlw	-8
 26722  013E2A  6AE3               	clrf	plusw1,c
 26723  013E2C  0EF9               	movlw	-7
 26724  013E2E  6AE3               	clrf	plusw1,c
 26725  013E30  0EFA               	movlw	-6
 26726  013E32  6AE3               	clrf	plusw1,c
 26727  013E34  0EFB               	movlw	-5
 26728  013E36  6AE3               	clrf	plusw1,c
 26729                           
 26730                           ;stkvar	_aexp @ sp[(-4)+2]
 26731                           ;stkvar	_bexp @ sp[(-4)+1]
 26732  013E38  0EFE               	movlw	-2
 26733  013E3A  006F FF8C  F026    	movff	plusw1,btemp
 26734  013E40  0EFD               	movlw	-3
 26735  013E42  0060  F09B  FFE3   	movff	btemp,plusw1
 26736  013E48  D042               	goto	u5490
 26737  013E4A                     l7675:
 26738                           
 26739                           ;stkvar	_grs @ sp[(-4)+0]
 26740  013E4A  0EFC               	movlw	-4
 26741  013E4C  A0E3               	btfss	plusw1,0,c
 26742  013E4E  D00D               	goto	l7679
 26743                           
 26744                           ;stkvar	_grs @ sp[(-4)+0]
 26745  013E50  0EFC               	movlw	-4
 26746  013E52  006F FF8C  F031    	movff	plusw1,btemp+11
 26747  013E58  90D8               	bcf	status,0,c
 26748  013E5A  3231               	rrcf	(btemp+11)^0,f,c
 26749  013E5C  0E01               	movlw	1
 26750  013E5E  1231               	iorwf	(btemp+11)^0,f,c
 26751                           
 26752                           ;stkvar	_grs @ sp[(-4)+0]
 26753  013E60  0EFC               	movlw	-4
 26754  013E62  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26755  013E68  D009               	goto	l7681
 26756  013E6A                     l7679:
 26757                           
 26758                           ;stkvar	_grs @ sp[(-4)+0]
 26759  013E6A  50E1               	movf	fsr1l,w,c
 26760  013E6C  0FFC               	addlw	-4
 26761  013E6E  6ED9               	movwf	fsr2l,c
 26762  013E70  50E2               	movf	fsr1h,w,c
 26763  013E72  6EDA               	movwf	fsr2h,c
 26764  013E74  0EFF               	movlw	255
 26765  013E76  22DA               	addwfc	fsr2h,f,c
 26766  013E78  90D8               	bcf	status,0,c
 26767  013E7A  32DF               	rrcf	indf2,f,c
 26768  013E7C                     l7681:
 26769                           
 26770                           ;stkvar	_b @ sp[(-4)+-4]
 26771  013E7C  0EF8               	movlw	-8
 26772  013E7E  A0E3               	btfss	plusw1,0,c
 26773  013E80  D002               	goto	l7685
 26774                           
 26775                           ;stkvar	_grs @ sp[(-4)+0]
 26776  013E82  0EFC               	movlw	-4
 26777  013E84  8EE3               	bsf	plusw1,7,c
 26778  013E86                     l7685:
 26779  013E86  0E01               	movlw	1
 26780  013E88  6E31               	movwf	(btemp+11)^0,c
 26781                           
 26782                           ;stkvar	_b @ sp[(-4)+-4]
 26783  013E8A  50E1               	movf	fsr1l,w,c
 26784  013E8C  0FF8               	addlw	-8
 26785  013E8E  6ED9               	movwf	fsr2l,c
 26786  013E90  50E2               	movf	fsr1h,w,c
 26787  013E92  6EDA               	movwf	fsr2h,c
 26788  013E94  0EFF               	movlw	255
 26789  013E96  22DA               	addwfc	fsr2h,f,c
 26790  013E98  2831               	incf	(btemp+11)^0,w,c
 26791  013E9A  52DE               	movf	postinc2,f,c
 26792  013E9C  D008               	goto	u5480
 26793  013E9E                     u5485:
 26794  013E9E  52DE               	movf	postinc2,f,c
 26795  013EA0  90D8               	bcf	status,0,c
 26796  013EA2  BEDC               	btfsc	preinc2,7,c
 26797  013EA4  80D8               	bsf	status,0,c
 26798  013EA6  32DD               	rrcf	postdec2,f,c
 26799  013EA8  32DD               	rrcf	postdec2,f,c
 26800  013EAA  32DD               	rrcf	postdec2,f,c
 26801  013EAC  32DE               	rrcf	postinc2,f,c
 26802  013EAE                     u5480:
 26803  013EAE  2EE8               	decfsz	wreg,f,c
 26804  013EB0  D7F6               	goto	u5485
 26805                           
 26806                           ;stkvar	_bexp @ sp[(-4)+1]
 26807  013EB2  0EFD               	movlw	-3
 26808  013EB4  2AE3               	incf	plusw1,f,c
 26809  013EB6                     l7689:
 26810                           
 26811                           ;stkvar	_aexp @ sp[(-4)+2]
 26812                           ;stkvar	_bexp @ sp[(-4)+1]
 26813  013EB6  50E1               	movf	fsr1l,w,c
 26814  013EB8  0FFD               	addlw	-3
 26815  013EBA  6ED9               	movwf	fsr2l,c
 26816  013EBC  50E2               	movf	fsr1h,w,c
 26817  013EBE  6EDA               	movwf	fsr2h,c
 26818  013EC0  0EFF               	movlw	255
 26819  013EC2  22DA               	addwfc	fsr2h,f,c
 26820  013EC4  0EFE               	movlw	-2
 26821  013EC6  50E3               	movf	plusw1,w,c
 26822  013EC8  5CDE               	subwf	postinc2,w,c
 26823  013ECA  A0D8               	btfss	status,0,c
 26824  013ECC  D7BE               	goto	l7675
 26825  013ECE                     u5490:
 26826                           
 26827                           ;stkvar	_signs @ sp[(-4)+3]
 26828  013ECE  0EFF               	movlw	-1
 26829  013ED0  BCE3               	btfsc	plusw1,6,c
 26830  013ED2  D066               	goto	l7717
 26831                           
 26832                           ;stkvar	_bexp @ sp[(-4)+1]
 26833  013ED4  0EFD               	movlw	-3
 26834  013ED6  50E3               	movf	plusw1,w,c
 26835  013ED8  B4D8               	btfsc	status,2,c
 26836  013EDA  D0F2               	goto	u5590
 26837                           
 26838                           ;stkvar	_a @ sp[(-4)+-8]
 26839                           ;stkvar	_b @ sp[(-4)+-4]
 26840  013EDC  0EF8               	movlw	-8
 26841  013EDE  50E3               	movf	plusw1,w,c
 26842  013EE0  6E26               	movwf	btemp^0,c
 26843  013EE2  0EF4               	movlw	-12
 26844  013EE4  50E3               	movf	plusw1,w,c
 26845  013EE6  2626               	addwf	btemp^0,f,c
 26846  013EE8  0EF8               	movlw	-8
 26847  013EEA  0060  F09B  FFE3   	movff	btemp,plusw1
 26848  013EF0  0EF9               	movlw	-7
 26849  013EF2  50E3               	movf	plusw1,w,c
 26850  013EF4  6E26               	movwf	btemp^0,c
 26851  013EF6  0EF5               	movlw	-11
 26852  013EF8  50E3               	movf	plusw1,w,c
 26853  013EFA  2226               	addwfc	btemp^0,f,c
 26854  013EFC  0EF9               	movlw	-7
 26855  013EFE  0060  F09B  FFE3   	movff	btemp,plusw1
 26856  013F04  0EFA               	movlw	-6
 26857  013F06  50E3               	movf	plusw1,w,c
 26858  013F08  6E26               	movwf	btemp^0,c
 26859  013F0A  0EF6               	movlw	-10
 26860  013F0C  50E3               	movf	plusw1,w,c
 26861  013F0E  2226               	addwfc	btemp^0,f,c
 26862  013F10  0EFA               	movlw	-6
 26863  013F12  0060  F09B  FFE3   	movff	btemp,plusw1
 26864  013F18  0EFB               	movlw	-5
 26865  013F1A  50E3               	movf	plusw1,w,c
 26866  013F1C  6E26               	movwf	btemp^0,c
 26867  013F1E  0EF7               	movlw	-9
 26868  013F20  50E3               	movf	plusw1,w,c
 26869  013F22  2226               	addwfc	btemp^0,f,c
 26870  013F24  0EFB               	movlw	-5
 26871  013F26  0060  F09B  FFE3   	movff	btemp,plusw1
 26872                           
 26873                           ;stkvar	_b @ sp[(-4)+-4]
 26874  013F2C  0EFB               	movlw	-5
 26875  013F2E  A0E3               	btfss	plusw1,0,c
 26876  013F30  D101               	goto	u5630
 26877                           
 26878                           ;stkvar	_grs @ sp[(-4)+0]
 26879  013F32  0EFC               	movlw	-4
 26880  013F34  A0E3               	btfss	plusw1,0,c
 26881  013F36  D00D               	goto	l7707
 26882                           
 26883                           ;stkvar	_grs @ sp[(-4)+0]
 26884  013F38  0EFC               	movlw	-4
 26885  013F3A  006F FF8C  F031    	movff	plusw1,btemp+11
 26886  013F40  90D8               	bcf	status,0,c
 26887  013F42  3231               	rrcf	(btemp+11)^0,f,c
 26888  013F44  0E01               	movlw	1
 26889  013F46  1231               	iorwf	(btemp+11)^0,f,c
 26890                           
 26891                           ;stkvar	_grs @ sp[(-4)+0]
 26892  013F48  0EFC               	movlw	-4
 26893  013F4A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26894  013F50  D009               	goto	l7709
 26895  013F52                     l7707:
 26896                           
 26897                           ;stkvar	_grs @ sp[(-4)+0]
 26898  013F52  50E1               	movf	fsr1l,w,c
 26899  013F54  0FFC               	addlw	-4
 26900  013F56  6ED9               	movwf	fsr2l,c
 26901  013F58  50E2               	movf	fsr1h,w,c
 26902  013F5A  6EDA               	movwf	fsr2h,c
 26903  013F5C  0EFF               	movlw	255
 26904  013F5E  22DA               	addwfc	fsr2h,f,c
 26905  013F60  90D8               	bcf	status,0,c
 26906  013F62  32DF               	rrcf	indf2,f,c
 26907  013F64                     l7709:
 26908                           
 26909                           ;stkvar	_b @ sp[(-4)+-4]
 26910  013F64  0EF8               	movlw	-8
 26911  013F66  A0E3               	btfss	plusw1,0,c
 26912  013F68  D002               	goto	l7713
 26913                           
 26914                           ;stkvar	_grs @ sp[(-4)+0]
 26915  013F6A  0EFC               	movlw	-4
 26916  013F6C  8EE3               	bsf	plusw1,7,c
 26917  013F6E                     l7713:
 26918  013F6E  0E01               	movlw	1
 26919  013F70  6E31               	movwf	(btemp+11)^0,c
 26920                           
 26921                           ;stkvar	_b @ sp[(-4)+-4]
 26922  013F72  50E1               	movf	fsr1l,w,c
 26923  013F74  0FF8               	addlw	-8
 26924  013F76  6ED9               	movwf	fsr2l,c
 26925  013F78  50E2               	movf	fsr1h,w,c
 26926  013F7A  6EDA               	movwf	fsr2h,c
 26927  013F7C  0EFF               	movlw	255
 26928  013F7E  22DA               	addwfc	fsr2h,f,c
 26929  013F80  2831               	incf	(btemp+11)^0,w,c
 26930  013F82  52DE               	movf	postinc2,f,c
 26931  013F84  D008               	goto	u5550
 26932  013F86                     u5555:
 26933  013F86  52DE               	movf	postinc2,f,c
 26934  013F88  90D8               	bcf	status,0,c
 26935  013F8A  BEDC               	btfsc	preinc2,7,c
 26936  013F8C  80D8               	bsf	status,0,c
 26937  013F8E  32DD               	rrcf	postdec2,f,c
 26938  013F90  32DD               	rrcf	postdec2,f,c
 26939  013F92  32DD               	rrcf	postdec2,f,c
 26940  013F94  32DE               	rrcf	postinc2,f,c
 26941  013F96                     u5550:
 26942  013F96  2EE8               	decfsz	wreg,f,c
 26943  013F98  D7F6               	goto	u5555
 26944                           
 26945                           ;stkvar	_bexp @ sp[(-4)+1]
 26946  013F9A  0EFD               	movlw	-3
 26947  013F9C  2AE3               	incf	plusw1,f,c
 26948  013F9E  D0CA               	goto	u5630
 26949  013FA0                     l7717:
 26950                           
 26951                           ;stkvar	_a @ sp[(-4)+-8]
 26952                           ;stkvar	_b @ sp[(-4)+-4]
 26953  013FA0  50E1               	movf	fsr1l,w,c
 26954  013FA2  0FF8               	addlw	-8
 26955  013FA4  6ED9               	movwf	fsr2l,c
 26956  013FA6  50E2               	movf	fsr1h,w,c
 26957  013FA8  6EDA               	movwf	fsr2h,c
 26958  013FAA  0EFF               	movlw	255
 26959  013FAC  22DA               	addwfc	fsr2h,f,c
 26960  013FAE  0EF4               	movlw	-12
 26961  013FB0  50E3               	movf	plusw1,w,c
 26962  013FB2  5CDE               	subwf	postinc2,w,c
 26963  013FB4  0EF5               	movlw	-11
 26964  013FB6  50E3               	movf	plusw1,w,c
 26965  013FB8  58DE               	subwfb	postinc2,w,c
 26966  013FBA  0EF6               	movlw	-10
 26967  013FBC  50E3               	movf	plusw1,w,c
 26968  013FBE  58DE               	subwfb	postinc2,w,c
 26969  013FC0  50DE               	movf	postinc2,w,c
 26970  013FC2  0A80               	xorlw	128
 26971  013FC4  6E26               	movwf	btemp^0,c
 26972  013FC6  0EF7               	movlw	-9
 26973  013FC8  50E3               	movf	plusw1,w,c
 26974  013FCA  0A80               	xorlw	128
 26975  013FCC  5826               	subwfb	btemp^0,w,c
 26976  013FCE  B0D8               	btfsc	status,0,c
 26977  013FD0  D053               	goto	l7729
 26978                           
 26979                           ;stkvar	_b @ sp[(-4)+-4]
 26980                           ;stkvar	_a @ sp[(-4)+-8]
 26981  013FD2  0EF4               	movlw	-12
 26982  013FD4  006F FF8C  F02E    	movff	plusw1,btemp+8
 26983  013FDA  0EF5               	movlw	-11
 26984  013FDC  006F FF8C  F02F    	movff	plusw1,btemp+9
 26985  013FE2  0EF6               	movlw	-10
 26986  013FE4  006F FF8C  F030    	movff	plusw1,btemp+10
 26987  013FEA  0EF7               	movlw	-9
 26988  013FEC  006F FF8C  F031    	movff	plusw1,btemp+11
 26989  013FF2  0EF8               	movlw	-8
 26990  013FF4  50E3               	movf	plusw1,w,c
 26991  013FF6  5E2E               	subwf	(btemp+8)^0,f,c
 26992  013FF8  0EF9               	movlw	-7
 26993  013FFA  50E3               	movf	plusw1,w,c
 26994  013FFC  5A2F               	subwfb	(btemp+9)^0,f,c
 26995  013FFE  0EFA               	movlw	-6
 26996  014000  50E3               	movf	plusw1,w,c
 26997  014002  5A30               	subwfb	(btemp+10)^0,f,c
 26998  014004  0EFB               	movlw	-5
 26999  014006  50E3               	movf	plusw1,w,c
 27000  014008  5A31               	subwfb	(btemp+11)^0,f,c
 27001  01400A  0EFF               	movlw	255
 27002  01400C  242E               	addwf	(btemp+8)^0,w,c
 27003  01400E  6E2A               	movwf	(btemp+4)^0,c
 27004  014010  0EFF               	movlw	255
 27005  014012  202F               	addwfc	(btemp+9)^0,w,c
 27006  014014  6E2B               	movwf	(btemp+5)^0,c
 27007  014016  0EFF               	movlw	255
 27008  014018  2030               	addwfc	(btemp+10)^0,w,c
 27009  01401A  6E2C               	movwf	(btemp+6)^0,c
 27010  01401C  0EFF               	movlw	255
 27011  01401E  2031               	addwfc	(btemp+11)^0,w,c
 27012  014020  6E2D               	movwf	(btemp+7)^0,c
 27013                           
 27014                           ;stkvar	_b @ sp[(-4)+-4]
 27015  014022  0EF8               	movlw	-8
 27016  014024  0060  F0AB  FFE3   	movff	btemp+4,plusw1
 27017  01402A  0EF9               	movlw	-7
 27018  01402C  0060  F0AF  FFE3   	movff	btemp+5,plusw1
 27019  014032  0EFA               	movlw	-6
 27020  014034  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 27021  01403A  0EFB               	movlw	-5
 27022  01403C  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 27023                           
 27024                           ;stkvar	_signs @ sp[(-4)+3]
 27025  014042  0EFF               	movlw	-1
 27026  014044  7EE3               	btg	plusw1,7,c
 27027                           
 27028                           ;stkvar	_grs @ sp[(-4)+0]
 27029  014046  0EFC               	movlw	-4
 27030  014048  50E3               	movf	plusw1,w,c
 27031  01404A  0800               	sublw	0
 27032  01404C  6E31               	movwf	(btemp+11)^0,c
 27033                           
 27034                           ;stkvar	_grs @ sp[(-4)+0]
 27035  01404E  0EFC               	movlw	-4
 27036  014050  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27037                           
 27038                           ;stkvar	_grs @ sp[(-4)+0]
 27039  014056  0EFC               	movlw	-4
 27040  014058  50E3               	movf	plusw1,w,c
 27041  01405A  A4D8               	btfss	status,2,c
 27042  01405C  D020               	goto	l7731
 27043                           
 27044                           ;stkvar	_b @ sp[(-4)+-4]
 27045  01405E  50E1               	movf	fsr1l,w,c
 27046  014060  0FF8               	addlw	-8
 27047  014062  6ED9               	movwf	fsr2l,c
 27048  014064  50E2               	movf	fsr1h,w,c
 27049  014066  6EDA               	movwf	fsr2h,c
 27050  014068  0EFF               	movlw	255
 27051  01406A  22DA               	addwfc	fsr2h,f,c
 27052  01406C  2ADE               	incf	postinc2,f,c
 27053  01406E  0E00               	movlw	0
 27054  014070  22DE               	addwfc	postinc2,f,c
 27055  014072  22DE               	addwfc	postinc2,f,c
 27056  014074  22DE               	addwfc	postinc2,f,c
 27057  014076  D013               	goto	l7731
 27058  014078                     l7729:
 27059                           
 27060                           ;stkvar	_a @ sp[(-4)+-8]
 27061                           ;stkvar	_b @ sp[(-4)+-4]
 27062  014078  50E1               	movf	fsr1l,w,c
 27063  01407A  0FF8               	addlw	-8
 27064  01407C  6ED9               	movwf	fsr2l,c
 27065  01407E  50E2               	movf	fsr1h,w,c
 27066  014080  6EDA               	movwf	fsr2h,c
 27067  014082  0EFF               	movlw	255
 27068  014084  22DA               	addwfc	fsr2h,f,c
 27069  014086  0EF4               	movlw	-12
 27070  014088  50E3               	movf	plusw1,w,c
 27071  01408A  5EDE               	subwf	postinc2,f,c
 27072  01408C  0EF5               	movlw	-11
 27073  01408E  50E3               	movf	plusw1,w,c
 27074  014090  5ADE               	subwfb	postinc2,f,c
 27075  014092  0EF6               	movlw	-10
 27076  014094  50E3               	movf	plusw1,w,c
 27077  014096  5ADE               	subwfb	postinc2,f,c
 27078  014098  0EF7               	movlw	-9
 27079  01409A  50E3               	movf	plusw1,w,c
 27080  01409C  5ADE               	subwfb	postinc2,f,c
 27081  01409E                     l7731:
 27082                           
 27083                           ;stkvar	_b @ sp[(-4)+-4]
 27084  01409E  0EF8               	movlw	-8
 27085  0140A0  50E3               	movf	plusw1,w,c
 27086  0140A2  E145               	bnz	l7753
 27087  0140A4  0EF9               	movlw	-7
 27088  0140A6  50E3               	movf	plusw1,w,c
 27089  0140A8  E142               	bnz	l7753
 27090  0140AA  0EFA               	movlw	-6
 27091  0140AC  50E3               	movf	plusw1,w,c
 27092  0140AE  E13F               	bnz	l7753
 27093  0140B0  0EFB               	movlw	-5
 27094  0140B2  50E3               	movf	plusw1,w,c
 27095  0140B4  A4D8               	btfss	status,2,c
 27096  0140B6  D03B               	goto	l7753
 27097                           
 27098                           ;stkvar	_grs @ sp[(-4)+0]
 27099  0140B8  0EFC               	movlw	-4
 27100  0140BA  50E3               	movf	plusw1,w,c
 27101  0140BC  A4D8               	btfss	status,2,c
 27102  0140BE  D037               	goto	l7753
 27103  0140C0                     u5590:
 27104  0140C0  0E00               	movlw	0
 27105  0140C2  6E26               	movwf	btemp^0,c
 27106  0140C4  0E00               	movlw	0
 27107  0140C6  6E27               	movwf	(btemp+1)^0,c
 27108  0140C8  0E00               	movlw	0
 27109  0140CA  6E28               	movwf	(btemp+2)^0,c
 27110  0140CC  0E00               	movlw	0
 27111  0140CE  6E29               	movwf	(btemp+3)^0,c
 27112  0140D0  D0C6               	goto	l2925
 27113  0140D2                     l7739:
 27114                           
 27115                           ;stkvar	_b @ sp[(-4)+-4]
 27116  0140D2  90D8               	bcf	status,0,c
 27117  0140D4  0EF8               	movlw	-8
 27118  0140D6  36E3               	rlcf	plusw1,f,c
 27119  0140D8  0EF9               	movlw	-7
 27120  0140DA  36E3               	rlcf	plusw1,f,c
 27121  0140DC  0EFA               	movlw	-6
 27122  0140DE  36E3               	rlcf	plusw1,f,c
 27123  0140E0  0EFB               	movlw	-5
 27124  0140E2  36E3               	rlcf	plusw1,f,c
 27125                           
 27126                           ;stkvar	_grs @ sp[(-4)+0]
 27127  0140E4  0EFC               	movlw	-4
 27128  0140E6  AEE3               	btfss	plusw1,7,c
 27129  0140E8  D002               	goto	l2937
 27130                           
 27131                           ;stkvar	_b @ sp[(-4)+-4]
 27132  0140EA  0EF8               	movlw	-8
 27133  0140EC  80E3               	bsf	plusw1,0,c
 27134  0140EE                     l2937:
 27135                           
 27136                           ;stkvar	_grs @ sp[(-4)+0]
 27137  0140EE  0EFC               	movlw	-4
 27138  0140F0  A0E3               	btfss	plusw1,0,c
 27139  0140F2  D00E               	goto	l7747
 27140                           
 27141                           ;stkvar	_grs @ sp[(-4)+0]
 27142  0140F4  0EFC               	movlw	-4
 27143  0140F6  006F FF8C  F031    	movff	plusw1,btemp+11
 27144  0140FC  90D8               	bcf	status,0,c
 27145  0140FE  3431               	rlcf	(btemp+11)^0,w,c
 27146  014100  6E30               	movwf	(btemp+10)^0,c
 27147  014102  0E01               	movlw	1
 27148  014104  1230               	iorwf	(btemp+10)^0,f,c
 27149                           
 27150                           ;stkvar	_grs @ sp[(-4)+0]
 27151  014106  0EFC               	movlw	-4
 27152  014108  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27153  01410E  D009               	goto	l7749
 27154  014110                     l7747:
 27155                           
 27156                           ;stkvar	_grs @ sp[(-4)+0]
 27157  014110  50E1               	movf	fsr1l,w,c
 27158  014112  0FFC               	addlw	-4
 27159  014114  6ED9               	movwf	fsr2l,c
 27160  014116  50E2               	movf	fsr1h,w,c
 27161  014118  6EDA               	movwf	fsr2h,c
 27162  01411A  0EFF               	movlw	255
 27163  01411C  22DA               	addwfc	fsr2h,f,c
 27164  01411E  90D8               	bcf	status,0,c
 27165  014120  36DF               	rlcf	indf2,f,c
 27166  014122                     l7749:
 27167                           
 27168                           ;stkvar	_bexp @ sp[(-4)+1]
 27169  014122  0EFD               	movlw	-3
 27170  014124  50E3               	movf	plusw1,w,c
 27171  014126  B4D8               	btfsc	status,2,c
 27172  014128  D002               	goto	l7753
 27173                           
 27174                           ;stkvar	_bexp @ sp[(-4)+1]
 27175  01412A  0EFD               	movlw	-3
 27176  01412C  06E3               	decf	plusw1,f,c
 27177  01412E                     l7753:
 27178                           
 27179                           ;stkvar	_b @ sp[(-4)+-4]
 27180  01412E  0EFA               	movlw	-6
 27181  014130  AEE3               	btfss	plusw1,7,c
 27182  014132  D7CF               	goto	l7739
 27183  014134                     u5630:
 27184                           
 27185                           ;stkvar	_aexp @ sp[(-4)+2]
 27186  014134  0EFE               	movlw	-2
 27187  014136  6AE3               	clrf	plusw1,c
 27188                           
 27189                           ;stkvar	_grs @ sp[(-4)+0]
 27190  014138  0EFC               	movlw	-4
 27191  01413A  AEE3               	btfss	plusw1,7,c
 27192  01413C  D00F               	goto	l7767
 27193                           
 27194                           ;stkvar	_grs @ sp[(-4)+0]
 27195  01413E  0EFC               	movlw	-4
 27196  014140  006F FF8C  F031    	movff	plusw1,btemp+11
 27197  014146  0E7F               	movlw	127
 27198  014148  1631               	andwf	(btemp+11)^0,f,c
 27199  01414A  B4D8               	btfsc	status,2,c
 27200  01414C  D004               	goto	l7763
 27201  01414E                     u5650:
 27202                           
 27203                           ;stkvar	_aexp @ sp[(-4)+2]
 27204  01414E  0EFE               	movlw	-2
 27205  014150  6AE3               	clrf	plusw1,c
 27206  014152  2AE3               	incf	plusw1,f,c
 27207  014154  D003               	goto	l7767
 27208  014156                     l7763:
 27209                           
 27210                           ;stkvar	_b @ sp[(-4)+-4]
 27211  014156  0EF8               	movlw	-8
 27212  014158  B0E3               	btfsc	plusw1,0,c
 27213  01415A  D7F9               	goto	u5650
 27214  01415C                     l7767:
 27215                           
 27216                           ;stkvar	_aexp @ sp[(-4)+2]
 27217  01415C  0EFE               	movlw	-2
 27218  01415E  50E3               	movf	plusw1,w,c
 27219  014160  B4D8               	btfsc	status,2,c
 27220  014162  D02B               	goto	l7779
 27221                           
 27222                           ;stkvar	_b @ sp[(-4)+-4]
 27223  014164  50E1               	movf	fsr1l,w,c
 27224  014166  0FF8               	addlw	-8
 27225  014168  6ED9               	movwf	fsr2l,c
 27226  01416A  50E2               	movf	fsr1h,w,c
 27227  01416C  6EDA               	movwf	fsr2h,c
 27228  01416E  0EFF               	movlw	255
 27229  014170  22DA               	addwfc	fsr2h,f,c
 27230  014172  2ADE               	incf	postinc2,f,c
 27231  014174  0E00               	movlw	0
 27232  014176  22DE               	addwfc	postinc2,f,c
 27233  014178  22DE               	addwfc	postinc2,f,c
 27234  01417A  22DE               	addwfc	postinc2,f,c
 27235                           
 27236                           ;stkvar	_b @ sp[(-4)+-4]
 27237  01417C  0EFB               	movlw	-5
 27238  01417E  A0E3               	btfss	plusw1,0,c
 27239  014180  D01C               	goto	l7779
 27240  014182  0E01               	movlw	1
 27241  014184  6E31               	movwf	(btemp+11)^0,c
 27242                           
 27243                           ;stkvar	_b @ sp[(-4)+-4]
 27244  014186  50E1               	movf	fsr1l,w,c
 27245  014188  0FF8               	addlw	-8
 27246  01418A  6ED9               	movwf	fsr2l,c
 27247  01418C  50E2               	movf	fsr1h,w,c
 27248  01418E  6EDA               	movwf	fsr2h,c
 27249  014190  0EFF               	movlw	255
 27250  014192  22DA               	addwfc	fsr2h,f,c
 27251  014194  2831               	incf	(btemp+11)^0,w,c
 27252  014196  52DE               	movf	postinc2,f,c
 27253  014198  D008               	goto	u5690
 27254  01419A                     u5695:
 27255  01419A  52DE               	movf	postinc2,f,c
 27256  01419C  90D8               	bcf	status,0,c
 27257  01419E  BEDC               	btfsc	preinc2,7,c
 27258  0141A0  80D8               	bsf	status,0,c
 27259  0141A2  32DD               	rrcf	postdec2,f,c
 27260  0141A4  32DD               	rrcf	postdec2,f,c
 27261  0141A6  32DD               	rrcf	postdec2,f,c
 27262  0141A8  32DE               	rrcf	postinc2,f,c
 27263  0141AA                     u5690:
 27264  0141AA  2EE8               	decfsz	wreg,f,c
 27265  0141AC  D7F6               	goto	u5695
 27266                           
 27267                           ;stkvar	_bexp @ sp[(-4)+1]
 27268  0141AE  0EFD               	movlw	-3
 27269  0141B0  28E3               	incf	plusw1,w,c
 27270  0141B2  B4D8               	btfsc	status,2,c
 27271  0141B4  D002               	goto	l7779
 27272                           
 27273                           ;stkvar	_bexp @ sp[(-4)+1]
 27274  0141B6  0EFD               	movlw	-3
 27275  0141B8  2AE3               	incf	plusw1,f,c
 27276  0141BA                     l7779:
 27277                           
 27278                           ;stkvar	_bexp @ sp[(-4)+1]
 27279  0141BA  0EFD               	movlw	-3
 27280  0141BC  28E3               	incf	plusw1,w,c
 27281  0141BE  B4D8               	btfsc	status,2,c
 27282  0141C0  D004               	goto	u5720
 27283                           
 27284                           ;stkvar	_bexp @ sp[(-4)+1]
 27285  0141C2  0EFD               	movlw	-3
 27286  0141C4  50E3               	movf	plusw1,w,c
 27287  0141C6  A4D8               	btfss	status,2,c
 27288  0141C8  D00E               	goto	l7789
 27289  0141CA                     u5720:
 27290                           
 27291                           ;stkvar	_b @ sp[(-4)+-4]
 27292  0141CA  0EF8               	movlw	-8
 27293  0141CC  6AE3               	clrf	plusw1,c
 27294  0141CE  0EF9               	movlw	-7
 27295  0141D0  6AE3               	clrf	plusw1,c
 27296  0141D2  0EFA               	movlw	-6
 27297  0141D4  6AE3               	clrf	plusw1,c
 27298  0141D6  0EFB               	movlw	-5
 27299  0141D8  6AE3               	clrf	plusw1,c
 27300                           
 27301                           ;stkvar	_bexp @ sp[(-4)+1]
 27302  0141DA  0EFD               	movlw	-3
 27303  0141DC  50E3               	movf	plusw1,w,c
 27304  0141DE  A4D8               	btfss	status,2,c
 27305  0141E0  D002               	goto	l7789
 27306                           
 27307                           ;stkvar	_signs @ sp[(-4)+3]
 27308  0141E2  0EFF               	movlw	-1
 27309  0141E4  6AE3               	clrf	plusw1,c
 27310  0141E6                     l7789:
 27311                           
 27312                           ;stkvar	_bexp @ sp[(-4)+1]
 27313  0141E6  0EFD               	movlw	-3
 27314  0141E8  A0E3               	btfss	plusw1,0,c
 27315  0141EA  D009               	goto	l7793
 27316                           
 27317                           ;stkvar	_b @ sp[(-4)+-4]
 27318  0141EC  0EFA               	movlw	250
 27319  0141EE  24E1               	addwf	fsr1l,w,c
 27320  0141F0  6ED9               	movwf	fsr2l,c
 27321  0141F2  0EFF               	movlw	255
 27322  0141F4  20E2               	addwfc	fsr1h,w,c
 27323  0141F6  6EDA               	movwf	fsr2h,c
 27324  0141F8  0E00               	movlw	0
 27325  0141FA  8EDB               	bsf	plusw2,7,c
 27326  0141FC  D008               	goto	l7795
 27327  0141FE                     l7793:
 27328                           
 27329                           ;stkvar	_b @ sp[(-4)+-4]
 27330  0141FE  0EFA               	movlw	250
 27331  014200  24E1               	addwf	fsr1l,w,c
 27332  014202  6ED9               	movwf	fsr2l,c
 27333  014204  0EFF               	movlw	255
 27334  014206  20E2               	addwfc	fsr1h,w,c
 27335  014208  6EDA               	movwf	fsr2h,c
 27336  01420A  0E7F               	movlw	127
 27337  01420C  16DF               	andwf	indf2,f,c
 27338  01420E                     l7795:
 27339                           
 27340                           ;stkvar	_b @ sp[(-4)+-4]
 27341  01420E  0EFB               	movlw	251
 27342  014210  24E1               	addwf	fsr1l,w,c
 27343  014212  6ED9               	movwf	fsr2l,c
 27344  014214  0EFF               	movlw	255
 27345  014216  20E2               	addwfc	fsr1h,w,c
 27346  014218  6EDA               	movwf	fsr2h,c
 27347                           
 27348                           ;stkvar	_bexp @ sp[(-4)+1]
 27349  01421A  0EFD               	movlw	-3
 27350  01421C  006F FF8C  F031    	movff	plusw1,btemp+11
 27351  014222  90D8               	bcf	status,0,c
 27352  014224  3031               	rrcf	(btemp+11)^0,w,c
 27353  014226  6EDF               	movwf	indf2,c
 27354                           
 27355                           ;stkvar	_signs @ sp[(-4)+3]
 27356  014228  0EFF               	movlw	-1
 27357  01422A  AEE3               	btfss	plusw1,7,c
 27358  01422C  D008               	goto	l7801
 27359                           
 27360                           ;stkvar	_b @ sp[(-4)+-4]
 27361  01422E  0EFB               	movlw	251
 27362  014230  24E1               	addwf	fsr1l,w,c
 27363  014232  6ED9               	movwf	fsr2l,c
 27364  014234  0EFF               	movlw	255
 27365  014236  20E2               	addwfc	fsr1h,w,c
 27366  014238  6EDA               	movwf	fsr2h,c
 27367  01423A  0E00               	movlw	0
 27368  01423C  8EDB               	bsf	plusw2,7,c
 27369  01423E                     l7801:
 27370                           
 27371                           ;stkvar	_b @ sp[(-4)+-4]
 27372  01423E  0EF8               	movlw	-8
 27373  014240  006F FF8C  F026    	movff	plusw1,btemp
 27374  014246  0EF9               	movlw	-7
 27375  014248  006F FF8C  F027    	movff	plusw1,btemp+1
 27376  01424E  0EFA               	movlw	-6
 27377  014250  006F FF8C  F028    	movff	plusw1,btemp+2
 27378  014256  0EFB               	movlw	-5
 27379  014258  006F FF8C  F029    	movff	plusw1,btemp+3
 27380  01425E                     l2925:
 27381                           
 27382                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27383  01425E  0EF4               	movlw	244
 27384  014260  26E1               	addwf	fsr1l,f,c
 27385  014262  0EFF               	movlw	255
 27386  014264  22E2               	addwfc	fsr1h,f,c
 27387  014266  0012               	return		;funcret
 27388  014268                     __end_of___fladd:
 27389                           	opt callstack 0
 27390                           
 27391 ;; *************** function ___flmul *****************
 27392 ;; Defined at:
 27393 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 27394 ;; Parameters:    Size  Location     Type
 27395 ;;  b               4  [STACK] unsigned char 
 27396 ;;  a               4  [STACK] unsigned char 
 27397 ;; Auto vars:     Size  Location     Type
 27398 ;;  prod            4  [STACK] struct .
 27399 ;;  grs             4  [STACK] unsigned long 
 27400 ;;  temp            2  [STACK] struct .
 27401 ;;  bexp            1  [STACK] unsigned char 
 27402 ;;  aexp            1  [STACK] unsigned char 
 27403 ;;  sign            1  [STACK] unsigned char 
 27404 ;; Return value:  Size  Location     Type
 27405 ;;                  4  [STACK] unsigned char 
 27406 ;; Registers used:
 27407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27408 ;; Tracked objects:
 27409 ;;		On entry : 0/1
 27410 ;;		On exit  : 0/0
 27411 ;;		Unchanged: 0/0
 27412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27417 ;;Total ram usage:        0 bytes
 27418 ;; Hardware stack levels used:    1
 27419 ;; Hardware stack levels required when called:   15
 27420 ;; This function calls:
 27421 ;;		Nothing
 27422 ;; This function is called by:
 27423 ;;		_conv_raw_result
 27424 ;;		_lp_filter
 27425 ;;		_calc_model_data
 27426 ;;		_calc_bsoc
 27427 ;;		_init_bsoc
 27428 ;;		_efgtoa
 27429 ;; This function uses a reentrant model
 27430 ;;
 27431                           
 27432                           	psect	text106
 27433  013282                     __ptext106:
 27434                           	opt callstack 0
 27435  013282                     ___flmul:
 27436                           	opt callstack 0
 27437                           
 27438                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 27439  013282  0E0D               	movlw	13
 27440  013284  26E1               	addwf	fsr1l,f,c
 27441  013286  0E00               	movlw	0
 27442  013288  22E2               	addwfc	fsr1h,f,c
 27443                           
 27444                           ;stkvar	_b @ sp[(-13)+-4]
 27445                           
 27446                           ;incstack = 0
 27447 ;; hardware stack exceeded
 27448  01328A  0EF2               	movlw	242
 27449  01328C  24E1               	addwf	fsr1l,w,c
 27450  01328E  6ED9               	movwf	fsr2l,c
 27451  013290  0EFF               	movlw	255
 27452  013292  20E2               	addwfc	fsr1h,w,c
 27453  013294  6EDA               	movwf	fsr2h,c
 27454  013296  50DF               	movf	indf2,w,c
 27455  013298  6E31               	movwf	(btemp+11)^0,c
 27456  01329A  0E80               	movlw	128
 27457  01329C  1631               	andwf	(btemp+11)^0,f,c
 27458                           
 27459                           ;stkvar	_sign @ sp[(-13)+12]
 27460  01329E  0EFF               	movlw	-1
 27461  0132A0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27462                           
 27463                           ;stkvar	_b @ sp[(-13)+-4]
 27464  0132A6  0EF2               	movlw	242
 27465  0132A8  24E1               	addwf	fsr1l,w,c
 27466  0132AA  6ED9               	movwf	fsr2l,c
 27467  0132AC  0EFF               	movlw	255
 27468  0132AE  20E2               	addwfc	fsr1h,w,c
 27469  0132B0  6EDA               	movwf	fsr2h,c
 27470  0132B2  50DF               	movf	indf2,w,c
 27471  0132B4  6E31               	movwf	(btemp+11)^0,c
 27472  0132B6  90D8               	bcf	status,0,c
 27473  0132B8  3431               	rlcf	(btemp+11)^0,w,c
 27474  0132BA  6E30               	movwf	(btemp+10)^0,c
 27475                           
 27476                           ;stkvar	_bexp @ sp[(-13)+10]
 27477  0132BC  0EFD               	movlw	-3
 27478  0132BE  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27479                           
 27480                           ;stkvar	_b @ sp[(-13)+-4]
 27481  0132C4  0EF1               	movlw	241
 27482  0132C6  24E1               	addwf	fsr1l,w,c
 27483  0132C8  6ED9               	movwf	fsr2l,c
 27484  0132CA  0EFF               	movlw	255
 27485  0132CC  20E2               	addwfc	fsr1h,w,c
 27486  0132CE  6EDA               	movwf	fsr2h,c
 27487  0132D0  AEDF               	btfss	indf2,7,c
 27488  0132D2  D002               	goto	l8185
 27489                           
 27490                           ;stkvar	_bexp @ sp[(-13)+10]
 27491  0132D4  0EFD               	movlw	-3
 27492  0132D6  80E3               	bsf	plusw1,0,c
 27493  0132D8                     l8185:
 27494                           
 27495                           ;stkvar	_bexp @ sp[(-13)+10]
 27496  0132D8  0EFD               	movlw	-3
 27497  0132DA  50E3               	movf	plusw1,w,c
 27498  0132DC  B4D8               	btfsc	status,2,c
 27499  0132DE  D01F               	goto	l8193
 27500                           
 27501                           ;stkvar	_bexp @ sp[(-13)+10]
 27502  0132E0  0EFD               	movlw	-3
 27503  0132E2  28E3               	incf	plusw1,w,c
 27504  0132E4  A4D8               	btfss	status,2,c
 27505  0132E6  D018               	goto	l8191
 27506  0132E8  0E00               	movlw	0
 27507  0132EA  6E2E               	movwf	(btemp+8)^0,c
 27508  0132EC  0E00               	movlw	0
 27509  0132EE  6E2F               	movwf	(btemp+9)^0,c
 27510  0132F0  0E00               	movlw	0
 27511  0132F2  6E30               	movwf	(btemp+10)^0,c
 27512  0132F4  0E00               	movlw	0
 27513  0132F6  6E31               	movwf	(btemp+11)^0,c
 27514                           
 27515                           ;stkvar	_b @ sp[(-13)+-4]
 27516  0132F8  0EEF               	movlw	-17
 27517  0132FA  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 27518  013300  0EF0               	movlw	-16
 27519  013302  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 27520  013308  0EF1               	movlw	-15
 27521  01330A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27522  013310  0EF2               	movlw	-14
 27523  013312  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27524  013318                     l8191:
 27525                           
 27526                           ;stkvar	_b @ sp[(-13)+-4]
 27527  013318  0EF1               	movlw	-15
 27528  01331A  8EE3               	bsf	plusw1,7,c
 27529  01331C  D018               	goto	l8195
 27530  01331E                     l8193:
 27531  01331E  0E00               	movlw	0
 27532  013320  6E2E               	movwf	(btemp+8)^0,c
 27533  013322  0E00               	movlw	0
 27534  013324  6E2F               	movwf	(btemp+9)^0,c
 27535  013326  0E00               	movlw	0
 27536  013328  6E30               	movwf	(btemp+10)^0,c
 27537  01332A  0E00               	movlw	0
 27538  01332C  6E31               	movwf	(btemp+11)^0,c
 27539                           
 27540                           ;stkvar	_b @ sp[(-13)+-4]
 27541  01332E  0EEF               	movlw	-17
 27542  013330  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 27543  013336  0EF0               	movlw	-16
 27544  013338  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 27545  01333E  0EF1               	movlw	-15
 27546  013340  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27547  013346  0EF2               	movlw	-14
 27548  013348  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27549  01334E                     l8195:
 27550                           
 27551                           ;stkvar	_a @ sp[(-13)+-8]
 27552  01334E  0EEE               	movlw	238
 27553  013350  24E1               	addwf	fsr1l,w,c
 27554  013352  6ED9               	movwf	fsr2l,c
 27555  013354  0EFF               	movlw	255
 27556  013356  20E2               	addwfc	fsr1h,w,c
 27557  013358  6EDA               	movwf	fsr2h,c
 27558  01335A  50DF               	movf	indf2,w,c
 27559  01335C  6E31               	movwf	(btemp+11)^0,c
 27560  01335E  0E80               	movlw	128
 27561  013360  1631               	andwf	(btemp+11)^0,f,c
 27562                           
 27563                           ;stkvar	_sign @ sp[(-13)+12]
 27564  013362  50E1               	movf	fsr1l,w,c
 27565  013364  0FFF               	addlw	-1
 27566  013366  6ED9               	movwf	fsr2l,c
 27567  013368  50E2               	movf	fsr1h,w,c
 27568  01336A  6EDA               	movwf	fsr2h,c
 27569  01336C  0EFF               	movlw	255
 27570  01336E  22DA               	addwfc	fsr2h,f,c
 27571  013370  5031               	movf	(btemp+11)^0,w,c
 27572  013372  1ADF               	xorwf	indf2,f,c
 27573                           
 27574                           ;stkvar	_a @ sp[(-13)+-8]
 27575  013374  0EEE               	movlw	238
 27576  013376  24E1               	addwf	fsr1l,w,c
 27577  013378  6ED9               	movwf	fsr2l,c
 27578  01337A  0EFF               	movlw	255
 27579  01337C  20E2               	addwfc	fsr1h,w,c
 27580  01337E  6EDA               	movwf	fsr2h,c
 27581  013380  50DF               	movf	indf2,w,c
 27582  013382  6E31               	movwf	(btemp+11)^0,c
 27583  013384  90D8               	bcf	status,0,c
 27584  013386  3431               	rlcf	(btemp+11)^0,w,c
 27585  013388  6E30               	movwf	(btemp+10)^0,c
 27586                           
 27587                           ;stkvar	_aexp @ sp[(-13)+11]
 27588  01338A  0EFE               	movlw	-2
 27589  01338C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27590                           
 27591                           ;stkvar	_a @ sp[(-13)+-8]
 27592  013392  0EED               	movlw	237
 27593  013394  24E1               	addwf	fsr1l,w,c
 27594  013396  6ED9               	movwf	fsr2l,c
 27595  013398  0EFF               	movlw	255
 27596  01339A  20E2               	addwfc	fsr1h,w,c
 27597  01339C  6EDA               	movwf	fsr2h,c
 27598  01339E  AEDF               	btfss	indf2,7,c
 27599  0133A0  D002               	goto	l8203
 27600                           
 27601                           ;stkvar	_aexp @ sp[(-13)+11]
 27602  0133A2  0EFE               	movlw	-2
 27603  0133A4  80E3               	bsf	plusw1,0,c
 27604  0133A6                     l8203:
 27605                           
 27606                           ;stkvar	_aexp @ sp[(-13)+11]
 27607  0133A6  0EFE               	movlw	-2
 27608  0133A8  50E3               	movf	plusw1,w,c
 27609  0133AA  B4D8               	btfsc	status,2,c
 27610  0133AC  D01F               	goto	l8211
 27611                           
 27612                           ;stkvar	_aexp @ sp[(-13)+11]
 27613  0133AE  0EFE               	movlw	-2
 27614  0133B0  28E3               	incf	plusw1,w,c
 27615  0133B2  A4D8               	btfss	status,2,c
 27616  0133B4  D018               	goto	l8209
 27617  0133B6  0E00               	movlw	0
 27618  0133B8  6E2E               	movwf	(btemp+8)^0,c
 27619  0133BA  0E00               	movlw	0
 27620  0133BC  6E2F               	movwf	(btemp+9)^0,c
 27621  0133BE  0E00               	movlw	0
 27622  0133C0  6E30               	movwf	(btemp+10)^0,c
 27623  0133C2  0E00               	movlw	0
 27624  0133C4  6E31               	movwf	(btemp+11)^0,c
 27625                           
 27626                           ;stkvar	_a @ sp[(-13)+-8]
 27627  0133C6  0EEB               	movlw	-21
 27628  0133C8  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 27629  0133CE  0EEC               	movlw	-20
 27630  0133D0  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 27631  0133D6  0EED               	movlw	-19
 27632  0133D8  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27633  0133DE  0EEE               	movlw	-18
 27634  0133E0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27635  0133E6                     l8209:
 27636                           
 27637                           ;stkvar	_a @ sp[(-13)+-8]
 27638  0133E6  0EED               	movlw	-19
 27639  0133E8  8EE3               	bsf	plusw1,7,c
 27640  0133EA  D018               	goto	l8213
 27641  0133EC                     l8211:
 27642  0133EC  0E00               	movlw	0
 27643  0133EE  6E2E               	movwf	(btemp+8)^0,c
 27644  0133F0  0E00               	movlw	0
 27645  0133F2  6E2F               	movwf	(btemp+9)^0,c
 27646  0133F4  0E00               	movlw	0
 27647  0133F6  6E30               	movwf	(btemp+10)^0,c
 27648  0133F8  0E00               	movlw	0
 27649  0133FA  6E31               	movwf	(btemp+11)^0,c
 27650                           
 27651                           ;stkvar	_a @ sp[(-13)+-8]
 27652  0133FC  0EEB               	movlw	-21
 27653  0133FE  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 27654  013404  0EEC               	movlw	-20
 27655  013406  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 27656  01340C  0EED               	movlw	-19
 27657  01340E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27658  013414  0EEE               	movlw	-18
 27659  013416  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27660  01341C                     l8213:
 27661                           
 27662                           ;stkvar	_aexp @ sp[(-13)+11]
 27663  01341C  0EFE               	movlw	-2
 27664  01341E  50E3               	movf	plusw1,w,c
 27665  013420  B4D8               	btfsc	status,2,c
 27666  013422  D004               	goto	u6660
 27667                           
 27668                           ;stkvar	_bexp @ sp[(-13)+10]
 27669  013424  0EFD               	movlw	-3
 27670  013426  50E3               	movf	plusw1,w,c
 27671  013428  A4D8               	btfss	status,2,c
 27672  01342A  D009               	goto	l8221
 27673  01342C                     u6660:
 27674  01342C  0E00               	movlw	0
 27675  01342E  6E26               	movwf	btemp^0,c
 27676  013430  0E00               	movlw	0
 27677  013432  6E27               	movwf	(btemp+1)^0,c
 27678  013434  0E00               	movlw	0
 27679  013436  6E28               	movwf	(btemp+2)^0,c
 27680  013438  0E00               	movlw	0
 27681  01343A  6E29               	movwf	(btemp+3)^0,c
 27682  01343C  D332               	goto	l3006
 27683  01343E                     l8221:
 27684                           
 27685                           ;stkvar	_b @ sp[(-13)+-4]
 27686  01343E  0EEF               	movlw	-17
 27687  013440  006F FF8C  F031    	movff	plusw1,btemp+11
 27688                           
 27689                           ;stkvar	_a @ sp[(-13)+-8]
 27690  013446  0EED               	movlw	237
 27691  013448  24E1               	addwf	fsr1l,w,c
 27692  01344A  6ED9               	movwf	fsr2l,c
 27693  01344C  0EFF               	movlw	255
 27694  01344E  20E2               	addwfc	fsr1h,w,c
 27695  013450  6EDA               	movwf	fsr2h,c
 27696  013452  50DF               	movf	indf2,w,c
 27697  013454  0231               	mulwf	(btemp+11)^0,c
 27698                           
 27699                           ;stkvar	_temp @ sp[(-13)+8]
 27700  013456  0EFB               	movlw	-5
 27701  013458  006F FFCF FFE3     	movff	prodl,plusw1
 27702  01345E  0EFC               	movlw	-4
 27703  013460  006F FFD3 FFE3     	movff	prodh,plusw1
 27704                           
 27705                           ;stkvar	_temp @ sp[(-13)+8]
 27706  013466  0EFB               	movlw	-5
 27707  013468  006F FF8C  F031    	movff	plusw1,btemp+11
 27708  01346E  0060  F0C4  F02A   	movff	btemp+11,btemp+4
 27709  013474  6A2B               	clrf	(btemp+5)^0,c
 27710  013476  6A2C               	clrf	(btemp+6)^0,c
 27711  013478  6A2D               	clrf	(btemp+7)^0,c
 27712                           
 27713                           ;stkvar	_grs @ sp[(-13)+4]
 27714  01347A  0EF7               	movlw	-9
 27715  01347C  0060  F0AB  FFE3   	movff	btemp+4,plusw1
 27716  013482  0EF8               	movlw	-8
 27717  013484  0060  F0AF  FFE3   	movff	btemp+5,plusw1
 27718  01348A  0EF9               	movlw	-7
 27719  01348C  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 27720  013492  0EFA               	movlw	-6
 27721  013494  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 27722                           
 27723                           ;stkvar	_temp @ sp[(-13)+8]
 27724  01349A  0EFC               	movlw	252
 27725  01349C  24E1               	addwf	fsr1l,w,c
 27726  01349E  6ED9               	movwf	fsr2l,c
 27727  0134A0  0EFF               	movlw	255
 27728  0134A2  20E2               	addwfc	fsr1h,w,c
 27729  0134A4  6EDA               	movwf	fsr2h,c
 27730  0134A6  50DF               	movf	indf2,w,c
 27731  0134A8  6E31               	movwf	(btemp+11)^0,c
 27732  0134AA  0060  F0C4  F02A   	movff	btemp+11,btemp+4
 27733  0134B0  6A2B               	clrf	(btemp+5)^0,c
 27734  0134B2  6A2C               	clrf	(btemp+6)^0,c
 27735  0134B4  6A2D               	clrf	(btemp+7)^0,c
 27736                           
 27737                           ;stkvar	_prod @ sp[(-13)+0]
 27738  0134B6  0EF3               	movlw	-13
 27739  0134B8  0060  F0AB  FFE3   	movff	btemp+4,plusw1
 27740  0134BE  0EF4               	movlw	-12
 27741  0134C0  0060  F0AF  FFE3   	movff	btemp+5,plusw1
 27742  0134C6  0EF5               	movlw	-11
 27743  0134C8  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 27744  0134CE  0EF6               	movlw	-10
 27745  0134D0  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 27746                           
 27747                           ;stkvar	_b @ sp[(-13)+-4]
 27748  0134D6  0EF0               	movlw	240
 27749  0134D8  24E1               	addwf	fsr1l,w,c
 27750  0134DA  6ED9               	movwf	fsr2l,c
 27751  0134DC  0EFF               	movlw	255
 27752  0134DE  20E2               	addwfc	fsr1h,w,c
 27753  0134E0  6EDA               	movwf	fsr2h,c
 27754  0134E2  50DF               	movf	indf2,w,c
 27755  0134E4  6E31               	movwf	(btemp+11)^0,c
 27756                           
 27757                           ;stkvar	_a @ sp[(-13)+-8]
 27758  0134E6  0EEC               	movlw	236
 27759  0134E8  24E1               	addwf	fsr1l,w,c
 27760  0134EA  6ED9               	movwf	fsr2l,c
 27761  0134EC  0EFF               	movlw	255
 27762  0134EE  20E2               	addwfc	fsr1h,w,c
 27763  0134F0  6EDA               	movwf	fsr2h,c
 27764  0134F2  50DF               	movf	indf2,w,c
 27765  0134F4  0231               	mulwf	(btemp+11)^0,c
 27766                           
 27767                           ;stkvar	_temp @ sp[(-13)+8]
 27768  0134F6  0EFB               	movlw	-5
 27769  0134F8  006F FFCF FFE3     	movff	prodl,plusw1
 27770  0134FE  0EFC               	movlw	-4
 27771  013500  006F FFD3 FFE3     	movff	prodh,plusw1
 27772                           
 27773                           ;stkvar	_grs @ sp[(-13)+4]
 27774  013506  50E1               	movf	fsr1l,w,c
 27775  013508  0FF7               	addlw	-9
 27776  01350A  6ED9               	movwf	fsr2l,c
 27777  01350C  50E2               	movf	fsr1h,w,c
 27778  01350E  6EDA               	movwf	fsr2h,c
 27779  013510  0EFF               	movlw	255
 27780  013512  22DA               	addwfc	fsr2h,f,c
 27781                           
 27782                           ;stkvar	_temp @ sp[(-13)+8]
 27783  013514  0EFB               	movlw	-5
 27784  013516  50E3               	movf	plusw1,w,c
 27785  013518  26DE               	addwf	postinc2,f,c
 27786  01351A  0E00               	movlw	0
 27787  01351C  22DE               	addwfc	postinc2,f,c
 27788  01351E  22DE               	addwfc	postinc2,f,c
 27789  013520  22DE               	addwfc	postinc2,f,c
 27790                           
 27791                           ;stkvar	_prod @ sp[(-13)+0]
 27792  013522  50E1               	movf	fsr1l,w,c
 27793  013524  0FF3               	addlw	-13
 27794  013526  6ED9               	movwf	fsr2l,c
 27795  013528  50E2               	movf	fsr1h,w,c
 27796  01352A  6EDA               	movwf	fsr2h,c
 27797  01352C  0EFF               	movlw	255
 27798  01352E  22DA               	addwfc	fsr2h,f,c
 27799                           
 27800                           ;stkvar	_temp @ sp[(-13)+8]
 27801  013530  0EFC               	movlw	252
 27802  013532  24E1               	addwf	fsr1l,w,c
 27803  013534  6EE9               	movwf	fsr0l,c
 27804  013536  0EFF               	movlw	255
 27805  013538  20E2               	addwfc	fsr1h,w,c
 27806  01353A  6EEA               	movwf	fsr0h,c
 27807  01353C  50EF               	movf	indf0,w,c
 27808  01353E  26DE               	addwf	postinc2,f,c
 27809  013540  0E00               	movlw	0
 27810  013542  22DE               	addwfc	postinc2,f,c
 27811  013544  22DE               	addwfc	postinc2,f,c
 27812  013546  22DE               	addwfc	postinc2,f,c
 27813                           
 27814                           ;stkvar	_b @ sp[(-13)+-4]
 27815  013548  0EF1               	movlw	241
 27816  01354A  24E1               	addwf	fsr1l,w,c
 27817  01354C  6ED9               	movwf	fsr2l,c
 27818  01354E  0EFF               	movlw	255
 27819  013550  20E2               	addwfc	fsr1h,w,c
 27820  013552  6EDA               	movwf	fsr2h,c
 27821  013554  50DF               	movf	indf2,w,c
 27822  013556  6E31               	movwf	(btemp+11)^0,c
 27823                           
 27824                           ;stkvar	_a @ sp[(-13)+-8]
 27825  013558  0EEB               	movlw	-21
 27826  01355A  50E3               	movf	plusw1,w,c
 27827  01355C  0231               	mulwf	(btemp+11)^0,c
 27828                           
 27829                           ;stkvar	_temp @ sp[(-13)+8]
 27830  01355E  0EFB               	movlw	-5
 27831  013560  006F FFCF FFE3     	movff	prodl,plusw1
 27832  013566  0EFC               	movlw	-4
 27833  013568  006F FFD3 FFE3     	movff	prodh,plusw1
 27834                           
 27835                           ;stkvar	_grs @ sp[(-13)+4]
 27836  01356E  50E1               	movf	fsr1l,w,c
 27837  013570  0FF7               	addlw	-9
 27838  013572  6ED9               	movwf	fsr2l,c
 27839  013574  50E2               	movf	fsr1h,w,c
 27840  013576  6EDA               	movwf	fsr2h,c
 27841  013578  0EFF               	movlw	255
 27842  01357A  22DA               	addwfc	fsr2h,f,c
 27843                           
 27844                           ;stkvar	_temp @ sp[(-13)+8]
 27845  01357C  0EFB               	movlw	-5
 27846  01357E  50E3               	movf	plusw1,w,c
 27847  013580  26DE               	addwf	postinc2,f,c
 27848  013582  0E00               	movlw	0
 27849  013584  22DE               	addwfc	postinc2,f,c
 27850  013586  22DE               	addwfc	postinc2,f,c
 27851  013588  22DE               	addwfc	postinc2,f,c
 27852                           
 27853                           ;stkvar	_prod @ sp[(-13)+0]
 27854  01358A  50E1               	movf	fsr1l,w,c
 27855  01358C  0FF3               	addlw	-13
 27856  01358E  6ED9               	movwf	fsr2l,c
 27857  013590  50E2               	movf	fsr1h,w,c
 27858  013592  6EDA               	movwf	fsr2h,c
 27859  013594  0EFF               	movlw	255
 27860  013596  22DA               	addwfc	fsr2h,f,c
 27861                           
 27862                           ;stkvar	_temp @ sp[(-13)+8]
 27863  013598  0EFC               	movlw	252
 27864  01359A  24E1               	addwf	fsr1l,w,c
 27865  01359C  6EE9               	movwf	fsr0l,c
 27866  01359E  0EFF               	movlw	255
 27867  0135A0  20E2               	addwfc	fsr1h,w,c
 27868  0135A2  6EEA               	movwf	fsr0h,c
 27869  0135A4  50EF               	movf	indf0,w,c
 27870  0135A6  26DE               	addwf	postinc2,f,c
 27871  0135A8  0E00               	movlw	0
 27872  0135AA  22DE               	addwfc	postinc2,f,c
 27873  0135AC  22DE               	addwfc	postinc2,f,c
 27874  0135AE  22DE               	addwfc	postinc2,f,c
 27875                           
 27876                           ;stkvar	_grs @ sp[(-13)+4]
 27877  0135B0  50E1               	movf	fsr1l,w,c
 27878  0135B2  0FF7               	addlw	-9
 27879  0135B4  6ED9               	movwf	fsr2l,c
 27880  0135B6  50E2               	movf	fsr1h,w,c
 27881  0135B8  6EDA               	movwf	fsr2h,c
 27882  0135BA  0EFF               	movlw	255
 27883  0135BC  22DA               	addwfc	fsr2h,f,c
 27884  0135BE  0E08               	movlw	8
 27885  0135C0                     u6675:
 27886  0135C0  90D8               	bcf	status,0,c
 27887  0135C2  36DE               	rlcf	postinc2,f,c
 27888  0135C4  36DE               	rlcf	postinc2,f,c
 27889  0135C6  36DE               	rlcf	postinc2,f,c
 27890  0135C8  36DD               	rlcf	postdec2,f,c
 27891  0135CA  52DD               	movf	postdec2,f,c
 27892  0135CC  52DD               	movf	postdec2,f,c
 27893  0135CE  2EE8               	decfsz	wreg,f,c
 27894  0135D0  D7F7               	goto	u6675
 27895                           
 27896                           ;stkvar	_b @ sp[(-13)+-4]
 27897  0135D2  0EF0               	movlw	240
 27898  0135D4  24E1               	addwf	fsr1l,w,c
 27899  0135D6  6ED9               	movwf	fsr2l,c
 27900  0135D8  0EFF               	movlw	255
 27901  0135DA  20E2               	addwfc	fsr1h,w,c
 27902  0135DC  6EDA               	movwf	fsr2h,c
 27903  0135DE  50DF               	movf	indf2,w,c
 27904  0135E0  6E31               	movwf	(btemp+11)^0,c
 27905                           
 27906                           ;stkvar	_a @ sp[(-13)+-8]
 27907  0135E2  0EEB               	movlw	-21
 27908  0135E4  50E3               	movf	plusw1,w,c
 27909  0135E6  0231               	mulwf	(btemp+11)^0,c
 27910                           
 27911                           ;stkvar	_temp @ sp[(-13)+8]
 27912  0135E8  0EFB               	movlw	-5
 27913  0135EA  006F FFCF FFE3     	movff	prodl,plusw1
 27914  0135F0  0EFC               	movlw	-4
 27915  0135F2  006F FFD3 FFE3     	movff	prodh,plusw1
 27916                           
 27917                           ;stkvar	_temp @ sp[(-13)+8]
 27918  0135F8  0EFB               	movlw	-5
 27919  0135FA  006F FF8C  F030    	movff	plusw1,btemp+10
 27920  013600  0EFC               	movlw	-4
 27921  013602  006F FF8C  F031    	movff	plusw1,btemp+11
 27922                           
 27923                           ;stkvar	_grs @ sp[(-13)+4]
 27924  013608  50E1               	movf	fsr1l,w,c
 27925  01360A  0FF7               	addlw	-9
 27926  01360C  6ED9               	movwf	fsr2l,c
 27927  01360E  50E2               	movf	fsr1h,w,c
 27928  013610  6EDA               	movwf	fsr2h,c
 27929  013612  0EFF               	movlw	255
 27930  013614  22DA               	addwfc	fsr2h,f,c
 27931  013616  5030               	movf	(btemp+10)^0,w,c
 27932  013618  26DE               	addwf	postinc2,f,c
 27933  01361A  5031               	movf	(btemp+11)^0,w,c
 27934  01361C  22DE               	addwfc	postinc2,f,c
 27935  01361E  0E00               	movlw	0
 27936  013620  22DE               	addwfc	postinc2,f,c
 27937  013622  22DE               	addwfc	postinc2,f,c
 27938                           
 27939                           ;stkvar	_b @ sp[(-13)+-4]
 27940  013624  0EEF               	movlw	-17
 27941  013626  006F FF8C  F031    	movff	plusw1,btemp+11
 27942                           
 27943                           ;stkvar	_a @ sp[(-13)+-8]
 27944  01362C  0EEC               	movlw	236
 27945  01362E  24E1               	addwf	fsr1l,w,c
 27946  013630  6ED9               	movwf	fsr2l,c
 27947  013632  0EFF               	movlw	255
 27948  013634  20E2               	addwfc	fsr1h,w,c
 27949  013636  6EDA               	movwf	fsr2h,c
 27950  013638  50DF               	movf	indf2,w,c
 27951  01363A  0231               	mulwf	(btemp+11)^0,c
 27952                           
 27953                           ;stkvar	_temp @ sp[(-13)+8]
 27954  01363C  0EFB               	movlw	-5
 27955  01363E  006F FFCF FFE3     	movff	prodl,plusw1
 27956  013644  0EFC               	movlw	-4
 27957  013646  006F FFD3 FFE3     	movff	prodh,plusw1
 27958                           
 27959                           ;stkvar	_temp @ sp[(-13)+8]
 27960  01364C  0EFB               	movlw	-5
 27961  01364E  006F FF8C  F030    	movff	plusw1,btemp+10
 27962  013654  0EFC               	movlw	-4
 27963  013656  006F FF8C  F031    	movff	plusw1,btemp+11
 27964                           
 27965                           ;stkvar	_grs @ sp[(-13)+4]
 27966  01365C  50E1               	movf	fsr1l,w,c
 27967  01365E  0FF7               	addlw	-9
 27968  013660  6ED9               	movwf	fsr2l,c
 27969  013662  50E2               	movf	fsr1h,w,c
 27970  013664  6EDA               	movwf	fsr2h,c
 27971  013666  0EFF               	movlw	255
 27972  013668  22DA               	addwfc	fsr2h,f,c
 27973  01366A  5030               	movf	(btemp+10)^0,w,c
 27974  01366C  26DE               	addwf	postinc2,f,c
 27975  01366E  5031               	movf	(btemp+11)^0,w,c
 27976  013670  22DE               	addwfc	postinc2,f,c
 27977  013672  0E00               	movlw	0
 27978  013674  22DE               	addwfc	postinc2,f,c
 27979  013676  22DE               	addwfc	postinc2,f,c
 27980                           
 27981                           ;stkvar	_grs @ sp[(-13)+4]
 27982  013678  50E1               	movf	fsr1l,w,c
 27983  01367A  0FF7               	addlw	-9
 27984  01367C  6ED9               	movwf	fsr2l,c
 27985  01367E  50E2               	movf	fsr1h,w,c
 27986  013680  6EDA               	movwf	fsr2h,c
 27987  013682  0EFF               	movlw	255
 27988  013684  22DA               	addwfc	fsr2h,f,c
 27989  013686  0E08               	movlw	8
 27990  013688                     u6685:
 27991  013688  90D8               	bcf	status,0,c
 27992  01368A  36DE               	rlcf	postinc2,f,c
 27993  01368C  36DE               	rlcf	postinc2,f,c
 27994  01368E  36DE               	rlcf	postinc2,f,c
 27995  013690  36DD               	rlcf	postdec2,f,c
 27996  013692  52DD               	movf	postdec2,f,c
 27997  013694  52DD               	movf	postdec2,f,c
 27998  013696  2EE8               	decfsz	wreg,f,c
 27999  013698  D7F7               	goto	u6685
 28000                           
 28001                           ;stkvar	_b @ sp[(-13)+-4]
 28002  01369A  0EEF               	movlw	-17
 28003  01369C  006F FF8C  F031    	movff	plusw1,btemp+11
 28004                           
 28005                           ;stkvar	_a @ sp[(-13)+-8]
 28006  0136A2  0EEB               	movlw	-21
 28007  0136A4  50E3               	movf	plusw1,w,c
 28008  0136A6  0231               	mulwf	(btemp+11)^0,c
 28009                           
 28010                           ;stkvar	_temp @ sp[(-13)+8]
 28011  0136A8  0EFB               	movlw	-5
 28012  0136AA  006F FFCF FFE3     	movff	prodl,plusw1
 28013  0136B0  0EFC               	movlw	-4
 28014  0136B2  006F FFD3 FFE3     	movff	prodh,plusw1
 28015                           
 28016                           ;stkvar	_temp @ sp[(-13)+8]
 28017  0136B8  0EFB               	movlw	-5
 28018  0136BA  006F FF8C  F030    	movff	plusw1,btemp+10
 28019  0136C0  0EFC               	movlw	-4
 28020  0136C2  006F FF8C  F031    	movff	plusw1,btemp+11
 28021                           
 28022                           ;stkvar	_grs @ sp[(-13)+4]
 28023  0136C8  50E1               	movf	fsr1l,w,c
 28024  0136CA  0FF7               	addlw	-9
 28025  0136CC  6ED9               	movwf	fsr2l,c
 28026  0136CE  50E2               	movf	fsr1h,w,c
 28027  0136D0  6EDA               	movwf	fsr2h,c
 28028  0136D2  0EFF               	movlw	255
 28029  0136D4  22DA               	addwfc	fsr2h,f,c
 28030  0136D6  5030               	movf	(btemp+10)^0,w,c
 28031  0136D8  26DE               	addwf	postinc2,f,c
 28032  0136DA  5031               	movf	(btemp+11)^0,w,c
 28033  0136DC  22DE               	addwfc	postinc2,f,c
 28034  0136DE  0E00               	movlw	0
 28035  0136E0  22DE               	addwfc	postinc2,f,c
 28036  0136E2  22DE               	addwfc	postinc2,f,c
 28037                           
 28038                           ;stkvar	_b @ sp[(-13)+-4]
 28039  0136E4  0EF0               	movlw	240
 28040  0136E6  24E1               	addwf	fsr1l,w,c
 28041  0136E8  6ED9               	movwf	fsr2l,c
 28042  0136EA  0EFF               	movlw	255
 28043  0136EC  20E2               	addwfc	fsr1h,w,c
 28044  0136EE  6EDA               	movwf	fsr2h,c
 28045  0136F0  50DF               	movf	indf2,w,c
 28046  0136F2  6E31               	movwf	(btemp+11)^0,c
 28047                           
 28048                           ;stkvar	_a @ sp[(-13)+-8]
 28049  0136F4  0EED               	movlw	237
 28050  0136F6  24E1               	addwf	fsr1l,w,c
 28051  0136F8  6ED9               	movwf	fsr2l,c
 28052  0136FA  0EFF               	movlw	255
 28053  0136FC  20E2               	addwfc	fsr1h,w,c
 28054  0136FE  6EDA               	movwf	fsr2h,c
 28055  013700  50DF               	movf	indf2,w,c
 28056  013702  0231               	mulwf	(btemp+11)^0,c
 28057                           
 28058                           ;stkvar	_temp @ sp[(-13)+8]
 28059  013704  0EFB               	movlw	-5
 28060  013706  006F FFCF FFE3     	movff	prodl,plusw1
 28061  01370C  0EFC               	movlw	-4
 28062  01370E  006F FFD3 FFE3     	movff	prodh,plusw1
 28063                           
 28064                           ;stkvar	_temp @ sp[(-13)+8]
 28065  013714  0EFB               	movlw	-5
 28066  013716  006F FF8C  F030    	movff	plusw1,btemp+10
 28067  01371C  0EFC               	movlw	-4
 28068  01371E  006F FF8C  F031    	movff	plusw1,btemp+11
 28069                           
 28070                           ;stkvar	_prod @ sp[(-13)+0]
 28071  013724  50E1               	movf	fsr1l,w,c
 28072  013726  0FF3               	addlw	-13
 28073  013728  6ED9               	movwf	fsr2l,c
 28074  01372A  50E2               	movf	fsr1h,w,c
 28075  01372C  6EDA               	movwf	fsr2h,c
 28076  01372E  0EFF               	movlw	255
 28077  013730  22DA               	addwfc	fsr2h,f,c
 28078  013732  5030               	movf	(btemp+10)^0,w,c
 28079  013734  26DE               	addwf	postinc2,f,c
 28080  013736  5031               	movf	(btemp+11)^0,w,c
 28081  013738  22DE               	addwfc	postinc2,f,c
 28082  01373A  0E00               	movlw	0
 28083  01373C  22DE               	addwfc	postinc2,f,c
 28084  01373E  22DE               	addwfc	postinc2,f,c
 28085                           
 28086                           ;stkvar	_b @ sp[(-13)+-4]
 28087  013740  0EF1               	movlw	241
 28088  013742  24E1               	addwf	fsr1l,w,c
 28089  013744  6ED9               	movwf	fsr2l,c
 28090  013746  0EFF               	movlw	255
 28091  013748  20E2               	addwfc	fsr1h,w,c
 28092  01374A  6EDA               	movwf	fsr2h,c
 28093  01374C  50DF               	movf	indf2,w,c
 28094  01374E  6E31               	movwf	(btemp+11)^0,c
 28095                           
 28096                           ;stkvar	_a @ sp[(-13)+-8]
 28097  013750  0EEC               	movlw	236
 28098  013752  24E1               	addwf	fsr1l,w,c
 28099  013754  6ED9               	movwf	fsr2l,c
 28100  013756  0EFF               	movlw	255
 28101  013758  20E2               	addwfc	fsr1h,w,c
 28102  01375A  6EDA               	movwf	fsr2h,c
 28103  01375C  50DF               	movf	indf2,w,c
 28104  01375E  0231               	mulwf	(btemp+11)^0,c
 28105                           
 28106                           ;stkvar	_temp @ sp[(-13)+8]
 28107  013760  0EFB               	movlw	-5
 28108  013762  006F FFCF FFE3     	movff	prodl,plusw1
 28109  013768  0EFC               	movlw	-4
 28110  01376A  006F FFD3 FFE3     	movff	prodh,plusw1
 28111                           
 28112                           ;stkvar	_temp @ sp[(-13)+8]
 28113  013770  0EFB               	movlw	-5
 28114  013772  006F FF8C  F030    	movff	plusw1,btemp+10
 28115  013778  0EFC               	movlw	-4
 28116  01377A  006F FF8C  F031    	movff	plusw1,btemp+11
 28117                           
 28118                           ;stkvar	_prod @ sp[(-13)+0]
 28119  013780  50E1               	movf	fsr1l,w,c
 28120  013782  0FF3               	addlw	-13
 28121  013784  6ED9               	movwf	fsr2l,c
 28122  013786  50E2               	movf	fsr1h,w,c
 28123  013788  6EDA               	movwf	fsr2h,c
 28124  01378A  0EFF               	movlw	255
 28125  01378C  22DA               	addwfc	fsr2h,f,c
 28126  01378E  5030               	movf	(btemp+10)^0,w,c
 28127  013790  26DE               	addwf	postinc2,f,c
 28128  013792  5031               	movf	(btemp+11)^0,w,c
 28129  013794  22DE               	addwfc	postinc2,f,c
 28130  013796  0E00               	movlw	0
 28131  013798  22DE               	addwfc	postinc2,f,c
 28132  01379A  22DE               	addwfc	postinc2,f,c
 28133                           
 28134                           ;stkvar	_b @ sp[(-13)+-4]
 28135  01379C  0EF1               	movlw	241
 28136  01379E  24E1               	addwf	fsr1l,w,c
 28137  0137A0  6ED9               	movwf	fsr2l,c
 28138  0137A2  0EFF               	movlw	255
 28139  0137A4  20E2               	addwfc	fsr1h,w,c
 28140  0137A6  6EDA               	movwf	fsr2h,c
 28141  0137A8  50DF               	movf	indf2,w,c
 28142  0137AA  6E31               	movwf	(btemp+11)^0,c
 28143                           
 28144                           ;stkvar	_a @ sp[(-13)+-8]
 28145  0137AC  0EED               	movlw	237
 28146  0137AE  24E1               	addwf	fsr1l,w,c
 28147  0137B0  6ED9               	movwf	fsr2l,c
 28148  0137B2  0EFF               	movlw	255
 28149  0137B4  20E2               	addwfc	fsr1h,w,c
 28150  0137B6  6EDA               	movwf	fsr2h,c
 28151  0137B8  50DF               	movf	indf2,w,c
 28152  0137BA  0231               	mulwf	(btemp+11)^0,c
 28153                           
 28154                           ;stkvar	_temp @ sp[(-13)+8]
 28155  0137BC  0EFB               	movlw	-5
 28156  0137BE  006F FFCF FFE3     	movff	prodl,plusw1
 28157  0137C4  0EFC               	movlw	-4
 28158  0137C6  006F FFD3 FFE3     	movff	prodh,plusw1
 28159                           
 28160                           ;stkvar	_temp @ sp[(-13)+8]
 28161  0137CC  0EFB               	movlw	-5
 28162  0137CE  006F FF8C  F030    	movff	plusw1,btemp+10
 28163  0137D4  0EFC               	movlw	-4
 28164  0137D6  006F FF8C  F031    	movff	plusw1,btemp+11
 28165  0137DC  5030               	movf	(btemp+10)^0,w,c
 28166  0137DE  6E2A               	movwf	(btemp+4)^0,c
 28167  0137E0  5031               	movf	(btemp+11)^0,w,c
 28168  0137E2  6E2B               	movwf	(btemp+5)^0,c
 28169  0137E4  6A2C               	clrf	(btemp+6)^0,c
 28170  0137E6  6A2D               	clrf	(btemp+7)^0,c
 28171  0137E8  0060  F0B0  F02D   	movff	btemp+6,btemp+7
 28172  0137EE  0060  F0AC  F02C   	movff	btemp+5,btemp+6
 28173  0137F4  0060  F0A8  F02B   	movff	btemp+4,btemp+5
 28174  0137FA  6A2A               	clrf	(btemp+4)^0,c
 28175                           
 28176                           ;stkvar	_prod @ sp[(-13)+0]
 28177  0137FC  50E1               	movf	fsr1l,w,c
 28178  0137FE  0FF3               	addlw	-13
 28179  013800  6ED9               	movwf	fsr2l,c
 28180  013802  50E2               	movf	fsr1h,w,c
 28181  013804  6EDA               	movwf	fsr2h,c
 28182  013806  0EFF               	movlw	255
 28183  013808  22DA               	addwfc	fsr2h,f,c
 28184  01380A  502A               	movf	(btemp+4)^0,w,c
 28185  01380C  26DE               	addwf	postinc2,f,c
 28186  01380E  502B               	movf	(btemp+5)^0,w,c
 28187  013810  22DE               	addwfc	postinc2,f,c
 28188  013812  502C               	movf	(btemp+6)^0,w,c
 28189  013814  22DE               	addwfc	postinc2,f,c
 28190  013816  502D               	movf	(btemp+7)^0,w,c
 28191  013818  22DE               	addwfc	postinc2,f,c
 28192                           
 28193                           ;stkvar	_prod @ sp[(-13)+0]
 28194  01381A  50E1               	movf	fsr1l,w,c
 28195  01381C  0FF3               	addlw	-13
 28196  01381E  6ED9               	movwf	fsr2l,c
 28197  013820  50E2               	movf	fsr1h,w,c
 28198  013822  6EDA               	movwf	fsr2h,c
 28199  013824  0EFF               	movlw	255
 28200  013826  22DA               	addwfc	fsr2h,f,c
 28201                           
 28202                           ;stkvar	_grs @ sp[(-13)+4]
 28203  013828  0EFA               	movlw	250
 28204  01382A  24E1               	addwf	fsr1l,w,c
 28205  01382C  6EE9               	movwf	fsr0l,c
 28206  01382E  0EFF               	movlw	255
 28207  013830  20E2               	addwfc	fsr1h,w,c
 28208  013832  6EEA               	movwf	fsr0h,c
 28209  013834  50EF               	movf	indf0,w,c
 28210  013836  26DE               	addwf	postinc2,f,c
 28211  013838  0E00               	movlw	0
 28212  01383A  22DE               	addwfc	postinc2,f,c
 28213  01383C  22DE               	addwfc	postinc2,f,c
 28214  01383E  22DE               	addwfc	postinc2,f,c
 28215                           
 28216                           ;stkvar	_grs @ sp[(-13)+4]
 28217  013840  50E1               	movf	fsr1l,w,c
 28218  013842  0FF7               	addlw	-9
 28219  013844  6ED9               	movwf	fsr2l,c
 28220  013846  50E2               	movf	fsr1h,w,c
 28221  013848  6EDA               	movwf	fsr2h,c
 28222  01384A  0EFF               	movlw	255
 28223  01384C  22DA               	addwfc	fsr2h,f,c
 28224  01384E  0E08               	movlw	8
 28225  013850                     u6695:
 28226  013850  90D8               	bcf	status,0,c
 28227  013852  36DE               	rlcf	postinc2,f,c
 28228  013854  36DE               	rlcf	postinc2,f,c
 28229  013856  36DE               	rlcf	postinc2,f,c
 28230  013858  36DD               	rlcf	postdec2,f,c
 28231  01385A  52DD               	movf	postdec2,f,c
 28232  01385C  52DD               	movf	postdec2,f,c
 28233  01385E  2EE8               	decfsz	wreg,f,c
 28234  013860  D7F7               	goto	u6695
 28235  013862  0E82               	movlw	130
 28236  013864  6E30               	movwf	(btemp+10)^0,c
 28237  013866  0EFF               	movlw	255
 28238  013868  6E31               	movwf	(btemp+11)^0,c
 28239                           
 28240                           ;stkvar	_bexp @ sp[(-13)+10]
 28241  01386A  0EFD               	movlw	-3
 28242  01386C  50E3               	movf	plusw1,w,c
 28243  01386E  6E2E               	movwf	(btemp+8)^0,c
 28244  013870  6A2F               	clrf	(btemp+9)^0,c
 28245                           
 28246                           ;stkvar	_aexp @ sp[(-13)+11]
 28247  013872  0EFE               	movlw	-2
 28248  013874  50E3               	movf	plusw1,w,c
 28249  013876  262E               	addwf	(btemp+8)^0,f,c
 28250  013878  0E00               	movlw	0
 28251  01387A  222F               	addwfc	(btemp+9)^0,f,c
 28252  01387C  5030               	movf	(btemp+10)^0,w,c
 28253  01387E  262E               	addwf	(btemp+8)^0,f,c
 28254  013880  5031               	movf	(btemp+11)^0,w,c
 28255  013882  222F               	addwfc	(btemp+9)^0,f,c
 28256                           
 28257                           ;stkvar	_temp @ sp[(-13)+8]
 28258  013884  0EFB               	movlw	-5
 28259  013886  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 28260  01388C  0EFC               	movlw	-4
 28261  01388E  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 28262  013894  D021               	goto	l8283
 28263  013896                     l8273:
 28264                           
 28265                           ;stkvar	_prod @ sp[(-13)+0]
 28266  013896  90D8               	bcf	status,0,c
 28267  013898  0EF3               	movlw	-13
 28268  01389A  36E3               	rlcf	plusw1,f,c
 28269  01389C  0EF4               	movlw	-12
 28270  01389E  36E3               	rlcf	plusw1,f,c
 28271  0138A0  0EF5               	movlw	-11
 28272  0138A2  36E3               	rlcf	plusw1,f,c
 28273  0138A4  0EF6               	movlw	-10
 28274  0138A6  36E3               	rlcf	plusw1,f,c
 28275                           
 28276                           ;stkvar	_grs @ sp[(-13)+4]
 28277  0138A8  0EFA               	movlw	-6
 28278  0138AA  AEE3               	btfss	plusw1,7,c
 28279  0138AC  D002               	goto	l8279
 28280                           
 28281                           ;stkvar	_prod @ sp[(-13)+0]
 28282  0138AE  0EF3               	movlw	-13
 28283  0138B0  80E3               	bsf	plusw1,0,c
 28284  0138B2                     l8279:
 28285                           
 28286                           ;stkvar	_grs @ sp[(-13)+4]
 28287  0138B2  90D8               	bcf	status,0,c
 28288  0138B4  0EF7               	movlw	-9
 28289  0138B6  36E3               	rlcf	plusw1,f,c
 28290  0138B8  0EF8               	movlw	-8
 28291  0138BA  36E3               	rlcf	plusw1,f,c
 28292  0138BC  0EF9               	movlw	-7
 28293  0138BE  36E3               	rlcf	plusw1,f,c
 28294  0138C0  0EFA               	movlw	-6
 28295  0138C2  36E3               	rlcf	plusw1,f,c
 28296                           
 28297                           ;stkvar	_temp @ sp[(-13)+8]
 28298  0138C4  50E1               	movf	fsr1l,w,c
 28299  0138C6  0FFB               	addlw	-5
 28300  0138C8  6ED9               	movwf	fsr2l,c
 28301  0138CA  50E2               	movf	fsr1h,w,c
 28302  0138CC  6EDA               	movwf	fsr2h,c
 28303  0138CE  0EFF               	movlw	255
 28304  0138D0  22DA               	addwfc	fsr2h,f,c
 28305  0138D2  06DE               	decf	postinc2,f,c
 28306  0138D4  0E00               	movlw	0
 28307  0138D6  5ADD               	subwfb	postdec2,f,c
 28308  0138D8                     l8283:
 28309                           
 28310                           ;stkvar	_prod @ sp[(-13)+0]
 28311  0138D8  0EF5               	movlw	-11
 28312  0138DA  AEE3               	btfss	plusw1,7,c
 28313  0138DC  D7DC               	goto	l8273
 28314                           
 28315                           ;stkvar	_aexp @ sp[(-13)+11]
 28316  0138DE  0EFE               	movlw	-2
 28317  0138E0  6AE3               	clrf	plusw1,c
 28318                           
 28319                           ;stkvar	_grs @ sp[(-13)+4]
 28320  0138E2  0EFA               	movlw	-6
 28321  0138E4  AEE3               	btfss	plusw1,7,c
 28322  0138E6  D020               	goto	l8297
 28323                           
 28324                           ;stkvar	_grs @ sp[(-13)+4]
 28325  0138E8  50E1               	movf	fsr1l,w,c
 28326  0138EA  0FF7               	addlw	-9
 28327  0138EC  6ED9               	movwf	fsr2l,c
 28328  0138EE  50E2               	movf	fsr1h,w,c
 28329  0138F0  6EDA               	movwf	fsr2h,c
 28330  0138F2  0EFF               	movlw	255
 28331  0138F4  22DA               	addwfc	fsr2h,f,c
 28332  0138F6  0EFF               	movlw	255
 28333  0138F8  14DE               	andwf	postinc2,w,c
 28334  0138FA  6E2E               	movwf	(btemp+8)^0,c
 28335  0138FC  0EFF               	movlw	255
 28336  0138FE  14DE               	andwf	postinc2,w,c
 28337  013900  6E2F               	movwf	(btemp+9)^0,c
 28338  013902  0EFF               	movlw	255
 28339  013904  14DE               	andwf	postinc2,w,c
 28340  013906  6E30               	movwf	(btemp+10)^0,c
 28341  013908  0E7F               	movlw	127
 28342  01390A  14DE               	andwf	postinc2,w,c
 28343  01390C  6E31               	movwf	(btemp+11)^0,c
 28344  01390E  502E               	movf	(btemp+8)^0,w,c
 28345  013910  102F               	iorwf	(btemp+9)^0,w,c
 28346  013912  1030               	iorwf	(btemp+10)^0,w,c
 28347  013914  1031               	iorwf	(btemp+11)^0,w,c
 28348  013916  B4D8               	btfsc	status,2,c
 28349  013918  D004               	goto	l8293
 28350  01391A                     u6730:
 28351                           
 28352                           ;stkvar	_aexp @ sp[(-13)+11]
 28353  01391A  0EFE               	movlw	-2
 28354  01391C  6AE3               	clrf	plusw1,c
 28355  01391E  2AE3               	incf	plusw1,f,c
 28356  013920  D003               	goto	l8297
 28357  013922                     l8293:
 28358                           
 28359                           ;stkvar	_prod @ sp[(-13)+0]
 28360  013922  0EF3               	movlw	-13
 28361  013924  B0E3               	btfsc	plusw1,0,c
 28362  013926  D7F9               	goto	u6730
 28363  013928                     l8297:
 28364                           
 28365                           ;stkvar	_aexp @ sp[(-13)+11]
 28366  013928  0EFE               	movlw	-2
 28367  01392A  50E3               	movf	plusw1,w,c
 28368  01392C  B4D8               	btfsc	status,2,c
 28369  01392E  D036               	goto	l8307
 28370                           
 28371                           ;stkvar	_prod @ sp[(-13)+0]
 28372  013930  50E1               	movf	fsr1l,w,c
 28373  013932  0FF3               	addlw	-13
 28374  013934  6ED9               	movwf	fsr2l,c
 28375  013936  50E2               	movf	fsr1h,w,c
 28376  013938  6EDA               	movwf	fsr2h,c
 28377  01393A  0EFF               	movlw	255
 28378  01393C  22DA               	addwfc	fsr2h,f,c
 28379  01393E  2ADE               	incf	postinc2,f,c
 28380  013940  0E00               	movlw	0
 28381  013942  22DE               	addwfc	postinc2,f,c
 28382  013944  22DE               	addwfc	postinc2,f,c
 28383  013946  22DE               	addwfc	postinc2,f,c
 28384                           
 28385                           ;stkvar	_prod @ sp[(-13)+0]
 28386  013948  0EF6               	movlw	-10
 28387  01394A  A0E3               	btfss	plusw1,0,c
 28388  01394C  D027               	goto	l8307
 28389  01394E  0E01               	movlw	1
 28390  013950  6E31               	movwf	(btemp+11)^0,c
 28391                           
 28392                           ;stkvar	_prod @ sp[(-13)+0]
 28393  013952  50E1               	movf	fsr1l,w,c
 28394  013954  0FF3               	addlw	-13
 28395  013956  6ED9               	movwf	fsr2l,c
 28396  013958  50E2               	movf	fsr1h,w,c
 28397  01395A  6EDA               	movwf	fsr2h,c
 28398  01395C  0EFF               	movlw	255
 28399  01395E  22DA               	addwfc	fsr2h,f,c
 28400  013960  2831               	incf	(btemp+11)^0,w,c
 28401  013962  52DE               	movf	postinc2,f,c
 28402  013964  D008               	goto	u6770
 28403  013966                     u6775:
 28404  013966  52DE               	movf	postinc2,f,c
 28405  013968  90D8               	bcf	status,0,c
 28406  01396A  BEDC               	btfsc	preinc2,7,c
 28407  01396C  80D8               	bsf	status,0,c
 28408  01396E  32DD               	rrcf	postdec2,f,c
 28409  013970  32DD               	rrcf	postdec2,f,c
 28410  013972  32DD               	rrcf	postdec2,f,c
 28411  013974  32DE               	rrcf	postinc2,f,c
 28412  013976                     u6770:
 28413  013976  2EE8               	decfsz	wreg,f,c
 28414  013978  D7F6               	goto	u6775
 28415                           
 28416                           ;stkvar	_temp @ sp[(-13)+8]
 28417  01397A  0EFB               	movlw	-5
 28418  01397C  50E3               	movf	plusw1,w,c
 28419  01397E  0F01               	addlw	1
 28420  013980  6E26               	movwf	btemp^0,c
 28421  013982  0EFB               	movlw	-5
 28422  013984  0060  F09B  FFE3   	movff	btemp,plusw1
 28423  01398A  6A26               	clrf	btemp^0,c
 28424  01398C  0EFC               	movlw	-4
 28425  01398E  50E3               	movf	plusw1,w,c
 28426  013990  2026               	addwfc	btemp^0,w,c
 28427  013992  6E26               	movwf	btemp^0,c
 28428  013994  0EFC               	movlw	-4
 28429  013996  0060  F09B  FFE3   	movff	btemp,plusw1
 28430  01399C                     l8307:
 28431                           
 28432                           ;stkvar	_temp @ sp[(-13)+8]
 28433  01399C  0EFC               	movlw	-4
 28434  01399E  BEE3               	btfsc	plusw1,7,c
 28435  0139A0  D020               	goto	l8311
 28436  0139A2  0EFC               	movlw	-4
 28437  0139A4  50E3               	movf	plusw1,w,c
 28438  0139A6  E104               	bnz	u6780
 28439  0139A8  0EFB               	movlw	-5
 28440  0139AA  28E3               	incf	plusw1,w,c
 28441  0139AC  A0D8               	btfss	status,0,c
 28442  0139AE  D019               	goto	l8311
 28443  0139B0                     u6780:
 28444  0139B0  0E00               	movlw	0
 28445  0139B2  6E2E               	movwf	(btemp+8)^0,c
 28446  0139B4  0E00               	movlw	0
 28447  0139B6  6E2F               	movwf	(btemp+9)^0,c
 28448  0139B8  0E80               	movlw	128
 28449  0139BA  6E30               	movwf	(btemp+10)^0,c
 28450  0139BC  0E7F               	movlw	127
 28451  0139BE  6E31               	movwf	(btemp+11)^0,c
 28452                           
 28453                           ;stkvar	_prod @ sp[(-13)+0]
 28454  0139C0  0EF3               	movlw	-13
 28455  0139C2  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 28456  0139C8  0EF4               	movlw	-12
 28457  0139CA  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 28458  0139D0  0EF5               	movlw	-11
 28459  0139D2  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 28460  0139D8  0EF6               	movlw	-10
 28461  0139DA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 28462  0139E0  D044               	goto	l8327
 28463  0139E2                     l8311:
 28464                           
 28465                           ;stkvar	_temp @ sp[(-13)+8]
 28466  0139E2  0EFC               	movlw	-4
 28467  0139E4  BEE3               	btfsc	plusw1,7,c
 28468  0139E6  D007               	goto	u6790
 28469  0139E8  0EFC               	movlw	-4
 28470  0139EA  50E3               	movf	plusw1,w,c
 28471  0139EC  E10F               	bnz	l8317
 28472  0139EE  0EFB               	movlw	-5
 28473  0139F0  04E3               	decf	plusw1,w,c
 28474  0139F2  B0D8               	btfsc	status,0,c
 28475  0139F4  D00B               	goto	l8317
 28476  0139F6                     u6790:
 28477                           
 28478                           ;stkvar	_prod @ sp[(-13)+0]
 28479  0139F6  0EF3               	movlw	-13
 28480  0139F8  6AE3               	clrf	plusw1,c
 28481  0139FA  0EF4               	movlw	-12
 28482  0139FC  6AE3               	clrf	plusw1,c
 28483  0139FE  0EF5               	movlw	-11
 28484  013A00  6AE3               	clrf	plusw1,c
 28485  013A02  0EF6               	movlw	-10
 28486  013A04  6AE3               	clrf	plusw1,c
 28487                           
 28488                           ;stkvar	_sign @ sp[(-13)+12]
 28489  013A06  0EFF               	movlw	-1
 28490  013A08  6AE3               	clrf	plusw1,c
 28491  013A0A  D02F               	goto	l8327
 28492  013A0C                     l8317:
 28493                           
 28494                           ;stkvar	_temp @ sp[(-13)+8]
 28495                           ;stkvar	_bexp @ sp[(-13)+10]
 28496  013A0C  0EFB               	movlw	-5
 28497  013A0E  006F FF8C  F026    	movff	plusw1,btemp
 28498  013A14  0EFD               	movlw	-3
 28499  013A16  0060  F09B  FFE3   	movff	btemp,plusw1
 28500                           
 28501                           ;stkvar	_prod @ sp[(-13)+0]
 28502  013A1C  50E1               	movf	fsr1l,w,c
 28503  013A1E  0FF3               	addlw	-13
 28504  013A20  6ED9               	movwf	fsr2l,c
 28505  013A22  50E2               	movf	fsr1h,w,c
 28506  013A24  6EDA               	movwf	fsr2h,c
 28507  013A26  0EFF               	movlw	255
 28508  013A28  22DA               	addwfc	fsr2h,f,c
 28509  013A2A  0EFF               	movlw	255
 28510  013A2C  16DE               	andwf	postinc2,f,c
 28511  013A2E  0EFF               	movlw	255
 28512  013A30  16DE               	andwf	postinc2,f,c
 28513  013A32  0E7F               	movlw	127
 28514  013A34  16DE               	andwf	postinc2,f,c
 28515  013A36  0E00               	movlw	0
 28516  013A38  16DE               	andwf	postinc2,f,c
 28517                           
 28518                           ;stkvar	_bexp @ sp[(-13)+10]
 28519  013A3A  0EFD               	movlw	-3
 28520  013A3C  A0E3               	btfss	plusw1,0,c
 28521  013A3E  D008               	goto	l8325
 28522                           
 28523                           ;stkvar	_prod @ sp[(-13)+0]
 28524  013A40  0EF5               	movlw	245
 28525  013A42  24E1               	addwf	fsr1l,w,c
 28526  013A44  6ED9               	movwf	fsr2l,c
 28527  013A46  0EFF               	movlw	255
 28528  013A48  20E2               	addwfc	fsr1h,w,c
 28529  013A4A  6EDA               	movwf	fsr2h,c
 28530  013A4C  0E00               	movlw	0
 28531  013A4E  8EDB               	bsf	plusw2,7,c
 28532  013A50                     l8325:
 28533                           
 28534                           ;stkvar	_prod @ sp[(-13)+0]
 28535  013A50  0EF6               	movlw	246
 28536  013A52  24E1               	addwf	fsr1l,w,c
 28537  013A54  6ED9               	movwf	fsr2l,c
 28538  013A56  0EFF               	movlw	255
 28539  013A58  20E2               	addwfc	fsr1h,w,c
 28540  013A5A  6EDA               	movwf	fsr2h,c
 28541                           
 28542                           ;stkvar	_bexp @ sp[(-13)+10]
 28543  013A5C  0EFD               	movlw	-3
 28544  013A5E  006F FF8C  F031    	movff	plusw1,btemp+11
 28545  013A64  90D8               	bcf	status,0,c
 28546  013A66  3031               	rrcf	(btemp+11)^0,w,c
 28547  013A68  6EDF               	movwf	indf2,c
 28548  013A6A                     l8327:
 28549                           
 28550                           ;stkvar	_sign @ sp[(-13)+12]
 28551  013A6A  0EFF               	movlw	-1
 28552  013A6C  006F FF8C  F031    	movff	plusw1,btemp+11
 28553                           
 28554                           ;stkvar	_prod @ sp[(-13)+0]
 28555  013A72  0EF6               	movlw	246
 28556  013A74  24E1               	addwf	fsr1l,w,c
 28557  013A76  6ED9               	movwf	fsr2l,c
 28558  013A78  0EFF               	movlw	255
 28559  013A7A  20E2               	addwfc	fsr1h,w,c
 28560  013A7C  6EDA               	movwf	fsr2h,c
 28561  013A7E  5031               	movf	(btemp+11)^0,w,c
 28562  013A80  12DF               	iorwf	indf2,f,c
 28563                           
 28564                           ;stkvar	_prod @ sp[(-13)+0]
 28565  013A82  0EF3               	movlw	-13
 28566  013A84  006F FF8C  F026    	movff	plusw1,btemp
 28567  013A8A  0EF4               	movlw	-12
 28568  013A8C  006F FF8C  F027    	movff	plusw1,btemp+1
 28569  013A92  0EF5               	movlw	-11
 28570  013A94  006F FF8C  F028    	movff	plusw1,btemp+2
 28571  013A9A  0EF6               	movlw	-10
 28572  013A9C  006F FF8C  F029    	movff	plusw1,btemp+3
 28573  013AA2                     l3006:
 28574                           
 28575                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 28576  013AA2  0EEB               	movlw	235
 28577  013AA4  26E1               	addwf	fsr1l,f,c
 28578  013AA6  0EFF               	movlw	255
 28579  013AA8  22E2               	addwfc	fsr1h,f,c
 28580  013AAA  0012               	return		;funcret
 28581  013AAC                     __end_of___flmul:
 28582                           	opt callstack 0
 28583                           
 28584 ;; *************** function _SYSTEM_Initialize *****************
 28585 ;; Defined at:
 28586 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28587 ;; Parameters:    Size  Location     Type
 28588 ;;		None
 28589 ;; Auto vars:     Size  Location     Type
 28590 ;;		None
 28591 ;; Return value:  Size  Location     Type
 28592 ;;                  1  [STACK] void 
 28593 ;; Registers used:
 28594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 28595 ;; Tracked objects:
 28596 ;;		On entry : 0/0
 28597 ;;		On exit  : 3F/3C
 28598 ;;		Unchanged: 0/0
 28599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28604 ;;Total ram usage:        0 bytes
 28605 ;; Hardware stack levels used:    1
 28606 ;; Hardware stack levels required when called:   17
 28607 ;; This function calls:
 28608 ;;		_ADCC_Initialize
 28609 ;;		_CLKREF_Initialize
 28610 ;;		_DMA1_Initialize
 28611 ;;		_DMA2_Initialize
 28612 ;;		_EXT_INT_Initialize
 28613 ;;		_FVR_Initialize
 28614 ;;		_INTERRUPT_Initialize
 28615 ;;		_OSCILLATOR_Initialize
 28616 ;;		_PIN_MANAGER_Initialize
 28617 ;;		_PMD_Initialize
 28618 ;;		_PWM8_Initialize
 28619 ;;		_SPI1_Initialize
 28620 ;;		_TMR2_Initialize
 28621 ;;		_TMR3_Initialize
 28622 ;;		_TMR5_Initialize
 28623 ;;		_TMR6_Initialize
 28624 ;;		_UART1_Initialize
 28625 ;;		_UART2_Initialize
 28626 ;; This function is called by:
 28627 ;;		_main
 28628 ;; This function uses a reentrant model
 28629 ;;
 28630                           
 28631                           	psect	text107
 28632  01AB66                     __ptext107:
 28633                           	opt callstack 0
 28634  01AB66                     _SYSTEM_Initialize:
 28635                           	opt callstack 13
 28636                           
 28637                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 28638                           
 28639                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28640                           ;incstack = 0
 28641  01AB66  ECC1  F0D3         	call	_INTERRUPT_Initialize	;wreg free
 28642                           
 28643                           ; BSR set to: 57
 28644                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 28645  01AB6A  ECE0  F0DB         	call	_PMD_Initialize	;wreg free
 28646                           
 28647                           ; BSR set to: 57
 28648                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 28649  01AB6E  ECF6  F0D0         	call	_PIN_MANAGER_Initialize	;wreg free
 28650                           
 28651                           ; BSR set to: 58
 28652                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 28653  01AB72  ECD5  F0DB         	call	_OSCILLATOR_Initialize	;wreg free
 28654                           
 28655                           ; BSR set to: 57
 28656                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 28657  01AB76  EC55  F0DC         	call	_FVR_Initialize	;wreg free
 28658                           
 28659                           ; BSR set to: 62
 28660                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 28661  01AB7A  EC56  F0D3         	call	_ADCC_Initialize	;wreg free
 28662                           
 28663                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 28664  01AB7E  ECB3  F0DB         	call	_TMR2_Initialize	;wreg free
 28665                           
 28666                           ; BSR set to: 57
 28667                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 28668  01AB82  ECCA  F0DB         	call	_PWM8_Initialize	;wreg free
 28669                           
 28670                           ; BSR set to: 63
 28671                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 28672  01AB86  EC32  F0D8         	call	_EXT_INT_Initialize	;wreg free
 28673                           
 28674                           ; BSR set to: 57
 28675                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 28676  01AB8A  EC1E  F0D9         	call	_TMR6_Initialize	;wreg free
 28677                           
 28678                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 28679  01AB8E  EC88  F0D6         	call	_TMR3_Initialize	;wreg free
 28680                           
 28681                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 28682  01AB92  EC65  F0D6         	call	_TMR5_Initialize	;wreg free
 28683                           
 28684                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 28685  01AB96  EC42  F0D6         	call	_UART1_Initialize	;wreg free
 28686                           
 28687                           ; BSR set to: 57
 28688                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 28689  01AB9A  EC88  F0D4         	call	_UART2_Initialize	;wreg free
 28690                           
 28691                           ; BSR set to: 57
 28692                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 28693  01AB9E  ECBF  F0DB         	call	_SPI1_Initialize	;wreg free
 28694                           
 28695                           ; BSR set to: 61
 28696                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 28697  01ABA2  ECE4  F0D4         	call	_DMA2_Initialize	;wreg free
 28698                           
 28699                           ; BSR set to: 59
 28700                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 28701  01ABA6  EC21  F0D3         	call	_DMA1_Initialize	;wreg free
 28702                           
 28703                           ; BSR set to: 59
 28704                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 28705  01ABAA  EC29  F0DC         	call	_CLKREF_Initialize	;wreg free
 28706                           
 28707                           ; BSR set to: 60
 28708                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28709  01ABAE  0012               	return		;funcret
 28710  01ABB0                     __end_of_SYSTEM_Initialize:
 28711                           	opt callstack 0
 28712                           
 28713 ;; *************** function _UART2_Initialize *****************
 28714 ;; Defined at:
 28715 ;;		line 78 in file "mcc_generated_files/uart2.c"
 28716 ;; Parameters:    Size  Location     Type
 28717 ;;		None
 28718 ;; Auto vars:     Size  Location     Type
 28719 ;;		None
 28720 ;; Return value:  Size  Location     Type
 28721 ;;                  1  [STACK] void 
 28722 ;; Registers used:
 28723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28724 ;; Tracked objects:
 28725 ;;		On entry : 3F/39
 28726 ;;		On exit  : 3F/39
 28727 ;;		Unchanged: 0/0
 28728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28733 ;;Total ram usage:        0 bytes
 28734 ;; Hardware stack levels used:    1
 28735 ;; Hardware stack levels required when called:   16
 28736 ;; This function calls:
 28737 ;;		_UART2_SetRxInterruptHandler
 28738 ;;		_UART2_SetTxInterruptHandler
 28739 ;; This function is called by:
 28740 ;;		_SYSTEM_Initialize
 28741 ;; This function uses a reentrant model
 28742 ;;
 28743                           
 28744                           	psect	text108
 28745  01A910                     __ptext108:
 28746                           	opt callstack 0
 28747  01A910                     _UART2_Initialize:
 28748                           	opt callstack 13
 28749                           
 28750                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 28751                           
 28752                           ; BSR set to: 60
 28753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28754                           ;incstack = 0
 28755  01A910  0139               	movlb	57	; () banked
 28756  01A912  9596               	bcf	150,2,b	;volatile
 28757                           
 28758                           ; BSR set to: 57
 28759                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 28760  01A914  0EE0               	movlw	low _UART2_Receive_ISR
 28761  01A916  6EE6               	movwf	postinc1,c
 28762  01A918  0EB6               	movlw	high _UART2_Receive_ISR
 28763  01A91A  6EE6               	movwf	postinc1,c
 28764  01A91C  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 28765  01A91E  6EE6               	movwf	postinc1,c
 28766  01A920  EC97  F0D9         	call	_UART2_SetRxInterruptHandler	;wreg free
 28767                           
 28768                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 28769  01A924  0139               	movlb	57	; () banked
 28770  01A926  9796               	bcf	150,3,b	;volatile
 28771                           
 28772                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 28773  01A928  0E10               	movlw	low _UART2_Transmit_ISR
 28774  01A92A  6EE6               	movwf	postinc1,c
 28775  01A92C  0EB2               	movlw	high _UART2_Transmit_ISR
 28776  01A92E  6EE6               	movwf	postinc1,c
 28777  01A930  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 28778  01A932  6EE6               	movwf	postinc1,c
 28779  01A934  EC83  F0D9         	call	_UART2_SetTxInterruptHandler	;wreg free
 28780                           
 28781                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 28782  01A938  013D               	movlb	61	; () banked
 28783  01A93A  6BD4               	clrf	212,b	;volatile
 28784                           
 28785                           ; BSR set to: 61
 28786                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 28787  01A93C  6BD6               	clrf	214,b	;volatile
 28788                           
 28789                           ; BSR set to: 61
 28790                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 28791  01A93E  6BD8               	clrf	216,b	;volatile
 28792                           
 28793                           ; BSR set to: 61
 28794                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 28795  01A940  0EB0               	movlw	176
 28796  01A942  6FDA               	movwf	218,b	;volatile
 28797                           
 28798                           ; BSR set to: 61
 28799                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 28800  01A944  0E80               	movlw	128
 28801  01A946  6FDB               	movwf	219,b	;volatile
 28802                           
 28803                           ; BSR set to: 61
 28804                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 28805  01A948  6BDC               	clrf	220,b	;volatile
 28806                           
 28807                           ; BSR set to: 61
 28808                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 28809  01A94A  0E82               	movlw	130
 28810  01A94C  6FDD               	movwf	221,b	;volatile
 28811                           
 28812                           ; BSR set to: 61
 28813                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 28814  01A94E  0E06               	movlw	6
 28815  01A950  6FDE               	movwf	222,b	;volatile
 28816                           
 28817                           ; BSR set to: 61
 28818                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 28819  01A952  6BDF               	clrf	223,b	;volatile
 28820                           
 28821                           ; BSR set to: 61
 28822                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 28823  01A954  6BE0               	clrf	224,b	;volatile
 28824                           
 28825                           ; BSR set to: 61
 28826                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 28827  01A956  6BE1               	clrf	225,b	;volatile
 28828                           
 28829                           ; BSR set to: 61
 28830                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 28831  01A958  6BE2               	clrf	226,b	;volatile
 28832                           
 28833                           ; BSR set to: 61
 28834                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 28835  01A95A  6A22               	clrf	_uart2TxHead^0,c	;volatile
 28836                           
 28837                           ; BSR set to: 61
 28838                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 28839  01A95C  6A21               	clrf	_uart2TxTail^0,c	;volatile
 28840                           
 28841                           ; BSR set to: 61
 28842                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 28843  01A95E  0E40               	movlw	64
 28844  01A960  6E20               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 28845                           
 28846                           ; BSR set to: 61
 28847                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 28848  01A962  6A1F               	clrf	_uart2RxHead^0,c	;volatile
 28849                           
 28850                           ; BSR set to: 61
 28851                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 28852  01A964  6A1E               	clrf	_uart2RxTail^0,c	;volatile
 28853                           
 28854                           ; BSR set to: 61
 28855                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 28856  01A966  6A1D               	clrf	_uart2RxCount^0,c	;volatile
 28857                           
 28858                           ; BSR set to: 61
 28859                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 28860  01A968  0139               	movlb	57	; () banked
 28861  01A96A  8596               	bsf	150,2,b	;volatile
 28862                           
 28863                           ; BSR set to: 57
 28864                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 28865  01A96C  0012               	return		;funcret
 28866  01A96E                     __end_of_UART2_Initialize:
 28867                           	opt callstack 0
 28868                           
 28869 ;; *************** function _UART2_SetTxInterruptHandler *****************
 28870 ;; Defined at:
 28871 ;;		line 252 in file "mcc_generated_files/uart2.c"
 28872 ;; Parameters:    Size  Location     Type
 28873 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28874 ;;		 -> UART2_Transmit_ISR(1), 
 28875 ;; Auto vars:     Size  Location     Type
 28876 ;;		None
 28877 ;; Return value:  Size  Location     Type
 28878 ;;                  1  [STACK] void 
 28879 ;; Registers used:
 28880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28881 ;; Tracked objects:
 28882 ;;		On entry : 3F/39
 28883 ;;		On exit  : 0/0
 28884 ;;		Unchanged: 0/0
 28885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28890 ;;Total ram usage:        0 bytes
 28891 ;; Hardware stack levels used:    1
 28892 ;; Hardware stack levels required when called:   15
 28893 ;; This function calls:
 28894 ;;		Nothing
 28895 ;; This function is called by:
 28896 ;;		_UART2_Initialize
 28897 ;; This function uses a reentrant model
 28898 ;;
 28899                           
 28900                           	psect	text109
 28901  01B306                     __ptext109:
 28902                           	opt callstack 0
 28903  01B306                     _UART2_SetTxInterruptHandler:
 28904                           	opt callstack 13
 28905                           
 28906                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 28907                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28908                           
 28909                           ; BSR set to: 57
 28910                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28911                           ;incstack = 0
 28912  01B306  50E1               	movf	fsr1l,w,c
 28913  01B308  0FFD               	addlw	-3
 28914  01B30A  6ED9               	movwf	fsr2l,c
 28915  01B30C  50E2               	movf	fsr1h,w,c
 28916  01B30E  6EDA               	movwf	fsr2h,c
 28917  01B310  0EFF               	movlw	255
 28918  01B312  22DA               	addwfc	fsr2h,f,c
 28919  01B314  006F FF78  F0AC    	movff	postinc2,_UART2_TxInterruptHandler
 28920  01B31A  006F FF78  F0AD    	movff	postinc2,_UART2_TxInterruptHandler+1
 28921  01B320  006F FF74  F0AE    	movff	postdec2,_UART2_TxInterruptHandler+2
 28922                           
 28923                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28924  01B326  52E5               	movf	postdec1,f,c
 28925  01B328  52E5               	movf	postdec1,f,c
 28926  01B32A  52E5               	movf	postdec1,f,c
 28927  01B32C  0012               	return		;funcret
 28928  01B32E                     __end_of_UART2_SetTxInterruptHandler:
 28929                           	opt callstack 0
 28930                           
 28931 ;; *************** function _UART2_SetRxInterruptHandler *****************
 28932 ;; Defined at:
 28933 ;;		line 248 in file "mcc_generated_files/uart2.c"
 28934 ;; Parameters:    Size  Location     Type
 28935 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28936 ;;		 -> UART2_Receive_ISR(1), 
 28937 ;; Auto vars:     Size  Location     Type
 28938 ;;		None
 28939 ;; Return value:  Size  Location     Type
 28940 ;;                  1  [STACK] void 
 28941 ;; Registers used:
 28942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28943 ;; Tracked objects:
 28944 ;;		On entry : 3F/39
 28945 ;;		On exit  : 0/0
 28946 ;;		Unchanged: 0/0
 28947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28952 ;;Total ram usage:        0 bytes
 28953 ;; Hardware stack levels used:    1
 28954 ;; Hardware stack levels required when called:   15
 28955 ;; This function calls:
 28956 ;;		Nothing
 28957 ;; This function is called by:
 28958 ;;		_UART2_Initialize
 28959 ;; This function uses a reentrant model
 28960 ;;
 28961                           
 28962                           	psect	text110
 28963  01B32E                     __ptext110:
 28964                           	opt callstack 0
 28965  01B32E                     _UART2_SetRxInterruptHandler:
 28966                           	opt callstack 13
 28967                           
 28968                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 28969                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28970                           
 28971                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28972                           ;incstack = 0
 28973  01B32E  50E1               	movf	fsr1l,w,c
 28974  01B330  0FFD               	addlw	-3
 28975  01B332  6ED9               	movwf	fsr2l,c
 28976  01B334  50E2               	movf	fsr1h,w,c
 28977  01B336  6EDA               	movwf	fsr2h,c
 28978  01B338  0EFF               	movlw	255
 28979  01B33A  22DA               	addwfc	fsr2h,f,c
 28980  01B33C  006F FF78  F001    	movff	postinc2,_UART2_RxInterruptHandler
 28981  01B342  006F FF78  F002    	movff	postinc2,_UART2_RxInterruptHandler+1
 28982  01B348  006F FF74  F003    	movff	postdec2,_UART2_RxInterruptHandler+2
 28983                           
 28984                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28985  01B34E  52E5               	movf	postdec1,f,c
 28986  01B350  52E5               	movf	postdec1,f,c
 28987  01B352  52E5               	movf	postdec1,f,c
 28988  01B354  0012               	return		;funcret
 28989  01B356                     __end_of_UART2_SetRxInterruptHandler:
 28990                           	opt callstack 0
 28991                           
 28992 ;; *************** function _UART1_Initialize *****************
 28993 ;; Defined at:
 28994 ;;		line 75 in file "mcc_generated_files/uart1.c"
 28995 ;; Parameters:    Size  Location     Type
 28996 ;;		None
 28997 ;; Auto vars:     Size  Location     Type
 28998 ;;		None
 28999 ;; Return value:  Size  Location     Type
 29000 ;;                  1  [STACK] void 
 29001 ;; Registers used:
 29002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29003 ;; Tracked objects:
 29004 ;;		On entry : 0/39
 29005 ;;		On exit  : 3F/39
 29006 ;;		Unchanged: 0/0
 29007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29012 ;;Total ram usage:        0 bytes
 29013 ;; Hardware stack levels used:    1
 29014 ;; Hardware stack levels required when called:   16
 29015 ;; This function calls:
 29016 ;;		_UART1_SetRxInterruptHandler
 29017 ;; This function is called by:
 29018 ;;		_SYSTEM_Initialize
 29019 ;; This function uses a reentrant model
 29020 ;;
 29021                           
 29022                           	psect	text111
 29023  01AC84                     __ptext111:
 29024                           	opt callstack 0
 29025  01AC84                     _UART1_Initialize:
 29026                           	opt callstack 13
 29027                           
 29028                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 29029                           
 29030                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29031                           ;incstack = 0
 29032  01AC84  0139               	movlb	57	; () banked
 29033  01AC86  9793               	bcf	147,3,b	;volatile
 29034                           
 29035                           ; BSR set to: 57
 29036                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 29037  01AC88  0E48               	movlw	low _UART1_Receive_ISR
 29038  01AC8A  6EE6               	movwf	postinc1,c
 29039  01AC8C  0EB6               	movlw	high _UART1_Receive_ISR
 29040  01AC8E  6EE6               	movwf	postinc1,c
 29041  01AC90  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 29042  01AC92  6EE6               	movwf	postinc1,c
 29043  01AC94  ECAB  F0D9         	call	_UART1_SetRxInterruptHandler	;wreg free
 29044                           
 29045                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 29046  01AC98  013D               	movlb	61	; () banked
 29047  01AC9A  6BEC               	clrf	236,b	;volatile
 29048                           
 29049                           ; BSR set to: 61
 29050                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 29051  01AC9C  6BED               	clrf	237,b	;volatile
 29052                           
 29053                           ; BSR set to: 61
 29054                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 29055  01AC9E  6BEE               	clrf	238,b	;volatile
 29056                           
 29057                           ; BSR set to: 61
 29058                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 29059  01ACA0  6BEF               	clrf	239,b	;volatile
 29060                           
 29061                           ; BSR set to: 61
 29062                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 29063  01ACA2  6BF0               	clrf	240,b	;volatile
 29064                           
 29065                           ; BSR set to: 61
 29066                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29067  01ACA4  6BF1               	clrf	241,b	;volatile
 29068                           
 29069                           ; BSR set to: 61
 29070                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29071  01ACA6  0EB0               	movlw	176
 29072  01ACA8  6FF2               	movwf	242,b	;volatile
 29073                           
 29074                           ; BSR set to: 61
 29075                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29076  01ACAA  0E80               	movlw	128
 29077  01ACAC  6FF3               	movwf	243,b	;volatile
 29078                           
 29079                           ; BSR set to: 61
 29080                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29081  01ACAE  6BF4               	clrf	244,b	;volatile
 29082                           
 29083                           ; BSR set to: 61
 29084                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29085  01ACB0  0E8A               	movlw	138
 29086  01ACB2  6FF5               	movwf	245,b	;volatile
 29087                           
 29088                           ; BSR set to: 61
 29089                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29090  01ACB4  6BF6               	clrf	246,b	;volatile
 29091                           
 29092                           ; BSR set to: 61
 29093                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29094  01ACB6  6BF7               	clrf	247,b	;volatile
 29095                           
 29096                           ; BSR set to: 61
 29097                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29098  01ACB8  6BF8               	clrf	248,b	;volatile
 29099                           
 29100                           ; BSR set to: 61
 29101                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29102  01ACBA  6BF9               	clrf	249,b	;volatile
 29103                           
 29104                           ; BSR set to: 61
 29105                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29106  01ACBC  6BFA               	clrf	250,b	;volatile
 29107                           
 29108                           ; BSR set to: 61
 29109                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29110  01ACBE  6A25               	clrf	_uart1RxHead^0,c	;volatile
 29111                           
 29112                           ; BSR set to: 61
 29113                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29114  01ACC0  6A24               	clrf	_uart1RxTail^0,c	;volatile
 29115                           
 29116                           ; BSR set to: 61
 29117                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29118  01ACC2  6A23               	clrf	_uart1RxCount^0,c	;volatile
 29119                           
 29120                           ; BSR set to: 61
 29121                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29122  01ACC4  0139               	movlb	57	; () banked
 29123  01ACC6  8793               	bsf	147,3,b	;volatile
 29124                           
 29125                           ; BSR set to: 57
 29126                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29127  01ACC8  0012               	return		;funcret
 29128  01ACCA                     __end_of_UART1_Initialize:
 29129                           	opt callstack 0
 29130                           
 29131 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29132 ;; Defined at:
 29133 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29134 ;; Parameters:    Size  Location     Type
 29135 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29136 ;;		 -> UART1_Receive_ISR(1), 
 29137 ;; Auto vars:     Size  Location     Type
 29138 ;;		None
 29139 ;; Return value:  Size  Location     Type
 29140 ;;                  1  [STACK] void 
 29141 ;; Registers used:
 29142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29143 ;; Tracked objects:
 29144 ;;		On entry : 3F/39
 29145 ;;		On exit  : 0/0
 29146 ;;		Unchanged: 0/0
 29147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29152 ;;Total ram usage:        0 bytes
 29153 ;; Hardware stack levels used:    1
 29154 ;; Hardware stack levels required when called:   15
 29155 ;; This function calls:
 29156 ;;		Nothing
 29157 ;; This function is called by:
 29158 ;;		_UART1_Initialize
 29159 ;; This function uses a reentrant model
 29160 ;;
 29161                           
 29162                           	psect	text112
 29163  01B356                     __ptext112:
 29164                           	opt callstack 0
 29165  01B356                     _UART1_SetRxInterruptHandler:
 29166                           	opt callstack 13
 29167                           
 29168                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29169                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29170                           
 29171                           ; BSR set to: 57
 29172                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29173                           ;incstack = 0
 29174  01B356  50E1               	movf	fsr1l,w,c
 29175  01B358  0FFD               	addlw	-3
 29176  01B35A  6ED9               	movwf	fsr2l,c
 29177  01B35C  50E2               	movf	fsr1h,w,c
 29178  01B35E  6EDA               	movwf	fsr2h,c
 29179  01B360  0EFF               	movlw	255
 29180  01B362  22DA               	addwfc	fsr2h,f,c
 29181  01B364  006F FF78  F0A9    	movff	postinc2,_UART1_RxInterruptHandler
 29182  01B36A  006F FF78  F0AA    	movff	postinc2,_UART1_RxInterruptHandler+1
 29183  01B370  006F FF74  F0AB    	movff	postdec2,_UART1_RxInterruptHandler+2
 29184                           
 29185                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29186  01B376  52E5               	movf	postdec1,f,c
 29187  01B378  52E5               	movf	postdec1,f,c
 29188  01B37A  52E5               	movf	postdec1,f,c
 29189  01B37C  0012               	return		;funcret
 29190  01B37E                     __end_of_UART1_SetRxInterruptHandler:
 29191                           	opt callstack 0
 29192                           
 29193 ;; *************** function _TMR6_Initialize *****************
 29194 ;; Defined at:
 29195 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29196 ;; Parameters:    Size  Location     Type
 29197 ;;		None
 29198 ;; Auto vars:     Size  Location     Type
 29199 ;;		None
 29200 ;; Return value:  Size  Location     Type
 29201 ;;                  1  [STACK] void 
 29202 ;; Registers used:
 29203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29204 ;; Tracked objects:
 29205 ;;		On entry : 3F/39
 29206 ;;		On exit  : 0/0
 29207 ;;		Unchanged: 0/0
 29208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29213 ;;Total ram usage:        0 bytes
 29214 ;; Hardware stack levels used:    1
 29215 ;; Hardware stack levels required when called:   16
 29216 ;; This function calls:
 29217 ;;		_TMR6_SetInterruptHandler
 29218 ;; This function is called by:
 29219 ;;		_SYSTEM_Initialize
 29220 ;; This function uses a reentrant model
 29221 ;;
 29222                           
 29223                           	psect	text113
 29224  01B23C                     __ptext113:
 29225                           	opt callstack 0
 29226  01B23C                     _TMR6_Initialize:
 29227                           	opt callstack 13
 29228                           
 29229                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29230                           
 29231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29232                           ;incstack = 0
 29233  01B23C  0E01               	movlw	1
 29234  01B23E  6E96               	movwf	150,c	;volatile
 29235                           
 29236                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29237  01B240  6A95               	clrf	149,c	;volatile
 29238                           
 29239                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29240  01B242  6A97               	clrf	151,c	;volatile
 29241                           
 29242                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29243  01B244  0E7C               	movlw	124
 29244  01B246  6E93               	movwf	147,c	;volatile
 29245                           
 29246                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29247  01B248  6A92               	clrf	146,c	;volatile
 29248                           
 29249                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29250  01B24A  0139               	movlb	57	; () banked
 29251  01B24C  91A9               	bcf	169,0,b	;volatile
 29252                           
 29253                           ; BSR set to: 57
 29254                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29255  01B24E  8199               	bsf	153,0,b	;volatile
 29256                           
 29257                           ; BSR set to: 57
 29258                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29259  01B250  0E18               	movlw	low _TMR6_DefaultInterruptHandler
 29260  01B252  6EE6               	movwf	postinc1,c
 29261  01B254  0EAB               	movlw	high _TMR6_DefaultInterruptHandler
 29262  01B256  6EE6               	movwf	postinc1,c
 29263  01B258  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29264  01B25A  6EE6               	movwf	postinc1,c
 29265  01B25C  ECBF  F0D9         	call	_TMR6_SetInterruptHandler	;wreg free
 29266                           
 29267                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29268  01B260  0EE0               	movlw	224
 29269  01B262  6E94               	movwf	148,c	;volatile
 29270                           
 29271                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29272  01B264  0012               	return		;funcret
 29273  01B266                     __end_of_TMR6_Initialize:
 29274                           	opt callstack 0
 29275                           
 29276 ;; *************** function _TMR6_SetInterruptHandler *****************
 29277 ;; Defined at:
 29278 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29279 ;; Parameters:    Size  Location     Type
 29280 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29281 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29282 ;; Auto vars:     Size  Location     Type
 29283 ;;		None
 29284 ;; Return value:  Size  Location     Type
 29285 ;;                  1  [STACK] void 
 29286 ;; Registers used:
 29287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29288 ;; Tracked objects:
 29289 ;;		On entry : 3F/39
 29290 ;;		On exit  : 0/0
 29291 ;;		Unchanged: 0/0
 29292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29297 ;;Total ram usage:        0 bytes
 29298 ;; Hardware stack levels used:    1
 29299 ;; Hardware stack levels required when called:   15
 29300 ;; This function calls:
 29301 ;;		Nothing
 29302 ;; This function is called by:
 29303 ;;		_TMR6_Initialize
 29304 ;; This function uses a reentrant model
 29305 ;;
 29306                           
 29307                           	psect	text114
 29308  01B37E                     __ptext114:
 29309                           	opt callstack 0
 29310  01B37E                     _TMR6_SetInterruptHandler:
 29311                           	opt callstack 13
 29312                           
 29313                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29314                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29315                           
 29316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29317                           ;incstack = 0
 29318  01B37E  50E1               	movf	fsr1l,w,c
 29319  01B380  0FFD               	addlw	-3
 29320  01B382  6ED9               	movwf	fsr2l,c
 29321  01B384  50E2               	movf	fsr1h,w,c
 29322  01B386  6EDA               	movwf	fsr2h,c
 29323  01B388  0EFF               	movlw	255
 29324  01B38A  22DA               	addwfc	fsr2h,f,c
 29325  01B38C  006F FF78  F0A0    	movff	postinc2,_TMR6_InterruptHandler
 29326  01B392  006F FF78  F0A1    	movff	postinc2,_TMR6_InterruptHandler+1
 29327  01B398  006F FF74  F0A2    	movff	postdec2,_TMR6_InterruptHandler+2
 29328                           
 29329                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29330  01B39E  52E5               	movf	postdec1,f,c
 29331  01B3A0  52E5               	movf	postdec1,f,c
 29332  01B3A2  52E5               	movf	postdec1,f,c
 29333  01B3A4  0012               	return		;funcret
 29334  01B3A6                     __end_of_TMR6_SetInterruptHandler:
 29335                           	opt callstack 0
 29336                           
 29337 ;; *************** function _TMR5_Initialize *****************
 29338 ;; Defined at:
 29339 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 29340 ;; Parameters:    Size  Location     Type
 29341 ;;		None
 29342 ;; Auto vars:     Size  Location     Type
 29343 ;;		None
 29344 ;; Return value:  Size  Location     Type
 29345 ;;                  1  [STACK] void 
 29346 ;; Registers used:
 29347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29348 ;; Tracked objects:
 29349 ;;		On entry : 0/39
 29350 ;;		On exit  : 0/0
 29351 ;;		Unchanged: 0/0
 29352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29357 ;;Total ram usage:        0 bytes
 29358 ;; Hardware stack levels used:    1
 29359 ;; Hardware stack levels required when called:   16
 29360 ;; This function calls:
 29361 ;;		_TMR5_SetInterruptHandler
 29362 ;; This function is called by:
 29363 ;;		_SYSTEM_Initialize
 29364 ;; This function uses a reentrant model
 29365 ;;
 29366                           
 29367                           	psect	text115
 29368  01ACCA                     __ptext115:
 29369                           	opt callstack 0
 29370  01ACCA                     _TMR5_Initialize:
 29371                           	opt callstack 13
 29372                           
 29373                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 29374                           
 29375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29376                           ;incstack = 0
 29377  01ACCA  6A9B               	clrf	155,c	;volatile
 29378                           
 29379                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 29380  01ACCC  6A9C               	clrf	156,c	;volatile
 29381                           
 29382                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 29383  01ACCE  0E01               	movlw	1
 29384  01ACD0  6E9D               	movwf	157,c	;volatile
 29385                           
 29386                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 29387  01ACD2  0E63               	movlw	99
 29388  01ACD4  6E99               	movwf	153,c	;volatile
 29389                           
 29390                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 29391  01ACD6  0EC0               	movlw	192
 29392  01ACD8  6E98               	movwf	152,c	;volatile
 29393                           
 29394                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 29395  01ACDA  5098               	movf	152,w,c	;volatile
 29396  01ACDC  006F FE64  F026    	movff	16281,btemp	;volatile
 29397  01ACE2  6A27               	clrf	(btemp+1)^0,c
 29398  01ACE4  0060  F098  F027   	movff	btemp,btemp+1
 29399  01ACEA  6A26               	clrf	btemp^0,c
 29400  01ACEC  1026               	iorwf	btemp^0,w,c
 29401  01ACEE  6E16               	movwf	_timer5ReloadVal^0,c	;volatile
 29402  01ACF0  5027               	movf	(btemp+1)^0,w,c
 29403  01ACF2  6E17               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 29404                           
 29405                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 29406  01ACF4  0139               	movlb	57	; () banked
 29407  01ACF6  9DA8               	bcf	168,6,b	;volatile
 29408                           
 29409                           ; BSR set to: 57
 29410                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 29411  01ACF8  8D98               	bsf	152,6,b	;volatile
 29412                           
 29413                           ; BSR set to: 57
 29414                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 29415  01ACFA  0E8C               	movlw	low _TMR5_DefaultInterruptHandler
 29416  01ACFC  6EE6               	movwf	postinc1,c
 29417  01ACFE  0EAF               	movlw	high _TMR5_DefaultInterruptHandler
 29418  01AD00  6EE6               	movwf	postinc1,c
 29419  01AD02  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 29420  01AD04  6EE6               	movwf	postinc1,c
 29421  01AD06  ECD3  F0D9         	call	_TMR5_SetInterruptHandler	;wreg free
 29422                           
 29423                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 29424  01AD0A  0E31               	movlw	49
 29425  01AD0C  6E9A               	movwf	154,c	;volatile
 29426                           
 29427                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29428  01AD0E  0012               	return		;funcret
 29429  01AD10                     __end_of_TMR5_Initialize:
 29430                           	opt callstack 0
 29431                           
 29432 ;; *************** function _TMR5_SetInterruptHandler *****************
 29433 ;; Defined at:
 29434 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 29435 ;; Parameters:    Size  Location     Type
 29436 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29437 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 29438 ;; Auto vars:     Size  Location     Type
 29439 ;;		None
 29440 ;; Return value:  Size  Location     Type
 29441 ;;                  1  [STACK] void 
 29442 ;; Registers used:
 29443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29444 ;; Tracked objects:
 29445 ;;		On entry : 3F/39
 29446 ;;		On exit  : 0/0
 29447 ;;		Unchanged: 0/0
 29448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29453 ;;Total ram usage:        0 bytes
 29454 ;; Hardware stack levels used:    1
 29455 ;; Hardware stack levels required when called:   15
 29456 ;; This function calls:
 29457 ;;		Nothing
 29458 ;; This function is called by:
 29459 ;;		_TMR5_Initialize
 29460 ;; This function uses a reentrant model
 29461 ;;
 29462                           
 29463                           	psect	text116
 29464  01B3A6                     __ptext116:
 29465                           	opt callstack 0
 29466  01B3A6                     _TMR5_SetInterruptHandler:
 29467                           	opt callstack 13
 29468                           
 29469                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 29470                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29471                           
 29472                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29473                           ;incstack = 0
 29474  01B3A6  50E1               	movf	fsr1l,w,c
 29475  01B3A8  0FFD               	addlw	-3
 29476  01B3AA  6ED9               	movwf	fsr2l,c
 29477  01B3AC  50E2               	movf	fsr1h,w,c
 29478  01B3AE  6EDA               	movwf	fsr2h,c
 29479  01B3B0  0EFF               	movlw	255
 29480  01B3B2  22DA               	addwfc	fsr2h,f,c
 29481  01B3B4  006F FF78  F09D    	movff	postinc2,_TMR5_InterruptHandler
 29482  01B3BA  006F FF78  F09E    	movff	postinc2,_TMR5_InterruptHandler+1
 29483  01B3C0  006F FF74  F09F    	movff	postdec2,_TMR5_InterruptHandler+2
 29484                           
 29485                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29486  01B3C6  52E5               	movf	postdec1,f,c
 29487  01B3C8  52E5               	movf	postdec1,f,c
 29488  01B3CA  52E5               	movf	postdec1,f,c
 29489  01B3CC  0012               	return		;funcret
 29490  01B3CE                     __end_of_TMR5_SetInterruptHandler:
 29491                           	opt callstack 0
 29492                           
 29493 ;; *************** function _TMR3_Initialize *****************
 29494 ;; Defined at:
 29495 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 29496 ;; Parameters:    Size  Location     Type
 29497 ;;		None
 29498 ;; Auto vars:     Size  Location     Type
 29499 ;;		None
 29500 ;; Return value:  Size  Location     Type
 29501 ;;                  1  [STACK] void 
 29502 ;; Registers used:
 29503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29504 ;; Tracked objects:
 29505 ;;		On entry : 0/39
 29506 ;;		On exit  : 0/0
 29507 ;;		Unchanged: 0/0
 29508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29513 ;;Total ram usage:        0 bytes
 29514 ;; Hardware stack levels used:    1
 29515 ;; Hardware stack levels required when called:   16
 29516 ;; This function calls:
 29517 ;;		_TMR3_SetInterruptHandler
 29518 ;; This function is called by:
 29519 ;;		_SYSTEM_Initialize
 29520 ;; This function uses a reentrant model
 29521 ;;
 29522                           
 29523                           	psect	text117
 29524  01AD10                     __ptext117:
 29525                           	opt callstack 0
 29526  01AD10                     _TMR3_Initialize:
 29527                           	opt callstack 13
 29528                           
 29529                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 29530                           
 29531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29532                           ;incstack = 0
 29533  01AD10  6AA7               	clrf	167,c	;volatile
 29534                           
 29535                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 29536  01AD12  6AA8               	clrf	168,c	;volatile
 29537                           
 29538                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 29539  01AD14  0E01               	movlw	1
 29540  01AD16  6EA9               	movwf	169,c	;volatile
 29541                           
 29542                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 29543  01AD18  0E3C               	movlw	60
 29544  01AD1A  6EA5               	movwf	165,c	;volatile
 29545                           
 29546                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 29547  01AD1C  0EB0               	movlw	176
 29548  01AD1E  6EA4               	movwf	164,c	;volatile
 29549                           
 29550                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 29551  01AD20  50A4               	movf	164,w,c	;volatile
 29552  01AD22  006F FE94  F026    	movff	16293,btemp	;volatile
 29553  01AD28  6A27               	clrf	(btemp+1)^0,c
 29554  01AD2A  0060  F098  F027   	movff	btemp,btemp+1
 29555  01AD30  6A26               	clrf	btemp^0,c
 29556  01AD32  1026               	iorwf	btemp^0,w,c
 29557  01AD34  6E12               	movwf	_timer3ReloadVal^0,c	;volatile
 29558  01AD36  5027               	movf	(btemp+1)^0,w,c
 29559  01AD38  6E13               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 29560                           
 29561                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 29562  01AD3A  0139               	movlb	57	; () banked
 29563  01AD3C  9DA6               	bcf	166,6,b	;volatile
 29564                           
 29565                           ; BSR set to: 57
 29566                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 29567  01AD3E  8D96               	bsf	150,6,b	;volatile
 29568                           
 29569                           ; BSR set to: 57
 29570                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 29571  01AD40  0ED4               	movlw	low _TMR3_DefaultInterruptHandler
 29572  01AD42  6EE6               	movwf	postinc1,c
 29573  01AD44  0EB8               	movlw	high _TMR3_DefaultInterruptHandler
 29574  01AD46  6EE6               	movwf	postinc1,c
 29575  01AD48  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 29576  01AD4A  6EE6               	movwf	postinc1,c
 29577  01AD4C  ECE7  F0D9         	call	_TMR3_SetInterruptHandler	;wreg free
 29578                           
 29579                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 29580  01AD50  0E31               	movlw	49
 29581  01AD52  6EA6               	movwf	166,c	;volatile
 29582                           
 29583                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29584  01AD54  0012               	return		;funcret
 29585  01AD56                     __end_of_TMR3_Initialize:
 29586                           	opt callstack 0
 29587                           
 29588 ;; *************** function _TMR3_SetInterruptHandler *****************
 29589 ;; Defined at:
 29590 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 29591 ;; Parameters:    Size  Location     Type
 29592 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29593 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 29594 ;; Auto vars:     Size  Location     Type
 29595 ;;		None
 29596 ;; Return value:  Size  Location     Type
 29597 ;;                  1  [STACK] void 
 29598 ;; Registers used:
 29599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29600 ;; Tracked objects:
 29601 ;;		On entry : 0/1
 29602 ;;		On exit  : 0/0
 29603 ;;		Unchanged: 0/0
 29604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29609 ;;Total ram usage:        0 bytes
 29610 ;; Hardware stack levels used:    1
 29611 ;; Hardware stack levels required when called:   15
 29612 ;; This function calls:
 29613 ;;		Nothing
 29614 ;; This function is called by:
 29615 ;;		_TMR3_Initialize
 29616 ;;		_init_bsoc
 29617 ;; This function uses a reentrant model
 29618 ;;
 29619                           
 29620                           	psect	text118
 29621  01B3CE                     __ptext118:
 29622                           	opt callstack 0
 29623  01B3CE                     _TMR3_SetInterruptHandler:
 29624                           	opt callstack 14
 29625                           
 29626                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 29627                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29628                           
 29629                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29630                           ;incstack = 0
 29631  01B3CE  50E1               	movf	fsr1l,w,c
 29632  01B3D0  0FFD               	addlw	-3
 29633  01B3D2  6ED9               	movwf	fsr2l,c
 29634  01B3D4  50E2               	movf	fsr1h,w,c
 29635  01B3D6  6EDA               	movwf	fsr2h,c
 29636  01B3D8  0EFF               	movlw	255
 29637  01B3DA  22DA               	addwfc	fsr2h,f,c
 29638  01B3DC  006F FF78  F09A    	movff	postinc2,_TMR3_InterruptHandler
 29639  01B3E2  006F FF78  F09B    	movff	postinc2,_TMR3_InterruptHandler+1
 29640  01B3E8  006F FF74  F09C    	movff	postdec2,_TMR3_InterruptHandler+2
 29641                           
 29642                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29643  01B3EE  52E5               	movf	postdec1,f,c
 29644  01B3F0  52E5               	movf	postdec1,f,c
 29645  01B3F2  52E5               	movf	postdec1,f,c
 29646  01B3F4  0012               	return		;funcret
 29647  01B3F6                     __end_of_TMR3_SetInterruptHandler:
 29648                           	opt callstack 0
 29649                           
 29650 ;; *************** function _TMR2_Initialize *****************
 29651 ;; Defined at:
 29652 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 29653 ;; Parameters:    Size  Location     Type
 29654 ;;		None
 29655 ;; Auto vars:     Size  Location     Type
 29656 ;;		None
 29657 ;; Return value:  Size  Location     Type
 29658 ;;                  1  [STACK] void 
 29659 ;; Registers used:
 29660 ;;		wreg, status,2
 29661 ;; Tracked objects:
 29662 ;;		On entry : 0/3E
 29663 ;;		On exit  : 3F/39
 29664 ;;		Unchanged: 0/0
 29665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29670 ;;Total ram usage:        0 bytes
 29671 ;; Hardware stack levels used:    1
 29672 ;; Hardware stack levels required when called:   15
 29673 ;; This function calls:
 29674 ;;		Nothing
 29675 ;; This function is called by:
 29676 ;;		_SYSTEM_Initialize
 29677 ;; This function uses a reentrant model
 29678 ;;
 29679                           
 29680                           	psect	text119
 29681  01B766                     __ptext119:
 29682                           	opt callstack 0
 29683  01B766                     _TMR2_Initialize:
 29684                           	opt callstack 14
 29685                           
 29686                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 29687                           
 29688                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29689                           ;incstack = 0
 29690  01B766  0E01               	movlw	1
 29691  01B768  6EAE               	movwf	174,c	;volatile
 29692                           
 29693                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 29694  01B76A  6AAD               	clrf	173,c	;volatile
 29695                           
 29696                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 29697  01B76C  6AAF               	clrf	175,c	;volatile
 29698                           
 29699                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 29700  01B76E  0E63               	movlw	99
 29701  01B770  6EAB               	movwf	171,c	;volatile
 29702                           
 29703                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 29704  01B772  6AAA               	clrf	170,c	;volatile
 29705                           
 29706                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 29707  01B774  0139               	movlb	57	; () banked
 29708  01B776  95A4               	bcf	164,2,b	;volatile
 29709                           
 29710                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 29711  01B778  0EC0               	movlw	192
 29712  01B77A  6EAC               	movwf	172,c	;volatile
 29713                           
 29714                           ; BSR set to: 57
 29715                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29716  01B77C  0012               	return		;funcret
 29717  01B77E                     __end_of_TMR2_Initialize:
 29718                           	opt callstack 0
 29719                           
 29720 ;; *************** function _SPI1_Initialize *****************
 29721 ;; Defined at:
 29722 ;;		line 64 in file "mcc_generated_files/spi1.c"
 29723 ;; Parameters:    Size  Location     Type
 29724 ;;		None
 29725 ;; Auto vars:     Size  Location     Type
 29726 ;;		None
 29727 ;; Return value:  Size  Location     Type
 29728 ;;                  1  [STACK] void 
 29729 ;; Registers used:
 29730 ;;		wreg, status,2
 29731 ;; Tracked objects:
 29732 ;;		On entry : 3F/39
 29733 ;;		On exit  : 3F/3D
 29734 ;;		Unchanged: 0/0
 29735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29740 ;;Total ram usage:        0 bytes
 29741 ;; Hardware stack levels used:    1
 29742 ;; Hardware stack levels required when called:   15
 29743 ;; This function calls:
 29744 ;;		Nothing
 29745 ;; This function is called by:
 29746 ;;		_SYSTEM_Initialize
 29747 ;; This function uses a reentrant model
 29748 ;;
 29749                           
 29750                           	psect	text120
 29751  01B77E                     __ptext120:
 29752                           	opt callstack 0
 29753  01B77E                     _SPI1_Initialize:
 29754                           	opt callstack 14
 29755                           
 29756                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 29757                           
 29758                           ; BSR set to: 57
 29759                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29760                           ;incstack = 0
 29761  01B77E  0E40               	movlw	64
 29762  01B780  013D               	movlb	61	; () banked
 29763  01B782  6F15               	movwf	21,b	;volatile
 29764                           
 29765                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 29766  01B784  0E03               	movlw	3
 29767  01B786  6F16               	movwf	22,b	;volatile
 29768                           
 29769                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 29770  01B788  0E4F               	movlw	79
 29771  01B78A  6F19               	movwf	25,b	;volatile
 29772                           
 29773                           ; BSR set to: 61
 29774                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 29775  01B78C  6B1C               	clrf	28,b	;volatile
 29776                           
 29777                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 29778  01B78E  0E83               	movlw	131
 29779  01B790  6F14               	movwf	20,b	;volatile
 29780                           
 29781                           ; BSR set to: 61
 29782                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29783  01B792  0012               	return		;funcret
 29784  01B794                     __end_of_SPI1_Initialize:
 29785                           	opt callstack 0
 29786                           
 29787 ;; *************** function _PWM8_Initialize *****************
 29788 ;; Defined at:
 29789 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 29790 ;; Parameters:    Size  Location     Type
 29791 ;;		None
 29792 ;; Auto vars:     Size  Location     Type
 29793 ;;		None
 29794 ;; Return value:  Size  Location     Type
 29795 ;;                  1  [STACK] void 
 29796 ;; Registers used:
 29797 ;;		wreg, status,2
 29798 ;; Tracked objects:
 29799 ;;		On entry : 3F/39
 29800 ;;		On exit  : 3F/3F
 29801 ;;		Unchanged: 0/0
 29802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29807 ;;Total ram usage:        0 bytes
 29808 ;; Hardware stack levels used:    1
 29809 ;; Hardware stack levels required when called:   15
 29810 ;; This function calls:
 29811 ;;		Nothing
 29812 ;; This function is called by:
 29813 ;;		_SYSTEM_Initialize
 29814 ;; This function uses a reentrant model
 29815 ;;
 29816                           
 29817                           	psect	text121
 29818  01B794                     __ptext121:
 29819                           	opt callstack 0
 29820  01B794                     _PWM8_Initialize:
 29821                           	opt callstack 14
 29822                           
 29823                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 29824                           
 29825                           ; BSR set to: 61
 29826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29827                           ;incstack = 0
 29828  01B794  0E80               	movlw	128
 29829  01B796  6E62               	movwf	98,c	;volatile
 29830                           
 29831                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 29832  01B798  6A61               	clrf	97,c	;volatile
 29833                           
 29834                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 29835  01B79A  0E40               	movlw	64
 29836  01B79C  6E60               	movwf	96,c	;volatile
 29837                           
 29838                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 29839  01B79E  013F               	movlb	63	; () banked
 29840  01B7A0  515F               	movf	95,w,b	;volatile
 29841  01B7A2  0B3F               	andlw	-193
 29842  01B7A4  0940               	iorlw	64
 29843  01B7A6  6F5F               	movwf	95,b	;volatile
 29844                           
 29845                           ; BSR set to: 63
 29846                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29847  01B7A8  0012               	return		;funcret
 29848  01B7AA                     __end_of_PWM8_Initialize:
 29849                           	opt callstack 0
 29850                           
 29851 ;; *************** function _PMD_Initialize *****************
 29852 ;; Defined at:
 29853 ;;		line 90 in file "mcc_generated_files/mcc.c"
 29854 ;; Parameters:    Size  Location     Type
 29855 ;;		None
 29856 ;; Auto vars:     Size  Location     Type
 29857 ;;		None
 29858 ;; Return value:  Size  Location     Type
 29859 ;;                  1  [STACK] void 
 29860 ;; Registers used:
 29861 ;;		None
 29862 ;; Tracked objects:
 29863 ;;		On entry : 3F/39
 29864 ;;		On exit  : 3F/39
 29865 ;;		Unchanged: 0/0
 29866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29871 ;;Total ram usage:        0 bytes
 29872 ;; Hardware stack levels used:    1
 29873 ;; Hardware stack levels required when called:   15
 29874 ;; This function calls:
 29875 ;;		Nothing
 29876 ;; This function is called by:
 29877 ;;		_SYSTEM_Initialize
 29878 ;; This function uses a reentrant model
 29879 ;;
 29880                           
 29881                           	psect	text122
 29882  01B7C0                     __ptext122:
 29883                           	opt callstack 0
 29884  01B7C0                     _PMD_Initialize:
 29885                           	opt callstack 14
 29886                           
 29887                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 29888                           
 29889                           ; BSR set to: 63
 29890                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29891                           ;incstack = 0
 29892  01B7C0  0139               	movlb	57	; () banked
 29893  01B7C2  6BC0               	clrf	192,b	;volatile
 29894                           
 29895                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 29896  01B7C4  6BC1               	clrf	193,b	;volatile
 29897                           
 29898                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 29899  01B7C6  6BC2               	clrf	194,b	;volatile
 29900                           
 29901                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 29902  01B7C8  6BC3               	clrf	195,b	;volatile
 29903                           
 29904                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 29905  01B7CA  6BC4               	clrf	196,b	;volatile
 29906                           
 29907                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 29908  01B7CC  6BC5               	clrf	197,b	;volatile
 29909                           
 29910                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 29911  01B7CE  6BC6               	clrf	198,b	;volatile
 29912                           
 29913                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 29914  01B7D0  6BC7               	clrf	199,b	;volatile
 29915                           
 29916                           ; BSR set to: 57
 29917                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29918  01B7D2  0012               	return		;funcret
 29919  01B7D4                     __end_of_PMD_Initialize:
 29920                           	opt callstack 0
 29921                           
 29922 ;; *************** function _PIN_MANAGER_Initialize *****************
 29923 ;; Defined at:
 29924 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 29925 ;; Parameters:    Size  Location     Type
 29926 ;;		None
 29927 ;; Auto vars:     Size  Location     Type
 29928 ;;		None
 29929 ;; Return value:  Size  Location     Type
 29930 ;;                  1  [STACK] void 
 29931 ;; Registers used:
 29932 ;;		wreg, status,2
 29933 ;; Tracked objects:
 29934 ;;		On entry : 3F/39
 29935 ;;		On exit  : 3F/3A
 29936 ;;		Unchanged: 0/0
 29937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29942 ;;Total ram usage:        0 bytes
 29943 ;; Hardware stack levels used:    1
 29944 ;; Hardware stack levels required when called:   15
 29945 ;; This function calls:
 29946 ;;		Nothing
 29947 ;; This function is called by:
 29948 ;;		_SYSTEM_Initialize
 29949 ;; This function uses a reentrant model
 29950 ;;
 29951                           
 29952                           	psect	text123
 29953  01A1EC                     __ptext123:
 29954                           	opt callstack 0
 29955  01A1EC                     _PIN_MANAGER_Initialize:
 29956                           	opt callstack 14
 29957                           
 29958                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 29959                           
 29960                           ; BSR set to: 57
 29961                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29962                           ;incstack = 0
 29963  01A1EC  0E07               	movlw	7
 29964  01A1EE  6EBE               	movwf	190,c	;volatile
 29965                           
 29966                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 29967  01A1F0  0E80               	movlw	128
 29968  01A1F2  6EBD               	movwf	189,c	;volatile
 29969                           
 29970                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 29971  01A1F4  6ABA               	clrf	186,c	;volatile
 29972                           
 29973                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x20;
 29974  01A1F6  0E20               	movlw	32
 29975  01A1F8  6EBF               	movwf	191,c	;volatile
 29976                           
 29977                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 29978  01A1FA  6ABB               	clrf	187,c	;volatile
 29979                           
 29980                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 29981  01A1FC  0E07               	movlw	7
 29982  01A1FE  6EBC               	movwf	188,c	;volatile
 29983                           
 29984                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 29985  01A200  6AC6               	clrf	198,c	;volatile
 29986                           
 29987                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 29988  01A202  0E0F               	movlw	15
 29989  01A204  6EC7               	movwf	199,c	;volatile
 29990                           
 29991                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 29992  01A206  68C2               	setf	194,c	;volatile
 29993                           
 29994                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 29995  01A208  0EBF               	movlw	191
 29996  01A20A  6EC3               	movwf	195,c	;volatile
 29997                           
 29998                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 29999  01A20C  0E90               	movlw	144
 30000  01A20E  6EC4               	movwf	196,c	;volatile
 30001                           
 30002                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 30003  01A210  0E0C               	movlw	12
 30004  01A212  6EC5               	movwf	197,c	;volatile
 30005                           
 30006                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 30007  01A214  013A               	movlb	58	; () banked
 30008  01A216  6B70               	clrf	112,b	;volatile
 30009                           
 30010                           ; BSR set to: 58
 30011                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 30012  01A218  6B60               	clrf	96,b	;volatile
 30013                           
 30014                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 30015  01A21A  0E3C               	movlw	60
 30016  01A21C  6F50               	movwf	80,b	;volatile
 30017                           
 30018                           ; BSR set to: 58
 30019                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 30020  01A21E  6B80               	clrf	128,b	;volatile
 30021                           
 30022                           ; BSR set to: 58
 30023                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 30024  01A220  6B90               	clrf	144,b	;volatile
 30025                           
 30026                           ; BSR set to: 58
 30027                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 30028  01A222  6940               	setf	64,b	;volatile
 30029                           
 30030                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 30031  01A224  0E0C               	movlw	12
 30032  01A226  6F71               	movwf	113,b	;volatile
 30033                           
 30034                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 30035  01A228  0E0F               	movlw	15
 30036  01A22A  6F91               	movwf	145,b	;volatile
 30037                           
 30038                           ; BSR set to: 58
 30039                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 30040  01A22C  6B81               	clrf	129,b	;volatile
 30041                           
 30042                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 30043  01A22E  0E83               	movlw	131
 30044  01A230  6F51               	movwf	81,b	;volatile
 30045                           
 30046                           ; BSR set to: 58
 30047                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 30048  01A232  6B41               	clrf	65,b	;volatile
 30049                           
 30050                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 30051  01A234  0E97               	movlw	151
 30052  01A236  6F61               	movwf	97,b	;volatile
 30053                           
 30054                           ; BSR set to: 58
 30055                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 30056  01A238  6B82               	clrf	130,b	;volatile
 30057                           
 30058                           ; BSR set to: 58
 30059                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 30060  01A23A  6B92               	clrf	146,b	;volatile
 30061                           
 30062                           ; BSR set to: 58
 30063                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 30064  01A23C  6B42               	clrf	66,b	;volatile
 30065                           
 30066                           ; BSR set to: 58
 30067                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30068  01A23E  6B52               	clrf	82,b	;volatile
 30069                           
 30070                           ; BSR set to: 58
 30071                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30072  01A240  6B62               	clrf	98,b	;volatile
 30073                           
 30074                           ; BSR set to: 58
 30075                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30076  01A242  6B72               	clrf	114,b	;volatile
 30077                           
 30078                           ; BSR set to: 58
 30079                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30080  01A244  6943               	setf	67,b	;volatile
 30081                           
 30082                           ; BSR set to: 58
 30083                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30084  01A246  6953               	setf	83,b	;volatile
 30085                           
 30086                           ; BSR set to: 58
 30087                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30088  01A248  6963               	setf	99,b	;volatile
 30089                           
 30090                           ; BSR set to: 58
 30091                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30092  01A24A  6973               	setf	115,b	;volatile
 30093                           
 30094                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30095  01A24C  0E07               	movlw	7
 30096  01A24E  6F83               	movwf	131,b	;volatile
 30097                           
 30098                           ; BSR set to: 58
 30099                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30100  01A250  6993               	setf	147,b	;volatile
 30101                           
 30102                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30103  01A252  0E0F               	movlw	15
 30104  01A254  6FE8               	movwf	232,b	;volatile
 30105                           
 30106                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30107  01A256  0E13               	movlw	19
 30108  01A258  6FDE               	movwf	222,b	;volatile
 30109                           
 30110                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30111  01A25A  0E16               	movlw	22
 30112  01A25C  6F0E               	movwf	14,b	;volatile
 30113                           
 30114                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30115  01A25E  0E1E               	movlw	30
 30116  01A260  6F13               	movwf	19,b	;volatile
 30117                           
 30118                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30119  01A262  0E08               	movlw	8
 30120  01A264  6FC0               	movwf	192,b	;volatile
 30121                           
 30122                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30123  01A266  0E10               	movlw	16
 30124  01A268  6F19               	movwf	25,b	;volatile
 30125                           
 30126                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30127  01A26A  0E09               	movlw	9
 30128  01A26C  6FC1               	movwf	193,b	;volatile
 30129                           
 30130                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30131  01A26E  0E1F               	movlw	31
 30132  01A270  6F15               	movwf	21,b	;volatile
 30133                           
 30134                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30135  01A272  0E13               	movlw	19
 30136  01A274  6F16               	movwf	22,b	;volatile
 30137                           
 30138                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30139  01A276  0E17               	movlw	23
 30140  01A278  6FE5               	movwf	229,b	;volatile
 30141                           
 30142                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30143  01A27A  0E14               	movlw	20
 30144  01A27C  6FDF               	movwf	223,b	;volatile
 30145                           
 30146                           ; BSR set to: 58
 30147                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30148  01A27E  0012               	return		;funcret
 30149  01A280                     __end_of_PIN_MANAGER_Initialize:
 30150                           	opt callstack 0
 30151                           
 30152 ;; *************** function _OSCILLATOR_Initialize *****************
 30153 ;; Defined at:
 30154 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30155 ;; Parameters:    Size  Location     Type
 30156 ;;		None
 30157 ;; Auto vars:     Size  Location     Type
 30158 ;;		None
 30159 ;; Return value:  Size  Location     Type
 30160 ;;                  1  [STACK] void 
 30161 ;; Registers used:
 30162 ;;		wreg, status,2
 30163 ;; Tracked objects:
 30164 ;;		On entry : 3F/3A
 30165 ;;		On exit  : 3F/39
 30166 ;;		Unchanged: 0/0
 30167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30172 ;;Total ram usage:        0 bytes
 30173 ;; Hardware stack levels used:    1
 30174 ;; Hardware stack levels required when called:   15
 30175 ;; This function calls:
 30176 ;;		Nothing
 30177 ;; This function is called by:
 30178 ;;		_SYSTEM_Initialize
 30179 ;; This function uses a reentrant model
 30180 ;;
 30181                           
 30182                           	psect	text124
 30183  01B7AA                     __ptext124:
 30184                           	opt callstack 0
 30185  01B7AA                     _OSCILLATOR_Initialize:
 30186                           	opt callstack 14
 30187                           
 30188                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30189                           
 30190                           ; BSR set to: 58
 30191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30192                           ;incstack = 0
 30193  01B7AA  0E20               	movlw	32
 30194  01B7AC  0139               	movlb	57	; () banked
 30195  01B7AE  6FD9               	movwf	217,b	;volatile
 30196                           
 30197                           ; BSR set to: 57
 30198                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30199  01B7B0  6BDB               	clrf	219,b	;volatile
 30200                           
 30201                           ; BSR set to: 57
 30202                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30203  01B7B2  6BDD               	clrf	221,b	;volatile
 30204                           
 30205                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30206  01B7B4  0E02               	movlw	2
 30207  01B7B6  6FDF               	movwf	223,b	;volatile
 30208                           
 30209                           ; BSR set to: 57
 30210                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30211  01B7B8  6BDE               	clrf	222,b	;volatile
 30212  01B7BA                     l169:
 30213                           
 30214                           ; BSR set to: 57
 30215                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30216  01B7BA  B1DC               	btfsc	220,0,b	;volatile
 30217  01B7BC  0012               	return	
 30218  01B7BE  D7FD               	goto	l169
 30219  01B7C0                     __end_of_OSCILLATOR_Initialize:
 30220                           	opt callstack 0
 30221                           
 30222 ;; *************** function _INTERRUPT_Initialize *****************
 30223 ;; Defined at:
 30224 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30225 ;; Parameters:    Size  Location     Type
 30226 ;;		None
 30227 ;; Auto vars:     Size  Location     Type
 30228 ;;  state           1  [STACK] _Bool 
 30229 ;; Return value:  Size  Location     Type
 30230 ;;                  1  [STACK] void 
 30231 ;; Registers used:
 30232 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30233 ;; Tracked objects:
 30234 ;;		On entry : 0/0
 30235 ;;		On exit  : 3F/39
 30236 ;;		Unchanged: 0/0
 30237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30242 ;;Total ram usage:        0 bytes
 30243 ;; Hardware stack levels used:    1
 30244 ;; Hardware stack levels required when called:   15
 30245 ;; This function calls:
 30246 ;;		Nothing
 30247 ;; This function is called by:
 30248 ;;		_SYSTEM_Initialize
 30249 ;; This function uses a reentrant model
 30250 ;;
 30251                           
 30252                           	psect	text125
 30253  01A782                     __ptext125:
 30254                           	opt callstack 0
 30255  01A782                     _INTERRUPT_Initialize:
 30256                           	opt callstack 0
 30257                           
 30258                           ; BSR set to: 57
 30259                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30260  01A782  52E6               	movf	postinc1,f,c
 30261                           
 30262                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30263                           
 30264                           ;incstack = 0
 30265  01A784  8AD2               	bsf	210,5,c	;volatile
 30266                           
 30267                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30268  01A786  AED2               	btfss	16338,7,c	;volatile
 30269  01A788  D003               	goto	u9220
 30270  01A78A  6A31               	clrf	(btemp+11)^0,c
 30271  01A78C  2A31               	incf	(btemp+11)^0,f,c
 30272  01A78E  D001               	goto	u9238
 30273  01A790                     u9220:
 30274  01A790  6A31               	clrf	(btemp+11)^0,c
 30275  01A792                     u9238:
 30276                           
 30277                           ;stkvar	_state @ sp[(-1)+0]
 30278  01A792  0EFF               	movlw	-1
 30279  01A794  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 30280                           
 30281                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30282  01A79A  9ED2               	bcf	16338,7,c	;volatile
 30283                           
 30284                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30285  01A79C  0E55               	movlw	85
 30286  01A79E  6ED4               	movwf	212,c	;volatile
 30287                           
 30288                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30289  01A7A0  0EAA               	movlw	170
 30290  01A7A2  6ED4               	movwf	212,c	;volatile
 30291                           
 30292                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30293  01A7A4  90D4               	bcf	212,0,c	;volatile
 30294                           
 30295                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30296  01A7A6  0138               	movlb	56	; () banked
 30297  01A7A8  6B9F               	clrf	159,b	;volatile
 30298                           
 30299                           ; BSR set to: 56
 30300                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30301  01A7AA  6B9E               	clrf	158,b	;volatile
 30302                           
 30303                           ; BSR set to: 56
 30304                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30305  01A7AC  0E08               	movlw	8
 30306  01A7AE  6F9D               	movwf	157,b	;volatile
 30307                           
 30308                           ; BSR set to: 56
 30309                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30310  01A7B0  0E55               	movlw	85
 30311  01A7B2  6ED4               	movwf	212,c	;volatile
 30312                           
 30313                           ; BSR set to: 56
 30314                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30315  01A7B4  0EAA               	movlw	170
 30316  01A7B6  6ED4               	movwf	212,c	;volatile
 30317                           
 30318                           ; BSR set to: 56
 30319                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30320  01A7B8  80D4               	bsf	212,0,c	;volatile
 30321                           
 30322                           ; BSR set to: 56
 30323                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30324                           ;stkvar	_state @ sp[(-1)+0]
 30325  01A7BA  0EFF               	movlw	-1
 30326  01A7BC  B0E3               	btfsc	plusw1,0,c
 30327  01A7BE  D002               	bra	u9245
 30328  01A7C0  9ED2               	bcf	16338,7,c	;volatile
 30329  01A7C2  D001               	bra	u9246
 30330  01A7C4                     u9245:
 30331  01A7C4  8ED2               	bsf	16338,7,c	;volatile
 30332  01A7C6                     u9246:
 30333                           
 30334                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 30335  01A7C6  0139               	movlb	57	; () banked
 30336  01A7C8  8782               	bsf	130,3,b	;volatile
 30337                           
 30338                           ; BSR set to: 57
 30339                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 30340  01A7CA  8382               	bsf	130,1,b	;volatile
 30341                           
 30342                           ; BSR set to: 57
 30343                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 30344  01A7CC  8182               	bsf	130,0,b	;volatile
 30345                           
 30346                           ; BSR set to: 57
 30347                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 30348  01A7CE  8582               	bsf	130,2,b	;volatile
 30349                           
 30350                           ; BSR set to: 57
 30351                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 30352  01A7D0  8786               	bsf	134,3,b	;volatile
 30353                           
 30354                           ; BSR set to: 57
 30355                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 30356  01A7D2  8586               	bsf	134,2,b	;volatile
 30357                           
 30358                           ; BSR set to: 57
 30359                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 30360  01A7D4  8783               	bsf	131,3,b	;volatile
 30361                           
 30362                           ; BSR set to: 57
 30363                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 30364  01A7D6  8181               	bsf	129,0,b	;volatile
 30365                           
 30366                           ; BSR set to: 57
 30367                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 30368  01A7D8  9185               	bcf	133,0,b	;volatile
 30369                           
 30370                           ; BSR set to: 57
 30371                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 30372  01A7DA  8189               	bsf	137,0,b	;volatile
 30373                           
 30374                           ; BSR set to: 57
 30375                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 30376  01A7DC  9D88               	bcf	136,6,b	;volatile
 30377                           
 30378                           ; BSR set to: 57
 30379                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 30380  01A7DE  8581               	bsf	129,2,b	;volatile
 30381                           
 30382                           ; BSR set to: 57
 30383                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 30384  01A7E0  8781               	bsf	129,3,b	;volatile
 30385                           
 30386                           ; BSR set to: 57
 30387                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 30388  01A7E2  9D86               	bcf	134,6,b	;volatile
 30389                           
 30390                           ; BSR set to: 57
 30391                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 30392  01A7E4  52E5               	movf	postdec1,f,c
 30393  01A7E6  0012               	return		;funcret
 30394  01A7E8                     __end_of_INTERRUPT_Initialize:
 30395                           	opt callstack 0
 30396                           
 30397 ;; *************** function _FVR_Initialize *****************
 30398 ;; Defined at:
 30399 ;;		line 58 in file "mcc_generated_files/fvr.c"
 30400 ;; Parameters:    Size  Location     Type
 30401 ;;		None
 30402 ;; Auto vars:     Size  Location     Type
 30403 ;;		None
 30404 ;; Return value:  Size  Location     Type
 30405 ;;                  1  [STACK] void 
 30406 ;; Registers used:
 30407 ;;		wreg, status,2
 30408 ;; Tracked objects:
 30409 ;;		On entry : 3F/39
 30410 ;;		On exit  : 3F/3E
 30411 ;;		Unchanged: 0/0
 30412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30417 ;;Total ram usage:        0 bytes
 30418 ;; Hardware stack levels used:    1
 30419 ;; Hardware stack levels required when called:   15
 30420 ;; This function calls:
 30421 ;;		Nothing
 30422 ;; This function is called by:
 30423 ;;		_SYSTEM_Initialize
 30424 ;; This function uses a reentrant model
 30425 ;;
 30426                           
 30427                           	psect	text126
 30428  01B8AA                     __ptext126:
 30429                           	opt callstack 0
 30430  01B8AA                     _FVR_Initialize:
 30431                           	opt callstack 14
 30432                           
 30433                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 30434                           
 30435                           ; BSR set to: 57
 30436                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30437                           ;incstack = 0
 30438  01B8AA  0EAF               	movlw	175
 30439  01B8AC  013E               	movlb	62	; () banked
 30440  01B8AE  6FC1               	movwf	193,b	;volatile
 30441                           
 30442                           ; BSR set to: 62
 30443                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30444  01B8B0  0012               	return		;funcret
 30445  01B8B2                     __end_of_FVR_Initialize:
 30446                           	opt callstack 0
 30447                           
 30448 ;; *************** function _EXT_INT_Initialize *****************
 30449 ;; Defined at:
 30450 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 30451 ;; Parameters:    Size  Location     Type
 30452 ;;		None
 30453 ;; Auto vars:     Size  Location     Type
 30454 ;;		None
 30455 ;; Return value:  Size  Location     Type
 30456 ;;                  1  [STACK] void 
 30457 ;; Registers used:
 30458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30459 ;; Tracked objects:
 30460 ;;		On entry : 3F/3F
 30461 ;;		On exit  : 3F/39
 30462 ;;		Unchanged: 0/0
 30463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30468 ;;Total ram usage:        0 bytes
 30469 ;; Hardware stack levels used:    1
 30470 ;; Hardware stack levels required when called:   16
 30471 ;; This function calls:
 30472 ;;		_INT0_SetInterruptHandler
 30473 ;;		_INT1_SetInterruptHandler
 30474 ;; This function is called by:
 30475 ;;		_SYSTEM_Initialize
 30476 ;; This function uses a reentrant model
 30477 ;;
 30478                           
 30479                           	psect	text127
 30480  01B064                     __ptext127:
 30481                           	opt callstack 0
 30482  01B064                     _EXT_INT_Initialize:
 30483                           	opt callstack 13
 30484                           
 30485                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 30486                           
 30487                           ; BSR set to: 62
 30488                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30489                           ;incstack = 0
 30490  01B064  0139               	movlb	57	; () banked
 30491  01B066  91A1               	bcf	161,0,b	;volatile
 30492                           
 30493                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 30494  01B068  90D2               	bcf	210,0,c	;volatile
 30495                           
 30496                           ; BSR set to: 57
 30497                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 30498  01B06A  0ED6               	movlw	low _INT0_DefaultInterruptHandler
 30499  01B06C  6EE6               	movwf	postinc1,c
 30500  01B06E  0EB8               	movlw	high _INT0_DefaultInterruptHandler
 30501  01B070  6EE6               	movwf	postinc1,c
 30502  01B072  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 30503  01B074  6EE6               	movwf	postinc1,c
 30504  01B076  EC0F  F0DA         	call	_INT0_SetInterruptHandler	;wreg free
 30505                           
 30506                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 30507  01B07A  0139               	movlb	57	; () banked
 30508  01B07C  8191               	bsf	145,0,b	;volatile
 30509                           
 30510                           ; BSR set to: 57
 30511                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 30512  01B07E  91A5               	bcf	165,0,b	;volatile
 30513                           
 30514                           ; BSR set to: 57
 30515                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 30516  01B080  92D2               	bcf	210,1,c	;volatile
 30517                           
 30518                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 30519  01B082  0ED2               	movlw	low _INT1_DefaultInterruptHandler
 30520  01B084  6EE6               	movwf	postinc1,c
 30521  01B086  0EB8               	movlw	high _INT1_DefaultInterruptHandler
 30522  01B088  6EE6               	movwf	postinc1,c
 30523  01B08A  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 30524  01B08C  6EE6               	movwf	postinc1,c
 30525  01B08E  ECFB  F0D9         	call	_INT1_SetInterruptHandler	;wreg free
 30526                           
 30527                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 30528  01B092  0139               	movlb	57	; () banked
 30529  01B094  8195               	bsf	149,0,b	;volatile
 30530                           
 30531                           ; BSR set to: 57
 30532                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30533  01B096  0012               	return		;funcret
 30534  01B098                     __end_of_EXT_INT_Initialize:
 30535                           	opt callstack 0
 30536                           
 30537 ;; *************** function _INT1_SetInterruptHandler *****************
 30538 ;; Defined at:
 30539 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 30540 ;; Parameters:    Size  Location     Type
 30541 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30542 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 30543 ;; Auto vars:     Size  Location     Type
 30544 ;;		None
 30545 ;; Return value:  Size  Location     Type
 30546 ;;                  1  [STACK] void 
 30547 ;; Registers used:
 30548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30549 ;; Tracked objects:
 30550 ;;		On entry : 3F/39
 30551 ;;		On exit  : 0/0
 30552 ;;		Unchanged: 0/0
 30553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30558 ;;Total ram usage:        0 bytes
 30559 ;; Hardware stack levels used:    1
 30560 ;; Hardware stack levels required when called:   15
 30561 ;; This function calls:
 30562 ;;		Nothing
 30563 ;; This function is called by:
 30564 ;;		_EXT_INT_Initialize
 30565 ;;		_start_switch_handler
 30566 ;; This function uses a reentrant model
 30567 ;;
 30568                           
 30569                           	psect	text128
 30570  01B3F6                     __ptext128:
 30571                           	opt callstack 0
 30572  01B3F6                     _INT1_SetInterruptHandler:
 30573                           	opt callstack 14
 30574                           
 30575                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 30576                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30577                           
 30578                           ; BSR set to: 57
 30579                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30580                           ;incstack = 0
 30581  01B3F6  50E1               	movf	fsr1l,w,c
 30582  01B3F8  0FFD               	addlw	-3
 30583  01B3FA  6ED9               	movwf	fsr2l,c
 30584  01B3FC  50E2               	movf	fsr1h,w,c
 30585  01B3FE  6EDA               	movwf	fsr2h,c
 30586  01B400  0EFF               	movlw	255
 30587  01B402  22DA               	addwfc	fsr2h,f,c
 30588  01B404  006F FF78  F004    	movff	postinc2,_INT1_InterruptHandler
 30589  01B40A  006F FF78  F005    	movff	postinc2,_INT1_InterruptHandler+1
 30590  01B410  006F FF74  F006    	movff	postdec2,_INT1_InterruptHandler+2
 30591                           
 30592                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30593  01B416  52E5               	movf	postdec1,f,c
 30594  01B418  52E5               	movf	postdec1,f,c
 30595  01B41A  52E5               	movf	postdec1,f,c
 30596  01B41C  0012               	return		;funcret
 30597  01B41E                     __end_of_INT1_SetInterruptHandler:
 30598                           	opt callstack 0
 30599                           
 30600 ;; *************** function _INT0_SetInterruptHandler *****************
 30601 ;; Defined at:
 30602 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 30603 ;; Parameters:    Size  Location     Type
 30604 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30605 ;;		 -> INT0_DefaultInterruptHandler(1), 
 30606 ;; Auto vars:     Size  Location     Type
 30607 ;;		None
 30608 ;; Return value:  Size  Location     Type
 30609 ;;                  1  [STACK] void 
 30610 ;; Registers used:
 30611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30612 ;; Tracked objects:
 30613 ;;		On entry : 3F/39
 30614 ;;		On exit  : 0/0
 30615 ;;		Unchanged: 0/0
 30616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30621 ;;Total ram usage:        0 bytes
 30622 ;; Hardware stack levels used:    1
 30623 ;; Hardware stack levels required when called:   15
 30624 ;; This function calls:
 30625 ;;		Nothing
 30626 ;; This function is called by:
 30627 ;;		_EXT_INT_Initialize
 30628 ;; This function uses a reentrant model
 30629 ;;
 30630                           
 30631                           	psect	text129
 30632  01B41E                     __ptext129:
 30633                           	opt callstack 0
 30634  01B41E                     _INT0_SetInterruptHandler:
 30635                           	opt callstack 13
 30636                           
 30637                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 30638                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30639                           
 30640                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30641                           ;incstack = 0
 30642  01B41E  50E1               	movf	fsr1l,w,c
 30643  01B420  0FFD               	addlw	-3
 30644  01B422  6ED9               	movwf	fsr2l,c
 30645  01B424  50E2               	movf	fsr1h,w,c
 30646  01B426  6EDA               	movwf	fsr2h,c
 30647  01B428  0EFF               	movlw	255
 30648  01B42A  22DA               	addwfc	fsr2h,f,c
 30649  01B42C  006F FF78  F007    	movff	postinc2,_INT0_InterruptHandler
 30650  01B432  006F FF78  F008    	movff	postinc2,_INT0_InterruptHandler+1
 30651  01B438  006F FF74  F009    	movff	postdec2,_INT0_InterruptHandler+2
 30652                           
 30653                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30654  01B43E  52E5               	movf	postdec1,f,c
 30655  01B440  52E5               	movf	postdec1,f,c
 30656  01B442  52E5               	movf	postdec1,f,c
 30657  01B444  0012               	return		;funcret
 30658  01B446                     __end_of_INT0_SetInterruptHandler:
 30659                           	opt callstack 0
 30660                           
 30661 ;; *************** function _DMA2_Initialize *****************
 30662 ;; Defined at:
 30663 ;;		line 61 in file "mcc_generated_files/dma2.c"
 30664 ;; Parameters:    Size  Location     Type
 30665 ;;		None
 30666 ;; Auto vars:     Size  Location     Type
 30667 ;;		None
 30668 ;; Return value:  Size  Location     Type
 30669 ;;                  1  [STACK] void 
 30670 ;; Registers used:
 30671 ;;		wreg, status,2
 30672 ;; Tracked objects:
 30673 ;;		On entry : 3F/3D
 30674 ;;		On exit  : 3F/3B
 30675 ;;		Unchanged: 0/0
 30676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30681 ;;Total ram usage:        0 bytes
 30682 ;; Hardware stack levels used:    1
 30683 ;; Hardware stack levels required when called:   15
 30684 ;; This function calls:
 30685 ;;		Nothing
 30686 ;; This function is called by:
 30687 ;;		_SYSTEM_Initialize
 30688 ;; This function uses a reentrant model
 30689 ;;
 30690                           
 30691                           	psect	text130
 30692  01A9C8                     __ptext130:
 30693                           	opt callstack 0
 30694  01A9C8                     _DMA2_Initialize:
 30695                           	opt callstack 14
 30696                           
 30697                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 30698                           
 30699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30700                           ;incstack = 0
 30701  01A9C8  0E00               	movlw	0
 30702  01A9CA  013B               	movlb	59	; () banked
 30703  01A9CC  6FD9               	movwf	217,b	;volatile
 30704  01A9CE  0E10               	movlw	16
 30705  01A9D0  6FDA               	movwf	218,b	;volatile
 30706  01A9D2  0E00               	movlw	0
 30707  01A9D4  6FDB               	movwf	219,b	;volatile
 30708                           
 30709                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 30710  01A9D6  0E3F               	movlw	63
 30711  01A9D8  6FD1               	movwf	209,b	;volatile
 30712  01A9DA  0EBB               	movlw	187
 30713  01A9DC  6FD0               	movwf	208,b	;volatile
 30714                           
 30715                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 30716  01A9DE  0E03               	movlw	3
 30717  01A9E0  6FDD               	movwf	221,b	;volatile
 30718                           
 30719                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 30720  01A9E2  0E00               	movlw	0
 30721  01A9E4  6FD8               	movwf	216,b	;volatile
 30722  01A9E6  0E01               	movlw	1
 30723  01A9E8  6FD7               	movwf	215,b	;volatile
 30724                           
 30725                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 30726  01A9EA  0E00               	movlw	0
 30727  01A9EC  6FCF               	movwf	207,b	;volatile
 30728  01A9EE  0E01               	movlw	1
 30729  01A9F0  6FCE               	movwf	206,b	;volatile
 30730                           
 30731                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 30732  01A9F2  0E1C               	movlw	28
 30733  01A9F4  6FDF               	movwf	223,b	;volatile
 30734                           
 30735                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 30736  01A9F6  0E3D               	movlw	61
 30737  01A9F8  6FDE               	movwf	222,b	;volatile
 30738                           
 30739                           ; BSR set to: 59
 30740                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 30741  01A9FA  0139               	movlb	57	; () banked
 30742  01A9FC  97A5               	bcf	165,3,b	;volatile
 30743                           
 30744                           ; BSR set to: 57
 30745                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 30746  01A9FE  95A5               	bcf	165,2,b	;volatile
 30747                           
 30748                           ; BSR set to: 57
 30749                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 30750  01AA00  9BA5               	bcf	165,5,b	;volatile
 30751                           
 30752                           ; BSR set to: 57
 30753                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 30754  01AA02  99A5               	bcf	165,4,b	;volatile
 30755                           
 30756                           ; BSR set to: 57
 30757                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 30758  01AA04  9795               	bcf	149,3,b	;volatile
 30759                           
 30760                           ; BSR set to: 57
 30761                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 30762  01AA06  9595               	bcf	149,2,b	;volatile
 30763                           
 30764                           ; BSR set to: 57
 30765                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 30766  01AA08  9B95               	bcf	149,5,b	;volatile
 30767                           
 30768                           ; BSR set to: 57
 30769                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 30770  01AA0A  9995               	bcf	149,4,b	;volatile
 30771  01AA0C  9ED2               	bcf	16338,7,c	;# 
 30772  01AA0E  0139               	banksel	14831	;# 
 30773  01AA10  0E55               	movlw	85	;# 
 30774  01AA12  6FEF               	movwf	14831,b	;# 
 30775  01AA14  0EAA               	movlw	170	;# 
 30776  01AA16  6FEF               	movwf	14831,b	;# 
 30777  01AA18  81EF               	bsf	14831,0,b	;# 
 30778  01AA1A  8ED2               	bsf	16338,7,c	;# 
 30779                           
 30780                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 30781  01AA1C  013B               	movlb	59	; () banked
 30782  01AA1E  6BDC               	clrf	220,b	;volatile
 30783                           
 30784                           ; BSR set to: 59
 30785                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30786  01AA20  0012               	return		;funcret
 30787  01AA22                     __end_of_DMA2_Initialize:
 30788                           	opt callstack 0
 30789                           
 30790 ;; *************** function _DMA1_Initialize *****************
 30791 ;; Defined at:
 30792 ;;		line 86 in file "mcc_generated_files/dma1.c"
 30793 ;; Parameters:    Size  Location     Type
 30794 ;;		None
 30795 ;; Auto vars:     Size  Location     Type
 30796 ;;		None
 30797 ;; Return value:  Size  Location     Type
 30798 ;;                  1  [STACK] void 
 30799 ;; Registers used:
 30800 ;;		wreg, status,2
 30801 ;; Tracked objects:
 30802 ;;		On entry : 3F/3B
 30803 ;;		On exit  : 3F/3B
 30804 ;;		Unchanged: 0/0
 30805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30810 ;;Total ram usage:        0 bytes
 30811 ;; Hardware stack levels used:    1
 30812 ;; Hardware stack levels required when called:   15
 30813 ;; This function calls:
 30814 ;;		Nothing
 30815 ;; This function is called by:
 30816 ;;		_SYSTEM_Initialize
 30817 ;; This function uses a reentrant model
 30818 ;;
 30819                           
 30820                           	psect	text131
 30821  01A642                     __ptext131:
 30822                           	opt callstack 0
 30823  01A642                     _DMA1_Initialize:
 30824                           	opt callstack 14
 30825                           
 30826                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 30827                           
 30828                           ; BSR set to: 59
 30829                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30830                           ;incstack = 0
 30831  01A642  0E00               	movlw	0
 30832  01A644  013B               	movlb	59	; () banked
 30833  01A646  6FF9               	movwf	249,b	;volatile
 30834  01A648  0E10               	movlw	16
 30835  01A64A  6FFA               	movwf	250,b	;volatile
 30836  01A64C  0E00               	movlw	0
 30837  01A64E  6FFB               	movwf	251,b	;volatile
 30838                           
 30839                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 30840  01A650  0E3D               	movlw	61
 30841  01A652  6FF1               	movwf	241,b	;volatile
 30842  01A654  0E11               	movlw	17
 30843  01A656  6FF0               	movwf	240,b	;volatile
 30844                           
 30845                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 30846  01A658  0E03               	movlw	3
 30847  01A65A  6FFD               	movwf	253,b	;volatile
 30848                           
 30849                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 30850  01A65C  0E00               	movlw	0
 30851  01A65E  6FF8               	movwf	248,b	;volatile
 30852  01A660  0E01               	movlw	1
 30853  01A662  6FF7               	movwf	247,b	;volatile
 30854                           
 30855                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 30856  01A664  0E00               	movlw	0
 30857  01A666  6FEF               	movwf	239,b	;volatile
 30858  01A668  0E01               	movlw	1
 30859  01A66A  6FEE               	movwf	238,b	;volatile
 30860                           
 30861                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 30862  01A66C  0E15               	movlw	21
 30863  01A66E  6FFF               	movwf	255,b	;volatile
 30864                           
 30865                           ; BSR set to: 59
 30866                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 30867  01A670  6BFE               	clrf	254,b	;volatile
 30868                           
 30869                           ; BSR set to: 59
 30870                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 30871  01A672  0139               	movlb	57	; () banked
 30872  01A674  93A2               	bcf	162,1,b	;volatile
 30873                           
 30874                           ; BSR set to: 57
 30875                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 30876  01A676  91A2               	bcf	162,0,b	;volatile
 30877                           
 30878                           ; BSR set to: 57
 30879                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 30880  01A678  97A2               	bcf	162,3,b	;volatile
 30881                           
 30882                           ; BSR set to: 57
 30883                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 30884  01A67A  95A2               	bcf	162,2,b	;volatile
 30885                           
 30886                           ; BSR set to: 57
 30887                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 30888  01A67C  8392               	bsf	146,1,b	;volatile
 30889                           
 30890                           ; BSR set to: 57
 30891                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 30892  01A67E  8192               	bsf	146,0,b	;volatile
 30893                           
 30894                           ; BSR set to: 57
 30895                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 30896  01A680  8792               	bsf	146,3,b	;volatile
 30897                           
 30898                           ; BSR set to: 57
 30899                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 30900  01A682  8592               	bsf	146,2,b	;volatile
 30901                           
 30902                           ; BSR set to: 57
 30903                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 30904  01A684  6BF1               	clrf	241,b	;volatile
 30905                           
 30906                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 30907  01A686  0E01               	movlw	1
 30908  01A688  6FF2               	movwf	242,b	;volatile
 30909                           
 30910                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 30911  01A68A  0E04               	movlw	4
 30912  01A68C  6FF3               	movwf	243,b	;volatile
 30913                           
 30914                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 30915  01A68E  0E02               	movlw	2
 30916  01A690  6FF4               	movwf	244,b	;volatile
 30917                           
 30918                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 30919  01A692  0E03               	movlw	3
 30920  01A694  6FF7               	movwf	247,b	;volatile
 30921  01A696  9ED2               	bcf	16338,7,c	;# 
 30922  01A698  0139               	banksel	14831	;# 
 30923  01A69A  0E55               	movlw	85	;# 
 30924  01A69C  6FEF               	movwf	14831,b	;# 
 30925  01A69E  0EAA               	movlw	170	;# 
 30926  01A6A0  6FEF               	movwf	14831,b	;# 
 30927  01A6A2  81EF               	bsf	14831,0,b	;# 
 30928  01A6A4  8ED2               	bsf	16338,7,c	;# 
 30929                           
 30930                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 30931  01A6A6  013B               	movlb	59	; () banked
 30932  01A6A8  6BFC               	clrf	252,b	;volatile
 30933                           
 30934                           ; BSR set to: 59
 30935                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30936  01A6AA  0012               	return		;funcret
 30937  01A6AC                     __end_of_DMA1_Initialize:
 30938                           	opt callstack 0
 30939                           
 30940 ;; *************** function _CLKREF_Initialize *****************
 30941 ;; Defined at:
 30942 ;;		line 58 in file "mcc_generated_files/clkref.c"
 30943 ;; Parameters:    Size  Location     Type
 30944 ;;		None
 30945 ;; Auto vars:     Size  Location     Type
 30946 ;;		None
 30947 ;; Return value:  Size  Location     Type
 30948 ;;                  1  [STACK] void 
 30949 ;; Registers used:
 30950 ;;		wreg, status,2
 30951 ;; Tracked objects:
 30952 ;;		On entry : 3F/3B
 30953 ;;		On exit  : 3F/3C
 30954 ;;		Unchanged: 0/0
 30955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30960 ;;Total ram usage:        0 bytes
 30961 ;; Hardware stack levels used:    1
 30962 ;; Hardware stack levels required when called:   15
 30963 ;; This function calls:
 30964 ;;		Nothing
 30965 ;; This function is called by:
 30966 ;;		_SYSTEM_Initialize
 30967 ;; This function uses a reentrant model
 30968 ;;
 30969                           
 30970                           	psect	text132
 30971  01B852                     __ptext132:
 30972                           	opt callstack 0
 30973  01B852                     _CLKREF_Initialize:
 30974                           	opt callstack 14
 30975                           
 30976                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 30977                           
 30978                           ; BSR set to: 59
 30979                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30980                           ;incstack = 0
 30981  01B852  013C               	movlb	60	; () banked
 30982  01B854  6BE6               	clrf	230,b	;volatile
 30983                           
 30984                           ; BSR set to: 60
 30985                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 30986  01B856  0E94               	movlw	148
 30987  01B858  6FE5               	movwf	229,b	;volatile
 30988                           
 30989                           ; BSR set to: 60
 30990                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30991  01B85A  0012               	return		;funcret
 30992  01B85C                     __end_of_CLKREF_Initialize:
 30993                           	opt callstack 0
 30994                           
 30995 ;; *************** function _ADCC_Initialize *****************
 30996 ;; Defined at:
 30997 ;;		line 65 in file "mcc_generated_files/adcc.c"
 30998 ;; Parameters:    Size  Location     Type
 30999 ;;		None
 31000 ;; Auto vars:     Size  Location     Type
 31001 ;;		None
 31002 ;; Return value:  Size  Location     Type
 31003 ;;                  1  [STACK] void 
 31004 ;; Registers used:
 31005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31006 ;; Tracked objects:
 31007 ;;		On entry : 3F/3E
 31008 ;;		On exit  : 0/0
 31009 ;;		Unchanged: 0/0
 31010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31015 ;;Total ram usage:        0 bytes
 31016 ;; Hardware stack levels used:    1
 31017 ;; Hardware stack levels required when called:   16
 31018 ;; This function calls:
 31019 ;;		_ADCC_SetADIInterruptHandler
 31020 ;;		_ADCC_SetADTIInterruptHandler
 31021 ;; This function is called by:
 31022 ;;		_SYSTEM_Initialize
 31023 ;; This function uses a reentrant model
 31024 ;;
 31025                           
 31026                           	psect	text133
 31027  01A6AC                     __ptext133:
 31028                           	opt callstack 0
 31029  01A6AC                     _ADCC_Initialize:
 31030                           	opt callstack 13
 31031                           
 31032                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 31033                           
 31034                           ; BSR set to: 60
 31035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31036                           ;incstack = 0
 31037  01A6AC  013E               	movlb	62	; () banked
 31038  01A6AE  6BDE               	clrf	222,b	;volatile
 31039                           
 31040                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 31041  01A6B0  6BDF               	clrf	223,b	;volatile
 31042                           
 31043                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 31044  01A6B2  6BE0               	clrf	224,b	;volatile
 31045                           
 31046                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 31047  01A6B4  6BE1               	clrf	225,b	;volatile
 31048                           
 31049                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 31050  01A6B6  6BE4               	clrf	228,b	;volatile
 31051                           
 31052                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 31053  01A6B8  6BE5               	clrf	229,b	;volatile
 31054                           
 31055                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 31056  01A6BA  6BEA               	clrf	234,b	;volatile
 31057                           
 31058                           ; BSR set to: 62
 31059                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 31060  01A6BC  0E40               	movlw	64
 31061  01A6BE  6FEC               	movwf	236,b	;volatile
 31062                           
 31063                           ; BSR set to: 62
 31064                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 31065  01A6C0  6BF1               	clrf	241,b	;volatile
 31066                           
 31067                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31068  01A6C2  0E20               	movlw	32
 31069  01A6C4  6FF3               	movwf	243,b	;volatile
 31070                           
 31071                           ; BSR set to: 62
 31072                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31073  01A6C6  6BF4               	clrf	244,b	;volatile
 31074                           
 31075                           ; BSR set to: 62
 31076                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31077  01A6C8  6BF5               	clrf	245,b	;volatile
 31078                           
 31079                           ; BSR set to: 62
 31080                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31081  01A6CA  6BF6               	clrf	246,b	;volatile
 31082                           
 31083                           ; BSR set to: 62
 31084                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31085  01A6CC  6BF7               	clrf	247,b	;volatile
 31086                           
 31087                           ; BSR set to: 62
 31088                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31089  01A6CE  6BF9               	clrf	249,b	;volatile
 31090                           
 31091                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31092  01A6D0  0E5B               	movlw	91
 31093  01A6D2  6FFA               	movwf	250,b	;volatile
 31094                           
 31095                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31096  01A6D4  0E27               	movlw	39
 31097  01A6D6  6FFB               	movwf	251,b	;volatile
 31098                           
 31099                           ; BSR set to: 62
 31100                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31101  01A6D8  6BFC               	clrf	252,b	;volatile
 31102                           
 31103                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31104  01A6DA  0E02               	movlw	2
 31105  01A6DC  6FFD               	movwf	253,b	;volatile
 31106                           
 31107                           ; BSR set to: 62
 31108                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31109  01A6DE  6BFE               	clrf	254,b	;volatile
 31110                           
 31111                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31112  01A6E0  0E07               	movlw	7
 31113  01A6E2  6FFF               	movwf	255,b	;volatile
 31114                           
 31115                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31116  01A6E4  0E84               	movlw	132
 31117  01A6E6  6FF8               	movwf	248,b	;volatile
 31118                           
 31119                           ; BSR set to: 62
 31120                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31121  01A6E8  0139               	movlb	57	; () banked
 31122  01A6EA  95A1               	bcf	161,2,b	;volatile
 31123                           
 31124                           ; BSR set to: 57
 31125                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31126  01A6EC  8591               	bsf	145,2,b	;volatile
 31127                           
 31128                           ; BSR set to: 57
 31129                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31130  01A6EE  0ED8               	movlw	low _ADCC_DefaultInterruptHandler
 31131  01A6F0  6EE6               	movwf	postinc1,c
 31132  01A6F2  0EB8               	movlw	high _ADCC_DefaultInterruptHandler
 31133  01A6F4  6EE6               	movwf	postinc1,c
 31134  01A6F6  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31135  01A6F8  6EE6               	movwf	postinc1,c
 31136  01A6FA  EC37  F0DA         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31137                           
 31138                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31139  01A6FE  0139               	movlb	57	; () banked
 31140  01A700  97A1               	bcf	161,3,b	;volatile
 31141                           
 31142                           ; BSR set to: 57
 31143                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31144  01A702  8791               	bsf	145,3,b	;volatile
 31145                           
 31146                           ; BSR set to: 57
 31147                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31148  01A704  0ED8               	movlw	low _ADCC_DefaultInterruptHandler
 31149  01A706  6EE6               	movwf	postinc1,c
 31150  01A708  0EB8               	movlw	high _ADCC_DefaultInterruptHandler
 31151  01A70A  6EE6               	movwf	postinc1,c
 31152  01A70C  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31153  01A70E  6EE6               	movwf	postinc1,c
 31154  01A710  EC23  F0DA         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31155                           
 31156                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31157  01A714  0012               	return		;funcret
 31158  01A716                     __end_of_ADCC_Initialize:
 31159                           	opt callstack 0
 31160                           
 31161 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31162 ;; Defined at:
 31163 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31164 ;; Parameters:    Size  Location     Type
 31165 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31166 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31167 ;; Auto vars:     Size  Location     Type
 31168 ;;		None
 31169 ;; Return value:  Size  Location     Type
 31170 ;;                  1  [STACK] void 
 31171 ;; Registers used:
 31172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31173 ;; Tracked objects:
 31174 ;;		On entry : 0/0
 31175 ;;		On exit  : 0/0
 31176 ;;		Unchanged: 0/0
 31177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31182 ;;Total ram usage:        0 bytes
 31183 ;; Hardware stack levels used:    1
 31184 ;; Hardware stack levels required when called:   15
 31185 ;; This function calls:
 31186 ;;		Nothing
 31187 ;; This function is called by:
 31188 ;;		_ADCC_Initialize
 31189 ;;		_start_adc_scan
 31190 ;; This function uses a reentrant model
 31191 ;;
 31192                           
 31193                           	psect	text134
 31194  01B446                     __ptext134:
 31195                           	opt callstack 0
 31196  01B446                     _ADCC_SetADTIInterruptHandler:
 31197                           	opt callstack 14
 31198                           
 31199                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31200                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31201                           
 31202                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31203                           ;incstack = 0
 31204  01B446  50E1               	movf	fsr1l,w,c
 31205  01B448  0FFD               	addlw	-3
 31206  01B44A  6ED9               	movwf	fsr2l,c
 31207  01B44C  50E2               	movf	fsr1h,w,c
 31208  01B44E  6EDA               	movwf	fsr2h,c
 31209  01B450  0EFF               	movlw	255
 31210  01B452  22DA               	addwfc	fsr2h,f,c
 31211  01B454  006F FF78  F0A3    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31212  01B45A  006F FF78  F0A4    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31213  01B460  006F FF74  F0A5    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31214                           
 31215                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31216  01B466  52E5               	movf	postdec1,f,c
 31217  01B468  52E5               	movf	postdec1,f,c
 31218  01B46A  52E5               	movf	postdec1,f,c
 31219  01B46C  0012               	return		;funcret
 31220  01B46E                     __end_of_ADCC_SetADTIInterruptHandler:
 31221                           	opt callstack 0
 31222                           
 31223 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31224 ;; Defined at:
 31225 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31226 ;; Parameters:    Size  Location     Type
 31227 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31228 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31229 ;; Auto vars:     Size  Location     Type
 31230 ;;		None
 31231 ;; Return value:  Size  Location     Type
 31232 ;;                  1  [STACK] void 
 31233 ;; Registers used:
 31234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31235 ;; Tracked objects:
 31236 ;;		On entry : 6/0
 31237 ;;		On exit  : 0/0
 31238 ;;		Unchanged: 0/0
 31239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31244 ;;Total ram usage:        0 bytes
 31245 ;; Hardware stack levels used:    1
 31246 ;; Hardware stack levels required when called:   15
 31247 ;; This function calls:
 31248 ;;		Nothing
 31249 ;; This function is called by:
 31250 ;;		_ADCC_Initialize
 31251 ;;		_start_adc_scan
 31252 ;; This function uses a reentrant model
 31253 ;;
 31254                           
 31255                           	psect	text135
 31256  01B46E                     __ptext135:
 31257                           	opt callstack 0
 31258  01B46E                     _ADCC_SetADIInterruptHandler:
 31259                           	opt callstack 14
 31260                           
 31261                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31262                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31263                           
 31264                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31265                           ;incstack = 0
 31266  01B46E  50E1               	movf	fsr1l,w,c
 31267  01B470  0FFD               	addlw	-3
 31268  01B472  6ED9               	movwf	fsr2l,c
 31269  01B474  50E2               	movf	fsr1h,w,c
 31270  01B476  6EDA               	movwf	fsr2h,c
 31271  01B478  0EFF               	movlw	255
 31272  01B47A  22DA               	addwfc	fsr2h,f,c
 31273  01B47C  006F FF78  F0A6    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31274  01B482  006F FF78  F0A7    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31275  01B488  006F FF74  F0A8    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31276                           
 31277                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31278  01B48E  52E5               	movf	postdec1,f,c
 31279  01B490  52E5               	movf	postdec1,f,c
 31280  01B492  52E5               	movf	postdec1,f,c
 31281  01B494  0012               	return		;funcret
 31282  01B496                     __end_of_ADCC_SetADIInterruptHandler:
 31283                           	opt callstack 0
 31284                           
 31285 ;; *************** function _INT1_ISR *****************
 31286 ;; Defined at:
 31287 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31288 ;; Parameters:    Size  Location     Type
 31289 ;;		None
 31290 ;; Auto vars:     Size  Location     Type
 31291 ;;		None
 31292 ;; Return value:  Size  Location     Type
 31293 ;;                  1    wreg      void 
 31294 ;; Registers used:
 31295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31296 ;; Tracked objects:
 31297 ;;		On entry : 0/0
 31298 ;;		On exit  : 0/0
 31299 ;;		Unchanged: 0/0
 31300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31303 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31304 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31305 ;;Total ram usage:        4 bytes
 31306 ;; Hardware stack levels used:    1
 31307 ;; Hardware stack levels required when called:    5
 31308 ;; This function calls:
 31309 ;;		_INT1_CallBack
 31310 ;; This function is called by:
 31311 ;;		Interrupt level 1
 31312 ;; This function uses a non-reentrant model
 31313 ;;
 31314                           
 31315                           	psect	text136
 31316  01AEDC                     __ptext136:
 31317                           	opt callstack 0
 31318  01AEDC                     _INT1_ISR:
 31319                           	opt callstack 12
 31320                           
 31321                           ;incstack = 0
 31322  01AEDC  006F FF60  F04C    	movff	status,??_INT1_ISR
 31323  01AEE2  0060  F098  F04D   	movff	btemp,??_INT1_ISR+1
 31324  01AEE8  0060  F0C0  F04E   	movff	btemp+10,??_INT1_ISR+2
 31325  01AEEE  0060  F0C4  F04F   	movff	btemp+11,??_INT1_ISR+3
 31326  01AEF4  EE16  F0A1         	lfsr	1,___intlo_sp
 31327                           
 31328                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31329  01AEF8  0139               	movlb	57	; () banked
 31330  01AEFA  91A5               	bcf	165,0,b	;volatile
 31331                           
 31332                           ; BSR set to: 57
 31333                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 31334  01AEFC  ECF2  F0DA         	call	_INT1_CallBack	;wreg free
 31335  01AF00  0060  F13C  F031   	movff	??_INT1_ISR+3,btemp+11
 31336  01AF06  0060  F138  F030   	movff	??_INT1_ISR+2,btemp+10
 31337  01AF0C  0060  F134  F026   	movff	??_INT1_ISR+1,btemp
 31338  01AF12  0060  F133  FFD8   	movff	??_INT1_ISR,status
 31339  01AF18  0011               	retfie		f
 31340  01AF1A                     __end_of_INT1_ISR:
 31341                           	opt callstack 0
 31342                           
 31343 ;; *************** function _INT1_CallBack *****************
 31344 ;; Defined at:
 31345 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 31346 ;; Parameters:    Size  Location     Type
 31347 ;;		None
 31348 ;; Auto vars:     Size  Location     Type
 31349 ;;		None
 31350 ;; Return value:  Size  Location     Type
 31351 ;;                  1  [STACK] void 
 31352 ;; Registers used:
 31353 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31354 ;; Tracked objects:
 31355 ;;		On entry : 3F/39
 31356 ;;		On exit  : 0/0
 31357 ;;		Unchanged: 0/0
 31358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31363 ;;Total ram usage:        0 bytes
 31364 ;; Hardware stack levels used:    1
 31365 ;; Hardware stack levels required when called:    4
 31366 ;; This function calls:
 31367 ;;		Absolute function
 31368 ;;		_INT1_DefaultInterruptHandler
 31369 ;;		_switch_handler
 31370 ;; This function is called by:
 31371 ;;		_INT1_ISR
 31372 ;; This function uses a reentrant model
 31373 ;;
 31374                           
 31375                           	psect	text137
 31376  01B5E4                     __ptext137:
 31377                           	opt callstack 0
 31378  01B5E4                     _INT1_CallBack:
 31379                           	opt callstack 12
 31380                           
 31381                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 31382                           
 31383                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31384                           ;incstack = 0
 31385  01B5E4  5004               	movf	_INT1_InterruptHandler^0,w,c
 31386  01B5E6  1005               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 31387  01B5E8  1006               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 31388  01B5EA  B4D8               	btfsc	status,2,c
 31389  01B5EC  0012               	return	
 31390                           
 31391                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 31392  01B5EE  D801               	call	u971_28
 31393  01B5F0  0012               	return	
 31394  01B5F2                     u971_28:
 31395  01B5F2  0005               	push	
 31396  01B5F4  6EFA               	movwf	pclath,c
 31397  01B5F6  5004               	movf	_INT1_InterruptHandler^0,w,c
 31398  01B5F8  6EFD               	movwf	tosl,c
 31399  01B5FA  5005               	movf	(_INT1_InterruptHandler+1)^0,w,c
 31400  01B5FC  6EFE               	movwf	tosh,c
 31401  01B5FE  5006               	movf	(_INT1_InterruptHandler+2)^0,w,c
 31402  01B600  6EFF               	movwf	tosu,c
 31403  01B602  50FA               	movf	pclath,w,c
 31404  01B604  0012               	return		;indir
 31405  01B606                     __end_of_INT1_CallBack:
 31406                           	opt callstack 0
 31407                           
 31408 ;; *************** function _INT1_DefaultInterruptHandler *****************
 31409 ;; Defined at:
 31410 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 31411 ;; Parameters:    Size  Location     Type
 31412 ;;		None
 31413 ;; Auto vars:     Size  Location     Type
 31414 ;;		None
 31415 ;; Return value:  Size  Location     Type
 31416 ;;                  1  [STACK] void 
 31417 ;; Registers used:
 31418 ;;		None
 31419 ;; Tracked objects:
 31420 ;;		On entry : 0/39
 31421 ;;		On exit  : 0/0
 31422 ;;		Unchanged: 0/0
 31423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31428 ;;Total ram usage:        0 bytes
 31429 ;; Hardware stack levels used:    1
 31430 ;; Hardware stack levels required when called:    3
 31431 ;; This function calls:
 31432 ;;		Nothing
 31433 ;; This function is called by:
 31434 ;;		_EXT_INT_Initialize
 31435 ;;		_INT1_CallBack
 31436 ;; This function uses a reentrant model
 31437 ;;
 31438                           
 31439                           	psect	text138
 31440  01B8D2                     __ptext138:
 31441                           	opt callstack 0
 31442  01B8D2                     _INT1_DefaultInterruptHandler:
 31443                           	opt callstack 12
 31444                           
 31445                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31446                           
 31447                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31448                           ;incstack = 0
 31449  01B8D2  0012               	return		;funcret
 31450  01B8D4                     __end_of_INT1_DefaultInterruptHandler:
 31451                           	opt callstack 0
 31452                           
 31453 ;; *************** function _switch_handler *****************
 31454 ;; Defined at:
 31455 ;;		line 58 in file "dio.c"
 31456 ;; Parameters:    Size  Location     Type
 31457 ;;		None
 31458 ;; Auto vars:     Size  Location     Type
 31459 ;;  i               1  [STACK] unsigned char 
 31460 ;;  sw_value        1  [STACK] unsigned char 
 31461 ;; Return value:  Size  Location     Type
 31462 ;;                  1  [STACK] void 
 31463 ;; Registers used:
 31464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 31465 ;; Tracked objects:
 31466 ;;		On entry : 0/39
 31467 ;;		On exit  : 0/0
 31468 ;;		Unchanged: 0/0
 31469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31474 ;;Total ram usage:        0 bytes
 31475 ;; Hardware stack levels used:    1
 31476 ;; Hardware stack levels required when called:    3
 31477 ;; This function calls:
 31478 ;;		Nothing
 31479 ;; This function is called by:
 31480 ;;		_start_switch_handler
 31481 ;;		_INT1_CallBack
 31482 ;; This function uses a reentrant model
 31483 ;;
 31484                           
 31485                           	psect	text139
 31486  018CA4                     __ptext139:
 31487                           	opt callstack 0
 31488  018CA4                     _switch_handler:
 31489                           	opt callstack 0
 31490                           
 31491                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31492  018CA4  52E6               	movf	postinc1,f,c
 31493  018CA6  52E6               	movf	postinc1,f,c
 31494                           
 31495                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 31496                           ;stkvar	_i @ sp[(-2)+0]
 31497                           
 31498                           ;incstack = 0
 31499  018CA8  0EFE               	movlw	-2
 31500  018CAA  6AE3               	clrf	plusw1,c
 31501  018CAC  9EBD               	bcf	189,7,c	;volatile
 31502  018CAE  9ABF               	bcf	191,5,c	;volatile
 31503                           
 31504                           ;dio.c: 73:  __nop();
 31505  018CB0  F000               	nop	
 31506                           
 31507                           ;dio.c: 74:  __nop();
 31508  018CB2  F000               	nop	
 31509                           
 31510                           ;dio.c: 75:  __nop();
 31511  018CB4  F000               	nop	
 31512  018CB6  D019               	goto	l10351
 31513  018CB8                     l10339:
 31514                           
 31515                           ;dio.c: 80:    sw_value = PORTFbits.RF3;
 31516  018CB8  A6CF               	btfss	207,3,c	;volatile
 31517  018CBA  D011               	goto	u947_20
 31518  018CBC  D00D               	goto	u947_21
 31519  018CBE                     u944_28:
 31520                           
 31521                           ;stkvar	_sw_value @ sp[(-2)+1]
 31522  018CBE  0EFF               	movlw	-1
 31523  018CC0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 31524                           
 31525                           ;dio.c: 81:    break;
 31526  018CC6  D027               	goto	l10353
 31527  018CC8                     l10341:
 31528                           
 31529                           ;dio.c: 83:    sw_value = PORTFbits.RF2;
 31530  018CC8  A4CF               	btfss	207,2,c	;volatile
 31531  018CCA  D009               	goto	u947_20
 31532  018CCC  D005               	goto	u947_21
 31533  018CCE                     l10343:
 31534                           
 31535                           ;dio.c: 86:    sw_value = PORTFbits.RF1;
 31536  018CCE  A2CF               	btfss	207,1,c	;volatile
 31537  018CD0  D006               	goto	u947_20
 31538  018CD2  D002               	goto	u947_21
 31539  018CD4                     l10345:
 31540                           
 31541                           ;dio.c: 89:    sw_value = PORTFbits.RF0;
 31542  018CD4  A0CF               	btfss	207,0,c	;volatile
 31543  018CD6  D003               	goto	u947_20
 31544  018CD8                     u947_21:
 31545  018CD8  6A31               	clrf	(btemp+11)^0,c
 31546  018CDA  2A31               	incf	(btemp+11)^0,f,c
 31547  018CDC  D7F0               	goto	u944_28
 31548  018CDE                     u947_20:
 31549  018CDE  6A31               	clrf	(btemp+11)^0,c
 31550  018CE0  D7EE               	goto	u944_28
 31551  018CE2                     l10347:
 31552                           
 31553                           ;dio.c: 92:    sw_value = 1;
 31554                           ;stkvar	_sw_value @ sp[(-2)+1]
 31555  018CE2  0EFF               	movlw	-1
 31556  018CE4  6AE3               	clrf	plusw1,c
 31557  018CE6  2AE3               	incf	plusw1,f,c
 31558                           
 31559                           ;dio.c: 93:    break;
 31560  018CE8  D016               	goto	l10353
 31561  018CEA                     l10351:
 31562                           
 31563                           ;stkvar	_i @ sp[(-2)+0]
 31564  018CEA  0EFE               	movlw	-2
 31565  018CEC  50E3               	movf	plusw1,w,c
 31566  018CEE  6E30               	movwf	(btemp+10)^0,c
 31567  018CF0  6A31               	clrf	(btemp+11)^0,c
 31568                           
 31569                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31570                           ; Switch size 1, requested type "simple"
 31571                           ; Number of cases is 1, Range of values is 0 to 0
 31572                           ; switch strategies available:
 31573                           ; Name         Instructions Cycles
 31574                           ; simple_byte            4     3 (average)
 31575                           ;	Chosen strategy is simple_byte
 31576  018CF2  5031               	movf	(btemp+11)^0,w,c
 31577  018CF4  0A00               	xorlw	0	; case 0
 31578  018CF6  A4D8               	btfss	status,2,c
 31579  018CF8  D7F4               	goto	l10347
 31580                           
 31581                           ; Switch size 1, requested type "simple"
 31582                           ; Number of cases is 4, Range of values is 0 to 3
 31583                           ; switch strategies available:
 31584                           ; Name         Instructions Cycles
 31585                           ; simple_byte           13     7 (average)
 31586                           ;	Chosen strategy is simple_byte
 31587  018CFA  5030               	movf	(btemp+10)^0,w,c
 31588  018CFC  0A00               	xorlw	0	; case 0
 31589  018CFE  B4D8               	btfsc	status,2,c
 31590  018D00  D7E9               	goto	l10345
 31591  018D02  0A01               	xorlw	1	; case 1
 31592  018D04  B4D8               	btfsc	status,2,c
 31593  018D06  D7E3               	goto	l10343
 31594  018D08  0A03               	xorlw	3	; case 2
 31595  018D0A  B4D8               	btfsc	status,2,c
 31596  018D0C  D7DD               	goto	l10341
 31597  018D0E  0A01               	xorlw	1	; case 3
 31598  018D10  B4D8               	btfsc	status,2,c
 31599  018D12  D7D2               	goto	l10339
 31600  018D14  D7E6               	goto	l10347
 31601  018D16                     l10353:
 31602                           
 31603                           ;dio.c: 97:   if (sw_value) {
 31604                           ;stkvar	_sw_value @ sp[(-2)+1]
 31605  018D16  0EFF               	movlw	-1
 31606  018D18  50E3               	movf	plusw1,w,c
 31607  018D1A  B4D8               	btfsc	status,2,c
 31608  018D1C  D018               	goto	l10359
 31609                           
 31610                           ;dio.c: 98:    if (S.button[i].sw == SW_ON) {
 31611                           ;stkvar	_i @ sp[(-2)+0]
 31612  018D1E  0EFE               	movlw	-2
 31613  018D20  50E3               	movf	plusw1,w,c
 31614  018D22  0D05               	mullw	5
 31615  018D24  0EC5               	movlw	low _S
 31616  018D26  24F3               	addwf	243,w,c
 31617  018D28  6ED9               	movwf	fsr2l,c
 31618  018D2A  0E02               	movlw	high _S
 31619  018D2C  20F4               	addwfc	prodh,w,c
 31620  018D2E  6EDA               	movwf	fsr2h,c
 31621  018D30  04DE               	decf	postinc2,w,c
 31622  018D32  A4D8               	btfss	status,2,c
 31623  018D34  D049               	goto	l10367
 31624                           
 31625                           ;dio.c: 99:     S.button[i].sw = SW_OFF;
 31626                           ;stkvar	_i @ sp[(-2)+0]
 31627  018D36  0EFE               	movlw	-2
 31628  018D38  50E3               	movf	plusw1,w,c
 31629  018D3A  0D05               	mullw	5
 31630  018D3C  0EC5               	movlw	low _S
 31631  018D3E  24F3               	addwf	243,w,c
 31632  018D40  6ED9               	movwf	fsr2l,c
 31633  018D42  0E02               	movlw	high _S
 31634  018D44  20F4               	addwfc	prodh,w,c
 31635  018D46  6EDA               	movwf	fsr2h,c
 31636  018D48  0E00               	movlw	0
 31637  018D4A  6EDF               	movwf	indf2,c
 31638  018D4C  D03D               	goto	l10367
 31639  018D4E                     l10359:
 31640                           
 31641                           ;dio.c: 102:    if (S.button[i].sw == SW_OFF) {
 31642                           ;stkvar	_i @ sp[(-2)+0]
 31643  018D4E  0EFE               	movlw	-2
 31644  018D50  50E3               	movf	plusw1,w,c
 31645  018D52  0D05               	mullw	5
 31646  018D54  0EC5               	movlw	low _S
 31647  018D56  24F3               	addwf	243,w,c
 31648  018D58  6ED9               	movwf	fsr2l,c
 31649  018D5A  0E02               	movlw	high _S
 31650  018D5C  20F4               	addwfc	prodh,w,c
 31651  018D5E  6EDA               	movwf	fsr2h,c
 31652  018D60  50DF               	movf	indf2,w,c
 31653  018D62  A4D8               	btfss	status,2,c
 31654  018D64  D031               	goto	l10367
 31655                           
 31656                           ;dio.c: 103:     S.button[i].sw = SW_ON;
 31657                           ;stkvar	_i @ sp[(-2)+0]
 31658  018D66  0EFE               	movlw	-2
 31659  018D68  50E3               	movf	plusw1,w,c
 31660  018D6A  0D05               	mullw	5
 31661  018D6C  0EC5               	movlw	low _S
 31662  018D6E  24F3               	addwf	243,w,c
 31663  018D70  6ED9               	movwf	fsr2l,c
 31664  018D72  0E02               	movlw	high _S
 31665  018D74  20F4               	addwfc	prodh,w,c
 31666  018D76  6EDA               	movwf	fsr2h,c
 31667  018D78  0E01               	movlw	1
 31668  018D7A  6EDF               	movwf	indf2,c
 31669                           
 31670                           ;dio.c: 104:     S.button[i].count = V.timerint_count;
 31671  018D7C  EE20  F2C1         	lfsr	2,_V+186	;volatile
 31672                           
 31673                           ;stkvar	_i @ sp[(-2)+0]
 31674  018D80  0EFE               	movlw	-2
 31675  018D82  50E3               	movf	plusw1,w,c
 31676  018D84  0D05               	mullw	5
 31677  018D86  0EC6               	movlw	low (_S+1)
 31678  018D88  24F3               	addwf	243,w,c
 31679  018D8A  6EE9               	movwf	fsr0l,c
 31680  018D8C  0E02               	movlw	high (_S+1)
 31681  018D8E  20F4               	addwfc	prodh,w,c
 31682  018D90  6EEA               	movwf	fsr0h,c
 31683  018D92  006F FF7B FFEE     	movff	postinc2,postinc0
 31684  018D98  006F FF7B FFEE     	movff	postinc2,postinc0
 31685  018D9E  006F FF7B FFEE     	movff	postinc2,postinc0
 31686  018DA4  006F FF7B FFEE     	movff	postinc2,postinc0
 31687                           
 31688                           ;dio.c: 105:     S.sw_bitmap |= 1 << i;
 31689                           ;stkvar	_i @ sp[(-2)+0]
 31690  018DAA  0EFE               	movlw	-2
 31691  018DAC  006F FF8C  F031    	movff	plusw1,btemp+11
 31692  018DB2  0E01               	movlw	1
 31693  018DB4  6E30               	movwf	(btemp+10)^0,c
 31694  018DB6  2A31               	incf	(btemp+11)^0,f,c
 31695  018DB8  D002               	goto	u951_24
 31696  018DBA                     u951_25:
 31697  018DBA  90D8               	bcf	status,0,c
 31698  018DBC  3630               	rlcf	(btemp+10)^0,f,c
 31699  018DBE                     u951_24:
 31700  018DBE  2E31               	decfsz	(btemp+11)^0,f,c
 31701  018DC0  D7FC               	goto	u951_25
 31702  018DC2  5030               	movf	(btemp+10)^0,w,c
 31703  018DC4  0102               	movlb	2	; () banked
 31704  018DC6  13ED               	iorwf	(_S+40)& (0+255),f,b	;volatile
 31705  018DC8                     l10367:
 31706                           
 31707                           ;dio.c: 108:  } while (++i < 4);
 31708                           ;stkvar	_i @ sp[(-2)+0]
 31709  018DC8  0EFE               	movlw	-2
 31710  018DCA  2AE3               	incf	plusw1,f,c
 31711  018DCC  0EFE               	movlw	-2
 31712  018DCE  006F FF8C  F026    	movff	plusw1,btemp
 31713  018DD4  0E03               	movlw	3
 31714  018DD6  6426               	cpfsgt	btemp^0,c
 31715  018DD8  D788               	goto	l10351
 31716                           
 31717                           ;dio.c: 117:  do { LATDbits.LATD7 = 1; } while(0);
 31718  018DDA  8EBD               	bsf	189,7,c	;volatile
 31719                           
 31720                           ;dio.c: 118:  do { LATFbits.LATF5 = 1; } while(0);
 31721  018DDC  8ABF               	bsf	191,5,c	;volatile
 31722                           
 31723                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31724  018DDE  52E5               	movf	postdec1,f,c
 31725  018DE0  52E5               	movf	postdec1,f,c
 31726  018DE2  0012               	return		;funcret
 31727  018DE4                     __end_of_switch_handler:
 31728                           	opt callstack 0
 31729                           
 31730 ;; *************** function _TMR5_ISR *****************
 31731 ;; Defined at:
 31732 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 31733 ;; Parameters:    Size  Location     Type
 31734 ;;		None
 31735 ;; Auto vars:     Size  Location     Type
 31736 ;;		None
 31737 ;; Return value:  Size  Location     Type
 31738 ;;                  1    wreg      void 
 31739 ;; Registers used:
 31740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 31741 ;; Tracked objects:
 31742 ;;		On entry : 0/0
 31743 ;;		On exit  : 0/0
 31744 ;;		Unchanged: 0/0
 31745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31748 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31749 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31750 ;;Total ram usage:       15 bytes
 31751 ;; Hardware stack levels used:    1
 31752 ;; Hardware stack levels required when called:    9
 31753 ;; This function calls:
 31754 ;;		_TMR5_CallBack
 31755 ;;		_TMR5_WriteTimer
 31756 ;; This function is called by:
 31757 ;;		Interrupt level 1
 31758 ;; This function uses a non-reentrant model
 31759 ;;
 31760                           
 31761                           	psect	text140
 31762  019954                     __ptext140:
 31763                           	opt callstack 0
 31764  019954                     _TMR5_ISR:
 31765                           	opt callstack 8
 31766                           
 31767                           ;incstack = 0
 31768  019954  006F FF60  F052    	movff	status,??_TMR5_ISR+2
 31769  01995A  0060  F098  F053   	movff	btemp,??_TMR5_ISR+3
 31770  019960  0060  F09C  F054   	movff	btemp+1,??_TMR5_ISR+4
 31771  019966  0060  F0A0  F055   	movff	btemp+2,??_TMR5_ISR+5
 31772  01996C  0060  F0A4  F056   	movff	btemp+3,??_TMR5_ISR+6
 31773  019972  0060  F0A8  F057   	movff	btemp+4,??_TMR5_ISR+7
 31774  019978  0060  F0AC  F058   	movff	btemp+5,??_TMR5_ISR+8
 31775  01997E  0060  F0B0  F059   	movff	btemp+6,??_TMR5_ISR+9
 31776  019984  0060  F0B4  F05A   	movff	btemp+7,??_TMR5_ISR+10
 31777  01998A  0060  F0B8  F05B   	movff	btemp+8,??_TMR5_ISR+11
 31778  019990  0060  F0BC  F05C   	movff	btemp+9,??_TMR5_ISR+12
 31779  019996  0060  F0C0  F05D   	movff	btemp+10,??_TMR5_ISR+13
 31780  01999C  0060  F0C4  F05E   	movff	btemp+11,??_TMR5_ISR+14
 31781  0199A2  EE16  F0A1         	lfsr	1,___intlo_sp
 31782                           
 31783                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 31784  0199A6  0139               	movlb	57	; () banked
 31785  0199A8  9DA8               	bcf	168,6,b	;volatile
 31786                           
 31787                           ; BSR set to: 57
 31788                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 31789  0199AA  0060  F05B  FFE6   	movff	_timer5ReloadVal,postinc1
 31790  0199B0  0060  F05F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 31791  0199B6  EC2E  F0D7         	call	_TMR5_WriteTimer	;wreg free
 31792                           
 31793                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 31794  0199BA  0102               	movlb	2	; () banked
 31795  0199BC  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 31796  0199BE  6E50               	movwf	??_TMR5_ISR^0,c
 31797  0199C0  6A51               	clrf	(??_TMR5_ISR+1)^0,c
 31798  0199C2  0E05               	movlw	5
 31799  0199C4  2650               	addwf	??_TMR5_ISR^0,f,c
 31800  0199C6  0E00               	movlw	0
 31801  0199C8  2251               	addwfc	(??_TMR5_ISR+1)^0,f,c
 31802  0199CA  4A14               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 31803  0199CC  2A15               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 31804  0199CE  5050               	movf	??_TMR5_ISR^0,w,c
 31805  0199D0  5C14               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 31806  0199D2  5051               	movf	(??_TMR5_ISR+1)^0,w,c
 31807  0199D4  5815               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 31808  0199D6  A0D8               	btfss	status,0,c
 31809  0199D8  D004               	goto	i1l1019
 31810                           
 31811                           ; BSR set to: 2
 31812                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 31813  0199DA  ECAB  F0DA         	call	_TMR5_CallBack	;wreg free
 31814                           
 31815                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 31816  0199DE  6A14               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 31817  0199E0  6A15               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 31818  0199E2                     i1l1019:
 31819  0199E2  0060  F178  F031   	movff	??_TMR5_ISR+14,btemp+11
 31820  0199E8  0060  F174  F030   	movff	??_TMR5_ISR+13,btemp+10
 31821  0199EE  0060  F170  F02F   	movff	??_TMR5_ISR+12,btemp+9
 31822  0199F4  0060  F16C  F02E   	movff	??_TMR5_ISR+11,btemp+8
 31823  0199FA  0060  F168  F02D   	movff	??_TMR5_ISR+10,btemp+7
 31824  019A00  0060  F164  F02C   	movff	??_TMR5_ISR+9,btemp+6
 31825  019A06  0060  F160  F02B   	movff	??_TMR5_ISR+8,btemp+5
 31826  019A0C  0060  F15C  F02A   	movff	??_TMR5_ISR+7,btemp+4
 31827  019A12  0060  F158  F029   	movff	??_TMR5_ISR+6,btemp+3
 31828  019A18  0060  F154  F028   	movff	??_TMR5_ISR+5,btemp+2
 31829  019A1E  0060  F150  F027   	movff	??_TMR5_ISR+4,btemp+1
 31830  019A24  0060  F14C  F026   	movff	??_TMR5_ISR+3,btemp
 31831  019A2A  0060  F14B  FFD8   	movff	??_TMR5_ISR+2,status
 31832  019A30  0011               	retfie		f
 31833  019A32                     __end_of_TMR5_ISR:
 31834                           	opt callstack 0
 31835                           
 31836 ;; *************** function _TMR5_WriteTimer *****************
 31837 ;; Defined at:
 31838 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 31839 ;; Parameters:    Size  Location     Type
 31840 ;;  timerVal        2  [STACK] unsigned short 
 31841 ;; Auto vars:     Size  Location     Type
 31842 ;;		None
 31843 ;; Return value:  Size  Location     Type
 31844 ;;                  1  [STACK] void 
 31845 ;; Registers used:
 31846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31847 ;; Tracked objects:
 31848 ;;		On entry : 3F/39
 31849 ;;		On exit  : 0/0
 31850 ;;		Unchanged: 0/0
 31851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31856 ;;Total ram usage:        0 bytes
 31857 ;; Hardware stack levels used:    1
 31858 ;; Hardware stack levels required when called:    3
 31859 ;; This function calls:
 31860 ;;		Nothing
 31861 ;; This function is called by:
 31862 ;;		_TMR5_ISR
 31863 ;; This function uses a reentrant model
 31864 ;;
 31865                           
 31866                           	psect	text141
 31867  01AE5C                     __ptext141:
 31868                           	opt callstack 0
 31869  01AE5C                     _TMR5_WriteTimer:
 31870                           	opt callstack 13
 31871                           
 31872                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 31873                           
 31874                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31875                           ;incstack = 0
 31876  01AE5C  A49A               	btfss	154,2,c	;volatile
 31877  01AE5E  D00F               	goto	l10549
 31878                           
 31879                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 31880  01AE60  909A               	bcf	154,0,c	;volatile
 31881                           
 31882                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 31883                           ;stkvar	_timerVal @ sp[(0)+-2]
 31884  01AE62  0EFF               	movlw	255
 31885  01AE64  24E1               	addwf	fsr1l,w,c
 31886  01AE66  6ED9               	movwf	fsr2l,c
 31887  01AE68  0EFF               	movlw	255
 31888  01AE6A  20E2               	addwfc	fsr1h,w,c
 31889  01AE6C  6EDA               	movwf	fsr2h,c
 31890  01AE6E  50DF               	movf	indf2,w,c
 31891  01AE70  6E99               	movwf	153,c	;volatile
 31892                           
 31893                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 31894                           ;stkvar	_timerVal @ sp[(0)+-2]
 31895  01AE72  0EFE               	movlw	-2
 31896  01AE74  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31897                           
 31898                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 31899  01AE7A  809A               	bsf	154,0,c	;volatile
 31900                           
 31901                           ;mcc_generated_files/tmr5.c: 144:  } else {
 31902  01AE7C  D00C               	goto	l1002
 31903  01AE7E                     l10549:
 31904                           
 31905                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 31906                           ;stkvar	_timerVal @ sp[(0)+-2]
 31907  01AE7E  0EFF               	movlw	255
 31908  01AE80  24E1               	addwf	fsr1l,w,c
 31909  01AE82  6ED9               	movwf	fsr2l,c
 31910  01AE84  0EFF               	movlw	255
 31911  01AE86  20E2               	addwfc	fsr1h,w,c
 31912  01AE88  6EDA               	movwf	fsr2h,c
 31913  01AE8A  50DF               	movf	indf2,w,c
 31914  01AE8C  6E99               	movwf	153,c	;volatile
 31915                           
 31916                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 31917                           ;stkvar	_timerVal @ sp[(0)+-2]
 31918  01AE8E  0EFE               	movlw	-2
 31919  01AE90  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31920  01AE96                     l1002:
 31921                           
 31922                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 31923  01AE96  52E5               	movf	postdec1,f,c
 31924  01AE98  52E5               	movf	postdec1,f,c
 31925  01AE9A  0012               	return		;funcret
 31926  01AE9C                     __end_of_TMR5_WriteTimer:
 31927                           	opt callstack 0
 31928                           
 31929 ;; *************** function _TMR5_CallBack *****************
 31930 ;; Defined at:
 31931 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 31932 ;; Parameters:    Size  Location     Type
 31933 ;;		None
 31934 ;; Auto vars:     Size  Location     Type
 31935 ;;		None
 31936 ;; Return value:  Size  Location     Type
 31937 ;;                  1  [STACK] void 
 31938 ;; Registers used:
 31939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 31940 ;; Tracked objects:
 31941 ;;		On entry : 3F/2
 31942 ;;		On exit  : 0/0
 31943 ;;		Unchanged: 0/0
 31944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31949 ;;Total ram usage:        0 bytes
 31950 ;; Hardware stack levels used:    1
 31951 ;; Hardware stack levels required when called:    8
 31952 ;; This function calls:
 31953 ;;		Absolute function
 31954 ;;		_TMR5_DefaultInterruptHandler
 31955 ;; This function is called by:
 31956 ;;		_TMR5_ISR
 31957 ;; This function uses a reentrant model
 31958 ;;
 31959                           
 31960                           	psect	text142
 31961  01B556                     __ptext142:
 31962                           	opt callstack 0
 31963  01B556                     _TMR5_CallBack:
 31964                           	opt callstack 8
 31965                           
 31966                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 31967                           
 31968                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31969                           ;incstack = 0
 31970  01B556  0100               	movlb	0	; () banked
 31971  01B558  519D               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31972  01B55A  119E               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31973  01B55C  119F               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31974  01B55E  B4D8               	btfsc	status,2,c
 31975  01B560  0012               	return	
 31976                           
 31977                           ; BSR set to: 0
 31978                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 31979  01B562  D801               	call	u980_28
 31980  01B564  0012               	return	
 31981  01B566                     u980_28:
 31982  01B566  0005               	push	
 31983  01B568  6EFA               	movwf	pclath,c
 31984  01B56A  519D               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31985  01B56C  6EFD               	movwf	tosl,c
 31986  01B56E  519E               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31987  01B570  6EFE               	movwf	tosh,c
 31988  01B572  519F               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31989  01B574  6EFF               	movwf	tosu,c
 31990  01B576  50FA               	movf	pclath,w,c
 31991  01B578  0012               	return		;indir
 31992  01B57A                     __end_of_TMR5_CallBack:
 31993                           	opt callstack 0
 31994                           
 31995 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 31996 ;; Defined at:
 31997 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 31998 ;; Parameters:    Size  Location     Type
 31999 ;;		None
 32000 ;; Auto vars:     Size  Location     Type
 32001 ;;		None
 32002 ;; Return value:  Size  Location     Type
 32003 ;;                  1  [STACK] void 
 32004 ;; Registers used:
 32005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32006 ;; Tracked objects:
 32007 ;;		On entry : 3F/0
 32008 ;;		On exit  : 0/0
 32009 ;;		Unchanged: 0/0
 32010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32015 ;;Total ram usage:        0 bytes
 32016 ;; Hardware stack levels used:    1
 32017 ;; Hardware stack levels required when called:    7
 32018 ;; This function calls:
 32019 ;;		_check_day_time
 32020 ;; This function is called by:
 32021 ;;		_TMR5_Initialize
 32022 ;;		_TMR5_CallBack
 32023 ;; This function uses a reentrant model
 32024 ;;
 32025                           
 32026                           	psect	text143
 32027  01AF8C                     __ptext143:
 32028                           	opt callstack 0
 32029  01AF8C                     _TMR5_DefaultInterruptHandler:
 32030                           	opt callstack 8
 32031                           
 32032                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 32033                           
 32034                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32035                           ;incstack = 0
 32036  01AF8C  A0BE               	btfss	190,0,c	;volatile
 32037  01AF8E  D002               	goto	u928_20
 32038  01AF90  0E01               	movlw	1
 32039  01AF92  D001               	goto	u928_26
 32040  01AF94                     u928_20:
 32041  01AF94  0E00               	movlw	0
 32042  01AF96                     u928_26:
 32043  01AF96  0AFF               	xorlw	255
 32044  01AF98  6E31               	movwf	(btemp+11)^0,c
 32045  01AF9A  50BE               	movf	190,w,c	;volatile
 32046  01AF9C  1831               	xorwf	(btemp+11)^0,w,c
 32047  01AF9E  0BFE               	andlw	-2
 32048  01AFA0  1831               	xorwf	(btemp+11)^0,w,c
 32049  01AFA2  6EBE               	movwf	190,c	;volatile
 32050                           
 32051                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 32052  01AFA4  0E01               	movlw	1
 32053  01AFA6  0102               	movlb	2	; () banked
 32054  01AFA8  27C1               	addwf	(_V+186)& (0+255),f,b	;volatile
 32055  01AFAA  0E00               	movlw	0
 32056  01AFAC  23C2               	addwfc	(_V+187)& (0+255),f,b	;volatile
 32057  01AFAE  23C3               	addwfc	(_V+188)& (0+255),f,b	;volatile
 32058  01AFB0  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 32059                           
 32060                           ; BSR set to: 2
 32061                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 32062  01AFB2  0E01               	movlw	1
 32063  01AFB4  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 32064  01AFB6  0E00               	movlw	0
 32065  01AFB8  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 32066  01AFBA  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 32067  01AFBC  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 32068                           
 32069                           ; BSR set to: 2
 32070                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 32071  01AFBE  EC48  F0CE         	call	_check_day_time	;wreg free
 32072                           
 32073                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32074  01AFC2  0012               	return		;funcret
 32075  01AFC4                     __end_of_TMR5_DefaultInterruptHandler:
 32076                           	opt callstack 0
 32077                           
 32078 ;; *************** function _check_day_time *****************
 32079 ;; Defined at:
 32080 ;;		line 153 in file "mbmc.c"
 32081 ;; Parameters:    Size  Location     Type
 32082 ;;		None
 32083 ;; Auto vars:     Size  Location     Type
 32084 ;;		None
 32085 ;; Return value:  Size  Location     Type
 32086 ;;                  1  [STACK] _Bool 
 32087 ;; Registers used:
 32088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32089 ;; Tracked objects:
 32090 ;;		On entry : 3F/2
 32091 ;;		On exit  : 0/0
 32092 ;;		Unchanged: 0/0
 32093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32098 ;;Total ram usage:        0 bytes
 32099 ;; Hardware stack levels used:    1
 32100 ;; Hardware stack levels required when called:    6
 32101 ;; This function calls:
 32102 ;;		___flge
 32103 ;;		_conv_raw_result
 32104 ;; This function is called by:
 32105 ;;		_TMR5_DefaultInterruptHandler
 32106 ;; This function uses a reentrant model
 32107 ;;
 32108                           
 32109                           	psect	text144
 32110  019C90                     __ptext144:
 32111                           	opt callstack 0
 32112  019C90                     _check_day_time:
 32113                           	opt callstack 8
 32114                           
 32115                           ;mbmc.c: 155:  static uint8_t day_delay = 0;;mbmc.c: 157:  if (!day_delay++) {
 32116                           
 32117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32118                           ;incstack = 0
 32119  019C90  2A1B               	incf	check_day_time@day_delay^0,f,c
 32120  019C92  041B               	decf	check_day_time@day_delay^0,w,c
 32121  019C94  A4D8               	btfss	status,2,c
 32122  019C96  D057               	goto	l9703
 32123                           
 32124                           ;mbmc.c: 158:   if (!C.day) {
 32125  019C98  0101               	movlb	1	; () banked
 32126  019C9A  51F7               	movf	(_C+247)& (0+255),w,b	;volatile
 32127  019C9C  A4D8               	btfss	status,2,c
 32128  019C9E  D02A               	goto	l9699
 32129                           
 32130                           ; BSR set to: 1
 32131                           ;mbmc.c: 159:    if (conv_raw_result(V_LIGHT_SENSOR, CONV) > 22.0) {
 32132  019CA0  0E00               	movlw	0
 32133  019CA2  6EE6               	movwf	postinc1,c
 32134  019CA4  0E0D               	movlw	13
 32135  019CA6  6EE6               	movwf	postinc1,c
 32136  019CA8  EC92  F0A7         	call	_conv_raw_result	;wreg free
 32137  019CAC  0060  F09B  FFE6   	movff	btemp,postinc1
 32138  019CB2  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32139  019CB8  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32140  019CBE  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32141  019CC4  0E00               	movlw	0
 32142  019CC6  6EE6               	movwf	postinc1,c
 32143  019CC8  0E00               	movlw	0
 32144  019CCA  6EE6               	movwf	postinc1,c
 32145  019CCC  0EB0               	movlw	176
 32146  019CCE  6EE6               	movwf	postinc1,c
 32147  019CD0  0E41               	movlw	65
 32148  019CD2  6EE6               	movwf	postinc1,c
 32149  019CD4  ECAA  F0C3         	call	___flge	;wreg free
 32150  019CD8  B026               	btfsc	btemp& (0+255),0,c
 32151  019CDA  D035               	goto	l9703
 32152                           
 32153                           ;mbmc.c: 160:     C.day = 1;
 32154  019CDC  0E01               	movlw	1
 32155  019CDE  0101               	movlb	1	; () banked
 32156  019CE0  6FF7               	movwf	(_C+247)& (0+255),b	;volatile
 32157                           
 32158                           ; BSR set to: 1
 32159                           ;mbmc.c: 161:     C.day_start = V.ticks;
 32160  019CE2  C288  F1F8         	movff	_V+129,_C+248	;volatile
 32161  019CE6  C289  F1F9         	movff	_V+130,_C+249	;volatile
 32162  019CEA  C28A  F1FA         	movff	_V+131,_C+250	;volatile
 32163  019CEE  C28B  F1FB         	movff	_V+132,_C+251	;volatile
 32164  019CF2  0012               	return	
 32165  019CF4                     l9699:
 32166                           
 32167                           ; BSR set to: 1
 32168                           ;mbmc.c: 165:    if (conv_raw_result(V_LIGHT_SENSOR, CONV) < 12.0) {
 32169  019CF4  0E00               	movlw	0
 32170  019CF6  6EE6               	movwf	postinc1,c
 32171  019CF8  0E00               	movlw	0
 32172  019CFA  6EE6               	movwf	postinc1,c
 32173  019CFC  0E40               	movlw	64
 32174  019CFE  6EE6               	movwf	postinc1,c
 32175  019D00  0E41               	movlw	65
 32176  019D02  6EE6               	movwf	postinc1,c
 32177  019D04  0E00               	movlw	0
 32178  019D06  6EE6               	movwf	postinc1,c
 32179  019D08  0E0D               	movlw	13
 32180  019D0A  6EE6               	movwf	postinc1,c
 32181  019D0C  EC92  F0A7         	call	_conv_raw_result	;wreg free
 32182  019D10  0060  F09B  FFE6   	movff	btemp,postinc1
 32183  019D16  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32184  019D1C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32185  019D22  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32186  019D28  ECAA  F0C3         	call	___flge	;wreg free
 32187  019D2C  B026               	btfsc	btemp& (0+255),0,c
 32188  019D2E  D00B               	goto	l9703
 32189                           
 32190                           ;mbmc.c: 166:     C.day = 0;
 32191  019D30  0101               	movlb	1	; () banked
 32192  019D32  6BF7               	clrf	(_C+247)& (0+255),b	;volatile
 32193                           
 32194                           ;mbmc.c: 167:     C.day_end = V.ticks;
 32195  019D34  C288  F1FC         	movff	_V+129,_C+252	;volatile
 32196  019D38  C289  F1FD         	movff	_V+130,_C+253	;volatile
 32197  019D3C  C28A  F1FE         	movff	_V+131,_C+254	;volatile
 32198  019D40  C28B  F1FF         	movff	_V+132,_C+255	;volatile
 32199                           
 32200                           ;mbmc.c: 168:     return 1;;	Return value of _check_day_time is never used
 32201  019D44  0012               	return	
 32202  019D46                     l9703:
 32203                           
 32204                           ;mbmc.c: 172:  if (day_delay >= 250)
 32205  019D46  0EF9               	movlw	249
 32206  019D48  641B               	cpfsgt	check_day_time@day_delay^0,c
 32207  019D4A  0012               	return	
 32208                           
 32209                           ;mbmc.c: 173:   day_delay = 0;
 32210  019D4C  6A1B               	clrf	check_day_time@day_delay^0,c
 32211                           
 32212                           ; _check_day_time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32213  019D4E  0012               	return		;funcret
 32214  019D50                     __end_of_check_day_time:
 32215                           	opt callstack 0
 32216                           
 32217 ;; *************** function _TMR3_ISR *****************
 32218 ;; Defined at:
 32219 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 32220 ;; Parameters:    Size  Location     Type
 32221 ;;		None
 32222 ;; Auto vars:     Size  Location     Type
 32223 ;;		None
 32224 ;; Return value:  Size  Location     Type
 32225 ;;                  1    wreg      void 
 32226 ;; Registers used:
 32227 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32228 ;; Tracked objects:
 32229 ;;		On entry : 0/0
 32230 ;;		On exit  : 0/0
 32231 ;;		Unchanged: 0/0
 32232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32235 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32236 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32237 ;;Total ram usage:       25 bytes
 32238 ;; Hardware stack levels used:    1
 32239 ;; Hardware stack levels required when called:   14
 32240 ;; This function calls:
 32241 ;;		_TMR3_CallBack
 32242 ;;		_TMR3_WriteTimer
 32243 ;; This function is called by:
 32244 ;;		Interrupt level 1
 32245 ;; This function uses a non-reentrant model
 32246 ;;
 32247                           
 32248                           	psect	text145
 32249  0188B8                     __ptext145:
 32250                           	opt callstack 0
 32251  0188B8                     _TMR3_ISR:
 32252                           	opt callstack 3
 32253                           
 32254                           ;incstack = 0
 32255  0188B8  006F FF60  F0E0    	movff	status,??_TMR3_ISR
 32256  0188BE  006F FFD8  F0E1    	movff	tblptrl,??_TMR3_ISR+1
 32257  0188C4  006F FFDC  F0E2    	movff	tblptrh,??_TMR3_ISR+2
 32258  0188CA  006F FFE0  F0E3    	movff	tblptru,??_TMR3_ISR+3
 32259  0188D0  006F FFD4  F0E4    	movff	tablat,??_TMR3_ISR+4
 32260  0188D6  0060  F098  F0E5   	movff	btemp,??_TMR3_ISR+5
 32261  0188DC  0060  F09C  F0E6   	movff	btemp+1,??_TMR3_ISR+6
 32262  0188E2  0060  F0A0  F0E7   	movff	btemp+2,??_TMR3_ISR+7
 32263  0188E8  0060  F0A4  F0E8   	movff	btemp+3,??_TMR3_ISR+8
 32264  0188EE  0060  F0A8  F0E9   	movff	btemp+4,??_TMR3_ISR+9
 32265  0188F4  0060  F0AC  F0EA   	movff	btemp+5,??_TMR3_ISR+10
 32266  0188FA  0060  F0B0  F0EB   	movff	btemp+6,??_TMR3_ISR+11
 32267  018900  0060  F0B4  F0EC   	movff	btemp+7,??_TMR3_ISR+12
 32268  018906  0060  F0B8  F0ED   	movff	btemp+8,??_TMR3_ISR+13
 32269  01890C  0060  F0BC  F0EE   	movff	btemp+9,??_TMR3_ISR+14
 32270  018912  0060  F0C0  F0EF   	movff	btemp+10,??_TMR3_ISR+15
 32271  018918  0060  F0C4  F0F0   	movff	btemp+11,??_TMR3_ISR+16
 32272  01891E  0060  F0D8  F0F1   	movff	btemp+16,??_TMR3_ISR+17
 32273  018924  0060  F0DC  F0F2   	movff	btemp+17,??_TMR3_ISR+18
 32274  01892A  0060  F0E0  F0F3   	movff	btemp+18,??_TMR3_ISR+19
 32275  018930  0060  F0E4  F0F4   	movff	btemp+19,??_TMR3_ISR+20
 32276  018936  0060  F0E8  F0F5   	movff	btemp+20,??_TMR3_ISR+21
 32277  01893C  0060  F0EC  F0F6   	movff	btemp+21,??_TMR3_ISR+22
 32278  018942  0060  F0F0  F0F7   	movff	btemp+22,??_TMR3_ISR+23
 32279  018948  0060  F0F4  F0F8   	movff	btemp+23,??_TMR3_ISR+24
 32280  01894E  EE16  F0A1         	lfsr	1,___intlo_sp
 32281                           
 32282                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 32283  018952  0139               	movlb	57	; () banked
 32284  018954  9DA6               	bcf	166,6,b	;volatile
 32285                           
 32286                           ; BSR set to: 57
 32287                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 32288  018956  0060  F04B  FFE6   	movff	_timer3ReloadVal,postinc1
 32289  01895C  0060  F04F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 32290  018962  EC4E  F0D7         	call	_TMR3_WriteTimer	;wreg free
 32291                           
 32292                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 32293  018966  4A10               	infsnz	TMR3_ISR@CountCallBack^0,f,c	;volatile
 32294  018968  2A11               	incf	(TMR3_ISR@CountCallBack+1)^0,f,c	;volatile
 32295  01896A  5011               	movf	(TMR3_ISR@CountCallBack+1)^0,w,c	;volatile
 32296  01896C  E104               	bnz	i1u1225_20
 32297  01896E  0E28               	movlw	40
 32298  018970  5C10               	subwf	TMR3_ISR@CountCallBack^0,w,c	;volatile
 32299  018972  A0D8               	btfss	status,0,c
 32300  018974  D004               	goto	i1l1207
 32301  018976                     i1u1225_20:
 32302                           
 32303                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 32304  018976  ECBD  F0DA         	call	_TMR3_CallBack	;wreg free
 32305                           
 32306                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 32307  01897A  6A10               	clrf	TMR3_ISR@CountCallBack^0,c	;volatile
 32308  01897C  6A11               	clrf	(TMR3_ISR@CountCallBack+1)^0,c	;volatile
 32309  01897E                     i1l1207:
 32310  01897E  0060  F3E0  F03D   	movff	??_TMR3_ISR+24,btemp+23
 32311  018984  0060  F3DC  F03C   	movff	??_TMR3_ISR+23,btemp+22
 32312  01898A  0060  F3D8  F03B   	movff	??_TMR3_ISR+22,btemp+21
 32313  018990  0060  F3D4  F03A   	movff	??_TMR3_ISR+21,btemp+20
 32314  018996  0060  F3D0  F039   	movff	??_TMR3_ISR+20,btemp+19
 32315  01899C  0060  F3CC  F038   	movff	??_TMR3_ISR+19,btemp+18
 32316  0189A2  0060  F3C8  F037   	movff	??_TMR3_ISR+18,btemp+17
 32317  0189A8  0060  F3C4  F036   	movff	??_TMR3_ISR+17,btemp+16
 32318  0189AE  0060  F3C0  F031   	movff	??_TMR3_ISR+16,btemp+11
 32319  0189B4  0060  F3BC  F030   	movff	??_TMR3_ISR+15,btemp+10
 32320  0189BA  0060  F3B8  F02F   	movff	??_TMR3_ISR+14,btemp+9
 32321  0189C0  0060  F3B4  F02E   	movff	??_TMR3_ISR+13,btemp+8
 32322  0189C6  0060  F3B0  F02D   	movff	??_TMR3_ISR+12,btemp+7
 32323  0189CC  0060  F3AC  F02C   	movff	??_TMR3_ISR+11,btemp+6
 32324  0189D2  0060  F3A8  F02B   	movff	??_TMR3_ISR+10,btemp+5
 32325  0189D8  0060  F3A4  F02A   	movff	??_TMR3_ISR+9,btemp+4
 32326  0189DE  0060  F3A0  F029   	movff	??_TMR3_ISR+8,btemp+3
 32327  0189E4  0060  F39C  F028   	movff	??_TMR3_ISR+7,btemp+2
 32328  0189EA  0060  F398  F027   	movff	??_TMR3_ISR+6,btemp+1
 32329  0189F0  0060  F394  F026   	movff	??_TMR3_ISR+5,btemp
 32330  0189F6  0060  F393  FFF5   	movff	??_TMR3_ISR+4,tablat
 32331  0189FC  0060  F38F  FFF8   	movff	??_TMR3_ISR+3,tblptru
 32332  018A02  0060  F38B  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 32333  018A08  0060  F387  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 32334  018A0E  0060  F383  FFD8   	movff	??_TMR3_ISR,status
 32335  018A14  0011               	retfie		f
 32336  018A16                     __end_of_TMR3_ISR:
 32337                           	opt callstack 0
 32338                           
 32339 ;; *************** function _TMR3_WriteTimer *****************
 32340 ;; Defined at:
 32341 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 32342 ;; Parameters:    Size  Location     Type
 32343 ;;  timerVal        2  [STACK] unsigned short 
 32344 ;; Auto vars:     Size  Location     Type
 32345 ;;		None
 32346 ;; Return value:  Size  Location     Type
 32347 ;;                  1  [STACK] void 
 32348 ;; Registers used:
 32349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32350 ;; Tracked objects:
 32351 ;;		On entry : 3F/39
 32352 ;;		On exit  : 0/0
 32353 ;;		Unchanged: 0/0
 32354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32359 ;;Total ram usage:        0 bytes
 32360 ;; Hardware stack levels used:    1
 32361 ;; Hardware stack levels required when called:    3
 32362 ;; This function calls:
 32363 ;;		Nothing
 32364 ;; This function is called by:
 32365 ;;		_TMR3_ISR
 32366 ;; This function uses a reentrant model
 32367 ;;
 32368                           
 32369                           	psect	text146
 32370  01AE9C                     __ptext146:
 32371                           	opt callstack 0
 32372  01AE9C                     _TMR3_WriteTimer:
 32373                           	opt callstack 13
 32374                           
 32375                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 32376                           
 32377                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32378                           ;incstack = 0
 32379  01AE9C  A4A6               	btfss	166,2,c	;volatile
 32380  01AE9E  D00F               	goto	l6533
 32381                           
 32382                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 32383  01AEA0  90A6               	bcf	166,0,c	;volatile
 32384                           
 32385                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 32386                           ;stkvar	_timerVal @ sp[(0)+-2]
 32387  01AEA2  0EFF               	movlw	255
 32388  01AEA4  24E1               	addwf	fsr1l,w,c
 32389  01AEA6  6ED9               	movwf	fsr2l,c
 32390  01AEA8  0EFF               	movlw	255
 32391  01AEAA  20E2               	addwfc	fsr1h,w,c
 32392  01AEAC  6EDA               	movwf	fsr2h,c
 32393  01AEAE  50DF               	movf	indf2,w,c
 32394  01AEB0  6EA5               	movwf	165,c	;volatile
 32395                           
 32396                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 32397                           ;stkvar	_timerVal @ sp[(0)+-2]
 32398  01AEB2  0EFE               	movlw	-2
 32399  01AEB4  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32400                           
 32401                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 32402  01AEBA  80A6               	bsf	166,0,c	;volatile
 32403                           
 32404                           ;mcc_generated_files/tmr3.c: 141:     }
 32405  01AEBC  D00C               	goto	l1190
 32406  01AEBE                     l6533:
 32407                           
 32408                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 32409                           ;stkvar	_timerVal @ sp[(0)+-2]
 32410  01AEBE  0EFF               	movlw	255
 32411  01AEC0  24E1               	addwf	fsr1l,w,c
 32412  01AEC2  6ED9               	movwf	fsr2l,c
 32413  01AEC4  0EFF               	movlw	255
 32414  01AEC6  20E2               	addwfc	fsr1h,w,c
 32415  01AEC8  6EDA               	movwf	fsr2h,c
 32416  01AECA  50DF               	movf	indf2,w,c
 32417  01AECC  6EA5               	movwf	165,c	;volatile
 32418                           
 32419                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 32420                           ;stkvar	_timerVal @ sp[(0)+-2]
 32421  01AECE  0EFE               	movlw	-2
 32422  01AED0  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32423  01AED6                     l1190:
 32424                           
 32425                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32426  01AED6  52E5               	movf	postdec1,f,c
 32427  01AED8  52E5               	movf	postdec1,f,c
 32428  01AEDA  0012               	return		;funcret
 32429  01AEDC                     __end_of_TMR3_WriteTimer:
 32430                           	opt callstack 0
 32431                           
 32432 ;; *************** function _TMR3_CallBack *****************
 32433 ;; Defined at:
 32434 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 32435 ;; Parameters:    Size  Location     Type
 32436 ;;		None
 32437 ;; Auto vars:     Size  Location     Type
 32438 ;;		None
 32439 ;; Return value:  Size  Location     Type
 32440 ;;                  1  [STACK] void 
 32441 ;; Registers used:
 32442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32443 ;; Tracked objects:
 32444 ;;		On entry : 0/39
 32445 ;;		On exit  : 0/0
 32446 ;;		Unchanged: 0/0
 32447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32452 ;;Total ram usage:        0 bytes
 32453 ;; Hardware stack levels used:    1
 32454 ;; Hardware stack levels required when called:   13
 32455 ;; This function calls:
 32456 ;;		Absolute function
 32457 ;;		_TMR3_DefaultInterruptHandler
 32458 ;;		_calc_bsoc
 32459 ;; This function is called by:
 32460 ;;		_TMR3_ISR
 32461 ;; This function uses a reentrant model
 32462 ;;
 32463                           
 32464                           	psect	text147
 32465  01B57A                     __ptext147:
 32466                           	opt callstack 0
 32467  01B57A                     _TMR3_CallBack:
 32468                           	opt callstack 3
 32469                           
 32470                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 32471                           
 32472                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32473                           ;incstack = 0
 32474  01B57A  0100               	movlb	0	; () banked
 32475  01B57C  519A               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32476  01B57E  119B               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32477  01B580  119C               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32478  01B582  B4D8               	btfsc	status,2,c
 32479  01B584  0012               	return	
 32480                           
 32481                           ; BSR set to: 0
 32482                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 32483  01B586  D801               	call	u1214_28
 32484  01B588  0012               	return	
 32485  01B58A                     u1214_28:
 32486  01B58A  0005               	push	
 32487  01B58C  6EFA               	movwf	pclath,c
 32488  01B58E  519A               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32489  01B590  6EFD               	movwf	tosl,c
 32490  01B592  519B               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32491  01B594  6EFE               	movwf	tosh,c
 32492  01B596  519C               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32493  01B598  6EFF               	movwf	tosu,c
 32494  01B59A  50FA               	movf	pclath,w,c
 32495  01B59C  0012               	return		;indir
 32496  01B59E                     __end_of_TMR3_CallBack:
 32497                           	opt callstack 0
 32498                           
 32499 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 32500 ;; Defined at:
 32501 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 32502 ;; Parameters:    Size  Location     Type
 32503 ;;		None
 32504 ;; Auto vars:     Size  Location     Type
 32505 ;;		None
 32506 ;; Return value:  Size  Location     Type
 32507 ;;                  1  [STACK] void 
 32508 ;; Registers used:
 32509 ;;		None
 32510 ;; Tracked objects:
 32511 ;;		On entry : 3F/0
 32512 ;;		On exit  : 0/0
 32513 ;;		Unchanged: 0/0
 32514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32519 ;;Total ram usage:        0 bytes
 32520 ;; Hardware stack levels used:    1
 32521 ;; Hardware stack levels required when called:    3
 32522 ;; This function calls:
 32523 ;;		Nothing
 32524 ;; This function is called by:
 32525 ;;		_TMR3_Initialize
 32526 ;;		_TMR3_CallBack
 32527 ;; This function uses a reentrant model
 32528 ;;
 32529                           
 32530                           	psect	text148
 32531  01B8D4                     __ptext148:
 32532                           	opt callstack 0
 32533  01B8D4                     _TMR3_DefaultInterruptHandler:
 32534                           	opt callstack 12
 32535                           
 32536                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32537                           
 32538                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32539                           ;incstack = 0
 32540  01B8D4  0012               	return		;funcret
 32541  01B8D6                     __end_of_TMR3_DefaultInterruptHandler:
 32542                           	opt callstack 0
 32543                           
 32544 ;; *************** function _calc_bsoc *****************
 32545 ;; Defined at:
 32546 ;;		line 39 in file "bsoc.c"
 32547 ;; Parameters:    Size  Location     Type
 32548 ;;		None
 32549 ;; Auto vars:     Size  Location     Type
 32550 ;;  log_ptr         2  [STACK] PTR unsigned char 
 32551 ;;		 -> port_data(512), 
 32552 ;; Return value:  Size  Location     Type
 32553 ;;                  1  [STACK] void 
 32554 ;; Registers used:
 32555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 32556 ;; Tracked objects:
 32557 ;;		On entry : 3F/0
 32558 ;;		On exit  : 3F/1
 32559 ;;		Unchanged: 0/0
 32560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32565 ;;Total ram usage:        0 bytes
 32566 ;; Hardware stack levels used:    1
 32567 ;; Hardware stack levels required when called:   12
 32568 ;; This function calls:
 32569 ;;		_StartTimer
 32570 ;;		___fladd
 32571 ;;		___fldiv
 32572 ;;		___flge
 32573 ;;		___flmul
 32574 ;;		___flneg
 32575 ;;		___fltol
 32576 ;;		_fabsf
 32577 ;;		_port_data_dma_ptr
 32578 ;;		_send_port_data_dma
 32579 ;;		_sprintf
 32580 ;;		_strlen
 32581 ;; This function is called by:
 32582 ;;		_init_bsoc
 32583 ;;		_TMR3_CallBack
 32584 ;; This function uses a reentrant model
 32585 ;;
 32586                           
 32587                           	psect	text149
 32588  014268                     __ptext149:
 32589                           	opt callstack 0
 32590  014268                     _calc_bsoc:
 32591                           	opt callstack 0
 32592                           
 32593                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32594  014268  52E6               	movf	postinc1,f,c
 32595  01426A  52E6               	movf	postinc1,f,c
 32596                           
 32597                           ;incstack = 0
 32598                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 44:  do { LATEbits.LATE1 = 1; } while(0);
 32599  01426C  82BE               	bsf	190,1,c	;volatile
 32600                           
 32601                           ;bsoc.c: 46:  C.dynamic_ah += (C.c_bat / 3600.0);
 32602  01426E  0E00               	movlw	0
 32603  014270  6EE6               	movwf	postinc1,c
 32604  014272  0E00               	movlw	0
 32605  014274  6EE6               	movwf	postinc1,c
 32606  014276  0E61               	movlw	97
 32607  014278  6EE6               	movwf	postinc1,c
 32608  01427A  0E45               	movlw	69
 32609  01427C  6EE6               	movwf	postinc1,c
 32610  01427E  0060  F513  FFE6   	movff	_C+68,postinc1
 32611  014284  0060  F517  FFE6   	movff	_C+69,postinc1
 32612  01428A  0060  F51B  FFE6   	movff	_C+70,postinc1
 32613  014290  0060  F51F  FFE6   	movff	_C+71,postinc1
 32614  014296  ECD5  F0A4         	call	___fldiv	;wreg free
 32615  01429A  0060  F09B  FFE6   	movff	btemp,postinc1
 32616  0142A0  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32617  0142A6  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32618  0142AC  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32619  0142B2  0060  F633  FFE6   	movff	_C+140,postinc1
 32620  0142B8  0060  F637  FFE6   	movff	_C+141,postinc1
 32621  0142BE  0060  F63B  FFE6   	movff	_C+142,postinc1
 32622  0142C4  0060  F63F  FFE6   	movff	_C+143,postinc1
 32623  0142CA  EC56  F09D         	call	___fladd	;wreg free
 32624  0142CE  0060  F098  F18C   	movff	btemp,_C+140	;volatile
 32625  0142D4  0060  F09C  F18D   	movff	btemp+1,_C+141	;volatile
 32626  0142DA  0060  F0A0  F18E   	movff	btemp+2,_C+142	;volatile
 32627  0142E0  0060  F0A4  F18F   	movff	btemp+3,_C+143	;volatile
 32628                           
 32629                           ;bsoc.c: 47:  if (C.dynamic_ah > (C.bank_ah))
 32630  0142E6  0060  F633  FFE6   	movff	_C+140,postinc1
 32631  0142EC  0060  F637  FFE6   	movff	_C+141,postinc1
 32632  0142F2  0060  F63B  FFE6   	movff	_C+142,postinc1
 32633  0142F8  0060  F63F  FFE6   	movff	_C+143,postinc1
 32634  0142FE  0060  F623  FFE6   	movff	_C+136,postinc1
 32635  014304  0060  F627  FFE6   	movff	_C+137,postinc1
 32636  01430A  0060  F62B  FFE6   	movff	_C+138,postinc1
 32637  014310  0060  F62F  FFE6   	movff	_C+139,postinc1
 32638  014316  ECAA  F0C3         	call	___flge	;wreg free
 32639  01431A  B026               	btfsc	btemp& (0+255),0,c
 32640  01431C  D008               	goto	l12537
 32641                           
 32642                           ;bsoc.c: 48:   C.dynamic_ah = C.bank_ah;
 32643  01431E  C188  F18C         	movff	_C+136,_C+140	;volatile
 32644  014322  C189  F18D         	movff	_C+137,_C+141	;volatile
 32645  014326  C18A  F18E         	movff	_C+138,_C+142	;volatile
 32646  01432A  C18B  F18F         	movff	_C+139,_C+143	;volatile
 32647  01432E                     l12537:
 32648                           
 32649                           ;bsoc.c: 49:  if (C.dynamic_ah < 0.1)
 32650  01432E  0ECD               	movlw	205
 32651  014330  6EE6               	movwf	postinc1,c
 32652  014332  0ECC               	movlw	204
 32653  014334  6EE6               	movwf	postinc1,c
 32654  014336  0ECC               	movlw	204
 32655  014338  6EE6               	movwf	postinc1,c
 32656  01433A  0E3D               	movlw	61
 32657  01433C  6EE6               	movwf	postinc1,c
 32658  01433E  0060  F633  FFE6   	movff	_C+140,postinc1
 32659  014344  0060  F637  FFE6   	movff	_C+141,postinc1
 32660  01434A  0060  F63B  FFE6   	movff	_C+142,postinc1
 32661  014350  0060  F63F  FFE6   	movff	_C+143,postinc1
 32662  014356  ECAA  F0C3         	call	___flge	;wreg free
 32663  01435A  B026               	btfsc	btemp& (0+255),0,c
 32664  01435C  D009               	goto	l12541
 32665                           
 32666                           ;bsoc.c: 50:   C.dynamic_ah = 0.1;
 32667  01435E  0ECD               	movlw	205
 32668  014360  0101               	movlb	1	; () banked
 32669  014362  6F8C               	movwf	(_C+140)& (0+255),b	;volatile
 32670  014364  0ECC               	movlw	204
 32671  014366  6F8D               	movwf	(_C+141)& (0+255),b	;volatile
 32672  014368  0ECC               	movlw	204
 32673  01436A  6F8E               	movwf	(_C+142)& (0+255),b	;volatile
 32674  01436C  0E3D               	movlw	61
 32675  01436E  6F8F               	movwf	(_C+143)& (0+255),b	;volatile
 32676  014370                     l12541:
 32677                           
 32678                           ;bsoc.c: 52:  C.pv_ah += (C.c_pv / 3600.0);
 32679  014370  0E00               	movlw	0
 32680  014372  6EE6               	movwf	postinc1,c
 32681  014374  0E00               	movlw	0
 32682  014376  6EE6               	movwf	postinc1,c
 32683  014378  0E61               	movlw	97
 32684  01437A  6EE6               	movwf	postinc1,c
 32685  01437C  0E45               	movlw	69
 32686  01437E  6EE6               	movwf	postinc1,c
 32687  014380  0060  F523  FFE6   	movff	_C+72,postinc1
 32688  014386  0060  F527  FFE6   	movff	_C+73,postinc1
 32689  01438C  0060  F52B  FFE6   	movff	_C+74,postinc1
 32690  014392  0060  F52F  FFE6   	movff	_C+75,postinc1
 32691  014398  ECD5  F0A4         	call	___fldiv	;wreg free
 32692  01439C  0060  F09B  FFE6   	movff	btemp,postinc1
 32693  0143A2  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32694  0143A8  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32695  0143AE  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32696  0143B4  0060  F643  FFE6   	movff	_C+144,postinc1
 32697  0143BA  0060  F647  FFE6   	movff	_C+145,postinc1
 32698  0143C0  0060  F64B  FFE6   	movff	_C+146,postinc1
 32699  0143C6  0060  F64F  FFE6   	movff	_C+147,postinc1
 32700  0143CC  EC56  F09D         	call	___fladd	;wreg free
 32701  0143D0  0060  F098  F190   	movff	btemp,_C+144	;volatile
 32702  0143D6  0060  F09C  F191   	movff	btemp+1,_C+145	;volatile
 32703  0143DC  0060  F0A0  F192   	movff	btemp+2,_C+146	;volatile
 32704  0143E2  0060  F0A4  F193   	movff	btemp+3,_C+147	;volatile
 32705                           
 32706                           ;bsoc.c: 53:  C.pvkw += (C.p_pv / 3600.0);
 32707  0143E8  0E00               	movlw	0
 32708  0143EA  6EE6               	movwf	postinc1,c
 32709  0143EC  0E00               	movlw	0
 32710  0143EE  6EE6               	movwf	postinc1,c
 32711  0143F0  0E61               	movlw	97
 32712  0143F2  6EE6               	movwf	postinc1,c
 32713  0143F4  0E45               	movlw	69
 32714  0143F6  6EE6               	movwf	postinc1,c
 32715  0143F8  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32716  0143FE  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32717  014404  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32718  01440A  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32719  014410  ECD5  F0A4         	call	___fldiv	;wreg free
 32720  014414  0060  F09B  FFE6   	movff	btemp,postinc1
 32721  01441A  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32722  014420  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32723  014426  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32724  01442C  0060  F683  FFE6   	movff	_C+160,postinc1
 32725  014432  0060  F687  FFE6   	movff	_C+161,postinc1
 32726  014438  0060  F68B  FFE6   	movff	_C+162,postinc1
 32727  01443E  0060  F68F  FFE6   	movff	_C+163,postinc1
 32728  014444  EC56  F09D         	call	___fladd	;wreg free
 32729  014448  0060  F098  F1A0   	movff	btemp,_C+160	;volatile
 32730  01444E  0060  F09C  F1A1   	movff	btemp+1,_C+161	;volatile
 32731  014454  0060  F0A0  F1A2   	movff	btemp+2,_C+162	;volatile
 32732  01445A  0060  F0A4  F1A3   	movff	btemp+3,_C+163	;volatile
 32733                           
 32734                           ;bsoc.c: 54:  C.invkw += (C.p_inverter / 3600.0);
 32735  014460  0E00               	movlw	0
 32736  014462  6EE6               	movwf	postinc1,c
 32737  014464  0E00               	movlw	0
 32738  014466  6EE6               	movwf	postinc1,c
 32739  014468  0E61               	movlw	97
 32740  01446A  6EE6               	movwf	postinc1,c
 32741  01446C  0E45               	movlw	69
 32742  01446E  6EE6               	movwf	postinc1,c
 32743  014470  0060  F5D3  FFE6   	movff	_C+116,postinc1
 32744  014476  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32745  01447C  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32746  014482  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32747  014488  ECD5  F0A4         	call	___fldiv	;wreg free
 32748  01448C  0060  F09B  FFE6   	movff	btemp,postinc1
 32749  014492  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32750  014498  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32751  01449E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32752  0144A4  0060  F693  FFE6   	movff	_C+164,postinc1
 32753  0144AA  0060  F697  FFE6   	movff	_C+165,postinc1
 32754  0144B0  0060  F69B  FFE6   	movff	_C+166,postinc1
 32755  0144B6  0060  F69F  FFE6   	movff	_C+167,postinc1
 32756  0144BC  EC56  F09D         	call	___fladd	;wreg free
 32757  0144C0  0060  F098  F1A4   	movff	btemp,_C+164	;volatile
 32758  0144C6  0060  F09C  F1A5   	movff	btemp+1,_C+165	;volatile
 32759  0144CC  0060  F0A0  F1A6   	movff	btemp+2,_C+166	;volatile
 32760  0144D2  0060  F0A4  F1A7   	movff	btemp+3,_C+167	;volatile
 32761                           
 32762                           ;bsoc.c: 55:  C.loadkw += (C.p_load / 3600.0);
 32763  0144D8  0E00               	movlw	0
 32764  0144DA  6EE6               	movwf	postinc1,c
 32765  0144DC  0E00               	movlw	0
 32766  0144DE  6EE6               	movwf	postinc1,c
 32767  0144E0  0E61               	movlw	97
 32768  0144E2  6EE6               	movwf	postinc1,c
 32769  0144E4  0E45               	movlw	69
 32770  0144E6  6EE6               	movwf	postinc1,c
 32771  0144E8  0060  F5C3  FFE6   	movff	_C+112,postinc1
 32772  0144EE  0060  F5C7  FFE6   	movff	_C+113,postinc1
 32773  0144F4  0060  F5CB  FFE6   	movff	_C+114,postinc1
 32774  0144FA  0060  F5CF  FFE6   	movff	_C+115,postinc1
 32775  014500  ECD5  F0A4         	call	___fldiv	;wreg free
 32776  014504  0060  F09B  FFE6   	movff	btemp,postinc1
 32777  01450A  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32778  014510  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32779  014516  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32780  01451C  0060  F6A3  FFE6   	movff	_C+168,postinc1
 32781  014522  0060  F6A7  FFE6   	movff	_C+169,postinc1
 32782  014528  0060  F6AB  FFE6   	movff	_C+170,postinc1
 32783  01452E  0060  F6AF  FFE6   	movff	_C+171,postinc1
 32784  014534  EC56  F09D         	call	___fladd	;wreg free
 32785  014538  0060  F098  F1A8   	movff	btemp,_C+168	;volatile
 32786  01453E  0060  F09C  F1A9   	movff	btemp+1,_C+169	;volatile
 32787  014544  0060  F0A0  F1AA   	movff	btemp+2,_C+170	;volatile
 32788  01454A  0060  F0A4  F1AB   	movff	btemp+3,_C+171	;volatile
 32789                           
 32790                           ;bsoc.c: 56:  if (C.p_bat > 0.0)
 32791  014550  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32792  014556  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32793  01455C  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32794  014562  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32795  014568  0E00               	movlw	0
 32796  01456A  6EE6               	movwf	postinc1,c
 32797  01456C  0E00               	movlw	0
 32798  01456E  6EE6               	movwf	postinc1,c
 32799  014570  0E00               	movlw	0
 32800  014572  6EE6               	movwf	postinc1,c
 32801  014574  0E00               	movlw	0
 32802  014576  6EE6               	movwf	postinc1,c
 32803  014578  ECAA  F0C3         	call	___flge	;wreg free
 32804  01457C  B026               	btfsc	btemp& (0+255),0,c
 32805  01457E  D03C               	goto	l12553
 32806                           
 32807                           ;bsoc.c: 57:   C.bkwi += (C.p_bat / 3600.0);
 32808  014580  0E00               	movlw	0
 32809  014582  6EE6               	movwf	postinc1,c
 32810  014584  0E00               	movlw	0
 32811  014586  6EE6               	movwf	postinc1,c
 32812  014588  0E61               	movlw	97
 32813  01458A  6EE6               	movwf	postinc1,c
 32814  01458C  0E45               	movlw	69
 32815  01458E  6EE6               	movwf	postinc1,c
 32816  014590  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32817  014596  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32818  01459C  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32819  0145A2  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32820  0145A8  ECD5  F0A4         	call	___fldiv	;wreg free
 32821  0145AC  0060  F09B  FFE6   	movff	btemp,postinc1
 32822  0145B2  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32823  0145B8  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32824  0145BE  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32825  0145C4  0060  F663  FFE6   	movff	_C+152,postinc1
 32826  0145CA  0060  F667  FFE6   	movff	_C+153,postinc1
 32827  0145D0  0060  F66B  FFE6   	movff	_C+154,postinc1
 32828  0145D6  0060  F66F  FFE6   	movff	_C+155,postinc1
 32829  0145DC  EC56  F09D         	call	___fladd	;wreg free
 32830  0145E0  0060  F098  F198   	movff	btemp,_C+152	;volatile
 32831  0145E6  0060  F09C  F199   	movff	btemp+1,_C+153	;volatile
 32832  0145EC  0060  F0A0  F19A   	movff	btemp+2,_C+154	;volatile
 32833  0145F2  0060  F0A4  F19B   	movff	btemp+3,_C+155	;volatile
 32834  0145F8                     l12553:
 32835                           
 32836                           ;bsoc.c: 58:  if (C.p_bat < 0.0)
 32837  0145F8  0101               	movlb	1	; () banked
 32838  0145FA  AF7F               	btfss	(_C+127)& (0+255),7,b	;volatile
 32839  0145FC  D04A               	goto	l12557
 32840                           
 32841                           ; BSR set to: 1
 32842                           ;bsoc.c: 59:   C.bkwo += fabsf(C.p_bat / 3600.0);
 32843  0145FE  0E00               	movlw	0
 32844  014600  6EE6               	movwf	postinc1,c
 32845  014602  0E00               	movlw	0
 32846  014604  6EE6               	movwf	postinc1,c
 32847  014606  0E61               	movlw	97
 32848  014608  6EE6               	movwf	postinc1,c
 32849  01460A  0E45               	movlw	69
 32850  01460C  6EE6               	movwf	postinc1,c
 32851  01460E  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32852  014614  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32853  01461A  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32854  014620  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32855  014626  ECD5  F0A4         	call	___fldiv	;wreg free
 32856  01462A  0060  F09B  FFE6   	movff	btemp,postinc1
 32857  014630  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32858  014636  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32859  01463C  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32860  014642  EC04  F0CF         	call	_fabsf	;wreg free
 32861  014646  0060  F09B  FFE6   	movff	btemp,postinc1
 32862  01464C  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32863  014652  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32864  014658  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32865  01465E  0060  F673  FFE6   	movff	_C+156,postinc1
 32866  014664  0060  F677  FFE6   	movff	_C+157,postinc1
 32867  01466A  0060  F67B  FFE6   	movff	_C+158,postinc1
 32868  014670  0060  F67F  FFE6   	movff	_C+159,postinc1
 32869  014676  EC56  F09D         	call	___fladd	;wreg free
 32870  01467A  0060  F098  F19C   	movff	btemp,_C+156	;volatile
 32871  014680  0060  F09C  F19D   	movff	btemp+1,_C+157	;volatile
 32872  014686  0060  F0A0  F19E   	movff	btemp+2,_C+158	;volatile
 32873  01468C  0060  F0A4  F19F   	movff	btemp+3,_C+159	;volatile
 32874  014692                     l12557:
 32875                           
 32876                           ;bsoc.c: 61:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 32877  014692  0E00               	movlw	0
 32878  014694  6EE6               	movwf	postinc1,c
 32879  014696  0E00               	movlw	0
 32880  014698  6EE6               	movwf	postinc1,c
 32881  01469A  0EC8               	movlw	200
 32882  01469C  6EE6               	movwf	postinc1,c
 32883  01469E  0E42               	movlw	66
 32884  0146A0  6EE6               	movwf	postinc1,c
 32885  0146A2  0060  F623  FFE6   	movff	_C+136,postinc1
 32886  0146A8  0060  F627  FFE6   	movff	_C+137,postinc1
 32887  0146AE  0060  F62B  FFE6   	movff	_C+138,postinc1
 32888  0146B4  0060  F62F  FFE6   	movff	_C+139,postinc1
 32889  0146BA  0060  F633  FFE6   	movff	_C+140,postinc1
 32890  0146C0  0060  F637  FFE6   	movff	_C+141,postinc1
 32891  0146C6  0060  F63B  FFE6   	movff	_C+142,postinc1
 32892  0146CC  0060  F63F  FFE6   	movff	_C+143,postinc1
 32893  0146D2  ECD5  F0A4         	call	___fldiv	;wreg free
 32894  0146D6  0060  F09B  FFE6   	movff	btemp,postinc1
 32895  0146DC  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32896  0146E2  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32897  0146E8  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32898  0146EE  EC41  F099         	call	___flmul	;wreg free
 32899  0146F2  0060  F09B  FFE6   	movff	btemp,postinc1
 32900  0146F8  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32901  0146FE  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32902  014704  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32903  01470A  EC39  F0C2         	call	___fltol	;wreg free
 32904  01470E  0060  F098  F030   	movff	btemp,btemp+10
 32905  014714  0060  F09C  F031   	movff	btemp+1,btemp+11
 32906  01471A  0E01               	movlw	1
 32907  01471C  2430               	addwf	(btemp+10)^0,w,c
 32908  01471E  0101               	movlb	1	; () banked
 32909  014720  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
 32910  014722  0E00               	movlw	0
 32911  014724  2031               	addwfc	(btemp+11)^0,w,c
 32912  014726  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
 32913                           
 32914                           ; BSR set to: 1
 32915                           ;bsoc.c: 62:  if (C.soc > 100)
 32916  014728  51AF               	movf	(_C+175)& (0+255),w,b	;volatile
 32917  01472A  E104               	bnz	u1207_20
 32918  01472C  0E65               	movlw	101
 32919  01472E  5DAE               	subwf	(_C+174)& (0+255),w,b	;volatile
 32920  014730  A0D8               	btfss	status,0,c
 32921  014732  D004               	goto	l12563
 32922  014734                     u1207_20:
 32923                           
 32924                           ; BSR set to: 1
 32925                           ;bsoc.c: 63:   C.soc = 100;
 32926  014734  0E00               	movlw	0
 32927  014736  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
 32928  014738  0E64               	movlw	100
 32929  01473A  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
 32930  01473C                     l12563:
 32931                           
 32932                           ; BSR set to: 1
 32933                           ;bsoc.c: 65:  if (C.c_bat < 0.0) {
 32934  01473C  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 32935  01473E  D043               	goto	l12567
 32936                           
 32937                           ; BSR set to: 1
 32938                           ;bsoc.c: 66:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 32939  014740  0060  F513  FFE6   	movff	_C+68,postinc1
 32940  014746  0060  F517  FFE6   	movff	_C+69,postinc1
 32941  01474C  0060  F51B  FFE6   	movff	_C+70,postinc1
 32942  014752  0060  F51F  FFE6   	movff	_C+71,postinc1
 32943  014758  0060  F633  FFE6   	movff	_C+140,postinc1
 32944  01475E  0060  F637  FFE6   	movff	_C+141,postinc1
 32945  014764  0060  F63B  FFE6   	movff	_C+142,postinc1
 32946  01476A  0060  F63F  FFE6   	movff	_C+143,postinc1
 32947  014770  ECD5  F0A4         	call	___fldiv	;wreg free
 32948  014774  0060  F09B  FFE6   	movff	btemp,postinc1
 32949  01477A  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32950  014780  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32951  014786  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32952  01478C  ECD8  F0D5         	call	___flneg	;wreg free
 32953  014790  0060  F09B  FFE6   	movff	btemp,postinc1
 32954  014796  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32955  01479C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32956  0147A2  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32957  0147A8  EC39  F0C2         	call	___fltol	;wreg free
 32958  0147AC  0060  F098  F030   	movff	btemp,btemp+10
 32959  0147B2  0060  F09C  F031   	movff	btemp+1,btemp+11
 32960  0147B8  0060  F0C0  F1AC   	movff	btemp+10,_C+172	;volatile
 32961  0147BE  0060  F0C4  F1AD   	movff	btemp+11,_C+173	;volatile
 32962                           
 32963                           ;bsoc.c: 67:  } else {
 32964  0147C4  D004               	goto	l12569
 32965  0147C6                     l12567:
 32966                           
 32967                           ; BSR set to: 1
 32968                           ;bsoc.c: 68:   C.runtime = 120;
 32969  0147C6  0E00               	movlw	0
 32970  0147C8  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
 32971  0147CA  0E78               	movlw	120
 32972  0147CC  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 32973  0147CE                     l12569:
 32974                           
 32975                           ;bsoc.c: 70:  if (C.runtime > 120)
 32976  0147CE  0101               	movlb	1	; () banked
 32977  0147D0  51AD               	movf	(_C+173)& (0+255),w,b	;volatile
 32978  0147D2  E104               	bnz	u1209_20
 32979  0147D4  0E79               	movlw	121
 32980  0147D6  5DAC               	subwf	(_C+172)& (0+255),w,b	;volatile
 32981  0147D8  A0D8               	btfss	status,0,c
 32982  0147DA  D004               	goto	l12573
 32983  0147DC                     u1209_20:
 32984                           
 32985                           ; BSR set to: 1
 32986                           ;bsoc.c: 71:   C.runtime = 120;
 32987  0147DC  0E00               	movlw	0
 32988  0147DE  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
 32989  0147E0  0E78               	movlw	120
 32990  0147E2  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 32991  0147E4                     l12573:
 32992                           
 32993                           ; BSR set to: 1
 32994                           ;bsoc.c: 73:  V.lowint_count++;
 32995  0147E4  0E01               	movlw	1
 32996  0147E6  0102               	movlb	2	; () banked
 32997  0147E8  27B9               	addwf	(_V+178)& (0+255),f,b	;volatile
 32998  0147EA  0E00               	movlw	0
 32999  0147EC  23BA               	addwfc	(_V+179)& (0+255),f,b	;volatile
 33000  0147EE  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 33001  0147F0  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 33002                           
 33003                           ; BSR set to: 2
 33004                           ;bsoc.c: 75:  if (!log_update_wait++) {
 33005  0147F2  2A1A               	incf	calc_bsoc@log_update_wait^0,f,c
 33006  0147F4  041A               	decf	calc_bsoc@log_update_wait^0,w,c
 33007  0147F6  A4D8               	btfss	status,2,c
 33008  0147F8  D0CE               	goto	l12585
 33009                           
 33010                           ; BSR set to: 2
 33011                           ;bsoc.c: 76:   log_ptr = port_data_dma_ptr();
 33012  0147FA  EC2E  F0DC         	call	_port_data_dma_ptr	;wreg free
 33013                           
 33014                           ;stkvar	_log_ptr @ sp[(-2)+0]
 33015  0147FE  0EFF               	movlw	-1
 33016  014800  0060  F09F  FFE3   	movff	btemp+1,plusw1
 33017  014806  0EFE               	movlw	-2
 33018  014808  0060  F09B  FFE3   	movff	btemp,plusw1
 33019                           
 33020                           ;bsoc.c: 77:   sprintf((char*) log_ptr, " %lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4.3f,
      +                          %4.3f,%4.3f,%4.3f,%4.3d,%4.3d,%2.6f\r\n",
 33021  01480E  0060  F613  FFE6   	movff	_C+132,postinc1
 33022  014814  0060  F617  FFE6   	movff	_C+133,postinc1
 33023  01481A  0060  F61B  FFE6   	movff	_C+134,postinc1
 33024  014820  0060  F61F  FFE6   	movff	_C+135,postinc1
 33025  014826  0060  F6B3  FFE6   	movff	_C+172,postinc1
 33026  01482C  0060  F6B7  FFE6   	movff	_C+173,postinc1
 33027  014832  0060  F6BB  FFE6   	movff	_C+174,postinc1
 33028  014838  0060  F6BF  FFE6   	movff	_C+175,postinc1
 33029  01483E  0060  F643  FFE6   	movff	_C+144,postinc1
 33030  014844  0060  F647  FFE6   	movff	_C+145,postinc1
 33031  01484A  0060  F64B  FFE6   	movff	_C+146,postinc1
 33032  014850  0060  F64F  FFE6   	movff	_C+147,postinc1
 33033  014856  0060  F633  FFE6   	movff	_C+140,postinc1
 33034  01485C  0060  F637  FFE6   	movff	_C+141,postinc1
 33035  014862  0060  F63B  FFE6   	movff	_C+142,postinc1
 33036  014868  0060  F63F  FFE6   	movff	_C+143,postinc1
 33037  01486E  0060  F5D3  FFE6   	movff	_C+116,postinc1
 33038  014874  0060  F5D7  FFE6   	movff	_C+117,postinc1
 33039  01487A  0060  F5DB  FFE6   	movff	_C+118,postinc1
 33040  014880  0060  F5DF  FFE6   	movff	_C+119,postinc1
 33041  014886  0060  F5C3  FFE6   	movff	_C+112,postinc1
 33042  01488C  0060  F5C7  FFE6   	movff	_C+113,postinc1
 33043  014892  0060  F5CB  FFE6   	movff	_C+114,postinc1
 33044  014898  0060  F5CF  FFE6   	movff	_C+115,postinc1
 33045  01489E  0060  F5E3  FFE6   	movff	_C+120,postinc1
 33046  0148A4  0060  F5E7  FFE6   	movff	_C+121,postinc1
 33047  0148AA  0060  F5EB  FFE6   	movff	_C+122,postinc1
 33048  0148B0  0060  F5EF  FFE6   	movff	_C+123,postinc1
 33049  0148B6  0060  F5F3  FFE6   	movff	_C+124,postinc1
 33050  0148BC  0060  F5F7  FFE6   	movff	_C+125,postinc1
 33051  0148C2  0060  F5FB  FFE6   	movff	_C+126,postinc1
 33052  0148C8  0060  F5FF  FFE6   	movff	_C+127,postinc1
 33053  0148CE  0060  F593  FFE6   	movff	_C+100,postinc1
 33054  0148D4  0060  F597  FFE6   	movff	_C+101,postinc1
 33055  0148DA  0060  F59B  FFE6   	movff	_C+102,postinc1
 33056  0148E0  0060  F59F  FFE6   	movff	_C+103,postinc1
 33057  0148E6  0060  F533  FFE6   	movff	_C+76,postinc1
 33058  0148EC  0060  F537  FFE6   	movff	_C+77,postinc1
 33059  0148F2  0060  F53B  FFE6   	movff	_C+78,postinc1
 33060  0148F8  0060  F53F  FFE6   	movff	_C+79,postinc1
 33061  0148FE  0060  F543  FFE6   	movff	_C+80,postinc1
 33062  014904  0060  F547  FFE6   	movff	_C+81,postinc1
 33063  01490A  0060  F54B  FFE6   	movff	_C+82,postinc1
 33064  014910  0060  F54F  FFE6   	movff	_C+83,postinc1
 33065  014916  0060  F553  FFE6   	movff	_C+84,postinc1
 33066  01491C  0060  F557  FFE6   	movff	_C+85,postinc1
 33067  014922  0060  F55B  FFE6   	movff	_C+86,postinc1
 33068  014928  0060  F55F  FFE6   	movff	_C+87,postinc1
 33069  01492E  0060  FA23  FFE6   	movff	_V+129,postinc1
 33070  014934  0060  FA27  FFE6   	movff	_V+130,postinc1
 33071  01493A  0060  FA2B  FFE6   	movff	_V+131,postinc1
 33072  014940  0060  FA2F  FFE6   	movff	_V+132,postinc1
 33073  014946  0E65               	movlw	low STR_65
 33074  014948  6EE6               	movwf	postinc1,c
 33075  01494A  0EFC               	movlw	high STR_65
 33076  01494C  6EE6               	movwf	postinc1,c
 33077                           
 33078                           ;stkvar	_log_ptr @ sp[(-56)+0]
 33079  01494E  0EC8               	movlw	-56
 33080  014950  006F FF8F FFE6     	movff	plusw1,postinc1
 33081  014956  006F FF8F FFE6     	movff	plusw1,postinc1
 33082  01495C  0E38               	movlw	56
 33083  01495E  6EE6               	movwf	postinc1,c
 33084  014960  ECB9  F0C9         	call	_sprintf	;wreg free
 33085                           
 33086                           ; BSR set to: 0
 33087                           ;bsoc.c: 83:   StartTimer(TMR_DISPLAY, 125);
 33088  014964  0E7D               	movlw	125
 33089  014966  6EE6               	movwf	postinc1,c
 33090  014968  0E00               	movlw	0
 33091  01496A  6EE6               	movwf	postinc1,c
 33092  01496C  0E0A               	movlw	10
 33093  01496E  6EE6               	movwf	postinc1,c
 33094  014970  ECEE  F0D6         	call	_StartTimer	;wreg free
 33095                           
 33096                           ;bsoc.c: 84:   send_port_data_dma(strlen((char*) log_ptr));
 33097                           ;stkvar	_log_ptr @ sp[(-2)+0]
 33098  014974  0EFE               	movlw	-2
 33099  014976  006F FF8F FFE6     	movff	plusw1,postinc1
 33100  01497C  006F FF8F FFE6     	movff	plusw1,postinc1
 33101  014982  EC59  F0D0         	call	_strlen	;wreg free
 33102  014986  0060  F09B  FFE6   	movff	btemp,postinc1
 33103  01498C  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33104  014992  EC63  F0D5         	call	_send_port_data_dma	;wreg free
 33105  014996                     l12585:
 33106                           
 33107                           ;bsoc.c: 86:  if (log_update_wait >= 10)
 33108  014996  0E09               	movlw	9
 33109  014998  641A               	cpfsgt	calc_bsoc@log_update_wait^0,c
 33110  01499A  D001               	goto	l2028
 33111                           
 33112                           ;bsoc.c: 87:   log_update_wait = 0;
 33113  01499C  6A1A               	clrf	calc_bsoc@log_update_wait^0,c
 33114  01499E                     l2028:
 33115                           
 33116                           ;bsoc.c: 89:  C.update = 0;
 33117  01499E  0101               	movlb	1	; () banked
 33118  0149A0  6BB0               	clrf	(_C+176)& (0+255),b	;volatile
 33119                           
 33120                           ; BSR set to: 1
 33121                           
 33122                           ;bsoc.c: 91:  do { LATEbits.LATE1 = 0; } while(0);
 33123  0149A2  92BE               	bcf	190,1,c	;volatile
 33124                           
 33125                           ; BSR set to: 1
 33126                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 33127  0149A4  52E5               	movf	postdec1,f,c
 33128  0149A6  52E5               	movf	postdec1,f,c
 33129  0149A8  0012               	return		;funcret
 33130  0149AA                     __end_of_calc_bsoc:
 33131                           	opt callstack 0
 33132                           
 33133 ;; *************** function _send_port_data_dma *****************
 33134 ;; Defined at:
 33135 ;;		line 258 in file "eadog.c"
 33136 ;; Parameters:    Size  Location     Type
 33137 ;;  dsize           2  [STACK] unsigned short 
 33138 ;; Auto vars:     Size  Location     Type
 33139 ;;		None
 33140 ;; Return value:  Size  Location     Type
 33141 ;;                  1  [STACK] void 
 33142 ;; Registers used:
 33143 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 33144 ;; Tracked objects:
 33145 ;;		On entry : 0/0
 33146 ;;		On exit  : 3F/3B
 33147 ;;		Unchanged: 0/0
 33148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33153 ;;Total ram usage:        0 bytes
 33154 ;; Hardware stack levels used:    1
 33155 ;; Hardware stack levels required when called:    3
 33156 ;; This function calls:
 33157 ;;		Nothing
 33158 ;; This function is called by:
 33159 ;;		_calc_bsoc
 33160 ;; This function uses a reentrant model
 33161 ;;
 33162                           
 33163                           	psect	text150
 33164  01AAC6                     __ptext150:
 33165                           	opt callstack 0
 33166  01AAC6                     _send_port_data_dma:
 33167                           	opt callstack 11
 33168                           
 33169                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 33170                           ;stkvar	_dsize @ sp[(0)+-2]
 33171                           
 33172                           ; BSR set to: 1
 33173                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33174                           ;incstack = 0
 33175  01AAC6  0EFE               	movlw	-2
 33176  01AAC8  04E3               	decf	plusw1,w,c
 33177  01AACA  0EFF               	movlw	-1
 33178  01AACC  006F FF8C  F026    	movff	plusw1,btemp
 33179  01AAD2  0E02               	movlw	2
 33180  01AAD4  5A26               	subwfb	btemp^0,f,c
 33181  01AAD6  A0D8               	btfss	status,0,c
 33182  01AAD8  D00C               	goto	l9781
 33183                           
 33184                           ;eadog.c: 261:   dsize = 512;
 33185  01AADA  0E00               	movlw	0
 33186  01AADC  6E30               	movwf	(btemp+10)^0,c
 33187  01AADE  0E02               	movlw	2
 33188  01AAE0  6E31               	movwf	(btemp+11)^0,c
 33189                           
 33190                           ;stkvar	_dsize @ sp[(0)+-2]
 33191  01AAE2  0EFE               	movlw	-2
 33192  01AAE4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 33193  01AAEA  0EFF               	movlw	-1
 33194  01AAEC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 33195  01AAF2                     l9781:
 33196                           
 33197                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 33198  01AAF2  013B               	movlb	59	; () banked
 33199  01AAF4  9FDC               	bcf	220,7,b	;volatile
 33200                           
 33201                           ; BSR set to: 59
 33202                           ;eadog.c: 264:  DMA2SSZ = dsize;
 33203                           ;stkvar	_dsize @ sp[(0)+-2]
 33204  01AAF6  0EFE               	movlw	-2
 33205  01AAF8  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 33206  01AAFE  0EFF               	movlw	-1
 33207  01AB00  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 33208                           
 33209                           ; BSR set to: 59
 33210                           ;eadog.c: 265:  DMA2DSZ = 1;
 33211  01AB06  0E00               	movlw	0
 33212  01AB08  6FCF               	movwf	207,b	;volatile
 33213  01AB0A  0E01               	movlw	1
 33214  01AB0C  6FCE               	movwf	206,b	;volatile
 33215                           
 33216                           ; BSR set to: 59
 33217                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 33218  01AB0E  8FDC               	bsf	220,7,b	;volatile
 33219                           
 33220                           ; BSR set to: 59
 33221                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 33222  01AB10  8DDC               	bsf	220,6,b	;volatile
 33223                           
 33224                           ; BSR set to: 59
 33225                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 33226  01AB12  52E5               	movf	postdec1,f,c
 33227  01AB14  52E5               	movf	postdec1,f,c
 33228  01AB16  0012               	return		;funcret
 33229  01AB18                     __end_of_send_port_data_dma:
 33230                           	opt callstack 0
 33231                           
 33232 ;; *************** function _port_data_dma_ptr *****************
 33233 ;; Defined at:
 33234 ;;		line 273 in file "eadog.c"
 33235 ;; Parameters:    Size  Location     Type
 33236 ;;		None
 33237 ;; Auto vars:     Size  Location     Type
 33238 ;;		None
 33239 ;; Return value:  Size  Location     Type
 33240 ;;                  2  [STACK] PTR unsigned char 
 33241 ;; Registers used:
 33242 ;;		wreg, status,2, status,0, btemp, btemp+1
 33243 ;; Tracked objects:
 33244 ;;		On entry : 3F/2
 33245 ;;		On exit  : 0/0
 33246 ;;		Unchanged: 0/0
 33247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33252 ;;Total ram usage:        0 bytes
 33253 ;; Hardware stack levels used:    1
 33254 ;; Hardware stack levels required when called:    3
 33255 ;; This function calls:
 33256 ;;		Nothing
 33257 ;; This function is called by:
 33258 ;;		_calc_bsoc
 33259 ;; This function uses a reentrant model
 33260 ;;
 33261                           
 33262                           	psect	text151
 33263  01B85C                     __ptext151:
 33264                           	opt callstack 0
 33265  01B85C                     _port_data_dma_ptr:
 33266                           	opt callstack 11
 33267                           
 33268                           ;eadog.c: 275:  return port_data;
 33269                           
 33270                           ; BSR set to: 59
 33271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33272                           ;incstack = 0
 33273  01B85C  0EFF               	movlw	low _port_data
 33274  01B85E  6E26               	movwf	btemp^0,c
 33275  01B860  0E05               	movlw	high _port_data
 33276  01B862  6E27               	movwf	(btemp+1)^0,c
 33277                           
 33278                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33279  01B864  0012               	return		;funcret
 33280  01B866                     __end_of_port_data_dma_ptr:
 33281                           	opt callstack 0
 33282                           
 33283 ;; *************** function _INT0_ISR *****************
 33284 ;; Defined at:
 33285 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 33286 ;; Parameters:    Size  Location     Type
 33287 ;;		None
 33288 ;; Auto vars:     Size  Location     Type
 33289 ;;		None
 33290 ;; Return value:  Size  Location     Type
 33291 ;;                  1    wreg      void 
 33292 ;; Registers used:
 33293 ;;		wreg, status,2, status,0, pclath, tosl
 33294 ;; Tracked objects:
 33295 ;;		On entry : 0/0
 33296 ;;		On exit  : 0/0
 33297 ;;		Unchanged: 0/0
 33298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33303 ;;Total ram usage:        0 bytes
 33304 ;; Hardware stack levels used:    1
 33305 ;; Hardware stack levels required when called:    2
 33306 ;; This function calls:
 33307 ;;		_INT0_CallBack
 33308 ;; This function is called by:
 33309 ;;		Interrupt level 2
 33310 ;; This function uses a non-reentrant model
 33311 ;;
 33312                           
 33313                           	psect	text152
 33314  01B834                     __ptext152:
 33315                           	opt callstack 0
 33316  01B834                     _INT0_ISR:
 33317                           	opt callstack 3
 33318                           
 33319                           ;incstack = 0
 33320  01B834  EE14  F142         	lfsr	1,___inthi_sp
 33321                           
 33322                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 33323  01B838  0139               	movlb	57	; () banked
 33324  01B83A  91A1               	bcf	161,0,b	;volatile
 33325                           
 33326                           ; BSR set to: 57
 33327                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 33328  01B83C  EC03  F0DB         	call	_INT0_CallBack	;wreg free
 33329  01B840  0011               	retfie		f
 33330  01B842                     __end_of_INT0_ISR:
 33331                           	opt callstack 0
 33332                           
 33333 ;; *************** function _INT0_CallBack *****************
 33334 ;; Defined at:
 33335 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 33336 ;; Parameters:    Size  Location     Type
 33337 ;;		None
 33338 ;; Auto vars:     Size  Location     Type
 33339 ;;		None
 33340 ;; Return value:  Size  Location     Type
 33341 ;;                  1  [STACK] void 
 33342 ;; Registers used:
 33343 ;;		wreg, status,2, status,0, pclath, tosl
 33344 ;; Tracked objects:
 33345 ;;		On entry : 3F/39
 33346 ;;		On exit  : 0/0
 33347 ;;		Unchanged: 0/0
 33348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33353 ;;Total ram usage:        0 bytes
 33354 ;; Hardware stack levels used:    1
 33355 ;; Hardware stack levels required when called:    1
 33356 ;; This function calls:
 33357 ;;		Absolute function
 33358 ;;		_INT0_DefaultInterruptHandler
 33359 ;; This function is called by:
 33360 ;;		_INT0_ISR
 33361 ;; This function uses a reentrant model
 33362 ;;
 33363                           
 33364                           	psect	text153
 33365  01B606                     __ptext153:
 33366                           	opt callstack 0
 33367  01B606                     _INT0_CallBack:
 33368                           	opt callstack 3
 33369                           
 33370                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 33371                           
 33372                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33373                           ;incstack = 0
 33374  01B606  5007               	movf	_INT0_InterruptHandler^0,w,c
 33375  01B608  1008               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 33376  01B60A  1009               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 33377  01B60C  B4D8               	btfsc	status,2,c
 33378  01B60E  0012               	return	
 33379                           
 33380                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 33381  01B610  D801               	call	u448_48
 33382  01B612  0012               	return	
 33383  01B614                     u448_48:
 33384  01B614  0005               	push	
 33385  01B616  6EFA               	movwf	pclath,c
 33386  01B618  5007               	movf	_INT0_InterruptHandler^0,w,c
 33387  01B61A  6EFD               	movwf	tosl,c
 33388  01B61C  5008               	movf	(_INT0_InterruptHandler+1)^0,w,c
 33389  01B61E  6EFE               	movwf	tosh,c
 33390  01B620  5009               	movf	(_INT0_InterruptHandler+2)^0,w,c
 33391  01B622  6EFF               	movwf	tosu,c
 33392  01B624  50FA               	movf	pclath,w,c
 33393  01B626  0012               	return		;indir
 33394  01B628                     __end_of_INT0_CallBack:
 33395                           	opt callstack 0
 33396                           
 33397 ;; *************** function _INT0_DefaultInterruptHandler *****************
 33398 ;; Defined at:
 33399 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 33400 ;; Parameters:    Size  Location     Type
 33401 ;;		None
 33402 ;; Auto vars:     Size  Location     Type
 33403 ;;		None
 33404 ;; Return value:  Size  Location     Type
 33405 ;;                  1  [STACK] void 
 33406 ;; Registers used:
 33407 ;;		None
 33408 ;; Tracked objects:
 33409 ;;		On entry : 0/39
 33410 ;;		On exit  : 0/0
 33411 ;;		Unchanged: 0/0
 33412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33417 ;;Total ram usage:        0 bytes
 33418 ;; Hardware stack levels used:    1
 33419 ;; This function calls:
 33420 ;;		Nothing
 33421 ;; This function is called by:
 33422 ;;		_EXT_INT_Initialize
 33423 ;;		_INT0_CallBack
 33424 ;; This function uses a reentrant model
 33425 ;;
 33426                           
 33427                           	psect	text154
 33428  01B8D6                     __ptext154:
 33429                           	opt callstack 0
 33430  01B8D6                     _INT0_DefaultInterruptHandler:
 33431                           	opt callstack 3
 33432                           
 33433                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33434                           
 33435                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33436                           ;incstack = 0
 33437  01B8D6  0012               	return		;funcret
 33438  01B8D8                     __end_of_INT0_DefaultInterruptHandler:
 33439                           	opt callstack 0
 33440                           
 33441 ;; *************** function _Default_ISR *****************
 33442 ;; Defined at:
 33443 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 33444 ;; Parameters:    Size  Location     Type
 33445 ;;		None
 33446 ;; Auto vars:     Size  Location     Type
 33447 ;;		None
 33448 ;; Return value:  Size  Location     Type
 33449 ;;                  1    wreg      void 
 33450 ;; Registers used:
 33451 ;;		None
 33452 ;; Tracked objects:
 33453 ;;		On entry : 0/0
 33454 ;;		On exit  : 0/0
 33455 ;;		Unchanged: 0/0
 33456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33461 ;;Total ram usage:        0 bytes
 33462 ;; Hardware stack levels used:    1
 33463 ;; This function calls:
 33464 ;;		Nothing
 33465 ;; This function is called by:
 33466 ;;		Interrupt level 2
 33467 ;; This function uses a non-reentrant model
 33468 ;;
 33469                           
 33470                           	psect	text155
 33471  01B8CC                     __ptext155:
 33472                           	opt callstack 0
 33473  01B8CC                     _Default_ISR:
 33474                           	opt callstack 5
 33475                           
 33476                           ;incstack = 0
 33477  01B8CC  EE14  F142         	lfsr	1,___inthi_sp
 33478  01B8D0  0011               	retfie		f
 33479  01B8D2                     __end_of_Default_ISR:
 33480                           	opt callstack 0
 33481                           
 33482 ;; *************** function _ADCC_ISR *****************
 33483 ;; Defined at:
 33484 ;;		line 314 in file "mcc_generated_files/adcc.c"
 33485 ;; Parameters:    Size  Location     Type
 33486 ;;		None
 33487 ;; Auto vars:     Size  Location     Type
 33488 ;;		None
 33489 ;; Return value:  Size  Location     Type
 33490 ;;                  1    wreg      void 
 33491 ;; Registers used:
 33492 ;;		wreg, status,2, status,0, pclath, tosl
 33493 ;; Tracked objects:
 33494 ;;		On entry : 0/0
 33495 ;;		On exit  : 0/0
 33496 ;;		Unchanged: 0/0
 33497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33502 ;;Total ram usage:        0 bytes
 33503 ;; Hardware stack levels used:    1
 33504 ;; Hardware stack levels required when called:    1
 33505 ;; This function calls:
 33506 ;;		Absolute function
 33507 ;;		_ADCC_DefaultInterruptHandler
 33508 ;;		_adc_int_handler
 33509 ;; This function is called by:
 33510 ;;		Interrupt level 2
 33511 ;; This function uses a non-reentrant model
 33512 ;;
 33513                           
 33514                           	psect	text156
 33515  01B1E4                     __ptext156:
 33516                           	opt callstack 0
 33517  01B1E4                     _ADCC_ISR:
 33518                           	opt callstack 4
 33519                           
 33520                           ;incstack = 0
 33521  01B1E4  EE14  F142         	lfsr	1,___inthi_sp
 33522                           
 33523                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 33524  01B1E8  0139               	movlb	57	; () banked
 33525  01B1EA  95A1               	bcf	161,2,b	;volatile
 33526                           
 33527                           ; BSR set to: 57
 33528                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 33529  01B1EC  0100               	movlb	0	; () banked
 33530  01B1EE  51A6               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33531  01B1F0  11A7               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33532  01B1F2  11A8               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33533  01B1F4  B4D8               	btfsc	status,2,c
 33534  01B1F6  0011               	retfie		f
 33535                           
 33536                           ; BSR set to: 0
 33537                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 33538  01B1F8  D801               	call	i2u1011_48
 33539  01B1FA  0011               	retfie		f
 33540  01B1FC                     i2u1011_48:
 33541  01B1FC  0005               	push	
 33542  01B1FE  6EFA               	movwf	pclath,c
 33543  01B200  51A6               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33544  01B202  6EFD               	movwf	tosl,c
 33545  01B204  51A7               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33546  01B206  6EFE               	movwf	tosh,c
 33547  01B208  51A8               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33548  01B20A  6EFF               	movwf	tosu,c
 33549  01B20C  50FA               	movf	pclath,w,c
 33550  01B20E  0012               	return		;indir
 33551  01B210                     __end_of_ADCC_ISR:
 33552                           	opt callstack 0
 33553                           
 33554 ;; *************** function _adc_int_t_handler *****************
 33555 ;; Defined at:
 33556 ;;		line 143 in file "daq.c"
 33557 ;; Parameters:    Size  Location     Type
 33558 ;;		None
 33559 ;; Auto vars:     Size  Location     Type
 33560 ;;		None
 33561 ;; Return value:  Size  Location     Type
 33562 ;;                  1  [STACK] void 
 33563 ;; Registers used:
 33564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 33565 ;; Tracked objects:
 33566 ;;		On entry : 3F/0
 33567 ;;		On exit  : 1/0
 33568 ;;		Unchanged: 0/0
 33569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33574 ;;Total ram usage:        0 bytes
 33575 ;; Hardware stack levels used:    1
 33576 ;; Hardware stack levels required when called:    1
 33577 ;; This function calls:
 33578 ;;		_ADCC_DischargeSampleCapacitor
 33579 ;;		_ADCC_StartConversion
 33580 ;; This function is called by:
 33581 ;;		_start_adc_scan
 33582 ;;		_ADCC_ThresholdISR
 33583 ;; This function uses a reentrant model
 33584 ;;
 33585                           
 33586                           	psect	text157
 33587  01A5C4                     __ptext157:
 33588                           	opt callstack 0
 33589  01A5C4                     _adc_int_t_handler:
 33590                           	opt callstack 3
 33591                           
 33592                           ;daq.c: 148:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 33593                           
 33594                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33595                           ;incstack = 0
 33596  01A5C4  013E               	movlb	62	; () banked
 33597  01A5C6  51E6               	movf	230,w,b	;volatile
 33598  01A5C8  006F FB9C  F026    	movff	16103,btemp	;volatile
 33599  01A5CE  6A27               	clrf	(btemp+1)^0,c
 33600  01A5D0  0060  F098  F027   	movff	btemp,btemp+1
 33601  01A5D6  6A26               	clrf	btemp^0,c
 33602  01A5D8  2626               	addwf	btemp^0,f,c
 33603  01A5DA  0E00               	movlw	0
 33604  01A5DC  2227               	addwfc	(btemp+1)^0,f,c
 33605  01A5DE  0100               	movlb	0	; () banked
 33606  01A5E0  51D5               	movf	(_R+36)& (0+255),w,b	;volatile
 33607  01A5E2  0D02               	mullw	2
 33608  01A5E4  50F3               	movf	243,w,c
 33609  01A5E6  0FB1               	addlw	low _R
 33610  01A5E8  6ED9               	movwf	fsr2l,c
 33611  01A5EA  6ADA               	clrf	fsr2h,c
 33612  01A5EC  0060  F09B  FFDE   	movff	btemp,postinc2
 33613  01A5F2  0060  F09F  FFDD   	movff	btemp+1,postdec2
 33614  01A5F8                     l10915:
 33615                           
 33616                           ;daq.c: 150:   if (++R.scan_index > 0XD) {
 33617  01A5F8  0100               	movlb	0	; () banked
 33618  01A5FA  2BD5               	incf	(_R+36)& (0+255),f,b	;volatile
 33619  01A5FC  0E0D               	movlw	13
 33620  01A5FE  65D5               	cpfsgt	(_R+36)& (0+255),b	;volatile
 33621  01A600  D003               	goto	l10921
 33622                           
 33623                           ; BSR set to: 0
 33624                           ;daq.c: 151:    R.done = 1;
 33625  01A602  0E01               	movlw	1
 33626  01A604  6FD8               	movwf	(_R+39)& (0+255),b	;volatile
 33627  01A606  0012               	return	
 33628  01A608                     l10921:
 33629                           
 33630                           ; BSR set to: 0
 33631                           ;daq.c: 157:  } while (!((R.scan_select >> R.scan_index) &0x1));
 33632  01A608  0060  F354  F031   	movff	_R+36,btemp+11	;volatile
 33633  01A60E  EE20  F0D6         	lfsr	2,_R+37	;volatile
 33634  01A612  006F FF78  F02E    	movff	postinc2,btemp+8
 33635  01A618  006F FF74  F02F    	movff	postdec2,btemp+9
 33636  01A61E  2A31               	incf	(btemp+11)^0,f,c
 33637  01A620  D003               	goto	u1008_44
 33638  01A622                     u1008_45:
 33639  01A622  90D8               	bcf	status,0,c
 33640  01A624  322F               	rrcf	(btemp+9)^0,f,c
 33641  01A626  322E               	rrcf	(btemp+8)^0,f,c
 33642  01A628                     u1008_44:
 33643  01A628  2E31               	decfsz	(btemp+11)^0,f,c
 33644  01A62A  D7FB               	goto	u1008_45
 33645  01A62C  A02E               	btfss	(btemp+8)^0,0,c
 33646  01A62E  D7E4               	goto	l10915
 33647                           
 33648                           ;daq.c: 158:  ADCC_DischargeSampleCapacitor();
 33649  01A630  EC45  F0DC         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 33650                           
 33651                           ; BSR set to: 62
 33652                           ;daq.c: 159:  ADCC_StartConversion(R.scan_index & 0xf);
 33653  01A634  0100               	movlb	0	; () banked
 33654  01A636  51D5               	movf	(_R+36)& (0+255),w,b	;volatile
 33655  01A638  0B0F               	andlw	15
 33656  01A63A  6EE6               	movwf	postinc1,c
 33657  01A63C  ECEA  F0DB         	call	_ADCC_StartConversion	;wreg free
 33658                           
 33659                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33660  01A640  0012               	return		;funcret
 33661  01A642                     __end_of_adc_int_t_handler:
 33662                           	opt callstack 0
 33663                           
 33664 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 33665 ;; Defined at:
 33666 ;;		line 339 in file "mcc_generated_files/adcc.c"
 33667 ;; Parameters:    Size  Location     Type
 33668 ;;		None
 33669 ;; Auto vars:     Size  Location     Type
 33670 ;;		None
 33671 ;; Return value:  Size  Location     Type
 33672 ;;                  1  [STACK] void 
 33673 ;; Registers used:
 33674 ;;		None
 33675 ;; Tracked objects:
 33676 ;;		On entry : 3F/0
 33677 ;;		On exit  : 0/0
 33678 ;;		Unchanged: 0/0
 33679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33684 ;;Total ram usage:        0 bytes
 33685 ;; Hardware stack levels used:    1
 33686 ;; This function calls:
 33687 ;;		Nothing
 33688 ;; This function is called by:
 33689 ;;		_ADCC_Initialize
 33690 ;;		_ADCC_ISR
 33691 ;;		_ADCC_ThresholdISR
 33692 ;; This function uses a reentrant model
 33693 ;;
 33694                           
 33695                           	psect	text158
 33696  01B8D8                     __ptext158:
 33697                           	opt callstack 0
 33698  01B8D8                     _ADCC_DefaultInterruptHandler:
 33699                           	opt callstack 4
 33700                           
 33701                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33702                           
 33703                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33704                           ;incstack = 0
 33705  01B8D8  0012               	return		;funcret
 33706  01B8DA                     __end_of_ADCC_DefaultInterruptHandler:
 33707                           	opt callstack 0
 33708                           
 33709 ;; *************** function _adc_int_handler *****************
 33710 ;; Defined at:
 33711 ;;		line 133 in file "daq.c"
 33712 ;; Parameters:    Size  Location     Type
 33713 ;;		None
 33714 ;; Auto vars:     Size  Location     Type
 33715 ;;		None
 33716 ;; Return value:  Size  Location     Type
 33717 ;;                  1  [STACK] void 
 33718 ;; Registers used:
 33719 ;;		None
 33720 ;; Tracked objects:
 33721 ;;		On entry : 3F/0
 33722 ;;		On exit  : 0/0
 33723 ;;		Unchanged: 0/0
 33724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33729 ;;Total ram usage:        0 bytes
 33730 ;; Hardware stack levels used:    1
 33731 ;; This function calls:
 33732 ;;		Nothing
 33733 ;; This function is called by:
 33734 ;;		_start_adc_scan
 33735 ;;		_ADCC_ISR
 33736 ;; This function uses a reentrant model
 33737 ;;
 33738                           
 33739                           	psect	text159
 33740  01B8DA                     __ptext159:
 33741                           	opt callstack 0
 33742  01B8DA                     _adc_int_handler:
 33743                           	opt callstack 4
 33744                           
 33745                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33746                           
 33747                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33748                           ;incstack = 0
 33749  01B8DA  0012               	return		;funcret
 33750  01B8DC                     __end_of_adc_int_handler:
 33751                           	opt callstack 0
 33752                           
 33753 ;; *************** function _ADCC_ThresholdISR *****************
 33754 ;; Defined at:
 33755 ;;		line 327 in file "mcc_generated_files/adcc.c"
 33756 ;; Parameters:    Size  Location     Type
 33757 ;;		None
 33758 ;; Auto vars:     Size  Location     Type
 33759 ;;		None
 33760 ;; Return value:  Size  Location     Type
 33761 ;;                  1    wreg      void 
 33762 ;; Registers used:
 33763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 33764 ;; Tracked objects:
 33765 ;;		On entry : 0/0
 33766 ;;		On exit  : 0/0
 33767 ;;		Unchanged: 0/0
 33768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33771 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33772 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33773 ;;Total ram usage:        5 bytes
 33774 ;; Hardware stack levels used:    1
 33775 ;; Hardware stack levels required when called:    2
 33776 ;; This function calls:
 33777 ;;		Absolute function
 33778 ;;		_ADCC_DefaultInterruptHandler
 33779 ;;		_adc_int_t_handler
 33780 ;; This function is called by:
 33781 ;;		Interrupt level 2
 33782 ;; This function uses a non-reentrant model
 33783 ;;
 33784                           
 33785                           	psect	text160
 33786  01A718                     __ptext160:
 33787                           	opt callstack 0
 33788  01A718                     _ADCC_ThresholdISR:
 33789                           	opt callstack 3
 33790                           
 33791                           ;incstack = 0
 33792  01A718  0060  F098  F046   	movff	btemp,??_ADCC_ThresholdISR
 33793  01A71E  0060  F09C  F047   	movff	btemp+1,??_ADCC_ThresholdISR+1
 33794  01A724  0060  F0B8  F048   	movff	btemp+8,??_ADCC_ThresholdISR+2
 33795  01A72A  0060  F0BC  F049   	movff	btemp+9,??_ADCC_ThresholdISR+3
 33796  01A730  0060  F0C4  F04A   	movff	btemp+11,??_ADCC_ThresholdISR+4
 33797  01A736  EE14  F142         	lfsr	1,___inthi_sp
 33798                           
 33799                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 33800  01A73A  0139               	movlb	57	; () banked
 33801  01A73C  97A1               	bcf	161,3,b	;volatile
 33802                           
 33803                           ; BSR set to: 57
 33804                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 33805  01A73E  0100               	movlb	0	; () banked
 33806  01A740  51A3               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33807  01A742  11A4               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33808  01A744  11A5               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33809  01A746  B4D8               	btfsc	status,2,c
 33810  01A748  D00C               	goto	i2u1013_49
 33811                           
 33812                           ; BSR set to: 0
 33813                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 33814  01A74A  D801               	call	i2u1013_48
 33815  01A74C  D00A               	goto	i2u1013_49
 33816  01A74E                     i2u1013_48:
 33817  01A74E  0005               	push	
 33818  01A750  6EFA               	movwf	pclath,c
 33819  01A752  51A3               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33820  01A754  6EFD               	movwf	tosl,c
 33821  01A756  51A4               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33822  01A758  6EFE               	movwf	tosh,c
 33823  01A75A  51A5               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33824  01A75C  6EFF               	movwf	tosu,c
 33825  01A75E  50FA               	movf	pclath,w,c
 33826  01A760  0012               	return		;indir
 33827  01A762                     i2u1013_49:
 33828  01A762  0060  F128  F031   	movff	??_ADCC_ThresholdISR+4,btemp+11
 33829  01A768  0060  F124  F02F   	movff	??_ADCC_ThresholdISR+3,btemp+9
 33830  01A76E  0060  F120  F02E   	movff	??_ADCC_ThresholdISR+2,btemp+8
 33831  01A774  0060  F11C  F027   	movff	??_ADCC_ThresholdISR+1,btemp+1
 33832  01A77A  0060  F118  F026   	movff	??_ADCC_ThresholdISR,btemp
 33833  01A780  0011               	retfie		f
 33834  01A782                     __end_of_ADCC_ThresholdISR:
 33835                           	opt callstack 0
 33836                           
 33837 ;; *************** function _UART1_rx_vect_isr *****************
 33838 ;; Defined at:
 33839 ;;		line 181 in file "mcc_generated_files/uart1.c"
 33840 ;; Parameters:    Size  Location     Type
 33841 ;;		None
 33842 ;; Auto vars:     Size  Location     Type
 33843 ;;		None
 33844 ;; Return value:  Size  Location     Type
 33845 ;;                  1    wreg      void 
 33846 ;; Registers used:
 33847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33848 ;; Tracked objects:
 33849 ;;		On entry : 0/0
 33850 ;;		On exit  : 0/0
 33851 ;;		Unchanged: 0/0
 33852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33857 ;;Total ram usage:        0 bytes
 33858 ;; Hardware stack levels used:    1
 33859 ;; Hardware stack levels required when called:    1
 33860 ;; This function calls:
 33861 ;;		Absolute function
 33862 ;;		_UART1_Receive_ISR
 33863 ;; This function is called by:
 33864 ;;		Interrupt level 2
 33865 ;; This function uses a non-reentrant model
 33866 ;;
 33867                           
 33868                           	psect	text161
 33869  01B498                     __ptext161:
 33870                           	opt callstack 0
 33871  01B498                     _UART1_rx_vect_isr:
 33872                           	opt callstack 4
 33873                           
 33874                           ;incstack = 0
 33875  01B498  EE14  F142         	lfsr	1,___inthi_sp
 33876                           
 33877                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 33878  01B49C  0100               	movlb	0	; () banked
 33879  01B49E  51A9               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33880  01B4A0  11AA               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33881  01B4A2  11AB               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33882  01B4A4  B4D8               	btfsc	status,2,c
 33883  01B4A6  0011               	retfie		f
 33884                           
 33885                           ; BSR set to: 0
 33886                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 33887  01B4A8  D801               	call	i2u1224_48
 33888  01B4AA  0011               	retfie		f
 33889  01B4AC                     i2u1224_48:
 33890  01B4AC  0005               	push	
 33891  01B4AE  6EFA               	movwf	pclath,c
 33892  01B4B0  51A9               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33893  01B4B2  6EFD               	movwf	tosl,c
 33894  01B4B4  51AA               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33895  01B4B6  6EFE               	movwf	tosh,c
 33896  01B4B8  51AB               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33897  01B4BA  6EFF               	movwf	tosu,c
 33898  01B4BC  50FA               	movf	pclath,w,c
 33899  01B4BE  0012               	return		;indir
 33900  01B4C0                     __end_of_UART1_rx_vect_isr:
 33901                           	opt callstack 0
 33902                           
 33903 ;; *************** function _UART1_Receive_ISR *****************
 33904 ;; Defined at:
 33905 ;;		line 192 in file "mcc_generated_files/uart1.c"
 33906 ;; Parameters:    Size  Location     Type
 33907 ;;		None
 33908 ;; Auto vars:     Size  Location     Type
 33909 ;;		None
 33910 ;; Return value:  Size  Location     Type
 33911 ;;                  1  [STACK] void 
 33912 ;; Registers used:
 33913 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33914 ;; Tracked objects:
 33915 ;;		On entry : 3F/0
 33916 ;;		On exit  : 0/0
 33917 ;;		Unchanged: 0/0
 33918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33923 ;;Total ram usage:        0 bytes
 33924 ;; Hardware stack levels used:    1
 33925 ;; This function calls:
 33926 ;;		Nothing
 33927 ;; This function is called by:
 33928 ;;		_UART1_Initialize
 33929 ;;		_UART1_rx_vect_isr
 33930 ;; This function uses a reentrant model
 33931 ;;
 33932                           
 33933                           	psect	text162
 33934  01B648                     __ptext162:
 33935                           	opt callstack 0
 33936  01B648                     _UART1_Receive_ISR:
 33937                           	opt callstack 4
 33938                           
 33939                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 33940                           
 33941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33942                           ;incstack = 0
 33943  01B648  0EEE               	movlw	low _uart1RxBuffer
 33944  01B64A  2425               	addwf	_uart1RxHead^0,w,c	;volatile
 33945  01B64C  6ED9               	movwf	fsr2l,c
 33946  01B64E  6ADA               	clrf	fsr2h,c
 33947  01B650  0E02               	movlw	high _uart1RxBuffer
 33948  01B652  22DA               	addwfc	fsr2h,f,c
 33949  01B654  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 33950  01B65A  2A25               	incf	_uart1RxHead^0,f,c	;volatile
 33951                           
 33952                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 33953  01B65C  0E07               	movlw	7
 33954  01B65E  6425               	cpfsgt	_uart1RxHead^0,c
 33955  01B660  D001               	goto	l12633
 33956                           
 33957                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 33958  01B662  6A25               	clrf	_uart1RxHead^0,c	;volatile
 33959  01B664                     l12633:
 33960                           
 33961                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 33962  01B664  2A23               	incf	_uart1RxCount^0,f,c	;volatile
 33963                           
 33964                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33965  01B666  0012               	return		;funcret
 33966  01B668                     __end_of_UART1_Receive_ISR:
 33967                           	opt callstack 0
 33968                           
 33969 ;; *************** function _UART2_tx_vect_isr *****************
 33970 ;; Defined at:
 33971 ;;		line 195 in file "mcc_generated_files/uart2.c"
 33972 ;; Parameters:    Size  Location     Type
 33973 ;;		None
 33974 ;; Auto vars:     Size  Location     Type
 33975 ;;		None
 33976 ;; Return value:  Size  Location     Type
 33977 ;;                  1    wreg      void 
 33978 ;; Registers used:
 33979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33980 ;; Tracked objects:
 33981 ;;		On entry : 0/0
 33982 ;;		On exit  : 0/0
 33983 ;;		Unchanged: 0/0
 33984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33989 ;;Total ram usage:        0 bytes
 33990 ;; Hardware stack levels used:    1
 33991 ;; Hardware stack levels required when called:    1
 33992 ;; This function calls:
 33993 ;;		Absolute function
 33994 ;;		_UART2_Transmit_ISR
 33995 ;; This function is called by:
 33996 ;;		Interrupt level 2
 33997 ;; This function uses a non-reentrant model
 33998 ;;
 33999                           
 34000                           	psect	text163
 34001  01B4C0                     __ptext163:
 34002                           	opt callstack 0
 34003  01B4C0                     _UART2_tx_vect_isr:
 34004                           	opt callstack 4
 34005                           
 34006                           ;incstack = 0
 34007  01B4C0  EE14  F142         	lfsr	1,___inthi_sp
 34008                           
 34009                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 34010  01B4C4  0100               	movlb	0	; () banked
 34011  01B4C6  51AC               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 34012  01B4C8  11AD               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 34013  01B4CA  11AE               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 34014  01B4CC  B4D8               	btfsc	status,2,c
 34015  01B4CE  0011               	retfie		f
 34016                           
 34017                           ; BSR set to: 0
 34018                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 34019  01B4D0  D801               	call	i2u1017_48
 34020  01B4D2  0011               	retfie		f
 34021  01B4D4                     i2u1017_48:
 34022  01B4D4  0005               	push	
 34023  01B4D6  6EFA               	movwf	pclath,c
 34024  01B4D8  51AC               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 34025  01B4DA  6EFD               	movwf	tosl,c
 34026  01B4DC  51AD               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 34027  01B4DE  6EFE               	movwf	tosh,c
 34028  01B4E0  51AE               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 34029  01B4E2  6EFF               	movwf	tosu,c
 34030  01B4E4  50FA               	movf	pclath,w,c
 34031  01B4E6  0012               	return		;indir
 34032  01B4E8                     __end_of_UART2_tx_vect_isr:
 34033                           	opt callstack 0
 34034                           
 34035 ;; *************** function _UART2_Transmit_ISR *****************
 34036 ;; Defined at:
 34037 ;;		line 213 in file "mcc_generated_files/uart2.c"
 34038 ;; Parameters:    Size  Location     Type
 34039 ;;		None
 34040 ;; Auto vars:     Size  Location     Type
 34041 ;;		None
 34042 ;; Return value:  Size  Location     Type
 34043 ;;                  1  [STACK] void 
 34044 ;; Registers used:
 34045 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34046 ;; Tracked objects:
 34047 ;;		On entry : 3F/0
 34048 ;;		On exit  : 3B/39
 34049 ;;		Unchanged: 0/0
 34050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34055 ;;Total ram usage:        0 bytes
 34056 ;; Hardware stack levels used:    1
 34057 ;; This function calls:
 34058 ;;		Nothing
 34059 ;; This function is called by:
 34060 ;;		_UART2_Initialize
 34061 ;;		_UART2_tx_vect_isr
 34062 ;; This function uses a reentrant model
 34063 ;;
 34064                           
 34065                           	psect	text164
 34066  01B210                     __ptext164:
 34067                           	opt callstack 0
 34068  01B210                     _UART2_Transmit_ISR:
 34069                           	opt callstack 4
 34070                           
 34071                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 34072                           
 34073                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34074                           ;incstack = 0
 34075  01B210  0E40               	movlw	64
 34076  01B212  6020               	cpfslt	_uart2TxBufferRemaining^0,c
 34077  01B214  D010               	goto	l673
 34078                           
 34079                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 34080  01B216  0E54               	movlw	low _uart2TxBuffer
 34081  01B218  2421               	addwf	_uart2TxTail^0,w,c	;volatile
 34082  01B21A  6ED9               	movwf	fsr2l,c
 34083  01B21C  6ADA               	clrf	fsr2h,c
 34084  01B21E  0E03               	movlw	high _uart2TxBuffer
 34085  01B220  22DA               	addwfc	fsr2h,f,c
 34086  01B222  50DF               	movf	indf2,w,c
 34087  01B224  013D               	movlb	61	; () banked
 34088  01B226  6FD2               	movwf	210,b	;volatile
 34089                           
 34090                           ; BSR set to: 61
 34091  01B228  2A21               	incf	_uart2TxTail^0,f,c	;volatile
 34092                           
 34093                           ; BSR set to: 61
 34094                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 34095  01B22A  0E3F               	movlw	63
 34096  01B22C  6421               	cpfsgt	_uart2TxTail^0,c
 34097  01B22E  D001               	goto	l10523
 34098                           
 34099                           ; BSR set to: 61
 34100                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 34101  01B230  6A21               	clrf	_uart2TxTail^0,c	;volatile
 34102  01B232                     l10523:
 34103                           
 34104                           ; BSR set to: 61
 34105                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 34106  01B232  2A20               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 34107                           
 34108                           ;mcc_generated_files/uart2.c: 224:     }
 34109  01B234  0012               	return	
 34110  01B236                     l673:
 34111                           
 34112                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 34113  01B236  0139               	movlb	57	; () banked
 34114  01B238  9796               	bcf	150,3,b	;volatile
 34115                           
 34116                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 34117  01B23A  0012               	return		;funcret
 34118  01B23C                     __end_of_UART2_Transmit_ISR:
 34119                           	opt callstack 0
 34120                           
 34121 ;; *************** function _UART2_rx_vect_isr *****************
 34122 ;; Defined at:
 34123 ;;		line 203 in file "mcc_generated_files/uart2.c"
 34124 ;; Parameters:    Size  Location     Type
 34125 ;;		None
 34126 ;; Auto vars:     Size  Location     Type
 34127 ;;		None
 34128 ;; Return value:  Size  Location     Type
 34129 ;;                  1    wreg      void 
 34130 ;; Registers used:
 34131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34132 ;; Tracked objects:
 34133 ;;		On entry : 0/0
 34134 ;;		On exit  : 0/0
 34135 ;;		Unchanged: 0/0
 34136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34141 ;;Total ram usage:        0 bytes
 34142 ;; Hardware stack levels used:    1
 34143 ;; Hardware stack levels required when called:    1
 34144 ;; This function calls:
 34145 ;;		Absolute function
 34146 ;;		_UART2_Receive_ISR
 34147 ;; This function is called by:
 34148 ;;		Interrupt level 2
 34149 ;; This function uses a non-reentrant model
 34150 ;;
 34151                           
 34152                           	psect	text165
 34153  01B4E8                     __ptext165:
 34154                           	opt callstack 0
 34155  01B4E8                     _UART2_rx_vect_isr:
 34156                           	opt callstack 4
 34157                           
 34158                           ;incstack = 0
 34159  01B4E8  EE14  F142         	lfsr	1,___inthi_sp
 34160                           
 34161                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 34162  01B4EC  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 34163  01B4EE  1002               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 34164  01B4F0  1003               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 34165  01B4F2  B4D8               	btfsc	status,2,c
 34166  01B4F4  0011               	retfie		f
 34167                           
 34168                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 34169  01B4F6  D801               	call	i2u1019_48
 34170  01B4F8  0011               	retfie		f
 34171  01B4FA                     i2u1019_48:
 34172  01B4FA  0005               	push	
 34173  01B4FC  6EFA               	movwf	pclath,c
 34174  01B4FE  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 34175  01B500  6EFD               	movwf	tosl,c
 34176  01B502  5002               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 34177  01B504  6EFE               	movwf	tosh,c
 34178  01B506  5003               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 34179  01B508  6EFF               	movwf	tosu,c
 34180  01B50A  50FA               	movf	pclath,w,c
 34181  01B50C  0012               	return		;indir
 34182  01B50E                     __end_of_UART2_rx_vect_isr:
 34183                           	opt callstack 0
 34184                           
 34185 ;; *************** function _UART2_Receive_ISR *****************
 34186 ;; Defined at:
 34187 ;;		line 233 in file "mcc_generated_files/uart2.c"
 34188 ;; Parameters:    Size  Location     Type
 34189 ;;		None
 34190 ;; Auto vars:     Size  Location     Type
 34191 ;;		None
 34192 ;; Return value:  Size  Location     Type
 34193 ;;                  1  [STACK] void 
 34194 ;; Registers used:
 34195 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34196 ;; Tracked objects:
 34197 ;;		On entry : 0/0
 34198 ;;		On exit  : 0/0
 34199 ;;		Unchanged: 0/0
 34200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34205 ;;Total ram usage:        0 bytes
 34206 ;; Hardware stack levels used:    1
 34207 ;; This function calls:
 34208 ;;		Nothing
 34209 ;; This function is called by:
 34210 ;;		_UART2_Initialize
 34211 ;;		_UART2_rx_vect_isr
 34212 ;; This function uses a reentrant model
 34213 ;;
 34214                           
 34215                           	psect	text166
 34216  01B6E0                     __ptext166:
 34217                           	opt callstack 0
 34218  01B6E0                     _UART2_Receive_ISR:
 34219                           	opt callstack 4
 34220                           
 34221                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 34222                           
 34223                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34224                           ;incstack = 0
 34225  01B6E0  0E00               	movlw	low _uart2RxBuffer
 34226  01B6E2  241F               	addwf	_uart2RxHead^0,w,c	;volatile
 34227  01B6E4  6ED9               	movwf	fsr2l,c
 34228  01B6E6  6ADA               	clrf	fsr2h,c
 34229  01B6E8  0E05               	movlw	high _uart2RxBuffer
 34230  01B6EA  22DA               	addwfc	fsr2h,f,c
 34231  01B6EC  006F F743 FFDF     	movff	15824,indf2	;volatile
 34232  01B6F2  2A1F               	incf	_uart2RxHead^0,f,c	;volatile
 34233                           
 34234                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 34235  01B6F4  281F               	incf	_uart2RxHead^0,w,c
 34236  01B6F6  B4D8               	btfsc	status,2,c
 34237                           
 34238                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 34239  01B6F8  6A1F               	clrf	_uart2RxHead^0,c	;volatile
 34240                           
 34241                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 34242  01B6FA  2A1D               	incf	_uart2RxCount^0,f,c	;volatile
 34243                           
 34244                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34245  01B6FC  0012               	return		;funcret
 34246  01B6FE                     __end_of_UART2_Receive_ISR:
 34247                           	opt callstack 0
 34248                           
 34249 ;; *************** function _TMR6_ISR *****************
 34250 ;; Defined at:
 34251 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 34252 ;; Parameters:    Size  Location     Type
 34253 ;;		None
 34254 ;; Auto vars:     Size  Location     Type
 34255 ;;		None
 34256 ;; Return value:  Size  Location     Type
 34257 ;;                  1    wreg      void 
 34258 ;; Registers used:
 34259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34260 ;; Tracked objects:
 34261 ;;		On entry : 0/0
 34262 ;;		On exit  : 0/0
 34263 ;;		Unchanged: 0/0
 34264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34267 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34268 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34269 ;;Total ram usage:        1 bytes
 34270 ;; Hardware stack levels used:    1
 34271 ;; Hardware stack levels required when called:    2
 34272 ;; This function calls:
 34273 ;;		_TMR6_CallBack
 34274 ;; This function is called by:
 34275 ;;		Interrupt level 2
 34276 ;; This function uses a non-reentrant model
 34277 ;;
 34278                           
 34279                           	psect	text167
 34280  01B734                     __ptext167:
 34281                           	opt callstack 0
 34282  01B734                     _TMR6_ISR:
 34283                           	opt callstack 3
 34284                           
 34285                           ;incstack = 0
 34286  01B734  0060  F098  F04B   	movff	btemp,??_TMR6_ISR
 34287  01B73A  EE14  F142         	lfsr	1,___inthi_sp
 34288                           
 34289                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 34290  01B73E  0139               	movlb	57	; () banked
 34291  01B740  91A9               	bcf	169,0,b	;volatile
 34292                           
 34293                           ; BSR set to: 57
 34294                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 34295  01B742  ECCF  F0DA         	call	_TMR6_CallBack	;wreg free
 34296  01B746  0060  F12C  F026   	movff	??_TMR6_ISR,btemp
 34297  01B74C  0011               	retfie		f
 34298  01B74E                     __end_of_TMR6_ISR:
 34299                           	opt callstack 0
 34300                           
 34301 ;; *************** function _TMR6_CallBack *****************
 34302 ;; Defined at:
 34303 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 34304 ;; Parameters:    Size  Location     Type
 34305 ;;		None
 34306 ;; Auto vars:     Size  Location     Type
 34307 ;;		None
 34308 ;; Return value:  Size  Location     Type
 34309 ;;                  1  [STACK] void 
 34310 ;; Registers used:
 34311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34312 ;; Tracked objects:
 34313 ;;		On entry : 3F/39
 34314 ;;		On exit  : 0/0
 34315 ;;		Unchanged: 0/0
 34316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34321 ;;Total ram usage:        0 bytes
 34322 ;; Hardware stack levels used:    1
 34323 ;; Hardware stack levels required when called:    1
 34324 ;; This function calls:
 34325 ;;		Absolute function
 34326 ;;		_TMR6_DefaultInterruptHandler
 34327 ;; This function is called by:
 34328 ;;		_TMR6_ISR
 34329 ;; This function uses a reentrant model
 34330 ;;
 34331                           
 34332                           	psect	text168
 34333  01B59E                     __ptext168:
 34334                           	opt callstack 0
 34335  01B59E                     _TMR6_CallBack:
 34336                           	opt callstack 3
 34337                           
 34338                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 34339                           
 34340                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34341                           ;incstack = 0
 34342  01B59E  0100               	movlb	0	; () banked
 34343  01B5A0  51A0               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34344  01B5A2  11A1               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34345  01B5A4  11A2               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34346  01B5A6  B4D8               	btfsc	status,2,c
 34347  01B5A8  0012               	return	
 34348                           
 34349                           ; BSR set to: 0
 34350                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 34351  01B5AA  D801               	call	u977_48
 34352  01B5AC  0012               	return	
 34353  01B5AE                     u977_48:
 34354  01B5AE  0005               	push	
 34355  01B5B0  6EFA               	movwf	pclath,c
 34356  01B5B2  51A0               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34357  01B5B4  6EFD               	movwf	tosl,c
 34358  01B5B6  51A1               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34359  01B5B8  6EFE               	movwf	tosh,c
 34360  01B5BA  51A2               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34361  01B5BC  6EFF               	movwf	tosu,c
 34362  01B5BE  50FA               	movf	pclath,w,c
 34363  01B5C0  0012               	return		;indir
 34364  01B5C2                     __end_of_TMR6_CallBack:
 34365                           	opt callstack 0
 34366                           
 34367 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 34368 ;; Defined at:
 34369 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 34370 ;; Parameters:    Size  Location     Type
 34371 ;;		None
 34372 ;; Auto vars:     Size  Location     Type
 34373 ;;  i               1  [STACK] unsigned char 
 34374 ;; Return value:  Size  Location     Type
 34375 ;;                  1  [STACK] void 
 34376 ;; Registers used:
 34377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 34378 ;; Tracked objects:
 34379 ;;		On entry : 3F/0
 34380 ;;		On exit  : 0/0
 34381 ;;		Unchanged: 0/0
 34382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34387 ;;Total ram usage:        0 bytes
 34388 ;; Hardware stack levels used:    1
 34389 ;; This function calls:
 34390 ;;		Nothing
 34391 ;; This function is called by:
 34392 ;;		_TMR6_Initialize
 34393 ;;		_TMR6_CallBack
 34394 ;; This function uses a reentrant model
 34395 ;;
 34396                           
 34397                           	psect	text169
 34398  01AB18                     __ptext169:
 34399                           	opt callstack 0
 34400  01AB18                     _TMR6_DefaultInterruptHandler:
 34401                           	opt callstack 0
 34402                           
 34403                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34404  01AB18  52E6               	movf	postinc1,f,c
 34405                           
 34406                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 34407                           ;stkvar	_i @ sp[(-1)+0]
 34408                           
 34409                           ;incstack = 0
 34410  01AB1A  0EFF               	movlw	-1
 34411  01AB1C  6AE3               	clrf	plusw1,c
 34412  01AB1E                     l10163:
 34413                           
 34414                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 34415                           ;stkvar	_i @ sp[(-1)+0]
 34416  01AB1E  0EFF               	movlw	-1
 34417  01AB20  50E3               	movf	plusw1,w,c
 34418  01AB22  0D02               	mullw	2
 34419  01AB24  0E94               	movlw	low _tickCount
 34420  01AB26  24F3               	addwf	243,w,c
 34421  01AB28  6ED9               	movwf	fsr2l,c
 34422  01AB2A  0E03               	movlw	high _tickCount
 34423  01AB2C  20F4               	addwfc	prodh,w,c
 34424  01AB2E  6EDA               	movwf	fsr2h,c
 34425  01AB30  50DE               	movf	postinc2,w,c
 34426  01AB32  10DE               	iorwf	postinc2,w,c
 34427  01AB34  B4D8               	btfsc	status,2,c
 34428  01AB36  D00C               	goto	l10167
 34429                           
 34430                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 34431                           ;stkvar	_i @ sp[(-1)+0]
 34432  01AB38  0EFF               	movlw	-1
 34433  01AB3A  50E3               	movf	plusw1,w,c
 34434  01AB3C  0D02               	mullw	2
 34435  01AB3E  0E94               	movlw	low _tickCount
 34436  01AB40  24F3               	addwf	243,w,c
 34437  01AB42  6ED9               	movwf	fsr2l,c
 34438  01AB44  0E03               	movlw	high _tickCount
 34439  01AB46  20F4               	addwfc	prodh,w,c
 34440  01AB48  6EDA               	movwf	fsr2h,c
 34441  01AB4A  06DE               	decf	postinc2,f,c
 34442  01AB4C  0E00               	movlw	0
 34443  01AB4E  5ADD               	subwfb	postdec2,f,c
 34444  01AB50                     l10167:
 34445                           
 34446                           ;mcc_generated_files/tmr6.c: 207:  }
 34447                           ;stkvar	_i @ sp[(-1)+0]
 34448  01AB50  0EFF               	movlw	-1
 34449  01AB52  2AE3               	incf	plusw1,f,c
 34450                           
 34451                           ;stkvar	_i @ sp[(-1)+0]
 34452  01AB54  0EFF               	movlw	-1
 34453  01AB56  006F FF8C  F026    	movff	plusw1,btemp
 34454  01AB5C  0E0C               	movlw	12
 34455  01AB5E  6426               	cpfsgt	btemp^0,c
 34456  01AB60  D7DE               	goto	l10163
 34457                           
 34458                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34459  01AB62  52E5               	movf	postdec1,f,c
 34460  01AB64  0012               	return		;funcret
 34461  01AB66                     __end_of_TMR6_DefaultInterruptHandler:
 34462                           	opt callstack 0
 34463                           
 34464 ;; *************** function _DMA1_DMASCNT_ISR *****************
 34465 ;; Defined at:
 34466 ;;		line 126 in file "mcc_generated_files/dma1.c"
 34467 ;; Parameters:    Size  Location     Type
 34468 ;;		None
 34469 ;; Auto vars:     Size  Location     Type
 34470 ;;		None
 34471 ;; Return value:  Size  Location     Type
 34472 ;;                  1    wreg      void 
 34473 ;; Registers used:
 34474 ;;		None
 34475 ;; Tracked objects:
 34476 ;;		On entry : 0/0
 34477 ;;		On exit  : 3F/0
 34478 ;;		Unchanged: 0/0
 34479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34484 ;;Total ram usage:        0 bytes
 34485 ;; Hardware stack levels used:    1
 34486 ;; This function calls:
 34487 ;;		Nothing
 34488 ;; This function is called by:
 34489 ;;		Interrupt level 2
 34490 ;; This function uses a non-reentrant model
 34491 ;;
 34492                           
 34493                           	psect	text170
 34494  01B844                     __ptext170:
 34495                           	opt callstack 0
 34496  01B844                     _DMA1_DMASCNT_ISR:
 34497                           	opt callstack 5
 34498                           
 34499                           ;incstack = 0
 34500  01B844  EE14  F142         	lfsr	1,___inthi_sp
 34501                           
 34502                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 34503  01B848  0139               	movlb	57	; () banked
 34504  01B84A  91A2               	bcf	162,0,b	;volatile
 34505                           
 34506                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 34507  01B84C  0100               	movlb	0	; () banked
 34508  01B84E  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 34509                           
 34510                           ; BSR set to: 0
 34511  01B850  0011               	retfie		f
 34512  01B852                     __end_of_DMA1_DMASCNT_ISR:
 34513                           	opt callstack 0
 34514                           
 34515 ;; *************** function _DMA1_DMADCNT_ISR *****************
 34516 ;; Defined at:
 34517 ;;		line 134 in file "mcc_generated_files/dma1.c"
 34518 ;; Parameters:    Size  Location     Type
 34519 ;;		None
 34520 ;; Auto vars:     Size  Location     Type
 34521 ;;		None
 34522 ;; Return value:  Size  Location     Type
 34523 ;;                  1    wreg      void 
 34524 ;; Registers used:
 34525 ;;		None
 34526 ;; Tracked objects:
 34527 ;;		On entry : 0/0
 34528 ;;		On exit  : 3F/39
 34529 ;;		Unchanged: 0/0
 34530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34535 ;;Total ram usage:        0 bytes
 34536 ;; Hardware stack levels used:    1
 34537 ;; This function calls:
 34538 ;;		Nothing
 34539 ;; This function is called by:
 34540 ;;		Interrupt level 2
 34541 ;; This function uses a non-reentrant model
 34542 ;;
 34543                           
 34544                           	psect	text171
 34545  01B868                     __ptext171:
 34546                           	opt callstack 0
 34547  01B868                     _DMA1_DMADCNT_ISR:
 34548                           	opt callstack 5
 34549                           
 34550                           ; BSR set to: 0
 34551                           ;incstack = 0
 34552  01B868  EE14  F142         	lfsr	1,___inthi_sp
 34553                           
 34554                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 34555  01B86C  0139               	movlb	57	; () banked
 34556  01B86E  93A2               	bcf	162,1,b	;volatile
 34557                           
 34558                           ; BSR set to: 57
 34559  01B870  0011               	retfie		f
 34560  01B872                     __end_of_DMA1_DMADCNT_ISR:
 34561                           	opt callstack 0
 34562                           
 34563 ;; *************** function _DMA1_DMAA_ISR *****************
 34564 ;; Defined at:
 34565 ;;		line 144 in file "mcc_generated_files/dma1.c"
 34566 ;; Parameters:    Size  Location     Type
 34567 ;;		None
 34568 ;; Auto vars:     Size  Location     Type
 34569 ;;		None
 34570 ;; Return value:  Size  Location     Type
 34571 ;;                  1    wreg      void 
 34572 ;; Registers used:
 34573 ;;		None
 34574 ;; Tracked objects:
 34575 ;;		On entry : 0/0
 34576 ;;		On exit  : 3F/39
 34577 ;;		Unchanged: 0/0
 34578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34583 ;;Total ram usage:        0 bytes
 34584 ;; Hardware stack levels used:    1
 34585 ;; This function calls:
 34586 ;;		Nothing
 34587 ;; This function is called by:
 34588 ;;		Interrupt level 2
 34589 ;; This function uses a non-reentrant model
 34590 ;;
 34591                           
 34592                           	psect	text172
 34593  01B874                     __ptext172:
 34594                           	opt callstack 0
 34595  01B874                     _DMA1_DMAA_ISR:
 34596                           	opt callstack 5
 34597                           
 34598                           ; BSR set to: 57
 34599                           ;incstack = 0
 34600  01B874  EE14  F142         	lfsr	1,___inthi_sp
 34601                           
 34602                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 34603  01B878  0139               	movlb	57	; () banked
 34604  01B87A  97A2               	bcf	162,3,b	;volatile
 34605                           
 34606                           ; BSR set to: 57
 34607  01B87C  0011               	retfie		f
 34608  01B87E                     __end_of_DMA1_DMAA_ISR:
 34609                           	opt callstack 0
 34610                           
 34611 ;; *************** function _DMA1_DMAOR_ISR *****************
 34612 ;; Defined at:
 34613 ;;		line 155 in file "mcc_generated_files/dma1.c"
 34614 ;; Parameters:    Size  Location     Type
 34615 ;;		None
 34616 ;; Auto vars:     Size  Location     Type
 34617 ;;		None
 34618 ;; Return value:  Size  Location     Type
 34619 ;;                  1    wreg      void 
 34620 ;; Registers used:
 34621 ;;		None
 34622 ;; Tracked objects:
 34623 ;;		On entry : 0/0
 34624 ;;		On exit  : 3F/39
 34625 ;;		Unchanged: 0/0
 34626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34631 ;;Total ram usage:        0 bytes
 34632 ;; Hardware stack levels used:    1
 34633 ;; This function calls:
 34634 ;;		Nothing
 34635 ;; This function is called by:
 34636 ;;		Interrupt level 2
 34637 ;; This function uses a non-reentrant model
 34638 ;;
 34639                           
 34640                           	psect	text173
 34641  01B880                     __ptext173:
 34642                           	opt callstack 0
 34643  01B880                     _DMA1_DMAOR_ISR:
 34644                           	opt callstack 5
 34645                           
 34646                           ; BSR set to: 57
 34647                           ;incstack = 0
 34648  01B880  EE14  F142         	lfsr	1,___inthi_sp
 34649                           
 34650                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 34651  01B884  0139               	movlb	57	; () banked
 34652  01B886  95A2               	bcf	162,2,b	;volatile
 34653                           
 34654                           ; BSR set to: 57
 34655  01B888  0011               	retfie		f
 34656  01B88A                     __end_of_DMA1_DMAOR_ISR:
 34657                           	opt callstack 0
 34658                           
 34659                           ;
 34660                           ; Interrupt Vector Table @ 0x8
 34661                           ;
 34662                           
 34663                           	psect	ivt0x8
 34664  000008                     __pivt0x8:
 34665                           	opt callstack 0
 34666  000008                     ivt0x8_base:
 34667                           	opt callstack 0
 34668                           
 34669                           ; Vector 0 : SWINT
 34670  000008  6E33               	dw	_Default_ISR shr (0+2)
 34671                           
 34672                           ; Vector 1 : HLVD
 34673  00000A  6E33               	dw	_Default_ISR shr (0+2)
 34674                           
 34675                           ; Vector 2 : OSF
 34676  00000C  6E33               	dw	_Default_ISR shr (0+2)
 34677                           
 34678                           ; Vector 3 : CSW
 34679  00000E  6E33               	dw	_Default_ISR shr (0+2)
 34680                           
 34681                           ; Vector 4 : NVM
 34682  000010  6E33               	dw	_Default_ISR shr (0+2)
 34683                           
 34684                           ; Vector 5 : SCAN
 34685  000012  6E33               	dw	_Default_ISR shr (0+2)
 34686                           
 34687                           ; Vector 6 : CRC
 34688  000014  6E33               	dw	_Default_ISR shr (0+2)
 34689                           
 34690                           ; Vector 7 : IOC
 34691  000016  6E33               	dw	_Default_ISR shr (0+2)
 34692                           
 34693                           ; Vector 8 : INT0
 34694  000018  6E0D               	dw	_INT0_ISR shr (0+2)
 34695                           
 34696                           ; Vector 9 : ZCD
 34697  00001A  6E33               	dw	_Default_ISR shr (0+2)
 34698                           
 34699                           ; Vector 10 : AD
 34700  00001C  6C79               	dw	_ADCC_ISR shr (0+2)
 34701                           
 34702                           ; Vector 11 : ADT
 34703  00001E  69C6               	dw	_ADCC_ThresholdISR shr (0+2)
 34704                           
 34705                           ; Vector 12 : CMP1
 34706  000020  6E33               	dw	_Default_ISR shr (0+2)
 34707                           
 34708                           ; Vector 13 : SMT1
 34709  000022  6E33               	dw	_Default_ISR shr (0+2)
 34710                           
 34711                           ; Vector 14 : SMT1PRA
 34712  000024  6E33               	dw	_Default_ISR shr (0+2)
 34713                           
 34714                           ; Vector 15 : SMT1PRW
 34715  000026  6E33               	dw	_Default_ISR shr (0+2)
 34716                           
 34717                           ; Vector 16 : DMA1SCNT
 34718  000028  6E11               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 34719                           
 34720                           ; Vector 17 : DMA1DCNT
 34721  00002A  6E1A               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 34722                           
 34723                           ; Vector 18 : DMA1OR
 34724  00002C  6E20               	dw	_DMA1_DMAOR_ISR shr (0+2)
 34725                           
 34726                           ; Vector 19 : DMA1A
 34727  00002E  6E1D               	dw	_DMA1_DMAA_ISR shr (0+2)
 34728                           
 34729                           ; Vector 20 : SPI1RX
 34730  000030  6E33               	dw	_Default_ISR shr (0+2)
 34731                           
 34732                           ; Vector 21 : SPI1TX
 34733  000032  6E33               	dw	_Default_ISR shr (0+2)
 34734                           
 34735                           ; Vector 22 : SPI1
 34736  000034  6E33               	dw	_Default_ISR shr (0+2)
 34737                           
 34738                           ; Vector 23 : I2C1RX
 34739  000036  6E33               	dw	_Default_ISR shr (0+2)
 34740                           
 34741                           ; Vector 24 : I2C1TX
 34742  000038  6E33               	dw	_Default_ISR shr (0+2)
 34743                           
 34744                           ; Vector 25 : I2C1
 34745  00003A  6E33               	dw	_Default_ISR shr (0+2)
 34746                           
 34747                           ; Vector 26 : I2C1E
 34748  00003C  6E33               	dw	_Default_ISR shr (0+2)
 34749                           
 34750                           ; Vector 27 : U1RX
 34751  00003E  6D26               	dw	_UART1_rx_vect_isr shr (0+2)
 34752                           
 34753                           ; Vector 28 : U1TX
 34754  000040  6E33               	dw	_Default_ISR shr (0+2)
 34755                           
 34756                           ; Vector 29 : U1E
 34757  000042  6E33               	dw	_Default_ISR shr (0+2)
 34758                           
 34759                           ; Vector 30 : U1
 34760  000044  6E33               	dw	_Default_ISR shr (0+2)
 34761                           
 34762                           ; Vector 31 : TMR0
 34763  000046  6E33               	dw	_Default_ISR shr (0+2)
 34764                           
 34765                           ; Vector 32 : TMR1
 34766  000048  6E33               	dw	_Default_ISR shr (0+2)
 34767                           
 34768                           ; Vector 33 : TMR1G
 34769  00004A  6E33               	dw	_Default_ISR shr (0+2)
 34770                           
 34771                           ; Vector 34 : TMR2
 34772  00004C  6E33               	dw	_Default_ISR shr (0+2)
 34773                           
 34774                           ; Vector 35 : CCP1
 34775  00004E  6E33               	dw	_Default_ISR shr (0+2)
 34776                           
 34777                           ; Vector 36 : Undefined
 34778  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 34779                           
 34780                           ; Vector 37 : NCO1
 34781  000052  6E33               	dw	_Default_ISR shr (0+2)
 34782                           
 34783                           ; Vector 38 : CWG1
 34784  000054  6E33               	dw	_Default_ISR shr (0+2)
 34785                           
 34786                           ; Vector 39 : CLC1
 34787  000056  6E33               	dw	_Default_ISR shr (0+2)
 34788                           
 34789                           ; Vector 40 : INT1
 34790  000058  6BB7               	dw	_INT1_ISR shr (0+2)
 34791                           
 34792                           ; Vector 41 : CMP2
 34793  00005A  6E33               	dw	_Default_ISR shr (0+2)
 34794                           
 34795                           ; Vector 42 : DMA2SCNT
 34796  00005C  6E33               	dw	_Default_ISR shr (0+2)
 34797                           
 34798                           ; Vector 43 : DMA2DCNT
 34799  00005E  6E33               	dw	_Default_ISR shr (0+2)
 34800                           
 34801                           ; Vector 44 : DMA2OR
 34802  000060  6E33               	dw	_Default_ISR shr (0+2)
 34803                           
 34804                           ; Vector 45 : DMA2A
 34805  000062  6E33               	dw	_Default_ISR shr (0+2)
 34806                           
 34807                           ; Vector 46 : I2C2RX
 34808  000064  6E33               	dw	_Default_ISR shr (0+2)
 34809                           
 34810                           ; Vector 47 : I2C2TX
 34811  000066  6E33               	dw	_Default_ISR shr (0+2)
 34812                           
 34813                           ; Vector 48 : I2C2
 34814  000068  6E33               	dw	_Default_ISR shr (0+2)
 34815                           
 34816                           ; Vector 49 : I2C2E
 34817  00006A  6E33               	dw	_Default_ISR shr (0+2)
 34818                           
 34819                           ; Vector 50 : U2RX
 34820  00006C  6D3A               	dw	_UART2_rx_vect_isr shr (0+2)
 34821                           
 34822                           ; Vector 51 : U2TX
 34823  00006E  6D30               	dw	_UART2_tx_vect_isr shr (0+2)
 34824                           
 34825                           ; Vector 52 : U2E
 34826  000070  6E33               	dw	_Default_ISR shr (0+2)
 34827                           
 34828                           ; Vector 53 : U2
 34829  000072  6E33               	dw	_Default_ISR shr (0+2)
 34830                           
 34831                           ; Vector 54 : TMR3
 34832  000074  622E               	dw	_TMR3_ISR shr (0+2)
 34833                           
 34834                           ; Vector 55 : TMR3G
 34835  000076  6E33               	dw	_Default_ISR shr (0+2)
 34836                           
 34837                           ; Vector 56 : TMR4
 34838  000078  6E33               	dw	_Default_ISR shr (0+2)
 34839                           
 34840                           ; Vector 57 : CCP2
 34841  00007A  6E33               	dw	_Default_ISR shr (0+2)
 34842                           
 34843                           ; Vector 58 : Undefined
 34844  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 34845                           
 34846                           ; Vector 59 : CWG2
 34847  00007E  6E33               	dw	_Default_ISR shr (0+2)
 34848                           
 34849                           ; Vector 60 : CLC2
 34850  000080  6E33               	dw	_Default_ISR shr (0+2)
 34851                           
 34852                           ; Vector 61 : INT2
 34853  000082  6E33               	dw	_Default_ISR shr (0+2)
 34854                           
 34855                           ; Vector 62 : Undefined
 34856  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 34857                           
 34858                           ; Vector 63 : Undefined
 34859  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 34860                           
 34861                           ; Vector 64 : Undefined
 34862  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 34863                           
 34864                           ; Vector 65 : Undefined
 34865  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 34866                           
 34867                           ; Vector 66 : Undefined
 34868  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 34869                           
 34870                           ; Vector 67 : Undefined
 34871  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 34872                           
 34873                           ; Vector 68 : Undefined
 34874  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 34875                           
 34876                           ; Vector 69 : Undefined
 34877  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 34878                           
 34879                           ; Vector 70 : TMR5
 34880  000094  6655               	dw	_TMR5_ISR shr (0+2)
 34881                           
 34882                           ; Vector 71 : TMR5G
 34883  000096  6E33               	dw	_Default_ISR shr (0+2)
 34884                           
 34885                           ; Vector 72 : TMR6
 34886  000098  6DCD               	dw	_TMR6_ISR shr (0+2)
 34887                           
 34888                           ; Vector 73 : CCP3
 34889  00009A  6E33               	dw	_Default_ISR shr (0+2)
 34890                           
 34891                           ; Vector 74 : CWG3
 34892  00009C  6E33               	dw	_Default_ISR shr (0+2)
 34893                           
 34894                           ; Vector 75 : CLC3
 34895  00009E  6E33               	dw	_Default_ISR shr (0+2)
 34896                           
 34897                           ; Vector 76 : Undefined
 34898  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 34899                           
 34900                           ; Vector 77 : Undefined
 34901  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 34902                           
 34903                           ; Vector 78 : Undefined
 34904  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 34905                           
 34906                           ; Vector 79 : Undefined
 34907  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 34908                           
 34909                           ; Vector 80 : CCP4
 34910  0000A8  6E33               	dw	_Default_ISR shr (0+2)
 34911                           
 34912                           ; Vector 81 : CLC4
 34913  0000AA  6E33               	dw	_Default_ISR shr (0+2)
 34914  0000AC                     ivt0x8_undefint:
 34915                           	opt callstack 0
 34916  0000AC  00FF               	reset	
 34917                           
 34918                           	psect	text174
 34919  000000                     __ptext174:
 34920                           	opt callstack 0
 34921                           
 34922                           	psect	rparam
 34923  0000                     
 34924                           	psect	temp
 34925  000026                     btemp:
 34926                           	opt callstack 0
 34927  000026                     	ds	32
 34928  0000                     wtemp0	set	btemp
 34929  0000                     wtemp1	set	btemp+2
 34930  0000                     wtemp2	set	btemp+4
 34931  0000                     wtemp3	set	btemp+6
 34932  0000                     wtemp4	set	btemp+8
 34933  0000                     wtemp5	set	btemp+10
 34934  0000                     wtemp8	set	btemp+1
 34935  0000                     ttemp0	set	btemp
 34936  0000                     ttemp1	set	btemp+3
 34937  0000                     ttemp2	set	btemp+6
 34938  0000                     ttemp3	set	btemp+9
 34939  0000                     ttemp5	set	btemp+1
 34940  0000                     ttemp6	set	btemp+4
 34941  0000                     ttemp7	set	btemp+8
 34942  0000                     ltemp0	set	btemp
 34943  0000                     ltemp1	set	btemp+4
 34944  0000                     ltemp2	set	btemp+8
 34945  0000                     lltemp0	set	btemp
 34946  0000                     lltemp1	set	btemp+8
 34947  0000                     lltemp2	set	btemp+16
 34948  0000                     lltemp3	set	btemp+24
 34949                           tosu	equ	0x3FFF
 34950                           tosh	equ	0x3FFE
 34951                           tosl	equ	0x3FFD
 34952                           stkptr	equ	0x3FFC
 34953                           pclatu	equ	0x3FFB
 34954                           pclath	equ	0x3FFA
 34955                           pcl	equ	0x3FF9
 34956                           tblptru	equ	0x3FF8
 34957                           tblptrh	equ	0x3FF7
 34958                           tblptrl	equ	0x3FF6
 34959                           tablat	equ	0x3FF5
 34960                           prodh	equ	0x3FF4
 34961                           prodl	equ	0x3FF3
 34962                           indf0	equ	0x3FEF
 34963                           postinc0	equ	0x3FEE
 34964                           postdec0	equ	0x3FED
 34965                           preinc0	equ	0x3FEC
 34966                           plusw0	equ	0x3FEB
 34967                           fsr0h	equ	0x3FEA
 34968                           fsr0l	equ	0x3FE9
 34969                           wreg	equ	0x3FE8
 34970                           indf1	equ	0x3FE7
 34971                           postinc1	equ	0x3FE6
 34972                           postdec1	equ	0x3FE5
 34973                           preinc1	equ	0x3FE4
 34974                           plusw1	equ	0x3FE3
 34975                           fsr1h	equ	0x3FE2
 34976                           fsr1l	equ	0x3FE1
 34977                           bsr	equ	0x3FE0
 34978                           indf2	equ	0x3FDF
 34979                           postinc2	equ	0x3FDE
 34980                           postdec2	equ	0x3FDD
 34981                           preinc2	equ	0x3FDC
 34982                           plusw2	equ	0x3FDB
 34983                           fsr2h	equ	0x3FDA
 34984                           fsr2l	equ	0x3FD9
 34985                           status	equ	0x3FD8


Data Sizes:
    Strings     921
    Constant    492
    Data        1012
    BSS         1300
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      62
    BANK0           160     25     153
    BANK1           256      0     256
    BANK2           256      0     254
    BANK3           256      0     254
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_102(CODE[1]), STR_64(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[190]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[190]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[190]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[190]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6047_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[190]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[190]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[190]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[190]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_47(CODE[9]), 
		 -> STR_46(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[6]), V(BANK2[190]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4510tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_47(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_46(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK2[190]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK2[190]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  373928
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           15    15      0    5454
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    5364
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    5364
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      0     0      0    5364
                             ___flge
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35450
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35390
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35390
                         _StartTimer
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     3E2      69       12.1%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FE      11       99.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FE       9       99.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      99       5       95.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      3E       1       98.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     558      58        0.0%
DATA                 0      0     93A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Dec 21 17:28:39 2019

                     _SPI1_Exchange8bit B668                __end_of_set_display_info B6C2  
                                     _C 0100                                       _D 07FF  
                                     _H 00D9                                       _P 0096  
                                     _R 00B1                                       _S 02C5  
                                     _T FB49                                       _V 0207  
      __end_of_TMR5_SetInterruptHandler B3CE            __end_of_start_switch_handler B648  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FC51                  __end_of_FVR_Initialize B8B2  
                        _check_day_time 9C90                             __CFG_LVP$ON 000000  
                                   l169 B7BA                                     l807 B676  
                                   l673 B236                                     _GIE 01FE97  
                                   _abs ABF8                                     _pad 914E  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize B766  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack B606  
                     _update_adc_result AF1A                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 0092                           _INT1_CallBack B5E4  
                          __CFG_ZCD$OFF 000000                                    l1002 AE96  
                                  l2131 91AA                                    l2028 499E  
                                  l1340 18D4                                    l1324 12A2  
                                  l1190 AED6                                    l3006 3AA2  
                                  l1350 1974                                    l1342 18DA  
                                  l2151 54AE                                    l2231 0B1A  
                                  l2216 066A                                    l2072 6C00  
                                  l1360 1B5E                                    l2305 5894  
                                  l1361 1D60                         _timer3ReloadVal 0012  
                                  l3108 73AC                                    l3046 7C22  
                                  l1606 AFDC                                    l1366 2296  
                                  l1447 A978                                    l1722 B6BE  
                                  l2290 635C                                    l2187 123A  
                                  l2355 3278                                    l3077 AC38  
                                  l3069 8174                                    l2269 6CEE  
                                  l1591 A39C                                    l1665 AF70  
                                  l3177 902C                                    l1682 936E  
                                  l1674 78C8                                    l1835 7FDE  
                                  l2651 87D8                                    l1587 A004  
                                  l1675 7A24                                    l3444 780C  
                  _ADCC_StartConversion B7D4                                    l2647 9C86  
                                  l1784 53CA                                    l3472 A536  
                                  l2658 88AC                                    l3459 A5BA  
                                  l1955 A430                                    l1964 9680  
                                  l1876 9882                                    l2925 425E  
                                  l2685 85DA                                    l2937 40EE  
                                  l8001 749C                                    l2970 4F1A  
                                  l8101 4CCE                                    l8121 4D70  
                                  l8041 4A86                                    l8009 7548  
                                  l8211 33EC                                    l8203 33A6  
                                  l8115 4D54                                    l8107 4D22  
                                  l8035 4A40                                    l6533 AEBE  
                                  l8221 343E                                    l8213 341C  
                                  l8125 4D96                                    l8109 4D26  
                                  l8061 4B64                                    l8029 4A00  
                                  l8311 39E2                                    l8135 4DE0  
                                  l8055 4B1E                                    l8039 4A56  
                                  l8209 33E6                                    l8161 4EC6  
                                  l8081 4BF6                                    l8073 4BDC  
                                  l8049 4ADE                                    l8401 9080  
                                  l8307 399C                                    l7611 3BC0  
                                  l7603 3B58                                    l8155 4E96  
                                  l8139 4DE6                                    l8091 4C86  
                                  l8067 4BA2                                    l8059 4B34  
                                  l8411 9100                                    l8325 3A50  
                                  l8317 3A0C                                    l7605 3B88  
                                  l8149 4E5A                                    l8327 3A6A  
                                  l8191 3318                                    l7623 3C32  
                                  l8167 4EEE                                    l8431 9C50  
                                  l8503 8572                                    l8273 3896  
                                  l8193 331E                                    l8185 32D8  
                                  l7801 423E                                    l7713 3F6E  
                                  l7617 3BF2                                    l8169 4EFE  
                                  l9209 739C                                    l8353 8A50  
                                  l8505 8588                                    l9225 767E  
                                  l8283 38D8                                    l8195 334E  
                                  l7731 409E                                    l7707 3F52  
                                  l7635 3C9A                                    l7627 3C48  
                                  l8443 8796                                    l8099 4CBC  
                                  l8347 8A3A                                    l8419 9134  
                                  l8435 9C84                                    l8427 9C0E  
                                  l9227 76EA                                    l8531 829E  
                                  l8293 3922                                    l7709 3F64  
                                  l7717 3FA0                                    l7629 3C78  
                                  l8461 88AA                                    l8453 8874  
                                  l9173 715C                                    l7565 A0D8  
                                  l8381 8B4A                                    l8373 8B16  
                                  l8279 38B2                                    l9503 7B4E  
                                  l9191 7236                                    l9183 71F2  
                                  l9175 717E                                    l7567 A0FA  
                                  l8359 8A70                                    l7911 6280  
                                  l8519 81CC                                    l8551 8C4A  
                                  l8543 8B9E                                    l8297 3928  
                                  l7753 412E                                    l7729 4078  
                                  l7681 3E7C                                    l7665 3DD8  
                                  l7593 3B02                                    l8449 8826  
                                  l9505 7B6C                                    l9193 725A  
                                  l8393 9056                                    l7905 61E8  
                                  l7763 4156                                    l7747 4110  
                                  l7739 40D2                                    l7675 3E4A  
                                  l9515 7BA0                                    l9507 7B82  
                                  l9195 7298                                    l7835 AC28  
                                  l7915 62EE                                    l7907 6238  
                                  l7749 4122                                    l7685 3E86  
                                  l9525 7C02                                    l9541 4F56  
                                  l9189 721E                                    l8397 9068  
                                  l8469 ABCE                                    l7853 8116  
                                  l7933 A526                                    l9703 9D46  
                                  l7767 415C                                    l7679 3E6A  
                                  l7599 3B42                                    l9551 5074  
                                  l9535 4F26                                    l9607 B2FE  
                                  l8567 AAB6                                    l9199 7300  
                                  l8495 8546                                    l8479 84C4  
                                  l7793 41FE                                    l7689 3EB6  
                                  l7961 6FBE                                    l8497 8562  
                                  l7849 8112                                    l7795 420E  
                                  l7779 41BA                                    l9491 7ADE  
                                  l9483 7A72                                    l9563 5180  
                                  l9555 514E                                    l7955 6F78  
                                  l7859 816C                                    l7891 60CA  
                                  l9715 AFE6                                    l7789 41E6  
                                  l9493 7AEC                                    l9581 5398  
                                  l7973 7090                                    l7949 6F24  
                                  l7877 A5AA                                    l9495 7B02  
                                  l9575 52FC                                    l9567 521C  
                                  l9497 7B20                                    l7993 7414  
                                  l9781 AAF2                                    l9589 53AA  
                                  l9773 B1C8                                    STR_1 FF50  
                                  STR_2 FFA2                                    STR_3 FFD0  
                                  STR_4 FF1D                                    l9699 9CF4  
                                  STR_5 FE16                                    STR_6 FE16  
                                  STR_7 FE16                                    STR_8 FF0B  
                                  STR_9 FD06                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6000 618E                                    u6100 B14C  
                                  u6020 6266                                    u6005 6184  
                                  u6110 B14E                                    u6200 70C8  
                                  u5320 B11C                                    u6025 625C  
                                  u6130 6F1E                                    u5330 B11E  
                                  u6050 AD8E                                    _T6PR 003F93  
                                  u6220 711A                                    u6060 AD90  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  u5430 3DFE                                    u6150 6F74  
                                  u6310 7580                                    u7030 ABCA  
                                  u7110 8590                                    u6070 A4E4  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u5440 3E1E                                    u7040 84A4  
                                  u7200 8B98                                    u6080 A4E6  
                                  _PMD4 0039C4                                    u5441 3E18  
                                  u6161 6F7E                                    _PMD5 0039C5  
                                  u5290 A128                                    u6170 6FB8  
                                  u6330 75D2                                    u6250 740E  
                                  u7130 85BA                                    u7050 84B8  
                                  u7210 8BCA                                    _PMD6 0039C6  
                                  _PMD7 0039C7                                    u6180 6FEA  
                                  u7060 84F2                                    u7045 849A  
                                  u7141 818C                                    u5630 4134  
                                  u5550 3F96                                    u6510 4DD8  
                                  u6270 7464                                    u7150 81C6  
                                  u7230 8C82                                    u5720 41CA  
                                  u5480 3EAE                                    u6280 7496  
                                  u7160 81F8                                    u5297 A11A  
                                  u7065 84E8                                    u5650 414E  
                                  u5490 3ECE                                    u5458 3E20  
                                  u7250 AA92                                    u6290 74C8  
                                  u5555 3F86                                    u9004 4F92  
                                  u7260 AAB2                                    u5820 AC0C  
                                  u7180 82D6                                    u5485 3E9E  
                                  u9005 4F8C                                    u5590 40C0  
                                  u6550 4E34                                    u6470 4D4E  
                                  u5830 8096                                    u6560 4E6E  
                                  u9024 5168                                    u8400 71EE  
                                  u5920 A568                                    u5760 B0EC  
                                  u9025 5162                                    u6730 391A  
                                  u5690 41AA                                    u6570 4EAA  
                                  u5930 A56A                                    u5770 B0EE  
                                  u6555 4E24                                    u5835 808C  
                                  u9220 A790                                    u6660 342C  
                                  u9044 5236                                    u8420 7346  
                                  u9045 5230                                    u9070 5260  
                                  u8430 7348                                    u6910 90AC  
                                  u5950 6062                                    u8510 77B2  
                                  u5695 419A                                    u9064 5258  
                                  u6840 8A9C                                    u5880 8164  
                                  u5960 60AE                                    u8520 77E0  
                                  u9065 5252                                    u9305 B7F0  
                                  u6770 3976                                    u6930 9120  
                                  u5890 8166                                    u9306 B7F2  
                                  u6675 35C0                                    u5875 8146  
                                  u5955 6058                                    u8515 77AC  
                                  u6780 39B0                                    u9340 7E42  
                                  u6860 8B36                                    u9245 A7C4  
                                  u6685 3688                                    u8517 779E  
                                  u9246 A7C6                                    u9238 A792  
                                  u6790 39F6                                    u9430 B5CE  
                                  u8470 7718                                    u6775 3966  
                                  u6695 3850                                    u9175 ADCA  
                                  u8527 77D2                                    u5985 60E8  
                                  u6970 9C80                                    u5986 60EE  
                                  u5987 60FC                                    u9436 B5D0  
                                  u9540 A3D6                                    u8477 770A  
                                  u9295 B800                                    u8920 7B96  
                                  u9296 B802                                    u9570 A41C  
                                  _PLLR 01CEE0                                    u9558 A3D8  
                                  u8964 4F40                                    u9588 A41E  
                                  u8965 4F3A                                    u8984 4F70  
                                  u8985 4F6A                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR B210  
                         __CFG_FCMEN$ON 000000                                    _dbuf 03AE  
                                  _cp_h FC61                                    _cp_l FC5D  
                                  _atoi 7142                                    _ctoa A434  
                                  _main 1244                                    _dtoa 53D0  
                                  _nanf A8AE                                    _seed 02F6  
                                  _prec 000C                                    _nout 00AF  
                                  _spin FBD9                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 6C04                                    btemp 0026  
                                  _utoa 6318                                    _xtoa 5850  
                __end_of_check_adc_scan B89A                           ___fpclassifyf 7FE8  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0016  
             __end_of_SPI1_Exchange8bit B686               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize AD10             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr B498                            ___param_bank 000000  
                __end_of_check_day_time 9D50                      ?_UART1_rx_vect_isr 0046  
                      __end_of_INT0_ISR B842                        __end_of_INT1_ISR AF1A  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma A00C  
         __end_of_OSCILLATOR_Initialize B7C0                                   l12001 6C70  
                                 l10163 AB1E                                   l10235 7E90  
                                 l10227 7E64                                   l10315 AF3A  
                                 l10341 8CC8                                   l12021 6D60  
                                 l10167 AB50                                   l10343 8CCE  
                                 l10351 8CEA                                   l10239 7EA4  
                                 l12031 6E1A                                   l10345 8CD4  
                                 l10353 8D16                                   l10273 AF86  
                                 l12025 6D90                                   l12017 6D24  
                                 l12113 595A                                   l12105 58FA  
                                 l10523 B232                                   l10347 8CE2  
                                 l10339 8CB8                                   l12035 6E46  
                                 l12211 2574                                   l10451 A288  
                                 l13011 21C0                                   l12061 63A8  
                                 l12053 634C                                   l12213 258A  
                                 l13021 21FE                                   l10367 8DC8  
                                 l10359 8D4E                                   l12039 6E82  
                                 l12071 659E                                   l10711 6A00  
                                 l10455 A2F0                                   l13007 219C  
                                 l12153 5BC0                                   l12129 5A50  
                                 l12137 5AD6                                   l12305 2D1A  
                                 l12209 253A                                   l11601 68C6  
                                 l10705 69D8                                   l11523 8F42  
                                 l12315 2E3C                                   l12251 28C6  
                                 l10731 6A80                                   l10723 6A5A  
                                 l10715 6A0C                                   l10379 A3EA  
                                 l13035 2246                                   l13027 2210  
                                 l10549 AE7E                                   l11613 A452  
                                 l12093 5884                                   l12325 2EF2  
                                 l12229 26EE                                   l13029 2228  
                                 l11535 A164                                   l11551 91B4  
                                 l11615 A47E                                   l11711 00F0  
                                 l12271 2AD8                                   l12263 2A20  
                                 l12247 2872                                   l12239 2786  
                                 l12191 2408                                   l12423 9EE2  
                                 l10815 958E                                   l10663 9944  
                                 l13039 226C                                   l10921 A608  
                                 l10809 5FA0                                   l10649 844C  
                                 l11545 917A                                   l12353 31A6  
                                 l12425 9F24                                   l12409 A064  
                                 l10753 6BC8                                   l10657 989E  
                                 l13049 22C2                                   l10915 A5F8  
                                 l11539 A1A2                                   l11555 91F0  
                                 l11651 5506                                   l11731 0216  
                                 l12099 58BE                                   l12363 3204  
                                 l12339 306E                                   l12275 2B0C  
                                 l12187 23B8                                   l10755 6BF0  
                                 l10827 95EA                                   l12541 4370  
                                 l11549 91A2                                   l11661 5718  
                                 l11565 9A7A                                   l11901 0D24  
                                 l11805 05F6                                   l11733 022C  
                                 l12189 23F2                                   l11581 66F0  
                                 l10765 9D56                                   l10685 695E  
                                 l10837 965A                                   PRLOCK 0039EF  
                                 l10855 AE54                                   l11559 923A  
                                 l11647 54E8                                   l11639 549E  
                                 l11823 06B8                                   l11807 0602  
                                 l11719 0146                                   l12359 3200  
                                 l12295 2C6C                                   l10695 69A2  
                                 l10687 696E                                   l12633 B664  
                                 l12553 45F8                                   l12537 432E  
                                 l11681 57CA                                   l11833 077A  
                                 l11729 01EA                                   l11737 0258  
                                 l12369 3224                                   l11593 6818  
                                 l10769 9D94                                   l10689 6972  
                                 l12801 12AA                                   l12563 473C  
                                 l11843 0926                                   l11827 06F0  
                                 l11763 0396                                   l11747 02FC  
                                 l11755 032A                                   l11587 67AE  
                                 l10699 69AE                                   l12803 12BC  
                                 l12573 47E4                                   l12557 4692  
                                 l11685 5806                                   l11909 0D90  
                                 l11917 0EA2                                   l11773 04D2  
                                 l12901 16C6                                   l12567 47C6  
                                 l11943 0FD6                                   l11791 058E  
                                 l11767 0406                                   l12743 79C0  
                                 l12585 4996                                   l12569 47CE  
                                 l11945 0FF0                                   l11929 0F3A  
                                 l11881 0C32                                   l11865 0B12  
                                 l11857 0A48                                   l11785 0554  
                                 l11769 0470                                   l12497 9286  
                                 l12729 7898                                   l12913 17A0  
                                 l12921 18DE                                   l11955 1092  
                                 l11867 0B34                                   l11699 00AC  
                                 l12923 190C                                   l11981 119A  
                                 l11965 10E2                                   l11893 0CBA  
                                 l11797 0594                                   l11789 057C  
                                 l12853 146E                                   l12943 1966  
                                 l12935 1940                                   l12953 1984  
                                 l12795 1284                                   l12981 1FA4  
                                 l12965 1A76                                   l12797 128C  
                                 l12991 2120                                   l12977 1F42  
                                 l12993 214A                         __end_of___aodiv 7142  
                          _Volts_to_SOC A280                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4268  
                                 _ADCLK 003EFF                         __end_of___aomod 75F6  
                                 _ADPCH 003EF1                         __end_of___fldiv 4F24  
                                 _ADREF 003EFD                         __end_of___awdiv 8B64  
                       __end_of___flneg ABF8                                   STR_10 FD33  
                                 STR_11 FD49                                   STR_12 FF2E  
                                 STR_21 FF61                                   STR_13 FF3F  
                                 STR_14 FF72                                   STR_30 FEE5  
                                 STR_22 FDEC                                   STR_23 FEBF  
                                 STR_31 FE4D                                   STR_15 FD5F  
                                 STR_40 FF83                                   STR_24 FEAC  
                                 STR_32 FE60                                   STR_16 FD1D  
                                 STR_41 FF83                                   STR_33 FE73  
                                 STR_25 FD9C                                   STR_17 FCBA  
                         __CFG_WDTE$OFF 000000                                   STR_42 FF61  
                                 STR_50 FFBD                                   STR_26 FE99  
                                 STR_34 FDB0                                   STR_18 FCD4  
                                 STR_51 FFBD                                   STR_43 FFFB  
                                 STR_19 FF83                                   STR_27 FE86  
                                 STR_35 FE00                                   STR_44 FFF8  
                                 STR_52 FF93                                   STR_28 FEF8  
                                 STR_36 FD88                         __end_of___awmod 914E  
                                 STR_53 FF93                                   STR_29 FED2  
                                 STR_37 FD74                                   STR_54 FF93  
                                 STR_70 FFDA                                   STR_46 FFB1  
                                 STR_38 FDC4                                   STR_71 FFE2  
                                 STR_47 FFC7                                   STR_39 FDD8  
                                 STR_55 FCEE                                   STR_64 FCB9  
                                 STR_80 FFEF                                   STR_48 FE27  
                                 _ADRPT 003EEC                                   STR_49 FE27  
                                 STR_57 FE3A                                   STR_65 FC65  
                                 STR_90 FFF2                                   STR_74 FFE9  
                                 STR_66 FFD6                                   STR_58 FE14  
                                 STR_83 FFEC                                   STR_67 FFDE  
                                 STR_76 FFE9                                   STR_85 FFEC  
                                 STR_93 FFF5                                   STR_78 FFEF  
                                 STR_95 FFF5                                   STR_88 FFF2  
                       __end_of___flmul 3AAC                                   STR_97 FFE6  
                                 STR_99 FFE6                         __end_of___flsub AC84  
                       __end_of___fltol 85E4                                   u11100 0A18  
                                 u11030 0648                                   u11200 0EE4  
                                 u11400 6EA8                                   u10600 693A  
                                 u12210 7A10                         __end_of___lodiv 82FE  
                                 u10460 8F36                                   u10700 54D4  
                                 u10540 9AF4                                   u11260 10B8  
                                 u11420 6332                                   u11500 586A  
                                 u12220 7A12                                   u10710 572C  
                                 u10630 5400                                   u12310 17CE  
                                 u10480 8FB2                                   u10640 5402  
                                 u11280 116E                                   u11360 6D86  
                                 u11600 5AD2                                   u10721 575C  
                                 u10730 5772                                   u11290 1170  
                                 u10810 00DA                                   u11370 6DCC  
                                 u11610 5AF2                                   u11530 5952  
                                 u12410 218C                                   _U1P1H 003DED  
                                 u10731 5770                                   u10547 9AE6  
                                 u11451 65E0                                   u10740 5786  
                                 u10660 5472                                   u11460 65F6  
                                 u11540 59A6                                   u12420 21A6  
                                 _U1P2H 003DEF                                   u11461 65F4  
                                 u11621 5B22                                   u11605 5AB4  
                                 u10750 578A                                   u11470 660A  
                                 u11630 5B38                                   u11550 59A8  
                                 u11710 2450                                   u12430 21B8  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 u11631 5B36                                   _T3CLK 003FA9  
                                 u10680 5484                                   u10840 0194  
                                 u11480 660E                                   u11640 5B4C  
                                 u11720 2452                                   u12416 218E  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u11377 6DBE                                   u10770 57A0  
                                 u10930 050E                                   u10850 0196  
                                 u11650 5B50                                   u11570 5A06  
                                 u11730 2478                                   u12426 21A8  
                                 u12290 158C                                   _U1P3L 003DF0  
                                 u11580 5A08                                   u12436 21BA  
                                 u11830 27DA                                   _U2P1L 003DD4  
                                 u10960 0562                                   u10880 02A6  
                                 u11760 25D2                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u10890 02A8  
                                 u11850 294E                                   u11770 25D4  
                                 _U2P3L 003DD8                                   u11780 25FA  
                                 u10990 05C6                                   u11950 2F46  
                                 _T5CLK 003F9D                                   u11880 2BC6  
                       __end_of___lomod 8CA4                                   u11970 30F6  
                                 u11890 2BC8                                   _T2HLT 003FAD  
                                 u11990 A044                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00A3  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 004B  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result AF54                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR B8CC  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 8A16                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 9A32  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR B74E  
                          _DMA1CON1bits 003BFD                                   _fabsf 9E08  
                                 _flags 000E                __size_of_calc_model_data 03A2  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
                                 _fputc 8F12              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha AD9A                                   _fputs A154  
                       __end_of_isdigit B158                         __end_of_ivln2_h FC5D  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand B030  
                                 _width 000A                                   _putch B71A  
                       __end_of_islower B0F8                         __end_of_isspace AAC6  
              _INT1_SetInterruptHandler B3F6                         __end_of_isupper B128  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0026                                   ltemp1 002A  
                                 ltemp2 002E                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0026                                   ttemp1 0029  
                                 ttemp2 002C                                   ttemp3 002F  
                                 ttemp5 0027                                   ttemp6 002A  
                                 ttemp7 002E                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler B37E             _UART1_SetRxInterruptHandler B356  
                                 wtemp0 0026                                   wtemp1 0028  
                                 wtemp2 002A                                   wtemp3 002C  
                                 wtemp4 002E                                   wtemp5 0030  
                                 wtemp8 0027                         __end_of_sprintf 947C  
                       __end_of_tolower A5C4                         __end_of_strncmp 7816  
                       __end_of_toupper A540               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr B4C0                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize ACCA                   __end_of_ringBufS_init B2DE  
                       __initialization 947C                       _UART2_rx_vect_isr B4E8  
                          __end_of_cp_h FC65                            __end_of_cp_l FC61  
                          __end_of_atoi 73B6                            __end_of_ctoa A4BC  
                          __end_of_main 22D6                            __end_of_dtoa 5850  
                          __end_of_nanf A910                            __end_of_spin FC51  
                          __end_of_stoa 6EC2                            __end_of_utoa 6658  
                          __end_of_xtoa 5C0A                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0046                 __end_of_TMR2_Initialize B77E  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button AE5C  
              _TMR5_SetInterruptHandler B3A6                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 009A  
                     _port_data_dma_ptr B85C                      esr_check@esr_state 0018  
                   ??_UART2_rx_vect_isr 004B                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize B23C                         _PWM8_Initialize B794  
                      _UART1_Initialize AC84                       _UART2_tx_vect_isr B4C0  
                    _UART2_Transmit_ISR B210                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan A7E8                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue AD9A                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0046  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1019 99E2  
                                _RB6PPS 003A0E                                  i1l1207 897E  
                  _start_switch_handler B628                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize AD56  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright B824                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                u448_48 B614                                  _OSCFRQ 0039DF  
                                u951_24 8DBE                                  u951_25 8DBA  
                                u928_20 AF94                                  u928_26 AF96  
                                u944_28 8CBE                                  u947_20 8CDE  
                                u947_21 8CD8                                  u971_28 B5F2  
                  __size_of_hid_display 0102                                  u980_28 B566  
                                u977_48 B5AE                        __end_of___xxtofl 7C2C  
 __end_of_ADCC_DischargeSampleCapacitor B892  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor B88A                __end_of_send_lcd_cmd_dma AA74  
                       _TMR3_WriteTimer AE9C                     ??_UART2_tx_vect_isr 004B  
             __end_of_UART2_rx_vect_isr B50E              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize B852                        _UART2_Initialize A910  
                                _WaitMs AFC4                         _conv_raw_result 4F24  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 8754                                  ___fleq 9BCC  
                     _ADCC_ThresholdISR A718                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush A312                                  _efgtoa 0000  
                                _floorf 5FAC                      ?_ADCC_ThresholdISR 0046  
                                _memset 6658                    __size_of_help_button 0038  
                                clear_0 9514                                  clear_1 9528  
                                clear_2 953A                                  clear_3 9546  
                                clear_4 9552                                  clear_5 955E  
                                clear_6 956A               __end_of_port_data_dma_ptr B866  
                                _printf A84C                      _eaDogM_WriteString A00C  
                                _strcpy 9A32                               ?_ADCC_ISR 0046  
                                _strlen A0B2                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 05FF                         _ADCC_Initialize A6AC  
                        _PMD_Initialize B7C0              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr B4E8                                  lltemp0 0026  
                                lltemp1 002E                                  lltemp2 0036  
                                lltemp3 003E                     ??_ADCC_ThresholdISR 0046  
                __end_of_start_adc_scan A84C                            __mediumconst FA78  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay A9C8  
                      __end_of_spinners 9954                        __end_of_vfprintf 9F62  
                            _StartTimer ADDC           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize AD10                       _SYSTEM_Initialize AB66  
                            __accesstop 0060                 __end_of__initialization 957C  
                             ?_INT0_ISR 0046                               ?_INT1_ISR 0046  
                  __end_of_display_help B8AA                    __end_of_display_info B8A2  
             __end_of_CLKREF_Initialize B85C                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer AE5C  
                 _set_temp_display_help B806                        _clear_hid_pflags B532  
                 __end_of_TMR3_CallBack B59E               __end_of_ADCC_ThresholdISR A782  
                    __size_of_calc_bsoc 0742                  __end_of_ringBufS_flush A3A4  
                        __pcstackCOMRAM 0046                              ___inthi_sp 1142  
                            ___intlo_sp 18A1                            __pidataBANK0 B158  
                          __pidataBANK1 9684                            __pidataBANK2 9B06  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf 9EB6  
                             ?_TMR3_ISR 0046                               ?_TMR5_ISR 0046  
                             ?_TMR6_ISR 0046                          ivt0x8_undefint 00AC  
                         __end_of_fputc 9036                           __end_of_fputs A1EC  
                         __end_of_srand B064                   __end_of_TMR5_CallBack B57A  
                         __end_of_putch B734                 __end_of_PWM8_Initialize B7AA  
               __end_of_TMR6_Initialize B266                       _adc_int_t_handler A5C4  
                __end_of_PMD_Initialize B7D4                              __end_of_bp FC59  
                            ??_ADCC_ISR 0046                   __end_of_TMR6_CallBack B5C2  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 001A  
                __size_of_calc_ror_data 0174                           _DMA1_DMAA_ISR B874  
                 TMR3_ISR@CountCallBack 0010                          _clear_adc_scan B8B2  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0001               __end_of_SYSTEM_Initialize ABB0  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer AEDC                              __pbssBANK0 0060  
                            __pbssBANK2 02C5                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            _check_help 7816                 __end_of_conv_raw_result 53D0  
                    __size_of_esr_check 02C0                   _INT0_InterruptHandler 0007  
                            ??_INT0_ISR 0046                              ??_INT1_ISR 004C  
                     __end_of_TimerDone B306                        _DMA1_DMADCNT_ISR B868  
                    __size_of_init_bsoc 0170              __size_of_UART2_rx_vect_isr 0026  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma B098                   __end_of_wait_lcd_done B71A  
      __end_of_TMR3_SetInterruptHandler B3F6                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler B3A6                              ??_TMR3_ISR 00E0  
               __end_of_ADCC_Initialize A716                              ??_TMR5_ISR 0050  
             __end_of_adc_int_t_handler A642                              ??_TMR6_ISR 004B  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler B46E   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler B446                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR B648                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan B8B8  
                               u1008_44 A628                                 u1008_45 A622  
                               u1207_20 4734                                 u1214_28 B58A  
                        ?_DMA1_DMAA_ISR 0046                        _DMA1_DMASCNT_ISR B844  
                               u1209_20 47DC                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0046  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 49AA  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch B1B6  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer AE9C  
               __size_of_switch_handler 0140                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one B806              __end_of_set_load_relay_two B7F6  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 82FE                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim B74E                                 __Lparam 0000  
              __end_of_UART1_Initialize ACCA                       __end_of_hid_input A434  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 6EC2  
                               ___fladd 3AAC                                 ___aomod 73B6  
                               ___fldiv 49AA                                 ___awdiv 8A16  
                               ___flneg ABB0                                 ___awmod 9036  
                               ___flmul 3282                                 ___flsub AC3E  
                               ___fltol 8472                                 ___lodiv 817E  
                               ___lomod 8B64               __end_of_UART1_Receive_ISR B668  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 986E                                 __pcinit 947C  
              __end_of_mode_lamp_bright B832                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand B816  
                               __ramtop 2000                                 __ptext0 1244  
                               __ptext1 B50E                                 __ptext2 B628  
                               __ptext3 B030                                 __ptext4 986E  
                               __ptext5 B098                                 __ptext6 9784  
                               __ptext7 B266                                 __ptext8 B28E  
                               __ptext9 B668                       __end_of_esr_check 6C04  
                     _UART2_Receive_ISR B6E0                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize B7AA  
                               us623999 712C                            __size_of_abs 0046  
                               us634999 75E4                                 us724999 8C94  
                          __size_of_pad 0114                       __end_of_init_bsoc 8754  
                               _isalpha AD56                                 us719999 82E8  
                               _isdigit B128                                 _ivln2_h FC59  
                             _T3CONbits 003FA6                                 _mode_sw 001C  
                     __end_of_lp_filter 7FE8                                 _islower B0C8  
                               _isspace AA74                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize A96E  
                               _isupper B0F8              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 9372                                 _tolower A540  
                 __size_of_display_help 0008                                 _utctime 008E  
                 __size_of_display_info 0008                                 _strncmp 75F6  
                               _toupper A4BC                    end_of_initialization 957C  
             __size_of_convert_adc_data 00B8                      _check_enter_button AE1C  
                             i1u1225_20 8976     __end_of_UART2_SetRxInterruptHandler B356  
           _UART2_SetRxInterruptHandler B32E                               i2u1011_48 B1FC  
                             i2u1013_48 A74E                               i2u1013_49 A762  
                             i2u1017_48 B4D4                               i2u1019_48 B4FA  
                             i2u1224_48 B4AC                 check_day_time@day_delay 001B  
                     __end_of_set_vterm B6A4                       __end_of_vfpfcnvrt 3282  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd B8C4  
             __end_of_UART2_Receive_ISR B6FE                          wdtdelay@dcount 0092  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 004C  
                 _INT1_InterruptHandler 0004                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc B8CA                _TMR3_SetInterruptHandler B3CE  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler B37E  
                          _display_help B8A2                   _TMR5_InterruptHandler 009D  
                          _display_info B89A    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags B556                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler B496             _ADCC_SetADIInterruptHandler B46E  
                            _update_lcd 9262                         _calc_model_data 5C0A  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc B50E                         _DMA1_Initialize A642  
                            _start_bsoc B5C2                         _SPI1_Initialize B77E  
                 __end_of_get_vterm_ptr B1B6                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs AFFA  
          __end_of_INTERRUPT_Initialize A7E8                              _vterm_dump 8DE4  
                        __end_of___flge 88B6                          __end_of___fleq 9C90  
  __end_of_INT0_DefaultInterruptHandler B8D8   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler B8D6              __size_of_UART1_Receive_ISR 0020  
                       _DMA2_Initialize A9C8                           __pidataBIGRAM 7C2C  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 015E  
                     __size_of_TMR5_ISR 00DE                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 6318  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 0072  
                        __end_of_memset 6944                          __end_of_printf A8AE  
              __end_of_DMA1_DMADCNT_ISR B872             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack B628                          __end_of_strcpy 9B06  
                        __end_of_strlen A154                     start_initialization 947C  
  __end_of_TMR5_DefaultInterruptHandler AFC4   __size_of_TMR5_DefaultInterruptHandler 0038  
          _TMR5_DefaultInterruptHandler AF8C         __size_of_PIN_MANAGER_Initialize 0094  
                           __end_of_abs AC3E                   __end_of_INT1_CallBack B606  
             __size_of_set_display_info 001E                             __end_of_pad 9262  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd B2B6  
                        _switch_handler 8CA4           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 02EE  
                 __end_of___fpclassifyf 817E                           _uart2RxBuffer 0500  
              __end_of_DMA1_DMASCNT_ISR B852                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR B880                     __end_of_hid_display 9684  
            __end_of_send_port_data_dma AB18                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone B2DE                           _ringBufS_init B2B6  
                           __pdataBANK0 00B1                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize B098  
               __end_of_calc_model_data 5FAC                     __end_of_help_button AF8C  
       __end_of_eaDogM_WriteStringAtPos B030                     __end_of_BVSOC_TABLE FB49  
                  calc_model_data@bcror 0086                             __pbssBIGRAM 07FF  
               __end_of_DMA1_Initialize A6AC                    calc_model_data@bvror 008A  
                           __pbssCOMRAM 0001        __end_of_INT0_SetInterruptHandler B446  
                         __pcstackBANK0 00E0                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 8DE4  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize B794  
              _UART1_RxInterruptHandler 00A9                _UART2_TxInterruptHandler 00AC  
                             __end_of_T FBD9                        _convert_adc_data 9D50  
                             _calc_bsoc 4268               __size_of_ringBufS_put_dma 00AA  
                          _init_display 9784                  __end_of_DMA1_DMAOR_ISR B88A  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A0  
                    calc_ror_data@bcror 007E                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize AA22                      calc_ror_data@bvror 0082  
                _PIN_MANAGER_Initialize A1EC                __size_of_TMR3_Initialize 0046  
                  __end_of_wait_lcd_set B8BE                           __pmediumconst FA78  
                             __ptext100 5C0A                               __ptext101 B8C4  
                             __ptext110 B32E                               __ptext102 B5C2  
                             __ptext111 AC84                               __ptext103 7E2C  
                             __ptext120 B77E                               __ptext112 B356  
                             __ptext104 AC3E                               __ptext121 B794  
                             __ptext113 B23C                               __ptext105 3AAC  
                             __ptext130 A9C8                               __ptext122 B7C0  
                             __ptext114 B37E                               __ptext106 3282  
                             __ptext131 A642                               __ptext123 A1EC  
                             __ptext115 ACCA                               __ptext107 AB66  
                             __ptext140 9954                               __ptext132 B852  
                             __ptext124 B7AA                               __ptext116 B3A6  
                             __ptext108 A910                               __ptext141 AE5C  
                             __ptext133 A6AC                               __ptext125 A782  
                             __ptext117 AD10                               __ptext109 B306  
                             __ptext150 AAC6                               __ptext142 B556  
                             __ptext134 B446                               __ptext126 B8AA  
                             __ptext118 B3CE                               __ptext151 B85C  
                             __ptext143 AF8C                               __ptext135 B46E  
                             __ptext127 B064                               __ptext119 B766  
                             __ptext160 A718                               __ptext152 B834  
                             __ptext144 9C90                               __ptext136 AEDC  
                             __ptext128 B3F6                               __ptext161 B498  
                             __ptext153 B606                               __ptext145 88B8  
                             __ptext137 B5E4                               __ptext129 B41E  
                             __ptext170 B844                               __ptext162 B648  
                             __ptext154 B8D6                               __ptext146 AE9C  
                             __ptext138 B8D2                               __ptext171 B868  
                             __ptext163 B4C0                               __ptext155 B8CC  
                             __ptext147 B57A                               __ptext139 8CA4  
                             __ptext172 B874                               __ptext164 B210  
                             __ptext156 B1E4                               __ptext148 B8D4  
                             __ptext173 B880                               __ptext165 B4E8  
                             __ptext157 A5C4                               __ptext149 4268  
                             __ptext174 0000                               __ptext166 B6E0  
                             __ptext158 B8D8                               __ptext167 B734  
                             __ptext159 B8DA                               __ptext168 B59E  
                             __ptext169 AB18                               _hid_input A3A4  
                    __end_of_StartTimer AE1C                      _set_load_relay_one B7F6  
                    _set_load_relay_two B7E6                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00E6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR B1E4                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 0076                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 6944  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 85E4                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 7E2C  
                           _hid_display 9582                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize A782  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0046                                _INT0_ISR B834  
                              _INT1_ISR AEDC                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0394  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack B57A  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0046                               _set_vterm B686  
                   __size_of_update_lcd 0110                             _help_button AF54  
                              _TMR3_ISR 88B8                             _BVSOC_TABLE FA79  
                              _TMR5_ISR 9954                                _TMR6_ISR B734  
                             _port_data 05FF                     __size_of_static_soc 0024  
                             _vfpfcnvrt 22D6                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack B556  
                            _ADCON0bits 003EF8                      __end_of_check_help 7A28  
                             _start_lcd B8BE                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack B59E  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc B8C4                        _set_display_info B6A4  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 9490  
                             copy_data1 94B6                               copy_data2 94D8  
                             copy_data3 94FE                _INT0_SetInterruptHandler B41E  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler B32E  
           _UART2_SetTxInterruptHandler B306                            _uart1RxCount 0023  
                          _uart2RxCount 001D                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done B6FE  
                          _send_lcd_cmd B28E                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler B8DA                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
                    __end_of_get_switch B1E2                 __size_of_check_day_time 00C0  
                 __end_of_DMA1_DMAA_ISR B87E                      ___fpclassifyf@F463 007A  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 7A28                       ?_DMA1_DMADCNT_ISR 0046  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand B824                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 004C                                __ptext10 B2B6  
                              __ptext11 85E4                                __ptext20 B88A  
                              __ptext12 A280                                __ptext21 B8B2  
                              __ptext13 9582                                __ptext30 9372  
                              __ptext22 B892                                __ptext14 A3A4  
                              __ptext31 B188                                __ptext23 B7E6  
                              __ptext15 B1B6                                __ptext40 B8BE  
                              __ptext32 AFC4                                __ptext24 B7F6  
                              __ptext16 6944                                __ptext41 A312  
                              __ptext33 9262                                __ptext25 B816  
                              __ptext17 AF1A                                __ptext50 6318  
                              __ptext42 6658                                __ptext34 AFFA  
                              __ptext26 9D50                                __ptext18 A7E8  
                              __ptext51 8B64                                __ptext43 A84C  
                              __ptext35 AA22                                __ptext27 B532  
                              __ptext19 B7D4                                __ptext60 7FE8  
                              __ptext52 817E                                __ptext44 9EB6  
                              __ptext36 B6FE                                __ptext28 7816  
                              __ptext61 8472                                __ptext53 75F6  
                              __ptext45 22D6                                __ptext37 A96E  
                              __ptext29 8DE4                                __ptext70 A434  
                              __ptext62 ABB0                                __ptext54 6C04  
                              __ptext46 5850                                __ptext38 A00C  
                              __ptext71 914E                                __ptext63 9BCC  
                              __ptext55 0000                                __ptext47 A4BC  
                              __ptext39 B8B8                                __ptext80 B686  
                              __ptext72 A0B2                                __ptext64 9036  
                              __ptext56 A540                                __ptext48 B0C8  
                              __ptext81 B806                                __ptext73 A154  
                              __ptext65 8A16                                __ptext57 B0F8  
                              __ptext49 AD56                                __ptext90 B8A2  
                              __ptext82 B6A4                                __ptext74 8F12  
                              __ptext66 53D0                                __ptext58 9A32  
                              __ptext91 AE1C                                __ptext83 B74E  
                              __ptext75 B71A                                __ptext67 ABF8  
                              __ptext59 5FAC                                __ptext92 82FE  
                              __ptext84 B824                                __ptext76 9F62  
                              __ptext68 73B6                                __ptext93 9E08  
                              __ptext85 AD9A                                __ptext77 7142  
                              __ptext69 6EC2                                __ptext94 4F24  
                              __ptext86 AF54                                __ptext78 AA74  
                              __ptext95 A8AE                                __ptext87 B2DE  
                              __ptext79 B128                                __ptext96 B6C2  
                              __ptext88 ADDC                                __ptext97 7A28  
                              __ptext89 B89A                                __ptext98 49AA  
                              __ptext99 8754                        __size_of_isupper 0030  
                              us1131999 6C16                                us1062999 53EA  
                              us1143999 637E                                us1152999 58D0  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma 9F62                    __end_of_Volts_to_SOC A312  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 1092                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0046                   __end_of_init_port_dma B0C8  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 00A6                               stoa@F1166 0200  
                    ??_DMA1_DMASCNT_ISR 004C            __end_of_ADCC_StartConversion B7E6  
                              _spi_link 0060                                _wdtdelay A96E  
            __end_of_UART2_Transmit_ISR B23C                                _spinners 986E  
                              _vfprintf 9EB6                __end_of_convert_adc_data 9E08  
            __end_of_PWM8_LoadDutyValue ADDC    __end_of_TMR3_DefaultInterruptHandler B8D6  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler B8D4  
  __end_of_INT1_DefaultInterruptHandler B8D4   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler B8D2                      _send_port_data_dma AAC6  
                         ??_Default_ISR 0046                             _uart1RxHead 0025  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 001F  
                           _uart1RxTail 0024                          _get_raw_result B6C2  
                           _uart2TxHead 0022                             _uart2RxTail 001E  
                             spinners@s 006C                             _uart2TxTail 0021  
                          _wait_lcd_set B8B8                        Volts_to_SOC@slot 0019  
                    _EXT_INT_Initialize B064    __end_of_TMR6_DefaultInterruptHandler AB66  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler AB18  
  __end_of_ADCC_DefaultInterruptHandler B8DA   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler B8D8                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long B266  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help B816  
                 __end_of_calc_ror_data 8472                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString A0B2                   __end_of_mode_lamp_dim B766  
               __end_of_adc_int_handler B8DC                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0022                      __end_of_update_lcd 9372  
                _uart2TxBufferRemaining 0020                      __end_of_static_soc B532  
                    __end_of_start_bsoc B5E4                          _FVR_Initialize B8AA  
                __end_of_get_raw_result B6E0                        _send_lcd_cmd_dma AA22  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0014  
      __end_of_INT1_SetInterruptHandler B41E               __size_of_UART1_Initialize 0046  
                      ??_DMA1_DMAOR_ISR 004C               __end_of_send_lcd_cmd_long B28E  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR B8D2  
        __end_of_PIN_MANAGER_Initialize A280               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 8F12                 _eaDogM_WriteStringAtPos AFFA  
                         _get_vterm_ptr B188                          _check_adc_scan B892  
             __size_of_UART2_Initialize 005E  
