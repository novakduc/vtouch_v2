

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Mar 20 15:39:13 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1,inline
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=4,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=4,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=4,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=4,class=CODE,delta=1
   114                           	psect	text91,global,reloc=4,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=4,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=4,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=4,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=4,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=4,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=4,class=CODE,delta=1
   128                           	psect	text105,global,reloc=4,class=CODE,delta=1
   129                           	psect	text106,global,reloc=4,class=CODE,delta=1
   130                           	psect	text107,global,reloc=4,class=CODE,delta=1
   131                           	psect	text108,global,reloc=4,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   136                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   139                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   140  0000                     
   141                           ; Version 2.05
   142                           ; Generated 20/12/2018 GMT
   143                           ; 
   144                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   145                           ; All rights reserved.
   146                           ; 
   147                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   148                           ; 
   149                           ; Redistribution and use in source and binary forms, with or without modification, are
   150                           ; permitted provided that the following conditions are met:
   151                           ; 
   152                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   153                           ;        conditions and the following disclaimer.
   154                           ; 
   155                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   156                           ;        of conditions and the following disclaimer in the documentation and/or other
   157                           ;        materials provided with the distribution.
   158                           ; 
   159                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   160                           ;        software without specific prior written permission.
   161                           ; 
   162                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   163                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   164                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   165                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   166                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   167                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   168                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   169                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   170                           ; 
   171                           ; 
   172                           ; Code-generator required, PIC18F57K42 Definitions
   173                           ; 
   174                           ; SFR Addresses
   175  0000                     
   176 ;;_mode	offset	0
   177 ;;_rxData	offset	0
   178 ;;_t_link	offset=-1 (param)
   179 ;;_stream	offset=-6 (param)
   180 ;;_function	offset=-7 (param)
   181 ;;_f	offset	0
   182 ;;_ap	offset	5
   183 ;;_s	offset=-2 (param)
   184 ;;_fmt	offset=-3 (param)
   185 ;;_rxData	offset	0
   186 ;;_r_link	offset=-1 (param)
   187 ;;_rxData	offset	0
   188 ;;_m_link	offset=-1 (param)
   189 ;;_k	offset	0
   190 ;;_checksum	offset	2
   191 ;;_i	offset	4
   192 ;;_byte_block	offset=-2 (param)
   193 ;;_length	offset=-3 (param)
   194 ;;_fake	offset=-4 (param)
   195 ;;_s_uart	offset=-5 (param)
   196 ;;_i	offset	0
   197 ;;_sum	offset	2
   198 ;;_byte_block	offset=-2 (param)
   199 ;;_byte_count	offset=-4 (param)
   200 ;;_bufData	offset=-1 (param)
   201 ;;_txData	offset=-1 (param)
   202 ;;_bufData	offset=-1 (param)
   203 ;;_txData	offset=-1 (param)
   204 ;;_stream	offset=-1 (param)
   205 ;;_function	offset=-2 (param)
   206 ;;_byte_block	offset=-1 (param)
   207 ;;_clear	offset=-2 (param)
   208 ;;_numMilliseconds	offset=-2 (param)
   209 ;;_timer	offset=-1 (param)
   210 ;;_timer	offset=-1 (param)
   211 ;;_count	offset=-3 (param)
   212 ;;_readValue	offset	0
   213 ;;_readValue	offset	0
   214 ;;_cmd	offset=-1 (param)
   215 ;;_cmd	offset=-1 (param)
   216 ;;_data	offset=-1 (param)
   217 ;;__this	offset=-2 (param)
   218 ;;_r	offset=-1 (param)
   219 ;;_c	offset=-2 (param)
   220 ;;_strPtr	offset=-3 (param)
   221 ;;_strPtr	offset=-1 (param)
   222 ;;_cmd	offset=-1 (param)
   223 ;;_strPtr	offset=-1 (param)
   224 ;;_delay	offset=-4 (param)
   225 ;;__this	offset=-2 (param)
   226 ;;_clearBuffer	offset=-3 (param)
   227 ;;_s	offset	0
   228 ;;_k	offset	2
   229 ;;_dest	offset=-2 (param)
   230 ;;_c	offset=-4 (param)
   231 ;;_n	offset=-6 (param)
   232 ;;_ap	offset	0
   233 ;;_fmt	offset=-2 (param)
   234 ;;_cfmt	offset	0
   235 ;;_fp	offset=-2 (param)
   236 ;;_fmt	offset=-3 (param)
   237 ;;_ap	offset=-5 (param)
   238 ;;_ll	offset	0
   239 ;;_cp	offset	8
   240 ;;_c	offset	10
   241 ;;_fp	offset=-2 (param)
   242 ;;_fmt	offset=-4 (param)
   243 ;;_ap	offset=-6 (param)
   244 ;;_r	offset	0
   245 ;;_l	offset	1
   246 ;;__l	offset=-1 (param)
   247 ;;__r	offset=-2 (param)
   248 ;;_n	offset=-4 (param)
   249 ;;_nuls	offset	0
   250 ;;_l	offset	7
   251 ;;_p	offset	9
   252 ;;_cp	offset	11
   253 ;;_w	offset	13
   254 ;;_i	offset	15
   255 ;;_fp	offset=-2 (param)
   256 ;;_s	offset=-4 (param)
   257 ;;_dtoa$3875	offset	0
   258 ;;_n	offset	2
   259 ;;_i	offset	10
   260 ;;_s	offset	12
   261 ;;_w	offset	14
   262 ;;_p	offset	16
   263 ;;_fp	offset=-2 (param)
   264 ;;_d	offset=-10 (param)
   265 ;;_a	offset=-2 (param)
   266 ;;_sign	offset	0
   267 ;;_counter	offset	1
   268 ;;_dividend	offset=-8 (param)
   269 ;;_divisor	offset=-16 (param)
   270 ;;_quotient	offset	0
   271 ;;_sign	offset	8
   272 ;;_counter	offset	9
   273 ;;_dividend	offset=-8 (param)
   274 ;;_divisor	offset=-16 (param)
   275 ;;_w	offset	0
   276 ;;_fp	offset=-2 (param)
   277 ;;_c	offset=-3 (param)
   278 ;;_w	offset	0
   279 ;;_i	offset	2
   280 ;;_fp	offset=-2 (param)
   281 ;;_buf	offset=-4 (param)
   282 ;;_p	offset=-6 (param)
   283 ;;_a	offset	0
   284 ;;_s	offset=-2 (param)
   285 ;;_i	offset	0
   286 ;;_c	offset	2
   287 ;;_s	offset=-2 (param)
   288 ;;_fp	offset=-4 (param)
   289 ;;_c	offset=-2 (param)
   290 ;;_fp	offset=-4 (param)
   291 ;;_c	offset=-1 (param)
   292 ;;__this	offset=-2 (param)
   293 ;;_c	offset=-3 (param)
   294 ;;_InterruptHandler	offset=-3 (param)
   295 ;;_InterruptHandler	offset=-3 (param)
   296 ;;_InterruptHandler	offset=-3 (param)
   297 ;;_InterruptHandler	offset=-3 (param)
   298 ;;_InterruptHandler	offset=-3 (param)
   299 ;;_InterruptHandler	offset=-3 (param)
   300 ;;_state	offset	0
   301 ;;_InterruptHandler	offset=-3 (param)
   302 ;;_InterruptHandler	offset=-3 (param)
   303 ;;_InterruptHandler	offset=-3 (param)
   304 ;;_InterruptHandler	offset=-3 (param)
   305 ;;_i	offset	0
   306 ;;_timerVal	offset=-2 (param)
   307                           
   308                           	psect	idataCOMRAM
   309  00647E                     __pidataCOMRAM:
   310                           	opt callstack 0
   311                           
   312                           ;initializer for r_protocol@retry
   313  00647E  03                 	db	3
   314                           
   315                           	psect	idataBANK0
   316  005786                     __pidataBANK0:
   317                           	opt callstack 0
   318                           
   319                           ;initializer for stoa@F1144
   320  005786  28                 	db	40
   321  005787  6E                 	db	110
   322  005788  75                 	db	117
   323  005789  6C                 	db	108
   324  00578A  6C                 	db	108
   325  00578B  29                 	db	41
   326  00578C  00                 	db	0
   327                           
   328                           ;initializer for _V
   329  00578D  00                 	db	0
   330  00578E  00                 	db	0
   331  00578F  00                 	db	0
   332  005790  00                 	db	0
   333  005791  00                 	db	0
   334  005792  00                 	db	0
   335  005793  00                 	db	0
   336  005794  00                 	db	0
   337  005795  00                 	db	0
   338  005796  00                 	db	0
   339  005797  00                 	db	0
   340  005798  00                 	db	0
   341  005799  00                 	db	0
   342  00579A  00                 	db	0
   343  00579B  00                 	db	0
   344  00579C  00                 	db	0
   345  00579D  00                 	db	0
   346  00579E  00                 	db	0
   347  00579F  00                 	db	0
   348  0057A0  00                 	db	0
   349  0057A1  00                 	db	0
   350  0057A2  00                 	db	0
   351  0057A3  00                 	db	0
   352  0057A4  00                 	db	0
   353  0057A5  00                 	db	0
   354  0057A6  00                 	db	0
   355  0057A7  00                 	db	0
   356  0057A8  00                 	db	0
   357  0057A9  00                 	db	0
   358  0057AA  00                 	db	0
   359  0057AB  00                 	db	0
   360  0057AC  00                 	db	0
   361  0057AD  00                 	db	0
   362  0057AE  00                 	db	0
   363  0057AF  00                 	db	0
   364  0057B0  00                 	db	0
   365  0057B1  00                 	db	0
   366  0057B2  00                 	db	0
   367  0057B3  00                 	db	0
   368  0057B4  00                 	db	0
   369  0057B5  00                 	db	0
   370  0057B6  00                 	db	0
   371  0057B7  00                 	db	0
   372  0057B8  00                 	db	0
   373  0057B9  00                 	db	0
   374  0057BA  00                 	db	0
   375  0057BB  00                 	db	0
   376  0057BC  00                 	db	0
   377  0057BD  00                 	db	0
   378  0057BE  00                 	db	0
   379  0057BF  00                 	db	0
   380  0057C0  00                 	db	0
   381  0057C1  00                 	db	0
   382  0057C2  00                 	db	0
   383  0057C3  00                 	db	0
   384  0057C4  00                 	db	0
   385  0057C5  00                 	db	0
   386  0057C6  00                 	db	0
   387  0057C7  00                 	db	0
   388  0057C8  00                 	db	0
   389  0057C9  00                 	db	0
   390  0057CA  00                 	db	0
   391  0057CB  00                 	db	0
   392  0057CC  00                 	db	0
   393  0057CD  00                 	db	0
   394  0057CE  00                 	db	0
   395  0057CF  00                 	db	0
   396  0057D0  00                 	db	0
   397  0057D1  00                 	db	0
   398  0057D2  00                 	db	0
   399  0057D3  0000               	dw	0
   400  0057D5  0000               	dw	0
   401  0057D7  0000               	dw	0
   402  0057D9  0000               	dw	0
   403  0057DB  00                 	db	0
   404  0057DC  00                 	db	0
   405  0057DD  00                 	db	0
   406  0057DE  00                 	db	0
   407  0057DF  00                 	db	0
   408  0057E0  0000               	dw	0
   409  0057E2  0000               	dw	0
   410  0057E4  00                 	db	0
   411  0057E5  00                 	db	0
   412  0057E6  00                 	db	0
   413  0057E7  00                 	db	0
   414  0057E8  00                 	db	0
   415  0057E9  01                 	db	1
   416                           
   417                           	psect	idataBANK1
   418  004FA6                     __pidataBANK1:
   419                           	opt callstack 0
   420                           
   421                           ;initializer for _H10
   422  004FA6  0000               	dw	0
   423  004FA8  0001               	dw	1
   424  004FAA  0000               	dw	0
   425  004FAC  01                 	db	1
   426  004FAD  80                 	db	128
   427  004FAE  01                 	db	1
   428  004FAF  81                 	db	129
   429  004FB0  00                 	db	0
   430  004FB1  00                 	db	0
   431  004FB2  0A                 	db	10
   432  004FB3  0000               	dw	0
   433  004FB5  00                 	db	0
   434  004FB6  00                 	db	0
   435  004FB7  00                 	db	0
   436  004FB8  00                 	db	0
   437  004FB9  00                 	db	0
   438  004FBA  00                 	db	0
   439  004FBB  00                 	db	0
   440  004FBC  00                 	db	0
   441  004FBD  00                 	db	0
   442  004FBE  00                 	db	0
   443  004FBF  0A                 	db	10
   444  004FC0  0000               	dw	0
   445  004FC2  0001               	dw	1
   446  004FC4  0000               	dw	0
   447  004FC6  01                 	db	1
   448  004FC7  80                 	db	128
   449  004FC8  00                 	db	0
   450  004FC9  01                 	db	1
   451  004FCA  00                 	db	0
   452  004FCB  00                 	db	0
   453  004FCC  0A                 	db	10
   454  004FCD  0000               	dw	0
   455  004FCF  0001               	dw	1
   456  004FD1  0000               	dw	0
   457  004FD3  01                 	db	1
   458  004FD4  80                 	db	128
   459  004FD5  01                 	db	1
   460  004FD6  81                 	db	129
   461  004FD7  00                 	db	0
   462  004FD8  80                 	db	128
   463  004FD9  0A                 	db	10
   464  004FDA  0000               	dw	0
   465  004FDC  0001               	dw	1
   466  004FDE  0000               	dw	0
   467  004FE0  01                 	db	1
   468  004FE1  80                 	db	128
   469  004FE2  11                 	db	17
   470  004FE3  82                 	db	130
   471  004FE4  00                 	db	0
   472  004FE5  00                 	db	0
   473  004FE6  0A                 	db	10
   474  004FE7  0000               	dw	0
   475  004FE9  0001               	dw	1
   476  004FEB  0000               	dw	0
   477  004FED  01                 	db	1
   478  004FEE  80                 	db	128
   479  004FEF  0F                 	db	15
   480  004FF0  81                 	db	129
   481  004FF1  00                 	db	0
   482  004FF2  00                 	db	0
   483  004FF3  0A                 	db	10
   484  004FF4  0000               	dw	0
   485  004FF6  0001               	dw	1
   486  004FF8  0000               	dw	0
   487  004FFA  01                 	db	1
   488  004FFB  80                 	db	128
   489  004FFC  11                 	db	17
   490  004FFD  81                 	db	129
   491  004FFE  00                 	db	0
   492  004FFF  00                 	db	0
   493  005000  0A                 	db	10
   494                           
   495                           ;initializer for _H12
   496  005001  0000               	dw	0
   497  005003  00                 	db	0
   498  005004  01                 	db	1
   499  005005  0001               	dw	1
   500  005007  0000               	dw	0
   501  005009  01                 	db	1
   502  00500A  80                 	db	128
   503  00500B  02                 	db	2
   504  00500C  01                 	db	1
   505  00500D  00                 	db	0
   506  00500E  00                 	db	0
   507  00500F  0C                 	db	12
   508  005010  0000               	dw	0
   509  005012  00                 	db	0
   510  005013  01                 	db	1
   511  005014  0001               	dw	1
   512  005016  0000               	dw	0
   513  005018  01                 	db	1
   514  005019  80                 	db	128
   515  00501A  0D                 	db	13
   516  00501B  81                 	db	129
   517  00501C  00                 	db	0
   518  00501D  00                 	db	0
   519  00501E  0C                 	db	12
   520                           
   521                           ;initializer for _H24
   522  00501F  0000               	dw	0
   523  005021  41                 	db	65
   524  005022  20                 	db	32
   525  005023  30                 	db	48
   526  005024  31                 	db	49
   527  005025  30                 	db	48
   528  005026  39                 	db	57
   529  005027  31                 	db	49
   530  005028  31                 	db	49
   531  005029  30                 	db	48
   532  00502A  38                 	db	56
   533  00502B  34                 	db	52
   534  00502C  36                 	db	54
   535  00502D  30                 	db	48
   536  00502E  30                 	db	48
   537  00502F  0001               	dw	1
   538  005031  0000               	dw	0
   539  005033  01                 	db	1
   540  005034  80                 	db	128
   541  005035  12                 	db	18
   542  005036  02                 	db	2
   543  005037  00                 	db	0
   544  005038  00                 	db	0
   545  005039  18                 	db	24
   546                           
   547                           ;initializer for _H17
   548  00503A  0000               	dw	0
   549  00503C  00                 	db	0
   550  00503D  01                 	db	1
   551  00503E  00                 	db	0
   552  00503F  01                 	db	1
   553  005040  21                 	db	33
   554  005041  02                 	db	2
   555  005042  01                 	db	1
   556  005043  0001               	dw	1
   557  005045  0000               	dw	0
   558  005047  01                 	db	1
   559  005048  80                 	db	128
   560  005049  0E                 	db	14
   561  00504A  01                 	db	1
   562  00504B  00                 	db	0
   563  00504C  00                 	db	0
   564  00504D  11                 	db	17
   565                           
   566                           ;initializer for _H14
   567  00504E  0000               	dw	0
   568  005050  00                 	db	0
   569  005051  41                 	db	65
   570  005052  11                 	db	17
   571  005053  01                 	db	1
   572  005054  0001               	dw	1
   573  005056  0000               	dw	0
   574  005058  01                 	db	1
   575  005059  80                 	db	128
   576  00505A  04                 	db	4
   577  00505B  01                 	db	1
   578  00505C  00                 	db	0
   579  00505D  00                 	db	0
   580  00505E  0E                 	db	14
   581                           
   582                           ;initializer for _H13
   583  00505F  0000               	dw	0
   584  005061  00                 	db	0
   585  005062  01                 	db	1
   586  005063  21                 	db	33
   587  005064  0001               	dw	1
   588  005066  0000               	dw	0
   589  005068  01                 	db	1
   590  005069  80                 	db	128
   591  00506A  0C                 	db	12
   592  00506B  06                 	db	6
   593  00506C  00                 	db	0
   594  00506D  00                 	db	0
   595  00506E  0D                 	db	13
   596                           
   597                           	psect	idataBANK2
   598  0062A8                     __pidataBANK2:
   599                           	opt callstack 0
   600                           
   601                           ;initializer for _H27
   602  0062A8  0000               	dw	0
   603  0062AA  00                 	db	0
   604  0062AB  00                 	db	0
   605  0062AC  00                 	db	0
   606  0062AD  00                 	db	0
   607  0062AE  00                 	db	0
   608  0062AF  00                 	db	0
   609  0062B0  00                 	db	0
   610  0062B1  00                 	db	0
   611  0062B2  00                 	db	0
   612  0062B3  00                 	db	0
   613  0062B4  00                 	db	0
   614  0062B5  00                 	db	0
   615  0062B6  00                 	db	0
   616  0062B7  00                 	db	0
   617  0062B8  00                 	db	0
   618  0062B9  00                 	db	0
   619  0062BA  00                 	db	0
   620  0062BB  0001               	dw	1
   621  0062BD  0000               	dw	0
   622  0062BF  01                 	db	1
   623  0062C0  80                 	db	128
   624  0062C1  0D                 	db	13
   625  0062C2  81                 	db	129
   626  0062C3  00                 	db	0
   627  0062C4  80                 	db	128
   628  0062C5  1B                 	db	27
   629                           
   630                           	psect	idataBANK3
   631  005D16                     __pidataBANK3:
   632                           	opt callstack 0
   633                           
   634                           ;initializer for _H53
   635  005D16  0000               	dw	0
   636  005D18  00                 	db	0
   637  005D19  00                 	db	0
   638  005D1A  00                 	db	0
   639  005D1B  00                 	db	0
   640  005D1C  00                 	db	0
   641  005D1D  00                 	db	0
   642  005D1E  00                 	db	0
   643  005D1F  00                 	db	0
   644  005D20  00                 	db	0
   645  005D21  00                 	db	0
   646  005D22  00                 	db	0
   647  005D23  00                 	db	0
   648  005D24  00                 	db	0
   649  005D25  00                 	db	0
   650  005D26  00                 	db	0
   651  005D27  00                 	db	0
   652  005D28  00                 	db	0
   653  005D29  00                 	db	0
   654  005D2A  00                 	db	0
   655  005D2B  00                 	db	0
   656  005D2C  00                 	db	0
   657  005D2D  00                 	db	0
   658  005D2E  00                 	db	0
   659  005D2F  00                 	db	0
   660  005D30  00                 	db	0
   661  005D31  00                 	db	0
   662  005D32  00                 	db	0
   663  005D33  00                 	db	0
   664  005D34  00                 	db	0
   665  005D35  00                 	db	0
   666  005D36  00                 	db	0
   667  005D37  00                 	db	0
   668  005D38  00                 	db	0
   669  005D39  00                 	db	0
   670  005D3A  00                 	db	0
   671  005D3B  00                 	db	0
   672  005D3C  00                 	db	0
   673  005D3D  00                 	db	0
   674  005D3E  00                 	db	0
   675  005D3F  46                 	db	70
   676  005D40  01                 	db	1
   677  005D41  41                 	db	65
   678  005D42  00                 	db	0
   679  005D43  0001               	dw	1
   680  005D45  0000               	dw	0
   681  005D47  01                 	db	1
   682  005D48  80                 	db	128
   683  005D49  03                 	db	3
   684  005D4A  8A                 	db	138
   685  005D4B  00                 	db	0
   686  005D4C  00                 	db	0
   687  005D4D  35                 	db	53
   688  0000                     _IVTADL	set	14493
   689  0000                     _IVTADH	set	14494
   690  0000                     _IVTADU	set	14495
   691  0000                     _PIE8bits	set	14744
   692  0000                     _PIR8bits	set	14760
   693  0000                     _SCANPR	set	14839
   694  0000                     _DMA2PR	set	14836
   695  0000                     _DMA1PR	set	14835
   696  0000                     _MAINPR	set	14834
   697  0000                     _ISRPR	set	14833
   698  0000                     _PIE2bits	set	14738
   699  0000                     _PIR2bits	set	14754
   700  0000                     _PIE9bits	set	14745
   701  0000                     _PIR9bits	set	14761
   702  0000                     _PIE6bits	set	14742
   703  0000                     _PIE3bits	set	14739
   704  0000                     _PMD7	set	14791
   705  0000                     _PMD6	set	14790
   706  0000                     _PMD5	set	14789
   707  0000                     _PMD4	set	14788
   708  0000                     _PMD3	set	14787
   709  0000                     _PMD2	set	14786
   710  0000                     _PMD1	set	14785
   711  0000                     _PMD0	set	14784
   712  0000                     _OSCTUNE	set	14814
   713  0000                     _OSCFRQ	set	14815
   714  0000                     _OSCEN	set	14813
   715  0000                     _OSCCON3	set	14811
   716  0000                     _OSCCON1	set	14809
   717  0000                     _IPR8bits	set	14728
   718  0000                     _IPR9bits	set	14729
   719  0000                     _IPR7bits	set	14727
   720  0000                     _IPR5bits	set	14725
   721  0000                     _IPR1bits	set	14721
   722  0000                     _IPR3bits	set	14723
   723  0000                     _IPR6bits	set	14726
   724  0000                     _IPR2bits	set	14722
   725  0000                     _PIE7bits	set	14743
   726  0000                     _PIE5bits	set	14741
   727  0000                     _PIE1bits	set	14737
   728  0000                     _PIR7bits	set	14759
   729  0000                     _PIR5bits	set	14757
   730  0000                     _PIR1bits	set	14753
   731  0000                     _PLLR	set	118496
   732  0000                     _SPI1SDIPPS	set	15071
   733  0000                     _RC6PPS	set	14870
   734  0000                     _RC5PPS	set	14869
   735  0000                     _RA6PPS	set	14854
   736  0000                     _RA5PPS	set	14853
   737  0000                     _RA4PPS	set	14852
   738  0000                     _SPI1SCKPPS	set	15070
   739  0000                     _U1RXPPS	set	15077
   740  0000                     _INT1PPS	set	15041
   741  0000                     _INT2PPS	set	15042
   742  0000                     _INT0PPS	set	15040
   743  0000                     _RC3PPS	set	14867
   744  0000                     _RB6PPS	set	14862
   745  0000                     _U2RXPPS	set	15080
   746  0000                     _SLRCONF	set	14995
   747  0000                     _SLRCONE	set	14979
   748  0000                     _SLRCOND	set	14963
   749  0000                     _SLRCONC	set	14947
   750  0000                     _SLRCONB	set	14931
   751  0000                     _SLRCONA	set	14915
   752  0000                     _ODCOND	set	14962
   753  0000                     _ODCONC	set	14946
   754  0000                     _ODCONB	set	14930
   755  0000                     _ODCONA	set	14914
   756  0000                     _ODCONF	set	14994
   757  0000                     _ODCONE	set	14978
   758  0000                     _WPUC	set	14945
   759  0000                     _WPUA	set	14913
   760  0000                     _WPUB	set	14929
   761  0000                     _WPUE	set	14977
   762  0000                     _WPUF	set	14993
   763  0000                     _WPUD	set	14961
   764  0000                     _ANSELA	set	14912
   765  0000                     _ANSELF	set	14992
   766  0000                     _ANSELE	set	14976
   767  0000                     _ANSELB	set	14928
   768  0000                     _ANSELC	set	14944
   769  0000                     _ANSELD	set	14960
   770  0000                     _DMA1SSA	set	15353
   771  0000                     _DMA1DSZ	set	15342
   772  0000                     _DMA1SSZ	set	15351
   773  0000                     _DMA1DSA	set	15344
   774  0000                     _DMA1CON0bits	set	15356
   775  0000                     _DMA1CON1bits	set	15357
   776  0000                     _DMA1CON0	set	15356
   777  0000                     _DMA1AIRQ	set	15358
   778  0000                     _DMA1SIRQ	set	15359
   779  0000                     _DMA1CON1	set	15357
   780  0000                     _CLC1CON	set	15476
   781  0000                     _CLC1GLS3	set	15485
   782  0000                     _CLC1GLS2	set	15484
   783  0000                     _CLC1GLS1	set	15483
   784  0000                     _CLC1GLS0	set	15482
   785  0000                     _CLC1SEL3	set	15481
   786  0000                     _CLC1SEL2	set	15480
   787  0000                     _CLC1SEL1	set	15479
   788  0000                     _CLC1SEL0	set	15478
   789  0000                     _CLC1POL	set	15477
   790  0000                     _CLKRCON	set	15589
   791  0000                     _CLKRCLK	set	15590
   792  0000                     _MD1CARL	set	15613
   793  0000                     _MD1CARH	set	15614
   794  0000                     _MD1SRC	set	15612
   795  0000                     _MD1CON1bits	set	15611
   796  0000                     _MD1CON0bits	set	15610
   797  0000                     _SPI1INTFbits	set	15642
   798  0000                     _SPI1RXB	set	15632
   799  0000                     _SPI1TXB	set	15633
   800  0000                     _SPI1TCNTL	set	15634
   801  0000                     _SPI1CON0	set	15636
   802  0000                     _SPI1CLK	set	15644
   803  0000                     _SPI1BAUD	set	15641
   804  0000                     _SPI1CON2	set	15638
   805  0000                     _SPI1CON1	set	15637
   806  0000                     _U2RXB	set	15824
   807  0000                     _U2TXB	set	15826
   808  0000                     _U2ERRIE	set	15842
   809  0000                     _U2ERRIR	set	15841
   810  0000                     _U2UIR	set	15840
   811  0000                     _U2FIFO	set	15839
   812  0000                     _U2BRGH	set	15838
   813  0000                     _U2BRGL	set	15837
   814  0000                     _U2CON2	set	15836
   815  0000                     _U2CON1	set	15835
   816  0000                     _U2CON0	set	15834
   817  0000                     _U2P3L	set	15832
   818  0000                     _U2P2L	set	15830
   819  0000                     _U2P1L	set	15828
   820  0000                     _U1RXB	set	15848
   821  0000                     _U1TXB	set	15850
   822  0000                     _U1ERRIE	set	15866
   823  0000                     _U1ERRIR	set	15865
   824  0000                     _U1UIR	set	15864
   825  0000                     _U1FIFO	set	15863
   826  0000                     _U1BRGH	set	15862
   827  0000                     _U1BRGL	set	15861
   828  0000                     _U1CON2	set	15860
   829  0000                     _U1CON1	set	15859
   830  0000                     _U1CON0	set	15858
   831  0000                     _U1P3H	set	15857
   832  0000                     _U1P3L	set	15856
   833  0000                     _U1P2H	set	15855
   834  0000                     _U1P2L	set	15854
   835  0000                     _U1P1H	set	15853
   836  0000                     _U1P1L	set	15852
   837  0000                     _ADCON0	set	16120
   838  0000                     _ADCLK	set	16127
   839  0000                     _ADACT	set	16126
   840  0000                     _ADREF	set	16125
   841  0000                     _ADSTAT	set	16124
   842  0000                     _ADCON3	set	16123
   843  0000                     _ADCON2	set	16122
   844  0000                     _ADCON1	set	16121
   845  0000                     _ADPREH	set	16119
   846  0000                     _ADPREL	set	16118
   847  0000                     _ADCAP	set	16117
   848  0000                     _ADACQH	set	16116
   849  0000                     _ADACQL	set	16115
   850  0000                     _ADPCH	set	16113
   851  0000                     _ADRPT	set	16108
   852  0000                     _ADACCU	set	16106
   853  0000                     _ADSTPTH	set	16101
   854  0000                     _ADSTPTL	set	16100
   855  0000                     _ADUTHH	set	16097
   856  0000                     _ADUTHL	set	16096
   857  0000                     _ADLTHH	set	16095
   858  0000                     _ADLTHL	set	16094
   859  0000                     _NCO1CONbits	set	16190
   860  0000                     _NCO1INCL	set	16187
   861  0000                     _NCO1INCH	set	16188
   862  0000                     _NCO1INCU	set	16189
   863  0000                     _NCO1ACCL	set	16184
   864  0000                     _NCO1ACCH	set	16185
   865  0000                     _NCO1ACCU	set	16186
   866  0000                     _NCO1CLK	set	16191
   867  0000                     _NCO1CON	set	16190
   868  0000                     _LATCbits	set	16316
   869  0000                     _LATDbits	set	16317
   870  0000                     _PORTBbits	set	16331
   871  0000                     _LATEbits	set	16318
   872  0000                     _T5CONbits	set	16282
   873  0000                     _T5CON	set	16282
   874  0000                     _TMR5L	set	16280
   875  0000                     _TMR5H	set	16281
   876  0000                     _T5CLK	set	16285
   877  0000                     _T5GATE	set	16284
   878  0000                     _T5GCON	set	16283
   879  0000                     _T6CON	set	16276
   880  0000                     _T6TMR	set	16274
   881  0000                     _T6PR	set	16275
   882  0000                     _T6RST	set	16279
   883  0000                     _T6HLT	set	16277
   884  0000                     _T6CLKCON	set	16278
   885  0000                     _TRISD	set	16325
   886  0000                     _TRISC	set	16324
   887  0000                     _TRISB	set	16323
   888  0000                     _TRISA	set	16322
   889  0000                     _TRISF	set	16327
   890  0000                     _TRISE	set	16326
   891  0000                     _LATC	set	16316
   892  0000                     _LATB	set	16315
   893  0000                     _LATF	set	16319
   894  0000                     _LATA	set	16314
   895  0000                     _LATD	set	16317
   896  0000                     _LATE	set	16318
   897  0000                     _IVTLOCKbits	set	16340
   898  0000                     _IVTLOCK	set	16340
   899  0000                     _INTCON0bits	set	16338
   900  0000                     _GIE	set	130711
   901                           
   902                           	psect	smallconst
   903  002000                     __psmallconst:
   904                           	opt callstack 0
   905  002000  00                 	db	0
   906  002001                     STR_9:
   907  002001  45                 	db	69	;'E'
   908  002002  20                 	db	32
   909  002003  52                 	db	82	;'R'
   910  002004  25                 	db	37
   911  002005  64                 	db	100	;'d'
   912  002006  20                 	db	32
   913  002007  54                 	db	84	;'T'
   914  002008  25                 	db	37
   915  002009  64                 	db	100	;'d'
   916  00200A  20                 	db	32
   917  00200B  45                 	db	69	;'E'
   918  00200C  25                 	db	37
   919  00200D  64                 	db	100	;'d'
   920  00200E  20                 	db	32
   921  00200F  41                 	db	65	;'A'
   922  002010  25                 	db	37
   923  002011  64                 	db	100	;'d'
   924  002012  20                 	db	32
   925  002013  47                 	db	71	;'G'
   926  002014  25                 	db	37
   927  002015  64                 	db	100	;'d'
   928  002016  23                 	db	35
   929  002017  00                 	db	0
   930  002018                     STR_11:
   931  002018  4C                 	db	76	;'L'
   932  002019  4F                 	db	79	;'O'
   933  00201A  47                 	db	71	;'G'
   934  00201B  20                 	db	32
   935  00201C  4D                 	db	77	;'M'
   936  00201D  4F                 	db	79	;'O'
   937  00201E  44                 	db	68	;'D'
   938  00201F  45                 	db	69	;'E'
   939  002020  20                 	db	32
   940  002021  25                 	db	37
   941  002022  64                 	db	100	;'d'
   942  002023  20                 	db	32
   943  002024  25                 	db	37
   944  002025  64                 	db	100	;'d'
   945  002026  20                 	db	32
   946  002027  20                 	db	32
   947  002028  20                 	db	32
   948  002029  20                 	db	32
   949  00202A  20                 	db	32
   950  00202B  23                 	db	35
   951  00202C  00                 	db	0
   952  00202D                     STR_15:
   953  00202D  20                 	db	32
   954  00202E  52                 	db	82	;'R'
   955  00202F  25                 	db	37
   956  002030  64                 	db	100	;'d'
   957  002031  20                 	db	32
   958  002032  54                 	db	84	;'T'
   959  002033  25                 	db	37
   960  002034  64                 	db	100	;'d'
   961  002035  20                 	db	32
   962  002036  46                 	db	70	;'F'
   963  002037  52                 	db	82	;'R'
   964  002038  25                 	db	37
   965  002039  64                 	db	100	;'d'
   966  00203A  20                 	db	32
   967  00203B  46                 	db	70	;'F'
   968  00203C  53                 	db	83	;'S'
   969  00203D  25                 	db	37
   970  00203E  64                 	db	100	;'d'
   971  00203F  20                 	db	32
   972  002040  23                 	db	35
   973  002041  00                 	db	0
   974  002042                     STR_10:
   975  002042  48                 	db	72	;'H'
   976  002043  4F                 	db	79	;'O'
   977  002044  53                 	db	83	;'S'
   978  002045  54                 	db	84	;'T'
   979  002046  20                 	db	32
   980  002047  4D                 	db	77	;'M'
   981  002048  4F                 	db	79	;'O'
   982  002049  44                 	db	68	;'D'
   983  00204A  45                 	db	69	;'E'
   984  00204B  20                 	db	32
   985  00204C  25                 	db	37
   986  00204D  6C                 	db	108	;'l'
   987  00204E  64                 	db	100	;'d'
   988  00204F  20                 	db	32
   989  002050  25                 	db	37
   990  002051  64                 	db	100	;'d'
   991  002052  20                 	db	32
   992  002053  20                 	db	32
   993  002054  23                 	db	35
   994  002055  00                 	db	0
   995  002056                     STR_5:
   996  002056  20                 	db	32
   997  002057  48                 	db	72	;'H'
   998  002058  4F                 	db	79	;'O'
   999  002059  53                 	db	83	;'S'
  1000  00205A  54                 	db	84	;'T'
  1001  00205B  20                 	db	32
  1002  00205C  4D                 	db	77	;'M'
  1003  00205D  4F                 	db	79	;'O'
  1004  00205E  44                 	db	68	;'D'
  1005  00205F  45                 	db	69	;'E'
  1006  002060  20                 	db	32
  1007  002061  25                 	db	37
  1008  002062  6C                 	db	108	;'l'
  1009  002063  64                 	db	100	;'d'
  1010  002064  20                 	db	32
  1011  002065  20                 	db	32
  1012  002066  20                 	db	32
  1013  002067  23                 	db	35
  1014  002068  00                 	db	0
  1015  002069                     STR_12:
  1016  002069  20                 	db	32
  1017  00206A  53                 	db	83	;'S'
  1018  00206B  25                 	db	37
  1019  00206C  64                 	db	100	;'d'
  1020  00206D  46                 	db	70	;'F'
  1021  00206E  25                 	db	37
  1022  00206F  64                 	db	100	;'d'
  1023  002070  20                 	db	32
  1024  002071  23                 	db	35
  1025  002072  25                 	db	37
  1026  002073  6C                 	db	108	;'l'
  1027  002074  64                 	db	100	;'d'
  1028  002075  20                 	db	32
  1029  002076  20                 	db	32
  1030  002077  20                 	db	32
  1031  002078  20                 	db	32
  1032  002079  00                 	db	0
  1033  00207A                     STR_1:
  1034  00207A  20                 	db	32
  1035  00207B  52                 	db	82	;'R'
  1036  00207C  56                 	db	86	;'V'
  1037  00207D  49                 	db	73	;'I'
  1038  00207E  20                 	db	32
  1039  00207F  48                 	db	72	;'H'
  1040  002080  4F                 	db	79	;'O'
  1041  002081  53                 	db	83	;'S'
  1042  002082  54                 	db	84	;'T'
  1043  002083  20                 	db	32
  1044  002084  54                 	db	84	;'T'
  1045  002085  45                 	db	69	;'E'
  1046  002086  53                 	db	83	;'S'
  1047  002087  54                 	db	84	;'T'
  1048  002088  45                 	db	69	;'E'
  1049  002089  52                 	db	82	;'R'
  1050  00208A  00                 	db	0
  1051  00208B                     STR_4:
  1052  00208B  20                 	db	32
  1053  00208C  46                 	db	70	;'F'
  1054  00208D  47                 	db	71	;'G'
  1055  00208E  42                 	db	66	;'B'
  1056  00208F  40                 	db	64	;'@'
  1057  002090  4D                 	db	77	;'M'
  1058  002091  43                 	db	67	;'C'
  1059  002092  48                 	db	72	;'H'
  1060  002093  50                 	db	80	;'P'
  1061  002094  20                 	db	32
  1062  002095  46                 	db	70	;'F'
  1063  002096  41                 	db	65	;'A'
  1064  002097  42                 	db	66	;'B'
  1065  002098  34                 	db	52	;'4'
  1066  002099  00                 	db	0
  1067  00209A                     STR_6:
  1068  00209A  20                 	db	32
  1069  00209B  53                 	db	83	;'S'
  1070  00209C  25                 	db	37
  1071  00209D  64                 	db	100	;'d'
  1072  00209E  46                 	db	70	;'F'
  1073  00209F  25                 	db	37
  1074  0020A0  64                 	db	100	;'d'
  1075  0020A1  20                 	db	32
  1076  0020A2  23                 	db	35
  1077  0020A3  20                 	db	32
  1078  0020A4  20                 	db	32
  1079  0020A5  20                 	db	32
  1080  0020A6  20                 	db	32
  1081  0020A7  00                 	db	0
  1082  0020A8                     STR_2:
  1083  0020A8  20                 	db	32
  1084  0020A9  56                 	db	86	;'V'
  1085  0020AA  65                 	db	101	;'e'
  1086  0020AB  72                 	db	114	;'r'
  1087  0020AC  73                 	db	115	;'s'
  1088  0020AD  69                 	db	105	;'i'
  1089  0020AE  6F                 	db	111	;'o'
  1090  0020AF  6E                 	db	110	;'n'
  1091  0020B0  20                 	db	32
  1092  0020B1  25                 	db	37
  1093  0020B2  73                 	db	115	;'s'
  1094  0020B3  00                 	db	0
  1095  0020B4                     STR_8:
  1096  0020B4  20                 	db	32
  1097  0020B5  4F                 	db	79	;'O'
  1098  0020B6  4B                 	db	75	;'K'
  1099  0020B7  20                 	db	32
  1100  0020B8  23                 	db	35
  1101  0020B9  00                 	db	0
  1102  0020BA                     STR_7:
  1103  0020BA  20                 	db	32
  1104  0020BB  4F                 	db	79	;'O'
  1105  0020BC  4B                 	db	75	;'K'
  1106  0020BD  51                 	db	81	;'Q'
  1107  0020BE  23                 	db	35
  1108  0020BF  00                 	db	0
  1109  0020C0                     STR_3:
  1110  0020C0  30                 	db	48	;'0'
  1111  0020C1  2E                 	db	46
  1112  0020C2  38                 	db	56	;'8'
  1113  0020C3  30                 	db	48	;'0'
  1114  0020C4  42                 	db	66	;'B'
  1115  0020C5  00                 	db	0
  1116  0020C6                     STR_19:
  1117  0020C6  6C                 	db	108	;'l'
  1118  0020C7  64                 	db	100	;'d'
  1119  0020C8  00                 	db	0
  1120  0020C9                     STR_23:
  1121  0020C9  6C                 	db	108	;'l'
  1122  0020CA  69                 	db	105	;'i'
  1123  0020CB  00                 	db	0
  1124  0020CC                     STR_17:
  1125  0020CC  25                 	db	37
  1126  0020CD  63                 	db	99	;'c'
  1127  0020CE  00                 	db	0
  1128  0000                     
  1129                           ; #config settings
  1130  0020CF  00                 	db	0	; dummy byte at the end
  1131  0000                     
  1132                           	psect	cinit
  1133  004D00                     __pcinit:
  1134                           	opt callstack 0
  1135  004D00                     start_initialization:
  1136                           	opt callstack 0
  1137  004D00                     __initialization:
  1138                           	opt callstack 0
  1139                           
  1140                           ; Initialize objects allocated to BANK3 (56 bytes)
  1141                           ; load TBLPTR registers with __pidataBANK3
  1142  004D00  0E16               	movlw	low __pidataBANK3
  1143  004D02  6EF6               	movwf	tblptrl,c
  1144  004D04  0E5D               	movlw	high __pidataBANK3
  1145  004D06  6EF7               	movwf	tblptrh,c
  1146  004D08  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1147  004D0A  6EF8               	movwf	tblptru,c
  1148  004D0C  EE00  F3C6         	lfsr	0,__pdataBANK3
  1149  004D10  EE20 F038          	lfsr	2,56
  1150  004D14                     copy_data0:
  1151  004D14  0009               	tblrd		*+
  1152  004D16  006F FFD7 FFEE     	movff	tablat,postinc0
  1153  004D1C  50DD               	movf	postdec2,w,c
  1154  004D1E  50D9               	movf	fsr2l,w,c
  1155  004D20  E1F9               	bnz	copy_data0
  1156                           
  1157                           ; Initialize objects allocated to BANK2 (30 bytes)
  1158                           ; load TBLPTR registers with __pidataBANK2
  1159  004D22  0EA8               	movlw	low __pidataBANK2
  1160  004D24  6EF6               	movwf	tblptrl,c
  1161  004D26  0E62               	movlw	high __pidataBANK2
  1162  004D28  6EF7               	movwf	tblptrh,c
  1163  004D2A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1164  004D2C  6EF8               	movwf	tblptru,c
  1165  004D2E  EE00  F2C0         	lfsr	0,__pdataBANK2
  1166  004D32  EE20 F01E          	lfsr	2,30
  1167  004D36                     copy_data1:
  1168  004D36  0009               	tblrd		*+
  1169  004D38  006F FFD7 FFEE     	movff	tablat,postinc0
  1170  004D3E  50DD               	movf	postdec2,w,c
  1171  004D40  50D9               	movf	fsr2l,w,c
  1172  004D42  E1F9               	bnz	copy_data1
  1173                           
  1174                           ; Initialize objects allocated to BANK1 (201 bytes)
  1175                           ; load TBLPTR registers with __pidataBANK1
  1176  004D44  0EA6               	movlw	low __pidataBANK1
  1177  004D46  6EF6               	movwf	tblptrl,c
  1178  004D48  0E4F               	movlw	high __pidataBANK1
  1179  004D4A  6EF7               	movwf	tblptrh,c
  1180  004D4C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1181  004D4E  6EF8               	movwf	tblptru,c
  1182  004D50  EE00  F100         	lfsr	0,__pdataBANK1
  1183  004D54  EE20 F0C9          	lfsr	2,201
  1184  004D58                     copy_data2:
  1185  004D58  0009               	tblrd		*+
  1186  004D5A  006F FFD7 FFEE     	movff	tablat,postinc0
  1187  004D60  50DD               	movf	postdec2,w,c
  1188  004D62  50D9               	movf	fsr2l,w,c
  1189  004D64  E1F9               	bnz	copy_data2
  1190                           
  1191                           ; Initialize objects allocated to BANK0 (100 bytes)
  1192                           ; load TBLPTR registers with __pidataBANK0
  1193  004D66  0E86               	movlw	low __pidataBANK0
  1194  004D68  6EF6               	movwf	tblptrl,c
  1195  004D6A  0E57               	movlw	high __pidataBANK0
  1196  004D6C  6EF7               	movwf	tblptrh,c
  1197  004D6E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1198  004D70  6EF8               	movwf	tblptru,c
  1199  004D72  EE00  F060         	lfsr	0,__pdataBANK0
  1200  004D76  EE20 F064          	lfsr	2,100
  1201  004D7A                     copy_data3:
  1202  004D7A  0009               	tblrd		*+
  1203  004D7C  006F FFD7 FFEE     	movff	tablat,postinc0
  1204  004D82  50DD               	movf	postdec2,w,c
  1205  004D84  50D9               	movf	fsr2l,w,c
  1206  004D86  E1F9               	bnz	copy_data3
  1207                           
  1208                           ; Initialize objects allocated to COMRAM (1 bytes)
  1209                           ; load TBLPTR registers with __pidataCOMRAM
  1210  004D88  0E7E               	movlw	low __pidataCOMRAM
  1211  004D8A  6EF6               	movwf	tblptrl,c
  1212  004D8C  0E64               	movlw	high __pidataCOMRAM
  1213  004D8E  6EF7               	movwf	tblptrh,c
  1214  004D90  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1215  004D92  6EF8               	movwf	tblptru,c
  1216  004D94  0009               	tblrd		*+	;fetch initializer
  1217  004D96  006F FFD4  F05E    	movff	tablat,__pdataCOMRAM
  1218                           
  1219                           ; Clear objects allocated to BANK3 (198 bytes)
  1220  004D9C  EE00  F300         	lfsr	0,__pbssBANK3
  1221  004DA0  0EC6               	movlw	198
  1222  004DA2                     clear_0:
  1223  004DA2  6AEE               	clrf	postinc0,c
  1224  004DA4  06E8               	decf	wreg,f,c
  1225  004DA6  E1FD               	bnz	clear_0
  1226                           
  1227                           ; Clear objects allocated to BANK2 (192 bytes)
  1228  004DA8  EE00  F200         	lfsr	0,__pbssBANK2
  1229  004DAC  0EC0               	movlw	192
  1230  004DAE                     clear_1:
  1231  004DAE  6AEE               	clrf	postinc0,c
  1232  004DB0  06E8               	decf	wreg,f,c
  1233  004DB2  E1FD               	bnz	clear_1
  1234                           
  1235                           ; Clear objects allocated to BANK1 (32 bytes)
  1236  004DB4  EE00  F1C9         	lfsr	0,__pbssBANK1
  1237  004DB8  0E20               	movlw	32
  1238  004DBA                     clear_2:
  1239  004DBA  6AEE               	clrf	postinc0,c
  1240  004DBC  06E8               	decf	wreg,f,c
  1241  004DBE  E1FD               	bnz	clear_2
  1242                           
  1243                           ; Clear objects allocated to BANK0 (58 bytes)
  1244  004DC0  EE00  F0C4         	lfsr	0,__pbssBANK0
  1245  004DC4  0E3A               	movlw	58
  1246  004DC6                     clear_3:
  1247  004DC6  6AEE               	clrf	postinc0,c
  1248  004DC8  06E8               	decf	wreg,f,c
  1249  004DCA  E1FD               	bnz	clear_3
  1250                           
  1251                           ; Clear objects allocated to COMRAM (59 bytes)
  1252  004DCC  EE00  F001         	lfsr	0,__pbssCOMRAM
  1253  004DD0  0E3B               	movlw	59
  1254  004DD2                     clear_4:
  1255  004DD2  6AEE               	clrf	postinc0,c
  1256  004DD4  06E8               	decf	wreg,f,c
  1257  004DD6  E1FD               	bnz	clear_4
  1258                           
  1259                           ;
  1260                           ; Setup IVTBASE
  1261                           ;
  1262  004DD8  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1263  004DDA  6ED5               	movwf	213,c
  1264  004DDC  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1265  004DDE  6ED6               	movwf	214,c
  1266  004DE0  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1267  004DE2  6ED7               	movwf	215,c
  1268  004DE4                     end_of_initialization:
  1269                           	opt callstack 0
  1270  004DE4                     __end_of__initialization:
  1271                           	opt callstack 0
  1272  004DE4  0100               	movlb	0
  1273  004DE6  EF68  F010         	goto	_main	;jump to C main() function
  1274                           
  1275                           	psect	bssCOMRAM
  1276  000001                     __pbssCOMRAM:
  1277                           	opt callstack 0
  1278  000001                     secs_II_message@block:
  1279                           	opt callstack 0
  1280  000001                     	ds	7
  1281  000008                     _ADCC_ADI_InterruptHandler:
  1282                           	opt callstack 0
  1283  000008                     	ds	3
  1284  00000B                     _UART1_TxInterruptHandler:
  1285                           	opt callstack 0
  1286  00000B                     	ds	3
  1287  00000E                     _UART1_RxInterruptHandler:
  1288                           	opt callstack 0
  1289  00000E                     	ds	3
  1290  000011                     _UART2_TxInterruptHandler:
  1291                           	opt callstack 0
  1292  000011                     	ds	3
  1293  000014                     _UART2_RxInterruptHandler:
  1294                           	opt callstack 0
  1295  000014                     	ds	3
  1296  000017                     _INT2_InterruptHandler:
  1297                           	opt callstack 0
  1298  000017                     	ds	3
  1299  00001A                     _INT1_InterruptHandler:
  1300                           	opt callstack 0
  1301  00001A                     	ds	3
  1302  00001D                     _INT0_InterruptHandler:
  1303                           	opt callstack 0
  1304  00001D                     	ds	3
  1305  000020                     _width:
  1306                           	opt callstack 0
  1307  000020                     	ds	2
  1308  000022                     _prec:
  1309                           	opt callstack 0
  1310  000022                     	ds	2
  1311  000024                     _flags:
  1312                           	opt callstack 0
  1313  000024                     	ds	2
  1314  000026                     TMR5_ISR@CountCallBack:
  1315                           	opt callstack 0
  1316  000026                     	ds	2
  1317  000028                     _timer5ReloadVal:
  1318                           	opt callstack 0
  1319  000028                     	ds	2
  1320  00002A                     secs_gem_state@block:
  1321                           	opt callstack 0
  1322  00002A                     	ds	1
  1323  00002B                     t_protocol@requeue:
  1324                           	opt callstack 0
  1325  00002B                     	ds	1
  1326  00002C                     t_protocol@retry:
  1327                           	opt callstack 0
  1328  00002C                     	ds	1
  1329  00002D                     r_protocol@rxData_l:
  1330                           	opt callstack 0
  1331  00002D                     	ds	1
  1332  00002E                     m_protocol@rxData_l:
  1333                           	opt callstack 0
  1334  00002E                     	ds	1
  1335  00002F                     _mode_sw:
  1336                           	opt callstack 0
  1337  00002F                     	ds	1
  1338  000030                     _uart2RxCount:
  1339                           	opt callstack 0
  1340  000030                     	ds	1
  1341  000031                     _uart2RxTail:
  1342                           	opt callstack 0
  1343  000031                     	ds	1
  1344  000032                     _uart2RxHead:
  1345                           	opt callstack 0
  1346  000032                     	ds	1
  1347  000033                     _uart2TxBufferRemaining:
  1348                           	opt callstack 0
  1349  000033                     	ds	1
  1350  000034                     _uart2TxTail:
  1351                           	opt callstack 0
  1352  000034                     	ds	1
  1353  000035                     _uart2TxHead:
  1354                           	opt callstack 0
  1355  000035                     	ds	1
  1356  000036                     _uart1RxCount:
  1357                           	opt callstack 0
  1358  000036                     	ds	1
  1359  000037                     _uart1RxTail:
  1360                           	opt callstack 0
  1361  000037                     	ds	1
  1362  000038                     _uart1RxHead:
  1363                           	opt callstack 0
  1364  000038                     	ds	1
  1365  000039                     _uart1TxBufferRemaining:
  1366                           	opt callstack 0
  1367  000039                     	ds	1
  1368  00003A                     _uart1TxTail:
  1369                           	opt callstack 0
  1370  00003A                     	ds	1
  1371  00003B                     _uart1TxHead:
  1372                           	opt callstack 0
  1373  00003B                     	ds	1
  1374                           
  1375                           	psect	dataCOMRAM
  1376  00005E                     __pdataCOMRAM:
  1377                           	opt callstack 0
  1378  00005E                     r_protocol@retry:
  1379                           	opt callstack 0
  1380  00005E                     	ds	1
  1381                           
  1382                           	psect	bssBANK0
  1383  0000C4                     __pbssBANK0:
  1384                           	opt callstack 0
  1385  0000C4                     _r_block:
  1386                           	opt callstack 0
  1387  0000C4                     	ds	13
  1388  0000D1                     _spi_link:
  1389                           	opt callstack 0
  1390  0000D1                     	ds	12
  1391  0000DD                     _tickCount:
  1392                           	opt callstack 0
  1393  0000DD                     	ds	12
  1394  0000E9                     t_protocol@block:
  1395                           	opt callstack 0
  1396  0000E9                     	ds	7
  1397  0000F0                     wdtdelay@dcount:
  1398                           	opt callstack 0
  1399  0000F0                     	ds	4
  1400  0000F4                     _TMR5_InterruptHandler:
  1401                           	opt callstack 0
  1402  0000F4                     	ds	3
  1403  0000F7                     _TMR6_InterruptHandler:
  1404                           	opt callstack 0
  1405  0000F7                     	ds	3
  1406  0000FA                     _nout:
  1407                           	opt callstack 0
  1408  0000FA                     	ds	2
  1409  0000FC                     run_checksum@sum:
  1410                           	opt callstack 0
  1411  0000FC                     	ds	2
  1412                           
  1413                           	psect	dataBANK0
  1414  000060                     __pdataBANK0:
  1415                           	opt callstack 0
  1416  000060                     stoa@F1144:
  1417                           	opt callstack 0
  1418  000060                     	ds	7
  1419  000067                     _V:
  1420                           	opt callstack 0
  1421  000067                     	ds	93
  1422                           
  1423                           	psect	bssBANK1
  1424  0001C9                     __pbssBANK1:
  1425                           	opt callstack 0
  1426  0001C9                     _dbuf:
  1427                           	opt callstack 0
  1428  0001C9                     	ds	32
  1429                           
  1430                           	psect	dataBANK1
  1431  000100                     __pdataBANK1:
  1432                           	opt callstack 0
  1433  000100                     _H10:
  1434                           	opt callstack 0
  1435  000100                     	ds	91
  1436  00015B                     _H12:
  1437                           	opt callstack 0
  1438  00015B                     	ds	30
  1439  000179                     _H24:
  1440                           	opt callstack 0
  1441  000179                     	ds	27
  1442  000194                     _H17:
  1443                           	opt callstack 0
  1444  000194                     	ds	20
  1445  0001A8                     _H14:
  1446                           	opt callstack 0
  1447  0001A8                     	ds	17
  1448  0001B9                     _H13:
  1449                           	opt callstack 0
  1450  0001B9                     	ds	16
  1451                           
  1452                           	psect	bssBANK2
  1453  000200                     __pbssBANK2:
  1454                           	opt callstack 0
  1455  000200                     _uart2RxBuffer:
  1456                           	opt callstack 0
  1457  000200                     	ds	64
  1458  000240                     _uart1RxBuffer:
  1459                           	opt callstack 0
  1460  000240                     	ds	64
  1461  000280                     _uart1TxBuffer:
  1462                           	opt callstack 0
  1463  000280                     	ds	64
  1464                           
  1465                           	psect	dataBANK2
  1466  0002C0                     __pdataBANK2:
  1467                           	opt callstack 0
  1468  0002C0                     _H27:
  1469                           	opt callstack 0
  1470  0002C0                     	ds	30
  1471                           
  1472                           	psect	bssBANK3
  1473  000300                     __pbssBANK3:
  1474                           	opt callstack 0
  1475  000300                     _uart2TxBuffer:
  1476                           	opt callstack 0
  1477  000300                     	ds	64
  1478  000340                     _ring_buf2:
  1479                           	opt callstack 0
  1480  000340                     	ds	67
  1481  000383                     _ring_buf1:
  1482                           	opt callstack 0
  1483  000383                     	ds	67
  1484                           
  1485                           	psect	dataBANK3
  1486  0003C6                     __pdataBANK3:
  1487                           	opt callstack 0
  1488  0003C6                     _H53:
  1489                           	opt callstack 0
  1490  0003C6                     	ds	56
  1491                           
  1492                           	psect	cstackCOMRAM
  1493  00005C                     __pcstackCOMRAM:
  1494                           	opt callstack 0
  1495  00005C                     ??_TMR6_ISR:
  1496  00005C                     
  1497                           ; 1 bytes @ 0x0
  1498  00005C                     	ds	1
  1499  00005D                     ??_TMR5_ISR:
  1500                           
  1501                           ; 1 bytes @ 0x1
  1502  00005D                     	ds	1
  1503                           
  1504 ;;
  1505 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1506 ;;
  1507 ;; *************** function _main *****************
  1508 ;; Defined at:
  1509 ;;		line 310 in file "main.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;		None
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  mode            1  [STACK] enum E16897
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1  [STACK] void 
  1516 ;; Registers used:
  1517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 3F/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1527 ;;Total ram usage:        0 bytes
  1528 ;; Hardware stack levels required when called:   14
  1529 ;; This function calls:
  1530 ;;		_SYSTEM_Initialize
  1531 ;;		_UART1_put_buffer
  1532 ;;		_UART2_put_buffer
  1533 ;;		_WaitMs
  1534 ;;		_eaDogM_WriteCommand
  1535 ;;		_eaDogM_WriteStringAtPos
  1536 ;;		_init_display
  1537 ;;		_m_protocol
  1538 ;;		_r_protocol
  1539 ;;		_sprintf
  1540 ;;		_t_protocol
  1541 ;;		_wait_lcd_done
  1542 ;; This function is called by:
  1543 ;;		Startup code after reset
  1544 ;; This function uses a reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text0
  1548  0020D0                     __ptext0:
  1549                           	opt callstack 0
  1550  0020D0                     _main:
  1551                           	opt callstack 0
  1552                           
  1553                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1554  0020D0  52E6               	movf	postinc1,f,c
  1555                           
  1556                           ;main.c: 312:  UI_STATES mode;;main.c: 315:  SYSTEM_Initialize();
  1557                           
  1558                           ;incstack = 0
  1559  0020D2  EC90  F02D         	call	_SYSTEM_Initialize	;wreg free
  1560                           
  1561                           ; BSR set to: 60
  1562                           ;main.c: 318:  (INTCON0bits.GIEH = 1);
  1563  0020D6  8ED2               	bsf	16338,7,c	;volatile
  1564                           
  1565                           ; BSR set to: 60
  1566                           ;main.c: 321:  (INTCON0bits.GIEL = 1);
  1567  0020D8  8CD2               	bsf	16338,6,c	;volatile
  1568                           
  1569                           ; BSR set to: 60
  1570                           ;main.c: 323:  V.ui_state = UI_STATE_INIT;
  1571  0020DA  0100               	movlb	0	; () banked
  1572  0020DC  6B68               	clrf	(_V+1)& (0+255),b
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;main.c: 328:  WaitMs(300);
  1576  0020DE  0E2C               	movlw	44
  1577  0020E0  6EE6               	movwf	postinc1,c
  1578  0020E2  0E01               	movlw	1
  1579  0020E4  6EE6               	movwf	postinc1,c
  1580  0020E6  EC29  F02F         	call	_WaitMs	;wreg free
  1581                           
  1582                           ;main.c: 329:  if (PORTBbits.RB0) {
  1583  0020EA  A0CB               	btfss	16331,0,c	;volatile
  1584  0020EC  D004               	goto	l9123
  1585                           
  1586                           ;main.c: 330:   mode = UI_STATE_HOST;
  1587                           ;stkvar	_mode @ sp[(-1)+0]
  1588  0020EE  0EFF               	movlw	-1
  1589  0020F0  6AE3               	clrf	plusw1,c
  1590  0020F2  2AE3               	incf	plusw1,f,c
  1591                           
  1592                           ;main.c: 331:  } else {
  1593  0020F4  D004               	goto	l9125
  1594  0020F6                     l9123:
  1595                           
  1596                           ;main.c: 332:   mode = UI_STATE_LOG;
  1597                           ;stkvar	_mode @ sp[(-1)+0]
  1598  0020F6  0EFF               	movlw	-1
  1599  0020F8  6AE3               	clrf	plusw1,c
  1600  0020FA  80E3               	bsf	plusw1,0,c
  1601  0020FC  82E3               	bsf	plusw1,1,c	;indir
  1602  0020FE                     l9125:
  1603                           
  1604                           ;main.c: 335:  if (mode == UI_STATE_HOST) {
  1605                           ;stkvar	_mode @ sp[(-1)+0]
  1606  0020FE  0EFF               	movlw	-1
  1607  002100  04E3               	decf	plusw1,w,c
  1608  002102  A4D8               	btfss	status,2,c
  1609  002104  D003               	goto	l1226
  1610                           
  1611                           ;main.c: 336:   do { LATDbits.LATD0 = 1; } while(0);
  1612  002106  80BD               	bsf	16317,0,c	;volatile
  1613                           
  1614                           ;main.c: 337:   do { LATDbits.LATD1 = 1; } while(0);
  1615  002108  82BD               	bsf	16317,1,c	;volatile
  1616  00210A  D235               	goto	l9299
  1617  00210C                     l1226:
  1618  00210C  90BD               	bcf	16317,0,c	;volatile
  1619                           
  1620                           ;main.c: 340:   do { LATDbits.LATD1 = 0; } while(0);
  1621  00210E  92BD               	bcf	16317,1,c	;volatile
  1622  002110  D232               	goto	l9299
  1623  002112                     l9127:
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;main.c: 346:    init_display();
  1627  002112  ECF5  F026         	call	_init_display	;wreg free
  1628                           
  1629                           ; BSR set to: 61
  1630                           ;main.c: 347:    eaDogM_WriteCommand(0b00001100);
  1631  002116  0E0C               	movlw	12
  1632  002118  6EE6               	movwf	postinc1,c
  1633  00211A  ECE4  F031         	call	_eaDogM_WriteCommand	;wreg free
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;main.c: 349:    V.ui_state = mode;
  1637                           ;stkvar	_mode @ sp[(-1)+0]
  1638  00211E  0EFF               	movlw	-1
  1639  002120  006F FF8C  F068    	movff	plusw1,_V+1
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;main.c: 350:    V.s_state = SEQ_STATE_INIT;
  1643  002126  6B67               	clrf	_V& (0+255),b
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;main.c: 379:    sprintf(V.buf, " RVI HOST TESTER");
  1647  002128  0E7A               	movlw	STR_1& (0+255)
  1648  00212A  6EE6               	movwf	postinc1,c
  1649  00212C  0E67               	movlw	_V& (0+255)
  1650  00212E  0F06               	addlw	6
  1651  002130  6EE6               	movwf	postinc1,c
  1652  002132  0E02               	movlw	2
  1653  002134  6EE6               	movwf	postinc1,c
  1654  002136  EC38  F028         	call	_sprintf	;wreg free
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;main.c: 380:    wait_lcd_done();
  1658  00213A  EC72  F031         	call	_wait_lcd_done	;wreg free
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;main.c: 381:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1662  00213E  0E67               	movlw	_V& (0+255)
  1663  002140  0F06               	addlw	6
  1664  002142  6EE6               	movwf	postinc1,c
  1665  002144  0E00               	movlw	0
  1666  002146  6EE6               	movwf	postinc1,c
  1667  002148  0E00               	movlw	0
  1668  00214A  6EE6               	movwf	postinc1,c
  1669  00214C  ECBD  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;main.c: 382:    sprintf(V.buf, " Version %s", "0.80B");
  1673  002150  0EC0               	movlw	STR_3& (0+255)
  1674  002152  6E47               	movwf	btemp+11,c
  1675  002154  0060  F11F  FFE6   	movff	btemp+11,postinc1
  1676  00215A  0E20               	movlw	high __smallconst
  1677  00215C  6EE6               	movwf	postinc1,c
  1678  00215E  0EA8               	movlw	STR_2& (0+255)
  1679  002160  6EE6               	movwf	postinc1,c
  1680  002162  0E67               	movlw	_V& (0+255)
  1681  002164  0F06               	addlw	6
  1682  002166  6EE6               	movwf	postinc1,c
  1683  002168  0E04               	movlw	4
  1684  00216A  6EE6               	movwf	postinc1,c
  1685  00216C  EC38  F028         	call	_sprintf	;wreg free
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;main.c: 383:    wait_lcd_done();
  1689  002170  EC72  F031         	call	_wait_lcd_done	;wreg free
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;main.c: 384:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1693  002174  0E67               	movlw	_V& (0+255)
  1694  002176  0F06               	addlw	6
  1695  002178  6EE6               	movwf	postinc1,c
  1696  00217A  0E00               	movlw	0
  1697  00217C  6EE6               	movwf	postinc1,c
  1698  00217E  0E01               	movlw	1
  1699  002180  6EE6               	movwf	postinc1,c
  1700  002182  ECBD  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;main.c: 385:    sprintf(V.buf, " FGB@MCHP FAB4");
  1704  002186  0E8B               	movlw	STR_4& (0+255)
  1705  002188  6EE6               	movwf	postinc1,c
  1706  00218A  0E67               	movlw	_V& (0+255)
  1707  00218C  0F06               	addlw	6
  1708  00218E  6EE6               	movwf	postinc1,c
  1709  002190  0E02               	movlw	2
  1710  002192  6EE6               	movwf	postinc1,c
  1711  002194  EC38  F028         	call	_sprintf	;wreg free
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;main.c: 386:    wait_lcd_done();
  1715  002198  EC72  F031         	call	_wait_lcd_done	;wreg free
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;main.c: 387:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1719  00219C  0E67               	movlw	_V& (0+255)
  1720  00219E  0F06               	addlw	6
  1721  0021A0  6EE6               	movwf	postinc1,c
  1722  0021A2  0E00               	movlw	0
  1723  0021A4  6EE6               	movwf	postinc1,c
  1724  0021A6  0E02               	movlw	2
  1725  0021A8  6EE6               	movwf	postinc1,c
  1726  0021AA  ECBD  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;main.c: 389:    WaitMs(3000);
  1730  0021AE  0EB8               	movlw	184
  1731  0021B0  6EE6               	movwf	postinc1,c
  1732  0021B2  0E0B               	movlw	11
  1733  0021B4  6EE6               	movwf	postinc1,c
  1734  0021B6  EC29  F02F         	call	_WaitMs	;wreg free
  1735                           
  1736                           ;main.c: 390:    break;
  1737  0021BA  D1F1               	goto	l1271
  1738  0021BC                     l1236:
  1739                           
  1740                           ; BSR set to: 0
  1741                           ;main.c: 394:     V.r_l_state = LINK_STATE_IDLE;
  1742  0021BC  6B6B               	clrf	(_V+4)& (0+255),b
  1743                           
  1744                           ;main.c: 395:     V.t_l_state = LINK_STATE_IDLE;
  1745  0021BE  6B6C               	clrf	(_V+5)& (0+255),b
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;main.c: 396:     V.s_state = SEQ_STATE_RX;
  1749  0021C0  0E01               	movlw	1
  1750  0021C2  6F67               	movwf	_V& (0+255),b
  1751                           
  1752                           ;main.c: 397:     if (!V.error && !V.abort) {
  1753  0021C4  51B7               	movf	(_V+80)& (0+255),w,b
  1754  0021C6  A4D8               	btfss	status,2,c
  1755  0021C8  D024               	goto	l9167
  1756                           
  1757                           ; BSR set to: 0
  1758  0021CA  51B8               	movf	(_V+81)& (0+255),w,b
  1759  0021CC  A4D8               	btfss	status,2,c
  1760  0021CE  D021               	goto	l9167
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;main.c: 398:      sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1764  0021D0  0060  F2B7  FFE6   	movff	_V+70,postinc1
  1765  0021D6  0060  F2BB  FFE6   	movff	_V+71,postinc1
  1766  0021DC  0060  F2BF  FFE6   	movff	_V+72,postinc1
  1767  0021E2  0060  F2C3  FFE6   	movff	_V+73,postinc1
  1768  0021E8  0E56               	movlw	STR_5& (0+255)
  1769  0021EA  6EE6               	movwf	postinc1,c
  1770  0021EC  0E67               	movlw	_V& (0+255)
  1771  0021EE  0F06               	addlw	6
  1772  0021F0  6EE6               	movwf	postinc1,c
  1773  0021F2  0E06               	movlw	6
  1774  0021F4  6EE6               	movwf	postinc1,c
  1775  0021F6  EC38  F028         	call	_sprintf	;wreg free
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;main.c: 399:      V.buf[16] = 0;
  1779  0021FA  6B7D               	clrf	(_V+22)& (0+255),b
  1780                           
  1781                           ; BSR set to: 0
  1782                           ;main.c: 400:      wait_lcd_done();
  1783  0021FC  EC72  F031         	call	_wait_lcd_done	;wreg free
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;main.c: 401:      eaDogM_WriteStringAtPos(2, 0, V.buf);
  1787  002200  0E67               	movlw	_V& (0+255)
  1788  002202  0F06               	addlw	6
  1789  002204  6EE6               	movwf	postinc1,c
  1790  002206  0E00               	movlw	0
  1791  002208  6EE6               	movwf	postinc1,c
  1792  00220A  0E02               	movlw	2
  1793  00220C  6EE6               	movwf	postinc1,c
  1794  00220E  ECBD  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1795  002212                     l9167:
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;main.c: 404:     WaitMs(50);
  1799  002212  0E32               	movlw	50
  1800  002214  6EE6               	movwf	postinc1,c
  1801  002216  0E00               	movlw	0
  1802  002218  6EE6               	movwf	postinc1,c
  1803  00221A  EC29  F02F         	call	_WaitMs	;wreg free
  1804                           
  1805                           ;main.c: 405:     UART1_put_buffer(0x05);
  1806  00221E  0E05               	movlw	5
  1807  002220  6EE6               	movwf	postinc1,c
  1808  002222  EC14  F02F         	call	_UART1_put_buffer	;wreg free
  1809                           
  1810                           ;main.c: 407:     break;
  1811  002226  D0CD               	goto	l9233
  1812  002228                     l9171:
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;main.c: 412:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1816  002228  0E67               	movlw	_V& (0+255)
  1817  00222A  0F04               	addlw	4
  1818  00222C  6EE6               	movwf	postinc1,c
  1819  00222E  EC2A  F01A         	call	_r_protocol	;wreg free
  1820  002232  0E04               	movlw	4
  1821  002234  183C               	xorwf	btemp,w,c
  1822  002236  A4D8               	btfss	status,2,c
  1823  002238  D02F               	goto	l9191
  1824                           
  1825                           ;main.c: 413:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1826  00223A  0100               	movlb	0	; () banked
  1827  00223C  51B6               	movf	(_V+79)& (0+255),w,b
  1828  00223E  6EE6               	movwf	postinc1,c
  1829  002240  0E00               	movlw	0
  1830  002242  6EE6               	movwf	postinc1,c
  1831  002244  51B5               	movf	(_V+78)& (0+255),w,b
  1832  002246  6EE6               	movwf	postinc1,c
  1833  002248  0E00               	movlw	0
  1834  00224A  6EE6               	movwf	postinc1,c
  1835  00224C  0E9A               	movlw	STR_6& (0+255)
  1836  00224E  6EE6               	movwf	postinc1,c
  1837  002250  0E67               	movlw	_V& (0+255)
  1838  002252  0F06               	addlw	6
  1839  002254  6EE6               	movwf	postinc1,c
  1840  002256  0E06               	movlw	6
  1841  002258  6EE6               	movwf	postinc1,c
  1842  00225A  EC38  F028         	call	_sprintf	;wreg free
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;main.c: 414:      V.buf[11] = 0;
  1846  00225E  6B78               	clrf	(_V+17)& (0+255),b
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;main.c: 415:      wait_lcd_done();
  1850  002260  EC72  F031         	call	_wait_lcd_done	;wreg free
  1851                           
  1852                           ; BSR set to: 0
  1853                           ;main.c: 416:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1854  002264  0E67               	movlw	_V& (0+255)
  1855  002266  0F06               	addlw	6
  1856  002268  6EE6               	movwf	postinc1,c
  1857  00226A  0E00               	movlw	0
  1858  00226C  6EE6               	movwf	postinc1,c
  1859  00226E  0E00               	movlw	0
  1860  002270  6EE6               	movwf	postinc1,c
  1861  002272  ECBD  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;main.c: 418:      WaitMs(5);
  1865  002276  0E05               	movlw	5
  1866  002278  6EE6               	movwf	postinc1,c
  1867  00227A  0E00               	movlw	0
  1868  00227C  6EE6               	movwf	postinc1,c
  1869  00227E  EC29  F02F         	call	_WaitMs	;wreg free
  1870                           
  1871                           ;main.c: 420:      if (V.wbit) {
  1872  002282  0100               	movlb	0	; () banked
  1873  002284  A3BE               	btfss	(_V+87)& (0+255),1,b
  1874  002286  D006               	goto	l9189
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;main.c: 421:       V.s_state = SEQ_STATE_TX;
  1878  002288  0E02               	movlw	2
  1879  00228A  6F67               	movwf	_V& (0+255),b
  1880                           
  1881                           ;main.c: 422:       V.failed_send = 0;
  1882  00228C  0E87               	movlw	-121
  1883  00228E  17BE               	andwf	(_V+87)& (0+255),f,b
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;main.c: 423:       V.t_l_state = LINK_STATE_IDLE;
  1887  002290  6B6C               	clrf	(_V+5)& (0+255),b
  1888                           
  1889                           ;main.c: 424:      } else {
  1890  002292  D002               	goto	l9191
  1891  002294                     l9189:
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;main.c: 425:       V.s_state = SEQ_STATE_TRIGGER;
  1895  002294  0E03               	movlw	3
  1896  002296  6F67               	movwf	_V& (0+255),b
  1897  002298                     l9191:
  1898                           
  1899                           ;main.c: 428:     if (V.r_l_state == LINK_STATE_ERROR)
  1900  002298  0E06               	movlw	6
  1901  00229A  0100               	movlb	0	; () banked
  1902  00229C  196B               	xorwf	(_V+4)& (0+255),w,b
  1903  00229E  A4D8               	btfss	status,2,c
  1904  0022A0  D090               	goto	l9233
  1905  0022A2                     u5940:
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;main.c: 429:      V.s_state = SEQ_STATE_ERROR;
  1909  0022A2  0E06               	movlw	6
  1910  0022A4  6F67               	movwf	_V& (0+255),b
  1911  0022A6  D08D               	goto	l9233
  1912  0022A8                     l9195:
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;main.c: 435:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1916  0022A8  0E67               	movlw	_V& (0+255)
  1917  0022AA  0F05               	addlw	5
  1918  0022AC  6EE6               	movwf	postinc1,c
  1919  0022AE  ECA3  F01E         	call	_t_protocol	;wreg free
  1920  0022B2  0E04               	movlw	4
  1921  0022B4  183C               	xorwf	btemp,w,c
  1922  0022B6  A4D8               	btfss	status,2,c
  1923  0022B8  D003               	goto	l9199
  1924                           
  1925                           ;main.c: 436:      V.s_state = SEQ_STATE_TRIGGER;
  1926  0022BA  0E03               	movlw	3
  1927  0022BC  0100               	movlb	0	; () banked
  1928  0022BE  6F67               	movwf	_V& (0+255),b
  1929  0022C0                     l9199:
  1930                           
  1931                           ;main.c: 438:     if (V.t_l_state == LINK_STATE_ERROR)
  1932  0022C0  0E06               	movlw	6
  1933  0022C2  0100               	movlb	0	; () banked
  1934  0022C4  196C               	xorwf	(_V+5)& (0+255),w,b
  1935  0022C6  B4D8               	btfsc	status,2,c
  1936  0022C8  D7EC               	goto	u5940
  1937  0022CA  D07B               	goto	l9233
  1938  0022CC                     l1247:
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;main.c: 442:     if (V.queue) {
  1942  0022CC  A9BF               	btfss	(_V+88)& (0+255),4,b
  1943  0022CE  D01C               	goto	l9213
  1944                           
  1945                           ; BSR set to: 0
  1946  0022D0  A4BE               	btfss	16318,2,c	;volatile
  1947  0022D2  D002               	goto	u5980
  1948  0022D4  0E01               	movlw	1
  1949  0022D6  D001               	goto	u5986
  1950  0022D8                     u5980:
  1951  0022D8  0E00               	movlw	0
  1952  0022DA                     u5986:
  1953  0022DA  0AFF               	xorlw	255
  1954  0022DC  6E47               	movwf	btemp+11,c
  1955  0022DE  4647               	rlncf	btemp+11,f,c
  1956  0022E0  4647               	rlncf	btemp+11,f,c
  1957  0022E2  50BE               	movf	16318,w,c	;volatile
  1958  0022E4  1847               	xorwf	btemp+11,w,c
  1959  0022E6  0BFB               	andlw	-5
  1960  0022E8  1847               	xorwf	btemp+11,w,c
  1961  0022EA  6EBE               	movwf	16318,c	;volatile
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;main.c: 444:      V.r_l_state = LINK_STATE_IDLE;
  1965  0022EC  6B6B               	clrf	(_V+4)& (0+255),b
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;main.c: 445:      V.t_l_state = LINK_STATE_IDLE;
  1969  0022EE  6B6C               	clrf	(_V+5)& (0+255),b
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;main.c: 446:      V.s_state = SEQ_STATE_TX;
  1973  0022F0  0E02               	movlw	2
  1974  0022F2  6F67               	movwf	_V& (0+255),b
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;main.c: 447:      sprintf(V.buf, " OKQ#");
  1978  0022F4  0EBA               	movlw	STR_7& (0+255)
  1979  0022F6  6EE6               	movwf	postinc1,c
  1980  0022F8  0E67               	movlw	_V& (0+255)
  1981  0022FA  0F06               	addlw	6
  1982  0022FC  6EE6               	movwf	postinc1,c
  1983  0022FE  0E02               	movlw	2
  1984  002300  6EE6               	movwf	postinc1,c
  1985  002302  EC38  F028         	call	_sprintf	;wreg free
  1986                           
  1987                           ;main.c: 448:     } else {
  1988  002306  D00B               	goto	l9217
  1989  002308                     l9213:
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;main.c: 449:      V.s_state = SEQ_STATE_DONE;
  1993  002308  0E05               	movlw	5
  1994  00230A  6F67               	movwf	_V& (0+255),b
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;main.c: 450:      sprintf(V.buf, " OK #");
  1998  00230C  0EB4               	movlw	STR_8& (0+255)
  1999  00230E  6EE6               	movwf	postinc1,c
  2000  002310  0E67               	movlw	_V& (0+255)
  2001  002312  0F06               	addlw	6
  2002  002314  6EE6               	movwf	postinc1,c
  2003  002316  0E02               	movlw	2
  2004  002318  6EE6               	movwf	postinc1,c
  2005  00231A  EC38  F028         	call	_sprintf	;wreg free
  2006  00231E                     l9217:
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;main.c: 452:     wait_lcd_done();
  2010  00231E  EC72  F031         	call	_wait_lcd_done	;wreg free
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;main.c: 453:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  2014  002322  0E67               	movlw	_V& (0+255)
  2015  002324  0F06               	addlw	6
  2016  002326  6EE6               	movwf	postinc1,c
  2017  002328  0E0B               	movlw	11
  2018  00232A  6EE6               	movwf	postinc1,c
  2019  00232C  0E00               	movlw	0
  2020  00232E  6EE6               	movwf	postinc1,c
  2021  002330  ECBD  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2022                           
  2023                           ;main.c: 454:     break;
  2024  002334  D046               	goto	l9233
  2025  002336                     l1252:
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;main.c: 456:     V.s_state = SEQ_STATE_INIT;
  2029  002336  6B67               	clrf	_V& (0+255),b
  2030                           
  2031                           ;main.c: 457:     break;
  2032  002338  D044               	goto	l9233
  2033  00233A                     l1254:
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;main.c: 460:     V.s_state = SEQ_STATE_INIT;
  2037  00233A  6B67               	clrf	_V& (0+255),b
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;main.c: 461:     sprintf(V.buf, "E R%d T%d E%d A%d G%d#", V.r_l_state, V.t_l_state, V.e
      +                          rror, V.abort, V.g_state);
  2041  00233C  5169               	movf	(_V+2)& (0+255),w,b
  2042  00233E  6EE6               	movwf	postinc1,c
  2043  002340  0E00               	movlw	0
  2044  002342  6EE6               	movwf	postinc1,c
  2045  002344  51B8               	movf	(_V+81)& (0+255),w,b
  2046  002346  6EE6               	movwf	postinc1,c
  2047  002348  0E00               	movlw	0
  2048  00234A  6EE6               	movwf	postinc1,c
  2049  00234C  51B7               	movf	(_V+80)& (0+255),w,b
  2050  00234E  6EE6               	movwf	postinc1,c
  2051  002350  0E00               	movlw	0
  2052  002352  6EE6               	movwf	postinc1,c
  2053  002354  516C               	movf	(_V+5)& (0+255),w,b
  2054  002356  6EE6               	movwf	postinc1,c
  2055  002358  0E00               	movlw	0
  2056  00235A  6EE6               	movwf	postinc1,c
  2057  00235C  516B               	movf	(_V+4)& (0+255),w,b
  2058  00235E  6EE6               	movwf	postinc1,c
  2059  002360  0E00               	movlw	0
  2060  002362  6EE6               	movwf	postinc1,c
  2061  002364  0E01               	movlw	STR_9& (0+255)
  2062  002366  6EE6               	movwf	postinc1,c
  2063  002368  0E67               	movlw	_V& (0+255)
  2064  00236A  0F06               	addlw	6
  2065  00236C  6EE6               	movwf	postinc1,c
  2066  00236E  0E0C               	movlw	12
  2067  002370  6EE6               	movwf	postinc1,c
  2068  002372  EC38  F028         	call	_sprintf	;wreg free
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;main.c: 462:     V.buf[16] = 0;
  2072  002376  6B7D               	clrf	(_V+22)& (0+255),b
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;main.c: 463:     wait_lcd_done();
  2076  002378  EC72  F031         	call	_wait_lcd_done	;wreg free
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;main.c: 464:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2080  00237C  0E67               	movlw	_V& (0+255)
  2081  00237E  0F06               	addlw	6
  2082  002380  6EE6               	movwf	postinc1,c
  2083  002382  0E00               	movlw	0
  2084  002384  6EE6               	movwf	postinc1,c
  2085  002386  0E02               	movlw	2
  2086  002388  6EE6               	movwf	postinc1,c
  2087  00238A  ECBD  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2088                           
  2089                           ;main.c: 465:     break;
  2090  00238E  D019               	goto	l9233
  2091  002390                     l9231:
  2092                           
  2093                           ; BSR set to: 0
  2094  002390  5167               	movf	_V& (0+255),w,b
  2095  002392  6E46               	movwf	btemp+10,c
  2096  002394  6A47               	clrf	btemp+11,c
  2097                           
  2098                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2099                           ; Switch size 1, requested type "simple"
  2100                           ; Number of cases is 1, Range of values is 0 to 0
  2101                           ; switch strategies available:
  2102                           ; Name         Instructions Cycles
  2103                           ; simple_byte            4     3 (average)
  2104                           ;	Chosen strategy is simple_byte
  2105  002396  5047               	movf	btemp+11,w,c
  2106  002398  0A00               	xorlw	0	; case 0
  2107  00239A  A4D8               	btfss	status,2,c
  2108  00239C  D7CE               	goto	l1254
  2109                           
  2110                           ; BSR set to: 0
  2111                           ; Switch size 1, requested type "simple"
  2112                           ; Number of cases is 6, Range of values is 0 to 6
  2113                           ; switch strategies available:
  2114                           ; Name         Instructions Cycles
  2115                           ; simple_byte           19    10 (average)
  2116                           ;	Chosen strategy is simple_byte
  2117  00239E  5046               	movf	btemp+10,w,c
  2118  0023A0  0A00               	xorlw	0	; case 0
  2119  0023A2  B4D8               	btfsc	status,2,c
  2120  0023A4  D70B               	goto	l1236
  2121  0023A6  0A01               	xorlw	1	; case 1
  2122  0023A8  B4D8               	btfsc	status,2,c
  2123  0023AA  D73E               	goto	l9171
  2124  0023AC  0A03               	xorlw	3	; case 2
  2125  0023AE  B4D8               	btfsc	status,2,c
  2126  0023B0  D77B               	goto	l9195
  2127  0023B2  0A01               	xorlw	1	; case 3
  2128  0023B4  B4D8               	btfsc	status,2,c
  2129  0023B6  D78A               	goto	l1247
  2130  0023B8  0A06               	xorlw	6	; case 5
  2131  0023BA  B4D8               	btfsc	status,2,c
  2132  0023BC  D7BC               	goto	l1252
  2133  0023BE  0A03               	xorlw	3	; case 6
  2134  0023C0  D7BC               	goto	l1254
  2135  0023C2                     l9233:
  2136                           
  2137                           ;main.c: 467:    if (!V.error && !V.abort) {
  2138  0023C2  0100               	movlb	0	; () banked
  2139  0023C4  51B7               	movf	(_V+80)& (0+255),w,b
  2140  0023C6  A4D8               	btfss	status,2,c
  2141  0023C8  D0EA               	goto	l1271
  2142                           
  2143                           ; BSR set to: 0
  2144  0023CA  51B8               	movf	(_V+81)& (0+255),w,b
  2145  0023CC  A4D8               	btfss	status,2,c
  2146  0023CE  D0E7               	goto	l1271
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;main.c: 468:     sprintf(V.buf, "HOST MODE %ld %d  #", V.ticks, V.g_state);
  2150  0023D0  5169               	movf	(_V+2)& (0+255),w,b
  2151  0023D2  6EE6               	movwf	postinc1,c
  2152  0023D4  0E00               	movlw	0
  2153  0023D6  6EE6               	movwf	postinc1,c
  2154  0023D8  0060  F2B7  FFE6   	movff	_V+70,postinc1
  2155  0023DE  0060  F2BB  FFE6   	movff	_V+71,postinc1
  2156  0023E4  0060  F2BF  FFE6   	movff	_V+72,postinc1
  2157  0023EA  0060  F2C3  FFE6   	movff	_V+73,postinc1
  2158  0023F0  0E42               	movlw	STR_10& (0+255)
  2159  0023F2  6EE6               	movwf	postinc1,c
  2160  0023F4  0E67               	movlw	_V& (0+255)
  2161  0023F6  0F06               	addlw	6
  2162  0023F8  6EE6               	movwf	postinc1,c
  2163  0023FA  0E08               	movlw	8
  2164  0023FC  6EE6               	movwf	postinc1,c
  2165  0023FE  EC38  F028         	call	_sprintf	;wreg free
  2166  002402                     l9239:
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;main.c: 469:     V.buf[16] = 0;
  2170  002402  6B7D               	clrf	(_V+22)& (0+255),b
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;main.c: 470:     wait_lcd_done();
  2174  002404  EC72  F031         	call	_wait_lcd_done	;wreg free
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;main.c: 471:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2178  002408  0E67               	movlw	_V& (0+255)
  2179  00240A  0F06               	addlw	6
  2180  00240C  6EE6               	movwf	postinc1,c
  2181  00240E  0E00               	movlw	0
  2182  002410  6EE6               	movwf	postinc1,c
  2183  002412  0E02               	movlw	2
  2184  002414  6EE6               	movwf	postinc1,c
  2185  002416  ECBD  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2186  00241A  D0C1               	goto	l1271
  2187  00241C                     l1258:
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;main.c: 477:     V.m_l_state = LINK_STATE_IDLE;
  2191  00241C  6B6A               	clrf	(_V+3)& (0+255),b
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;main.c: 478:     V.s_state = SEQ_STATE_RX;
  2195  00241E  0E01               	movlw	1
  2196  002420  6F67               	movwf	_V& (0+255),b
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;main.c: 479:     sprintf(V.buf, "LOG MODE %d %d     #", V.uart, V.g_state);
  2200  002422  5169               	movf	(_V+2)& (0+255),w,b
  2201  002424  6EE6               	movwf	postinc1,c
  2202  002426  0E00               	movlw	0
  2203  002428  6EE6               	movwf	postinc1,c
  2204  00242A  51C3               	movf	(_V+92)& (0+255),w,b
  2205  00242C  6EE6               	movwf	postinc1,c
  2206  00242E  0E00               	movlw	0
  2207  002430  6EE6               	movwf	postinc1,c
  2208  002432  0E18               	movlw	STR_11& (0+255)
  2209  002434  6EE6               	movwf	postinc1,c
  2210  002436  0E67               	movlw	_V& (0+255)
  2211  002438  0F06               	addlw	6
  2212  00243A  6EE6               	movwf	postinc1,c
  2213  00243C  0E06               	movlw	6
  2214  00243E  6EE6               	movwf	postinc1,c
  2215  002440  EC38  F028         	call	_sprintf	;wreg free
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;main.c: 480:     V.buf[16] = 0;
  2219  002444  6B7D               	clrf	(_V+22)& (0+255),b
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;main.c: 481:     wait_lcd_done();
  2223  002446  EC72  F031         	call	_wait_lcd_done	;wreg free
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;main.c: 482:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2227  00244A  0E67               	movlw	_V& (0+255)
  2228  00244C  0F06               	addlw	6
  2229  00244E  6EE6               	movwf	postinc1,c
  2230  002450  0E00               	movlw	0
  2231  002452  6EE6               	movwf	postinc1,c
  2232  002454  0E02               	movlw	2
  2233  002456  6EE6               	movwf	postinc1,c
  2234  002458  ECBD  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;main.c: 485:     if (LATEbits.LATE0) {
  2238  00245C  A0BE               	btfss	16318,0,c	;volatile
  2239  00245E  D005               	goto	l9259
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;main.c: 486:      UART2_put_buffer(0x05);
  2243  002460  0E05               	movlw	5
  2244  002462  6EE6               	movwf	postinc1,c
  2245  002464  ECFF  F02E         	call	_UART2_put_buffer	;wreg free
  2246                           
  2247                           ;main.c: 487:     } else {
  2248  002468  D071               	goto	l9289
  2249  00246A                     l9259:
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;main.c: 488:      UART1_put_buffer(0x05);
  2253  00246A  0E05               	movlw	5
  2254  00246C  6EE6               	movwf	postinc1,c
  2255  00246E  EC14  F02F         	call	_UART1_put_buffer	;wreg free
  2256  002472  D06C               	goto	l9289
  2257  002474                     l9261:
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;main.c: 496:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  2261  002474  0E67               	movlw	_V& (0+255)
  2262  002476  0F03               	addlw	3
  2263  002478  6EE6               	movwf	postinc1,c
  2264  00247A  EC20  F013         	call	_m_protocol	;wreg free
  2265  00247E  0E04               	movlw	4
  2266  002480  183C               	xorwf	btemp,w,c
  2267  002482  A4D8               	btfss	status,2,c
  2268  002484  D02C               	goto	l9273
  2269                           
  2270                           ;main.c: 497:      sprintf(V.buf, " S%dF%d #%ld    ", V.stream, V.function, V.ticks);
  2271  002486  0060  F2B7  FFE6   	movff	_V+70,postinc1
  2272  00248C  0060  F2BB  FFE6   	movff	_V+71,postinc1
  2273  002492  0060  F2BF  FFE6   	movff	_V+72,postinc1
  2274  002498  0060  F2C3  FFE6   	movff	_V+73,postinc1
  2275  00249E  0100               	movlb	0	; () banked
  2276  0024A0  51B6               	movf	(_V+79)& (0+255),w,b
  2277  0024A2  6EE6               	movwf	postinc1,c
  2278  0024A4  0E00               	movlw	0
  2279  0024A6  6EE6               	movwf	postinc1,c
  2280  0024A8  51B5               	movf	(_V+78)& (0+255),w,b
  2281  0024AA  6EE6               	movwf	postinc1,c
  2282  0024AC  0E00               	movlw	0
  2283  0024AE  6EE6               	movwf	postinc1,c
  2284  0024B0  0E69               	movlw	STR_12& (0+255)
  2285  0024B2  6EE6               	movwf	postinc1,c
  2286  0024B4  0E67               	movlw	_V& (0+255)
  2287  0024B6  0F06               	addlw	6
  2288  0024B8  6EE6               	movwf	postinc1,c
  2289  0024BA  0E0A               	movlw	10
  2290  0024BC  6EE6               	movwf	postinc1,c
  2291  0024BE  EC38  F028         	call	_sprintf	;wreg free
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;main.c: 498:      V.buf[11] = 0;
  2295  0024C2  6B78               	clrf	(_V+17)& (0+255),b
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;main.c: 499:      wait_lcd_done();
  2299  0024C4  EC72  F031         	call	_wait_lcd_done	;wreg free
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;main.c: 500:      eaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
  2303  0024C8  0E67               	movlw	_V& (0+255)
  2304  0024CA  0F06               	addlw	6
  2305  0024CC  6EE6               	movwf	postinc1,c
  2306  0024CE  0E00               	movlw	0
  2307  0024D0  6EE6               	movwf	postinc1,c
  2308  0024D2  05C3               	decf	(_V+92)& (0+255),w,b
  2309  0024D4  6EE6               	movwf	postinc1,c
  2310  0024D6  ECBD  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;main.c: 501:      V.s_state = SEQ_STATE_TRIGGER;
  2314  0024DA  0E03               	movlw	3
  2315  0024DC  6F67               	movwf	_V& (0+255),b
  2316  0024DE                     l9273:
  2317                           
  2318                           ;main.c: 503:     if (V.m_l_state == LINK_STATE_ERROR)
  2319  0024DE  0E06               	movlw	6
  2320  0024E0  0100               	movlb	0	; () banked
  2321  0024E2  196A               	xorwf	(_V+3)& (0+255),w,b
  2322  0024E4  A4D8               	btfss	status,2,c
  2323  0024E6  D032               	goto	l9289
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;main.c: 504:      V.s_state = SEQ_STATE_ERROR;
  2327  0024E8  0E06               	movlw	6
  2328  0024EA  6F67               	movwf	_V& (0+255),b
  2329  0024EC  D02F               	goto	l9289
  2330  0024EE                     l9277:
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;main.c: 507:     V.s_state = SEQ_STATE_DONE;
  2334  0024EE  0E05               	movlw	5
  2335  0024F0  6F67               	movwf	_V& (0+255),b
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;main.c: 508:     sprintf(V.buf, " OK #");
  2339  0024F2  0EB4               	movlw	STR_8& (0+255)
  2340  0024F4  6EE6               	movwf	postinc1,c
  2341  0024F6  0E67               	movlw	_V& (0+255)
  2342  0024F8  0F06               	addlw	6
  2343  0024FA  6EE6               	movwf	postinc1,c
  2344  0024FC  0E02               	movlw	2
  2345  0024FE  6EE6               	movwf	postinc1,c
  2346  002500  EC38  F028         	call	_sprintf	;wreg free
  2347                           
  2348                           ; BSR set to: 0
  2349                           ;main.c: 509:     wait_lcd_done();
  2350  002504  EC72  F031         	call	_wait_lcd_done	;wreg free
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;main.c: 510:     eaDogM_WriteStringAtPos(V.uart - 1, 11, V.buf);
  2354  002508  0E67               	movlw	_V& (0+255)
  2355  00250A  0F06               	addlw	6
  2356  00250C  6EE6               	movwf	postinc1,c
  2357  00250E  0E0B               	movlw	11
  2358  002510  6EE6               	movwf	postinc1,c
  2359  002512  05C3               	decf	(_V+92)& (0+255),w,b
  2360  002514  6EE6               	movwf	postinc1,c
  2361  002516  ECBD  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2362                           
  2363                           ;main.c: 511:     break;
  2364  00251A  D018               	goto	l9289
  2365  00251C                     l1266:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;main.c: 513:     V.s_state = SEQ_STATE_INIT;
  2369  00251C  6B67               	clrf	_V& (0+255),b
  2370                           
  2371                           ;main.c: 514:     break;
  2372  00251E  D016               	goto	l9289
  2373  002520                     l9287:
  2374                           
  2375                           ; BSR set to: 0
  2376  002520  5167               	movf	_V& (0+255),w,b
  2377  002522  6E46               	movwf	btemp+10,c
  2378  002524  6A47               	clrf	btemp+11,c
  2379                           
  2380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2381                           ; Switch size 1, requested type "simple"
  2382                           ; Number of cases is 1, Range of values is 0 to 0
  2383                           ; switch strategies available:
  2384                           ; Name         Instructions Cycles
  2385                           ; simple_byte            4     3 (average)
  2386                           ;	Chosen strategy is simple_byte
  2387  002526  5047               	movf	btemp+11,w,c
  2388  002528  0A00               	xorlw	0	; case 0
  2389  00252A  A4D8               	btfss	status,2,c
  2390  00252C  D7F7               	goto	l1266
  2391                           
  2392                           ; BSR set to: 0
  2393                           ; Switch size 1, requested type "simple"
  2394                           ; Number of cases is 5, Range of values is 0 to 6
  2395                           ; switch strategies available:
  2396                           ; Name         Instructions Cycles
  2397                           ; simple_byte           16     9 (average)
  2398                           ;	Chosen strategy is simple_byte
  2399  00252E  5046               	movf	btemp+10,w,c
  2400  002530  0A00               	xorlw	0	; case 0
  2401  002532  B4D8               	btfsc	status,2,c
  2402  002534  D773               	goto	l1258
  2403  002536  0A01               	xorlw	1	; case 1
  2404  002538  B4D8               	btfsc	status,2,c
  2405  00253A  D79C               	goto	l9261
  2406  00253C  0A02               	xorlw	2	; case 3
  2407  00253E  B4D8               	btfsc	status,2,c
  2408  002540  D7D6               	goto	l9277
  2409  002542  0A06               	xorlw	6	; case 5
  2410  002544  B4D8               	btfsc	status,2,c
  2411  002546  D7EA               	goto	l1266
  2412  002548  0A03               	xorlw	3	; case 6
  2413  00254A  D7E8               	goto	l1266
  2414  00254C                     l9289:
  2415                           
  2416                           ;main.c: 520:    sprintf(V.buf, "LOG MODE %d %d     #", V.uart, V.g_state);
  2417  00254C  0100               	movlb	0	; () banked
  2418  00254E  5169               	movf	(_V+2)& (0+255),w,b
  2419  002550  6EE6               	movwf	postinc1,c
  2420  002552  0E00               	movlw	0
  2421  002554  6EE6               	movwf	postinc1,c
  2422  002556  51C3               	movf	(_V+92)& (0+255),w,b
  2423  002558  6EE6               	movwf	postinc1,c
  2424  00255A  0E00               	movlw	0
  2425  00255C  6EE6               	movwf	postinc1,c
  2426  00255E  0E18               	movlw	STR_11& (0+255)
  2427  002560  6EE6               	movwf	postinc1,c
  2428  002562  0E67               	movlw	_V& (0+255)
  2429  002564  0F06               	addlw	6
  2430  002566  6EE6               	movwf	postinc1,c
  2431  002568  0E06               	movlw	6
  2432  00256A  6EE6               	movwf	postinc1,c
  2433  00256C  EC38  F028         	call	_sprintf	;wreg free
  2434  002570  D748               	goto	l9239
  2435  002572                     l1270:
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;main.c: 527:    V.ui_state = UI_STATE_INIT;
  2439  002572  6B68               	clrf	(_V+1)& (0+255),b
  2440                           
  2441                           ;main.c: 528:    break;
  2442  002574  D014               	goto	l1271
  2443  002576                     l9299:
  2444  002576  0100               	movlb	0	; () banked
  2445  002578  5168               	movf	(_V+1)& (0+255),w,b
  2446  00257A  6E46               	movwf	btemp+10,c
  2447  00257C  6A47               	clrf	btemp+11,c
  2448                           
  2449                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2450                           ; Switch size 1, requested type "simple"
  2451                           ; Number of cases is 1, Range of values is 0 to 0
  2452                           ; switch strategies available:
  2453                           ; Name         Instructions Cycles
  2454                           ; simple_byte            4     3 (average)
  2455                           ;	Chosen strategy is simple_byte
  2456  00257E  5047               	movf	btemp+11,w,c
  2457  002580  0A00               	xorlw	0	; case 0
  2458  002582  A4D8               	btfss	status,2,c
  2459  002584  D7F6               	goto	l1270
  2460                           
  2461                           ; BSR set to: 0
  2462                           ; Switch size 1, requested type "simple"
  2463                           ; Number of cases is 4, Range of values is 0 to 4
  2464                           ; switch strategies available:
  2465                           ; Name         Instructions Cycles
  2466                           ; simple_byte           13     7 (average)
  2467                           ;	Chosen strategy is simple_byte
  2468  002586  5046               	movf	btemp+10,w,c
  2469  002588  0A00               	xorlw	0	; case 0
  2470  00258A  B4D8               	btfsc	status,2,c
  2471  00258C  D5C2               	goto	l9127
  2472  00258E  0A01               	xorlw	1	; case 1
  2473  002590  B4D8               	btfsc	status,2,c
  2474  002592  D6FE               	goto	l9231
  2475  002594  0A02               	xorlw	2	; case 3
  2476  002596  B4D8               	btfsc	status,2,c
  2477  002598  D7C3               	goto	l9287
  2478  00259A  0A07               	xorlw	7	; case 4
  2479  00259C  D7EA               	goto	l1270
  2480  00259E                     l1271:
  2481  00259E  82BE               	bsf	16318,1,c	;volatile
  2482                           
  2483                           ;main.c: 531:   if (V.ticks) {
  2484  0025A0  0100               	movlb	0	; () banked
  2485  0025A2  51AD               	movf	(_V+70)& (0+255),w,b
  2486  0025A4  11AE               	iorwf	(_V+71)& (0+255),w,b
  2487  0025A6  11AF               	iorwf	(_V+72)& (0+255),w,b
  2488  0025A8  11B0               	iorwf	(_V+73)& (0+255),w,b
  2489  0025AA  B4D8               	btfsc	status,2,c
  2490  0025AC  D016               	goto	l9307
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;main.c: 532:    if (V.failed_receive) {
  2494  0025AE  51BF               	movf	(_V+88)& (0+255),w,b
  2495  0025B0  0B0F               	andlw	15
  2496  0025B2  0900               	iorlw	0
  2497  0025B4  B4D8               	btfsc	status,2,c
  2498  0025B6  D003               	goto	l1280
  2499                           
  2500                           ; BSR set to: 0
  2501                           
  2502                           ;main.c: 533:     do { LATDbits.LATD4 = 0; } while(0);
  2503  0025B8  98BD               	bcf	16317,4,c	;volatile
  2504                           
  2505                           ; BSR set to: 0
  2506                           
  2507                           ;main.c: 534:     do { LATDbits.LATD5 = 1; } while(0);
  2508  0025BA  8ABD               	bsf	16317,5,c	;volatile
  2509  0025BC  D002               	goto	l9305
  2510  0025BE                     l1280:
  2511                           
  2512                           ; BSR set to: 0
  2513  0025BE  88BD               	bsf	16317,4,c	;volatile
  2514                           
  2515                           ; BSR set to: 0
  2516                           
  2517                           ;main.c: 537:     do { LATDbits.LATD5 = 0; } while(0);
  2518  0025C0  9ABD               	bcf	16317,5,c	;volatile
  2519  0025C2                     l9305:
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;main.c: 539:    if (V.failed_send) {
  2523  0025C2  31BE               	rrcf	(_V+87)& (0+255),w,b
  2524  0025C4  32E8               	rrcf	wreg,f,c
  2525  0025C6  32E8               	rrcf	wreg,f,c
  2526  0025C8  0B0F               	andlw	15
  2527  0025CA  0900               	iorlw	0
  2528  0025CC  B4D8               	btfsc	status,2,c
  2529  0025CE  D003               	goto	l1290
  2530                           
  2531                           ; BSR set to: 0
  2532                           
  2533                           ;main.c: 540:     do { LATDbits.LATD6 = 0; } while(0);
  2534  0025D0  9CBD               	bcf	16317,6,c	;volatile
  2535                           
  2536                           ; BSR set to: 0
  2537                           
  2538                           ;main.c: 541:     do { LATDbits.LATD7 = 1; } while(0);
  2539  0025D2  8EBD               	bsf	16317,7,c	;volatile
  2540  0025D4  D002               	goto	l9307
  2541  0025D6                     l1290:
  2542                           
  2543                           ; BSR set to: 0
  2544  0025D6  8CBD               	bsf	16317,6,c	;volatile
  2545                           
  2546                           ; BSR set to: 0
  2547                           
  2548                           ;main.c: 544:     do { LATDbits.LATD7 = 0; } while(0);
  2549  0025D8  9EBD               	bcf	16317,7,c	;volatile
  2550  0025DA                     l9307:
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;main.c: 547:   sprintf(V.buf, " R%d T%d FR%d FS%d #", V.r_l_state, V.t_l_state, V.faile
      +                          d_receive, V.failed_send);
  2554  0025DA  31BE               	rrcf	(_V+87)& (0+255),w,b
  2555  0025DC  32E8               	rrcf	wreg,f,c
  2556  0025DE  32E8               	rrcf	wreg,f,c
  2557  0025E0  0B0F               	andlw	15
  2558  0025E2  6EE6               	movwf	postinc1,c
  2559  0025E4  0E00               	movlw	0
  2560  0025E6  6EE6               	movwf	postinc1,c
  2561  0025E8  51BF               	movf	(_V+88)& (0+255),w,b
  2562  0025EA  0B0F               	andlw	15
  2563  0025EC  6EE6               	movwf	postinc1,c
  2564  0025EE  0E00               	movlw	0
  2565  0025F0  6EE6               	movwf	postinc1,c
  2566  0025F2  516C               	movf	(_V+5)& (0+255),w,b
  2567  0025F4  6EE6               	movwf	postinc1,c
  2568  0025F6  0E00               	movlw	0
  2569  0025F8  6EE6               	movwf	postinc1,c
  2570  0025FA  516B               	movf	(_V+4)& (0+255),w,b
  2571  0025FC  6EE6               	movwf	postinc1,c
  2572  0025FE  0E00               	movlw	0
  2573  002600  6EE6               	movwf	postinc1,c
  2574  002602  0E2D               	movlw	STR_15& (0+255)
  2575  002604  6EE6               	movwf	postinc1,c
  2576  002606  0E67               	movlw	_V& (0+255)
  2577  002608  0F06               	addlw	6
  2578  00260A  6EE6               	movwf	postinc1,c
  2579  00260C  0E0A               	movlw	10
  2580  00260E  6EE6               	movwf	postinc1,c
  2581  002610  EC38  F028         	call	_sprintf	;wreg free
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;main.c: 548:   V.buf[16] = 0;
  2585  002614  6B7D               	clrf	(_V+22)& (0+255),b
  2586                           
  2587                           ; BSR set to: 0
  2588                           ;main.c: 549:   wait_lcd_done();
  2589  002616  EC72  F031         	call	_wait_lcd_done	;wreg free
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;main.c: 550:   if (mode != UI_STATE_LOG)
  2593                           ;stkvar	_mode @ sp[(-1)+0]
  2594  00261A  0EFF               	movlw	-1
  2595  00261C  006F FF8C  F03C    	movff	plusw1,btemp
  2596  002622  0E03               	movlw	3
  2597  002624  183C               	xorwf	btemp,w,c
  2598  002626  B4D8               	btfsc	status,2,c
  2599  002628  D009               	goto	l9317
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;main.c: 551:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  2603  00262A  0E67               	movlw	_V& (0+255)
  2604  00262C  0F06               	addlw	6
  2605  00262E  6EE6               	movwf	postinc1,c
  2606  002630  0E00               	movlw	0
  2607  002632  6EE6               	movwf	postinc1,c
  2608  002634  0E01               	movlw	1
  2609  002636  6EE6               	movwf	postinc1,c
  2610  002638  ECBD  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2611  00263C                     l9317:
  2612                           
  2613                           ; BSR set to: 0
  2614  00263C  92BE               	bcf	16318,1,c	;volatile
  2615  00263E  D79B               	goto	l9299
  2616  002640                     __end_of_main:
  2617                           	opt callstack 0
  2618                           
  2619 ;; *************** function _t_protocol *****************
  2620 ;; Defined at:
  2621 ;;		line 314 in file "gemsecs.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  t_link          1  [STACK] PTR enum E16173
  2624 ;;		 -> V(93), 
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;  rxData          1  [STACK] unsigned char 
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1  [STACK] enum E16913
  2629 ;; Registers used:
  2630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2640 ;;Total ram usage:        0 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; Hardware stack levels required when called:    5
  2643 ;; This function calls:
  2644 ;;		_StartTimer
  2645 ;;		_TimerDone
  2646 ;;		_UART1_Read
  2647 ;;		_UART1_Write
  2648 ;;		_UART1_is_rx_ready
  2649 ;;		_UART1_put_buffer
  2650 ;;		_WaitMs
  2651 ;;		_secs_II_message
  2652 ;;		_secs_send
  2653 ;; This function is called by:
  2654 ;;		_main
  2655 ;; This function uses a reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text1
  2659  003D46                     __ptext1:
  2660                           	opt callstack 0
  2661  003D46                     _t_protocol:
  2662                           	opt callstack 0
  2663                           
  2664                           ; BSR set to: 0
  2665                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2666  003D46  52E6               	movf	postinc1,f,c
  2667                           
  2668                           ;gemsecs.c: 314: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 315: {;gemsecs.
      +                          c: 316:  uint8_t rxData;;gemsecs.c: 317:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          318:  static response_type block;;gemsecs.c: 320:  switch (*t_link) {
  2669                           
  2670                           ;incstack = 0
  2671  003D48  D124               	goto	l8885
  2672  003D4A                     l1672:
  2673                           
  2674                           ;gemsecs.c: 322:   V.error = LINK_ERROR_NONE;
  2675  003D4A  0100               	movlb	0	; () banked
  2676  003D4C  6BB7               	clrf	(_V+80)& (0+255),b
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;gemsecs.c: 323:   retry = 3;
  2680  003D4E  0E03               	movlw	3
  2681  003D50  6E2C               	movwf	t_protocol@retry,c
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;gemsecs.c: 324:   UART1_Write(0x05);
  2685  003D52  0E05               	movlw	5
  2686  003D54  6EE6               	movwf	postinc1,c
  2687  003D56  ECF0  F02D         	call	_UART1_Write	;wreg free
  2688                           
  2689                           ; BSR set to: 57
  2690                           ;gemsecs.c: 325:   StartTimer(TMR_T2, 2000);
  2691  003D5A  0ED0               	movlw	208
  2692  003D5C  6EE6               	movwf	postinc1,c
  2693  003D5E  0E07               	movlw	7
  2694  003D60  6EE6               	movwf	postinc1,c
  2695  003D62  0E02               	movlw	2
  2696  003D64  6EE6               	movwf	postinc1,c
  2697  003D66  EC6D  F02E         	call	_StartTimer	;wreg free
  2698                           
  2699                           ;gemsecs.c: 326:   *t_link = LINK_STATE_ENQ;
  2700                           ;stkvar	_t_link @ sp[(-1)+-1]
  2701  003D6A  0EFE               	movlw	-2
  2702  003D6C  50E3               	movf	plusw1,w,c
  2703  003D6E  6ED9               	movwf	fsr2l,c
  2704  003D70  6ADA               	clrf	fsr2h,c
  2705  003D72  0E01               	movlw	1
  2706  003D74  6EDF               	movwf	indf2,c
  2707                           
  2708                           ;gemsecs.c: 328:   WaitMs(5);
  2709  003D76  0E05               	movlw	5
  2710  003D78  6EE6               	movwf	postinc1,c
  2711  003D7A  0E00               	movlw	0
  2712  003D7C  6EE6               	movwf	postinc1,c
  2713  003D7E  EC29  F02F         	call	_WaitMs	;wreg free
  2714                           
  2715                           ;gemsecs.c: 329:   UART1_put_buffer(0x04);
  2716  003D82  0E04               	movlw	4
  2717  003D84  6EE6               	movwf	postinc1,c
  2718  003D86  EC14  F02F         	call	_UART1_put_buffer	;wreg free
  2719                           
  2720                           ;gemsecs.c: 331:   break;
  2721  003D8A  D124               	goto	l8887
  2722  003D8C                     l8797:
  2723                           
  2724                           ;gemsecs.c: 333:   if (TimerDone(TMR_T2)) {
  2725  003D8C  0E02               	movlw	2
  2726  003D8E  6EE6               	movwf	postinc1,c
  2727  003D90  ECDF  F030         	call	_TimerDone	;wreg free
  2728  003D94  503C               	movf	btemp,w,c
  2729  003D96  B4D8               	btfsc	status,2,c
  2730  003D98  D01A               	goto	l8807
  2731                           
  2732                           ;gemsecs.c: 334:    if (!retry--) {
  2733  003D9A  062C               	decf	t_protocol@retry,f,c
  2734  003D9C  282C               	incf	t_protocol@retry,w,c
  2735  003D9E  A4D8               	btfss	status,2,c
  2736  003DA0  D00D               	goto	l8805
  2737                           
  2738                           ;gemsecs.c: 335:     V.error = LINK_ERROR_T2;
  2739  003DA2  0E02               	movlw	2
  2740  003DA4  0100               	movlb	0	; () banked
  2741  003DA6  6FB7               	movwf	(_V+80)& (0+255),b
  2742                           
  2743                           ;gemsecs.c: 336:     V.failed_send = 1;
  2744  003DA8  51BE               	movf	(_V+87)& (0+255),w,b
  2745  003DAA  0B87               	andlw	-121
  2746  003DAC  0908               	iorlw	8
  2747  003DAE  6FBE               	movwf	(_V+87)& (0+255),b
  2748                           
  2749                           ; BSR set to: 0
  2750                           ;gemsecs.c: 337:     *t_link = LINK_STATE_NAK;
  2751                           ;stkvar	_t_link @ sp[(-1)+-1]
  2752  003DB0  0EFE               	movlw	-2
  2753  003DB2  50E3               	movf	plusw1,w,c
  2754  003DB4  6ED9               	movwf	fsr2l,c
  2755  003DB6  6ADA               	clrf	fsr2h,c
  2756  003DB8  0E05               	movlw	5
  2757  003DBA  D0E9               	goto	L2
  2758  003DBC                     l8805:
  2759                           
  2760                           ;gemsecs.c: 339:     StartTimer(TMR_T2, 2000);
  2761  003DBC  0ED0               	movlw	208
  2762  003DBE  6EE6               	movwf	postinc1,c
  2763  003DC0  0E07               	movlw	7
  2764  003DC2  6EE6               	movwf	postinc1,c
  2765  003DC4  0E02               	movlw	2
  2766  003DC6  6EE6               	movwf	postinc1,c
  2767  003DC8  EC6D  F02E         	call	_StartTimer	;wreg free
  2768  003DCC  D103               	goto	l8887
  2769  003DCE                     l8807:
  2770                           
  2771                           ;gemsecs.c: 342:    if (UART1_is_rx_ready()) {
  2772  003DCE  EC2D  F032         	call	_UART1_is_rx_ready	;wreg free
  2773  003DD2  503C               	movf	btemp,w,c
  2774  003DD4  B4D8               	btfsc	status,2,c
  2775  003DD6  D0FE               	goto	l8887
  2776                           
  2777                           ;gemsecs.c: 343:     rxData = UART1_Read();
  2778  003DD8  EC2E  F02E         	call	_UART1_Read	;wreg free
  2779                           
  2780                           ;stkvar	_rxData @ sp[(-1)+0]
  2781  003DDC  0EFF               	movlw	-1
  2782  003DDE  0060  F0F3  FFE3   	movff	btemp,plusw1
  2783                           
  2784                           ; BSR set to: 57
  2785                           ;gemsecs.c: 344:     if (rxData == 0x04) {
  2786                           ;stkvar	_rxData @ sp[(-1)+0]
  2787  003DE4  0EFF               	movlw	-1
  2788  003DE6  006F FF8C  F03C    	movff	plusw1,btemp
  2789  003DEC  0E04               	movlw	4
  2790  003DEE  183C               	xorwf	btemp,w,c
  2791  003DF0  A4D8               	btfss	status,2,c
  2792  003DF2  D00E               	goto	l8817
  2793                           
  2794                           ; BSR set to: 57
  2795                           ;gemsecs.c: 345:      StartTimer(TMR_T3, 5000);
  2796  003DF4  0E88               	movlw	136
  2797  003DF6  6EE6               	movwf	postinc1,c
  2798  003DF8  0E13               	movlw	19
  2799  003DFA  6EE6               	movwf	postinc1,c
  2800  003DFC  0E03               	movlw	3
  2801  003DFE  6EE6               	movwf	postinc1,c
  2802  003E00  EC6D  F02E         	call	_StartTimer	;wreg free
  2803                           
  2804                           ;gemsecs.c: 346:      *t_link = LINK_STATE_EOT;
  2805                           ;stkvar	_t_link @ sp[(-1)+-1]
  2806  003E04  0EFE               	movlw	-2
  2807  003E06  50E3               	movf	plusw1,w,c
  2808  003E08  6ED9               	movwf	fsr2l,c
  2809  003E0A  6ADA               	clrf	fsr2h,c
  2810  003E0C  0E02               	movlw	2
  2811  003E0E  6EDF               	movwf	indf2,c
  2812  003E10                     l8817:
  2813                           
  2814                           ;gemsecs.c: 348:     if (rxData == 0x05) {
  2815                           ;stkvar	_rxData @ sp[(-1)+0]
  2816  003E10  0EFF               	movlw	-1
  2817  003E12  006F FF8C  F03C    	movff	plusw1,btemp
  2818  003E18  0E05               	movlw	5
  2819  003E1A  183C               	xorwf	btemp,w,c
  2820  003E1C  A4D8               	btfss	status,2,c
  2821  003E1E  D0DA               	goto	l8887
  2822                           
  2823                           ;gemsecs.c: 349:      UART1_put_buffer(0x04);
  2824  003E20  0E04               	movlw	4
  2825  003E22  6EE6               	movwf	postinc1,c
  2826  003E24  EC14  F02F         	call	_UART1_put_buffer	;wreg free
  2827  003E28                     l8821:
  2828                           
  2829                           ;gemsecs.c: 350:      *t_link = LINK_STATE_DONE;
  2830                           ;stkvar	_t_link @ sp[(-1)+-1]
  2831  003E28  0EFE               	movlw	-2
  2832  003E2A  50E3               	movf	plusw1,w,c
  2833  003E2C  6ED9               	movwf	fsr2l,c
  2834  003E2E  6ADA               	clrf	fsr2h,c
  2835  003E30  0E04               	movlw	4
  2836  003E32  D0AD               	goto	L2
  2837  003E34                     l8823:
  2838                           
  2839                           ;gemsecs.c: 356:   if (!requeue)
  2840  003E34  502B               	movf	t_protocol@requeue,w,c
  2841  003E36  A4D8               	btfss	status,2,c
  2842  003E38  D010               	goto	l8827
  2843                           
  2844                           ;gemsecs.c: 357:    block = secs_II_message(V.stream, V.function);
  2845  003E3A  0100               	movlb	0	; () banked
  2846  003E3C  51B6               	movf	(_V+79)& (0+255),w,b
  2847  003E3E  6EE6               	movwf	postinc1,c
  2848  003E40  51B5               	movf	(_V+78)& (0+255),w,b
  2849  003E42  6EE6               	movwf	postinc1,c
  2850  003E44  EC67  F022         	call	_secs_II_message	;wreg free
  2851  003E48  EE20  F0E9         	lfsr	2,t_protocol@block
  2852  003E4C  0E06               	movlw	6
  2853  003E4E                     u5481:
  2854  003E4E  52E5               	movf	postdec1,f,c
  2855  003E50  006F FF9F FFDB     	movff	indf1,plusw2
  2856  003E56  06E8               	decf	wreg,f,c
  2857  003E58  E2FA               	bc	u5481
  2858  003E5A                     l8827:
  2859                           
  2860                           ;gemsecs.c: 359:   if (V.abort == LINK_ERROR_ABORT) {
  2861  003E5A  0E07               	movlw	7
  2862  003E5C  0100               	movlb	0	; () banked
  2863  003E5E  19B8               	xorwf	(_V+81)& (0+255),w,b
  2864  003E60  A4D8               	btfss	status,2,c
  2865  003E62  D019               	goto	l8835
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;gemsecs.c: 360:    secs_send((uint8_t*) block.header, block.length, 0, 1);
  2869  003E64  0E01               	movlw	1
  2870  003E66  6EE6               	movwf	postinc1,c
  2871  003E68  0E00               	movlw	0
  2872  003E6A  6EE6               	movwf	postinc1,c
  2873  003E6C  51EB               	movf	(t_protocol@block+2)& (0+255),w,b
  2874  003E6E  6EE6               	movwf	postinc1,c
  2875  003E70  0060  F3A7  FFE6   	movff	t_protocol@block,postinc1
  2876  003E76  0060  F3AB  FFE6   	movff	t_protocol@block+1,postinc1
  2877  003E7C  EC33  F021         	call	_secs_send	;wreg free
  2878                           
  2879                           ;gemsecs.c: 361:    V.failed_send = 2;
  2880  003E80  0100               	movlb	0	; () banked
  2881  003E82  51BE               	movf	(_V+87)& (0+255),w,b
  2882  003E84  0B87               	andlw	-121
  2883  003E86  0910               	iorlw	16
  2884  003E88  6FBE               	movwf	(_V+87)& (0+255),b
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;gemsecs.c: 362:    *t_link = LINK_STATE_ERROR;
  2888                           ;stkvar	_t_link @ sp[(-1)+-1]
  2889  003E8A  0EFE               	movlw	-2
  2890  003E8C  50E3               	movf	plusw1,w,c
  2891  003E8E  6ED9               	movwf	fsr2l,c
  2892  003E90  6ADA               	clrf	fsr2h,c
  2893  003E92  0E06               	movlw	6
  2894  003E94  D030               	goto	L3
  2895  003E96                     l8835:
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;gemsecs.c: 364:    if (!requeue) {
  2899  003E96  502B               	movf	t_protocol@requeue,w,c
  2900  003E98  A4D8               	btfss	status,2,c
  2901  003E9A  D014               	goto	l1686
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;gemsecs.c: 365:     secs_send((uint8_t*) block.header, block.length, 0, 1);
  2905  003E9C  0E01               	movlw	1
  2906  003E9E  6EE6               	movwf	postinc1,c
  2907  003EA0  0E00               	movlw	0
  2908  003EA2  6EE6               	movwf	postinc1,c
  2909  003EA4  51EB               	movf	(t_protocol@block+2)& (0+255),w,b
  2910  003EA6  6EE6               	movwf	postinc1,c
  2911  003EA8  0060  F3A7  FFE6   	movff	t_protocol@block,postinc1
  2912  003EAE  0060  F3AB  FFE6   	movff	t_protocol@block+1,postinc1
  2913  003EB4  EC33  F021         	call	_secs_send	;wreg free
  2914                           
  2915                           ;gemsecs.c: 366:     if (V.queue)
  2916  003EB8  0100               	movlb	0	; () banked
  2917  003EBA  A9BF               	btfss	(_V+88)& (0+255),4,b
  2918  003EBC  D013               	goto	l8845
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;gemsecs.c: 367:      requeue = 1;
  2922  003EBE  0E01               	movlw	1
  2923  003EC0  6E2B               	movwf	t_protocol@requeue,c
  2924  003EC2  D010               	goto	l8845
  2925  003EC4                     l1686:
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;gemsecs.c: 369:     requeue = 0;
  2929  003EC4  6A2B               	clrf	t_protocol@requeue,c
  2930                           
  2931                           ;gemsecs.c: 370:     V.queue = 0;
  2932  003EC6  99BF               	bcf	(_V+88)& (0+255),4,b
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;gemsecs.c: 371:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
  2936  003EC8  0E01               	movlw	1
  2937  003ECA  6EE6               	movwf	postinc1,c
  2938  003ECC  0E00               	movlw	0
  2939  003ECE  6EE6               	movwf	postinc1,c
  2940  003ED0  51EE               	movf	(t_protocol@block+5)& (0+255),w,b
  2941  003ED2  6EE6               	movwf	postinc1,c
  2942  003ED4  0060  F3B3  FFE6   	movff	t_protocol@block+3,postinc1
  2943  003EDA  0060  F3B7  FFE6   	movff	t_protocol@block+4,postinc1
  2944  003EE0  EC33  F021         	call	_secs_send	;wreg free
  2945  003EE4                     l8845:
  2946                           
  2947                           ;gemsecs.c: 373:    if (V.error == LINK_ERROR_NONE) {
  2948  003EE4  0100               	movlb	0	; () banked
  2949  003EE6  51B7               	movf	(_V+80)& (0+255),w,b
  2950  003EE8  A4D8               	btfss	status,2,c
  2951  003EEA  D007               	goto	l8849
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;gemsecs.c: 374:     *t_link = LINK_STATE_ACK;
  2955                           ;stkvar	_t_link @ sp[(-1)+-1]
  2956  003EEC  0EFE               	movlw	-2
  2957  003EEE  50E3               	movf	plusw1,w,c
  2958  003EF0  6ED9               	movwf	fsr2l,c
  2959  003EF2  6ADA               	clrf	fsr2h,c
  2960  003EF4  0E03               	movlw	3
  2961  003EF6                     L3:
  2962  003EF6  6EDF               	movwf	indf2,c
  2963                           
  2964                           ;gemsecs.c: 375:    } else {
  2965  003EF8  D004               	goto	l8853
  2966  003EFA                     l8849:
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;gemsecs.c: 376:     V.failed_send = 3;
  2970  003EFA  51BE               	movf	(_V+87)& (0+255),w,b
  2971  003EFC  0B87               	andlw	-121
  2972  003EFE  0918               	iorlw	24
  2973  003F00  D7C3               	goto	L4
  2974  003F02                     l8853:
  2975                           
  2976                           ; BSR set to: 0
  2977                           ;gemsecs.c: 381:   WaitMs(5);
  2978  003F02  0E05               	movlw	5
  2979  003F04  6EE6               	movwf	postinc1,c
  2980  003F06  0E00               	movlw	0
  2981  003F08  6EE6               	movwf	postinc1,c
  2982  003F0A  EC29  F02F         	call	_WaitMs	;wreg free
  2983                           
  2984                           ;gemsecs.c: 382:   UART1_put_buffer(0x06);
  2985  003F0E  0E06               	movlw	6
  2986  003F10  6EE6               	movwf	postinc1,c
  2987  003F12  EC14  F02F         	call	_UART1_put_buffer	;wreg free
  2988                           
  2989                           ;gemsecs.c: 384:   break;
  2990  003F16  D05E               	goto	l8887
  2991  003F18                     l8857:
  2992                           
  2993                           ;gemsecs.c: 386:   if (TimerDone(TMR_T3)) {
  2994  003F18  0E03               	movlw	3
  2995  003F1A  6EE6               	movwf	postinc1,c
  2996  003F1C  ECDF  F030         	call	_TimerDone	;wreg free
  2997  003F20  503C               	movf	btemp,w,c
  2998  003F22  B4D8               	btfsc	status,2,c
  2999  003F24  D007               	goto	l8863
  3000                           
  3001                           ;gemsecs.c: 387:    V.error = LINK_ERROR_T3;
  3002  003F26  0E03               	movlw	3
  3003  003F28  0100               	movlb	0	; () banked
  3004  003F2A  6FB7               	movwf	(_V+80)& (0+255),b
  3005                           
  3006                           ;gemsecs.c: 388:    V.failed_send = 4;
  3007  003F2C  51BE               	movf	(_V+87)& (0+255),w,b
  3008  003F2E  0B87               	andlw	-121
  3009  003F30  0920               	iorlw	32
  3010  003F32  D73D               	goto	L5
  3011  003F34                     l8863:
  3012                           
  3013                           ;gemsecs.c: 391:    if (UART1_is_rx_ready()) {
  3014  003F34  EC2D  F032         	call	_UART1_is_rx_ready	;wreg free
  3015  003F38  503C               	movf	btemp,w,c
  3016  003F3A  B4D8               	btfsc	status,2,c
  3017  003F3C  D04B               	goto	l8887
  3018                           
  3019                           ;gemsecs.c: 392:     rxData = UART1_Read();
  3020  003F3E  EC2E  F02E         	call	_UART1_Read	;wreg free
  3021                           
  3022                           ;stkvar	_rxData @ sp[(-1)+0]
  3023  003F42  0EFF               	movlw	-1
  3024  003F44  0060  F0F3  FFE3   	movff	btemp,plusw1
  3025                           
  3026                           ; BSR set to: 57
  3027                           ;gemsecs.c: 393:     if (rxData == 0x06) {
  3028                           ;stkvar	_rxData @ sp[(-1)+0]
  3029  003F4A  0EFF               	movlw	-1
  3030  003F4C  006F FF8C  F03C    	movff	plusw1,btemp
  3031  003F52  0E06               	movlw	6
  3032  003F54  183C               	xorwf	btemp,w,c
  3033  003F56  A4D8               	btfss	status,2,c
  3034  003F58  D03D               	goto	l8887
  3035                           
  3036                           ; BSR set to: 57
  3037                           ;gemsecs.c: 394:      V.failed_send = 0;
  3038  003F5A  0E87               	movlw	-121
  3039  003F5C  0100               	movlb	0	; () banked
  3040  003F5E  17BE               	andwf	(_V+87)& (0+255),f,b
  3041  003F60  D763               	goto	l8821
  3042  003F62                     l8873:
  3043                           
  3044                           ;gemsecs.c: 401:   *t_link = LINK_STATE_ERROR;
  3045                           ;stkvar	_t_link @ sp[(-1)+-1]
  3046  003F62  0EFE               	movlw	-2
  3047  003F64  50E3               	movf	plusw1,w,c
  3048  003F66  6ED9               	movwf	fsr2l,c
  3049  003F68  6ADA               	clrf	fsr2h,c
  3050  003F6A  0E06               	movlw	6
  3051  003F6C  6EDF               	movwf	indf2,c
  3052                           
  3053                           ;gemsecs.c: 402:   while ((uart1RxCount)) {
  3054  003F6E  D002               	goto	l8877
  3055  003F70                     l8875:
  3056                           
  3057                           ;gemsecs.c: 403:    UART1_Read();
  3058  003F70  EC2E  F02E         	call	_UART1_Read	;wreg free
  3059  003F74                     l8877:
  3060                           
  3061                           ;gemsecs.c: 402:   while ((uart1RxCount)) {
  3062  003F74  5036               	movf	_uart1RxCount,w,c	;volatile
  3063  003F76  B4D8               	btfsc	status,2,c
  3064  003F78  D02D               	goto	l8887
  3065  003F7A  D7FA               	goto	l8875
  3066  003F7C                     l8879:
  3067                           
  3068                           ;gemsecs.c: 409:   V.failed_send = 0;
  3069  003F7C  0E87               	movlw	-121
  3070  003F7E  0100               	movlb	0	; () banked
  3071  003F80  17BE               	andwf	(_V+87)& (0+255),f,b
  3072                           
  3073                           ;gemsecs.c: 410:   break;
  3074  003F82  D028               	goto	l8887
  3075  003F84                     l8881:
  3076                           
  3077                           ;gemsecs.c: 412:   *t_link = LINK_STATE_IDLE;
  3078                           ;stkvar	_t_link @ sp[(-1)+-1]
  3079  003F84  0EFE               	movlw	-2
  3080  003F86  50E3               	movf	plusw1,w,c
  3081  003F88  6ED9               	movwf	fsr2l,c
  3082  003F8A  6ADA               	clrf	fsr2h,c
  3083  003F8C  0E00               	movlw	0
  3084  003F8E                     L2:
  3085  003F8E  6EDF               	movwf	indf2,c
  3086                           
  3087                           ;gemsecs.c: 414:   break;
  3088  003F90  D021               	goto	l8887
  3089  003F92                     l8885:
  3090                           
  3091                           ;stkvar	_t_link @ sp[(-1)+-1]
  3092  003F92  0EFE               	movlw	-2
  3093  003F94  50E3               	movf	plusw1,w,c
  3094  003F96  6ED9               	movwf	fsr2l,c
  3095  003F98  6ADA               	clrf	fsr2h,c
  3096  003F9A  50DF               	movf	indf2,w,c
  3097  003F9C  6E46               	movwf	btemp+10,c
  3098  003F9E  6A47               	clrf	btemp+11,c
  3099                           
  3100                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3101                           ; Switch size 1, requested type "simple"
  3102                           ; Number of cases is 1, Range of values is 0 to 0
  3103                           ; switch strategies available:
  3104                           ; Name         Instructions Cycles
  3105                           ; simple_byte            4     3 (average)
  3106                           ;	Chosen strategy is simple_byte
  3107  003FA0  5047               	movf	btemp+11,w,c
  3108  003FA2  0A00               	xorlw	0	; case 0
  3109  003FA4  A4D8               	btfss	status,2,c
  3110  003FA6  D7EE               	goto	l8881
  3111                           
  3112                           ; Switch size 1, requested type "simple"
  3113                           ; Number of cases is 7, Range of values is 0 to 6
  3114                           ; switch strategies available:
  3115                           ; Name         Instructions Cycles
  3116                           ; simple_byte           22    12 (average)
  3117                           ;	Chosen strategy is simple_byte
  3118  003FA8  5046               	movf	btemp+10,w,c
  3119  003FAA  0A00               	xorlw	0	; case 0
  3120  003FAC  B4D8               	btfsc	status,2,c
  3121  003FAE  D6CD               	goto	l1672
  3122  003FB0  0A01               	xorlw	1	; case 1
  3123  003FB2  B4D8               	btfsc	status,2,c
  3124  003FB4  D6EB               	goto	l8797
  3125  003FB6  0A03               	xorlw	3	; case 2
  3126  003FB8  B4D8               	btfsc	status,2,c
  3127  003FBA  D73C               	goto	l8823
  3128  003FBC  0A01               	xorlw	1	; case 3
  3129  003FBE  B4D8               	btfsc	status,2,c
  3130  003FC0  D7AB               	goto	l8857
  3131  003FC2  0A07               	xorlw	7	; case 4
  3132  003FC4  B4D8               	btfsc	status,2,c
  3133  003FC6  D7DA               	goto	l8879
  3134  003FC8  0A01               	xorlw	1	; case 5
  3135  003FCA  B4D8               	btfsc	status,2,c
  3136  003FCC  D7CA               	goto	l8873
  3137  003FCE  0A03               	xorlw	3	; case 6
  3138  003FD0  A4D8               	btfss	status,2,c
  3139  003FD2  D7D8               	goto	l8881
  3140  003FD4                     l8887:
  3141                           
  3142                           ;gemsecs.c: 417:  return *t_link;
  3143                           ;stkvar	_t_link @ sp[(-1)+-1]
  3144  003FD4  0EFE               	movlw	-2
  3145  003FD6  50E3               	movf	plusw1,w,c
  3146  003FD8  6ED9               	movwf	fsr2l,c
  3147  003FDA  6ADA               	clrf	fsr2h,c
  3148  003FDC  50DF               	movf	indf2,w,c
  3149  003FDE  6E3C               	movwf	btemp,c
  3150                           
  3151                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3152  003FE0  52E5               	movf	postdec1,f,c
  3153  003FE2  52E5               	movf	postdec1,f,c
  3154  003FE4  0012               	return		;funcret
  3155  003FE6                     __end_of_t_protocol:
  3156                           	opt callstack 0
  3157                           
  3158 ;; *************** function _secs_II_message *****************
  3159 ;; Defined at:
  3160 ;;		line 477 in file "gemsecs.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;  stream          1  [STACK] unsigned char 
  3163 ;;  function        1  [STACK] unsigned char 
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;		None
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  7  [STACK] struct response_type
  3168 ;; Registers used:
  3169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  3170 ;; Tracked objects:
  3171 ;;		On entry : 3F/0
  3172 ;;		On exit  : 3E/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3179 ;;Total ram usage:        0 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:    3
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		_t_protocol
  3186 ;; This function uses a reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text2
  3190  0044CE                     __ptext2:
  3191                           	opt callstack 0
  3192  0044CE                     _secs_II_message:
  3193                           	opt callstack 0
  3194                           
  3195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  3196  0044CE  0E05               	movlw	5
  3197  0044D0  26E1               	addwf	fsr1l,f,c
  3198  0044D2  0E00               	movlw	0
  3199  0044D4  22E2               	addwfc	fsr1h,f,c
  3200                           
  3201                           ;gemsecs.c: 477: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 478: {;gemsecs.c: 479:  static response_type block;;gemsecs.c: 481:  V.abort = LINK_
      +                          ERROR_NONE;
  3202                           
  3203                           ;incstack = 0
  3204  0044D6  0100               	movlb	0	; () banked
  3205  0044D8  6BB8               	clrf	(_V+81)& (0+255),b
  3206                           
  3207                           ;gemsecs.c: 482:  V.queue = 0;
  3208  0044DA  99BF               	bcf	(_V+88)& (0+255),4,b
  3209                           
  3210                           ;gemsecs.c: 483:  block.respond = 0;
  3211  0044DC  9007               	bcf	secs_II_message@block+6,0,c
  3212                           
  3213                           ;gemsecs.c: 485:  switch (stream) {
  3214  0044DE  D0F3               	goto	l6607
  3215  0044E0                     l6475:
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;gemsecs.c: 489:    block.header = (uint8_t*) & H12[0];
  3219  0044E0  0E5B               	movlw	low _H12
  3220  0044E2  6E01               	movwf	secs_II_message@block,c
  3221  0044E4  0E01               	movlw	high _H12
  3222  0044E6  6E02               	movwf	secs_II_message@block+1,c
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;gemsecs.c: 490:    block.length = sizeof(header12);
  3226  0044E8  0E0F               	movlw	15
  3227  0044EA  6E03               	movwf	secs_II_message@block+2,c
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;gemsecs.c: 491:    H12[0].block.block.systemb = V.systemb;
  3231  0044EC  C0B1  F15F         	movff	_V+74,_H12+4
  3232  0044F0  C0B2  F160         	movff	_V+75,_H12+5
  3233  0044F4  C0B3  F161         	movff	_V+76,_H12+6
  3234  0044F8  C0B4  F162         	movff	_V+77,_H12+7
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;gemsecs.c: 492:    H10[0].block.block.systemb = V.systemb;
  3238  0044FC  C0B1  F102         	movff	_V+74,_H10+2
  3239  004500  C0B2  F103         	movff	_V+75,_H10+3
  3240  004504  C0B3  F104         	movff	_V+76,_H10+4
  3241  004508  C0B4  F105         	movff	_V+77,_H10+5
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;gemsecs.c: 493:    block.respond = 1;
  3245  00450C  8007               	bsf	secs_II_message@block+6,0,c
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;gemsecs.c: 494:    block.reply = (uint8_t*) & H10[0];
  3249  00450E  0E00               	movlw	low _H10
  3250  004510  6E04               	movwf	secs_II_message@block+3,c
  3251  004512  0E01               	movlw	high _H10
  3252  004514  6E05               	movwf	secs_II_message@block+4,c
  3253                           
  3254                           ;gemsecs.c: 495:    block.reply_length = sizeof(header10);
  3255  004516  0E0D               	movlw	13
  3256  004518                     L6:
  3257  004518  6E06               	movwf	secs_II_message@block+5,c
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;gemsecs.c: 496:    V.queue = 1;
  3261  00451A  89BF               	bsf	(_V+88)& (0+255),4,b
  3262                           
  3263                           ;gemsecs.c: 497:    break;
  3264  00451C  D0ED               	goto	l6609
  3265  00451E                     l6489:
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;gemsecs.c: 499:    block.header = (uint8_t*) & H14[0];
  3269  00451E  0EA8               	movlw	low _H14
  3270  004520  6E01               	movwf	secs_II_message@block,c
  3271  004522  0E01               	movlw	high _H14
  3272  004524  6E02               	movwf	secs_II_message@block+1,c
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;gemsecs.c: 500:    block.length = sizeof(header14);
  3276  004526  0E11               	movlw	17
  3277  004528  6E03               	movwf	secs_II_message@block+2,c
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;gemsecs.c: 501:    H14[0].block.block.systemb = V.systemb;
  3281  00452A  C0B1  F1AE         	movff	_V+74,_H14+6
  3282  00452E  C0B2  F1AF         	movff	_V+75,_H14+7
  3283  004532  C0B3  F1B0         	movff	_V+76,_H14+8
  3284  004536  C0B4  F1B1         	movff	_V+77,_H14+9
  3285                           
  3286                           ;gemsecs.c: 502:    break;
  3287  00453A  D0DE               	goto	l6609
  3288  00453C                     l6495:
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;gemsecs.c: 504:    block.header = (uint8_t*) & H17[0];
  3292  00453C  0E94               	movlw	low _H17
  3293  00453E  6E01               	movwf	secs_II_message@block,c
  3294  004540  0E01               	movlw	high _H17
  3295  004542  6E02               	movwf	secs_II_message@block+1,c
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;gemsecs.c: 505:    block.length = sizeof(header17);
  3299  004544  0E14               	movlw	20
  3300  004546  6E03               	movwf	secs_II_message@block+2,c
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;gemsecs.c: 506:    H17[0].block.block.systemb = V.systemb;
  3304  004548  C0B1  F19D         	movff	_V+74,_H17+9
  3305  00454C  C0B2  F19E         	movff	_V+75,_H17+10
  3306  004550  C0B3  F19F         	movff	_V+76,_H17+11
  3307  004554  C0B4  F1A0         	movff	_V+77,_H17+12
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;gemsecs.c: 507:    H12[1].block.block.systemb = V.systemb;
  3311  004558  C0B1  F16E         	movff	_V+74,_H12+19
  3312  00455C  C0B2  F16F         	movff	_V+75,_H12+20
  3313  004560  C0B3  F170         	movff	_V+76,_H12+21
  3314  004564  C0B4  F171         	movff	_V+77,_H12+22
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;gemsecs.c: 508:    block.respond = 1;
  3318  004568  8007               	bsf	secs_II_message@block+6,0,c
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;gemsecs.c: 509:    block.reply = (uint8_t*) & H12[1];
  3322  00456A  0E6A               	movlw	low (_H12+15)
  3323  00456C  6E04               	movwf	secs_II_message@block+3,c
  3324  00456E  0E01               	movlw	high (_H12+15)
  3325  004570  6E05               	movwf	secs_II_message@block+4,c
  3326                           
  3327                           ;gemsecs.c: 510:    block.reply_length = sizeof(header12);
  3328  004572  0E0F               	movlw	15
  3329  004574  D7D1               	goto	L6
  3330  004576                     l6509:
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;gemsecs.c: 514:    block.header = (uint8_t*) & H10[2];
  3334  004576  0E1A               	movlw	low (_H10+26)
  3335  004578  6E01               	movwf	secs_II_message@block,c
  3336  00457A  0E01               	movlw	high (_H10+26)
  3337  00457C  6E02               	movwf	secs_II_message@block+1,c
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;gemsecs.c: 515:    block.length = sizeof(header10);
  3341  00457E  0E0D               	movlw	13
  3342  004580  6E03               	movwf	secs_II_message@block+2,c
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;gemsecs.c: 516:    H10[2].block.block.systemb = V.systemb;
  3346  004582  C0B1  F11C         	movff	_V+74,_H10+28
  3347  004586  C0B2  F11D         	movff	_V+75,_H10+29
  3348  00458A  C0B3  F11E         	movff	_V+76,_H10+30
  3349  00458E  C0B4  F11F         	movff	_V+77,_H10+31
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;gemsecs.c: 517:    V.abort = LINK_ERROR_ABORT;
  3353  004592  0E07               	movlw	7
  3354  004594  6FB8               	movwf	(_V+81)& (0+255),b
  3355                           
  3356                           ;gemsecs.c: 518:    break;
  3357  004596  D0B0               	goto	l6609
  3358  004598                     l6519:
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;stkvar	_function @ sp[(0)+-7]
  3362  004598  0EF9               	movlw	-7
  3363  00459A  50E3               	movf	plusw1,w,c
  3364  00459C  6E46               	movwf	btemp+10,c
  3365  00459E  6A47               	clrf	btemp+11,c
  3366                           
  3367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3368                           ; Switch size 1, requested type "simple"
  3369                           ; Number of cases is 1, Range of values is 0 to 0
  3370                           ; switch strategies available:
  3371                           ; Name         Instructions Cycles
  3372                           ; simple_byte            4     3 (average)
  3373                           ;	Chosen strategy is simple_byte
  3374  0045A0  5047               	movf	btemp+11,w,c
  3375  0045A2  0A00               	xorlw	0	; case 0
  3376  0045A4  A4D8               	btfss	status,2,c
  3377  0045A6  D7E7               	goto	l6509
  3378                           
  3379                           ; BSR set to: 0
  3380                           ; Switch size 1, requested type "simple"
  3381                           ; Number of cases is 3, Range of values is 1 to 13
  3382                           ; switch strategies available:
  3383                           ; Name         Instructions Cycles
  3384                           ; simple_byte           10     6 (average)
  3385                           ;	Chosen strategy is simple_byte
  3386  0045A8  5046               	movf	btemp+10,w,c
  3387  0045AA  0A01               	xorlw	1	; case 1
  3388  0045AC  B4D8               	btfsc	status,2,c
  3389  0045AE  D798               	goto	l6475
  3390  0045B0  0A02               	xorlw	2	; case 3
  3391  0045B2  B4D8               	btfsc	status,2,c
  3392  0045B4  D7B4               	goto	l6489
  3393  0045B6  0A0E               	xorlw	14	; case 13
  3394  0045B8  B4D8               	btfsc	status,2,c
  3395  0045BA  D7C0               	goto	l6495
  3396  0045BC  D7DC               	goto	l6509
  3397  0045BE                     l6521:
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;gemsecs.c: 524:    block.header = (uint8_t*) & H24[0];
  3401  0045BE  0E79               	movlw	low _H24
  3402  0045C0  6E01               	movwf	secs_II_message@block,c
  3403  0045C2  0E01               	movlw	high _H24
  3404  0045C4  6E02               	movwf	secs_II_message@block+1,c
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;gemsecs.c: 525:    block.length = sizeof(header24);
  3408  0045C6  0E1B               	movlw	27
  3409  0045C8  6E03               	movwf	secs_II_message@block+2,c
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;gemsecs.c: 526:    H24[0].block.block.systemb = V.systemb;
  3413  0045CA  C0B1  F189         	movff	_V+74,_H24+16
  3414  0045CE  C0B2  F18A         	movff	_V+75,_H24+17
  3415  0045D2  C0B3  F18B         	movff	_V+76,_H24+18
  3416  0045D6  C0B4  F18C         	movff	_V+77,_H24+19
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;gemsecs.c: 527:    H24[0].data[12] = 12;
  3420  0045DA  0E0C               	movlw	12
  3421  0045DC  0101               	movlb	1	; () banked
  3422  0045DE  6F87               	movwf	(_H24+14)& (0+255),b
  3423                           
  3424                           ;gemsecs.c: 528:    break;
  3425  0045E0  D08B               	goto	l6609
  3426  0045E2                     l6539:
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;stkvar	_function @ sp[(0)+-7]
  3430  0045E2  0EF9               	movlw	-7
  3431  0045E4  50E3               	movf	plusw1,w,c
  3432  0045E6  6E46               	movwf	btemp+10,c
  3433  0045E8  6A47               	clrf	btemp+11,c
  3434                           
  3435                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3436                           ; Switch size 1, requested type "simple"
  3437                           ; Number of cases is 1, Range of values is 0 to 0
  3438                           ; switch strategies available:
  3439                           ; Name         Instructions Cycles
  3440                           ; simple_byte            4     3 (average)
  3441                           ;	Chosen strategy is simple_byte
  3442  0045EA  5047               	movf	btemp+11,w,c
  3443  0045EC  0A00               	xorlw	0	; case 0
  3444  0045EE  A4D8               	btfss	status,2,c
  3445  0045F0  D7C2               	goto	l6509
  3446                           
  3447                           ; BSR set to: 0
  3448                           ; Switch size 1, requested type "simple"
  3449                           ; Number of cases is 1, Range of values is 17 to 17
  3450                           ; switch strategies available:
  3451                           ; Name         Instructions Cycles
  3452                           ; simple_byte            4     3 (average)
  3453                           ;	Chosen strategy is simple_byte
  3454  0045F2  5046               	movf	btemp+10,w,c
  3455  0045F4  0A11               	xorlw	17	; case 17
  3456  0045F6  B4D8               	btfsc	status,2,c
  3457  0045F8  D7E2               	goto	l6521
  3458  0045FA  D7BD               	goto	l6509
  3459  0045FC                     l6541:
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;gemsecs.c: 540:    block.header = (uint8_t*) & H13[0];
  3463  0045FC  0EB9               	movlw	low _H13
  3464  0045FE  6E01               	movwf	secs_II_message@block,c
  3465  004600  0E01               	movlw	high _H13
  3466  004602  6E02               	movwf	secs_II_message@block+1,c
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;gemsecs.c: 541:    block.length = sizeof(header13);
  3470  004604  0E10               	movlw	16
  3471  004606  6E03               	movwf	secs_II_message@block+2,c
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;gemsecs.c: 542:    H13[0].block.block.systemb = V.systemb;
  3475  004608  C0B1  F1BE         	movff	_V+74,_H13+5
  3476  00460C  C0B2  F1BF         	movff	_V+75,_H13+6
  3477  004610  C0B3  F1C0         	movff	_V+76,_H13+7
  3478  004614  C0B4  F1C1         	movff	_V+77,_H13+8
  3479                           
  3480                           ;gemsecs.c: 543:    break;
  3481  004618  D06F               	goto	l6609
  3482  00461A                     l6557:
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;stkvar	_function @ sp[(0)+-7]
  3486  00461A  0EF9               	movlw	-7
  3487  00461C  50E3               	movf	plusw1,w,c
  3488  00461E  6E46               	movwf	btemp+10,c
  3489  004620  6A47               	clrf	btemp+11,c
  3490                           
  3491                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3492                           ; Switch size 1, requested type "simple"
  3493                           ; Number of cases is 1, Range of values is 0 to 0
  3494                           ; switch strategies available:
  3495                           ; Name         Instructions Cycles
  3496                           ; simple_byte            4     3 (average)
  3497                           ;	Chosen strategy is simple_byte
  3498  004622  5047               	movf	btemp+11,w,c
  3499  004624  0A00               	xorlw	0	; case 0
  3500  004626  A4D8               	btfss	status,2,c
  3501  004628  D7A6               	goto	l6509
  3502                           
  3503                           ; BSR set to: 0
  3504                           ; Switch size 1, requested type "simple"
  3505                           ; Number of cases is 1, Range of values is 11 to 11
  3506                           ; switch strategies available:
  3507                           ; Name         Instructions Cycles
  3508                           ; simple_byte            4     3 (average)
  3509                           ;	Chosen strategy is simple_byte
  3510  00462A  5046               	movf	btemp+10,w,c
  3511  00462C  0A0B               	xorlw	11	; case 11
  3512  00462E  B4D8               	btfsc	status,2,c
  3513  004630  D7E5               	goto	l6541
  3514  004632  D7A1               	goto	l6509
  3515  004634                     l6569:
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;stkvar	_function @ sp[(0)+-7]
  3519  004634  0EF9               	movlw	-7
  3520  004636  50E3               	movf	plusw1,w,c
  3521  004638  6E46               	movwf	btemp+10,c
  3522  00463A  6A47               	clrf	btemp+11,c
  3523                           
  3524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3525                           ; Switch size 1, requested type "simple"
  3526                           ; Number of cases is 1, Range of values is 0 to 0
  3527                           ; switch strategies available:
  3528                           ; Name         Instructions Cycles
  3529                           ; simple_byte            4     3 (average)
  3530                           ;	Chosen strategy is simple_byte
  3531  00463C  5047               	movf	btemp+11,w,c
  3532  00463E  0A00               	xorlw	0	; case 0
  3533  004640  A4D8               	btfss	status,2,c
  3534  004642  D799               	goto	l6509
  3535                           
  3536                           ; BSR set to: 0
  3537                           ; Switch size 1, requested type "simple"
  3538                           ; Number of cases is 7, Range of values is 1 to 13
  3539                           ; switch strategies available:
  3540                           ; Name         Instructions Cycles
  3541                           ; simple_byte           22    12 (average)
  3542                           ;	Chosen strategy is simple_byte
  3543  004644  5046               	movf	btemp+10,w,c
  3544  004646  0A01               	xorlw	1	; case 1
  3545  004648  B4D8               	btfsc	status,2,c
  3546  00464A  D056               	goto	l6609
  3547  00464C  0A02               	xorlw	2	; case 3
  3548  00464E  B4D8               	btfsc	status,2,c
  3549  004650  D053               	goto	l6609
  3550  004652  0A06               	xorlw	6	; case 5
  3551  004654  B4D8               	btfsc	status,2,c
  3552  004656  D050               	goto	l6609
  3553  004658  0A02               	xorlw	2	; case 7
  3554  00465A  B4D8               	btfsc	status,2,c
  3555  00465C  D04D               	goto	l6609
  3556  00465E  0A0E               	xorlw	14	; case 9
  3557  004660  B4D8               	btfsc	status,2,c
  3558  004662  D04A               	goto	l6609
  3559  004664  0A02               	xorlw	2	; case 11
  3560  004666  B4D8               	btfsc	status,2,c
  3561  004668  D047               	goto	l6609
  3562  00466A  0A06               	xorlw	6	; case 13
  3563  00466C  B4D8               	btfsc	status,2,c
  3564  00466E  D044               	goto	l6609
  3565  004670  D782               	goto	l6509
  3566  004672                     l6571:
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;gemsecs.c: 579:    block.header = (uint8_t*) & H12[0];
  3570  004672  0E5B               	movlw	low _H12
  3571  004674  6E01               	movwf	secs_II_message@block,c
  3572  004676  0E01               	movlw	high _H12
  3573  004678  6E02               	movwf	secs_II_message@block+1,c
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;gemsecs.c: 580:    block.length = sizeof(header12);
  3577  00467A  0E0F               	movlw	15
  3578  00467C  6E03               	movwf	secs_II_message@block+2,c
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;gemsecs.c: 581:    H12[0].block.block.systemb = V.systemb;
  3582  00467E  C0B1  F15F         	movff	_V+74,_H12+4
  3583  004682  C0B2  F160         	movff	_V+75,_H12+5
  3584  004686  C0B3  F161         	movff	_V+76,_H12+6
  3585  00468A  C0B4  F162         	movff	_V+77,_H12+7
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;gemsecs.c: 582:    H53[0].block.block.systemb = V.systemb;
  3589  00468E  C0B1  F3F3         	movff	_V+74,_H53+45
  3590  004692  C0B2  F3F4         	movff	_V+75,_H53+46
  3591  004696  C0B3  F3F5         	movff	_V+76,_H53+47
  3592  00469A  C0B4  F3F6         	movff	_V+77,_H53+48
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;gemsecs.c: 583:    block.respond = 1;
  3596  00469E  8007               	bsf	secs_II_message@block+6,0,c
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;gemsecs.c: 584:    block.reply = (uint8_t*) & H53[0];
  3600  0046A0  0EC6               	movlw	low _H53
  3601  0046A2  6E04               	movwf	secs_II_message@block+3,c
  3602  0046A4  0E03               	movlw	high _H53
  3603  0046A6  6E05               	movwf	secs_II_message@block+4,c
  3604                           
  3605                           ;gemsecs.c: 585:    block.reply_length = sizeof(header53);
  3606  0046A8  0E38               	movlw	56
  3607  0046AA  D736               	goto	L6
  3608  0046AC                     l6595:
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;stkvar	_function @ sp[(0)+-7]
  3612  0046AC  0EF9               	movlw	-7
  3613  0046AE  50E3               	movf	plusw1,w,c
  3614  0046B0  6E46               	movwf	btemp+10,c
  3615  0046B2  6A47               	clrf	btemp+11,c
  3616                           
  3617                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3618                           ; Switch size 1, requested type "simple"
  3619                           ; Number of cases is 1, Range of values is 0 to 0
  3620                           ; switch strategies available:
  3621                           ; Name         Instructions Cycles
  3622                           ; simple_byte            4     3 (average)
  3623                           ;	Chosen strategy is simple_byte
  3624  0046B4  5047               	movf	btemp+11,w,c
  3625  0046B6  0A00               	xorlw	0	; case 0
  3626  0046B8  A4D8               	btfss	status,2,c
  3627  0046BA  D75D               	goto	l6509
  3628                           
  3629                           ; BSR set to: 0
  3630                           ; Switch size 1, requested type "simple"
  3631                           ; Number of cases is 1, Range of values is 1 to 1
  3632                           ; switch strategies available:
  3633                           ; Name         Instructions Cycles
  3634                           ; simple_byte            4     3 (average)
  3635                           ;	Chosen strategy is simple_byte
  3636  0046BC  5046               	movf	btemp+10,w,c
  3637  0046BE  0A01               	xorlw	1	; case 1
  3638  0046C0  B4D8               	btfsc	status,2,c
  3639  0046C2  D7D7               	goto	l6571
  3640  0046C4  D758               	goto	l6509
  3641  0046C6                     l6607:
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;stkvar	_stream @ sp[(0)+-6]
  3645  0046C6  0EFA               	movlw	-6
  3646  0046C8  50E3               	movf	plusw1,w,c
  3647  0046CA  6E46               	movwf	btemp+10,c
  3648  0046CC  6A47               	clrf	btemp+11,c
  3649                           
  3650                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3651                           ; Switch size 1, requested type "simple"
  3652                           ; Number of cases is 1, Range of values is 0 to 0
  3653                           ; switch strategies available:
  3654                           ; Name         Instructions Cycles
  3655                           ; simple_byte            4     3 (average)
  3656                           ;	Chosen strategy is simple_byte
  3657  0046CE  5047               	movf	btemp+11,w,c
  3658  0046D0  0A00               	xorlw	0	; case 0
  3659  0046D2  A4D8               	btfss	status,2,c
  3660  0046D4  D750               	goto	l6509
  3661                           
  3662                           ; BSR set to: 0
  3663                           ; Switch size 1, requested type "simple"
  3664                           ; Number of cases is 5, Range of values is 1 to 10
  3665                           ; switch strategies available:
  3666                           ; Name         Instructions Cycles
  3667                           ; simple_byte           16     9 (average)
  3668                           ;	Chosen strategy is simple_byte
  3669  0046D6  5046               	movf	btemp+10,w,c
  3670  0046D8  0A01               	xorlw	1	; case 1
  3671  0046DA  B4D8               	btfsc	status,2,c
  3672  0046DC  D75D               	goto	l6519
  3673  0046DE  0A03               	xorlw	3	; case 2
  3674  0046E0  B4D8               	btfsc	status,2,c
  3675  0046E2  D77F               	goto	l6539
  3676  0046E4  0A04               	xorlw	4	; case 6
  3677  0046E6  B4D8               	btfsc	status,2,c
  3678  0046E8  D798               	goto	l6557
  3679  0046EA  0A0F               	xorlw	15	; case 9
  3680  0046EC  B4D8               	btfsc	status,2,c
  3681  0046EE  D7A2               	goto	l6569
  3682  0046F0  0A03               	xorlw	3	; case 10
  3683  0046F2  B4D8               	btfsc	status,2,c
  3684  0046F4  D7DB               	goto	l6595
  3685  0046F6  D73F               	goto	l6509
  3686  0046F8                     l6609:
  3687                           
  3688                           ;gemsecs.c: 604:  return(block);
  3689  0046F8  EE20  F001         	lfsr	2,secs_II_message@block
  3690                           
  3691                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  3692  0046FC  0E07               	movlw	7
  3693  0046FE  6E3C               	movwf	btemp,c
  3694  004700  0EF9               	movlw	-7
  3695  004702                     us351999:
  3696  004702  006F FF7B FFE3     	movff	postinc2,plusw1
  3697  004708  28E8               	incf	wreg,w,c
  3698  00470A  2E3C               	decfsz	btemp,f,c
  3699  00470C  D7FA               	bra	us351999
  3700                           
  3701                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  3702  00470E  0012               	return		;funcret
  3703  004710                     __end_of_secs_II_message:
  3704                           	opt callstack 0
  3705                           
  3706 ;; *************** function _sprintf *****************
  3707 ;; Defined at:
  3708 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;  s               1  [STACK] PTR unsigned char 
  3711 ;;		 -> V(93), 
  3712 ;;  fmt             1  [STACK] PTR const unsigned char 
  3713 ;;		 -> STR_15(21), STR_14(21), STR_13(6), STR_12(17), 
  3714 ;;		 -> STR_11(21), STR_10(20), STR_9(23), STR_8(6), 
  3715 ;;		 -> STR_7(6), STR_6(14), STR_5(19), STR_4(15), 
  3716 ;;		 -> STR_2(12), STR_1(17), 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  f               5  [STACK] struct _IO_FILE
  3719 ;;  ap              2  [STACK] PTR void [1]
  3720 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3721 ;;  ret             2    0        int 
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  2  [STACK] int 
  3724 ;; Registers used:
  3725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  3726 ;; Tracked objects:
  3727 ;;		On entry : 3F/0
  3728 ;;		On exit  : 3F/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3735 ;;Total ram usage:        0 bytes
  3736 ;; Hardware stack levels used:    1
  3737 ;; Hardware stack levels required when called:   11
  3738 ;; This function calls:
  3739 ;;		_vfprintf
  3740 ;; This function is called by:
  3741 ;;		_main
  3742 ;; This function uses a reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text3
  3746  005070                     __ptext3:
  3747                           	opt callstack 0
  3748  005070                     _sprintf:
  3749                           	opt callstack 0
  3750                           
  3751                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3752  005070  0E07               	movlw	7
  3753  005072  26E1               	addwf	fsr1l,f,c
  3754  005074  0E00               	movlw	0
  3755  005076  22E2               	addwfc	fsr1h,f,c
  3756                           
  3757                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  3758                           
  3759                           ;incstack = 0
  3760  005078  0EF6               	movlw	246
  3761  00507A  24E1               	addwf	fsr1l,w,c
  3762  00507C  6E46               	movwf	btemp+10,c
  3763  00507E  0EFF               	movlw	255
  3764  005080  20E2               	addwfc	fsr1h,w,c
  3765  005082  6E47               	movwf	btemp+11,c
  3766                           
  3767                           ;stkvar	_ap @ sp[(-7)+5]
  3768  005084  0EFF               	movlw	-1
  3769  005086  0060  F11F  FFE3   	movff	btemp+11,plusw1
  3770  00508C  0EFE               	movlw	-2
  3771  00508E  0060  F11B  FFE3   	movff	btemp+10,plusw1
  3772                           
  3773                           ;stkvar	_s @ sp[(-7)+-2]
  3774  005094  0EF7               	movlw	-9
  3775  005096  006F FF8C  F047    	movff	plusw1,btemp+11
  3776                           
  3777                           ;stkvar	_f @ sp[(-7)+0]
  3778  00509C  0EF9               	movlw	-7
  3779  00509E  0060  F11F  FFE3   	movff	btemp+11,plusw1
  3780                           
  3781                           ;stkvar	_f @ sp[(-7)+0]
  3782  0050A4  0EFA               	movlw	250
  3783  0050A6  24E1               	addwf	fsr1l,w,c
  3784  0050A8  6ED9               	movwf	fsr2l,c
  3785  0050AA  0EFF               	movlw	255
  3786  0050AC  20E2               	addwfc	fsr1h,w,c
  3787  0050AE  6EDA               	movwf	fsr2h,c
  3788  0050B0  0E00               	movlw	0
  3789  0050B2  6EDE               	movwf	postinc2,c
  3790  0050B4  0E00               	movlw	0
  3791  0050B6  6EDD               	movwf	postdec2,c
  3792                           
  3793                           ;stkvar	_f @ sp[(-7)+0]
  3794  0050B8  0EFC               	movlw	252
  3795  0050BA  24E1               	addwf	fsr1l,w,c
  3796  0050BC  6ED9               	movwf	fsr2l,c
  3797  0050BE  0EFF               	movlw	255
  3798  0050C0  20E2               	addwfc	fsr1h,w,c
  3799  0050C2  6EDA               	movwf	fsr2h,c
  3800  0050C4  0E00               	movlw	0
  3801  0050C6  6EDE               	movwf	postinc2,c
  3802  0050C8  0E00               	movlw	0
  3803  0050CA  6EDD               	movwf	postdec2,c
  3804                           
  3805                           ;stkvar	_ap @ sp[(-7)+5]
  3806  0050CC  0EFE               	movlw	254
  3807  0050CE  24E1               	addwf	fsr1l,w,c
  3808  0050D0  6E3C               	movwf	btemp,c
  3809  0050D2  0EFF               	movlw	255
  3810  0050D4  20E2               	addwfc	fsr1h,w,c
  3811  0050D6  6E3D               	movwf	btemp+1,c
  3812  0050D8  0060  F0F3  FFE6   	movff	btemp,postinc1
  3813  0050DE  0060  F0F7  FFE6   	movff	btemp+1,postinc1
  3814                           
  3815                           ;stkvar	_fmt @ sp[(-9)+-3]
  3816  0050E4  0EF4               	movlw	-12
  3817  0050E6  50E3               	movf	plusw1,w,c
  3818  0050E8  6EE6               	movwf	postinc1,c
  3819                           
  3820                           ;stkvar	_f @ sp[(-10)+0]
  3821  0050EA  0EF6               	movlw	246
  3822  0050EC  24E1               	addwf	fsr1l,w,c
  3823  0050EE  6E3C               	movwf	btemp,c
  3824  0050F0  0EFF               	movlw	255
  3825  0050F2  20E2               	addwfc	fsr1h,w,c
  3826  0050F4  6E3D               	movwf	btemp+1,c
  3827  0050F6  0060  F0F3  FFE6   	movff	btemp,postinc1
  3828  0050FC  0060  F0F7  FFE6   	movff	btemp+1,postinc1
  3829  005102  EC36  F02A         	call	_vfprintf	;wreg free
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;stkvar	_f @ sp[(-7)+0]
  3833  005106  0EFA               	movlw	250
  3834  005108  24E1               	addwf	fsr1l,w,c
  3835  00510A  6ED9               	movwf	fsr2l,c
  3836  00510C  0EFF               	movlw	255
  3837  00510E  20E2               	addwfc	fsr1h,w,c
  3838  005110  6EDA               	movwf	fsr2h,c
  3839  005112  50DF               	movf	indf2,w,c
  3840  005114  6E47               	movwf	btemp+11,c
  3841                           
  3842                           ;stkvar	_s @ sp[(-7)+-2]
  3843  005116  0EF7               	movlw	-9
  3844  005118  50E3               	movf	plusw1,w,c
  3845  00511A  2447               	addwf	btemp+11,w,c
  3846  00511C  6ED9               	movwf	fsr2l,c
  3847  00511E  6ADA               	clrf	fsr2h,c
  3848  005120  0E00               	movlw	0
  3849  005122  6EDF               	movwf	indf2,c
  3850                           
  3851                           ; BSR set to: 0
  3852                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 2, vargsize = 0
  3853  005124  0EF9               	movlw	249
  3854  005126  26E1               	addwf	fsr1l,f,c
  3855  005128  0EFF               	movlw	255
  3856  00512A  22E2               	addwfc	fsr1h,f,c
  3857  00512C  52E5               	movf	postdec1,f,c
  3858  00512E  50E7               	movf	indf1,w,c
  3859  005130  5EE1               	subwf	fsr1l,f,c
  3860  005132  0E00               	movlw	0
  3861  005134  5AE2               	subwfb	fsr1h,f,c
  3862  005136  0012               	return		;funcret
  3863  005138                     __end_of_sprintf:
  3864                           	opt callstack 0
  3865                           
  3866 ;; *************** function _r_protocol *****************
  3867 ;; Defined at:
  3868 ;;		line 198 in file "gemsecs.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  r_link          1  [STACK] PTR enum E16173
  3871 ;;		 -> V(93), 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  rxData          1  [STACK] unsigned char 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1  [STACK] enum E16913
  3876 ;; Registers used:
  3877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3887 ;;Total ram usage:        0 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; Hardware stack levels required when called:    5
  3890 ;; This function calls:
  3891 ;;		_StartTimer
  3892 ;;		_TimerDone
  3893 ;;		_UART1_Read
  3894 ;;		_UART1_Write
  3895 ;;		_UART1_is_rx_ready
  3896 ;;		_WaitMs
  3897 ;;		_run_checksum
  3898 ;;		_secs_gem_state
  3899 ;;		_secs_send
  3900 ;; This function is called by:
  3901 ;;		_main
  3902 ;; This function uses a reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text4
  3906  003454                     __ptext4:
  3907                           	opt callstack 0
  3908  003454                     _r_protocol:
  3909                           	opt callstack 0
  3910                           
  3911                           ; BSR set to: 0
  3912                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3913  003454  52E6               	movf	postinc1,f,c
  3914                           
  3915                           ;gemsecs.c: 198: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 199: {;gemsecs.
      +                          c: 200:  uint8_t rxData;;gemsecs.c: 201:  static uint8_t rxData_l = 0, retry = 3;;gemsec
      +                          s.c: 203:  switch (*r_link) {
  3916                           
  3917                           ;incstack = 0
  3918  003456  D178               	goto	l8771
  3919  003458                     l8643:
  3920                           
  3921                           ;gemsecs.c: 205:   if (UART1_is_rx_ready()) {
  3922  003458  EC2D  F032         	call	_UART1_is_rx_ready	;wreg free
  3923  00345C  503C               	movf	btemp,w,c
  3924  00345E  B4D8               	btfsc	status,2,c
  3925  003460  D194               	goto	l8773
  3926                           
  3927                           ;gemsecs.c: 206:    rxData = UART1_Read();
  3928  003462  EC2E  F02E         	call	_UART1_Read	;wreg free
  3929                           
  3930                           ;stkvar	_rxData @ sp[(-1)+0]
  3931  003466  0EFF               	movlw	-1
  3932  003468  0060  F0F3  FFE3   	movff	btemp,plusw1
  3933                           
  3934                           ; BSR set to: 57
  3935                           ;gemsecs.c: 207:    if (rxData == 0x05) {
  3936                           ;stkvar	_rxData @ sp[(-1)+0]
  3937  00346E  0EFF               	movlw	-1
  3938  003470  006F FF8C  F03C    	movff	plusw1,btemp
  3939  003476  0E05               	movlw	5
  3940  003478  183C               	xorwf	btemp,w,c
  3941  00347A  A4D8               	btfss	status,2,c
  3942  00347C  D186               	goto	l8773
  3943                           
  3944                           ; BSR set to: 57
  3945                           ;gemsecs.c: 208:     V.error = LINK_ERROR_NONE;
  3946  00347E  0100               	movlb	0	; () banked
  3947  003480  6BB7               	clrf	(_V+80)& (0+255),b
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;gemsecs.c: 209:     *r_link = LINK_STATE_ENQ;
  3951                           ;stkvar	_r_link @ sp[(-1)+-1]
  3952  003482  0EFE               	movlw	-2
  3953  003484  50E3               	movf	plusw1,w,c
  3954  003486  6ED9               	movwf	fsr2l,c
  3955  003488  6ADA               	clrf	fsr2h,c
  3956  00348A  0E01               	movlw	1
  3957  00348C  D144               	goto	L10
  3958  00348E                     l1632:
  3959                           
  3960                           ;gemsecs.c: 214:   rxData_l = 0;
  3961  00348E  6A2D               	clrf	r_protocol@rxData_l,c
  3962                           
  3963                           ;gemsecs.c: 215:   UART1_Write(0x04);
  3964  003490  0E04               	movlw	4
  3965  003492  6EE6               	movwf	postinc1,c
  3966  003494  ECF0  F02D         	call	_UART1_Write	;wreg free
  3967                           
  3968                           ; BSR set to: 57
  3969                           ;gemsecs.c: 216:   StartTimer(TMR_T2, 2000);
  3970  003498  0ED0               	movlw	208
  3971  00349A  6EE6               	movwf	postinc1,c
  3972  00349C  0E07               	movlw	7
  3973  00349E  6EE6               	movwf	postinc1,c
  3974  0034A0  0E02               	movlw	2
  3975  0034A2  6EE6               	movwf	postinc1,c
  3976  0034A4  EC6D  F02E         	call	_StartTimer	;wreg free
  3977                           
  3978                           ;gemsecs.c: 217:   *r_link = LINK_STATE_EOT;
  3979                           ;stkvar	_r_link @ sp[(-1)+-1]
  3980  0034A8  0EFE               	movlw	-2
  3981  0034AA  50E3               	movf	plusw1,w,c
  3982  0034AC  6ED9               	movwf	fsr2l,c
  3983  0034AE  6ADA               	clrf	fsr2h,c
  3984  0034B0  0E02               	movlw	2
  3985  0034B2  6EDF               	movwf	indf2,c
  3986                           
  3987                           ;gemsecs.c: 219:   WaitMs(5);
  3988  0034B4  0E05               	movlw	5
  3989  0034B6  6EE6               	movwf	postinc1,c
  3990  0034B8  0E00               	movlw	0
  3991  0034BA  6EE6               	movwf	postinc1,c
  3992  0034BC  EC29  F02F         	call	_WaitMs	;wreg free
  3993                           
  3994                           ;gemsecs.c: 222:   H10[3].block.block.systemb = V.ticks;
  3995  0034C0  C0AD  F129         	movff	_V+70,_H10+41
  3996  0034C4  C0AE  F12A         	movff	_V+71,_H10+42
  3997  0034C8  C0AF  F12B         	movff	_V+72,_H10+43
  3998  0034CC  C0B0  F12C         	movff	_V+73,_H10+44
  3999                           
  4000                           ;gemsecs.c: 223:   secs_send((uint8_t*) & H10[3], sizeof(header10), 1, 1);
  4001  0034D0  0E01               	movlw	1
  4002  0034D2  6EE6               	movwf	postinc1,c
  4003  0034D4  0E01               	movlw	1
  4004  0034D6  6EE6               	movwf	postinc1,c
  4005  0034D8  0E0D               	movlw	13
  4006  0034DA  6EE6               	movwf	postinc1,c
  4007  0034DC  0E27               	movlw	low (_H10+39)
  4008  0034DE  6EE6               	movwf	postinc1,c
  4009  0034E0  0E01               	movlw	high (_H10+39)
  4010  0034E2  6EE6               	movwf	postinc1,c
  4011  0034E4  EC33  F021         	call	_secs_send	;wreg free
  4012                           
  4013                           ;gemsecs.c: 225:   break;
  4014  0034E8  D150               	goto	l8773
  4015  0034EA                     l8665:
  4016                           
  4017                           ;gemsecs.c: 227:   if (TimerDone(TMR_T2)) {
  4018  0034EA  0E02               	movlw	2
  4019  0034EC  6EE6               	movwf	postinc1,c
  4020  0034EE  ECDF  F030         	call	_TimerDone	;wreg free
  4021  0034F2  503C               	movf	btemp,w,c
  4022  0034F4  B4D8               	btfsc	status,2,c
  4023  0034F6  D017               	goto	l8675
  4024                           
  4025                           ;gemsecs.c: 228:    if (!retry--) {
  4026  0034F8  065E               	decf	r_protocol@retry,f,c
  4027  0034FA  285E               	incf	r_protocol@retry,w,c
  4028  0034FC  A4D8               	btfss	status,2,c
  4029  0034FE  D00D               	goto	l8673
  4030                           
  4031                           ;gemsecs.c: 229:     V.error = LINK_ERROR_T2;
  4032  003500  0E02               	movlw	2
  4033  003502  0100               	movlb	0	; () banked
  4034  003504  6FB7               	movwf	(_V+80)& (0+255),b
  4035                           
  4036                           ;gemsecs.c: 230:     V.failed_receive = 1;
  4037  003506  51BF               	movf	(_V+88)& (0+255),w,b
  4038  003508  0BF0               	andlw	-16
  4039  00350A  0901               	iorlw	1
  4040  00350C  6FBF               	movwf	(_V+88)& (0+255),b
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;gemsecs.c: 231:     *r_link = LINK_STATE_NAK;
  4044                           ;stkvar	_r_link @ sp[(-1)+-1]
  4045  00350E  0EFE               	movlw	-2
  4046  003510  50E3               	movf	plusw1,w,c
  4047  003512  6ED9               	movwf	fsr2l,c
  4048  003514  6ADA               	clrf	fsr2h,c
  4049  003516  0E05               	movlw	5
  4050  003518  D0FE               	goto	L10
  4051  00351A                     l8673:
  4052                           
  4053                           ;gemsecs.c: 233:     *r_link = LINK_STATE_IDLE;
  4054                           ;stkvar	_r_link @ sp[(-1)+-1]
  4055  00351A  0EFE               	movlw	-2
  4056  00351C  50E3               	movf	plusw1,w,c
  4057  00351E  6ED9               	movwf	fsr2l,c
  4058  003520  6ADA               	clrf	fsr2h,c
  4059  003522  0E00               	movlw	0
  4060  003524  D0F8               	goto	L10
  4061  003526                     l8675:
  4062                           
  4063                           ;gemsecs.c: 236:    if (UART1_is_rx_ready()) {
  4064  003526  EC2D  F032         	call	_UART1_is_rx_ready	;wreg free
  4065  00352A  503C               	movf	btemp,w,c
  4066  00352C  B4D8               	btfsc	status,2,c
  4067  00352E  D12D               	goto	l8773
  4068                           
  4069                           ;gemsecs.c: 237:     rxData = UART1_Read();
  4070  003530  EC2E  F02E         	call	_UART1_Read	;wreg free
  4071                           
  4072                           ;stkvar	_rxData @ sp[(-1)+0]
  4073  003534  0EFF               	movlw	-1
  4074  003536  0060  F0F3  FFE3   	movff	btemp,plusw1
  4075                           
  4076                           ; BSR set to: 57
  4077                           ;gemsecs.c: 238:     if (rxData_l == 0) {
  4078  00353C  502D               	movf	r_protocol@rxData_l,w,c
  4079  00353E  A4D8               	btfss	status,2,c
  4080  003540  D00C               	goto	l8687
  4081                           
  4082                           ; BSR set to: 57
  4083                           ;gemsecs.c: 239:      r_block.length = rxData;
  4084                           ;stkvar	_rxData @ sp[(-1)+0]
  4085  003542  0EFF               	movlw	-1
  4086  003544  006F FF8C  F0D0    	movff	plusw1,_r_block+12
  4087                           
  4088                           ; BSR set to: 57
  4089                           ;gemsecs.c: 240:      run_checksum(0, 1);
  4090  00354A  0E01               	movlw	1
  4091  00354C  6EE6               	movwf	postinc1,c
  4092  00354E  0E00               	movlw	0
  4093  003550  6EE6               	movwf	postinc1,c
  4094  003552  ECA7  F02E         	call	_run_checksum	;wreg free
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;gemsecs.c: 241:      rxData_l++;
  4098  003556  2A2D               	incf	r_protocol@rxData_l,f,c
  4099                           
  4100                           ;gemsecs.c: 242:     } else {
  4101  003558  D118               	goto	l8773
  4102  00355A                     l8687:
  4103                           
  4104                           ; BSR set to: 57
  4105                           ;gemsecs.c: 246:      if (rxData_l <= sizeof(block10))
  4106  00355A  0E0B               	movlw	11
  4107  00355C  602D               	cpfslt	r_protocol@rxData_l,c
  4108  00355E  D00C               	goto	l8691
  4109                           
  4110                           ; BSR set to: 57
  4111                           ;gemsecs.c: 247:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  4112                           ;stkvar	_rxData @ sp[(-1)+0]
  4113  003560  502D               	movf	r_protocol@rxData_l,w,c
  4114  003562  0819               	sublw	low (_H10+25)
  4115  003564  6ED9               	movwf	fsr2l,c
  4116  003566  0E00               	movlw	0
  4117  003568  A0D8               	btfss	status,0,c
  4118  00356A  2AE8               	incf	wreg,f,c
  4119  00356C  0801               	sublw	high (_H10+25)
  4120  00356E  6EDA               	movwf	fsr2h,c
  4121  003570  0EFF               	movlw	-1
  4122  003572  006F FF8F FFDF     	movff	plusw1,indf2
  4123  003578                     l8691:
  4124                           
  4125                           ; BSR set to: 57
  4126                           ;gemsecs.c: 249:      if (rxData_l == sizeof(block10) + 1)
  4127  003578  0E0B               	movlw	11
  4128  00357A  182D               	xorwf	r_protocol@rxData_l,w,c
  4129  00357C  A4D8               	btfss	status,2,c
  4130  00357E  D004               	goto	l8695
  4131                           
  4132                           ; BSR set to: 57
  4133                           ;gemsecs.c: 250:       V.ack[2] = rxData;
  4134                           ;stkvar	_rxData @ sp[(-1)+0]
  4135  003580  0EFF               	movlw	-1
  4136  003582  006F FF8C  F0C2    	movff	plusw1,_V+91
  4137  003588                     l8695:
  4138                           
  4139                           ; BSR set to: 57
  4140                           ;gemsecs.c: 251:      if (rxData_l == sizeof(block10) + 2)
  4141  003588  0E0C               	movlw	12
  4142  00358A  182D               	xorwf	r_protocol@rxData_l,w,c
  4143  00358C  A4D8               	btfss	status,2,c
  4144  00358E  D004               	goto	l8699
  4145                           
  4146                           ; BSR set to: 57
  4147                           ;gemsecs.c: 252:       V.ack[1] = rxData;
  4148                           ;stkvar	_rxData @ sp[(-1)+0]
  4149  003590  0EFF               	movlw	-1
  4150  003592  006F FF8C  F0C1    	movff	plusw1,_V+90
  4151  003598                     l8699:
  4152                           
  4153                           ; BSR set to: 57
  4154                           ;gemsecs.c: 253:      if (rxData_l == sizeof(block10) + 3)
  4155  003598  0E0D               	movlw	13
  4156  00359A  182D               	xorwf	r_protocol@rxData_l,w,c
  4157  00359C  A4D8               	btfss	status,2,c
  4158  00359E  D004               	goto	l8703
  4159                           
  4160                           ; BSR set to: 57
  4161                           ;gemsecs.c: 254:       V.ack[0] = rxData;
  4162                           ;stkvar	_rxData @ sp[(-1)+0]
  4163  0035A0  0EFF               	movlw	-1
  4164  0035A2  006F FF8C  F0C0    	movff	plusw1,_V+89
  4165  0035A8                     l8703:
  4166                           
  4167                           ; BSR set to: 57
  4168                           ;gemsecs.c: 256:      if (rxData_l <= r_block.length)
  4169  0035A8  502D               	movf	r_protocol@rxData_l,w,c
  4170  0035AA  0100               	movlb	0	; () banked
  4171  0035AC  5DD0               	subwf	(_r_block+12)& (0+255),w,b
  4172  0035AE  A0D8               	btfss	status,0,c
  4173  0035B0  D00D               	goto	l8707
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;gemsecs.c: 257:       V.r_checksum = run_checksum(rxData, 0);
  4177  0035B2  0E00               	movlw	0
  4178  0035B4  6EE6               	movwf	postinc1,c
  4179                           
  4180                           ;stkvar	_rxData @ sp[(-2)+0]
  4181  0035B6  0EFE               	movlw	-2
  4182  0035B8  50E3               	movf	plusw1,w,c
  4183  0035BA  6EE6               	movwf	postinc1,c
  4184  0035BC  ECA7  F02E         	call	_run_checksum	;wreg free
  4185  0035C0  0060  F0F0  F0BA   	movff	btemp,_V+83
  4186  0035C6  0060  F0F4  F0BB   	movff	btemp+1,_V+84
  4187  0035CC                     l8707:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;gemsecs.c: 259:      if (rxData_l == r_block.length + 1)
  4191  0035CC  502D               	movf	r_protocol@rxData_l,w,c
  4192  0035CE  6E46               	movwf	btemp+10,c
  4193  0035D0  6A47               	clrf	btemp+11,c
  4194  0035D2  51D0               	movf	(_r_block+12)& (0+255),w,b
  4195  0035D4  6E44               	movwf	btemp+8,c
  4196  0035D6  6A45               	clrf	btemp+9,c
  4197  0035D8  0E01               	movlw	1
  4198  0035DA  2644               	addwf	btemp+8,f,c
  4199  0035DC  0E00               	movlw	0
  4200  0035DE  2245               	addwfc	btemp+9,f,c
  4201  0035E0  5046               	movf	btemp+10,w,c
  4202  0035E2  1844               	xorwf	btemp+8,w,c
  4203  0035E4  E109               	bnz	l8711
  4204  0035E6  5047               	movf	btemp+11,w,c
  4205  0035E8  1845               	xorwf	btemp+9,w,c
  4206  0035EA  A4D8               	btfss	status,2,c
  4207  0035EC  D005               	goto	l8711
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;gemsecs.c: 260:       H10[1].checksum = (uint16_t) rxData << 8;
  4211                           ;stkvar	_rxData @ sp[(-1)+0]
  4212  0035EE  0EFF               	movlw	-1
  4213  0035F0  50E3               	movf	plusw1,w,c
  4214  0035F2  0101               	movlb	1	; () banked
  4215  0035F4  6F0E               	movwf	(_H10+14)& (0+255),b
  4216  0035F6  6B0D               	clrf	(_H10+13)& (0+255),b
  4217  0035F8                     l8711:
  4218                           
  4219                           ;gemsecs.c: 261:      if (rxData_l == r_block.length + 2)
  4220  0035F8  502D               	movf	r_protocol@rxData_l,w,c
  4221  0035FA  6E46               	movwf	btemp+10,c
  4222  0035FC  6A47               	clrf	btemp+11,c
  4223  0035FE  0100               	movlb	0	; () banked
  4224  003600  51D0               	movf	(_r_block+12)& (0+255),w,b
  4225  003602  6E44               	movwf	btemp+8,c
  4226  003604  6A45               	clrf	btemp+9,c
  4227  003606  0E02               	movlw	2
  4228  003608  2644               	addwf	btemp+8,f,c
  4229  00360A  0E00               	movlw	0
  4230  00360C  2245               	addwfc	btemp+9,f,c
  4231  00360E  5046               	movf	btemp+10,w,c
  4232  003610  1844               	xorwf	btemp+8,w,c
  4233  003612  E10A               	bnz	l8715
  4234  003614  5047               	movf	btemp+11,w,c
  4235  003616  1845               	xorwf	btemp+9,w,c
  4236  003618  A4D8               	btfss	status,2,c
  4237  00361A  D006               	goto	l8715
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;gemsecs.c: 262:       H10[1].checksum += rxData;
  4241                           ;stkvar	_rxData @ sp[(-1)+0]
  4242  00361C  0EFF               	movlw	-1
  4243  00361E  50E3               	movf	plusw1,w,c
  4244  003620  0101               	movlb	1	; () banked
  4245  003622  270D               	addwf	(_H10+13)& (0+255),f,b
  4246  003624  0E00               	movlw	0
  4247  003626  230E               	addwfc	(_H10+14)& (0+255),f,b
  4248  003628                     l8715:
  4249                           
  4250                           ;gemsecs.c: 264:      rxData_l++;
  4251  003628  2A2D               	incf	r_protocol@rxData_l,f,c
  4252                           
  4253                           ;gemsecs.c: 265:      if (rxData_l > (r_block.length + 2)) {
  4254  00362A  502D               	movf	r_protocol@rxData_l,w,c
  4255  00362C  6E46               	movwf	btemp+10,c
  4256  00362E  6A47               	clrf	btemp+11,c
  4257  003630  0100               	movlb	0	; () banked
  4258  003632  51D0               	movf	(_r_block+12)& (0+255),w,b
  4259  003634  6E44               	movwf	btemp+8,c
  4260  003636  6A45               	clrf	btemp+9,c
  4261  003638  0E02               	movlw	2
  4262  00363A  2644               	addwf	btemp+8,f,c
  4263  00363C  0E00               	movlw	0
  4264  00363E  2245               	addwfc	btemp+9,f,c
  4265  003640  5046               	movf	btemp+10,w,c
  4266  003642  5C44               	subwf	btemp+8,w,c
  4267  003644  5045               	movf	btemp+9,w,c
  4268  003646  0A80               	xorlw	128
  4269  003648  6E3C               	movwf	btemp,c
  4270  00364A  5047               	movf	btemp+11,w,c
  4271  00364C  0A80               	xorlw	128
  4272  00364E  583C               	subwfb	btemp,w,c
  4273  003650  B0D8               	btfsc	status,0,c
  4274  003652  D09B               	goto	l8773
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;gemsecs.c: 266:       if (V.r_checksum == H10[1].checksum) {
  4278  003654  0101               	movlb	1	; () banked
  4279  003656  510D               	movf	(_H10+13)& (0+255),w,b
  4280  003658  0100               	movlb	0	; () banked
  4281  00365A  19BA               	xorwf	(_V+83)& (0+255),w,b
  4282  00365C  E10E               	bnz	l8725
  4283  00365E  0101               	movlb	1	; () banked
  4284  003660  510E               	movf	(_H10+14)& (0+255),w,b
  4285  003662  0100               	movlb	0	; () banked
  4286  003664  19BB               	xorwf	(_V+84)& (0+255),w,b
  4287  003666  A4D8               	btfss	status,2,c
  4288  003668  D008               	goto	l8725
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;gemsecs.c: 267:        *r_link = LINK_STATE_ACK;
  4292                           ;stkvar	_r_link @ sp[(-1)+-1]
  4293  00366A  0EFE               	movlw	-2
  4294  00366C  50E3               	movf	plusw1,w,c
  4295  00366E  6ED9               	movwf	fsr2l,c
  4296  003670  6ADA               	clrf	fsr2h,c
  4297  003672  0E03               	movlw	3
  4298  003674  D050               	goto	L10
  4299  003676                     l8723:
  4300  003676  EC2E  F02E         	call	_UART1_Read	;wreg free
  4301  00367A                     l8725:
  4302                           
  4303                           ;gemsecs.c: 269:        while (UART1_is_rx_ready())
  4304  00367A  EC2D  F032         	call	_UART1_is_rx_ready	;wreg free
  4305  00367E  503C               	movf	btemp,w,c
  4306  003680  A4D8               	btfss	status,2,c
  4307  003682  D7F9               	goto	l8723
  4308                           
  4309                           ;gemsecs.c: 271:        WaitMs(500);
  4310  003684  0EF4               	movlw	244
  4311  003686  6EE6               	movwf	postinc1,c
  4312  003688  0E01               	movlw	1
  4313  00368A  6EE6               	movwf	postinc1,c
  4314  00368C  EC29  F02F         	call	_WaitMs	;wreg free
  4315                           
  4316                           ;gemsecs.c: 272:        V.error = LINK_ERROR_CHECKSUM;
  4317  003690  0E05               	movlw	5
  4318  003692  0100               	movlb	0	; () banked
  4319  003694  6FB7               	movwf	(_V+80)& (0+255),b
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;gemsecs.c: 273:        V.failed_receive = 2;
  4323  003696  51BF               	movf	(_V+88)& (0+255),w,b
  4324  003698  0BF0               	andlw	-16
  4325  00369A  0902               	iorlw	2
  4326  00369C  D737               	goto	L11
  4327  00369E                     l8735:
  4328                           
  4329                           ;gemsecs.c: 282:   V.stream = H10[1].block.block.stream;
  4330  00369E  0101               	movlb	1	; () banked
  4331  0036A0  5116               	movf	(_H10+22)& (0+255),w,b
  4332  0036A2  0B7F               	andlw	127
  4333  0036A4  0100               	movlb	0	; () banked
  4334  0036A6  6FB5               	movwf	(_V+78)& (0+255),b
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;gemsecs.c: 283:   V.function = H10[1].block.block.function;
  4338  0036A8  C115  F0B6         	movff	_H10+21,_V+79
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;gemsecs.c: 284:   V.systemb = H10[1].block.block.systemb;
  4342  0036AC  C10F  F0B1         	movff	_H10+15,_V+74
  4343  0036B0  C110  F0B2         	movff	_H10+16,_V+75
  4344  0036B4  C111  F0B3         	movff	_H10+17,_V+76
  4345  0036B8  C112  F0B4         	movff	_H10+18,_V+77
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;gemsecs.c: 285:   V.rbit = H10[1].block.block.rbit;
  4349  0036BC  0101               	movlb	1	; () banked
  4350  0036BE  AF18               	btfss	(_H10+24)& (0+255),7,b
  4351  0036C0  D003               	bra	u5385
  4352  0036C2  0100               	movlb	0	; () banked
  4353  0036C4  81BE               	bsf	(_V+87)& (0+255),0,b
  4354  0036C6  D002               	bra	u5387
  4355  0036C8                     u5385:
  4356  0036C8  0100               	movlb	0	; () banked
  4357  0036CA  91BE               	bcf	(_V+87)& (0+255),0,b
  4358  0036CC                     u5387:
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;gemsecs.c: 286:   V.wbit = H10[1].block.block.wbit;
  4362  0036CC  0101               	movlb	1	; () banked
  4363  0036CE  AF16               	btfss	(_H10+22)& (0+255),7,b
  4364  0036D0  D003               	bra	u5395
  4365  0036D2  0100               	movlb	0	; () banked
  4366  0036D4  83BE               	bsf	(_V+87)& (0+255),1,b
  4367  0036D6  D002               	bra	u5397
  4368  0036D8                     u5395:
  4369  0036D8  0100               	movlb	0	; () banked
  4370  0036DA  93BE               	bcf	(_V+87)& (0+255),1,b
  4371  0036DC                     u5397:
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;gemsecs.c: 287:   V.ebit = H10[1].block.block.ebit;
  4375  0036DC  0101               	movlb	1	; () banked
  4376  0036DE  AF14               	btfss	(_H10+20)& (0+255),7,b
  4377  0036E0  D003               	bra	u5405
  4378  0036E2  0100               	movlb	0	; () banked
  4379  0036E4  85BE               	bsf	(_V+87)& (0+255),2,b
  4380  0036E6  D002               	bra	u5407
  4381  0036E8                     u5405:
  4382  0036E8  0100               	movlb	0	; () banked
  4383  0036EA  95BE               	bcf	(_V+87)& (0+255),2,b
  4384  0036EC                     u5407:
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;gemsecs.c: 288:   V.g_state = secs_gem_state(V.stream, V.function);
  4388  0036EC  51B6               	movf	(_V+79)& (0+255),w,b
  4389  0036EE  6EE6               	movwf	postinc1,c
  4390  0036F0  51B5               	movf	(_V+78)& (0+255),w,b
  4391  0036F2  6EE6               	movwf	postinc1,c
  4392  0036F4  ECE9  F029         	call	_secs_gem_state	;wreg free
  4393  0036F8  503C               	movf	btemp,w,c
  4394  0036FA  0100               	movlb	0	; () banked
  4395  0036FC  6F69               	movwf	(_V+2)& (0+255),b
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;gemsecs.c: 289:   UART1_Write(0x06);
  4399  0036FE  0E06               	movlw	6
  4400  003700  6EE6               	movwf	postinc1,c
  4401  003702  ECF0  F02D         	call	_UART1_Write	;wreg free
  4402                           
  4403                           ; BSR set to: 57
  4404                           ;gemsecs.c: 290:   V.failed_receive = 0;
  4405  003706  0EF0               	movlw	-16
  4406  003708  0100               	movlb	0	; () banked
  4407  00370A  17BF               	andwf	(_V+88)& (0+255),f,b
  4408                           
  4409                           ; BSR set to: 0
  4410                           ;gemsecs.c: 291:   *r_link = LINK_STATE_DONE;
  4411                           ;stkvar	_r_link @ sp[(-1)+-1]
  4412  00370C  0EFE               	movlw	-2
  4413  00370E  50E3               	movf	plusw1,w,c
  4414  003710  6ED9               	movwf	fsr2l,c
  4415  003712  6ADA               	clrf	fsr2h,c
  4416  003714  0E04               	movlw	4
  4417  003716                     L10:
  4418  003716  6EDF               	movwf	indf2,c
  4419                           
  4420                           ;gemsecs.c: 292:   break;
  4421  003718  D038               	goto	l8773
  4422  00371A                     l8755:
  4423                           
  4424                           ;gemsecs.c: 294:   UART1_Write(0x15);
  4425  00371A  0E15               	movlw	21
  4426  00371C  6EE6               	movwf	postinc1,c
  4427  00371E  ECF0  F02D         	call	_UART1_Write	;wreg free
  4428                           
  4429                           ; BSR set to: 57
  4430                           ;gemsecs.c: 295:   *r_link = LINK_STATE_ERROR;
  4431                           ;stkvar	_r_link @ sp[(-1)+-1]
  4432  003722  0EFE               	movlw	-2
  4433  003724  50E3               	movf	plusw1,w,c
  4434  003726  6ED9               	movwf	fsr2l,c
  4435  003728  6ADA               	clrf	fsr2h,c
  4436  00372A  0E06               	movlw	6
  4437  00372C  6EDF               	movwf	indf2,c
  4438                           
  4439                           ;gemsecs.c: 296:   while ((uart1RxCount)) {
  4440  00372E  D002               	goto	l8761
  4441  003730                     l8759:
  4442                           
  4443                           ; BSR set to: 57
  4444                           ;gemsecs.c: 297:    UART1_Read();
  4445  003730  EC2E  F02E         	call	_UART1_Read	;wreg free
  4446  003734                     l8761:
  4447                           
  4448                           ; BSR set to: 57
  4449                           ;gemsecs.c: 296:   while ((uart1RxCount)) {
  4450  003734  5036               	movf	_uart1RxCount,w,c	;volatile
  4451  003736  A4D8               	btfss	status,2,c
  4452  003738  D7FB               	goto	l8759
  4453                           
  4454                           ; BSR set to: 57
  4455                           ;gemsecs.c: 299:   retry = 3;
  4456  00373A  0E03               	movlw	3
  4457  00373C  6E5E               	movwf	r_protocol@retry,c
  4458                           
  4459                           ;gemsecs.c: 300:   break;
  4460  00373E  D025               	goto	l8773
  4461  003740                     l8765:
  4462                           
  4463                           ;gemsecs.c: 304:   V.failed_receive = 0;
  4464  003740  0EF0               	movlw	-16
  4465  003742  0100               	movlb	0	; () banked
  4466  003744  17BF               	andwf	(_V+88)& (0+255),f,b
  4467  003746  D6E9               	goto	l8673
  4468  003748                     l8771:
  4469                           
  4470                           ;stkvar	_r_link @ sp[(-1)+-1]
  4471  003748  0EFE               	movlw	-2
  4472  00374A  50E3               	movf	plusw1,w,c
  4473  00374C  6ED9               	movwf	fsr2l,c
  4474  00374E  6ADA               	clrf	fsr2h,c
  4475  003750  50DF               	movf	indf2,w,c
  4476  003752  6E46               	movwf	btemp+10,c
  4477  003754  6A47               	clrf	btemp+11,c
  4478                           
  4479                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4480                           ; Switch size 1, requested type "simple"
  4481                           ; Number of cases is 1, Range of values is 0 to 0
  4482                           ; switch strategies available:
  4483                           ; Name         Instructions Cycles
  4484                           ; simple_byte            4     3 (average)
  4485                           ;	Chosen strategy is simple_byte
  4486  003756  5047               	movf	btemp+11,w,c
  4487  003758  0A00               	xorlw	0	; case 0
  4488  00375A  A4D8               	btfss	status,2,c
  4489  00375C  D6DE               	goto	l8673
  4490                           
  4491                           ; Switch size 1, requested type "simple"
  4492                           ; Number of cases is 7, Range of values is 0 to 6
  4493                           ; switch strategies available:
  4494                           ; Name         Instructions Cycles
  4495                           ; simple_byte           22    12 (average)
  4496                           ;	Chosen strategy is simple_byte
  4497  00375E  5046               	movf	btemp+10,w,c
  4498  003760  0A00               	xorlw	0	; case 0
  4499  003762  B4D8               	btfsc	status,2,c
  4500  003764  D679               	goto	l8643
  4501  003766  0A01               	xorlw	1	; case 1
  4502  003768  B4D8               	btfsc	status,2,c
  4503  00376A  D691               	goto	l1632
  4504  00376C  0A03               	xorlw	3	; case 2
  4505  00376E  B4D8               	btfsc	status,2,c
  4506  003770  D6BC               	goto	l8665
  4507  003772  0A01               	xorlw	1	; case 3
  4508  003774  B4D8               	btfsc	status,2,c
  4509  003776  D793               	goto	l8735
  4510  003778  0A07               	xorlw	7	; case 4
  4511  00377A  B4D8               	btfsc	status,2,c
  4512  00377C  D7E1               	goto	l8765
  4513  00377E  0A01               	xorlw	1	; case 5
  4514  003780  B4D8               	btfsc	status,2,c
  4515  003782  D7CB               	goto	l8755
  4516  003784  0A03               	xorlw	3	; case 6
  4517  003786  A4D8               	btfss	status,2,c
  4518  003788  D6C8               	goto	l8673
  4519  00378A                     l8773:
  4520                           
  4521                           ;gemsecs.c: 311:  return *r_link;
  4522                           ;stkvar	_r_link @ sp[(-1)+-1]
  4523  00378A  0EFE               	movlw	-2
  4524  00378C  50E3               	movf	plusw1,w,c
  4525  00378E  6ED9               	movwf	fsr2l,c
  4526  003790  6ADA               	clrf	fsr2h,c
  4527  003792  50DF               	movf	indf2,w,c
  4528  003794  6E3C               	movwf	btemp,c
  4529                           
  4530                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4531  003796  52E5               	movf	postdec1,f,c
  4532  003798  52E5               	movf	postdec1,f,c
  4533  00379A  0012               	return		;funcret
  4534  00379C                     __end_of_r_protocol:
  4535                           	opt callstack 0
  4536                           
  4537 ;; *************** function _m_protocol *****************
  4538 ;; Defined at:
  4539 ;;		line 42 in file "gemsecs.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;  m_link          1  [STACK] PTR enum E16173
  4542 ;;		 -> V(93), 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;  rxData          1  [STACK] unsigned char 
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1  [STACK] enum E16913
  4547 ;; Registers used:
  4548 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4558 ;;Total ram usage:        0 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:    5
  4561 ;; This function calls:
  4562 ;;		_StartTimer
  4563 ;;		_TimerDone
  4564 ;;		_UART1_Read
  4565 ;;		_UART1_is_rx_ready
  4566 ;;		_UART2_Read
  4567 ;;		_UART2_is_rx_ready
  4568 ;;		_WaitMs
  4569 ;;		_run_checksum
  4570 ;;		_secs_gem_state
  4571 ;;		_secs_send
  4572 ;; This function is called by:
  4573 ;;		_main
  4574 ;; This function uses a reentrant model
  4575 ;;
  4576                           
  4577                           	psect	text5
  4578  002640                     __ptext5:
  4579                           	opt callstack 0
  4580  002640                     _m_protocol:
  4581                           	opt callstack 0
  4582                           
  4583                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4584  002640  52E6               	movf	postinc1,f,c
  4585                           
  4586                           ;gemsecs.c: 42: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 43: {;gemsecs.c: 
      +                          44:  uint8_t rxData;;gemsecs.c: 45:  static uint8_t rxData_l = 0;;gemsecs.c: 47:  switch
      +                           (*m_link) {
  4587                           
  4588                           ;incstack = 0
  4589  002642  D247               	goto	l9083
  4590  002644                     l8899:
  4591                           
  4592                           ;gemsecs.c: 50:   WaitMs(50);
  4593  002644  0E32               	movlw	50
  4594  002646  6EE6               	movwf	postinc1,c
  4595  002648  0E00               	movlw	0
  4596  00264A  6EE6               	movwf	postinc1,c
  4597  00264C  EC29  F02F         	call	_WaitMs	;wreg free
  4598                           
  4599                           ;gemsecs.c: 52:   if (UART1_is_rx_ready()) {
  4600  002650  EC2D  F032         	call	_UART1_is_rx_ready	;wreg free
  4601  002654  503C               	movf	btemp,w,c
  4602  002656  B4D8               	btfsc	status,2,c
  4603  002658  D021               	goto	l8915
  4604                           
  4605                           ;gemsecs.c: 53:    rxData = UART1_Read();
  4606  00265A  EC2E  F02E         	call	_UART1_Read	;wreg free
  4607                           
  4608                           ;stkvar	_rxData @ sp[(-1)+0]
  4609  00265E  0EFF               	movlw	-1
  4610  002660  0060  F0F3  FFE3   	movff	btemp,plusw1
  4611                           
  4612                           ; BSR set to: 57
  4613                           ;gemsecs.c: 54:    if (rxData == 0x05) {
  4614                           ;stkvar	_rxData @ sp[(-1)+0]
  4615  002666  0EFF               	movlw	-1
  4616  002668  006F FF8C  F03C    	movff	plusw1,btemp
  4617  00266E  0E05               	movlw	5
  4618  002670  183C               	xorwf	btemp,w,c
  4619  002672  A4D8               	btfss	status,2,c
  4620  002674  D013               	goto	l8915
  4621                           
  4622                           ; BSR set to: 57
  4623                           ;gemsecs.c: 55:     V.uart = 1;
  4624  002676  0E01               	movlw	1
  4625  002678  0100               	movlb	0	; () banked
  4626  00267A  6FC3               	movwf	(_V+92)& (0+255),b
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;gemsecs.c: 56:     StartTimer(TMR_T2, 2000);
  4630  00267C  0ED0               	movlw	208
  4631  00267E  6EE6               	movwf	postinc1,c
  4632  002680  0E07               	movlw	7
  4633  002682  6EE6               	movwf	postinc1,c
  4634  002684  0E02               	movlw	2
  4635  002686  6EE6               	movwf	postinc1,c
  4636  002688  EC6D  F02E         	call	_StartTimer	;wreg free
  4637                           
  4638                           ;gemsecs.c: 57:     V.error = LINK_ERROR_NONE;
  4639  00268C  0100               	movlb	0	; () banked
  4640  00268E  6BB7               	clrf	(_V+80)& (0+255),b
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;gemsecs.c: 58:     *m_link = LINK_STATE_ENQ;
  4644                           ;stkvar	_m_link @ sp[(-1)+-1]
  4645  002690  0EFE               	movlw	-2
  4646  002692  50E3               	movf	plusw1,w,c
  4647  002694  6ED9               	movwf	fsr2l,c
  4648  002696  6ADA               	clrf	fsr2h,c
  4649  002698  0E01               	movlw	1
  4650  00269A  6EDF               	movwf	indf2,c
  4651  00269C                     l8915:
  4652                           
  4653                           ;gemsecs.c: 61:   if (UART2_is_rx_ready()) {
  4654  00269C  EC29  F032         	call	_UART2_is_rx_ready	;wreg free
  4655  0026A0  503C               	movf	btemp,w,c
  4656  0026A2  B4D8               	btfsc	status,2,c
  4657  0026A4  D237               	goto	l9085
  4658                           
  4659                           ;gemsecs.c: 62:    rxData = UART2_Read();
  4660  0026A6  EC0F  F02E         	call	_UART2_Read	;wreg free
  4661                           
  4662                           ;stkvar	_rxData @ sp[(-1)+0]
  4663  0026AA  0EFF               	movlw	-1
  4664  0026AC  0060  F0F3  FFE3   	movff	btemp,plusw1
  4665                           
  4666                           ; BSR set to: 57
  4667                           ;gemsecs.c: 63:    if (rxData == 0x05) {
  4668                           ;stkvar	_rxData @ sp[(-1)+0]
  4669  0026B2  0EFF               	movlw	-1
  4670  0026B4  006F FF8C  F03C    	movff	plusw1,btemp
  4671  0026BA  0E05               	movlw	5
  4672  0026BC  183C               	xorwf	btemp,w,c
  4673  0026BE  A4D8               	btfss	status,2,c
  4674  0026C0  D229               	goto	l9085
  4675                           
  4676                           ; BSR set to: 57
  4677                           ;gemsecs.c: 64:     V.uart = 2;
  4678  0026C2  0E02               	movlw	2
  4679  0026C4  0100               	movlb	0	; () banked
  4680  0026C6  6FC3               	movwf	(_V+92)& (0+255),b
  4681                           
  4682                           ; BSR set to: 0
  4683                           ;gemsecs.c: 65:     StartTimer(TMR_T2, 2000);
  4684  0026C8  0ED0               	movlw	208
  4685  0026CA  6EE6               	movwf	postinc1,c
  4686  0026CC  0E07               	movlw	7
  4687  0026CE  6EE6               	movwf	postinc1,c
  4688  0026D0  0E02               	movlw	2
  4689  0026D2  6EE6               	movwf	postinc1,c
  4690  0026D4  EC6D  F02E         	call	_StartTimer	;wreg free
  4691                           
  4692                           ;gemsecs.c: 66:     V.error = LINK_ERROR_NONE;
  4693  0026D8  0100               	movlb	0	; () banked
  4694  0026DA  6BB7               	clrf	(_V+80)& (0+255),b
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;gemsecs.c: 67:     *m_link = LINK_STATE_ENQ;
  4698                           ;stkvar	_m_link @ sp[(-1)+-1]
  4699  0026DC  0EFE               	movlw	-2
  4700  0026DE  50E3               	movf	plusw1,w,c
  4701  0026E0  6ED9               	movwf	fsr2l,c
  4702  0026E2  6ADA               	clrf	fsr2h,c
  4703  0026E4  0E01               	movlw	1
  4704  0026E6  D1F3               	goto	L17
  4705  0026E8                     l8929:
  4706                           
  4707                           ;gemsecs.c: 73:   WaitMs(50);
  4708  0026E8  0E32               	movlw	50
  4709  0026EA  6EE6               	movwf	postinc1,c
  4710  0026EC  0E00               	movlw	0
  4711  0026EE  6EE6               	movwf	postinc1,c
  4712  0026F0  EC29  F02F         	call	_WaitMs	;wreg free
  4713                           
  4714                           ;gemsecs.c: 74:   if (V.uart == 1)
  4715  0026F4  0100               	movlb	0	; () banked
  4716  0026F6  05C3               	decf	(_V+92)& (0+255),w,b
  4717  0026F8  A4D8               	btfss	status,2,c
  4718  0026FA  D00C               	goto	l8935
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;gemsecs.c: 75:    secs_send((uint8_t*) & H27[0], sizeof(header27), 1, V.uart);
  4722  0026FC  51C3               	movf	(_V+92)& (0+255),w,b
  4723  0026FE  6EE6               	movwf	postinc1,c
  4724  002700  0E01               	movlw	1
  4725  002702  6EE6               	movwf	postinc1,c
  4726  002704  0E1E               	movlw	30
  4727  002706  6EE6               	movwf	postinc1,c
  4728  002708  0EC0               	movlw	low _H27
  4729  00270A  6EE6               	movwf	postinc1,c
  4730  00270C  0E02               	movlw	high _H27
  4731  00270E  6EE6               	movwf	postinc1,c
  4732  002710  EC33  F021         	call	_secs_send	;wreg free
  4733  002714                     l8935:
  4734                           
  4735                           ;gemsecs.c: 76:   if (V.uart == 2)
  4736  002714  0E02               	movlw	2
  4737  002716  0100               	movlb	0	; () banked
  4738  002718  19C3               	xorwf	(_V+92)& (0+255),w,b
  4739  00271A  A4D8               	btfss	status,2,c
  4740  00271C  D00C               	goto	l8939
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;gemsecs.c: 77:    secs_send((uint8_t*) & H10[0], sizeof(header10), 1, V.uart);
  4744  00271E  51C3               	movf	(_V+92)& (0+255),w,b
  4745  002720  6EE6               	movwf	postinc1,c
  4746  002722  0E01               	movlw	1
  4747  002724  6EE6               	movwf	postinc1,c
  4748  002726  0E0D               	movlw	13
  4749  002728  6EE6               	movwf	postinc1,c
  4750  00272A  0E00               	movlw	low _H10
  4751  00272C  6EE6               	movwf	postinc1,c
  4752  00272E  0E01               	movlw	high _H10
  4753  002730  6EE6               	movwf	postinc1,c
  4754  002732  EC33  F021         	call	_secs_send	;wreg free
  4755  002736                     l8939:
  4756                           
  4757                           ;gemsecs.c: 79:   V.error = LINK_ERROR_NONE;
  4758  002736  0100               	movlb	0	; () banked
  4759  002738  6BB7               	clrf	(_V+80)& (0+255),b
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;gemsecs.c: 80:   *m_link = LINK_STATE_EOT;
  4763                           ;stkvar	_m_link @ sp[(-1)+-1]
  4764  00273A  0EFE               	movlw	-2
  4765  00273C  50E3               	movf	plusw1,w,c
  4766  00273E  6ED9               	movwf	fsr2l,c
  4767  002740  6ADA               	clrf	fsr2h,c
  4768  002742  0E02               	movlw	2
  4769  002744  6EDF               	movwf	indf2,c
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;gemsecs.c: 81:   StartTimer(TMR_T2, 2000);
  4773  002746  0ED0               	movlw	208
  4774  002748  6EE6               	movwf	postinc1,c
  4775  00274A  0E07               	movlw	7
  4776  00274C  6EE6               	movwf	postinc1,c
  4777  00274E  0E02               	movlw	2
  4778  002750  6EE6               	movwf	postinc1,c
  4779  002752  EC6D  F02E         	call	_StartTimer	;wreg free
  4780                           
  4781                           ;gemsecs.c: 82:   break;
  4782  002756  D1DE               	goto	l9085
  4783  002758                     l8945:
  4784                           
  4785                           ;gemsecs.c: 84:   if (TimerDone(TMR_T2)) {
  4786  002758  0E02               	movlw	2
  4787  00275A  6EE6               	movwf	postinc1,c
  4788  00275C  ECDF  F030         	call	_TimerDone	;wreg free
  4789  002760  503C               	movf	btemp,w,c
  4790  002762  B4D8               	btfsc	status,2,c
  4791  002764  D00D               	goto	l8951
  4792                           
  4793                           ;gemsecs.c: 85:    V.error = LINK_ERROR_T2;
  4794  002766  0E02               	movlw	2
  4795  002768  0100               	movlb	0	; () banked
  4796  00276A  6FB7               	movwf	(_V+80)& (0+255),b
  4797                           
  4798                           ;gemsecs.c: 86:    V.failed_receive = 2;
  4799  00276C  51BF               	movf	(_V+88)& (0+255),w,b
  4800  00276E  0BF0               	andlw	-16
  4801  002770  0902               	iorlw	2
  4802  002772  6FBF               	movwf	(_V+88)& (0+255),b
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;gemsecs.c: 87:    *m_link = LINK_STATE_NAK;
  4806                           ;stkvar	_m_link @ sp[(-1)+-1]
  4807  002774  0EFE               	movlw	-2
  4808  002776  50E3               	movf	plusw1,w,c
  4809  002778  6ED9               	movwf	fsr2l,c
  4810  00277A  6ADA               	clrf	fsr2h,c
  4811  00277C  0E05               	movlw	5
  4812  00277E  D1A7               	goto	L17
  4813  002780                     l8951:
  4814                           
  4815                           ;gemsecs.c: 89:    if (UART1_is_rx_ready()) {
  4816  002780  EC2D  F032         	call	_UART1_is_rx_ready	;wreg free
  4817  002784  503C               	movf	btemp,w,c
  4818  002786  B4D8               	btfsc	status,2,c
  4819  002788  D0A5               	goto	l8999
  4820                           
  4821                           ;gemsecs.c: 90:     rxData = UART1_Read();
  4822  00278A  EC2E  F02E         	call	_UART1_Read	;wreg free
  4823                           
  4824                           ;stkvar	_rxData @ sp[(-1)+0]
  4825  00278E  0EFF               	movlw	-1
  4826  002790  0060  F0F3  FFE3   	movff	btemp,plusw1
  4827                           
  4828                           ; BSR set to: 57
  4829                           ;gemsecs.c: 91:     if (rxData_l == 0) {
  4830  002796  502E               	movf	m_protocol@rxData_l,w,c
  4831  002798  A4D8               	btfss	status,2,c
  4832  00279A  D00C               	goto	l8963
  4833                           
  4834                           ; BSR set to: 57
  4835                           ;gemsecs.c: 92:      r_block.length = rxData;
  4836                           ;stkvar	_rxData @ sp[(-1)+0]
  4837  00279C  0EFF               	movlw	-1
  4838  00279E  006F FF8C  F0D0    	movff	plusw1,_r_block+12
  4839                           
  4840                           ; BSR set to: 57
  4841                           ;gemsecs.c: 93:      run_checksum(0, 1);
  4842  0027A4  0E01               	movlw	1
  4843  0027A6  6EE6               	movwf	postinc1,c
  4844  0027A8  0E00               	movlw	0
  4845  0027AA  6EE6               	movwf	postinc1,c
  4846  0027AC  ECA7  F02E         	call	_run_checksum	;wreg free
  4847                           
  4848                           ; BSR set to: 0
  4849                           ;gemsecs.c: 94:      rxData_l++;
  4850  0027B0  2A2E               	incf	m_protocol@rxData_l,f,c
  4851                           
  4852                           ;gemsecs.c: 95:     } else {
  4853  0027B2  D090               	goto	l8999
  4854  0027B4                     l8963:
  4855                           
  4856                           ; BSR set to: 57
  4857                           ;gemsecs.c: 99:      if (rxData_l <= sizeof(block10))
  4858  0027B4  0E0B               	movlw	11
  4859  0027B6  602E               	cpfslt	m_protocol@rxData_l,c
  4860  0027B8  D00C               	goto	l8967
  4861                           
  4862                           ; BSR set to: 57
  4863                           ;gemsecs.c: 100:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  4864                           ;stkvar	_rxData @ sp[(-1)+0]
  4865  0027BA  502E               	movf	m_protocol@rxData_l,w,c
  4866  0027BC  0819               	sublw	low (_H10+25)
  4867  0027BE  6ED9               	movwf	fsr2l,c
  4868  0027C0  0E00               	movlw	0
  4869  0027C2  A0D8               	btfss	status,0,c
  4870  0027C4  2AE8               	incf	wreg,f,c
  4871  0027C6  0801               	sublw	high (_H10+25)
  4872  0027C8  6EDA               	movwf	fsr2h,c
  4873  0027CA  0EFF               	movlw	-1
  4874  0027CC  006F FF8F FFDF     	movff	plusw1,indf2
  4875  0027D2                     l8967:
  4876                           
  4877                           ; BSR set to: 57
  4878                           ;gemsecs.c: 101:      if (rxData_l <= r_block.length)
  4879  0027D2  502E               	movf	m_protocol@rxData_l,w,c
  4880  0027D4  0100               	movlb	0	; () banked
  4881  0027D6  5DD0               	subwf	(_r_block+12)& (0+255),w,b
  4882  0027D8  A0D8               	btfss	status,0,c
  4883  0027DA  D00D               	goto	l8971
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;gemsecs.c: 102:       V.r_checksum = run_checksum(rxData, 0);
  4887  0027DC  0E00               	movlw	0
  4888  0027DE  6EE6               	movwf	postinc1,c
  4889                           
  4890                           ;stkvar	_rxData @ sp[(-2)+0]
  4891  0027E0  0EFE               	movlw	-2
  4892  0027E2  50E3               	movf	plusw1,w,c
  4893  0027E4  6EE6               	movwf	postinc1,c
  4894  0027E6  ECA7  F02E         	call	_run_checksum	;wreg free
  4895  0027EA  0060  F0F0  F0BA   	movff	btemp,_V+83
  4896  0027F0  0060  F0F4  F0BB   	movff	btemp+1,_V+84
  4897  0027F6                     l8971:
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;gemsecs.c: 104:      if (rxData_l == r_block.length + 1)
  4901  0027F6  502E               	movf	m_protocol@rxData_l,w,c
  4902  0027F8  6E46               	movwf	btemp+10,c
  4903  0027FA  6A47               	clrf	btemp+11,c
  4904  0027FC  51D0               	movf	(_r_block+12)& (0+255),w,b
  4905  0027FE  6E44               	movwf	btemp+8,c
  4906  002800  6A45               	clrf	btemp+9,c
  4907  002802  0E01               	movlw	1
  4908  002804  2644               	addwf	btemp+8,f,c
  4909  002806  0E00               	movlw	0
  4910  002808  2245               	addwfc	btemp+9,f,c
  4911  00280A  5046               	movf	btemp+10,w,c
  4912  00280C  1844               	xorwf	btemp+8,w,c
  4913  00280E  E109               	bnz	l8975
  4914  002810  5047               	movf	btemp+11,w,c
  4915  002812  1845               	xorwf	btemp+9,w,c
  4916  002814  A4D8               	btfss	status,2,c
  4917  002816  D005               	goto	l8975
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;gemsecs.c: 105:       H10[1].checksum = (uint16_t) rxData << 8;
  4921                           ;stkvar	_rxData @ sp[(-1)+0]
  4922  002818  0EFF               	movlw	-1
  4923  00281A  50E3               	movf	plusw1,w,c
  4924  00281C  0101               	movlb	1	; () banked
  4925  00281E  6F0E               	movwf	(_H10+14)& (0+255),b
  4926  002820  6B0D               	clrf	(_H10+13)& (0+255),b
  4927  002822                     l8975:
  4928                           
  4929                           ;gemsecs.c: 106:      if (rxData_l == r_block.length + 2)
  4930  002822  502E               	movf	m_protocol@rxData_l,w,c
  4931  002824  6E46               	movwf	btemp+10,c
  4932  002826  6A47               	clrf	btemp+11,c
  4933  002828  0100               	movlb	0	; () banked
  4934  00282A  51D0               	movf	(_r_block+12)& (0+255),w,b
  4935  00282C  6E44               	movwf	btemp+8,c
  4936  00282E  6A45               	clrf	btemp+9,c
  4937  002830  0E02               	movlw	2
  4938  002832  2644               	addwf	btemp+8,f,c
  4939  002834  0E00               	movlw	0
  4940  002836  2245               	addwfc	btemp+9,f,c
  4941  002838  5046               	movf	btemp+10,w,c
  4942  00283A  1844               	xorwf	btemp+8,w,c
  4943  00283C  E10A               	bnz	l8979
  4944  00283E  5047               	movf	btemp+11,w,c
  4945  002840  1845               	xorwf	btemp+9,w,c
  4946  002842  A4D8               	btfss	status,2,c
  4947  002844  D006               	goto	l8979
  4948                           
  4949                           ; BSR set to: 0
  4950                           ;gemsecs.c: 107:       H10[1].checksum += rxData;
  4951                           ;stkvar	_rxData @ sp[(-1)+0]
  4952  002846  0EFF               	movlw	-1
  4953  002848  50E3               	movf	plusw1,w,c
  4954  00284A  0101               	movlb	1	; () banked
  4955  00284C  270D               	addwf	(_H10+13)& (0+255),f,b
  4956  00284E  0E00               	movlw	0
  4957  002850  230E               	addwfc	(_H10+14)& (0+255),f,b
  4958  002852                     l8979:
  4959                           
  4960                           ;gemsecs.c: 109:      rxData_l++;
  4961  002852  2A2E               	incf	m_protocol@rxData_l,f,c
  4962                           
  4963                           ;gemsecs.c: 110:      if (rxData_l > (r_block.length + 2)) {
  4964  002854  502E               	movf	m_protocol@rxData_l,w,c
  4965  002856  6E46               	movwf	btemp+10,c
  4966  002858  6A47               	clrf	btemp+11,c
  4967  00285A  0100               	movlb	0	; () banked
  4968  00285C  51D0               	movf	(_r_block+12)& (0+255),w,b
  4969  00285E  6E44               	movwf	btemp+8,c
  4970  002860  6A45               	clrf	btemp+9,c
  4971  002862  0E02               	movlw	2
  4972  002864  2644               	addwf	btemp+8,f,c
  4973  002866  0E00               	movlw	0
  4974  002868  2245               	addwfc	btemp+9,f,c
  4975  00286A  5046               	movf	btemp+10,w,c
  4976  00286C  5C44               	subwf	btemp+8,w,c
  4977  00286E  5045               	movf	btemp+9,w,c
  4978  002870  0A80               	xorlw	128
  4979  002872  6E3C               	movwf	btemp,c
  4980  002874  5047               	movf	btemp+11,w,c
  4981  002876  0A80               	xorlw	128
  4982  002878  583C               	subwfb	btemp,w,c
  4983  00287A  B0D8               	btfsc	status,0,c
  4984  00287C  D02B               	goto	l8999
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;gemsecs.c: 111:       if (V.r_checksum == H10[1].checksum) {
  4988  00287E  0101               	movlb	1	; () banked
  4989  002880  510D               	movf	(_H10+13)& (0+255),w,b
  4990  002882  0100               	movlb	0	; () banked
  4991  002884  19BA               	xorwf	(_V+83)& (0+255),w,b
  4992  002886  E10E               	bnz	l8989
  4993  002888  0101               	movlb	1	; () banked
  4994  00288A  510E               	movf	(_H10+14)& (0+255),w,b
  4995  00288C  0100               	movlb	0	; () banked
  4996  00288E  19BB               	xorwf	(_V+84)& (0+255),w,b
  4997  002890  A4D8               	btfss	status,2,c
  4998  002892  D008               	goto	l8989
  4999                           
  5000                           ; BSR set to: 0
  5001                           ;gemsecs.c: 112:        *m_link = LINK_STATE_ACK;
  5002                           ;stkvar	_m_link @ sp[(-1)+-1]
  5003  002894  0EFE               	movlw	-2
  5004  002896  50E3               	movf	plusw1,w,c
  5005  002898  6ED9               	movwf	fsr2l,c
  5006  00289A  6ADA               	clrf	fsr2h,c
  5007  00289C  0E03               	movlw	3
  5008  00289E  D019               	goto	L14
  5009  0028A0                     l8987:
  5010  0028A0  EC2E  F02E         	call	_UART1_Read	;wreg free
  5011  0028A4                     l8989:
  5012                           
  5013                           ;gemsecs.c: 114:        while (UART1_is_rx_ready())
  5014  0028A4  EC2D  F032         	call	_UART1_is_rx_ready	;wreg free
  5015  0028A8  503C               	movf	btemp,w,c
  5016  0028AA  A4D8               	btfss	status,2,c
  5017  0028AC  D7F9               	goto	l8987
  5018                           
  5019                           ;gemsecs.c: 116:        WaitMs(500);
  5020  0028AE  0EF4               	movlw	244
  5021  0028B0  6EE6               	movwf	postinc1,c
  5022  0028B2  0E01               	movlw	1
  5023  0028B4  6EE6               	movwf	postinc1,c
  5024  0028B6  EC29  F02F         	call	_WaitMs	;wreg free
  5025                           
  5026                           ;gemsecs.c: 117:        V.error = LINK_ERROR_CHECKSUM;
  5027  0028BA  0E05               	movlw	5
  5028  0028BC  0100               	movlb	0	; () banked
  5029  0028BE  6FB7               	movwf	(_V+80)& (0+255),b
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;gemsecs.c: 118:        V.failed_receive = 3;
  5033  0028C0  51BF               	movf	(_V+88)& (0+255),w,b
  5034  0028C2  0BF0               	andlw	-16
  5035  0028C4  0903               	iorlw	3
  5036  0028C6  6FBF               	movwf	(_V+88)& (0+255),b
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;gemsecs.c: 119:        *m_link = LINK_STATE_NAK;
  5040                           ;stkvar	_m_link @ sp[(-1)+-1]
  5041  0028C8  0EFE               	movlw	-2
  5042  0028CA  50E3               	movf	plusw1,w,c
  5043  0028CC  6ED9               	movwf	fsr2l,c
  5044  0028CE  6ADA               	clrf	fsr2h,c
  5045  0028D0  0E05               	movlw	5
  5046  0028D2                     L14:
  5047  0028D2  6EDF               	movwf	indf2,c
  5048  0028D4                     l8999:
  5049                           
  5050                           ;gemsecs.c: 125:    if (UART2_is_rx_ready()) {
  5051  0028D4  EC29  F032         	call	_UART2_is_rx_ready	;wreg free
  5052  0028D8  503C               	movf	btemp,w,c
  5053  0028DA  B4D8               	btfsc	status,2,c
  5054  0028DC  D11B               	goto	l9085
  5055                           
  5056                           ;gemsecs.c: 126:     rxData = UART2_Read();
  5057  0028DE  EC0F  F02E         	call	_UART2_Read	;wreg free
  5058                           
  5059                           ;stkvar	_rxData @ sp[(-1)+0]
  5060  0028E2  0EFF               	movlw	-1
  5061  0028E4  0060  F0F3  FFE3   	movff	btemp,plusw1
  5062                           
  5063                           ; BSR set to: 57
  5064                           ;gemsecs.c: 127:     if (rxData_l == 0) {
  5065  0028EA  502E               	movf	m_protocol@rxData_l,w,c
  5066  0028EC  A4D8               	btfss	status,2,c
  5067  0028EE  D00C               	goto	l9011
  5068                           
  5069                           ; BSR set to: 57
  5070                           ;gemsecs.c: 128:      r_block.length = rxData;
  5071                           ;stkvar	_rxData @ sp[(-1)+0]
  5072  0028F0  0EFF               	movlw	-1
  5073  0028F2  006F FF8C  F0D0    	movff	plusw1,_r_block+12
  5074                           
  5075                           ; BSR set to: 57
  5076                           ;gemsecs.c: 129:      run_checksum(0, 1);
  5077  0028F8  0E01               	movlw	1
  5078  0028FA  6EE6               	movwf	postinc1,c
  5079  0028FC  0E00               	movlw	0
  5080  0028FE  6EE6               	movwf	postinc1,c
  5081  002900  ECA7  F02E         	call	_run_checksum	;wreg free
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;gemsecs.c: 130:      rxData_l++;
  5085  002904  2A2E               	incf	m_protocol@rxData_l,f,c
  5086                           
  5087                           ;gemsecs.c: 131:     } else {
  5088  002906  D106               	goto	l9085
  5089  002908                     l9011:
  5090                           
  5091                           ; BSR set to: 57
  5092                           ;gemsecs.c: 135:      if (rxData_l <= sizeof(block10))
  5093  002908  0E0B               	movlw	11
  5094  00290A  602E               	cpfslt	m_protocol@rxData_l,c
  5095  00290C  D00C               	goto	l9015
  5096                           
  5097                           ; BSR set to: 57
  5098                           ;gemsecs.c: 136:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5099                           ;stkvar	_rxData @ sp[(-1)+0]
  5100  00290E  502E               	movf	m_protocol@rxData_l,w,c
  5101  002910  0819               	sublw	low (_H10+25)
  5102  002912  6ED9               	movwf	fsr2l,c
  5103  002914  0E00               	movlw	0
  5104  002916  A0D8               	btfss	status,0,c
  5105  002918  2AE8               	incf	wreg,f,c
  5106  00291A  0801               	sublw	high (_H10+25)
  5107  00291C  6EDA               	movwf	fsr2h,c
  5108  00291E  0EFF               	movlw	-1
  5109  002920  006F FF8F FFDF     	movff	plusw1,indf2
  5110  002926                     l9015:
  5111                           
  5112                           ; BSR set to: 57
  5113                           ;gemsecs.c: 137:      if (rxData_l <= r_block.length)
  5114  002926  502E               	movf	m_protocol@rxData_l,w,c
  5115  002928  0100               	movlb	0	; () banked
  5116  00292A  5DD0               	subwf	(_r_block+12)& (0+255),w,b
  5117  00292C  A0D8               	btfss	status,0,c
  5118  00292E  D00D               	goto	l9019
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;gemsecs.c: 138:       V.r_checksum = run_checksum(rxData, 0);
  5122  002930  0E00               	movlw	0
  5123  002932  6EE6               	movwf	postinc1,c
  5124                           
  5125                           ;stkvar	_rxData @ sp[(-2)+0]
  5126  002934  0EFE               	movlw	-2
  5127  002936  50E3               	movf	plusw1,w,c
  5128  002938  6EE6               	movwf	postinc1,c
  5129  00293A  ECA7  F02E         	call	_run_checksum	;wreg free
  5130  00293E  0060  F0F0  F0BA   	movff	btemp,_V+83
  5131  002944  0060  F0F4  F0BB   	movff	btemp+1,_V+84
  5132  00294A                     l9019:
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;gemsecs.c: 140:      if (rxData_l == r_block.length + 1)
  5136  00294A  502E               	movf	m_protocol@rxData_l,w,c
  5137  00294C  6E46               	movwf	btemp+10,c
  5138  00294E  6A47               	clrf	btemp+11,c
  5139  002950  51D0               	movf	(_r_block+12)& (0+255),w,b
  5140  002952  6E44               	movwf	btemp+8,c
  5141  002954  6A45               	clrf	btemp+9,c
  5142  002956  0E01               	movlw	1
  5143  002958  2644               	addwf	btemp+8,f,c
  5144  00295A  0E00               	movlw	0
  5145  00295C  2245               	addwfc	btemp+9,f,c
  5146  00295E  5046               	movf	btemp+10,w,c
  5147  002960  1844               	xorwf	btemp+8,w,c
  5148  002962  E109               	bnz	l9023
  5149  002964  5047               	movf	btemp+11,w,c
  5150  002966  1845               	xorwf	btemp+9,w,c
  5151  002968  A4D8               	btfss	status,2,c
  5152  00296A  D005               	goto	l9023
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;gemsecs.c: 141:       H10[1].checksum = (uint16_t) rxData << 8;
  5156                           ;stkvar	_rxData @ sp[(-1)+0]
  5157  00296C  0EFF               	movlw	-1
  5158  00296E  50E3               	movf	plusw1,w,c
  5159  002970  0101               	movlb	1	; () banked
  5160  002972  6F0E               	movwf	(_H10+14)& (0+255),b
  5161  002974  6B0D               	clrf	(_H10+13)& (0+255),b
  5162  002976                     l9023:
  5163                           
  5164                           ;gemsecs.c: 142:      if (rxData_l == r_block.length + 2)
  5165  002976  502E               	movf	m_protocol@rxData_l,w,c
  5166  002978  6E46               	movwf	btemp+10,c
  5167  00297A  6A47               	clrf	btemp+11,c
  5168  00297C  0100               	movlb	0	; () banked
  5169  00297E  51D0               	movf	(_r_block+12)& (0+255),w,b
  5170  002980  6E44               	movwf	btemp+8,c
  5171  002982  6A45               	clrf	btemp+9,c
  5172  002984  0E02               	movlw	2
  5173  002986  2644               	addwf	btemp+8,f,c
  5174  002988  0E00               	movlw	0
  5175  00298A  2245               	addwfc	btemp+9,f,c
  5176  00298C  5046               	movf	btemp+10,w,c
  5177  00298E  1844               	xorwf	btemp+8,w,c
  5178  002990  E10A               	bnz	l9027
  5179  002992  5047               	movf	btemp+11,w,c
  5180  002994  1845               	xorwf	btemp+9,w,c
  5181  002996  A4D8               	btfss	status,2,c
  5182  002998  D006               	goto	l9027
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;gemsecs.c: 143:       H10[1].checksum += rxData;
  5186                           ;stkvar	_rxData @ sp[(-1)+0]
  5187  00299A  0EFF               	movlw	-1
  5188  00299C  50E3               	movf	plusw1,w,c
  5189  00299E  0101               	movlb	1	; () banked
  5190  0029A0  270D               	addwf	(_H10+13)& (0+255),f,b
  5191  0029A2  0E00               	movlw	0
  5192  0029A4  230E               	addwfc	(_H10+14)& (0+255),f,b
  5193  0029A6                     l9027:
  5194                           
  5195                           ;gemsecs.c: 145:      rxData_l++;
  5196  0029A6  2A2E               	incf	m_protocol@rxData_l,f,c
  5197                           
  5198                           ;gemsecs.c: 146:      if (rxData_l > (r_block.length + 2)) {
  5199  0029A8  502E               	movf	m_protocol@rxData_l,w,c
  5200  0029AA  6E46               	movwf	btemp+10,c
  5201  0029AC  6A47               	clrf	btemp+11,c
  5202  0029AE  0100               	movlb	0	; () banked
  5203  0029B0  51D0               	movf	(_r_block+12)& (0+255),w,b
  5204  0029B2  6E44               	movwf	btemp+8,c
  5205  0029B4  6A45               	clrf	btemp+9,c
  5206  0029B6  0E02               	movlw	2
  5207  0029B8  2644               	addwf	btemp+8,f,c
  5208  0029BA  0E00               	movlw	0
  5209  0029BC  2245               	addwfc	btemp+9,f,c
  5210  0029BE  5046               	movf	btemp+10,w,c
  5211  0029C0  5C44               	subwf	btemp+8,w,c
  5212  0029C2  5045               	movf	btemp+9,w,c
  5213  0029C4  0A80               	xorlw	128
  5214  0029C6  6E3C               	movwf	btemp,c
  5215  0029C8  5047               	movf	btemp+11,w,c
  5216  0029CA  0A80               	xorlw	128
  5217  0029CC  583C               	subwfb	btemp,w,c
  5218  0029CE  B0D8               	btfsc	status,0,c
  5219  0029D0  D0A1               	goto	l9085
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;gemsecs.c: 147:       if (V.r_checksum == H10[1].checksum) {
  5223  0029D2  0101               	movlb	1	; () banked
  5224  0029D4  510D               	movf	(_H10+13)& (0+255),w,b
  5225  0029D6  0100               	movlb	0	; () banked
  5226  0029D8  19BA               	xorwf	(_V+83)& (0+255),w,b
  5227  0029DA  E10E               	bnz	l9037
  5228  0029DC  0101               	movlb	1	; () banked
  5229  0029DE  510E               	movf	(_H10+14)& (0+255),w,b
  5230  0029E0  0100               	movlb	0	; () banked
  5231  0029E2  19BB               	xorwf	(_V+84)& (0+255),w,b
  5232  0029E4  A4D8               	btfss	status,2,c
  5233  0029E6  D008               	goto	l9037
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;gemsecs.c: 148:        *m_link = LINK_STATE_ACK;
  5237                           ;stkvar	_m_link @ sp[(-1)+-1]
  5238  0029E8  0EFE               	movlw	-2
  5239  0029EA  50E3               	movf	plusw1,w,c
  5240  0029EC  6ED9               	movwf	fsr2l,c
  5241  0029EE  6ADA               	clrf	fsr2h,c
  5242  0029F0  0E03               	movlw	3
  5243  0029F2  D06D               	goto	L17
  5244  0029F4                     l9035:
  5245  0029F4  EC0F  F02E         	call	_UART2_Read	;wreg free
  5246  0029F8                     l9037:
  5247                           
  5248                           ;gemsecs.c: 150:        while (UART2_is_rx_ready())
  5249  0029F8  EC29  F032         	call	_UART2_is_rx_ready	;wreg free
  5250  0029FC  503C               	movf	btemp,w,c
  5251  0029FE  A4D8               	btfss	status,2,c
  5252  002A00  D7F9               	goto	l9035
  5253                           
  5254                           ;gemsecs.c: 152:        WaitMs(500);
  5255  002A02  0EF4               	movlw	244
  5256  002A04  6EE6               	movwf	postinc1,c
  5257  002A06  0E01               	movlw	1
  5258  002A08  6EE6               	movwf	postinc1,c
  5259  002A0A  EC29  F02F         	call	_WaitMs	;wreg free
  5260                           
  5261                           ;gemsecs.c: 153:        V.error = LINK_ERROR_CHECKSUM;
  5262  002A0E  0E05               	movlw	5
  5263  002A10  0100               	movlb	0	; () banked
  5264  002A12  6FB7               	movwf	(_V+80)& (0+255),b
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;gemsecs.c: 154:        V.failed_receive = 4;
  5268  002A14  51BF               	movf	(_V+88)& (0+255),w,b
  5269  002A16  0BF0               	andlw	-16
  5270  002A18  0904               	iorlw	4
  5271  002A1A  D6AB               	goto	L16
  5272  002A1C                     l9047:
  5273                           
  5274                           ;gemsecs.c: 164:   WaitMs(50);
  5275  002A1C  0E32               	movlw	50
  5276  002A1E  6EE6               	movwf	postinc1,c
  5277  002A20  0E00               	movlw	0
  5278  002A22  6EE6               	movwf	postinc1,c
  5279  002A24  EC29  F02F         	call	_WaitMs	;wreg free
  5280                           
  5281                           ;gemsecs.c: 166:   V.stream = H10[1].block.block.stream;
  5282  002A28  0101               	movlb	1	; () banked
  5283  002A2A  5116               	movf	(_H10+22)& (0+255),w,b
  5284  002A2C  0B7F               	andlw	127
  5285  002A2E  0100               	movlb	0	; () banked
  5286  002A30  6FB5               	movwf	(_V+78)& (0+255),b
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;gemsecs.c: 167:   V.function = H10[1].block.block.function;
  5290  002A32  C115  F0B6         	movff	_H10+21,_V+79
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;gemsecs.c: 168:   V.systemb = H10[1].block.block.systemb;
  5294  002A36  C10F  F0B1         	movff	_H10+15,_V+74
  5295  002A3A  C110  F0B2         	movff	_H10+16,_V+75
  5296  002A3E  C111  F0B3         	movff	_H10+17,_V+76
  5297  002A42  C112  F0B4         	movff	_H10+18,_V+77
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;gemsecs.c: 169:   V.rbit = H10[1].block.block.rbit;
  5301  002A46  0101               	movlb	1	; () banked
  5302  002A48  AF18               	btfss	(_H10+24)& (0+255),7,b
  5303  002A4A  D003               	bra	u5825
  5304  002A4C  0100               	movlb	0	; () banked
  5305  002A4E  81BE               	bsf	(_V+87)& (0+255),0,b
  5306  002A50  D002               	bra	u5827
  5307  002A52                     u5825:
  5308  002A52  0100               	movlb	0	; () banked
  5309  002A54  91BE               	bcf	(_V+87)& (0+255),0,b
  5310  002A56                     u5827:
  5311                           
  5312                           ; BSR set to: 0
  5313                           ;gemsecs.c: 170:   V.wbit = H10[1].block.block.wbit;
  5314  002A56  0101               	movlb	1	; () banked
  5315  002A58  AF16               	btfss	(_H10+22)& (0+255),7,b
  5316  002A5A  D003               	bra	u5835
  5317  002A5C  0100               	movlb	0	; () banked
  5318  002A5E  83BE               	bsf	(_V+87)& (0+255),1,b
  5319  002A60  D002               	bra	u5837
  5320  002A62                     u5835:
  5321  002A62  0100               	movlb	0	; () banked
  5322  002A64  93BE               	bcf	(_V+87)& (0+255),1,b
  5323  002A66                     u5837:
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;gemsecs.c: 171:   V.ebit = H10[1].block.block.ebit;
  5327  002A66  0101               	movlb	1	; () banked
  5328  002A68  AF14               	btfss	(_H10+20)& (0+255),7,b
  5329  002A6A  D003               	bra	u5845
  5330  002A6C  0100               	movlb	0	; () banked
  5331  002A6E  85BE               	bsf	(_V+87)& (0+255),2,b
  5332  002A70  D002               	bra	u5847
  5333  002A72                     u5845:
  5334  002A72  0100               	movlb	0	; () banked
  5335  002A74  95BE               	bcf	(_V+87)& (0+255),2,b
  5336  002A76                     u5847:
  5337                           
  5338                           ; BSR set to: 0
  5339                           ;gemsecs.c: 172:   V.failed_receive = 0;
  5340  002A76  0EF0               	movlw	-16
  5341  002A78  17BF               	andwf	(_V+88)& (0+255),f,b
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;gemsecs.c: 173:   V.g_state = secs_gem_state(V.stream, V.function);
  5345  002A7A  51B6               	movf	(_V+79)& (0+255),w,b
  5346  002A7C  6EE6               	movwf	postinc1,c
  5347  002A7E  51B5               	movf	(_V+78)& (0+255),w,b
  5348  002A80  6EE6               	movwf	postinc1,c
  5349  002A82  ECE9  F029         	call	_secs_gem_state	;wreg free
  5350  002A86  503C               	movf	btemp,w,c
  5351  002A88  0100               	movlb	0	; () banked
  5352  002A8A  6F69               	movwf	(_V+2)& (0+255),b
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;gemsecs.c: 174:   *m_link = LINK_STATE_DONE;
  5356                           ;stkvar	_m_link @ sp[(-1)+-1]
  5357  002A8C  0EFE               	movlw	-2
  5358  002A8E  50E3               	movf	plusw1,w,c
  5359  002A90  6ED9               	movwf	fsr2l,c
  5360  002A92  6ADA               	clrf	fsr2h,c
  5361  002A94  0E04               	movlw	4
  5362  002A96  D01B               	goto	L17
  5363  002A98                     l9067:
  5364                           
  5365                           ;gemsecs.c: 177:   *m_link = LINK_STATE_ERROR;
  5366                           ;stkvar	_m_link @ sp[(-1)+-1]
  5367  002A98  0EFE               	movlw	-2
  5368  002A9A  50E3               	movf	plusw1,w,c
  5369  002A9C  6ED9               	movwf	fsr2l,c
  5370  002A9E  6ADA               	clrf	fsr2h,c
  5371  002AA0  0E06               	movlw	6
  5372  002AA2  6EDF               	movwf	indf2,c
  5373                           
  5374                           ;gemsecs.c: 178:   while ((uart1RxCount)) {
  5375  002AA4  D002               	goto	l9071
  5376  002AA6                     l9069:
  5377                           
  5378                           ;gemsecs.c: 179:    UART1_Read();
  5379  002AA6  EC2E  F02E         	call	_UART1_Read	;wreg free
  5380  002AAA                     l9071:
  5381                           
  5382                           ;gemsecs.c: 178:   while ((uart1RxCount)) {
  5383  002AAA  5036               	movf	_uart1RxCount,w,c	;volatile
  5384  002AAC  B4D8               	btfsc	status,2,c
  5385  002AAE  D003               	goto	l9075
  5386  002AB0  D7FA               	goto	l9069
  5387  002AB2                     l9073:
  5388                           
  5389                           ;gemsecs.c: 182:    UART2_Read();
  5390  002AB2  EC0F  F02E         	call	_UART2_Read	;wreg free
  5391  002AB6                     l9075:
  5392                           
  5393                           ;gemsecs.c: 181:   while ((uart2RxCount)) {
  5394  002AB6  5030               	movf	_uart2RxCount,w,c	;volatile
  5395  002AB8  B4D8               	btfsc	status,2,c
  5396  002ABA  D02C               	goto	l9085
  5397  002ABC  D7FA               	goto	l9073
  5398  002ABE                     l9077:
  5399                           
  5400                           ;gemsecs.c: 188:   V.failed_receive = 0;
  5401  002ABE  0EF0               	movlw	-16
  5402  002AC0  0100               	movlb	0	; () banked
  5403  002AC2  17BF               	andwf	(_V+88)& (0+255),f,b
  5404  002AC4                     l9079:
  5405                           
  5406                           ;gemsecs.c: 190:   *m_link = LINK_STATE_IDLE;
  5407                           ;stkvar	_m_link @ sp[(-1)+-1]
  5408  002AC4  0EFE               	movlw	-2
  5409  002AC6  50E3               	movf	plusw1,w,c
  5410  002AC8  6ED9               	movwf	fsr2l,c
  5411  002ACA  6ADA               	clrf	fsr2h,c
  5412  002ACC  0E00               	movlw	0
  5413  002ACE                     L17:
  5414  002ACE  6EDF               	movwf	indf2,c
  5415                           
  5416                           ;gemsecs.c: 192:   break;
  5417  002AD0  D021               	goto	l9085
  5418  002AD2                     l9083:
  5419                           
  5420                           ;stkvar	_m_link @ sp[(-1)+-1]
  5421  002AD2  0EFE               	movlw	-2
  5422  002AD4  50E3               	movf	plusw1,w,c
  5423  002AD6  6ED9               	movwf	fsr2l,c
  5424  002AD8  6ADA               	clrf	fsr2h,c
  5425  002ADA  50DF               	movf	indf2,w,c
  5426  002ADC  6E46               	movwf	btemp+10,c
  5427  002ADE  6A47               	clrf	btemp+11,c
  5428                           
  5429                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5430                           ; Switch size 1, requested type "simple"
  5431                           ; Number of cases is 1, Range of values is 0 to 0
  5432                           ; switch strategies available:
  5433                           ; Name         Instructions Cycles
  5434                           ; simple_byte            4     3 (average)
  5435                           ;	Chosen strategy is simple_byte
  5436  002AE0  5047               	movf	btemp+11,w,c
  5437  002AE2  0A00               	xorlw	0	; case 0
  5438  002AE4  A4D8               	btfss	status,2,c
  5439  002AE6  D7EE               	goto	l9079
  5440                           
  5441                           ; Switch size 1, requested type "simple"
  5442                           ; Number of cases is 7, Range of values is 0 to 6
  5443                           ; switch strategies available:
  5444                           ; Name         Instructions Cycles
  5445                           ; simple_byte           22    12 (average)
  5446                           ;	Chosen strategy is simple_byte
  5447  002AE8  5046               	movf	btemp+10,w,c
  5448  002AEA  0A00               	xorlw	0	; case 0
  5449  002AEC  B4D8               	btfsc	status,2,c
  5450  002AEE  D5AA               	goto	l8899
  5451  002AF0  0A01               	xorlw	1	; case 1
  5452  002AF2  B4D8               	btfsc	status,2,c
  5453  002AF4  D5F9               	goto	l8929
  5454  002AF6  0A03               	xorlw	3	; case 2
  5455  002AF8  B4D8               	btfsc	status,2,c
  5456  002AFA  D62E               	goto	l8945
  5457  002AFC  0A01               	xorlw	1	; case 3
  5458  002AFE  B4D8               	btfsc	status,2,c
  5459  002B00  D78D               	goto	l9047
  5460  002B02  0A07               	xorlw	7	; case 4
  5461  002B04  B4D8               	btfsc	status,2,c
  5462  002B06  D7DB               	goto	l9077
  5463  002B08  0A01               	xorlw	1	; case 5
  5464  002B0A  B4D8               	btfsc	status,2,c
  5465  002B0C  D7C5               	goto	l9067
  5466  002B0E  0A03               	xorlw	3	; case 6
  5467  002B10  A4D8               	btfss	status,2,c
  5468  002B12  D7D8               	goto	l9079
  5469  002B14                     l9085:
  5470                           
  5471                           ;gemsecs.c: 195:  return *m_link;
  5472                           ;stkvar	_m_link @ sp[(-1)+-1]
  5473  002B14  0EFE               	movlw	-2
  5474  002B16  50E3               	movf	plusw1,w,c
  5475  002B18  6ED9               	movwf	fsr2l,c
  5476  002B1A  6ADA               	clrf	fsr2h,c
  5477  002B1C  50DF               	movf	indf2,w,c
  5478  002B1E  6E3C               	movwf	btemp,c
  5479                           
  5480                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5481  002B20  52E5               	movf	postdec1,f,c
  5482  002B22  52E5               	movf	postdec1,f,c
  5483  002B24  0012               	return		;funcret
  5484  002B26                     __end_of_m_protocol:
  5485                           	opt callstack 0
  5486                           
  5487 ;; *************** function _secs_send *****************
  5488 ;; Defined at:
  5489 ;;		line 421 in file "gemsecs.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  byte_block      2  [STACK] PTR unsigned char 
  5492 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  5493 ;;		 -> H14(17), H13(16), H12(30), H10(91), 
  5494 ;;  length          1  [STACK] unsigned char 
  5495 ;;  fake            1  [STACK] _Bool 
  5496 ;;  s_uart          1  [STACK] unsigned char 
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;  k               2  [STACK] PTR unsigned char 
  5499 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  5500 ;;		 -> H14(17), H13(16), H12(30), H10(91), 
  5501 ;;  checksum        2  [STACK] unsigned short 
  5502 ;;  i               1  [STACK] unsigned char 
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1  [STACK] _Bool 
  5505 ;; Registers used:
  5506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5516 ;;Total ram usage:        0 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; Hardware stack levels required when called:    4
  5519 ;; This function calls:
  5520 ;;		_UART1_Write
  5521 ;;		_UART1_is_tx_ready
  5522 ;;		_UART1_put_buffer
  5523 ;;		_UART2_Write
  5524 ;;		_UART2_is_tx_ready
  5525 ;;		_UART2_put_buffer
  5526 ;;		_block_checksum
  5527 ;; This function is called by:
  5528 ;;		_m_protocol
  5529 ;;		_r_protocol
  5530 ;;		_t_protocol
  5531 ;; This function uses a reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text6
  5535  004266                     __ptext6:
  5536                           	opt callstack 0
  5537  004266                     _secs_send:
  5538                           	opt callstack 0
  5539                           
  5540                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5541  004266  0E05               	movlw	5
  5542  004268  26E1               	addwf	fsr1l,f,c
  5543  00426A  0E00               	movlw	0
  5544  00426C  22E2               	addwfc	fsr1h,f,c
  5545                           
  5546                           ;gemsecs.c: 421: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake, uint8_
      +                          t s_uart);gemsecs.c: 422: {;gemsecs.c: 423:  uint8_t i, *k;;gemsecs.c: 424:  uint16_t ch
      +                          ecksum;;gemsecs.c: 426:  k = (uint8_t *) byte_block;
  5547                           ;stkvar	_byte_block @ sp[(-5)+-2]
  5548                           
  5549                           ;incstack = 0
  5550  00426E  0EF9               	movlw	-7
  5551  004270  006F FF8C  F046    	movff	plusw1,btemp+10
  5552  004276  0EFA               	movlw	-6
  5553  004278  006F FF8C  F047    	movff	plusw1,btemp+11
  5554                           
  5555                           ;stkvar	_k @ sp[(-5)+0]
  5556  00427E  0EFC               	movlw	-4
  5557  004280  0060  F11F  FFE3   	movff	btemp+11,plusw1
  5558  004286  0EFB               	movlw	-5
  5559  004288  0060  F11B  FFE3   	movff	btemp+10,plusw1
  5560                           
  5561                           ;gemsecs.c: 428:  ++V.ticks;
  5562  00428E  0E01               	movlw	1
  5563  004290  0100               	movlb	0	; () banked
  5564  004292  27AD               	addwf	(_V+70)& (0+255),f,b
  5565  004294  0E00               	movlw	0
  5566  004296  23AE               	addwfc	(_V+71)& (0+255),f,b
  5567  004298  23AF               	addwfc	(_V+72)& (0+255),f,b
  5568  00429A  23B0               	addwfc	(_V+73)& (0+255),f,b
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;gemsecs.c: 429:  V.error = LINK_ERROR_NONE;
  5572  00429C  6BB7               	clrf	(_V+80)& (0+255),b
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;gemsecs.c: 430:  if ((length - 3) != k[length - 1]) {
  5576                           ;stkvar	_length @ sp[(-5)+-3]
  5577  00429E  0EF8               	movlw	-8
  5578  0042A0  50E3               	movf	plusw1,w,c
  5579  0042A2  6E46               	movwf	btemp+10,c
  5580  0042A4  6A47               	clrf	btemp+11,c
  5581                           
  5582                           ;stkvar	_k @ sp[(-5)+0]
  5583  0042A6  0EFB               	movlw	-5
  5584  0042A8  50E3               	movf	plusw1,w,c
  5585  0042AA  2646               	addwf	btemp+10,f,c
  5586  0042AC  0EFC               	movlw	-4
  5587  0042AE  50E3               	movf	plusw1,w,c
  5588  0042B0  2247               	addwfc	btemp+11,f,c
  5589  0042B2  0EFF               	movlw	255
  5590  0042B4  2446               	addwf	btemp+10,w,c
  5591  0042B6  6ED9               	movwf	fsr2l,c
  5592  0042B8  0EFF               	movlw	255
  5593  0042BA  2047               	addwfc	btemp+11,w,c
  5594  0042BC  6EDA               	movwf	fsr2h,c
  5595  0042BE  50DF               	movf	indf2,w,c
  5596  0042C0  6E46               	movwf	btemp+10,c
  5597  0042C2  6A47               	clrf	btemp+11,c
  5598  0042C4  0EFD               	movlw	253
  5599  0042C6  6E44               	movwf	btemp+8,c
  5600  0042C8  0EFF               	movlw	255
  5601  0042CA  6E45               	movwf	btemp+9,c
  5602                           
  5603                           ;stkvar	_length @ sp[(-5)+-3]
  5604  0042CC  0EF8               	movlw	-8
  5605  0042CE  50E3               	movf	plusw1,w,c
  5606  0042D0  6E42               	movwf	btemp+6,c
  5607  0042D2  6A43               	clrf	btemp+7,c
  5608  0042D4  5044               	movf	btemp+8,w,c
  5609  0042D6  2642               	addwf	btemp+6,f,c
  5610  0042D8  5045               	movf	btemp+9,w,c
  5611  0042DA  2243               	addwfc	btemp+7,f,c
  5612  0042DC  5046               	movf	btemp+10,w,c
  5613  0042DE  1842               	xorwf	btemp+6,w,c
  5614  0042E0  E104               	bnz	u5130
  5615  0042E2  5047               	movf	btemp+11,w,c
  5616  0042E4  1843               	xorwf	btemp+7,w,c
  5617  0042E6  B4D8               	btfsc	status,2,c
  5618  0042E8  D003               	goto	l8473
  5619  0042EA                     u5130:
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;gemsecs.c: 431:   V.error = LINK_ERROR_SEND;
  5623  0042EA  0E08               	movlw	8
  5624  0042EC  6FB7               	movwf	(_V+80)& (0+255),b
  5625  0042EE  D0EA               	goto	l1707
  5626  0042F0                     l8473:
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;gemsecs.c: 440:  checksum = block_checksum(&k[2], length - 3);
  5630  0042F0  0EFD               	movlw	253
  5631  0042F2  6E46               	movwf	btemp+10,c
  5632  0042F4  0EFF               	movlw	255
  5633  0042F6  6E47               	movwf	btemp+11,c
  5634                           
  5635                           ;stkvar	_length @ sp[(-5)+-3]
  5636  0042F8  0EF8               	movlw	-8
  5637  0042FA  50E3               	movf	plusw1,w,c
  5638  0042FC  6E44               	movwf	btemp+8,c
  5639  0042FE  6A45               	clrf	btemp+9,c
  5640  004300  5046               	movf	btemp+10,w,c
  5641  004302  2644               	addwf	btemp+8,f,c
  5642  004304  5047               	movf	btemp+11,w,c
  5643  004306  2245               	addwfc	btemp+9,f,c
  5644  004308  0060  F113  FFE6   	movff	btemp+8,postinc1
  5645  00430E  0060  F117  FFE6   	movff	btemp+9,postinc1
  5646                           
  5647                           ;stkvar	_k @ sp[(-7)+0]
  5648  004314  0EF9               	movlw	-7
  5649  004316  50E3               	movf	plusw1,w,c
  5650  004318  0F02               	addlw	2
  5651  00431A  6E46               	movwf	btemp+10,c
  5652  00431C  0EFA               	movlw	-6
  5653  00431E  006F FF8C  F047    	movff	plusw1,btemp+11
  5654  004324  0E00               	movlw	0
  5655  004326  2247               	addwfc	btemp+11,f,c
  5656  004328  0060  F11B  FFE6   	movff	btemp+10,postinc1
  5657  00432E  0060  F11F  FFE6   	movff	btemp+11,postinc1
  5658  004334  EC6A  F027         	call	_block_checksum	;wreg free
  5659                           
  5660                           ;stkvar	_checksum @ sp[(-5)+2]
  5661  004338  0EFD               	movlw	-3
  5662  00433A  0060  F0F3  FFE3   	movff	btemp,plusw1
  5663  004340  0EFE               	movlw	-2
  5664  004342  0060  F0F7  FFE3   	movff	btemp+1,plusw1
  5665                           
  5666                           ;gemsecs.c: 441:  k[0] = checksum & 0xff;
  5667                           ;stkvar	_checksum @ sp[(-5)+2]
  5668                           ;stkvar	_k @ sp[(-5)+0]
  5669  004348  0EFB               	movlw	-5
  5670  00434A  006F FF8F FFD9     	movff	plusw1,fsr2l
  5671  004350  0EFC               	movlw	-4
  5672  004352  006F FF8F FFDA     	movff	plusw1,fsr2h
  5673  004358  0EFD               	movlw	-3
  5674  00435A  006F FF8F FFDF     	movff	plusw1,indf2
  5675                           
  5676                           ;gemsecs.c: 442:  k[1] = (checksum >> 8)&0xff;
  5677                           ;stkvar	_checksum @ sp[(-5)+2]
  5678  004360  0EFE               	movlw	254
  5679  004362  24E1               	addwf	fsr1l,w,c
  5680  004364  6ED9               	movwf	fsr2l,c
  5681  004366  0EFF               	movlw	255
  5682  004368  20E2               	addwfc	fsr1h,w,c
  5683  00436A  6EDA               	movwf	fsr2h,c
  5684                           
  5685                           ;stkvar	_k @ sp[(-5)+0]
  5686  00436C  0EFB               	movlw	-5
  5687  00436E  006F FF8C  F046    	movff	plusw1,btemp+10
  5688  004374  0EFC               	movlw	-4
  5689  004376  006F FF8C  F047    	movff	plusw1,btemp+11
  5690  00437C  0E01               	movlw	1
  5691  00437E  2446               	addwf	btemp+10,w,c
  5692  004380  6EE9               	movwf	fsr0l,c
  5693  004382  0E00               	movlw	0
  5694  004384  2047               	addwfc	btemp+11,w,c
  5695  004386  6EEA               	movwf	fsr0h,c
  5696  004388  006F FF7F FFEF     	movff	indf2,indf0
  5697                           
  5698                           ;gemsecs.c: 443:  V.t_checksum = checksum;
  5699                           ;stkvar	_checksum @ sp[(-5)+2]
  5700  00438E  0EFD               	movlw	-3
  5701  004390  006F FF8C  F0BC    	movff	plusw1,_V+85
  5702  004396  0EFE               	movlw	-2
  5703  004398  006F FF8C  F0BD    	movff	plusw1,_V+86
  5704                           
  5705                           ;gemsecs.c: 445:  switch (s_uart) {
  5706  00439E  D082               	goto	l8519
  5707  0043A0                     l8481:
  5708  0043A0  EC21  F032         	call	_UART2_is_tx_ready	;wreg free
  5709  0043A4  0E3F               	movlw	63
  5710  0043A6  643C               	cpfsgt	btemp,c
  5711  0043A8  D7FB               	goto	l8481
  5712                           
  5713                           ;gemsecs.c: 448:   for (i = length; i > 0; i--) {
  5714                           ;stkvar	_length @ sp[(-5)+-3]
  5715                           ;stkvar	_i @ sp[(-5)+4]
  5716  0043AA  0EF8               	movlw	-8
  5717  0043AC  006F FF8C  F03C    	movff	plusw1,btemp
  5718  0043B2  0EFF               	movlw	-1
  5719  0043B4  0060  F0F3  FFE3   	movff	btemp,plusw1
  5720  0043BA                     l8485:
  5721                           
  5722                           ;stkvar	_i @ sp[(-5)+4]
  5723  0043BA  0EFF               	movlw	-1
  5724  0043BC  50E3               	movf	plusw1,w,c
  5725  0043BE  B4D8               	btfsc	status,2,c
  5726  0043C0  D081               	goto	l1707
  5727                           
  5728                           ;gemsecs.c: 449:    if (fake) {
  5729                           ;stkvar	_fake @ sp[(-5)+-4]
  5730  0043C2  0EF7               	movlw	-9
  5731  0043C4  50E3               	movf	plusw1,w,c
  5732  0043C6  B4D8               	btfsc	status,2,c
  5733  0043C8  D015               	goto	l8493
  5734                           
  5735                           ;gemsecs.c: 450:     UART2_put_buffer(k[i - 1]);
  5736                           ;stkvar	_i @ sp[(-5)+4]
  5737  0043CA  0EFF               	movlw	-1
  5738  0043CC  50E3               	movf	plusw1,w,c
  5739  0043CE  6E46               	movwf	btemp+10,c
  5740  0043D0  6A47               	clrf	btemp+11,c
  5741                           
  5742                           ;stkvar	_k @ sp[(-5)+0]
  5743  0043D2  0EFB               	movlw	-5
  5744  0043D4  50E3               	movf	plusw1,w,c
  5745  0043D6  2646               	addwf	btemp+10,f,c
  5746  0043D8  0EFC               	movlw	-4
  5747  0043DA  50E3               	movf	plusw1,w,c
  5748  0043DC  2247               	addwfc	btemp+11,f,c
  5749  0043DE  0EFF               	movlw	255
  5750  0043E0  2446               	addwf	btemp+10,w,c
  5751  0043E2  6ED9               	movwf	fsr2l,c
  5752  0043E4  0EFF               	movlw	255
  5753  0043E6  2047               	addwfc	btemp+11,w,c
  5754  0043E8  6EDA               	movwf	fsr2h,c
  5755  0043EA  50DF               	movf	indf2,w,c
  5756  0043EC  6EE6               	movwf	postinc1,c
  5757  0043EE  ECFF  F02E         	call	_UART2_put_buffer	;wreg free
  5758                           
  5759                           ;gemsecs.c: 451:    } else {
  5760  0043F2  D014               	goto	l8495
  5761  0043F4                     l8493:
  5762                           
  5763                           ;gemsecs.c: 453:     UART2_Write(k[i - 1]);
  5764                           ;stkvar	_i @ sp[(-5)+4]
  5765  0043F4  0EFF               	movlw	-1
  5766  0043F6  50E3               	movf	plusw1,w,c
  5767  0043F8  6E46               	movwf	btemp+10,c
  5768  0043FA  6A47               	clrf	btemp+11,c
  5769                           
  5770                           ;stkvar	_k @ sp[(-5)+0]
  5771  0043FC  0EFB               	movlw	-5
  5772  0043FE  50E3               	movf	plusw1,w,c
  5773  004400  2646               	addwf	btemp+10,f,c
  5774  004402  0EFC               	movlw	-4
  5775  004404  50E3               	movf	plusw1,w,c
  5776  004406  2247               	addwfc	btemp+11,f,c
  5777  004408  0EFF               	movlw	255
  5778  00440A  2446               	addwf	btemp+10,w,c
  5779  00440C  6ED9               	movwf	fsr2l,c
  5780  00440E  0EFF               	movlw	255
  5781  004410  2047               	addwfc	btemp+11,w,c
  5782  004412  6EDA               	movwf	fsr2h,c
  5783  004414  50DF               	movf	indf2,w,c
  5784  004416  6EE6               	movwf	postinc1,c
  5785  004418  ECD1  F02D         	call	_UART2_Write	;wreg free
  5786  00441C                     l8495:
  5787                           
  5788                           ; BSR set to: 57
  5789                           ;gemsecs.c: 455:   }
  5790                           ;stkvar	_i @ sp[(-5)+4]
  5791  00441C  0EFF               	movlw	-1
  5792  00441E  06E3               	decf	plusw1,f,c
  5793  004420  D7CC               	goto	l8485
  5794  004422                     l8499:
  5795  004422  EC25  F032         	call	_UART1_is_tx_ready	;wreg free
  5796  004426  0E3F               	movlw	63
  5797  004428  643C               	cpfsgt	btemp,c
  5798  00442A  D7FB               	goto	l8499
  5799                           
  5800                           ;gemsecs.c: 460:   for (i = length; i > 0; i--) {
  5801                           ;stkvar	_length @ sp[(-5)+-3]
  5802                           ;stkvar	_i @ sp[(-5)+4]
  5803  00442C  0EF8               	movlw	-8
  5804  00442E  006F FF8C  F03C    	movff	plusw1,btemp
  5805  004434  0EFF               	movlw	-1
  5806  004436  0060  F0F3  FFE3   	movff	btemp,plusw1
  5807  00443C                     l8503:
  5808                           
  5809                           ;stkvar	_i @ sp[(-5)+4]
  5810  00443C  0EFF               	movlw	-1
  5811  00443E  50E3               	movf	plusw1,w,c
  5812  004440  B4D8               	btfsc	status,2,c
  5813  004442  D040               	goto	l1707
  5814                           
  5815                           ;gemsecs.c: 461:    if (fake) {
  5816                           ;stkvar	_fake @ sp[(-5)+-4]
  5817  004444  0EF7               	movlw	-9
  5818  004446  50E3               	movf	plusw1,w,c
  5819  004448  B4D8               	btfsc	status,2,c
  5820  00444A  D015               	goto	l8511
  5821                           
  5822                           ;gemsecs.c: 462:     UART1_put_buffer(k[i - 1]);
  5823                           ;stkvar	_i @ sp[(-5)+4]
  5824  00444C  0EFF               	movlw	-1
  5825  00444E  50E3               	movf	plusw1,w,c
  5826  004450  6E46               	movwf	btemp+10,c
  5827  004452  6A47               	clrf	btemp+11,c
  5828                           
  5829                           ;stkvar	_k @ sp[(-5)+0]
  5830  004454  0EFB               	movlw	-5
  5831  004456  50E3               	movf	plusw1,w,c
  5832  004458  2646               	addwf	btemp+10,f,c
  5833  00445A  0EFC               	movlw	-4
  5834  00445C  50E3               	movf	plusw1,w,c
  5835  00445E  2247               	addwfc	btemp+11,f,c
  5836  004460  0EFF               	movlw	255
  5837  004462  2446               	addwf	btemp+10,w,c
  5838  004464  6ED9               	movwf	fsr2l,c
  5839  004466  0EFF               	movlw	255
  5840  004468  2047               	addwfc	btemp+11,w,c
  5841  00446A  6EDA               	movwf	fsr2h,c
  5842  00446C  50DF               	movf	indf2,w,c
  5843  00446E  6EE6               	movwf	postinc1,c
  5844  004470  EC14  F02F         	call	_UART1_put_buffer	;wreg free
  5845                           
  5846                           ;gemsecs.c: 463:    } else {
  5847  004474  D014               	goto	l8513
  5848  004476                     l8511:
  5849                           
  5850                           ;gemsecs.c: 465:     UART1_Write(k[i - 1]);
  5851                           ;stkvar	_i @ sp[(-5)+4]
  5852  004476  0EFF               	movlw	-1
  5853  004478  50E3               	movf	plusw1,w,c
  5854  00447A  6E46               	movwf	btemp+10,c
  5855  00447C  6A47               	clrf	btemp+11,c
  5856                           
  5857                           ;stkvar	_k @ sp[(-5)+0]
  5858  00447E  0EFB               	movlw	-5
  5859  004480  50E3               	movf	plusw1,w,c
  5860  004482  2646               	addwf	btemp+10,f,c
  5861  004484  0EFC               	movlw	-4
  5862  004486  50E3               	movf	plusw1,w,c
  5863  004488  2247               	addwfc	btemp+11,f,c
  5864  00448A  0EFF               	movlw	255
  5865  00448C  2446               	addwf	btemp+10,w,c
  5866  00448E  6ED9               	movwf	fsr2l,c
  5867  004490  0EFF               	movlw	255
  5868  004492  2047               	addwfc	btemp+11,w,c
  5869  004494  6EDA               	movwf	fsr2h,c
  5870  004496  50DF               	movf	indf2,w,c
  5871  004498  6EE6               	movwf	postinc1,c
  5872  00449A  ECF0  F02D         	call	_UART1_Write	;wreg free
  5873  00449E                     l8513:
  5874                           
  5875                           ; BSR set to: 57
  5876                           ;gemsecs.c: 467:   }
  5877                           ;stkvar	_i @ sp[(-5)+4]
  5878  00449E  0EFF               	movlw	-1
  5879  0044A0  06E3               	decf	plusw1,f,c
  5880  0044A2  D7CC               	goto	l8503
  5881  0044A4                     l8519:
  5882                           
  5883                           ;stkvar	_s_uart @ sp[(-5)+-5]
  5884  0044A4  0EF6               	movlw	-10
  5885  0044A6  50E3               	movf	plusw1,w,c
  5886  0044A8  6E46               	movwf	btemp+10,c
  5887  0044AA  6A47               	clrf	btemp+11,c
  5888                           
  5889                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5890                           ; Switch size 1, requested type "simple"
  5891                           ; Number of cases is 1, Range of values is 0 to 0
  5892                           ; switch strategies available:
  5893                           ; Name         Instructions Cycles
  5894                           ; simple_byte            4     3 (average)
  5895                           ;	Chosen strategy is simple_byte
  5896  0044AC  5047               	movf	btemp+11,w,c
  5897  0044AE  0A00               	xorlw	0	; case 0
  5898  0044B0  A4D8               	btfss	status,2,c
  5899  0044B2  D7B7               	goto	l8499
  5900                           
  5901                           ; Switch size 1, requested type "simple"
  5902                           ; Number of cases is 2, Range of values is 1 to 2
  5903                           ; switch strategies available:
  5904                           ; Name         Instructions Cycles
  5905                           ; simple_byte            7     4 (average)
  5906                           ;	Chosen strategy is simple_byte
  5907  0044B4  5046               	movf	btemp+10,w,c
  5908  0044B6  0A01               	xorlw	1	; case 1
  5909  0044B8  B4D8               	btfsc	status,2,c
  5910  0044BA  D7B3               	goto	l8499
  5911  0044BC  0A03               	xorlw	3	; case 2
  5912  0044BE  B4D8               	btfsc	status,2,c
  5913  0044C0  D76F               	goto	l8481
  5914  0044C2  D7AF               	goto	l8499
  5915  0044C4                     l1707:
  5916                           
  5917                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
  5918  0044C4  0EF6               	movlw	246
  5919  0044C6  26E1               	addwf	fsr1l,f,c
  5920  0044C8  0EFF               	movlw	255
  5921  0044CA  22E2               	addwfc	fsr1h,f,c
  5922  0044CC  0012               	return		;funcret
  5923  0044CE                     __end_of_secs_send:
  5924                           	opt callstack 0
  5925                           
  5926 ;; *************** function _block_checksum *****************
  5927 ;; Defined at:
  5928 ;;		line 18 in file "gemsecs.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  byte_block      2  [STACK] PTR unsigned char 
  5931 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  5932 ;;		 -> H14(17), H13(16), H12(30), H10(91), 
  5933 ;;  byte_count      2  [STACK] unsigned short 
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;  i               2  [STACK] unsigned short 
  5936 ;;  sum             2  [STACK] unsigned short 
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  2  [STACK] unsigned short 
  5939 ;; Registers used:
  5940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  5941 ;; Tracked objects:
  5942 ;;		On entry : 3F/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5950 ;;Total ram usage:        0 bytes
  5951 ;; Hardware stack levels used:    1
  5952 ;; Hardware stack levels required when called:    3
  5953 ;; This function calls:
  5954 ;;		Nothing
  5955 ;; This function is called by:
  5956 ;;		_secs_send
  5957 ;; This function uses a reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text7
  5961  004ED4                     __ptext7:
  5962                           	opt callstack 0
  5963  004ED4                     _block_checksum:
  5964                           	opt callstack 0
  5965                           
  5966                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5967  004ED4  52E6               	movf	postinc1,f,c
  5968  004ED6  52E6               	movf	postinc1,f,c
  5969  004ED8  52E6               	movf	postinc1,f,c
  5970  004EDA  52E6               	movf	postinc1,f,c
  5971                           
  5972                           ;gemsecs.c: 18: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 19: {;gemsecs.c: 20:  uint16_t sum = 0, i;
  5973                           ;stkvar	_sum @ sp[(-4)+2]
  5974                           
  5975                           ;incstack = 0
  5976  004EDC  0EFE               	movlw	-2
  5977  004EDE  6AE3               	clrf	plusw1,c
  5978  004EE0  0EFF               	movlw	-1
  5979  004EE2  6AE3               	clrf	plusw1,c
  5980                           
  5981                           ;gemsecs.c: 22:  for (i = 0; i < byte_count; i++) {
  5982                           ;stkvar	_i @ sp[(-4)+0]
  5983  004EE4  0EFC               	movlw	-4
  5984  004EE6  6AE3               	clrf	plusw1,c
  5985  004EE8  0EFD               	movlw	-3
  5986  004EEA  6AE3               	clrf	plusw1,c
  5987  004EEC  D039               	goto	l8379
  5988  004EEE                     l8375:
  5989                           
  5990                           ;gemsecs.c: 23:   sum += byte_block[i];
  5991                           ;stkvar	_i @ sp[(-4)+0]
  5992  004EEE  0EFC               	movlw	-4
  5993  004EF0  006F FF8C  F046    	movff	plusw1,btemp+10
  5994  004EF6  0EFD               	movlw	-3
  5995  004EF8  006F FF8C  F047    	movff	plusw1,btemp+11
  5996                           
  5997                           ;stkvar	_byte_block @ sp[(-4)+-2]
  5998  004EFE  0EFA               	movlw	-6
  5999  004F00  006F FF8C  F044    	movff	plusw1,btemp+8
  6000  004F06  0EFB               	movlw	-5
  6001  004F08  006F FF8C  F045    	movff	plusw1,btemp+9
  6002  004F0E  5046               	movf	btemp+10,w,c
  6003  004F10  2444               	addwf	btemp+8,w,c
  6004  004F12  6ED9               	movwf	fsr2l,c
  6005  004F14  5047               	movf	btemp+11,w,c
  6006  004F16  2045               	addwfc	btemp+9,w,c
  6007  004F18  6EDA               	movwf	fsr2h,c
  6008  004F1A  50DF               	movf	indf2,w,c
  6009  004F1C  6E47               	movwf	btemp+11,c
  6010                           
  6011                           ;stkvar	_sum @ sp[(-4)+2]
  6012  004F1E  0EFE               	movlw	-2
  6013  004F20  50E3               	movf	plusw1,w,c
  6014  004F22  2447               	addwf	btemp+11,w,c
  6015  004F24  6E3C               	movwf	btemp,c
  6016  004F26  0EFE               	movlw	-2
  6017  004F28  0060  F0F3  FFE3   	movff	btemp,plusw1
  6018  004F2E  6A3C               	clrf	btemp,c
  6019  004F30  0EFF               	movlw	-1
  6020  004F32  50E3               	movf	plusw1,w,c
  6021  004F34  223C               	addwfc	btemp,f,c
  6022  004F36  0EFF               	movlw	-1
  6023  004F38  0060  F0F3  FFE3   	movff	btemp,plusw1
  6024                           
  6025                           ;gemsecs.c: 24:  }
  6026                           ;stkvar	_i @ sp[(-4)+0]
  6027  004F3E  0EFC               	movlw	-4
  6028  004F40  50E3               	movf	plusw1,w,c
  6029  004F42  0F01               	addlw	1
  6030  004F44  6E3C               	movwf	btemp,c
  6031  004F46  0EFC               	movlw	-4
  6032  004F48  0060  F0F3  FFE3   	movff	btemp,plusw1
  6033  004F4E  6A3C               	clrf	btemp,c
  6034  004F50  0EFD               	movlw	-3
  6035  004F52  50E3               	movf	plusw1,w,c
  6036  004F54  203C               	addwfc	btemp,w,c
  6037  004F56  6E3C               	movwf	btemp,c
  6038  004F58  0EFD               	movlw	-3
  6039  004F5A  0060  F0F3  FFE3   	movff	btemp,plusw1
  6040  004F60                     l8379:
  6041                           
  6042                           ;stkvar	_byte_count @ sp[(-4)+-4]
  6043  004F60  0EF8               	movlw	-8
  6044  004F62  006F FF8C  F046    	movff	plusw1,btemp+10
  6045  004F68  0EF9               	movlw	-7
  6046  004F6A  006F FF8C  F047    	movff	plusw1,btemp+11
  6047                           
  6048                           ;stkvar	_i @ sp[(-4)+0]
  6049  004F70  0EFC               	movlw	-4
  6050  004F72  006F FF8C  F044    	movff	plusw1,btemp+8
  6051  004F78  0EFD               	movlw	-3
  6052  004F7A  006F FF8C  F045    	movff	plusw1,btemp+9
  6053  004F80  5046               	movf	btemp+10,w,c
  6054  004F82  5C44               	subwf	btemp+8,w,c
  6055  004F84  5047               	movf	btemp+11,w,c
  6056  004F86  5845               	subwfb	btemp+9,w,c
  6057  004F88  A0D8               	btfss	status,0,c
  6058  004F8A  D7B1               	goto	l8375
  6059                           
  6060                           ;gemsecs.c: 25:  return sum;
  6061                           ;stkvar	_sum @ sp[(-4)+2]
  6062  004F8C  0EFE               	movlw	-2
  6063  004F8E  006F FF8C  F03C    	movff	plusw1,btemp
  6064  004F94  0EFF               	movlw	-1
  6065  004F96  006F FF8C  F03D    	movff	plusw1,btemp+1
  6066                           
  6067                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  6068  004F9C  0EF8               	movlw	248
  6069  004F9E  26E1               	addwf	fsr1l,f,c
  6070  004FA0  0EFF               	movlw	255
  6071  004FA2  22E2               	addwfc	fsr1h,f,c
  6072  004FA4  0012               	return		;funcret
  6073  004FA6                     __end_of_block_checksum:
  6074                           	opt callstack 0
  6075                           
  6076 ;; *************** function _UART2_put_buffer *****************
  6077 ;; Defined at:
  6078 ;;		line 257 in file "mcc_generated_files/uart2.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;  bufData         1  [STACK] unsigned char 
  6081 ;; Auto vars:     Size  Location     Type
  6082 ;;		None
  6083 ;; Return value:  Size  Location     Type
  6084 ;;                  1  [STACK] void 
  6085 ;; Registers used:
  6086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6087 ;; Tracked objects:
  6088 ;;		On entry : 0/0
  6089 ;;		On exit  : 3F/39
  6090 ;;		Unchanged: 0/0
  6091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6096 ;;Total ram usage:        0 bytes
  6097 ;; Hardware stack levels used:    1
  6098 ;; Hardware stack levels required when called:    3
  6099 ;; This function calls:
  6100 ;;		Nothing
  6101 ;; This function is called by:
  6102 ;;		_main
  6103 ;;		_secs_send
  6104 ;; This function uses a reentrant model
  6105 ;;
  6106                           
  6107                           	psect	text8
  6108  005DFE                     __ptext8:
  6109                           	opt callstack 0
  6110  005DFE                     _UART2_put_buffer:
  6111                           	opt callstack 25
  6112                           
  6113                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
  6114                           
  6115                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6116                           ;incstack = 0
  6117  005DFE  0139               	movlb	57	; () banked
  6118  005E00  9596               	bcf	150,2,b	;volatile
  6119                           
  6120                           ; BSR set to: 57
  6121                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
  6122                           ;stkvar	_bufData @ sp[(0)+-1]
  6123  005E02  0E00               	movlw	low _uart2RxBuffer
  6124  005E04  2432               	addwf	_uart2RxHead,w,c	;volatile
  6125  005E06  6ED9               	movwf	fsr2l,c
  6126  005E08  6ADA               	clrf	fsr2h,c
  6127  005E0A  0E02               	movlw	high _uart2RxBuffer
  6128  005E0C  22DA               	addwfc	fsr2h,f,c
  6129  005E0E  0EFF               	movlw	-1
  6130  005E10  006F FF8F FFDF     	movff	plusw1,indf2
  6131                           
  6132                           ; BSR set to: 57
  6133  005E16  2A32               	incf	_uart2RxHead,f,c	;volatile
  6134                           
  6135                           ; BSR set to: 57
  6136                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
  6137  005E18  0E3F               	movlw	63
  6138  005E1A  6432               	cpfsgt	_uart2RxHead,c
  6139  005E1C  D001               	goto	l6033
  6140                           
  6141                           ; BSR set to: 57
  6142                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
  6143  005E1E  6A32               	clrf	_uart2RxHead,c	;volatile
  6144  005E20                     l6033:
  6145                           
  6146                           ; BSR set to: 57
  6147                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
  6148  005E20  2A30               	incf	_uart2RxCount,f,c	;volatile
  6149                           
  6150                           ; BSR set to: 57
  6151                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
  6152  005E22  8596               	bsf	150,2,b	;volatile
  6153                           
  6154                           ; BSR set to: 57
  6155                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6156  005E24  52E5               	movf	postdec1,f,c
  6157  005E26  0012               	return		;funcret
  6158  005E28                     __end_of_UART2_put_buffer:
  6159                           	opt callstack 0
  6160                           
  6161 ;; *************** function _UART2_is_tx_ready *****************
  6162 ;; Defined at:
  6163 ;;		line 142 in file "mcc_generated_files/uart2.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;		None
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;		None
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  1  [STACK] unsigned char 
  6170 ;; Registers used:
  6171 ;;		btemp
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6181 ;;Total ram usage:        0 bytes
  6182 ;; Hardware stack levels used:    1
  6183 ;; Hardware stack levels required when called:    3
  6184 ;; This function calls:
  6185 ;;		Nothing
  6186 ;; This function is called by:
  6187 ;;		_secs_send
  6188 ;; This function uses a reentrant model
  6189 ;;
  6190                           
  6191                           	psect	text9
  6192  006442                     __ptext9:
  6193                           	opt callstack 0
  6194  006442                     _UART2_is_tx_ready:
  6195                           	opt callstack 25
  6196                           
  6197                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
  6198                           
  6199                           ; BSR set to: 57
  6200                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6201                           ;incstack = 0
  6202  006442  0060  F0CC  F03C   	movff	_uart2TxBufferRemaining,btemp	;volatile
  6203                           
  6204                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6205  006448  0012               	return		;funcret
  6206  00644A                     __end_of_UART2_is_tx_ready:
  6207                           	opt callstack 0
  6208                           
  6209 ;; *************** function _UART2_Write *****************
  6210 ;; Defined at:
  6211 ;;		line 172 in file "mcc_generated_files/uart2.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;  txData          1  [STACK] unsigned char 
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;		None
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  1  [STACK] void 
  6218 ;; Registers used:
  6219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 3F/39
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6229 ;;Total ram usage:        0 bytes
  6230 ;; Hardware stack levels used:    1
  6231 ;; Hardware stack levels required when called:    3
  6232 ;; This function calls:
  6233 ;;		Nothing
  6234 ;; This function is called by:
  6235 ;;		_secs_send
  6236 ;; This function uses a reentrant model
  6237 ;;
  6238                           
  6239                           	psect	text10
  6240  005BA2                     __ptext10:
  6241                           	opt callstack 0
  6242  005BA2                     _UART2_Write:
  6243                           	opt callstack 25
  6244                           
  6245                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  6246                           
  6247                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  6248                           
  6249                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6250                           ;incstack = 0
  6251  005BA2  5033               	movf	_uart2TxBufferRemaining,w,c	;volatile
  6252  005BA4  B4D8               	btfsc	status,2,c
  6253  005BA6  D7FD               	goto	_UART2_Write
  6254                           
  6255                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
  6256  005BA8  0139               	movlb	57	; () banked
  6257  005BAA  B796               	btfsc	150,3,b	;volatile
  6258  005BAC  D005               	goto	l699
  6259                           
  6260                           ; BSR set to: 57
  6261                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
  6262                           ;stkvar	_txData @ sp[(0)+-1]
  6263  005BAE  0EFF               	movlw	-1
  6264  005BB0  006F FF8F FDD2     	movff	plusw1,15826	;volatile
  6265                           
  6266                           ;mcc_generated_files/uart2.c: 181:     }
  6267  005BB6  D011               	goto	l6021
  6268  005BB8                     l699:
  6269                           
  6270                           ; BSR set to: 57
  6271                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
  6272  005BB8  9796               	bcf	150,3,b	;volatile
  6273                           
  6274                           ; BSR set to: 57
  6275                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
  6276                           ;stkvar	_txData @ sp[(0)+-1]
  6277  005BBA  0E00               	movlw	low _uart2TxBuffer
  6278  005BBC  2435               	addwf	_uart2TxHead,w,c	;volatile
  6279  005BBE  6ED9               	movwf	fsr2l,c
  6280  005BC0  6ADA               	clrf	fsr2h,c
  6281  005BC2  0E03               	movlw	high _uart2TxBuffer
  6282  005BC4  22DA               	addwfc	fsr2h,f,c
  6283  005BC6  0EFF               	movlw	-1
  6284  005BC8  006F FF8F FFDF     	movff	plusw1,indf2
  6285                           
  6286                           ; BSR set to: 57
  6287  005BCE  2A35               	incf	_uart2TxHead,f,c	;volatile
  6288                           
  6289                           ; BSR set to: 57
  6290                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  6291  005BD0  0E3F               	movlw	63
  6292  005BD2  6435               	cpfsgt	_uart2TxHead,c
  6293  005BD4  D001               	goto	l6019
  6294                           
  6295                           ; BSR set to: 57
  6296                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
  6297  005BD6  6A35               	clrf	_uart2TxHead,c	;volatile
  6298  005BD8                     l6019:
  6299                           
  6300                           ; BSR set to: 57
  6301                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
  6302  005BD8  0633               	decf	_uart2TxBufferRemaining,f,c	;volatile
  6303  005BDA                     l6021:
  6304                           
  6305                           ; BSR set to: 57
  6306                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
  6307  005BDA  8796               	bsf	150,3,b	;volatile
  6308                           
  6309                           ; BSR set to: 57
  6310                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6311  005BDC  52E5               	movf	postdec1,f,c
  6312  005BDE  0012               	return		;funcret
  6313  005BE0                     __end_of_UART2_Write:
  6314                           	opt callstack 0
  6315                           
  6316 ;; *************** function _UART1_put_buffer *****************
  6317 ;; Defined at:
  6318 ;;		line 250 in file "mcc_generated_files/uart1.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  bufData         1  [STACK] unsigned char 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;		None
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  1  [STACK] void 
  6325 ;; Registers used:
  6326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 3F/39
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6336 ;;Total ram usage:        0 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; Hardware stack levels required when called:    3
  6339 ;; This function calls:
  6340 ;;		Nothing
  6341 ;; This function is called by:
  6342 ;;		_main
  6343 ;;		_t_protocol
  6344 ;;		_secs_send
  6345 ;; This function uses a reentrant model
  6346 ;;
  6347                           
  6348                           	psect	text11
  6349  005E28                     __ptext11:
  6350                           	opt callstack 0
  6351  005E28                     _UART1_put_buffer:
  6352                           	opt callstack 25
  6353                           
  6354                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  6355                           
  6356                           ; BSR set to: 57
  6357                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6358                           ;incstack = 0
  6359  005E28  0139               	movlb	57	; () banked
  6360  005E2A  9793               	bcf	147,3,b	;volatile
  6361                           
  6362                           ; BSR set to: 57
  6363                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  6364                           ;stkvar	_bufData @ sp[(0)+-1]
  6365  005E2C  0E40               	movlw	low _uart1RxBuffer
  6366  005E2E  2438               	addwf	_uart1RxHead,w,c	;volatile
  6367  005E30  6ED9               	movwf	fsr2l,c
  6368  005E32  6ADA               	clrf	fsr2h,c
  6369  005E34  0E02               	movlw	high _uart1RxBuffer
  6370  005E36  22DA               	addwfc	fsr2h,f,c
  6371  005E38  0EFF               	movlw	-1
  6372  005E3A  006F FF8F FFDF     	movff	plusw1,indf2
  6373                           
  6374                           ; BSR set to: 57
  6375  005E40  2A38               	incf	_uart1RxHead,f,c	;volatile
  6376                           
  6377                           ; BSR set to: 57
  6378                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  6379  005E42  0E3F               	movlw	63
  6380  005E44  6438               	cpfsgt	_uart1RxHead,c
  6381  005E46  D001               	goto	l5997
  6382                           
  6383                           ; BSR set to: 57
  6384                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  6385  005E48  6A38               	clrf	_uart1RxHead,c	;volatile
  6386  005E4A                     l5997:
  6387                           
  6388                           ; BSR set to: 57
  6389                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  6390  005E4A  2A36               	incf	_uart1RxCount,f,c	;volatile
  6391                           
  6392                           ; BSR set to: 57
  6393                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  6394  005E4C  8793               	bsf	147,3,b	;volatile
  6395                           
  6396                           ; BSR set to: 57
  6397                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6398  005E4E  52E5               	movf	postdec1,f,c
  6399  005E50  0012               	return		;funcret
  6400  005E52                     __end_of_UART1_put_buffer:
  6401                           	opt callstack 0
  6402                           
  6403 ;; *************** function _UART1_is_tx_ready *****************
  6404 ;; Defined at:
  6405 ;;		line 151 in file "mcc_generated_files/uart1.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;		None
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;		None
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  1  [STACK] unsigned char 
  6412 ;; Registers used:
  6413 ;;		btemp
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6423 ;;Total ram usage:        0 bytes
  6424 ;; Hardware stack levels used:    1
  6425 ;; Hardware stack levels required when called:    3
  6426 ;; This function calls:
  6427 ;;		Nothing
  6428 ;; This function is called by:
  6429 ;;		_secs_send
  6430 ;; This function uses a reentrant model
  6431 ;;
  6432                           
  6433                           	psect	text12
  6434  00644A                     __ptext12:
  6435                           	opt callstack 0
  6436  00644A                     _UART1_is_tx_ready:
  6437                           	opt callstack 25
  6438                           
  6439                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  6440                           
  6441                           ; BSR set to: 57
  6442                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6443                           ;incstack = 0
  6444  00644A  0060  F0E4  F03C   	movff	_uart1TxBufferRemaining,btemp	;volatile
  6445                           
  6446                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6447  006450  0012               	return		;funcret
  6448  006452                     __end_of_UART1_is_tx_ready:
  6449                           	opt callstack 0
  6450                           
  6451 ;; *************** function _UART1_Write *****************
  6452 ;; Defined at:
  6453 ;;		line 179 in file "mcc_generated_files/uart1.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;  txData          1  [STACK] unsigned char 
  6456 ;; Auto vars:     Size  Location     Type
  6457 ;;		None
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  1  [STACK] void 
  6460 ;; Registers used:
  6461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6462 ;; Tracked objects:
  6463 ;;		On entry : 0/0
  6464 ;;		On exit  : 3F/39
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6471 ;;Total ram usage:        0 bytes
  6472 ;; Hardware stack levels used:    1
  6473 ;; Hardware stack levels required when called:    3
  6474 ;; This function calls:
  6475 ;;		Nothing
  6476 ;; This function is called by:
  6477 ;;		_r_protocol
  6478 ;;		_t_protocol
  6479 ;;		_secs_send
  6480 ;; This function uses a reentrant model
  6481 ;;
  6482                           
  6483                           	psect	text13
  6484  005BE0                     __ptext13:
  6485                           	opt callstack 0
  6486  005BE0                     _UART1_Write:
  6487                           	opt callstack 25
  6488                           
  6489                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  6490                           
  6491                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  6492                           
  6493                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6494                           ;incstack = 0
  6495  005BE0  5039               	movf	_uart1TxBufferRemaining,w,c	;volatile
  6496  005BE2  B4D8               	btfsc	status,2,c
  6497  005BE4  D7FD               	goto	_UART1_Write
  6498                           
  6499                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  6500  005BE6  0139               	movlb	57	; () banked
  6501  005BE8  B993               	btfsc	147,4,b	;volatile
  6502  005BEA  D005               	goto	l579
  6503                           
  6504                           ; BSR set to: 57
  6505                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  6506                           ;stkvar	_txData @ sp[(0)+-1]
  6507  005BEC  0EFF               	movlw	-1
  6508  005BEE  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  6509                           
  6510                           ;mcc_generated_files/uart1.c: 186:  } else {
  6511  005BF4  D011               	goto	l5985
  6512  005BF6                     l579:
  6513                           
  6514                           ; BSR set to: 57
  6515                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  6516  005BF6  9993               	bcf	147,4,b	;volatile
  6517                           
  6518                           ; BSR set to: 57
  6519                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  6520                           ;stkvar	_txData @ sp[(0)+-1]
  6521  005BF8  0E80               	movlw	low _uart1TxBuffer
  6522  005BFA  243B               	addwf	_uart1TxHead,w,c	;volatile
  6523  005BFC  6ED9               	movwf	fsr2l,c
  6524  005BFE  6ADA               	clrf	fsr2h,c
  6525  005C00  0E02               	movlw	high _uart1TxBuffer
  6526  005C02  22DA               	addwfc	fsr2h,f,c
  6527  005C04  0EFF               	movlw	-1
  6528  005C06  006F FF8F FFDF     	movff	plusw1,indf2
  6529                           
  6530                           ; BSR set to: 57
  6531  005C0C  2A3B               	incf	_uart1TxHead,f,c	;volatile
  6532                           
  6533                           ; BSR set to: 57
  6534                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  6535  005C0E  0E3F               	movlw	63
  6536  005C10  643B               	cpfsgt	_uart1TxHead,c
  6537  005C12  D001               	goto	l5983
  6538                           
  6539                           ; BSR set to: 57
  6540                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  6541  005C14  6A3B               	clrf	_uart1TxHead,c	;volatile
  6542  005C16                     l5983:
  6543                           
  6544                           ; BSR set to: 57
  6545                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  6546  005C16  0639               	decf	_uart1TxBufferRemaining,f,c	;volatile
  6547  005C18                     l5985:
  6548                           
  6549                           ; BSR set to: 57
  6550                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  6551  005C18  8993               	bsf	147,4,b	;volatile
  6552                           
  6553                           ; BSR set to: 57
  6554                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6555  005C1A  52E5               	movf	postdec1,f,c
  6556  005C1C  0012               	return		;funcret
  6557  005C1E                     __end_of_UART1_Write:
  6558                           	opt callstack 0
  6559                           
  6560 ;; *************** function _secs_gem_state *****************
  6561 ;; Defined at:
  6562 ;;		line 610 in file "gemsecs.c"
  6563 ;; Parameters:    Size  Location     Type
  6564 ;;  stream          1  [STACK] unsigned char 
  6565 ;;  function        1  [STACK] unsigned char 
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;		None
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  1  [STACK] enum E16164
  6570 ;; Registers used:
  6571 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
  6572 ;; Tracked objects:
  6573 ;;		On entry : 3F/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6581 ;;Total ram usage:        0 bytes
  6582 ;; Hardware stack levels used:    1
  6583 ;; Hardware stack levels required when called:    3
  6584 ;; This function calls:
  6585 ;;		Nothing
  6586 ;; This function is called by:
  6587 ;;		_m_protocol
  6588 ;;		_r_protocol
  6589 ;; This function uses a reentrant model
  6590 ;;
  6591                           
  6592                           	psect	text14
  6593  0053D2                     __ptext14:
  6594                           	opt callstack 0
  6595  0053D2                     _secs_gem_state:
  6596                           	opt callstack 26
  6597                           
  6598                           ;gemsecs.c: 610: GEM_STATES secs_gem_state(uint8_t stream, uint8_t function);gemsecs.c: 
      +                          611: {;gemsecs.c: 612:  static GEM_STATES block = GEM_STATE_DISABLE;;gemsecs.c: 614:  sw
      +                          itch (stream) {
  6599                           
  6600                           ; BSR set to: 57
  6601                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6602                           ;incstack = 0
  6603  0053D2  D033               	goto	l6447
  6604  0053D4                     l6417:
  6605                           
  6606                           ;gemsecs.c: 621:    block = GEM_STATE_REMOTE;
  6607  0053D4  0E04               	movlw	4
  6608  0053D6  D02F               	goto	L22
  6609  0053D8                     l6419:
  6610                           
  6611                           ;gemsecs.c: 627:    block = GEM_STATE_COMM;
  6612  0053D8  0E01               	movlw	1
  6613  0053DA  D02D               	goto	L22
  6614  0053DC                     l6421:
  6615                           
  6616                           ;gemsecs.c: 633:    block = GEM_STATE_OFFLINE;
  6617  0053DC  0E02               	movlw	2
  6618  0053DE  D02B               	goto	L22
  6619  0053E0                     l6423:
  6620                           
  6621                           ;gemsecs.c: 639:    block = GEM_STATE_ONLINE;
  6622  0053E0  0E03               	movlw	3
  6623  0053E2  D029               	goto	L22
  6624  0053E4                     l6425:
  6625                           
  6626                           ;gemsecs.c: 642:    if (block == GEM_STATE_DISABLE) {
  6627  0053E4  502A               	movf	secs_gem_state@block,w,c
  6628  0053E6  B4D8               	btfsc	status,2,c
  6629  0053E8  D7F7               	goto	l6419
  6630  0053EA  D03A               	goto	l6449
  6631  0053EC                     l6431:
  6632                           
  6633                           ;stkvar	_function @ sp[(0)+-2]
  6634  0053EC  0EFE               	movlw	-2
  6635  0053EE  50E3               	movf	plusw1,w,c
  6636  0053F0  6E46               	movwf	btemp+10,c
  6637  0053F2  6A47               	clrf	btemp+11,c
  6638                           
  6639                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6640                           ; Switch size 1, requested type "simple"
  6641                           ; Number of cases is 1, Range of values is 0 to 0
  6642                           ; switch strategies available:
  6643                           ; Name         Instructions Cycles
  6644                           ; simple_byte            4     3 (average)
  6645                           ;	Chosen strategy is simple_byte
  6646  0053F4  5047               	movf	btemp+11,w,c
  6647  0053F6  0A00               	xorlw	0	; case 0
  6648  0053F8  A4D8               	btfss	status,2,c
  6649  0053FA  D7F4               	goto	l6425
  6650                           
  6651                           ; Switch size 1, requested type "simple"
  6652                           ; Number of cases is 8, Range of values is 1 to 18
  6653                           ; switch strategies available:
  6654                           ; Name         Instructions Cycles
  6655                           ; simple_byte           25    13 (average)
  6656                           ;	Chosen strategy is simple_byte
  6657  0053FC  5046               	movf	btemp+10,w,c
  6658  0053FE  0A01               	xorlw	1	; case 1
  6659  005400  B4D8               	btfsc	status,2,c
  6660  005402  D7E8               	goto	l6417
  6661  005404  0A03               	xorlw	3	; case 2
  6662  005406  B4D8               	btfsc	status,2,c
  6663  005408  D7E5               	goto	l6417
  6664  00540A  0A0F               	xorlw	15	; case 13
  6665  00540C  B4D8               	btfsc	status,2,c
  6666  00540E  D7E4               	goto	l6419
  6667  005410  0A03               	xorlw	3	; case 14
  6668  005412  B4D8               	btfsc	status,2,c
  6669  005414  D7E1               	goto	l6419
  6670  005416  0A01               	xorlw	1	; case 15
  6671  005418  B4D8               	btfsc	status,2,c
  6672  00541A  D7E0               	goto	l6421
  6673  00541C  0A1F               	xorlw	31	; case 16
  6674  00541E  B4D8               	btfsc	status,2,c
  6675  005420  D7DD               	goto	l6421
  6676  005422  0A01               	xorlw	1	; case 17
  6677  005424  B4D8               	btfsc	status,2,c
  6678  005426  D7DC               	goto	l6423
  6679  005428  0A03               	xorlw	3	; case 18
  6680  00542A  B4D8               	btfsc	status,2,c
  6681  00542C  D7D9               	goto	l6423
  6682  00542E  D7DA               	goto	l6425
  6683  005430                     l6433:
  6684                           
  6685                           ;gemsecs.c: 651:    block = GEM_STATE_ALARM;
  6686  005430  0E05               	movlw	5
  6687  005432  D001               	goto	L22
  6688  005434                     l6437:
  6689                           
  6690                           ;gemsecs.c: 658:    block = GEM_STATE_ERROR;
  6691  005434  0E06               	movlw	6
  6692  005436                     L22:
  6693  005436  6E2A               	movwf	secs_gem_state@block,c
  6694                           
  6695                           ;gemsecs.c: 659:    break;
  6696  005438  D013               	goto	l6449
  6697  00543A                     l6447:
  6698                           
  6699                           ;stkvar	_stream @ sp[(0)+-1]
  6700  00543A  0EFF               	movlw	-1
  6701  00543C  50E3               	movf	plusw1,w,c
  6702  00543E  6E46               	movwf	btemp+10,c
  6703  005440  6A47               	clrf	btemp+11,c
  6704                           
  6705                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6706                           ; Switch size 1, requested type "simple"
  6707                           ; Number of cases is 1, Range of values is 0 to 0
  6708                           ; switch strategies available:
  6709                           ; Name         Instructions Cycles
  6710                           ; simple_byte            4     3 (average)
  6711                           ;	Chosen strategy is simple_byte
  6712  005442  5047               	movf	btemp+11,w,c
  6713  005444  0A00               	xorlw	0	; case 0
  6714  005446  A4D8               	btfss	status,2,c
  6715  005448  D7CD               	goto	l6425
  6716                           
  6717                           ; Switch size 1, requested type "simple"
  6718                           ; Number of cases is 3, Range of values is 1 to 9
  6719                           ; switch strategies available:
  6720                           ; Name         Instructions Cycles
  6721                           ; simple_byte           10     6 (average)
  6722                           ;	Chosen strategy is simple_byte
  6723  00544A  5046               	movf	btemp+10,w,c
  6724  00544C  0A01               	xorlw	1	; case 1
  6725  00544E  B4D8               	btfsc	status,2,c
  6726  005450  D7CD               	goto	l6431
  6727  005452  0A04               	xorlw	4	; case 5
  6728  005454  B4D8               	btfsc	status,2,c
  6729  005456  D7EC               	goto	l6433
  6730  005458  0A0C               	xorlw	12	; case 9
  6731  00545A  B4D8               	btfsc	status,2,c
  6732  00545C  D7EB               	goto	l6437
  6733  00545E  D7C2               	goto	l6425
  6734  005460                     l6449:
  6735                           
  6736                           ;gemsecs.c: 669:  return(block);
  6737  005460  0060  F0A8  F03C   	movff	secs_gem_state@block,btemp
  6738                           
  6739                           ; _secs_gem_state: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
  6740  005466  52E5               	movf	postdec1,f,c
  6741  005468  52E5               	movf	postdec1,f,c
  6742  00546A  0012               	return		;funcret
  6743  00546C                     __end_of_secs_gem_state:
  6744                           	opt callstack 0
  6745                           
  6746 ;; *************** function _run_checksum *****************
  6747 ;; Defined at:
  6748 ;;		line 31 in file "gemsecs.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;  byte_block      1  [STACK] unsigned char 
  6751 ;;  clear           1  [STACK] _Bool 
  6752 ;; Auto vars:     Size  Location     Type
  6753 ;;		None
  6754 ;; Return value:  Size  Location     Type
  6755 ;;                  2  [STACK] unsigned short 
  6756 ;; Registers used:
  6757 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  6758 ;; Tracked objects:
  6759 ;;		On entry : 6/39
  6760 ;;		On exit  : 3F/0
  6761 ;;		Unchanged: 0/0
  6762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6767 ;;Total ram usage:        0 bytes
  6768 ;; Hardware stack levels used:    1
  6769 ;; Hardware stack levels required when called:    3
  6770 ;; This function calls:
  6771 ;;		Nothing
  6772 ;; This function is called by:
  6773 ;;		_m_protocol
  6774 ;;		_r_protocol
  6775 ;; This function uses a reentrant model
  6776 ;;
  6777                           
  6778                           	psect	text15
  6779  005D4E                     __ptext15:
  6780                           	opt callstack 0
  6781  005D4E                     _run_checksum:
  6782                           	opt callstack 26
  6783                           
  6784                           ;gemsecs.c: 31: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 32: {;
      +                          gemsecs.c: 33:  static uint16_t sum = 0;;gemsecs.c: 35:  if (clear)
  6785                           ;stkvar	_clear @ sp[(0)+-2]
  6786                           
  6787                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6788                           ;incstack = 0
  6789  005D4E  0EFE               	movlw	-2
  6790  005D50  50E3               	movf	plusw1,w,c
  6791  005D52  B4D8               	btfsc	status,2,c
  6792  005D54  D003               	goto	l6345
  6793                           
  6794                           ;gemsecs.c: 36:   sum = 0;
  6795  005D56  0100               	movlb	0	; () banked
  6796  005D58  6BFC               	clrf	run_checksum@sum& (0+255),b
  6797  005D5A  6BFD               	clrf	(run_checksum@sum+1)& (0+255),b
  6798  005D5C                     l6345:
  6799                           
  6800                           ;gemsecs.c: 38:  sum += byte_block;
  6801                           ;stkvar	_byte_block @ sp[(0)+-1]
  6802  005D5C  0EFF               	movlw	-1
  6803  005D5E  50E3               	movf	plusw1,w,c
  6804  005D60  0100               	movlb	0	; () banked
  6805  005D62  27FC               	addwf	run_checksum@sum& (0+255),f,b
  6806  005D64  0E00               	movlw	0
  6807  005D66  23FD               	addwfc	(run_checksum@sum+1)& (0+255),f,b
  6808                           
  6809                           ; BSR set to: 0
  6810                           ;gemsecs.c: 39:  return sum;
  6811  005D68  0060  F3F0  F03C   	movff	run_checksum@sum,btemp
  6812  005D6E  0060  F3F4  F03D   	movff	run_checksum@sum+1,btemp+1
  6813                           
  6814                           ; BSR set to: 0
  6815                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  6816  005D74  52E5               	movf	postdec1,f,c
  6817  005D76  52E5               	movf	postdec1,f,c
  6818  005D78  0012               	return		;funcret
  6819  005D7A                     __end_of_run_checksum:
  6820                           	opt callstack 0
  6821                           
  6822 ;; *************** function _WaitMs *****************
  6823 ;; Defined at:
  6824 ;;		line 31 in file "timers.c"
  6825 ;; Parameters:    Size  Location     Type
  6826 ;;  numMilliseco    2  [STACK] unsigned short 
  6827 ;; Auto vars:     Size  Location     Type
  6828 ;;		None
  6829 ;; Return value:  Size  Location     Type
  6830 ;;                  1  [STACK] void 
  6831 ;; Registers used:
  6832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6833 ;; Tracked objects:
  6834 ;;		On entry : 0/0
  6835 ;;		On exit  : 0/0
  6836 ;;		Unchanged: 0/0
  6837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6842 ;;Total ram usage:        0 bytes
  6843 ;; Hardware stack levels used:    1
  6844 ;; Hardware stack levels required when called:    4
  6845 ;; This function calls:
  6846 ;;		_StartTimer
  6847 ;;		_TimerDone
  6848 ;; This function is called by:
  6849 ;;		_main
  6850 ;;		_m_protocol
  6851 ;;		_r_protocol
  6852 ;;		_t_protocol
  6853 ;; This function uses a reentrant model
  6854 ;;
  6855                           
  6856                           	psect	text16
  6857  005E52                     __ptext16:
  6858                           	opt callstack 0
  6859  005E52                     _WaitMs:
  6860                           	opt callstack 25
  6861                           
  6862                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  6863                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6864                           
  6865                           ; BSR set to: 0
  6866                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6867                           ;incstack = 0
  6868  005E52  0EFE               	movlw	-2
  6869  005E54  006F FF8F FFE6     	movff	plusw1,postinc1
  6870  005E5A  006F FF8F FFE6     	movff	plusw1,postinc1
  6871  005E60  0E00               	movlw	0
  6872  005E62  6EE6               	movwf	postinc1,c
  6873  005E64  EC6D  F02E         	call	_StartTimer	;wreg free
  6874  005E68                     l6281:
  6875                           
  6876                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  6877  005E68  0E00               	movlw	0
  6878  005E6A  6EE6               	movwf	postinc1,c
  6879  005E6C  ECDF  F030         	call	_TimerDone	;wreg free
  6880  005E70  503C               	movf	btemp,w,c
  6881  005E72  B4D8               	btfsc	status,2,c
  6882  005E74  D7F9               	goto	l6281
  6883                           
  6884                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6885  005E76  52E5               	movf	postdec1,f,c
  6886  005E78  52E5               	movf	postdec1,f,c
  6887  005E7A  0012               	return		;funcret
  6888  005E7C                     __end_of_WaitMs:
  6889                           	opt callstack 0
  6890                           
  6891 ;; *************** function _TimerDone *****************
  6892 ;; Defined at:
  6893 ;;		line 20 in file "timers.c"
  6894 ;; Parameters:    Size  Location     Type
  6895 ;;  timer           1  [STACK] unsigned char 
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;		None
  6898 ;; Return value:  Size  Location     Type
  6899 ;;                  1  [STACK] _Bool 
  6900 ;; Registers used:
  6901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6902 ;; Tracked objects:
  6903 ;;		On entry : 0/0
  6904 ;;		On exit  : 0/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6911 ;;Total ram usage:        0 bytes
  6912 ;; Hardware stack levels used:    1
  6913 ;; Hardware stack levels required when called:    3
  6914 ;; This function calls:
  6915 ;;		Nothing
  6916 ;; This function is called by:
  6917 ;;		_m_protocol
  6918 ;;		_r_protocol
  6919 ;;		_t_protocol
  6920 ;;		_WaitMs
  6921 ;; This function uses a reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text17
  6925  0061BE                     __ptext17:
  6926                           	opt callstack 0
  6927  0061BE                     _TimerDone:
  6928                           	opt callstack 25
  6929                           
  6930                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  6931                           ;stkvar	_timer @ sp[(0)+-1]
  6932                           
  6933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6934                           ;incstack = 0
  6935  0061BE  0EFF               	movlw	-1
  6936  0061C0  50E3               	movf	plusw1,w,c
  6937  0061C2  0D02               	mullw	2
  6938  0061C4  50F3               	movf	prodl,w,c
  6939  0061C6  0FDD               	addlw	low _tickCount
  6940  0061C8  6ED9               	movwf	fsr2l,c
  6941  0061CA  6ADA               	clrf	fsr2h,c
  6942  0061CC  50DE               	movf	postinc2,w,c
  6943  0061CE  10DE               	iorwf	postinc2,w,c
  6944  0061D0  A4D8               	btfss	status,2,c
  6945  0061D2  D002               	goto	l6087
  6946                           
  6947                           ;timers.c: 23:   return 1;
  6948  0061D4  0E01               	movlw	1
  6949  0061D6  D001               	goto	L23
  6950  0061D8                     l6087:
  6951                           
  6952                           ;timers.c: 25:  return 0;
  6953  0061D8  0E00               	movlw	0
  6954  0061DA                     L23:
  6955  0061DA  6E3C               	movwf	btemp,c
  6956                           
  6957                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6958  0061DC  52E5               	movf	postdec1,f,c
  6959  0061DE  0012               	return		;funcret
  6960  0061E0                     __end_of_TimerDone:
  6961                           	opt callstack 0
  6962                           
  6963 ;; *************** function _StartTimer *****************
  6964 ;; Defined at:
  6965 ;;		line 12 in file "timers.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  timer           1  [STACK] unsigned char 
  6968 ;;  count           2  [STACK] unsigned short 
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;		None
  6971 ;; Return value:  Size  Location     Type
  6972 ;;                  1  [STACK] void 
  6973 ;; Registers used:
  6974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6975 ;; Tracked objects:
  6976 ;;		On entry : 0/39
  6977 ;;		On exit  : 0/0
  6978 ;;		Unchanged: 0/0
  6979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6984 ;;Total ram usage:        0 bytes
  6985 ;; Hardware stack levels used:    1
  6986 ;; Hardware stack levels required when called:    3
  6987 ;; This function calls:
  6988 ;;		Nothing
  6989 ;; This function is called by:
  6990 ;;		_m_protocol
  6991 ;;		_r_protocol
  6992 ;;		_t_protocol
  6993 ;;		_WaitMs
  6994 ;; This function uses a reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text18
  6998  005CDA                     __ptext18:
  6999                           	opt callstack 0
  7000  005CDA                     _StartTimer:
  7001                           	opt callstack 25
  7002                           
  7003                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  7004                           ;stkvar	_count @ sp[(0)+-3]
  7005                           
  7006                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7007                           ;incstack = 0
  7008  005CDA  0EFD               	movlw	-3
  7009  005CDC  006F FF8C  F046    	movff	plusw1,btemp+10
  7010  005CE2  0EFE               	movlw	-2
  7011  005CE4  006F FF8C  F047    	movff	plusw1,btemp+11
  7012  005CEA  90D8               	bcf	status,0,c
  7013  005CEC  3446               	rlcf	btemp+10,w,c
  7014  005CEE  6E44               	movwf	btemp+8,c
  7015  005CF0  3447               	rlcf	btemp+11,w,c
  7016  005CF2  6E45               	movwf	btemp+9,c
  7017                           
  7018                           ;stkvar	_timer @ sp[(0)+-1]
  7019  005CF4  0EFF               	movlw	-1
  7020  005CF6  50E3               	movf	plusw1,w,c
  7021  005CF8  0D02               	mullw	2
  7022  005CFA  50F3               	movf	prodl,w,c
  7023  005CFC  0FDD               	addlw	low _tickCount
  7024  005CFE  6ED9               	movwf	fsr2l,c
  7025  005D00  6ADA               	clrf	fsr2h,c
  7026  005D02  0060  F113  FFDE   	movff	btemp+8,postinc2
  7027  005D08  0060  F117  FFDD   	movff	btemp+9,postdec2
  7028                           
  7029                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  7030  005D0E  52E5               	movf	postdec1,f,c
  7031  005D10  52E5               	movf	postdec1,f,c
  7032  005D12  52E5               	movf	postdec1,f,c
  7033  005D14  0012               	return		;funcret
  7034  005D16                     __end_of_StartTimer:
  7035                           	opt callstack 0
  7036                           
  7037 ;; *************** function _UART2_is_rx_ready *****************
  7038 ;; Defined at:
  7039 ;;		line 137 in file "mcc_generated_files/uart2.c"
  7040 ;; Parameters:    Size  Location     Type
  7041 ;;		None
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;		None
  7044 ;; Return value:  Size  Location     Type
  7045 ;;                  1  [STACK] unsigned char 
  7046 ;; Registers used:
  7047 ;;		btemp
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7057 ;;Total ram usage:        0 bytes
  7058 ;; Hardware stack levels used:    1
  7059 ;; Hardware stack levels required when called:    3
  7060 ;; This function calls:
  7061 ;;		Nothing
  7062 ;; This function is called by:
  7063 ;;		_m_protocol
  7064 ;; This function uses a reentrant model
  7065 ;;
  7066                           
  7067                           	psect	text19
  7068  006452                     __ptext19:
  7069                           	opt callstack 0
  7070  006452                     _UART2_is_rx_ready:
  7071                           	opt callstack 26
  7072                           
  7073                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
  7074                           
  7075                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7076                           ;incstack = 0
  7077  006452  0060  F0C0  F03C   	movff	_uart2RxCount,btemp	;volatile
  7078                           
  7079                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7080  006458  0012               	return		;funcret
  7081  00645A                     __end_of_UART2_is_rx_ready:
  7082                           	opt callstack 0
  7083                           
  7084 ;; *************** function _UART2_Read *****************
  7085 ;; Defined at:
  7086 ;;		line 152 in file "mcc_generated_files/uart2.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;		None
  7089 ;; Auto vars:     Size  Location     Type
  7090 ;;  readValue       1  [STACK] unsigned char 
  7091 ;; Return value:  Size  Location     Type
  7092 ;;                  1  [STACK] unsigned char 
  7093 ;; Registers used:
  7094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  7095 ;; Tracked objects:
  7096 ;;		On entry : 0/0
  7097 ;;		On exit  : 3F/39
  7098 ;;		Unchanged: 0/0
  7099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7104 ;;Total ram usage:        0 bytes
  7105 ;; Hardware stack levels used:    1
  7106 ;; Hardware stack levels required when called:    3
  7107 ;; This function calls:
  7108 ;;		Nothing
  7109 ;; This function is called by:
  7110 ;;		_m_protocol
  7111 ;; This function uses a reentrant model
  7112 ;;
  7113                           
  7114                           	psect	text20
  7115  005C1E                     __ptext20:
  7116                           	opt callstack 0
  7117  005C1E                     _UART2_Read:
  7118                           	opt callstack 0
  7119                           
  7120                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7121  005C1E  52E6               	movf	postinc1,f,c
  7122  005C20                     
  7123                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  7124                           
  7125                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  7126  005C20  5030               	movf	_uart2RxCount,w,c	;volatile
  7127  005C22  B4D8               	btfsc	status,2,c
  7128  005C24  D7FD               	goto	l6243
  7129                           
  7130                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
  7131  005C26  0E00               	movlw	low _uart2RxBuffer
  7132  005C28  2431               	addwf	_uart2RxTail,w,c	;volatile
  7133  005C2A  6ED9               	movwf	fsr2l,c
  7134  005C2C  6ADA               	clrf	fsr2h,c
  7135  005C2E  0E02               	movlw	high _uart2RxBuffer
  7136  005C30  22DA               	addwfc	fsr2h,f,c
  7137  005C32  50DF               	movf	indf2,w,c
  7138  005C34  6E47               	movwf	btemp+11,c
  7139                           
  7140                           ;stkvar	_readValue @ sp[(-1)+0]
  7141  005C36  0EFF               	movlw	-1
  7142  005C38  0060  F11F  FFE3   	movff	btemp+11,plusw1
  7143  005C3E  2A31               	incf	_uart2RxTail,f,c	;volatile
  7144                           
  7145                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  7146  005C40  0E3F               	movlw	63
  7147  005C42  6431               	cpfsgt	_uart2RxTail,c
  7148  005C44  D001               	goto	l692
  7149                           
  7150                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
  7151  005C46  6A31               	clrf	_uart2RxTail,c	;volatile
  7152  005C48                     l692:
  7153                           
  7154                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
  7155  005C48  0139               	movlb	57	; () banked
  7156  005C4A  9596               	bcf	150,2,b	;volatile
  7157                           
  7158                           ; BSR set to: 57
  7159                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
  7160  005C4C  0630               	decf	_uart2RxCount,f,c	;volatile
  7161                           
  7162                           ; BSR set to: 57
  7163                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
  7164  005C4E  8596               	bsf	150,2,b	;volatile
  7165                           
  7166                           ; BSR set to: 57
  7167                           ;mcc_generated_files/uart2.c: 169:     return readValue;
  7168                           ;stkvar	_readValue @ sp[(-1)+0]
  7169  005C50  0EFF               	movlw	-1
  7170  005C52  006F FF8C  F03C    	movff	plusw1,btemp
  7171                           
  7172                           ; BSR set to: 57
  7173                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7174  005C58  52E5               	movf	postdec1,f,c
  7175  005C5A  0012               	return		;funcret
  7176  005C5C                     __end_of_UART2_Read:
  7177                           	opt callstack 0
  7178                           
  7179 ;; *************** function _UART1_is_rx_ready *****************
  7180 ;; Defined at:
  7181 ;;		line 146 in file "mcc_generated_files/uart1.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;		None
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;		None
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  1  [STACK] unsigned char 
  7188 ;; Registers used:
  7189 ;;		btemp
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7199 ;;Total ram usage:        0 bytes
  7200 ;; Hardware stack levels used:    1
  7201 ;; Hardware stack levels required when called:    3
  7202 ;; This function calls:
  7203 ;;		Nothing
  7204 ;; This function is called by:
  7205 ;;		_m_protocol
  7206 ;;		_r_protocol
  7207 ;;		_t_protocol
  7208 ;; This function uses a reentrant model
  7209 ;;
  7210                           
  7211                           	psect	text21
  7212  00645A                     __ptext21:
  7213                           	opt callstack 0
  7214  00645A                     _UART1_is_rx_ready:
  7215                           	opt callstack 26
  7216                           
  7217                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  7218                           
  7219                           ; BSR set to: 57
  7220                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7221                           ;incstack = 0
  7222  00645A  0060  F0D8  F03C   	movff	_uart1RxCount,btemp	;volatile
  7223                           
  7224                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7225  006460  0012               	return		;funcret
  7226  006462                     __end_of_UART1_is_rx_ready:
  7227                           	opt callstack 0
  7228                           
  7229 ;; *************** function _UART1_Read *****************
  7230 ;; Defined at:
  7231 ;;		line 161 in file "mcc_generated_files/uart1.c"
  7232 ;; Parameters:    Size  Location     Type
  7233 ;;		None
  7234 ;; Auto vars:     Size  Location     Type
  7235 ;;  readValue       1  [STACK] unsigned char 
  7236 ;; Return value:  Size  Location     Type
  7237 ;;                  1  [STACK] unsigned char 
  7238 ;; Registers used:
  7239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  7240 ;; Tracked objects:
  7241 ;;		On entry : 0/0
  7242 ;;		On exit  : 3F/39
  7243 ;;		Unchanged: 0/0
  7244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7249 ;;Total ram usage:        0 bytes
  7250 ;; Hardware stack levels used:    1
  7251 ;; Hardware stack levels required when called:    3
  7252 ;; This function calls:
  7253 ;;		Nothing
  7254 ;; This function is called by:
  7255 ;;		_m_protocol
  7256 ;;		_r_protocol
  7257 ;;		_t_protocol
  7258 ;; This function uses a reentrant model
  7259 ;;
  7260                           
  7261                           	psect	text22
  7262  005C5C                     __ptext22:
  7263                           	opt callstack 0
  7264  005C5C                     _UART1_Read:
  7265                           	opt callstack 0
  7266                           
  7267                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7268  005C5C  52E6               	movf	postinc1,f,c
  7269  005C5E                     
  7270                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  7271                           
  7272                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  7273  005C5E  5036               	movf	_uart1RxCount,w,c	;volatile
  7274  005C60  B4D8               	btfsc	status,2,c
  7275  005C62  D7FD               	goto	l6219
  7276                           
  7277                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  7278  005C64  0E40               	movlw	low _uart1RxBuffer
  7279  005C66  2437               	addwf	_uart1RxTail,w,c	;volatile
  7280  005C68  6ED9               	movwf	fsr2l,c
  7281  005C6A  6ADA               	clrf	fsr2h,c
  7282  005C6C  0E02               	movlw	high _uart1RxBuffer
  7283  005C6E  22DA               	addwfc	fsr2h,f,c
  7284  005C70  50DF               	movf	indf2,w,c
  7285  005C72  6E47               	movwf	btemp+11,c
  7286                           
  7287                           ;stkvar	_readValue @ sp[(-1)+0]
  7288  005C74  0EFF               	movlw	-1
  7289  005C76  0060  F11F  FFE3   	movff	btemp+11,plusw1
  7290  005C7C  2A37               	incf	_uart1RxTail,f,c	;volatile
  7291                           
  7292                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  7293  005C7E  0E3F               	movlw	63
  7294  005C80  6437               	cpfsgt	_uart1RxTail,c
  7295  005C82  D001               	goto	l572
  7296                           
  7297                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  7298  005C84  6A37               	clrf	_uart1RxTail,c	;volatile
  7299  005C86                     l572:
  7300                           
  7301                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  7302  005C86  0139               	movlb	57	; () banked
  7303  005C88  9793               	bcf	147,3,b	;volatile
  7304                           
  7305                           ; BSR set to: 57
  7306                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  7307  005C8A  0636               	decf	_uart1RxCount,f,c	;volatile
  7308                           
  7309                           ; BSR set to: 57
  7310                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  7311  005C8C  8793               	bsf	147,3,b	;volatile
  7312                           
  7313                           ; BSR set to: 57
  7314                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  7315                           ;stkvar	_readValue @ sp[(-1)+0]
  7316  005C8E  0EFF               	movlw	-1
  7317  005C90  006F FF8C  F03C    	movff	plusw1,btemp
  7318                           
  7319                           ; BSR set to: 57
  7320                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7321  005C96  52E5               	movf	postdec1,f,c
  7322  005C98  0012               	return		;funcret
  7323  005C9A                     __end_of_UART1_Read:
  7324                           	opt callstack 0
  7325                           
  7326 ;; *************** function _init_display *****************
  7327 ;; Defined at:
  7328 ;;		line 35 in file "eadog.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;		None
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;		None
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  1  [STACK] void 
  7335 ;; Registers used:
  7336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 3F/3D
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7346 ;;Total ram usage:        0 bytes
  7347 ;; Hardware stack levels used:    1
  7348 ;; Hardware stack levels required when called:    5
  7349 ;; This function calls:
  7350 ;;		_ringBufS_init
  7351 ;;		_send_lcd_cmd
  7352 ;;		_send_lcd_cmd_long
  7353 ;;		_wdtdelay
  7354 ;; This function is called by:
  7355 ;;		_main
  7356 ;; This function uses a reentrant model
  7357 ;;
  7358                           
  7359                           	psect	text23
  7360  004DEA                     __ptext23:
  7361                           	opt callstack 0
  7362  004DEA                     _init_display:
  7363                           	opt callstack 25
  7364                           
  7365                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  7366                           
  7367                           ; BSR set to: 57
  7368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7369                           ;incstack = 0
  7370  004DEA  0E83               	movlw	low _ring_buf1
  7371  004DEC  0100               	movlb	0	; () banked
  7372  004DEE  6FD7               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7373  004DF0  0E03               	movlw	high _ring_buf1
  7374  004DF2  6FD8               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7375                           
  7376                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  7377  004DF4  0E40               	movlw	low _ring_buf2
  7378  004DF6  6FD5               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7379  004DF8  0E03               	movlw	high _ring_buf2
  7380  004DFA  6FD6               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  7384  004DFC  0060  F35F  FFE6   	movff	_spi_link+6,postinc1
  7385  004E02  0060  F363  FFE6   	movff	_spi_link+7,postinc1
  7386  004E08  EC7B  F02F         	call	_ringBufS_init	;wreg free
  7387                           
  7388                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  7389  004E0C  0060  F357  FFE6   	movff	_spi_link+4,postinc1
  7390  004E12  0060  F35B  FFE6   	movff	_spi_link+5,postinc1
  7391  004E18  EC7B  F02F         	call	_ringBufS_init	;wreg free
  7392                           
  7393                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  7394  004E1C  80BE               	bsf	16318,0,c	;volatile
  7395  004E1E  84BC               	bsf	16316,2,c	;volatile
  7396                           
  7397                           ;eadog.c: 44:  wdtdelay(350000);
  7398  004E20  0E30               	movlw	48
  7399  004E22  6EE6               	movwf	postinc1,c
  7400  004E24  0E57               	movlw	87
  7401  004E26  6EE6               	movwf	postinc1,c
  7402  004E28  0E05               	movlw	5
  7403  004E2A  6EE6               	movwf	postinc1,c
  7404  004E2C  0E00               	movlw	0
  7405  004E2E  6EE6               	movwf	postinc1,c
  7406  004E30  EC87  F02C         	call	_wdtdelay	;wreg free
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  7410  004E34  0E39               	movlw	57
  7411  004E36  6EE6               	movwf	postinc1,c
  7412  004E38  EC67  F02F         	call	_send_lcd_cmd	;wreg free
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  7416  004E3C  0E1D               	movlw	29
  7417  004E3E  6EE6               	movwf	postinc1,c
  7418  004E40  EC67  F02F         	call	_send_lcd_cmd	;wreg free
  7419                           
  7420                           ; BSR set to: 0
  7421                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  7422  004E44  0E50               	movlw	80
  7423  004E46  6EE6               	movwf	postinc1,c
  7424  004E48  EC67  F02F         	call	_send_lcd_cmd	;wreg free
  7425                           
  7426                           ; BSR set to: 0
  7427                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  7428  004E4C  0E6C               	movlw	108
  7429  004E4E  6EE6               	movwf	postinc1,c
  7430  004E50  EC67  F02F         	call	_send_lcd_cmd	;wreg free
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  7434  004E54  0E76               	movlw	118
  7435  004E56  6EE6               	movwf	postinc1,c
  7436  004E58  EC67  F02F         	call	_send_lcd_cmd	;wreg free
  7437                           
  7438                           ; BSR set to: 0
  7439                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  7440  004E5C  0E38               	movlw	56
  7441  004E5E  6EE6               	movwf	postinc1,c
  7442  004E60  EC53  F02F         	call	_send_lcd_cmd_long	;wreg free
  7443                           
  7444                           ; BSR set to: 0
  7445                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  7446  004E64  0E0F               	movlw	15
  7447  004E66  6EE6               	movwf	postinc1,c
  7448  004E68  EC67  F02F         	call	_send_lcd_cmd	;wreg free
  7449                           
  7450                           ; BSR set to: 0
  7451                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  7452  004E6C  0E01               	movlw	1
  7453  004E6E  6EE6               	movwf	postinc1,c
  7454  004E70  EC53  F02F         	call	_send_lcd_cmd_long	;wreg free
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  7458  004E74  0E02               	movlw	2
  7459  004E76  6EE6               	movwf	postinc1,c
  7460  004E78  EC67  F02F         	call	_send_lcd_cmd	;wreg free
  7461                           
  7462                           ; BSR set to: 0
  7463                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  7464  004E7C  0E06               	movlw	6
  7465  004E7E  6EE6               	movwf	postinc1,c
  7466  004E80  EC67  F02F         	call	_send_lcd_cmd	;wreg free
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;eadog.c: 55:  wdtdelay(30);
  7470  004E84  0E1E               	movlw	30
  7471  004E86  6EE6               	movwf	postinc1,c
  7472  004E88  0E00               	movlw	0
  7473  004E8A  6EE6               	movwf	postinc1,c
  7474  004E8C  0E00               	movlw	0
  7475  004E8E  6EE6               	movwf	postinc1,c
  7476  004E90  0E00               	movlw	0
  7477  004E92  6EE6               	movwf	postinc1,c
  7478  004E94  EC87  F02C         	call	_wdtdelay	;wreg free
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  7482  004E98  0E02               	movlw	2
  7483  004E9A  013D               	movlb	61	; () banked
  7484  004E9C  6F16               	movwf	22,b	;volatile
  7485                           
  7486                           ; BSR set to: 61
  7487                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  7488  004E9E  0E40               	movlw	64
  7489  004EA0  6F15               	movwf	21,b	;volatile
  7490                           
  7491                           ; BSR set to: 61
  7492                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  7493  004EA2  0E83               	movlw	131
  7494  004EA4  6F14               	movwf	20,b	;volatile
  7495                           
  7496                           ; BSR set to: 61
  7497                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  7498  004EA6  931A               	bcf	26,1,b	;volatile
  7499                           
  7500                           ; BSR set to: 61
  7501                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  7502  004EA8  0E3F               	movlw	-193
  7503  004EAA  013B               	movlb	59	; () banked
  7504  004EAC  17FD               	andwf	253,f,b	;volatile
  7505                           
  7506                           ; BSR set to: 59
  7507                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  7508  004EAE  9BFD               	bcf	253,5,b	;volatile
  7509                           
  7510                           ; BSR set to: 59
  7511                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  7512  004EB0  51FD               	movf	253,w,b	;volatile
  7513  004EB2  0BF9               	andlw	-7
  7514  004EB4  0902               	iorlw	2
  7515  004EB6  6FFD               	movwf	253,b	;volatile
  7516                           
  7517                           ; BSR set to: 59
  7518                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  7519  004EB8  0EE7               	movlw	-25
  7520  004EBA  17FD               	andwf	253,f,b	;volatile
  7521                           
  7522                           ; BSR set to: 59
  7523                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  7524  004EBC  81FD               	bsf	253,0,b	;volatile
  7525                           
  7526                           ; BSR set to: 59
  7527                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  7528  004EBE  0E83               	movlw	low _ring_buf1
  7529  004EC0  6FF9               	movwf	249,b	;volatile
  7530  004EC2  0E03               	movlw	high _ring_buf1
  7531  004EC4  6FFA               	movwf	250,b	;volatile
  7532  004EC6  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7533  004EC8  6FFB               	movwf	251,b	;volatile
  7534                           
  7535                           ; BSR set to: 59
  7536                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  7537  004ECA  9BFC               	bcf	252,5,b	;volatile
  7538                           
  7539                           ; BSR set to: 59
  7540                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  7541  004ECC  013D               	movlb	61	; () banked
  7542  004ECE  831A               	bsf	26,1,b	;volatile
  7543                           
  7544                           ; BSR set to: 61
  7545                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  7546  004ED0  90BE               	bcf	16318,0,c	;volatile
  7547                           
  7548                           ; BSR set to: 61
  7549                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7550  004ED2  0012               	return		;funcret
  7551  004ED4                     __end_of_init_display:
  7552                           	opt callstack 0
  7553                           
  7554 ;; *************** function _send_lcd_cmd_long *****************
  7555 ;; Defined at:
  7556 ;;		line 97 in file "eadog.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;  cmd             1  [STACK] unsigned char 
  7559 ;; Auto vars:     Size  Location     Type
  7560 ;;		None
  7561 ;; Return value:  Size  Location     Type
  7562 ;;                  1  [STACK] void 
  7563 ;; Registers used:
  7564 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7565 ;; Tracked objects:
  7566 ;;		On entry : 3F/0
  7567 ;;		On exit  : 3F/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7574 ;;Total ram usage:        0 bytes
  7575 ;; Hardware stack levels used:    1
  7576 ;; Hardware stack levels required when called:    4
  7577 ;; This function calls:
  7578 ;;		_SPI1_Exchange8bit
  7579 ;;		_wdtdelay
  7580 ;; This function is called by:
  7581 ;;		_init_display
  7582 ;; This function uses a reentrant model
  7583 ;;
  7584                           
  7585                           	psect	text24
  7586  005EA6                     __ptext24:
  7587                           	opt callstack 0
  7588  005EA6                     _send_lcd_cmd_long:
  7589                           	opt callstack 25
  7590                           
  7591                           ; BSR set to: 61
  7592                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7593                           ;incstack = 0
  7594                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  7595  005EA6  92BC               	bcf	16316,1,c	;volatile
  7596                           
  7597                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  7598  005EA8  94BC               	bcf	16316,2,c	;volatile
  7599                           
  7600                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  7601                           ;stkvar	_cmd @ sp[(0)+-1]
  7602  005EAA  0EFF               	movlw	-1
  7603  005EAC  50E3               	movf	plusw1,w,c
  7604  005EAE  6EE6               	movwf	postinc1,c
  7605  005EB0  EC63  F031         	call	_SPI1_Exchange8bit	;wreg free
  7606                           
  7607                           ; BSR set to: 57
  7608                           ;eadog.c: 102:  wdtdelay(800);
  7609  005EB4  0E20               	movlw	32
  7610  005EB6  6EE6               	movwf	postinc1,c
  7611  005EB8  0E03               	movlw	3
  7612  005EBA  6EE6               	movwf	postinc1,c
  7613  005EBC  0E00               	movlw	0
  7614  005EBE  6EE6               	movwf	postinc1,c
  7615  005EC0  0E00               	movlw	0
  7616  005EC2  6EE6               	movwf	postinc1,c
  7617  005EC4  EC87  F02C         	call	_wdtdelay	;wreg free
  7618                           
  7619                           ; BSR set to: 0
  7620  005EC8  82BC               	bsf	16316,1,c	;volatile
  7621                           
  7622                           ; BSR set to: 0
  7623                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7624  005ECA  52E5               	movf	postdec1,f,c
  7625  005ECC  0012               	return		;funcret
  7626  005ECE                     __end_of_send_lcd_cmd_long:
  7627                           	opt callstack 0
  7628                           
  7629 ;; *************** function _send_lcd_cmd *****************
  7630 ;; Defined at:
  7631 ;;		line 85 in file "eadog.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  cmd             1  [STACK] unsigned char 
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;		None
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1  [STACK] void 
  7638 ;; Registers used:
  7639 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7640 ;; Tracked objects:
  7641 ;;		On entry : 3F/0
  7642 ;;		On exit  : 3F/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7649 ;;Total ram usage:        0 bytes
  7650 ;; Hardware stack levels used:    1
  7651 ;; Hardware stack levels required when called:    4
  7652 ;; This function calls:
  7653 ;;		_SPI1_Exchange8bit
  7654 ;;		_wdtdelay
  7655 ;; This function is called by:
  7656 ;;		_init_display
  7657 ;; This function uses a reentrant model
  7658 ;;
  7659                           
  7660                           	psect	text25
  7661  005ECE                     __ptext25:
  7662                           	opt callstack 0
  7663  005ECE                     _send_lcd_cmd:
  7664                           	opt callstack 25
  7665                           
  7666                           ; BSR set to: 0
  7667                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7668                           ;incstack = 0
  7669                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  7670  005ECE  92BC               	bcf	16316,1,c	;volatile
  7671                           
  7672                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  7673  005ED0  94BC               	bcf	16316,2,c	;volatile
  7674                           
  7675                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  7676                           ;stkvar	_cmd @ sp[(0)+-1]
  7677  005ED2  0EFF               	movlw	-1
  7678  005ED4  50E3               	movf	plusw1,w,c
  7679  005ED6  6EE6               	movwf	postinc1,c
  7680  005ED8  EC63  F031         	call	_SPI1_Exchange8bit	;wreg free
  7681                           
  7682                           ; BSR set to: 57
  7683                           ;eadog.c: 90:  wdtdelay(30);
  7684  005EDC  0E1E               	movlw	30
  7685  005EDE  6EE6               	movwf	postinc1,c
  7686  005EE0  0E00               	movlw	0
  7687  005EE2  6EE6               	movwf	postinc1,c
  7688  005EE4  0E00               	movlw	0
  7689  005EE6  6EE6               	movwf	postinc1,c
  7690  005EE8  0E00               	movlw	0
  7691  005EEA  6EE6               	movwf	postinc1,c
  7692  005EEC  EC87  F02C         	call	_wdtdelay	;wreg free
  7693                           
  7694                           ; BSR set to: 0
  7695  005EF0  82BC               	bsf	16316,1,c	;volatile
  7696                           
  7697                           ; BSR set to: 0
  7698                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7699  005EF2  52E5               	movf	postdec1,f,c
  7700  005EF4  0012               	return		;funcret
  7701  005EF6                     __end_of_send_lcd_cmd:
  7702                           	opt callstack 0
  7703                           
  7704 ;; *************** function _SPI1_Exchange8bit *****************
  7705 ;; Defined at:
  7706 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;  data            1  [STACK] unsigned char 
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;		None
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  1  [STACK] unsigned char 
  7713 ;; Registers used:
  7714 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 3F/39
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7724 ;;Total ram usage:        0 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; Hardware stack levels required when called:    3
  7727 ;; This function calls:
  7728 ;;		Nothing
  7729 ;; This function is called by:
  7730 ;;		_send_lcd_cmd
  7731 ;;		_send_lcd_cmd_long
  7732 ;; This function uses a reentrant model
  7733 ;;
  7734                           
  7735                           	psect	text26
  7736  0062C6                     __ptext26:
  7737                           	opt callstack 0
  7738  0062C6                     _SPI1_Exchange8bit:
  7739                           	opt callstack 25
  7740                           
  7741                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7742                           
  7743                           ; BSR set to: 0
  7744                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7745                           ;incstack = 0
  7746  0062C6  0E01               	movlw	1
  7747  0062C8  013D               	movlb	61	; () banked
  7748  0062CA  6F12               	movwf	18,b	;volatile
  7749                           
  7750                           ; BSR set to: 61
  7751                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7752                           ;stkvar	_data @ sp[(0)+-1]
  7753  0062CC  0EFF               	movlw	-1
  7754  0062CE  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7755  0062D4                     l851:
  7756                           
  7757                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7758  0062D4  0139               	movlb	57	; () banked
  7759  0062D6  A9A2               	btfss	162,4,b	;volatile
  7760  0062D8  D7FD               	goto	l851
  7761                           
  7762                           ; BSR set to: 57
  7763                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7764  0062DA  006F F440  F03C    	movff	15632,btemp	;volatile
  7765                           
  7766                           ; BSR set to: 57
  7767                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7768  0062E0  52E5               	movf	postdec1,f,c
  7769  0062E2  0012               	return		;funcret
  7770  0062E4                     __end_of_SPI1_Exchange8bit:
  7771                           	opt callstack 0
  7772                           
  7773 ;; *************** function _ringBufS_init *****************
  7774 ;; Defined at:
  7775 ;;		line 22 in file "ringbufs.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;  _this           2  [STACK] PTR volatile struct ring
  7778 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7779 ;; Auto vars:     Size  Location     Type
  7780 ;;		None
  7781 ;; Return value:  Size  Location     Type
  7782 ;;                  1  [STACK] void 
  7783 ;; Registers used:
  7784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7785 ;; Tracked objects:
  7786 ;;		On entry : 0/0
  7787 ;;		On exit  : 0/0
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7794 ;;Total ram usage:        0 bytes
  7795 ;; Hardware stack levels used:    1
  7796 ;; Hardware stack levels required when called:    4
  7797 ;; This function calls:
  7798 ;;		_memset
  7799 ;; This function is called by:
  7800 ;;		_init_display
  7801 ;; This function uses a reentrant model
  7802 ;;
  7803                           
  7804                           	psect	text27
  7805  005EF6                     __ptext27:
  7806                           	opt callstack 0
  7807  005EF6                     _ringBufS_init:
  7808                           	opt callstack 25
  7809                           
  7810                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7811                           
  7812                           ; BSR set to: 57
  7813                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7814                           ;incstack = 0
  7815  005EF6  0E43               	movlw	67
  7816  005EF8  6EE6               	movwf	postinc1,c
  7817  005EFA  0E00               	movlw	0
  7818  005EFC  6EE6               	movwf	postinc1,c
  7819  005EFE  0E00               	movlw	0
  7820  005F00  6EE6               	movwf	postinc1,c
  7821  005F02  0E00               	movlw	0
  7822  005F04  6EE6               	movwf	postinc1,c
  7823                           
  7824                           ;stkvar	__this @ sp[(-4)+-2]
  7825  005F06  0EFA               	movlw	-6
  7826  005F08  006F FF8F FFE6     	movff	plusw1,postinc1
  7827  005F0E  006F FF8F FFE6     	movff	plusw1,postinc1
  7828  005F14  ECCE  F01B         	call	_memset	;wreg free
  7829                           
  7830                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7831  005F18  52E5               	movf	postdec1,f,c
  7832  005F1A  52E5               	movf	postdec1,f,c
  7833  005F1C  0012               	return		;funcret
  7834  005F1E                     __end_of_ringBufS_init:
  7835                           	opt callstack 0
  7836                           
  7837 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7838 ;; Defined at:
  7839 ;;		line 221 in file "eadog.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;  r               1  [STACK] unsigned char 
  7842 ;;  c               1  [STACK] unsigned char 
  7843 ;;  strPtr          1  [STACK] PTR unsigned char 
  7844 ;;		 -> V(93), 
  7845 ;; Auto vars:     Size  Location     Type
  7846 ;;		None
  7847 ;; Return value:  Size  Location     Type
  7848 ;;                  1  [STACK] void 
  7849 ;; Registers used:
  7850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  7851 ;; Tracked objects:
  7852 ;;		On entry : 3F/0
  7853 ;;		On exit  : 3F/0
  7854 ;;		Unchanged: 0/0
  7855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7860 ;;Total ram usage:        0 bytes
  7861 ;; Hardware stack levels used:    1
  7862 ;; Hardware stack levels required when called:   13
  7863 ;; This function calls:
  7864 ;;		_eaDogM_WriteString
  7865 ;;		_send_lcd_cmd_dma
  7866 ;; This function is called by:
  7867 ;;		_main
  7868 ;; This function uses a reentrant model
  7869 ;;
  7870                           
  7871                           	psect	text28
  7872  005D7A                     __ptext28:
  7873                           	opt callstack 0
  7874  005D7A                     _eaDogM_WriteStringAtPos:
  7875                           	opt callstack 17
  7876                           
  7877                           ;eadog.c: 221: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           222: {;eadog.c: 223:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7878                           ;stkvar	_c @ sp[(0)+-2]
  7879                           
  7880                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7881                           ;incstack = 0
  7882  005D7A  0EFE               	movlw	-2
  7883  005D7C  006F FF8C  F047    	movff	plusw1,btemp+11
  7884                           
  7885                           ;stkvar	_r @ sp[(0)+-1]
  7886  005D82  0EFF               	movlw	-1
  7887  005D84  50E3               	movf	plusw1,w,c
  7888  005D86  0D10               	mullw	16
  7889  005D88  50F3               	movf	prodl,w,c
  7890  005D8A  2447               	addwf	btemp+11,w,c
  7891  005D8C  0F80               	addlw	128
  7892  005D8E  6EE6               	movwf	postinc1,c
  7893  005D90  ECB5  F02C         	call	_send_lcd_cmd_dma	;wreg free
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;eadog.c: 224:  eaDogM_WriteString(strPtr);
  7897                           ;stkvar	_strPtr @ sp[(0)+-3]
  7898  005D94  0EFD               	movlw	-3
  7899  005D96  50E3               	movf	plusw1,w,c
  7900  005D98  6EE6               	movwf	postinc1,c
  7901  005D9A  EC9C  F028         	call	_eaDogM_WriteString	;wreg free
  7902                           
  7903                           ; BSR set to: 0
  7904                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  7905  005D9E  52E5               	movf	postdec1,f,c
  7906  005DA0  52E5               	movf	postdec1,f,c
  7907  005DA2  52E5               	movf	postdec1,f,c
  7908  005DA4  0012               	return		;funcret
  7909  005DA6                     __end_of_eaDogM_WriteStringAtPos:
  7910                           	opt callstack 0
  7911                           
  7912 ;; *************** function _eaDogM_WriteString *****************
  7913 ;; Defined at:
  7914 ;;		line 167 in file "eadog.c"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;  strPtr          1  [STACK] PTR unsigned char 
  7917 ;;		 -> V(93), 
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;		None
  7920 ;; Return value:  Size  Location     Type
  7921 ;;                  1  [STACK] void 
  7922 ;; Registers used:
  7923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7924 ;; Tracked objects:
  7925 ;;		On entry : 3F/0
  7926 ;;		On exit  : 3F/0
  7927 ;;		Unchanged: 0/0
  7928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7933 ;;Total ram usage:        0 bytes
  7934 ;; Hardware stack levels used:    1
  7935 ;; Hardware stack levels required when called:   12
  7936 ;; This function calls:
  7937 ;;		_printf
  7938 ;;		_ringBufS_flush
  7939 ;;		_start_lcd
  7940 ;;		_strlen
  7941 ;;		_wait_lcd_set
  7942 ;;		_wdtdelay
  7943 ;; This function is called by:
  7944 ;;		_eaDogM_WriteStringAtPos
  7945 ;; This function uses a reentrant model
  7946 ;;
  7947                           
  7948                           	psect	text29
  7949  005138                     __ptext29:
  7950                           	opt callstack 0
  7951  005138                     _eaDogM_WriteString:
  7952                           	opt callstack 17
  7953                           
  7954                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  7955                           
  7956                           ; BSR set to: 0
  7957                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7958                           ;incstack = 0
  7959  005138  EC31  F032         	call	_wait_lcd_set	;wreg free
  7960                           
  7961                           ; BSR set to: 0
  7962                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  7963  00513C  0E00               	movlw	0
  7964  00513E  6EE6               	movwf	postinc1,c
  7965  005140  0060  F35F  FFE6   	movff	_spi_link+6,postinc1
  7966  005146  0060  F363  FFE6   	movff	_spi_link+7,postinc1
  7967  00514C  ECCE  F02A         	call	_ringBufS_flush	;wreg free
  7968  005150  94BC               	bcf	16316,2,c	;volatile
  7969                           
  7970                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7971                           ;stkvar	_strPtr @ sp[(0)+-1]
  7972  005152  0EFF               	movlw	-1
  7973  005154  006F FF8C  F047    	movff	plusw1,btemp+11
  7974  00515A  0060  F11F  FFE6   	movff	btemp+11,postinc1
  7975  005160  0E00               	movlw	0
  7976  005162  6EE6               	movwf	postinc1,c
  7977  005164  EC49  F029         	call	_strlen	;wreg free
  7978  005168  503D               	movf	btemp+1,w,c
  7979  00516A  E104               	bnz	u5120
  7980  00516C  0E41               	movlw	65
  7981  00516E  5C3C               	subwf	btemp,w,c
  7982  005170  A0D8               	btfss	status,0,c
  7983  005172  D008               	goto	l8449
  7984  005174                     u5120:
  7985                           
  7986                           ;stkvar	_strPtr @ sp[(0)+-1]
  7987  005174  0EFF               	movlw	-1
  7988  005176  50E3               	movf	plusw1,w,c
  7989  005178  6ED9               	movwf	fsr2l,c
  7990  00517A  6ADA               	clrf	fsr2h,c
  7991  00517C  0E40               	movlw	64
  7992  00517E  26D9               	addwf	fsr2l,f,c
  7993  005180  0E00               	movlw	0
  7994  005182  6EDF               	movwf	indf2,c
  7995  005184                     l8449:
  7996                           
  7997                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  7998  005184  013B               	movlb	59	; () banked
  7999  005186  9FFC               	bcf	252,7,b	;volatile
  8000                           
  8001                           ; BSR set to: 59
  8002                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  8003                           ;stkvar	_strPtr @ sp[(0)+-1]
  8004  005188  0EFF               	movlw	-1
  8005  00518A  006F FF8C  F047    	movff	plusw1,btemp+11
  8006  005190  0060  F11F  FFE6   	movff	btemp+11,postinc1
  8007  005196  0E00               	movlw	0
  8008  005198  6EE6               	movwf	postinc1,c
  8009  00519A  EC49  F029         	call	_strlen	;wreg free
  8010  00519E  0060  F0F3  FBF7   	movff	btemp,15351	;volatile
  8011  0051A4  0060  F0F7  FBF8   	movff	btemp+1,15352	;volatile
  8012                           
  8013                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  8014  0051AA  013B               	movlb	59	; () banked
  8015  0051AC  8FFC               	bsf	252,7,b	;volatile
  8016                           
  8017                           ; BSR set to: 59
  8018                           ;eadog.c: 177:  printf("%s", strPtr);
  8019                           ;stkvar	_strPtr @ sp[(0)+-1]
  8020  0051AE  0EFF               	movlw	-1
  8021  0051B0  006F FF8C  F047    	movff	plusw1,btemp+11
  8022  0051B6  0060  F11F  FFE6   	movff	btemp+11,postinc1
  8023  0051BC  0E00               	movlw	0
  8024  0051BE  6EE6               	movwf	postinc1,c
  8025  0051C0  0EB1               	movlw	(STR_2+9)& (0+255)
  8026  0051C2  6EE6               	movwf	postinc1,c
  8027  0051C4  0E03               	movlw	3
  8028  0051C6  6EE6               	movwf	postinc1,c
  8029  0051C8  EC27  F02C         	call	_printf	;wreg free
  8030                           
  8031                           ; BSR set to: 0
  8032                           ;eadog.c: 178:  start_lcd();
  8033  0051CC  EC34  F032         	call	_start_lcd	;wreg free
  8034                           
  8035                           ; BSR set to: 59
  8036                           ;eadog.c: 180:  wdtdelay(9000);
  8037  0051D0  0E28               	movlw	40
  8038  0051D2  6EE6               	movwf	postinc1,c
  8039  0051D4  0E23               	movlw	35
  8040  0051D6  6EE6               	movwf	postinc1,c
  8041  0051D8  0E00               	movlw	0
  8042  0051DA  6EE6               	movwf	postinc1,c
  8043  0051DC  0E00               	movlw	0
  8044  0051DE  6EE6               	movwf	postinc1,c
  8045  0051E0  EC87  F02C         	call	_wdtdelay	;wreg free
  8046                           
  8047                           ; BSR set to: 0
  8048                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8049  0051E4  52E5               	movf	postdec1,f,c
  8050  0051E6  0012               	return		;funcret
  8051  0051E8                     __end_of_eaDogM_WriteString:
  8052                           	opt callstack 0
  8053                           
  8054 ;; *************** function _eaDogM_WriteCommand *****************
  8055 ;; Defined at:
  8056 ;;		line 143 in file "eadog.c"
  8057 ;; Parameters:    Size  Location     Type
  8058 ;;  cmd             1  [STACK] unsigned char 
  8059 ;; Auto vars:     Size  Location     Type
  8060 ;;		None
  8061 ;; Return value:  Size  Location     Type
  8062 ;;                  1  [STACK] void 
  8063 ;; Registers used:
  8064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8065 ;; Tracked objects:
  8066 ;;		On entry : 3F/3D
  8067 ;;		On exit  : 3F/0
  8068 ;;		Unchanged: 0/0
  8069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8074 ;;Total ram usage:        0 bytes
  8075 ;; Hardware stack levels used:    1
  8076 ;; Hardware stack levels required when called:   13
  8077 ;; This function calls:
  8078 ;;		_send_lcd_cmd_dma
  8079 ;; This function is called by:
  8080 ;;		_main
  8081 ;; This function uses a reentrant model
  8082 ;;
  8083                           
  8084                           	psect	text30
  8085  0063C8                     __ptext30:
  8086                           	opt callstack 0
  8087  0063C8                     _eaDogM_WriteCommand:
  8088                           	opt callstack 17
  8089                           
  8090                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  8091                           ;stkvar	_cmd @ sp[(0)+-1]
  8092                           
  8093                           ; BSR set to: 0
  8094                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8095                           ;incstack = 0
  8096  0063C8  0EFF               	movlw	-1
  8097  0063CA  50E3               	movf	plusw1,w,c
  8098  0063CC  6EE6               	movwf	postinc1,c
  8099  0063CE  ECB5  F02C         	call	_send_lcd_cmd_dma	;wreg free
  8100                           
  8101                           ; BSR set to: 0
  8102                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8103  0063D2  52E5               	movf	postdec1,f,c
  8104  0063D4  0012               	return		;funcret
  8105  0063D6                     __end_of_eaDogM_WriteCommand:
  8106                           	opt callstack 0
  8107                           
  8108 ;; *************** function _send_lcd_cmd_dma *****************
  8109 ;; Defined at:
  8110 ;;		line 187 in file "eadog.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;  strPtr          1  [STACK] unsigned char 
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;		None
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  1  [STACK] void 
  8117 ;; Registers used:
  8118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 3F/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8128 ;;Total ram usage:        0 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:   12
  8131 ;; This function calls:
  8132 ;;		_printf
  8133 ;;		_ringBufS_flush
  8134 ;;		_start_lcd
  8135 ;;		_wait_lcd_done
  8136 ;;		_wait_lcd_set
  8137 ;; This function is called by:
  8138 ;;		_eaDogM_WriteCommand
  8139 ;;		_eaDogM_WriteStringAtPos
  8140 ;; This function uses a reentrant model
  8141 ;;
  8142                           
  8143                           	psect	text31
  8144  00596A                     __ptext31:
  8145                           	opt callstack 0
  8146  00596A                     _send_lcd_cmd_dma:
  8147                           	opt callstack 17
  8148                           
  8149                           ;eadog.c: 187: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 188: {;eadog.c: 189:  wait
      +                          _lcd_set();
  8150                           
  8151                           ; BSR set to: 0
  8152                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8153                           ;incstack = 0
  8154  00596A  EC31  F032         	call	_wait_lcd_set	;wreg free
  8155                           
  8156                           ; BSR set to: 0
  8157                           ;eadog.c: 191:  ringBufS_flush(spi_link.tx1a, 0);
  8158  00596E  0E00               	movlw	0
  8159  005970  6EE6               	movwf	postinc1,c
  8160  005972  0060  F35F  FFE6   	movff	_spi_link+6,postinc1
  8161  005978  0060  F363  FFE6   	movff	_spi_link+7,postinc1
  8162  00597E  ECCE  F02A         	call	_ringBufS_flush	;wreg free
  8163  005982  92BC               	bcf	16316,1,c	;volatile
  8164  005984  94BC               	bcf	16316,2,c	;volatile
  8165                           
  8166                           ;eadog.c: 194:  DMA1CON0bits.EN = 0;
  8167  005986  013B               	movlb	59	; () banked
  8168  005988  9FFC               	bcf	252,7,b	;volatile
  8169                           
  8170                           ; BSR set to: 59
  8171                           ;eadog.c: 195:  DMA1SSZ = 1;
  8172  00598A  0E00               	movlw	0
  8173  00598C  6FF8               	movwf	248,b	;volatile
  8174  00598E  0E01               	movlw	1
  8175  005990  6FF7               	movwf	247,b	;volatile
  8176                           
  8177                           ; BSR set to: 59
  8178                           ;eadog.c: 196:  DMA1CON0bits.EN = 1;
  8179  005992  8FFC               	bsf	252,7,b	;volatile
  8180                           
  8181                           ; BSR set to: 59
  8182                           ;eadog.c: 197:  printf("%c", strPtr);
  8183                           ;stkvar	_strPtr @ sp[(0)+-1]
  8184  005994  0EFF               	movlw	-1
  8185  005996  50E3               	movf	plusw1,w,c
  8186  005998  6EE6               	movwf	postinc1,c
  8187  00599A  0E00               	movlw	0
  8188  00599C  6EE6               	movwf	postinc1,c
  8189  00599E  0ECC               	movlw	STR_17& (0+255)
  8190  0059A0  6EE6               	movwf	postinc1,c
  8191  0059A2  0E03               	movlw	3
  8192  0059A4  6EE6               	movwf	postinc1,c
  8193  0059A6  EC27  F02C         	call	_printf	;wreg free
  8194                           
  8195                           ; BSR set to: 0
  8196                           ;eadog.c: 198:  start_lcd();
  8197  0059AA  EC34  F032         	call	_start_lcd	;wreg free
  8198                           
  8199                           ; BSR set to: 59
  8200                           ;eadog.c: 199:  wait_lcd_done();
  8201  0059AE  EC72  F031         	call	_wait_lcd_done	;wreg free
  8202                           
  8203                           ; BSR set to: 0
  8204  0059B2  82BC               	bsf	16316,1,c	;volatile
  8205                           
  8206                           ; BSR set to: 0
  8207                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8208  0059B4  52E5               	movf	postdec1,f,c
  8209  0059B6  0012               	return		;funcret
  8210  0059B8                     __end_of_send_lcd_cmd_dma:
  8211                           	opt callstack 0
  8212                           
  8213 ;; *************** function _wait_lcd_set *****************
  8214 ;; Defined at:
  8215 ;;		line 114 in file "eadog.c"
  8216 ;; Parameters:    Size  Location     Type
  8217 ;;		None
  8218 ;; Auto vars:     Size  Location     Type
  8219 ;;		None
  8220 ;; Return value:  Size  Location     Type
  8221 ;;                  1  [STACK] void 
  8222 ;; Registers used:
  8223 ;;		None
  8224 ;; Tracked objects:
  8225 ;;		On entry : 0/0
  8226 ;;		On exit  : 3F/0
  8227 ;;		Unchanged: 0/0
  8228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8233 ;;Total ram usage:        0 bytes
  8234 ;; Hardware stack levels used:    1
  8235 ;; Hardware stack levels required when called:    3
  8236 ;; This function calls:
  8237 ;;		Nothing
  8238 ;; This function is called by:
  8239 ;;		_eaDogM_WriteString
  8240 ;;		_send_lcd_cmd_dma
  8241 ;; This function uses a reentrant model
  8242 ;;
  8243                           
  8244                           	psect	text32
  8245  006462                     __ptext32:
  8246                           	opt callstack 0
  8247  006462                     _wait_lcd_set:
  8248                           	opt callstack 25
  8249                           
  8250                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  8251                           
  8252                           ; BSR set to: 0
  8253                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8254                           ;incstack = 0
  8255  006462  0100               	movlb	0	; () banked
  8256  006464  87D1               	bsf	_spi_link& (0+255),3,b	;volatile
  8257                           
  8258                           ; BSR set to: 0
  8259                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8260  006466  0012               	return		;funcret
  8261  006468                     __end_of_wait_lcd_set:
  8262                           	opt callstack 0
  8263                           
  8264 ;; *************** function _wait_lcd_done *****************
  8265 ;; Defined at:
  8266 ;;		line 124 in file "eadog.c"
  8267 ;; Parameters:    Size  Location     Type
  8268 ;;		None
  8269 ;; Auto vars:     Size  Location     Type
  8270 ;;		None
  8271 ;; Return value:  Size  Location     Type
  8272 ;;                  1  [STACK] void 
  8273 ;; Registers used:
  8274 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8275 ;; Tracked objects:
  8276 ;;		On entry : 4/0
  8277 ;;		On exit  : 3F/0
  8278 ;;		Unchanged: 0/0
  8279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8284 ;;Total ram usage:        0 bytes
  8285 ;; Hardware stack levels used:    1
  8286 ;; Hardware stack levels required when called:    4
  8287 ;; This function calls:
  8288 ;;		_wdtdelay
  8289 ;; This function is called by:
  8290 ;;		_main
  8291 ;;		_send_lcd_cmd_dma
  8292 ;; This function uses a reentrant model
  8293 ;;
  8294                           
  8295                           	psect	text33
  8296  0062E4                     __ptext33:
  8297                           	opt callstack 0
  8298  0062E4                     _wait_lcd_done:
  8299                           	opt callstack 26
  8300                           
  8301                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  8302                           
  8303                           ; BSR set to: 0
  8304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8305                           ;incstack = 0
  8306  0062E4  0100               	movlb	0	; () banked
  8307  0062E6  B7D1               	btfsc	_spi_link& (0+255),3,b	;volatile
  8308  0062E8  D7FD               	goto	_wait_lcd_done
  8309                           
  8310                           ; BSR set to: 0
  8311                           ;eadog.c: 127:  wdtdelay(50);
  8312  0062EA  0E32               	movlw	50
  8313  0062EC  6EE6               	movwf	postinc1,c
  8314  0062EE  0E00               	movlw	0
  8315  0062F0  6EE6               	movwf	postinc1,c
  8316  0062F2  0E00               	movlw	0
  8317  0062F4  6EE6               	movwf	postinc1,c
  8318  0062F6  0E00               	movlw	0
  8319  0062F8  6EE6               	movwf	postinc1,c
  8320  0062FA  EC87  F02C         	call	_wdtdelay	;wreg free
  8321                           
  8322                           ; BSR set to: 0
  8323                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8324  0062FE  0012               	return		;funcret
  8325  006300                     __end_of_wait_lcd_done:
  8326                           	opt callstack 0
  8327                           
  8328 ;; *************** function _wdtdelay *****************
  8329 ;; Defined at:
  8330 ;;		line 21 in file "eadog.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;  delay           4  [STACK] unsigned long 
  8333 ;; Auto vars:     Size  Location     Type
  8334 ;;		None
  8335 ;; Return value:  Size  Location     Type
  8336 ;;                  1  [STACK] void 
  8337 ;; Registers used:
  8338 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/0
  8341 ;;		On exit  : 3F/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8348 ;;Total ram usage:        0 bytes
  8349 ;; Hardware stack levels used:    1
  8350 ;; Hardware stack levels required when called:    3
  8351 ;; This function calls:
  8352 ;;		Nothing
  8353 ;; This function is called by:
  8354 ;;		_init_display
  8355 ;;		_send_lcd_cmd
  8356 ;;		_send_lcd_cmd_long
  8357 ;;		_wait_lcd_done
  8358 ;;		_eaDogM_WriteString
  8359 ;; This function uses a reentrant model
  8360 ;;
  8361                           
  8362                           	psect	text34
  8363  00590E                     __ptext34:
  8364                           	opt callstack 0
  8365  00590E                     _wdtdelay:
  8366                           	opt callstack 26
  8367                           
  8368                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  8369                           
  8370                           ; BSR set to: 0
  8371                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8372                           ;incstack = 0
  8373  00590E  0100               	movlb	0	; () banked
  8374  005910  6BF0               	clrf	wdtdelay@dcount& (0+255),b
  8375  005912  6BF1               	clrf	(wdtdelay@dcount+1)& (0+255),b
  8376  005914  6BF2               	clrf	(wdtdelay@dcount+2)& (0+255),b
  8377  005916  6BF3               	clrf	(wdtdelay@dcount+3)& (0+255),b
  8378  005918  D009               	goto	l5909
  8379  00591A                     l1353:
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;eadog.c: 26:   __nop();
  8383  00591A  F000               	nop	
  8384  00591C  0004               	clrwdt		;# 
  8385                           
  8386                           ;eadog.c: 28:  };
  8387  00591E  0E01               	movlw	1
  8388  005920  0100               	movlb	0	; () banked
  8389  005922  27F0               	addwf	wdtdelay@dcount& (0+255),f,b
  8390  005924  0E00               	movlw	0
  8391  005926  23F1               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  8392  005928  23F2               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  8393  00592A  23F3               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  8394  00592C                     l5909:
  8395                           
  8396                           ; BSR set to: 0
  8397                           ;stkvar	_delay @ sp[(0)+-4]
  8398  00592C  0EFC               	movlw	-4
  8399  00592E  006F FF8C  F03C    	movff	plusw1,btemp
  8400  005934  51F0               	movf	wdtdelay@dcount& (0+255),w,b
  8401  005936  5C3C               	subwf	btemp,w,c
  8402  005938  0EFD               	movlw	-3
  8403  00593A  006F FF8C  F03C    	movff	plusw1,btemp
  8404  005940  51F1               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  8405  005942  583C               	subwfb	btemp,w,c
  8406  005944  0EFE               	movlw	-2
  8407  005946  006F FF8C  F03C    	movff	plusw1,btemp
  8408  00594C  51F2               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  8409  00594E  583C               	subwfb	btemp,w,c
  8410  005950  0EFF               	movlw	-1
  8411  005952  006F FF8C  F03C    	movff	plusw1,btemp
  8412  005958  51F3               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  8413  00595A  583C               	subwfb	btemp,w,c
  8414  00595C  B0D8               	btfsc	status,0,c
  8415  00595E  D7DD               	goto	l1353
  8416                           
  8417                           ; BSR set to: 0
  8418                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  8419  005960  52E5               	movf	postdec1,f,c
  8420  005962  52E5               	movf	postdec1,f,c
  8421  005964  52E5               	movf	postdec1,f,c
  8422  005966  52E5               	movf	postdec1,f,c
  8423  005968  0012               	return		;funcret
  8424  00596A                     __end_of_wdtdelay:
  8425                           	opt callstack 0
  8426                           
  8427 ;; *************** function _start_lcd *****************
  8428 ;; Defined at:
  8429 ;;		line 109 in file "eadog.c"
  8430 ;; Parameters:    Size  Location     Type
  8431 ;;		None
  8432 ;; Auto vars:     Size  Location     Type
  8433 ;;		None
  8434 ;; Return value:  Size  Location     Type
  8435 ;;                  1  [STACK] void 
  8436 ;; Registers used:
  8437 ;;		None
  8438 ;; Tracked objects:
  8439 ;;		On entry : 3F/0
  8440 ;;		On exit  : 3F/3B
  8441 ;;		Unchanged: 0/0
  8442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8447 ;;Total ram usage:        0 bytes
  8448 ;; Hardware stack levels used:    1
  8449 ;; Hardware stack levels required when called:    3
  8450 ;; This function calls:
  8451 ;;		Nothing
  8452 ;; This function is called by:
  8453 ;;		_eaDogM_WriteString
  8454 ;;		_send_lcd_cmd_dma
  8455 ;; This function uses a reentrant model
  8456 ;;
  8457                           
  8458                           	psect	text35
  8459  006468                     __ptext35:
  8460                           	opt callstack 0
  8461  006468                     _start_lcd:
  8462                           	opt callstack 25
  8463                           
  8464                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  8465                           
  8466                           ; BSR set to: 0
  8467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8468                           ;incstack = 0
  8469  006468  013B               	movlb	59	; () banked
  8470  00646A  8DFC               	bsf	252,6,b	;volatile
  8471                           
  8472                           ; BSR set to: 59
  8473                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8474  00646C  0012               	return		;funcret
  8475  00646E                     __end_of_start_lcd:
  8476                           	opt callstack 0
  8477                           
  8478 ;; *************** function _ringBufS_flush *****************
  8479 ;; Defined at:
  8480 ;;		line 76 in file "ringbufs.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;  _this           2  [STACK] PTR struct ringBufS_t
  8483 ;;		 -> ring_buf1(67), 
  8484 ;;  clearBuffer     1  [STACK] const char 
  8485 ;; Auto vars:     Size  Location     Type
  8486 ;;		None
  8487 ;; Return value:  Size  Location     Type
  8488 ;;                  1  [STACK] void 
  8489 ;; Registers used:
  8490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8491 ;; Tracked objects:
  8492 ;;		On entry : 3F/0
  8493 ;;		On exit  : 0/0
  8494 ;;		Unchanged: 0/0
  8495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8500 ;;Total ram usage:        0 bytes
  8501 ;; Hardware stack levels used:    1
  8502 ;; Hardware stack levels required when called:    4
  8503 ;; This function calls:
  8504 ;;		_memset
  8505 ;; This function is called by:
  8506 ;;		_eaDogM_WriteString
  8507 ;;		_send_lcd_cmd_dma
  8508 ;; This function uses a reentrant model
  8509 ;;
  8510                           
  8511                           	psect	text36
  8512  00559C                     __ptext36:
  8513                           	opt callstack 0
  8514  00559C                     _ringBufS_flush:
  8515                           	opt callstack 24
  8516                           
  8517                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  8518                           ;stkvar	__this @ sp[(0)+-2]
  8519                           
  8520                           ; BSR set to: 59
  8521                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8522                           ;incstack = 0
  8523  00559C  0EFE               	movlw	-2
  8524  00559E  006F FF8C  F046    	movff	plusw1,btemp+10
  8525  0055A4  0EFF               	movlw	-1
  8526  0055A6  006F FF8C  F047    	movff	plusw1,btemp+11
  8527  0055AC  0E42               	movlw	66
  8528  0055AE  2446               	addwf	btemp+10,w,c
  8529  0055B0  6ED9               	movwf	fsr2l,c
  8530  0055B2  0E00               	movlw	0
  8531  0055B4  2047               	addwfc	btemp+11,w,c
  8532  0055B6  6EDA               	movwf	fsr2h,c
  8533  0055B8  0E00               	movlw	0
  8534  0055BA  6EDF               	movwf	indf2,c
  8535                           
  8536                           ;ringbufs.c: 79:  _this->head = 0;
  8537                           ;stkvar	__this @ sp[(0)+-2]
  8538  0055BC  0EFE               	movlw	-2
  8539  0055BE  006F FF8C  F046    	movff	plusw1,btemp+10
  8540  0055C4  0EFF               	movlw	-1
  8541  0055C6  006F FF8C  F047    	movff	plusw1,btemp+11
  8542  0055CC  0E40               	movlw	64
  8543  0055CE  2446               	addwf	btemp+10,w,c
  8544  0055D0  6ED9               	movwf	fsr2l,c
  8545  0055D2  0E00               	movlw	0
  8546  0055D4  2047               	addwfc	btemp+11,w,c
  8547  0055D6  6EDA               	movwf	fsr2h,c
  8548  0055D8  0E00               	movlw	0
  8549  0055DA  6EDF               	movwf	indf2,c
  8550                           
  8551                           ;ringbufs.c: 80:  _this->tail = 0;
  8552                           ;stkvar	__this @ sp[(0)+-2]
  8553  0055DC  0EFE               	movlw	-2
  8554  0055DE  006F FF8C  F046    	movff	plusw1,btemp+10
  8555  0055E4  0EFF               	movlw	-1
  8556  0055E6  006F FF8C  F047    	movff	plusw1,btemp+11
  8557  0055EC  0E41               	movlw	65
  8558  0055EE  2446               	addwf	btemp+10,w,c
  8559  0055F0  6ED9               	movwf	fsr2l,c
  8560  0055F2  0E00               	movlw	0
  8561  0055F4  2047               	addwfc	btemp+11,w,c
  8562  0055F6  6EDA               	movwf	fsr2h,c
  8563  0055F8  0E00               	movlw	0
  8564  0055FA  6EDF               	movwf	indf2,c
  8565                           
  8566                           ;ringbufs.c: 81:  if (clearBuffer) {
  8567                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  8568  0055FC  0EFD               	movlw	-3
  8569  0055FE  50E3               	movf	plusw1,w,c
  8570  005600  B4D8               	btfsc	status,2,c
  8571  005602  D011               	goto	l1489
  8572                           
  8573                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  8574  005604  0E40               	movlw	64
  8575  005606  6EE6               	movwf	postinc1,c
  8576  005608  0E00               	movlw	0
  8577  00560A  6EE6               	movwf	postinc1,c
  8578  00560C  0E00               	movlw	0
  8579  00560E  6EE6               	movwf	postinc1,c
  8580  005610  0E00               	movlw	0
  8581  005612  6EE6               	movwf	postinc1,c
  8582                           
  8583                           ;stkvar	__this @ sp[(-4)+-2]
  8584  005614  0EFA               	movlw	-6
  8585  005616  006F FF8F FFE6     	movff	plusw1,postinc1
  8586  00561C  006F FF8F FFE6     	movff	plusw1,postinc1
  8587  005622  ECCE  F01B         	call	_memset	;wreg free
  8588  005626                     l1489:
  8589                           
  8590                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  8591  005626  52E5               	movf	postdec1,f,c
  8592  005628  52E5               	movf	postdec1,f,c
  8593  00562A  52E5               	movf	postdec1,f,c
  8594  00562C  0012               	return		;funcret
  8595  00562E                     __end_of_ringBufS_flush:
  8596                           	opt callstack 0
  8597                           
  8598 ;; *************** function _memset *****************
  8599 ;; Defined at:
  8600 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;  dest            2  [STACK] PTR void 
  8603 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8604 ;;  c               2  [STACK] int 
  8605 ;;  n               2  [STACK] unsigned int 
  8606 ;; Auto vars:     Size  Location     Type
  8607 ;;  s               2  [STACK] PTR unsigned char 
  8608 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8609 ;;  k               2  [STACK] unsigned int 
  8610 ;; Return value:  Size  Location     Type
  8611 ;;                  2  [STACK] PTR void 
  8612 ;; Registers used:
  8613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8614 ;; Tracked objects:
  8615 ;;		On entry : 0/0
  8616 ;;		On exit  : 0/0
  8617 ;;		Unchanged: 0/0
  8618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8623 ;;Total ram usage:        0 bytes
  8624 ;; Hardware stack levels used:    1
  8625 ;; Hardware stack levels required when called:    3
  8626 ;; This function calls:
  8627 ;;		Nothing
  8628 ;; This function is called by:
  8629 ;;		_ringBufS_init
  8630 ;;		_ringBufS_flush
  8631 ;; This function uses a reentrant model
  8632 ;;
  8633                           
  8634                           	psect	text37
  8635  00379C                     __ptext37:
  8636                           	opt callstack 0
  8637  00379C                     _memset:
  8638                           	opt callstack 0
  8639                           
  8640                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8641  00379C  52E6               	movf	postinc1,f,c
  8642  00379E  52E6               	movf	postinc1,f,c
  8643  0037A0  52E6               	movf	postinc1,f,c
  8644  0037A2  52E6               	movf	postinc1,f,c
  8645                           
  8646                           ;stkvar	_dest @ sp[(-4)+-2]
  8647                           
  8648                           ;incstack = 0
  8649  0037A4  0EFA               	movlw	-6
  8650  0037A6  006F FF8C  F046    	movff	plusw1,btemp+10
  8651  0037AC  0EFB               	movlw	-5
  8652  0037AE  006F FF8C  F047    	movff	plusw1,btemp+11
  8653                           
  8654                           ;stkvar	_s @ sp[(-4)+0]
  8655  0037B4  0EFD               	movlw	-3
  8656  0037B6  0060  F11F  FFE3   	movff	btemp+11,plusw1
  8657  0037BC  0EFC               	movlw	-4
  8658  0037BE  0060  F11B  FFE3   	movff	btemp+10,plusw1
  8659                           
  8660                           ;stkvar	_n @ sp[(-4)+-6]
  8661  0037C4  0EF6               	movlw	-10
  8662  0037C6  006F FF8C  F03C    	movff	plusw1,btemp
  8663  0037CC  0EF7               	movlw	-9
  8664  0037CE  50E3               	movf	plusw1,w,c
  8665  0037D0  103C               	iorwf	btemp,w,c
  8666  0037D2  B4D8               	btfsc	status,2,c
  8667  0037D4  D154               	goto	u5060
  8668                           
  8669                           ;stkvar	_c @ sp[(-4)+-4]
  8670                           ;stkvar	_s @ sp[(-4)+0]
  8671  0037D6  0EFC               	movlw	-4
  8672  0037D8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8673  0037DE  0EFD               	movlw	-3
  8674  0037E0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8675  0037E6  0EF8               	movlw	-8
  8676  0037E8  006F FF8F FFDF     	movff	plusw1,indf2
  8677                           
  8678                           ;stkvar	_c @ sp[(-4)+-4]
  8679                           ;stkvar	_n @ sp[(-4)+-6]
  8680                           ;stkvar	_s @ sp[(-4)+0]
  8681  0037EE  0EFC               	movlw	-4
  8682  0037F0  006F FF8C  F046    	movff	plusw1,btemp+10
  8683  0037F6  0EFD               	movlw	-3
  8684  0037F8  006F FF8C  F047    	movff	plusw1,btemp+11
  8685  0037FE  0EF6               	movlw	-10
  8686  003800  50E3               	movf	plusw1,w,c
  8687  003802  2646               	addwf	btemp+10,f,c
  8688  003804  0EF7               	movlw	-9
  8689  003806  50E3               	movf	plusw1,w,c
  8690  003808  2247               	addwfc	btemp+11,f,c
  8691  00380A  0EFF               	movlw	255
  8692  00380C  2446               	addwf	btemp+10,w,c
  8693  00380E  6ED9               	movwf	fsr2l,c
  8694  003810  0EFF               	movlw	255
  8695  003812  2047               	addwfc	btemp+11,w,c
  8696  003814  6EDA               	movwf	fsr2h,c
  8697  003816  0EF8               	movlw	-8
  8698  003818  006F FF8F FFDF     	movff	plusw1,indf2
  8699                           
  8700                           ;stkvar	_n @ sp[(-4)+-6]
  8701  00381E  0EF7               	movlw	-9
  8702  003820  50E3               	movf	plusw1,w,c
  8703  003822  E108               	bnz	l8319
  8704  003824  0EF6               	movlw	-10
  8705  003826  006F FF8C  F03C    	movff	plusw1,btemp
  8706  00382C  0E03               	movlw	3
  8707  00382E  5E3C               	subwf	btemp,f,c
  8708  003830  A0D8               	btfss	status,0,c
  8709  003832  D125               	goto	u5060
  8710  003834                     l8319:
  8711                           
  8712                           ;stkvar	_c @ sp[(-4)+-4]
  8713                           ;stkvar	_s @ sp[(-4)+0]
  8714  003834  0EFC               	movlw	-4
  8715  003836  006F FF8C  F046    	movff	plusw1,btemp+10
  8716  00383C  0EFD               	movlw	-3
  8717  00383E  006F FF8C  F047    	movff	plusw1,btemp+11
  8718  003844  0E01               	movlw	1
  8719  003846  2446               	addwf	btemp+10,w,c
  8720  003848  6ED9               	movwf	fsr2l,c
  8721  00384A  0E00               	movlw	0
  8722  00384C  2047               	addwfc	btemp+11,w,c
  8723  00384E  6EDA               	movwf	fsr2h,c
  8724  003850  0EF8               	movlw	-8
  8725  003852  006F FF8F FFDF     	movff	plusw1,indf2
  8726                           
  8727                           ;stkvar	_c @ sp[(-4)+-4]
  8728                           ;stkvar	_s @ sp[(-4)+0]
  8729  003858  0EFC               	movlw	-4
  8730  00385A  006F FF8C  F046    	movff	plusw1,btemp+10
  8731  003860  0EFD               	movlw	-3
  8732  003862  006F FF8C  F047    	movff	plusw1,btemp+11
  8733  003868  0E02               	movlw	2
  8734  00386A  2446               	addwf	btemp+10,w,c
  8735  00386C  6ED9               	movwf	fsr2l,c
  8736  00386E  0E00               	movlw	0
  8737  003870  2047               	addwfc	btemp+11,w,c
  8738  003872  6EDA               	movwf	fsr2h,c
  8739  003874  0EF8               	movlw	-8
  8740  003876  006F FF8F FFDF     	movff	plusw1,indf2
  8741                           
  8742                           ;stkvar	_c @ sp[(-4)+-4]
  8743                           ;stkvar	_n @ sp[(-4)+-6]
  8744                           ;stkvar	_s @ sp[(-4)+0]
  8745  00387C  0EFC               	movlw	-4
  8746  00387E  006F FF8C  F046    	movff	plusw1,btemp+10
  8747  003884  0EFD               	movlw	-3
  8748  003886  006F FF8C  F047    	movff	plusw1,btemp+11
  8749  00388C  0EF6               	movlw	-10
  8750  00388E  50E3               	movf	plusw1,w,c
  8751  003890  2646               	addwf	btemp+10,f,c
  8752  003892  0EF7               	movlw	-9
  8753  003894  50E3               	movf	plusw1,w,c
  8754  003896  2247               	addwfc	btemp+11,f,c
  8755  003898  0EFE               	movlw	254
  8756  00389A  2446               	addwf	btemp+10,w,c
  8757  00389C  6ED9               	movwf	fsr2l,c
  8758  00389E  0EFF               	movlw	255
  8759  0038A0  2047               	addwfc	btemp+11,w,c
  8760  0038A2  6EDA               	movwf	fsr2h,c
  8761  0038A4  0EF8               	movlw	-8
  8762  0038A6  006F FF8F FFDF     	movff	plusw1,indf2
  8763                           
  8764                           ;stkvar	_c @ sp[(-4)+-4]
  8765                           ;stkvar	_n @ sp[(-4)+-6]
  8766                           ;stkvar	_s @ sp[(-4)+0]
  8767  0038AC  0EFC               	movlw	-4
  8768  0038AE  006F FF8C  F046    	movff	plusw1,btemp+10
  8769  0038B4  0EFD               	movlw	-3
  8770  0038B6  006F FF8C  F047    	movff	plusw1,btemp+11
  8771  0038BC  0EF6               	movlw	-10
  8772  0038BE  50E3               	movf	plusw1,w,c
  8773  0038C0  2646               	addwf	btemp+10,f,c
  8774  0038C2  0EF7               	movlw	-9
  8775  0038C4  50E3               	movf	plusw1,w,c
  8776  0038C6  2247               	addwfc	btemp+11,f,c
  8777  0038C8  0EFD               	movlw	253
  8778  0038CA  2446               	addwf	btemp+10,w,c
  8779  0038CC  6ED9               	movwf	fsr2l,c
  8780  0038CE  0EFF               	movlw	255
  8781  0038D0  2047               	addwfc	btemp+11,w,c
  8782  0038D2  6EDA               	movwf	fsr2h,c
  8783  0038D4  0EF8               	movlw	-8
  8784  0038D6  006F FF8F FFDF     	movff	plusw1,indf2
  8785                           
  8786                           ;stkvar	_n @ sp[(-4)+-6]
  8787  0038DC  0EF7               	movlw	-9
  8788  0038DE  50E3               	movf	plusw1,w,c
  8789  0038E0  E108               	bnz	l8325
  8790  0038E2  0EF6               	movlw	-10
  8791  0038E4  006F FF8C  F03C    	movff	plusw1,btemp
  8792  0038EA  0E07               	movlw	7
  8793  0038EC  5E3C               	subwf	btemp,f,c
  8794  0038EE  A0D8               	btfss	status,0,c
  8795  0038F0  D0C6               	goto	u5060
  8796  0038F2                     l8325:
  8797                           
  8798                           ;stkvar	_c @ sp[(-4)+-4]
  8799                           ;stkvar	_s @ sp[(-4)+0]
  8800  0038F2  0EFC               	movlw	-4
  8801  0038F4  006F FF8C  F046    	movff	plusw1,btemp+10
  8802  0038FA  0EFD               	movlw	-3
  8803  0038FC  006F FF8C  F047    	movff	plusw1,btemp+11
  8804  003902  0E03               	movlw	3
  8805  003904  2446               	addwf	btemp+10,w,c
  8806  003906  6ED9               	movwf	fsr2l,c
  8807  003908  0E00               	movlw	0
  8808  00390A  2047               	addwfc	btemp+11,w,c
  8809  00390C  6EDA               	movwf	fsr2h,c
  8810  00390E  0EF8               	movlw	-8
  8811  003910  006F FF8F FFDF     	movff	plusw1,indf2
  8812                           
  8813                           ;stkvar	_c @ sp[(-4)+-4]
  8814                           ;stkvar	_n @ sp[(-4)+-6]
  8815                           ;stkvar	_s @ sp[(-4)+0]
  8816  003916  0EFC               	movlw	-4
  8817  003918  006F FF8C  F046    	movff	plusw1,btemp+10
  8818  00391E  0EFD               	movlw	-3
  8819  003920  006F FF8C  F047    	movff	plusw1,btemp+11
  8820  003926  0EF6               	movlw	-10
  8821  003928  50E3               	movf	plusw1,w,c
  8822  00392A  2646               	addwf	btemp+10,f,c
  8823  00392C  0EF7               	movlw	-9
  8824  00392E  50E3               	movf	plusw1,w,c
  8825  003930  2247               	addwfc	btemp+11,f,c
  8826  003932  0EFC               	movlw	252
  8827  003934  2446               	addwf	btemp+10,w,c
  8828  003936  6ED9               	movwf	fsr2l,c
  8829  003938  0EFF               	movlw	255
  8830  00393A  2047               	addwfc	btemp+11,w,c
  8831  00393C  6EDA               	movwf	fsr2h,c
  8832  00393E  0EF8               	movlw	-8
  8833  003940  006F FF8F FFDF     	movff	plusw1,indf2
  8834                           
  8835                           ;stkvar	_n @ sp[(-4)+-6]
  8836  003946  0EF7               	movlw	-9
  8837  003948  50E3               	movf	plusw1,w,c
  8838  00394A  E108               	bnz	l8331
  8839  00394C  0EF6               	movlw	-10
  8840  00394E  006F FF8C  F03C    	movff	plusw1,btemp
  8841  003954  0E09               	movlw	9
  8842  003956  5E3C               	subwf	btemp,f,c
  8843  003958  A0D8               	btfss	status,0,c
  8844  00395A  D091               	goto	u5060
  8845  00395C                     l8331:
  8846                           
  8847                           ;stkvar	_s @ sp[(-4)+0]
  8848  00395C  0EFC               	movlw	-4
  8849  00395E  006F FF8C  F046    	movff	plusw1,btemp+10
  8850  003964  1E46               	comf	btemp+10,f,c
  8851  003966  0EFD               	movlw	-3
  8852  003968  006F FF8C  F047    	movff	plusw1,btemp+11
  8853  00396E  1E47               	comf	btemp+11,f,c
  8854  003970  2A46               	incf	btemp+10,f,c
  8855  003972  B4D8               	btfsc	status,2,c
  8856  003974  2A47               	incf	btemp+11,f,c
  8857  003976  0E03               	movlw	3
  8858  003978  1646               	andwf	btemp+10,f,c
  8859  00397A  0E00               	movlw	0
  8860  00397C  1647               	andwf	btemp+11,f,c
  8861                           
  8862                           ;stkvar	_k @ sp[(-4)+2]
  8863  00397E  0EFE               	movlw	-2
  8864  003980  0060  F11B  FFE3   	movff	btemp+10,plusw1
  8865  003986  0EFF               	movlw	-1
  8866  003988  0060  F11F  FFE3   	movff	btemp+11,plusw1
  8867                           
  8868                           ;stkvar	_k @ sp[(-4)+2]
  8869                           ;stkvar	_s @ sp[(-4)+0]
  8870  00398E  0EFC               	movlw	-4
  8871  003990  50E3               	movf	plusw1,w,c
  8872  003992  6E3C               	movwf	btemp,c
  8873  003994  0EFE               	movlw	-2
  8874  003996  50E3               	movf	plusw1,w,c
  8875  003998  263C               	addwf	btemp,f,c
  8876  00399A  0EFC               	movlw	-4
  8877  00399C  0060  F0F3  FFE3   	movff	btemp,plusw1
  8878  0039A2  0EFD               	movlw	-3
  8879  0039A4  50E3               	movf	plusw1,w,c
  8880  0039A6  6E3C               	movwf	btemp,c
  8881  0039A8  0EFF               	movlw	-1
  8882  0039AA  50E3               	movf	plusw1,w,c
  8883  0039AC  223C               	addwfc	btemp,f,c
  8884  0039AE  0EFD               	movlw	-3
  8885  0039B0  0060  F0F3  FFE3   	movff	btemp,plusw1
  8886                           
  8887                           ;stkvar	_k @ sp[(-4)+2]
  8888                           ;stkvar	_n @ sp[(-4)+-6]
  8889  0039B6  0EF6               	movlw	-10
  8890  0039B8  50E3               	movf	plusw1,w,c
  8891  0039BA  6E3C               	movwf	btemp,c
  8892  0039BC  0EFE               	movlw	-2
  8893  0039BE  50E3               	movf	plusw1,w,c
  8894  0039C0  5E3C               	subwf	btemp,f,c
  8895  0039C2  0EF6               	movlw	-10
  8896  0039C4  0060  F0F3  FFE3   	movff	btemp,plusw1
  8897  0039CA  0EF7               	movlw	-9
  8898  0039CC  50E3               	movf	plusw1,w,c
  8899  0039CE  6E3C               	movwf	btemp,c
  8900  0039D0  0EFF               	movlw	-1
  8901  0039D2  50E3               	movf	plusw1,w,c
  8902  0039D4  5A3C               	subwfb	btemp,f,c
  8903  0039D6  0EF7               	movlw	-9
  8904  0039D8  0060  F0F3  FFE3   	movff	btemp,plusw1
  8905  0039DE  0EFC               	movlw	252
  8906  0039E0  6E46               	movwf	btemp+10,c
  8907  0039E2  0EFF               	movlw	255
  8908  0039E4  6E47               	movwf	btemp+11,c
  8909                           
  8910                           ;stkvar	_n @ sp[(-4)+-6]
  8911  0039E6  0EF6               	movlw	-10
  8912  0039E8  006F FF8C  F03C    	movff	plusw1,btemp
  8913  0039EE  5046               	movf	btemp+10,w,c
  8914  0039F0  163C               	andwf	btemp,f,c
  8915  0039F2  0EF6               	movlw	-10
  8916  0039F4  0060  F0F3  FFE3   	movff	btemp,plusw1
  8917  0039FA  0EF7               	movlw	-9
  8918  0039FC  006F FF8C  F03C    	movff	plusw1,btemp
  8919  003A02  5047               	movf	btemp+11,w,c
  8920  003A04  163C               	andwf	btemp,f,c
  8921  003A06  0EF7               	movlw	-9
  8922  003A08  D02E               	goto	L24
  8923  003A0A                     l8339:
  8924                           
  8925                           ;stkvar	_c @ sp[(-4)+-4]
  8926                           ;stkvar	_s @ sp[(-4)+0]
  8927  003A0A  0EFC               	movlw	-4
  8928  003A0C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8929  003A12  0EFD               	movlw	-3
  8930  003A14  006F FF8F FFDA     	movff	plusw1,fsr2h
  8931  003A1A  0EF8               	movlw	-8
  8932  003A1C  006F FF8F FFDF     	movff	plusw1,indf2
  8933                           
  8934                           ;stkvar	_n @ sp[(-4)+-6]
  8935  003A22  0EF6               	movlw	-10
  8936  003A24  006F FF8C  F03C    	movff	plusw1,btemp
  8937  003A2A  0E01               	movlw	1
  8938  003A2C  5E3C               	subwf	btemp,f,c
  8939  003A2E  0EF6               	movlw	-10
  8940  003A30  0060  F0F3  FFE3   	movff	btemp,plusw1
  8941  003A36  0EF7               	movlw	-9
  8942  003A38  006F FF8C  F03C    	movff	plusw1,btemp
  8943  003A3E  0E00               	movlw	0
  8944  003A40  5A3C               	subwfb	btemp,f,c
  8945  003A42  0EF7               	movlw	-9
  8946  003A44  0060  F0F3  FFE3   	movff	btemp,plusw1
  8947                           
  8948                           ;stkvar	_s @ sp[(-4)+0]
  8949  003A4A  0EFC               	movlw	-4
  8950  003A4C  50E3               	movf	plusw1,w,c
  8951  003A4E  0F01               	addlw	1
  8952  003A50  6E3C               	movwf	btemp,c
  8953  003A52  0EFC               	movlw	-4
  8954  003A54  0060  F0F3  FFE3   	movff	btemp,plusw1
  8955  003A5A  6A3C               	clrf	btemp,c
  8956  003A5C  0EFD               	movlw	-3
  8957  003A5E  50E3               	movf	plusw1,w,c
  8958  003A60  203C               	addwfc	btemp,w,c
  8959  003A62  6E3C               	movwf	btemp,c
  8960  003A64  0EFD               	movlw	-3
  8961  003A66                     L24:
  8962  003A66  0060  F0F3  FFE3   	movff	btemp,plusw1
  8963                           
  8964                           ;stkvar	_n @ sp[(-4)+-6]
  8965  003A6C  0EF6               	movlw	-10
  8966  003A6E  006F FF8C  F03C    	movff	plusw1,btemp
  8967  003A74  0EF7               	movlw	-9
  8968  003A76  50E3               	movf	plusw1,w,c
  8969  003A78  103C               	iorwf	btemp,w,c
  8970  003A7A  A4D8               	btfss	status,2,c
  8971  003A7C  D7C6               	goto	l8339
  8972  003A7E                     u5060:
  8973                           
  8974                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8975  003A7E  0EF6               	movlw	246
  8976  003A80  26E1               	addwf	fsr1l,f,c
  8977  003A82  0EFF               	movlw	255
  8978  003A84  22E2               	addwfc	fsr1h,f,c
  8979  003A86  0012               	return		;funcret
  8980  003A88                     __end_of_memset:
  8981                           	opt callstack 0
  8982                           
  8983 ;; *************** function _printf *****************
  8984 ;; Defined at:
  8985 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  8986 ;; Parameters:    Size  Location     Type
  8987 ;;  fmt             1  [STACK] PTR const unsigned char 
  8988 ;;		 -> STR_18(3), STR_17(3), STR_16(3), 
  8989 ;; Auto vars:     Size  Location     Type
  8990 ;;  ap              2  [STACK] PTR void [1]
  8991 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8992 ;;  ret             2    0        int 
  8993 ;; Return value:  Size  Location     Type
  8994 ;;                  2  [STACK] int 
  8995 ;; Registers used:
  8996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8997 ;; Tracked objects:
  8998 ;;		On entry : 3F/3B
  8999 ;;		On exit  : 3F/0
  9000 ;;		Unchanged: 0/0
  9001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9006 ;;Total ram usage:        0 bytes
  9007 ;; Hardware stack levels used:    1
  9008 ;; Hardware stack levels required when called:   11
  9009 ;; This function calls:
  9010 ;;		_vfprintf
  9011 ;; This function is called by:
  9012 ;;		_eaDogM_WriteString
  9013 ;;		_send_lcd_cmd_dma
  9014 ;; This function uses a reentrant model
  9015 ;;
  9016                           
  9017                           	psect	text38
  9018  00584E                     __ptext38:
  9019                           	opt callstack 0
  9020  00584E                     _printf:
  9021                           	opt callstack 0
  9022                           
  9023                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9024  00584E  52E6               	movf	postinc1,f,c
  9025  005850  52E6               	movf	postinc1,f,c
  9026                           
  9027                           ;stkvar	?_printf @ sp[(-2)+-3]
  9028                           
  9029                           ;incstack = 0
  9030  005852  0EFB               	movlw	251
  9031  005854  24E1               	addwf	fsr1l,w,c
  9032  005856  6E46               	movwf	btemp+10,c
  9033  005858  0EFF               	movlw	255
  9034  00585A  20E2               	addwfc	fsr1h,w,c
  9035  00585C  6E47               	movwf	btemp+11,c
  9036  00585E  0E01               	movlw	1
  9037  005860  2646               	addwf	btemp+10,f,c
  9038  005862  0E00               	movlw	0
  9039  005864  2247               	addwfc	btemp+11,f,c
  9040                           
  9041                           ;stkvar	_ap @ sp[(-2)+0]
  9042  005866  0EFF               	movlw	-1
  9043  005868  0060  F11F  FFE3   	movff	btemp+11,plusw1
  9044  00586E  0EFE               	movlw	-2
  9045  005870  0060  F11B  FFE3   	movff	btemp+10,plusw1
  9046                           
  9047                           ;stkvar	_ap @ sp[(-2)+0]
  9048  005876  0EFE               	movlw	254
  9049  005878  24E1               	addwf	fsr1l,w,c
  9050  00587A  6E3C               	movwf	btemp,c
  9051  00587C  0EFF               	movlw	255
  9052  00587E  20E2               	addwfc	fsr1h,w,c
  9053  005880  6E3D               	movwf	btemp+1,c
  9054  005882  0060  F0F3  FFE6   	movff	btemp,postinc1
  9055  005888  0060  F0F7  FFE6   	movff	btemp+1,postinc1
  9056                           
  9057                           ;stkvar	_fmt @ sp[(-4)+-2]
  9058  00588E  0EFA               	movlw	-6
  9059  005890  50E3               	movf	plusw1,w,c
  9060  005892  6EE6               	movwf	postinc1,c
  9061  005894  0E00               	movlw	0
  9062  005896  6EE6               	movwf	postinc1,c
  9063  005898  0E00               	movlw	0
  9064  00589A  6EE6               	movwf	postinc1,c
  9065  00589C  EC36  F02A         	call	_vfprintf	;wreg free
  9066                           
  9067                           ; BSR set to: 0
  9068                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  9069  0058A0  52E5               	movf	postdec1,f,c
  9070  0058A2  52E5               	movf	postdec1,f,c
  9071  0058A4  52E5               	movf	postdec1,f,c
  9072  0058A6  50E7               	movf	indf1,w,c
  9073  0058A8  5EE1               	subwf	fsr1l,f,c
  9074  0058AA  0E00               	movlw	0
  9075  0058AC  5AE2               	subwfb	fsr1h,f,c
  9076  0058AE  0012               	return		;funcret
  9077  0058B0                     __end_of_printf:
  9078                           	opt callstack 0
  9079                           
  9080 ;; *************** function _vfprintf *****************
  9081 ;; Defined at:
  9082 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9083 ;; Parameters:    Size  Location     Type
  9084 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9085 ;;		 -> f(5), NULL(0), 
  9086 ;;  fmt             1  [STACK] PTR const unsigned char 
  9087 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9088 ;;		 -> STR_14(21), STR_13(6), STR_12(17), STR_11(21), 
  9089 ;;		 -> STR_10(20), STR_9(23), STR_8(6), STR_7(6), 
  9090 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  9091 ;;		 -> STR_1(17), 
  9092 ;;  ap              2  [STACK] PTR PTR void 
  9093 ;;		 -> ap(2), ap(2), 
  9094 ;; Auto vars:     Size  Location     Type
  9095 ;;  cfmt            1  [STACK] PTR unsigned char 
  9096 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9097 ;;		 -> STR_14(21), STR_13(6), STR_12(17), STR_11(21), 
  9098 ;;		 -> STR_10(20), STR_9(23), STR_8(6), STR_7(6), 
  9099 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  9100 ;;		 -> STR_1(17), 
  9101 ;; Return value:  Size  Location     Type
  9102 ;;                  2  [STACK] int 
  9103 ;; Registers used:
  9104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/0
  9107 ;;		On exit  : 3F/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9114 ;;Total ram usage:        0 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; Hardware stack levels required when called:   10
  9117 ;; This function calls:
  9118 ;;		_vfpfcnvrt
  9119 ;; This function is called by:
  9120 ;;		_sprintf
  9121 ;;		_printf
  9122 ;; This function uses a reentrant model
  9123 ;;
  9124                           
  9125                           	psect	text39
  9126  00546C                     __ptext39:
  9127                           	opt callstack 0
  9128  00546C                     _vfprintf:
  9129                           	opt callstack 0
  9130                           
  9131                           ; BSR set to: 0
  9132                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9133  00546C  52E6               	movf	postinc1,f,c
  9134                           
  9135                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  9136                           ;stkvar	_fmt @ sp[(-1)+-3]
  9137                           
  9138                           ;incstack = 0
  9139  00546E  0EFC               	movlw	-4
  9140  005470  006F FF8C  F047    	movff	plusw1,btemp+11
  9141                           
  9142                           ;stkvar	_cfmt @ sp[(-1)+0]
  9143  005476  0EFF               	movlw	-1
  9144  005478  0060  F11F  FFE3   	movff	btemp+11,plusw1
  9145                           
  9146                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  9147  00547E  0100               	movlb	0	; () banked
  9148  005480  6BFA               	clrf	_nout& (0+255),b
  9149  005482  6BFB               	clrf	(_nout+1)& (0+255),b
  9150                           
  9151                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9152  005484  D021               	goto	l8353
  9153  005486                     l8351:
  9154                           
  9155                           ; BSR set to: 0
  9156                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  9157                           ;stkvar	_ap @ sp[(-1)+-5]
  9158  005486  0EFA               	movlw	-6
  9159  005488  006F FF8F FFE6     	movff	plusw1,postinc1
  9160  00548E  006F FF8F FFE6     	movff	plusw1,postinc1
  9161                           
  9162                           ;stkvar	_cfmt @ sp[(-3)+0]
  9163  005494  0EFD               	movlw	253
  9164  005496  24E1               	addwf	fsr1l,w,c
  9165  005498  6E3C               	movwf	btemp,c
  9166  00549A  0EFF               	movlw	255
  9167  00549C  20E2               	addwfc	fsr1h,w,c
  9168  00549E  6E3D               	movwf	btemp+1,c
  9169  0054A0  0060  F0F3  FFE6   	movff	btemp,postinc1
  9170  0054A6  0060  F0F7  FFE6   	movff	btemp+1,postinc1
  9171                           
  9172                           ;stkvar	_fp @ sp[(-5)+-2]
  9173  0054AC  0EF9               	movlw	-7
  9174  0054AE  006F FF8F FFE6     	movff	plusw1,postinc1
  9175  0054B4  006F FF8F FFE6     	movff	plusw1,postinc1
  9176  0054BA  EC93  F015         	call	_vfpfcnvrt	;wreg free
  9177  0054BE  503C               	movf	btemp,w,c
  9178  0054C0  0100               	movlb	0	; () banked
  9179  0054C2  27FA               	addwf	_nout& (0+255),f,b
  9180  0054C4  503D               	movf	btemp+1,w,c
  9181  0054C6  23FB               	addwfc	(_nout+1)& (0+255),f,b
  9182  0054C8                     l8353:
  9183                           
  9184                           ; BSR set to: 0
  9185                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9186                           ;stkvar	_cfmt @ sp[(-1)+0]
  9187  0054C8  50E1               	movf	fsr1l,w,c
  9188  0054CA  0FFF               	addlw	-1
  9189  0054CC  6ED9               	movwf	fsr2l,c
  9190  0054CE  50E2               	movf	fsr1h,w,c
  9191  0054D0  6EDA               	movwf	fsr2h,c
  9192  0054D2  0EFF               	movlw	255
  9193  0054D4  22DA               	addwfc	fsr2h,f,c
  9194  0054D6  006F FF7F FFF6     	movff	indf2,tblptrl
  9195  0054DC                     	if	1	;There is more than 1 active tblptr byte
  9196  0054DC  0E20               	movlw	high __smallconst
  9197  0054DE  6EF7               	movwf	tblptrh,c
  9198  0054E0                     	endif
  9199  0054E0                     	if	0	;tblptru may be non-zero
  9200  0054E0                     	endif
  9201  0054E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9202  0054E0  0E00               	movlw	low (__smallconst shr (0+16))
  9203  0054E2  6EF8               	movwf	tblptru,c
  9204  0054E4                     	endif
  9205  0054E4  0008               	tblrd		*
  9206  0054E6  50F5               	movf	tablat,w,c
  9207  0054E8  0900               	iorlw	0
  9208  0054EA  A4D8               	btfss	status,2,c
  9209  0054EC  D7CC               	goto	l8351
  9210                           
  9211                           ; BSR set to: 0
  9212                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  9213  0054EE  0060  F3E8  F03C   	movff	_nout,btemp
  9214  0054F4  0060  F3EC  F03D   	movff	_nout+1,btemp+1
  9215                           
  9216                           ; BSR set to: 0
  9217                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  9218  0054FA  0EFA               	movlw	250
  9219  0054FC  26E1               	addwf	fsr1l,f,c
  9220  0054FE  0EFF               	movlw	255
  9221  005500  22E2               	addwfc	fsr1h,f,c
  9222  005502  0012               	return		;funcret
  9223  005504                     __end_of_vfprintf:
  9224                           	opt callstack 0
  9225                           
  9226 ;; *************** function _vfpfcnvrt *****************
  9227 ;; Defined at:
  9228 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9231 ;;		 -> f(5), NULL(0), 
  9232 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  9233 ;;		 -> cfmt(1), 
  9234 ;;  ap              2  [STACK] PTR PTR void 
  9235 ;;		 -> ap(2), ap(2), 
  9236 ;; Auto vars:     Size  Location     Type
  9237 ;;  ll              8  [STACK] long long 
  9238 ;;  llu             8    0        unsigned long long 
  9239 ;;  f               4    0        unsigned long long 
  9240 ;;  vp              3    0        PTR void 
  9241 ;;  ct              3    0        unsigned char [3]
  9242 ;;  cp              2  [STACK] PTR unsigned char 
  9243 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(93), 
  9244 ;;  i               2    0        int 
  9245 ;;  done            2    0        int 
  9246 ;;  c               1  [STACK] unsigned char 
  9247 ;; Return value:  Size  Location     Type
  9248 ;;                  2  [STACK] int 
  9249 ;; Registers used:
  9250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9251 ;; Tracked objects:
  9252 ;;		On entry : 0/0
  9253 ;;		On exit  : 0/0
  9254 ;;		Unchanged: 0/0
  9255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9260 ;;Total ram usage:        0 bytes
  9261 ;; Hardware stack levels used:    1
  9262 ;; Hardware stack levels required when called:    9
  9263 ;; This function calls:
  9264 ;;		_ctoa
  9265 ;;		_dtoa
  9266 ;;		_fputc
  9267 ;;		_stoa
  9268 ;;		_strncmp
  9269 ;; This function is called by:
  9270 ;;		_vfprintf
  9271 ;; This function uses a reentrant model
  9272 ;;
  9273                           
  9274                           	psect	text40
  9275  002B26                     __ptext40:
  9276                           	opt callstack 0
  9277  002B26                     _vfpfcnvrt:
  9278                           	opt callstack 0
  9279                           
  9280                           ; BSR set to: 0
  9281                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9282  002B26  0E0B               	movlw	11
  9283  002B28  26E1               	addwf	fsr1l,f,c
  9284  002B2A  0E00               	movlw	0
  9285  002B2C  22E2               	addwfc	fsr1h,f,c
  9286                           
  9287                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  9288                           ;stkvar	_fmt @ sp[(-11)+-4]
  9289                           
  9290                           ;incstack = 0
  9291  002B2E  0EF1               	movlw	-15
  9292  002B30  006F FF8F FFD9     	movff	plusw1,fsr2l
  9293  002B36  0EF2               	movlw	-14
  9294  002B38  006F FF8F FFDA     	movff	plusw1,fsr2h
  9295  002B3E  006F FF7F FFF6     	movff	indf2,tblptrl
  9296  002B44                     	if	1	;There is more than 1 active tblptr byte
  9297  002B44  0E20               	movlw	high __smallconst
  9298  002B46  6EF7               	movwf	tblptrh,c
  9299  002B48                     	endif
  9300  002B48                     	if	0	;tblptru may be non-zero
  9301  002B48                     	endif
  9302  002B48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9303  002B48  0E00               	movlw	low (__smallconst shr (0+16))
  9304  002B4A  6EF8               	movwf	tblptru,c
  9305  002B4C                     	endif
  9306  002B4C  0008               	tblrd		*
  9307  002B4E  50F5               	movf	tablat,w,c
  9308  002B50  0A25               	xorlw	37
  9309  002B52  A4D8               	btfss	status,2,c
  9310  002B54  D213               	goto	l8297
  9311                           
  9312                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  9313                           ;stkvar	_fmt @ sp[(-11)+-4]
  9314  002B56  0EF1               	movlw	-15
  9315  002B58  006F FF8F FFD9     	movff	plusw1,fsr2l
  9316  002B5E  0EF2               	movlw	-14
  9317  002B60  006F FF8F FFDA     	movff	plusw1,fsr2h
  9318  002B66  2ADF               	incf	indf2,f,c
  9319                           
  9320                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  9321  002B68  6A20               	clrf	_width,c
  9322  002B6A  6A21               	clrf	_width+1,c
  9323  002B6C  6A24               	clrf	_flags,c
  9324  002B6E  6A25               	clrf	_flags+1,c
  9325                           
  9326                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  9327  002B70  6822               	setf	_prec,c
  9328  002B72  6823               	setf	_prec+1,c
  9329                           
  9330                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  9331                           ;stkvar	_fmt @ sp[(-11)+-4]
  9332  002B74  0EF1               	movlw	-15
  9333  002B76  006F FF8F FFD9     	movff	plusw1,fsr2l
  9334  002B7C  0EF2               	movlw	-14
  9335  002B7E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9336  002B84  006F FF7F FFF6     	movff	indf2,tblptrl
  9337  002B8A                     	if	1	;There is more than 1 active tblptr byte
  9338  002B8A  0E20               	movlw	high __smallconst
  9339  002B8C  6EF7               	movwf	tblptrh,c
  9340  002B8E                     	endif
  9341  002B8E                     	if	0	;tblptru may be non-zero
  9342  002B8E                     	endif
  9343  002B8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9344  002B8E  0E00               	movlw	low (__smallconst shr (0+16))
  9345  002B90  6EF8               	movwf	tblptru,c
  9346  002B92                     	endif
  9347  002B92  0008               	tblrd		*
  9348  002B94  50F5               	movf	tablat,w,c
  9349  002B96  0A63               	xorlw	99
  9350  002B98  A4D8               	btfss	status,2,c
  9351  002B9A  D034               	goto	l8247
  9352                           
  9353                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  9354                           ;stkvar	_fmt @ sp[(-11)+-4]
  9355  002B9C  0EF1               	movlw	-15
  9356  002B9E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9357  002BA4  0EF2               	movlw	-14
  9358  002BA6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9359  002BAC  2ADF               	incf	indf2,f,c
  9360                           
  9361                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9362                           ;stkvar	_ap @ sp[(-11)+-6]
  9363  002BAE  0EEF               	movlw	-17
  9364  002BB0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9365  002BB6  0EF0               	movlw	-16
  9366  002BB8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9367  002BBE  0E02               	movlw	2
  9368  002BC0  5EDE               	subwf	postinc2,f,c
  9369  002BC2  0E00               	movlw	0
  9370  002BC4  5ADD               	subwfb	postdec2,f,c
  9371  002BC6  006F FF78  F046    	movff	postinc2,btemp+10
  9372  002BCC  006F FF74  F047    	movff	postdec2,btemp+11
  9373  002BD2  0060  F11B  FFD9   	movff	btemp+10,fsr2l
  9374  002BD8  0060  F11F  FFDA   	movff	btemp+11,fsr2h
  9375  002BDE  50DF               	movf	indf2,w,c
  9376  002BE0  6E47               	movwf	btemp+11,c
  9377                           
  9378                           ;stkvar	_c @ sp[(-11)+10]
  9379  002BE2  0EFF               	movlw	-1
  9380  002BE4  0060  F11F  FFE3   	movff	btemp+11,plusw1
  9381                           
  9382                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  9383                           ;stkvar	_c @ sp[(-11)+10]
  9384  002BEA  0EFF               	movlw	-1
  9385  002BEC  50E3               	movf	plusw1,w,c
  9386  002BEE  6EE6               	movwf	postinc1,c
  9387                           
  9388                           ;stkvar	_fp @ sp[(-12)+-2]
  9389  002BF0  0EF2               	movlw	-14
  9390  002BF2  006F FF8F FFE6     	movff	plusw1,postinc1
  9391  002BF8  006F FF8F FFE6     	movff	plusw1,postinc1
  9392  002BFE  EC17  F02B         	call	_ctoa	;wreg free
  9393  002C02  D1E3               	goto	l1907
  9394  002C04                     l8247:
  9395                           
  9396                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  9397                           ;stkvar	_fmt @ sp[(-11)+-4]
  9398  002C04  0EF1               	movlw	-15
  9399  002C06  006F FF8F FFD9     	movff	plusw1,fsr2l
  9400  002C0C  0EF2               	movlw	-14
  9401  002C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9402  002C14  006F FF7F FFF6     	movff	indf2,tblptrl
  9403  002C1A                     	if	1	;There is more than 1 active tblptr byte
  9404  002C1A  0E20               	movlw	high __smallconst
  9405  002C1C  6EF7               	movwf	tblptrh,c
  9406  002C1E                     	endif
  9407  002C1E                     	if	0	;tblptru may be non-zero
  9408  002C1E                     	endif
  9409  002C1E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9410  002C1E  0E00               	movlw	low (__smallconst shr (0+16))
  9411  002C20  6EF8               	movwf	tblptru,c
  9412  002C22                     	endif
  9413  002C22  0008               	tblrd		*
  9414  002C24  50F5               	movf	tablat,w,c
  9415  002C26  0A64               	xorlw	100
  9416  002C28  B4D8               	btfsc	status,2,c
  9417  002C2A  D014               	goto	u4970
  9418                           
  9419                           ;stkvar	_fmt @ sp[(-11)+-4]
  9420  002C2C  0EF1               	movlw	-15
  9421  002C2E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9422  002C34  0EF2               	movlw	-14
  9423  002C36  006F FF8F FFDA     	movff	plusw1,fsr2h
  9424  002C3C  006F FF7F FFF6     	movff	indf2,tblptrl
  9425  002C42                     	if	1	;There is more than 1 active tblptr byte
  9426  002C42  0E20               	movlw	high __smallconst
  9427  002C44  6EF7               	movwf	tblptrh,c
  9428  002C46                     	endif
  9429  002C46                     	if	0	;tblptru may be non-zero
  9430  002C46                     	endif
  9431  002C46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9432  002C46  0E00               	movlw	low (__smallconst shr (0+16))
  9433  002C48  6EF8               	movwf	tblptru,c
  9434  002C4A                     	endif
  9435  002C4A  0008               	tblrd		*
  9436  002C4C  50F5               	movf	tablat,w,c
  9437  002C4E  0A69               	xorlw	105
  9438  002C50  A4D8               	btfss	status,2,c
  9439  002C52  D073               	goto	l8259
  9440  002C54                     u4970:
  9441                           
  9442                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9443                           ;stkvar	_fmt @ sp[(-11)+-4]
  9444  002C54  0EF1               	movlw	-15
  9445  002C56  006F FF8F FFD9     	movff	plusw1,fsr2l
  9446  002C5C  0EF2               	movlw	-14
  9447  002C5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9448  002C64  2ADF               	incf	indf2,f,c
  9449                           
  9450                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9451                           ;stkvar	_ap @ sp[(-11)+-6]
  9452  002C66  0EEF               	movlw	-17
  9453  002C68  006F FF8F FFD9     	movff	plusw1,fsr2l
  9454  002C6E  0EF0               	movlw	-16
  9455  002C70  006F FF8F FFDA     	movff	plusw1,fsr2h
  9456  002C76  0E02               	movlw	2
  9457  002C78  5EDE               	subwf	postinc2,f,c
  9458  002C7A  0E00               	movlw	0
  9459  002C7C  5ADD               	subwfb	postdec2,f,c
  9460  002C7E  006F FF78  F046    	movff	postinc2,btemp+10
  9461  002C84  006F FF74  F047    	movff	postdec2,btemp+11
  9462  002C8A  0060  F11B  FFD9   	movff	btemp+10,fsr2l
  9463  002C90  0060  F11F  FFDA   	movff	btemp+11,fsr2h
  9464  002C96  006F FF78  F046    	movff	postinc2,btemp+10
  9465  002C9C  006F FF74  F047    	movff	postdec2,btemp+11
  9466                           
  9467                           ;stkvar	_ll @ sp[(-11)+0]
  9468  002CA2  0EF5               	movlw	-11
  9469  002CA4  0060  F11B  FFE3   	movff	btemp+10,plusw1
  9470  002CAA  0EF6               	movlw	-10
  9471  002CAC  0060  F11F  FFE3   	movff	btemp+11,plusw1
  9472  002CB2  6A3C               	clrf	btemp,c
  9473  002CB4  BEE3               	btfsc	plusw1,7,c
  9474  002CB6  683C               	setf	btemp,c
  9475  002CB8  0EF7               	movlw	-9
  9476  002CBA  0060  F0F3  FFE3   	movff	btemp,plusw1
  9477  002CC0  0EF8               	movlw	-8
  9478  002CC2  0060  F0F3  FFE3   	movff	btemp,plusw1
  9479  002CC8  0EF9               	movlw	-7
  9480  002CCA  0060  F0F3  FFE3   	movff	btemp,plusw1
  9481  002CD0  0EFA               	movlw	-6
  9482  002CD2  0060  F0F3  FFE3   	movff	btemp,plusw1
  9483  002CD8  0EFB               	movlw	-5
  9484  002CDA  0060  F0F3  FFE3   	movff	btemp,plusw1
  9485  002CE0  0EFC               	movlw	-4
  9486  002CE2  0060  F0F3  FFE3   	movff	btemp,plusw1
  9487  002CE8                     l8255:
  9488                           
  9489                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9490                           ;stkvar	_ll @ sp[(-11)+0]
  9491  002CE8  50E1               	movf	fsr1l,w,c
  9492  002CEA  0FF5               	addlw	-11
  9493  002CEC  6ED9               	movwf	fsr2l,c
  9494  002CEE  50E2               	movf	fsr1h,w,c
  9495  002CF0  6EDA               	movwf	fsr2h,c
  9496  002CF2  0EFF               	movlw	255
  9497  002CF4  22DA               	addwfc	fsr2h,f,c
  9498  002CF6  006F FF7B FFE6     	movff	postinc2,postinc1
  9499  002CFC  006F FF7B FFE6     	movff	postinc2,postinc1
  9500  002D02  006F FF7B FFE6     	movff	postinc2,postinc1
  9501  002D08  006F FF7B FFE6     	movff	postinc2,postinc1
  9502  002D0E  006F FF7B FFE6     	movff	postinc2,postinc1
  9503  002D14  006F FF7B FFE6     	movff	postinc2,postinc1
  9504  002D1A  006F FF7B FFE6     	movff	postinc2,postinc1
  9505  002D20  006F FF7B FFE6     	movff	postinc2,postinc1
  9506                           
  9507                           ;stkvar	_fp @ sp[(-19)+-2]
  9508  002D26  0EEB               	movlw	-21
  9509  002D28  006F FF8F FFE6     	movff	plusw1,postinc1
  9510  002D2E  006F FF8F FFE6     	movff	plusw1,postinc1
  9511  002D34  ECEA  F017         	call	_dtoa	;wreg free
  9512  002D38  D148               	goto	l1907
  9513  002D3A                     l8259:
  9514                           
  9515                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  9516  002D3A  0E02               	movlw	2
  9517  002D3C  6EE6               	movwf	postinc1,c
  9518  002D3E  0E00               	movlw	0
  9519  002D40  6EE6               	movwf	postinc1,c
  9520  002D42  0EC6               	movlw	STR_19& (0+255)
  9521  002D44  6EE6               	movwf	postinc1,c
  9522                           
  9523                           ;stkvar	_fmt @ sp[(-14)+-4]
  9524  002D46  0EEE               	movlw	-18
  9525  002D48  006F FF8F FFD9     	movff	plusw1,fsr2l
  9526  002D4E  0EEF               	movlw	-17
  9527  002D50  006F FF8F FFDA     	movff	plusw1,fsr2h
  9528  002D56  50DF               	movf	indf2,w,c
  9529  002D58  6EE6               	movwf	postinc1,c
  9530  002D5A  ECA8  F024         	call	_strncmp	;wreg free
  9531  002D5E  503C               	movf	btemp,w,c
  9532  002D60  103D               	iorwf	btemp+1,w,c
  9533  002D62  B4D8               	btfsc	status,2,c
  9534  002D64  D016               	goto	u4990
  9535  002D66  0E02               	movlw	2
  9536  002D68  6EE6               	movwf	postinc1,c
  9537  002D6A  0E00               	movlw	0
  9538  002D6C  6EE6               	movwf	postinc1,c
  9539  002D6E  0EC9               	movlw	STR_23& (0+255)
  9540  002D70  6EE6               	movwf	postinc1,c
  9541                           
  9542                           ;stkvar	_fmt @ sp[(-14)+-4]
  9543  002D72  0EEE               	movlw	-18
  9544  002D74  006F FF8F FFD9     	movff	plusw1,fsr2l
  9545  002D7A  0EEF               	movlw	-17
  9546  002D7C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9547  002D82  50DF               	movf	indf2,w,c
  9548  002D84  6EE6               	movwf	postinc1,c
  9549  002D86  ECA8  F024         	call	_strncmp	;wreg free
  9550  002D8A  503C               	movf	btemp,w,c
  9551  002D8C  103D               	iorwf	btemp+1,w,c
  9552  002D8E  A4D8               	btfss	status,2,c
  9553  002D90  D067               	goto	l8271
  9554  002D92                     u4990:
  9555                           
  9556                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  9557                           ;stkvar	_fmt @ sp[(-11)+-4]
  9558  002D92  0EF1               	movlw	-15
  9559  002D94  006F FF8F FFD9     	movff	plusw1,fsr2l
  9560  002D9A  0EF2               	movlw	-14
  9561  002D9C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9562  002DA2  0E02               	movlw	2
  9563  002DA4  26DF               	addwf	indf2,f,c
  9564                           
  9565                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  9566                           ;stkvar	_ap @ sp[(-11)+-6]
  9567  002DA6  0EEF               	movlw	-17
  9568  002DA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9569  002DAE  0EF0               	movlw	-16
  9570  002DB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9571  002DB6  0E04               	movlw	4
  9572  002DB8  5EDE               	subwf	postinc2,f,c
  9573  002DBA  0E00               	movlw	0
  9574  002DBC  5ADD               	subwfb	postdec2,f,c
  9575  002DBE  006F FF78  F046    	movff	postinc2,btemp+10
  9576  002DC4  006F FF74  F047    	movff	postdec2,btemp+11
  9577  002DCA  0060  F11B  FFD9   	movff	btemp+10,fsr2l
  9578  002DD0  0060  F11F  FFDA   	movff	btemp+11,fsr2h
  9579  002DD6  006F FF78  F044    	movff	postinc2,btemp+8
  9580  002DDC  006F FF78  F045    	movff	postinc2,btemp+9
  9581  002DE2  006F FF78  F046    	movff	postinc2,btemp+10
  9582  002DE8  006F FF78  F047    	movff	postinc2,btemp+11
  9583  002DEE  0060  F110  F04C   	movff	btemp+8,btemp+16
  9584  002DF4  0060  F114  F04D   	movff	btemp+9,btemp+17
  9585  002DFA  0060  F118  F04E   	movff	btemp+10,btemp+18
  9586  002E00  0060  F11C  F04F   	movff	btemp+11,btemp+19
  9587  002E06  6A50               	clrf	btemp+20,c
  9588  002E08  BE4F               	btfsc	btemp+19,7,c
  9589  002E0A  6850               	setf	btemp+20,c
  9590  002E0C  0060  F140  F051   	movff	btemp+20,btemp+21
  9591  002E12  0060  F140  F052   	movff	btemp+20,btemp+22
  9592  002E18  0060  F140  F053   	movff	btemp+20,btemp+23
  9593                           
  9594                           ;stkvar	_ll @ sp[(-11)+0]
  9595  002E1E  0EF5               	movlw	-11
  9596  002E20  0060  F133  FFE3   	movff	btemp+16,plusw1
  9597  002E26  0EF6               	movlw	-10
  9598  002E28  0060  F137  FFE3   	movff	btemp+17,plusw1
  9599  002E2E  0EF7               	movlw	-9
  9600  002E30  0060  F13B  FFE3   	movff	btemp+18,plusw1
  9601  002E36  0EF8               	movlw	-8
  9602  002E38  0060  F13F  FFE3   	movff	btemp+19,plusw1
  9603  002E3E  0EF9               	movlw	-7
  9604  002E40  0060  F143  FFE3   	movff	btemp+20,plusw1
  9605  002E46  0EFA               	movlw	-6
  9606  002E48  0060  F147  FFE3   	movff	btemp+21,plusw1
  9607  002E4E  0EFB               	movlw	-5
  9608  002E50  0060  F14B  FFE3   	movff	btemp+22,plusw1
  9609  002E56  0EFC               	movlw	-4
  9610  002E58  0060  F14F  FFE3   	movff	btemp+23,plusw1
  9611  002E5E  D744               	goto	l8255
  9612  002E60                     l8271:
  9613                           
  9614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9615                           ;stkvar	_fmt @ sp[(-11)+-4]
  9616  002E60  0EF1               	movlw	-15
  9617  002E62  006F FF8F FFD9     	movff	plusw1,fsr2l
  9618  002E68  0EF2               	movlw	-14
  9619  002E6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9620  002E70  006F FF7F FFF6     	movff	indf2,tblptrl
  9621  002E76                     	if	1	;There is more than 1 active tblptr byte
  9622  002E76  0E20               	movlw	high __smallconst
  9623  002E78  6EF7               	movwf	tblptrh,c
  9624  002E7A                     	endif
  9625  002E7A                     	if	0	;tblptru may be non-zero
  9626  002E7A                     	endif
  9627  002E7A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9628  002E7A  0E00               	movlw	low (__smallconst shr (0+16))
  9629  002E7C  6EF8               	movwf	tblptru,c
  9630  002E7E                     	endif
  9631  002E7E  0008               	tblrd		*
  9632  002E80  50F5               	movf	tablat,w,c
  9633  002E82  0A73               	xorlw	115
  9634  002E84  A4D8               	btfss	status,2,c
  9635  002E86  D040               	goto	l8281
  9636                           
  9637                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9638                           ;stkvar	_fmt @ sp[(-11)+-4]
  9639  002E88  0EF1               	movlw	-15
  9640  002E8A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9641  002E90  0EF2               	movlw	-14
  9642  002E92  006F FF8F FFDA     	movff	plusw1,fsr2h
  9643  002E98  2ADF               	incf	indf2,f,c
  9644                           
  9645                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9646                           ;stkvar	_ap @ sp[(-11)+-6]
  9647  002E9A  0EEF               	movlw	-17
  9648  002E9C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9649  002EA2  0EF0               	movlw	-16
  9650  002EA4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9651  002EAA  0E02               	movlw	2
  9652  002EAC  5EDE               	subwf	postinc2,f,c
  9653  002EAE  0E00               	movlw	0
  9654  002EB0  5ADD               	subwfb	postdec2,f,c
  9655  002EB2  006F FF78  F046    	movff	postinc2,btemp+10
  9656  002EB8  006F FF74  F047    	movff	postdec2,btemp+11
  9657  002EBE  0060  F11B  FFD9   	movff	btemp+10,fsr2l
  9658  002EC4  0060  F11F  FFDA   	movff	btemp+11,fsr2h
  9659  002ECA  006F FF78  F046    	movff	postinc2,btemp+10
  9660  002ED0  006F FF74  F047    	movff	postdec2,btemp+11
  9661                           
  9662                           ;stkvar	_cp @ sp[(-11)+8]
  9663  002ED6  0EFE               	movlw	-2
  9664  002ED8  0060  F11F  FFE3   	movff	btemp+11,plusw1
  9665  002EDE  0EFD               	movlw	-3
  9666  002EE0  0060  F11B  FFE3   	movff	btemp+10,plusw1
  9667                           
  9668                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9669                           ;stkvar	_cp @ sp[(-11)+8]
  9670  002EE6  0EFD               	movlw	-3
  9671  002EE8  006F FF8F FFE6     	movff	plusw1,postinc1
  9672  002EEE  006F FF8F FFE6     	movff	plusw1,postinc1
  9673                           
  9674                           ;stkvar	_fp @ sp[(-13)+-2]
  9675  002EF4  0EF1               	movlw	-15
  9676  002EF6  006F FF8F FFE6     	movff	plusw1,postinc1
  9677  002EFC  006F FF8F FFE6     	movff	plusw1,postinc1
  9678  002F02  EC44  F01D         	call	_stoa	;wreg free
  9679  002F06  D061               	goto	l1907
  9680  002F08                     l8281:
  9681                           
  9682                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9683                           ;stkvar	_fmt @ sp[(-11)+-4]
  9684  002F08  0EF1               	movlw	-15
  9685  002F0A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9686  002F10  0EF2               	movlw	-14
  9687  002F12  006F FF8F FFDA     	movff	plusw1,fsr2h
  9688  002F18  006F FF7F FFF6     	movff	indf2,tblptrl
  9689  002F1E                     	if	1	;There is more than 1 active tblptr byte
  9690  002F1E  0E20               	movlw	high __smallconst
  9691  002F20  6EF7               	movwf	tblptrh,c
  9692  002F22                     	endif
  9693  002F22                     	if	0	;tblptru may be non-zero
  9694  002F22                     	endif
  9695  002F22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9696  002F22  0E00               	movlw	low (__smallconst shr (0+16))
  9697  002F24  6EF8               	movwf	tblptru,c
  9698  002F26                     	endif
  9699  002F26  0008               	tblrd		*
  9700  002F28  50F5               	movf	tablat,w,c
  9701  002F2A  0A25               	xorlw	37
  9702  002F2C  A4D8               	btfss	status,2,c
  9703  002F2E  D018               	goto	l8291
  9704                           
  9705                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9706                           ;stkvar	_fmt @ sp[(-11)+-4]
  9707  002F30  0EF1               	movlw	-15
  9708  002F32  006F FF8F FFD9     	movff	plusw1,fsr2l
  9709  002F38  0EF2               	movlw	-14
  9710  002F3A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9711  002F40  2ADF               	incf	indf2,f,c
  9712                           
  9713                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9714                           ;stkvar	_fp @ sp[(-11)+-2]
  9715  002F42  0EF3               	movlw	-13
  9716  002F44  006F FF8F FFE6     	movff	plusw1,postinc1
  9717  002F4A  006F FF8F FFE6     	movff	plusw1,postinc1
  9718  002F50  0E25               	movlw	37
  9719  002F52  6EE6               	movwf	postinc1,c
  9720  002F54  0E00               	movlw	0
  9721  002F56  6EE6               	movwf	postinc1,c
  9722  002F58  ECFA  F025         	call	_fputc	;wreg free
  9723  002F5C                     l8287:
  9724                           
  9725                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9726  002F5C  0E01               	movlw	1
  9727  002F5E  D00A               	goto	L25
  9728  002F60                     l8291:
  9729                           
  9730                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9731                           ;stkvar	_fmt @ sp[(-11)+-4]
  9732  002F60  0EF1               	movlw	-15
  9733  002F62  006F FF8F FFD9     	movff	plusw1,fsr2l
  9734  002F68  0EF2               	movlw	-14
  9735  002F6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9736  002F70  2ADF               	incf	indf2,f,c
  9737                           
  9738                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9739  002F72  0E00               	movlw	0
  9740  002F74                     L25:
  9741  002F74  6E3C               	movwf	btemp,c
  9742  002F76  0E00               	movlw	0
  9743  002F78  6E3D               	movwf	btemp+1,c
  9744  002F7A  D027               	goto	l1907
  9745  002F7C                     l8297:
  9746                           
  9747                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9748                           ;stkvar	_fp @ sp[(-11)+-2]
  9749  002F7C  0EF3               	movlw	-13
  9750  002F7E  006F FF8F FFE6     	movff	plusw1,postinc1
  9751  002F84  006F FF8F FFE6     	movff	plusw1,postinc1
  9752                           
  9753                           ;stkvar	_fmt @ sp[(-13)+-4]
  9754  002F8A  0EEF               	movlw	-17
  9755  002F8C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9756  002F92  0EF0               	movlw	-16
  9757  002F94  006F FF8F FFDA     	movff	plusw1,fsr2h
  9758  002F9A  006F FF7F FFF6     	movff	indf2,tblptrl
  9759  002FA0                     	if	1	;There is more than 1 active tblptr byte
  9760  002FA0  0E20               	movlw	high __smallconst
  9761  002FA2  6EF7               	movwf	tblptrh,c
  9762  002FA4                     	endif
  9763  002FA4                     	if	0	;tblptru may be non-zero
  9764  002FA4                     	endif
  9765  002FA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9766  002FA4  0E00               	movlw	low (__smallconst shr (0+16))
  9767  002FA6  6EF8               	movwf	tblptru,c
  9768  002FA8                     	endif
  9769  002FA8  0008               	tblrd		*
  9770  002FAA  50F5               	movf	tablat,w,c
  9771  002FAC  6EE6               	movwf	postinc1,c
  9772  002FAE  0E00               	movlw	0
  9773  002FB0  6EE6               	movwf	postinc1,c
  9774  002FB2  ECFA  F025         	call	_fputc	;wreg free
  9775                           
  9776                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9777                           ;stkvar	_fmt @ sp[(-11)+-4]
  9778  002FB6  0EF1               	movlw	-15
  9779  002FB8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9780  002FBE  0EF2               	movlw	-14
  9781  002FC0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9782  002FC6  2ADF               	incf	indf2,f,c
  9783  002FC8  D7C9               	goto	l8287
  9784  002FCA                     l1907:
  9785                           
  9786                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9787  002FCA  0EEF               	movlw	239
  9788  002FCC  26E1               	addwf	fsr1l,f,c
  9789  002FCE  0EFF               	movlw	255
  9790  002FD0  22E2               	addwfc	fsr1h,f,c
  9791  002FD2  0012               	return		;funcret
  9792  002FD4                     __end_of_vfpfcnvrt:
  9793                           	opt callstack 0
  9794                           
  9795 ;; *************** function _strncmp *****************
  9796 ;; Defined at:
  9797 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  9798 ;; Parameters:    Size  Location     Type
  9799 ;;  _l              1  [STACK] PTR const unsigned char 
  9800 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9801 ;;		 -> STR_14(21), STR_13(6), STR_12(17), STR_11(21), 
  9802 ;;		 -> STR_10(20), STR_9(23), STR_8(6), STR_7(6), 
  9803 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  9804 ;;		 -> STR_1(17), 
  9805 ;;  _r              1  [STACK] PTR const unsigned char 
  9806 ;;		 -> STR_25(3), STR_21(3), 
  9807 ;;  n               2  [STACK] unsigned int 
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;  r               1  [STACK] PTR const unsigned char 
  9810 ;;		 -> STR_25(3), STR_21(3), 
  9811 ;;  l               1  [STACK] PTR const unsigned char 
  9812 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9813 ;;		 -> STR_14(21), STR_13(6), STR_12(17), STR_11(21), 
  9814 ;;		 -> STR_10(20), STR_9(23), STR_8(6), STR_7(6), 
  9815 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  9816 ;;		 -> STR_1(17), 
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  2  [STACK] int 
  9819 ;; Registers used:
  9820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/0
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9830 ;;Total ram usage:        0 bytes
  9831 ;; Hardware stack levels used:    1
  9832 ;; Hardware stack levels required when called:    3
  9833 ;; This function calls:
  9834 ;;		Nothing
  9835 ;; This function is called by:
  9836 ;;		_vfpfcnvrt
  9837 ;; This function uses a reentrant model
  9838 ;;
  9839                           
  9840                           	psect	text41
  9841  004950                     __ptext41:
  9842                           	opt callstack 0
  9843  004950                     _strncmp:
  9844                           	opt callstack 0
  9845                           
  9846                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9847  004950  52E6               	movf	postinc1,f,c
  9848  004952  52E6               	movf	postinc1,f,c
  9849                           
  9850                           ;stkvar	__l @ sp[(-2)+-1]
  9851                           
  9852                           ;incstack = 0
  9853  004954  0EFD               	movlw	-3
  9854  004956  006F FF8C  F047    	movff	plusw1,btemp+11
  9855                           
  9856                           ;stkvar	_l @ sp[(-2)+1]
  9857  00495C  0EFF               	movlw	-1
  9858  00495E  0060  F11F  FFE3   	movff	btemp+11,plusw1
  9859                           
  9860                           ;stkvar	__r @ sp[(-2)+-2]
  9861  004964  0EFC               	movlw	-4
  9862  004966  006F FF8C  F047    	movff	plusw1,btemp+11
  9863                           
  9864                           ;stkvar	_r @ sp[(-2)+0]
  9865  00496C  0EFE               	movlw	-2
  9866  00496E  0060  F11F  FFE3   	movff	btemp+11,plusw1
  9867                           
  9868                           ;stkvar	_n @ sp[(-2)+-4]
  9869  004974  0EFA               	movlw	-6
  9870  004976  006F FF8C  F03C    	movff	plusw1,btemp
  9871  00497C  0E01               	movlw	1
  9872  00497E  5E3C               	subwf	btemp,f,c
  9873  004980  0EFA               	movlw	-6
  9874  004982  0060  F0F3  FFE3   	movff	btemp,plusw1
  9875  004988  0EFB               	movlw	-5
  9876  00498A  006F FF8C  F03C    	movff	plusw1,btemp
  9877  004990  0E00               	movlw	0
  9878  004992  5A3C               	subwfb	btemp,f,c
  9879  004994  0EFB               	movlw	-5
  9880  004996  0060  F0F3  FFE3   	movff	btemp,plusw1
  9881  00499C  0EFA               	movlw	-6
  9882  00499E  28E3               	incf	plusw1,w,c
  9883  0049A0  E121               	bnz	l5817
  9884  0049A2  0EFB               	movlw	-5
  9885  0049A4  28E3               	incf	plusw1,w,c
  9886  0049A6  A4D8               	btfss	status,2,c
  9887  0049A8  D01D               	goto	l5817
  9888  0049AA  0E00               	movlw	0
  9889  0049AC  6E3C               	movwf	btemp,c
  9890  0049AE  0E00               	movlw	0
  9891  0049B0  6E3D               	movwf	btemp+1,c
  9892  0049B2  D091               	goto	l2656
  9893  0049B4                     l5813:
  9894                           
  9895                           ;stkvar	_l @ sp[(-2)+1]
  9896  0049B4  0EFF               	movlw	-1
  9897  0049B6  2AE3               	incf	plusw1,f,c
  9898                           
  9899                           ;stkvar	_r @ sp[(-2)+0]
  9900  0049B8  0EFE               	movlw	-2
  9901  0049BA  2AE3               	incf	plusw1,f,c
  9902                           
  9903                           ;stkvar	_n @ sp[(-2)+-4]
  9904  0049BC  0EFA               	movlw	-6
  9905  0049BE  006F FF8C  F03C    	movff	plusw1,btemp
  9906  0049C4  0E01               	movlw	1
  9907  0049C6  5E3C               	subwf	btemp,f,c
  9908  0049C8  0EFA               	movlw	-6
  9909  0049CA  0060  F0F3  FFE3   	movff	btemp,plusw1
  9910  0049D0  0EFB               	movlw	-5
  9911  0049D2  006F FF8C  F03C    	movff	plusw1,btemp
  9912  0049D8  0E00               	movlw	0
  9913  0049DA  5A3C               	subwfb	btemp,f,c
  9914  0049DC  0EFB               	movlw	-5
  9915  0049DE  0060  F0F3  FFE3   	movff	btemp,plusw1
  9916  0049E4                     l5817:
  9917                           
  9918                           ;stkvar	_l @ sp[(-2)+1]
  9919  0049E4  50E1               	movf	fsr1l,w,c
  9920  0049E6  0FFF               	addlw	-1
  9921  0049E8  6ED9               	movwf	fsr2l,c
  9922  0049EA  50E2               	movf	fsr1h,w,c
  9923  0049EC  6EDA               	movwf	fsr2h,c
  9924  0049EE  0EFF               	movlw	255
  9925  0049F0  22DA               	addwfc	fsr2h,f,c
  9926  0049F2  006F FF7F FFF6     	movff	indf2,tblptrl
  9927  0049F8                     	if	1	;There is more than 1 active tblptr byte
  9928  0049F8  0E20               	movlw	high __smallconst
  9929  0049FA  6EF7               	movwf	tblptrh,c
  9930  0049FC                     	endif
  9931  0049FC                     	if	0	;tblptru may be non-zero
  9932  0049FC                     	endif
  9933  0049FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9934  0049FC  0E00               	movlw	low (__smallconst shr (0+16))
  9935  0049FE  6EF8               	movwf	tblptru,c
  9936  004A00                     	endif
  9937  004A00  0008               	tblrd		*
  9938  004A02  50F5               	movf	tablat,w,c
  9939  004A04  0900               	iorlw	0
  9940  004A06  B4D8               	btfsc	status,2,c
  9941  004A08  D041               	goto	u3030
  9942                           
  9943                           ;stkvar	_r @ sp[(-2)+0]
  9944  004A0A  50E1               	movf	fsr1l,w,c
  9945  004A0C  0FFE               	addlw	-2
  9946  004A0E  6ED9               	movwf	fsr2l,c
  9947  004A10  50E2               	movf	fsr1h,w,c
  9948  004A12  6EDA               	movwf	fsr2h,c
  9949  004A14  0EFF               	movlw	255
  9950  004A16  22DA               	addwfc	fsr2h,f,c
  9951  004A18  006F FF7F FFF6     	movff	indf2,tblptrl
  9952  004A1E                     	if	1	;There is more than 1 active tblptr byte
  9953  004A1E  0E20               	movlw	high __smallconst
  9954  004A20  6EF7               	movwf	tblptrh,c
  9955  004A22                     	endif
  9956  004A22                     	if	0	;tblptru may be non-zero
  9957  004A22                     	endif
  9958  004A22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9959  004A22  0E00               	movlw	low (__smallconst shr (0+16))
  9960  004A24  6EF8               	movwf	tblptru,c
  9961  004A26                     	endif
  9962  004A26  0008               	tblrd		*
  9963  004A28  50F5               	movf	tablat,w,c
  9964  004A2A  0900               	iorlw	0
  9965  004A2C  B4D8               	btfsc	status,2,c
  9966  004A2E  D02E               	goto	u3030
  9967                           
  9968                           ;stkvar	_n @ sp[(-2)+-4]
  9969  004A30  0EFA               	movlw	-6
  9970  004A32  006F FF8C  F03C    	movff	plusw1,btemp
  9971  004A38  0EFB               	movlw	-5
  9972  004A3A  50E3               	movf	plusw1,w,c
  9973  004A3C  103C               	iorwf	btemp,w,c
  9974  004A3E  B4D8               	btfsc	status,2,c
  9975  004A40  D025               	goto	u3030
  9976                           
  9977                           ;stkvar	_l @ sp[(-2)+1]
  9978  004A42  50E1               	movf	fsr1l,w,c
  9979  004A44  0FFF               	addlw	-1
  9980  004A46  6ED9               	movwf	fsr2l,c
  9981  004A48  50E2               	movf	fsr1h,w,c
  9982  004A4A  6EDA               	movwf	fsr2h,c
  9983  004A4C  0EFF               	movlw	255
  9984  004A4E  22DA               	addwfc	fsr2h,f,c
  9985  004A50  006F FF7F FFF6     	movff	indf2,tblptrl
  9986  004A56                     	if	1	;There is more than 1 active tblptr byte
  9987  004A56  0E20               	movlw	high __smallconst
  9988  004A58  6EF7               	movwf	tblptrh,c
  9989  004A5A                     	endif
  9990  004A5A                     	if	0	;tblptru may be non-zero
  9991  004A5A                     	endif
  9992  004A5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9993  004A5A  0E00               	movlw	low (__smallconst shr (0+16))
  9994  004A5C  6EF8               	movwf	tblptru,c
  9995  004A5E                     	endif
  9996  004A5E  0008               	tblrd		*
  9997  004A60  006F FFD4  F047    	movff	tablat,btemp+11
  9998                           
  9999                           ;stkvar	_r @ sp[(-2)+0]
 10000  004A66  50E1               	movf	fsr1l,w,c
 10001  004A68  0FFE               	addlw	-2
 10002  004A6A  6ED9               	movwf	fsr2l,c
 10003  004A6C  50E2               	movf	fsr1h,w,c
 10004  004A6E  6EDA               	movwf	fsr2h,c
 10005  004A70  0EFF               	movlw	255
 10006  004A72  22DA               	addwfc	fsr2h,f,c
 10007  004A74  006F FF7F FFF6     	movff	indf2,tblptrl
 10008  004A7A                     	if	1	;There is more than 1 active tblptr byte
 10009  004A7A  0E20               	movlw	high __smallconst
 10010  004A7C  6EF7               	movwf	tblptrh,c
 10011  004A7E                     	endif
 10012  004A7E                     	if	0	;tblptru may be non-zero
 10013  004A7E                     	endif
 10014  004A7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10015  004A7E  0E00               	movlw	low (__smallconst shr (0+16))
 10016  004A80  6EF8               	movwf	tblptru,c
 10017  004A82                     	endif
 10018  004A82  0008               	tblrd		*
 10019  004A84  50F5               	movf	tablat,w,c
 10020  004A86  1847               	xorwf	btemp+11,w,c
 10021  004A88  B4D8               	btfsc	status,2,c
 10022  004A8A  D794               	goto	l5813
 10023  004A8C                     u3030:
 10024                           
 10025                           ;stkvar	_l @ sp[(-2)+1]
 10026  004A8C  50E1               	movf	fsr1l,w,c
 10027  004A8E  0FFF               	addlw	-1
 10028  004A90  6ED9               	movwf	fsr2l,c
 10029  004A92  50E2               	movf	fsr1h,w,c
 10030  004A94  6EDA               	movwf	fsr2h,c
 10031  004A96  0EFF               	movlw	255
 10032  004A98  22DA               	addwfc	fsr2h,f,c
 10033  004A9A  006F FF7F FFF6     	movff	indf2,tblptrl
 10034  004AA0                     	if	1	;There is more than 1 active tblptr byte
 10035  004AA0  0E20               	movlw	high __smallconst
 10036  004AA2  6EF7               	movwf	tblptrh,c
 10037  004AA4                     	endif
 10038  004AA4                     	if	0	;tblptru may be non-zero
 10039  004AA4                     	endif
 10040  004AA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10041  004AA4  0E00               	movlw	low (__smallconst shr (0+16))
 10042  004AA6  6EF8               	movwf	tblptru,c
 10043  004AA8                     	endif
 10044  004AA8  0008               	tblrd		*
 10045  004AAA  50F5               	movf	tablat,w,c
 10046  004AAC  6E3C               	movwf	btemp,c
 10047  004AAE  6A3D               	clrf	btemp+1,c
 10048                           
 10049                           ;stkvar	_r @ sp[(-2)+0]
 10050  004AB0  50E1               	movf	fsr1l,w,c
 10051  004AB2  0FFE               	addlw	-2
 10052  004AB4  6ED9               	movwf	fsr2l,c
 10053  004AB6  50E2               	movf	fsr1h,w,c
 10054  004AB8  6EDA               	movwf	fsr2h,c
 10055  004ABA  0EFF               	movlw	255
 10056  004ABC  22DA               	addwfc	fsr2h,f,c
 10057  004ABE  006F FF7F FFF6     	movff	indf2,tblptrl
 10058  004AC4                     	if	1	;There is more than 1 active tblptr byte
 10059  004AC4  0E20               	movlw	high __smallconst
 10060  004AC6  6EF7               	movwf	tblptrh,c
 10061  004AC8                     	endif
 10062  004AC8                     	if	0	;tblptru may be non-zero
 10063  004AC8                     	endif
 10064  004AC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10065  004AC8  0E00               	movlw	low (__smallconst shr (0+16))
 10066  004ACA  6EF8               	movwf	tblptru,c
 10067  004ACC                     	endif
 10068  004ACC  0008               	tblrd		*
 10069  004ACE  50F5               	movf	tablat,w,c
 10070  004AD0  5E3C               	subwf	btemp,f,c
 10071  004AD2  0E00               	movlw	0
 10072  004AD4  5A3D               	subwfb	btemp+1,f,c
 10073  004AD6                     l2656:
 10074                           
 10075                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 10076  004AD6  0EFA               	movlw	250
 10077  004AD8  26E1               	addwf	fsr1l,f,c
 10078  004ADA  0EFF               	movlw	255
 10079  004ADC  22E2               	addwfc	fsr1h,f,c
 10080  004ADE  0012               	return		;funcret
 10081  004AE0                     __end_of_strncmp:
 10082                           	opt callstack 0
 10083                           
 10084 ;; *************** function _stoa *****************
 10085 ;; Defined at:
 10086 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10087 ;; Parameters:    Size  Location     Type
 10088 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10089 ;;		 -> f(5), NULL(0), 
 10090 ;;  s               2  [STACK] PTR unsigned char 
 10091 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(93), 
 10092 ;; Auto vars:     Size  Location     Type
 10093 ;;  nuls            7  [STACK] unsigned char [7]
 10094 ;;  l               2  [STACK] int 
 10095 ;;  p               2  [STACK] int 
 10096 ;;  cp              2  [STACK] PTR unsigned char 
 10097 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(6), 
 10098 ;;		 -> V(93), 
 10099 ;;  w               2  [STACK] int 
 10100 ;;  i               2  [STACK] int 
 10101 ;; Return value:  Size  Location     Type
 10102 ;;                  2  [STACK] int 
 10103 ;; Registers used:
 10104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10105 ;; Tracked objects:
 10106 ;;		On entry : 0/0
 10107 ;;		On exit  : 0/0
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10114 ;;Total ram usage:        0 bytes
 10115 ;; Hardware stack levels used:    1
 10116 ;; Hardware stack levels required when called:    6
 10117 ;; This function calls:
 10118 ;;		_fputc
 10119 ;;		_strlen
 10120 ;; This function is called by:
 10121 ;;		_vfpfcnvrt
 10122 ;; This function uses a reentrant model
 10123 ;;
 10124                           
 10125                           	psect	text42
 10126  003A88                     __ptext42:
 10127                           	opt callstack 0
 10128  003A88                     _stoa:
 10129                           	opt callstack 0
 10130                           
 10131                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10132  003A88  0E11               	movlw	17
 10133  003A8A  26E1               	addwf	fsr1l,f,c
 10134  003A8C  0E00               	movlw	0
 10135  003A8E  22E2               	addwfc	fsr1h,f,c
 10136                           
 10137                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10138                           
 10139                           ;incstack = 0
 10140  003A90  EE20  F060         	lfsr	2,stoa@F1144
 10141                           
 10142                           ;stkvar	_nuls @ sp[(-17)+0]
 10143  003A94  0E07               	movlw	7
 10144  003A96  6E3C               	movwf	btemp,c
 10145  003A98  0EEF               	movlw	-17
 10146  003A9A                     us484999:
 10147  003A9A  006F FF7B FFE3     	movff	postinc2,plusw1
 10148  003AA0  28E8               	incf	wreg,w,c
 10149  003AA2  2E3C               	decfsz	btemp,f,c
 10150  003AA4  D7FA               	bra	us484999
 10151                           
 10152                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10153                           ;stkvar	_s @ sp[(-17)+-4]
 10154  003AA6  0EEB               	movlw	-21
 10155  003AA8  006F FF8C  F046    	movff	plusw1,btemp+10
 10156  003AAE  0EEC               	movlw	-20
 10157  003AB0  006F FF8C  F047    	movff	plusw1,btemp+11
 10158                           
 10159                           ;stkvar	_cp @ sp[(-17)+11]
 10160  003AB6  0EFB               	movlw	-5
 10161  003AB8  0060  F11F  FFE3   	movff	btemp+11,plusw1
 10162  003ABE  0EFA               	movlw	-6
 10163  003AC0  0060  F11B  FFE3   	movff	btemp+10,plusw1
 10164                           
 10165                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10166                           ;stkvar	_cp @ sp[(-17)+11]
 10167  003AC6  0EFA               	movlw	-6
 10168  003AC8  006F FF8C  F03C    	movff	plusw1,btemp
 10169  003ACE  0EFB               	movlw	-5
 10170  003AD0  50E3               	movf	plusw1,w,c
 10171  003AD2  103C               	iorwf	btemp,w,c
 10172  003AD4  A4D8               	btfss	status,2,c
 10173  003AD6  D00E               	goto	l8185
 10174                           
 10175                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10176                           ;stkvar	_nuls @ sp[(-17)+0]
 10177  003AD8  0EEF               	movlw	239
 10178  003ADA  24E1               	addwf	fsr1l,w,c
 10179  003ADC  6E46               	movwf	btemp+10,c
 10180  003ADE  0EFF               	movlw	255
 10181  003AE0  20E2               	addwfc	fsr1h,w,c
 10182  003AE2  6E47               	movwf	btemp+11,c
 10183                           
 10184                           ;stkvar	_cp @ sp[(-17)+11]
 10185  003AE4  0EFB               	movlw	-5
 10186  003AE6  0060  F11F  FFE3   	movff	btemp+11,plusw1
 10187  003AEC  0EFA               	movlw	-6
 10188  003AEE  0060  F11B  FFE3   	movff	btemp+10,plusw1
 10189  003AF4                     l8185:
 10190                           
 10191                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10192                           ;stkvar	_cp @ sp[(-17)+11]
 10193  003AF4  0EFA               	movlw	-6
 10194  003AF6  006F FF8F FFE6     	movff	plusw1,postinc1
 10195  003AFC  006F FF8F FFE6     	movff	plusw1,postinc1
 10196  003B02  EC49  F029         	call	_strlen	;wreg free
 10197                           
 10198                           ;stkvar	_l @ sp[(-17)+7]
 10199  003B06  0EF6               	movlw	-10
 10200  003B08  0060  F0F3  FFE3   	movff	btemp,plusw1
 10201  003B0E  0EF7               	movlw	-9
 10202  003B10  0060  F0F7  FFE3   	movff	btemp+1,plusw1
 10203                           
 10204                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10205                           ;stkvar	_p @ sp[(-17)+9]
 10206  003B16  0EF8               	movlw	-8
 10207  003B18  0060  F08B  FFE3   	movff	_prec,plusw1
 10208  003B1E  0EF9               	movlw	-7
 10209  003B20  0060  F08F  FFE3   	movff	_prec+1,plusw1
 10210                           
 10211                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10212                           ;stkvar	_p @ sp[(-17)+9]
 10213  003B26  0EF9               	movlw	-7
 10214  003B28  BEE3               	btfsc	plusw1,7,c
 10215  003B2A  D023               	goto	l1888
 10216                           
 10217                           ;stkvar	_l @ sp[(-17)+7]
 10218                           ;stkvar	_p @ sp[(-17)+9]
 10219  003B2C  50E1               	movf	fsr1l,w,c
 10220  003B2E  0FF8               	addlw	-8
 10221  003B30  6ED9               	movwf	fsr2l,c
 10222  003B32  50E2               	movf	fsr1h,w,c
 10223  003B34  6EDA               	movwf	fsr2h,c
 10224  003B36  0EFF               	movlw	255
 10225  003B38  22DA               	addwfc	fsr2h,f,c
 10226  003B3A  0EF6               	movlw	-10
 10227  003B3C  50E3               	movf	plusw1,w,c
 10228  003B3E  5CDE               	subwf	postinc2,w,c
 10229  003B40  50DE               	movf	postinc2,w,c
 10230  003B42  0A80               	xorlw	128
 10231  003B44  6E3C               	movwf	btemp,c
 10232  003B46  0EF7               	movlw	-9
 10233  003B48  50E3               	movf	plusw1,w,c
 10234  003B4A  0A80               	xorlw	128
 10235  003B4C  583C               	subwfb	btemp,w,c
 10236  003B4E  B0D8               	btfsc	status,0,c
 10237  003B50  D010               	goto	l1888
 10238                           
 10239                           ;stkvar	_p @ sp[(-17)+9]
 10240                           ;stkvar	_l @ sp[(-17)+7]
 10241  003B52  0EF8               	movlw	-8
 10242  003B54  006F FF8C  F03C    	movff	plusw1,btemp
 10243  003B5A  0EF6               	movlw	-10
 10244  003B5C  0060  F0F3  FFE3   	movff	btemp,plusw1
 10245  003B62  0EF9               	movlw	-7
 10246  003B64  006F FF8C  F03C    	movff	plusw1,btemp
 10247  003B6A  0EF7               	movlw	-9
 10248  003B6C  0060  F0F3  FFE3   	movff	btemp,plusw1
 10249  003B72                     l1888:
 10250                           
 10251                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
 10252                           ;stkvar	_l @ sp[(-17)+7]
 10253                           ;stkvar	_p @ sp[(-17)+9]
 10254  003B72  0EF6               	movlw	-10
 10255  003B74  006F FF8C  F03C    	movff	plusw1,btemp
 10256  003B7A  0EF8               	movlw	-8
 10257  003B7C  0060  F0F3  FFE3   	movff	btemp,plusw1
 10258  003B82  0EF7               	movlw	-9
 10259  003B84  006F FF8C  F03C    	movff	plusw1,btemp
 10260  003B8A  0EF9               	movlw	-7
 10261  003B8C  0060  F0F3  FFE3   	movff	btemp,plusw1
 10262                           
 10263                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
 10264                           ;stkvar	_w @ sp[(-17)+13]
 10265  003B92  0EFC               	movlw	-4
 10266  003B94  0060  F083  FFE3   	movff	_width,plusw1
 10267  003B9A  0EFD               	movlw	-3
 10268  003B9C  0060  F087  FFE3   	movff	_width+1,plusw1
 10269                           
 10270                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 10271  003BA2  A024               	btfss	_flags,0,c
 10272  003BA4  D01F               	goto	l8205
 10273  003BA6  D031               	goto	u4890
 10274  003BA8                     l8201:
 10275                           
 10276                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 10277                           ;stkvar	_fp @ sp[(-17)+-2]
 10278  003BA8  0EED               	movlw	-19
 10279  003BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 10280  003BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 10281  003BB6  0E20               	movlw	32
 10282  003BB8  6EE6               	movwf	postinc1,c
 10283  003BBA  0E00               	movlw	0
 10284  003BBC  6EE6               	movwf	postinc1,c
 10285  003BBE  ECFA  F025         	call	_fputc	;wreg free
 10286                           
 10287                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10288                           ;stkvar	_l @ sp[(-17)+7]
 10289  003BC2  0EF6               	movlw	-10
 10290  003BC4  50E3               	movf	plusw1,w,c
 10291  003BC6  0F01               	addlw	1
 10292  003BC8  6E3C               	movwf	btemp,c
 10293  003BCA  0EF6               	movlw	-10
 10294  003BCC  0060  F0F3  FFE3   	movff	btemp,plusw1
 10295  003BD2  6A3C               	clrf	btemp,c
 10296  003BD4  0EF7               	movlw	-9
 10297  003BD6  50E3               	movf	plusw1,w,c
 10298  003BD8  203C               	addwfc	btemp,w,c
 10299  003BDA  6E3C               	movwf	btemp,c
 10300  003BDC  0EF7               	movlw	-9
 10301  003BDE  0060  F0F3  FFE3   	movff	btemp,plusw1
 10302  003BE4                     l8205:
 10303                           
 10304                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 10305                           ;stkvar	_w @ sp[(-17)+13]
 10306                           ;stkvar	_l @ sp[(-17)+7]
 10307  003BE4  50E1               	movf	fsr1l,w,c
 10308  003BE6  0FF6               	addlw	-10
 10309  003BE8  6ED9               	movwf	fsr2l,c
 10310  003BEA  50E2               	movf	fsr1h,w,c
 10311  003BEC  6EDA               	movwf	fsr2h,c
 10312  003BEE  0EFF               	movlw	255
 10313  003BF0  22DA               	addwfc	fsr2h,f,c
 10314  003BF2  0EFC               	movlw	-4
 10315  003BF4  50E3               	movf	plusw1,w,c
 10316  003BF6  5CDE               	subwf	postinc2,w,c
 10317  003BF8  50DE               	movf	postinc2,w,c
 10318  003BFA  0A80               	xorlw	128
 10319  003BFC  6E3C               	movwf	btemp,c
 10320  003BFE  0EFD               	movlw	-3
 10321  003C00  50E3               	movf	plusw1,w,c
 10322  003C02  0A80               	xorlw	128
 10323  003C04  583C               	subwfb	btemp,w,c
 10324  003C06  A0D8               	btfss	status,0,c
 10325  003C08  D7CF               	goto	l8201
 10326  003C0A                     u4890:
 10327                           
 10328                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10329                           ;stkvar	_i @ sp[(-17)+15]
 10330  003C0A  0EFE               	movlw	-2
 10331  003C0C  6AE3               	clrf	plusw1,c
 10332  003C0E  0EFF               	movlw	-1
 10333  003C10  6AE3               	clrf	plusw1,c
 10334                           
 10335                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10336  003C12  D045               	goto	l8215
 10337  003C14                     l8209:
 10338                           
 10339                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10340                           ;stkvar	_fp @ sp[(-17)+-2]
 10341  003C14  0EED               	movlw	-19
 10342  003C16  006F FF8F FFE6     	movff	plusw1,postinc1
 10343  003C1C  006F FF8F FFE6     	movff	plusw1,postinc1
 10344                           
 10345                           ;stkvar	_cp @ sp[(-19)+11]
 10346  003C22  0EF8               	movlw	-8
 10347  003C24  006F FF8F FFF6     	movff	plusw1,tblptrl
 10348  003C2A  0EF9               	movlw	-7
 10349  003C2C  006F FF8F FFF7     	movff	plusw1,tblptrh
 10350  003C32  0E00               	movlw	low (__smallconst shr (0+16))
 10351  003C34  6EF8               	movwf	tblptru,c
 10352  003C36  0E1F               	movlw	(high __ramtop+-1)
 10353  003C38  64F7               	cpfsgt	tblptrh,c
 10354  003C3A  D003               	bra	u4907
 10355  003C3C  0008               	tblrd		*
 10356  003C3E  50F5               	movf	tablat,w,c
 10357  003C40  D007               	bra	u4900
 10358  003C42                     u4907:
 10359  003C42  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10360  003C48  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10361  003C4E  50EF               	movf	indf0,w,c
 10362  003C50                     u4900:
 10363  003C50  6EE6               	movwf	postinc1,c
 10364  003C52  0E00               	movlw	0
 10365  003C54  6EE6               	movwf	postinc1,c
 10366  003C56  ECFA  F025         	call	_fputc	;wreg free
 10367                           
 10368                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 10369                           ;stkvar	_cp @ sp[(-17)+11]
 10370  003C5A  0EFA               	movlw	-6
 10371  003C5C  50E3               	movf	plusw1,w,c
 10372  003C5E  0F01               	addlw	1
 10373  003C60  6E3C               	movwf	btemp,c
 10374  003C62  0EFA               	movlw	-6
 10375  003C64  0060  F0F3  FFE3   	movff	btemp,plusw1
 10376  003C6A  6A3C               	clrf	btemp,c
 10377  003C6C  0EFB               	movlw	-5
 10378  003C6E  50E3               	movf	plusw1,w,c
 10379  003C70  203C               	addwfc	btemp,w,c
 10380  003C72  6E3C               	movwf	btemp,c
 10381  003C74  0EFB               	movlw	-5
 10382  003C76  0060  F0F3  FFE3   	movff	btemp,plusw1
 10383                           
 10384                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
 10385                           ;stkvar	_i @ sp[(-17)+15]
 10386  003C7C  0EFE               	movlw	-2
 10387  003C7E  50E3               	movf	plusw1,w,c
 10388  003C80  0F01               	addlw	1
 10389  003C82  6E3C               	movwf	btemp,c
 10390  003C84  0EFE               	movlw	-2
 10391  003C86  0060  F0F3  FFE3   	movff	btemp,plusw1
 10392  003C8C  6A3C               	clrf	btemp,c
 10393  003C8E  0EFF               	movlw	-1
 10394  003C90  50E3               	movf	plusw1,w,c
 10395  003C92  203C               	addwfc	btemp,w,c
 10396  003C94  6E3C               	movwf	btemp,c
 10397  003C96  0EFF               	movlw	-1
 10398  003C98  0060  F0F3  FFE3   	movff	btemp,plusw1
 10399  003C9E                     l8215:
 10400                           
 10401                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10402                           ;stkvar	_p @ sp[(-17)+9]
 10403                           ;stkvar	_i @ sp[(-17)+15]
 10404  003C9E  50E1               	movf	fsr1l,w,c
 10405  003CA0  0FFE               	addlw	-2
 10406  003CA2  6ED9               	movwf	fsr2l,c
 10407  003CA4  50E2               	movf	fsr1h,w,c
 10408  003CA6  6EDA               	movwf	fsr2h,c
 10409  003CA8  0EFF               	movlw	255
 10410  003CAA  22DA               	addwfc	fsr2h,f,c
 10411  003CAC  0EF8               	movlw	-8
 10412  003CAE  50E3               	movf	plusw1,w,c
 10413  003CB0  5CDE               	subwf	postinc2,w,c
 10414  003CB2  50DE               	movf	postinc2,w,c
 10415  003CB4  0A80               	xorlw	128
 10416  003CB6  6E3C               	movwf	btemp,c
 10417  003CB8  0EF9               	movlw	-7
 10418  003CBA  50E3               	movf	plusw1,w,c
 10419  003CBC  0A80               	xorlw	128
 10420  003CBE  583C               	subwfb	btemp,w,c
 10421  003CC0  A0D8               	btfss	status,0,c
 10422  003CC2  D7A8               	goto	l8209
 10423                           
 10424                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 10425  003CC4  B024               	btfsc	_flags,0,c
 10426  003CC6  D01F               	goto	l8223
 10427  003CC8  D031               	goto	u4930
 10428  003CCA                     l8219:
 10429                           
 10430                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 10431                           ;stkvar	_fp @ sp[(-17)+-2]
 10432  003CCA  0EED               	movlw	-19
 10433  003CCC  006F FF8F FFE6     	movff	plusw1,postinc1
 10434  003CD2  006F FF8F FFE6     	movff	plusw1,postinc1
 10435  003CD8  0E20               	movlw	32
 10436  003CDA  6EE6               	movwf	postinc1,c
 10437  003CDC  0E00               	movlw	0
 10438  003CDE  6EE6               	movwf	postinc1,c
 10439  003CE0  ECFA  F025         	call	_fputc	;wreg free
 10440                           
 10441                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
 10442                           ;stkvar	_l @ sp[(-17)+7]
 10443  003CE4  0EF6               	movlw	-10
 10444  003CE6  50E3               	movf	plusw1,w,c
 10445  003CE8  0F01               	addlw	1
 10446  003CEA  6E3C               	movwf	btemp,c
 10447  003CEC  0EF6               	movlw	-10
 10448  003CEE  0060  F0F3  FFE3   	movff	btemp,plusw1
 10449  003CF4  6A3C               	clrf	btemp,c
 10450  003CF6  0EF7               	movlw	-9
 10451  003CF8  50E3               	movf	plusw1,w,c
 10452  003CFA  203C               	addwfc	btemp,w,c
 10453  003CFC  6E3C               	movwf	btemp,c
 10454  003CFE  0EF7               	movlw	-9
 10455  003D00  0060  F0F3  FFE3   	movff	btemp,plusw1
 10456  003D06                     l8223:
 10457                           
 10458                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 10459                           ;stkvar	_w @ sp[(-17)+13]
 10460                           ;stkvar	_l @ sp[(-17)+7]
 10461  003D06  50E1               	movf	fsr1l,w,c
 10462  003D08  0FF6               	addlw	-10
 10463  003D0A  6ED9               	movwf	fsr2l,c
 10464  003D0C  50E2               	movf	fsr1h,w,c
 10465  003D0E  6EDA               	movwf	fsr2h,c
 10466  003D10  0EFF               	movlw	255
 10467  003D12  22DA               	addwfc	fsr2h,f,c
 10468  003D14  0EFC               	movlw	-4
 10469  003D16  50E3               	movf	plusw1,w,c
 10470  003D18  5CDE               	subwf	postinc2,w,c
 10471  003D1A  50DE               	movf	postinc2,w,c
 10472  003D1C  0A80               	xorlw	128
 10473  003D1E  6E3C               	movwf	btemp,c
 10474  003D20  0EFD               	movlw	-3
 10475  003D22  50E3               	movf	plusw1,w,c
 10476  003D24  0A80               	xorlw	128
 10477  003D26  583C               	subwfb	btemp,w,c
 10478  003D28  A0D8               	btfss	status,0,c
 10479  003D2A  D7CF               	goto	l8219
 10480  003D2C                     u4930:
 10481                           
 10482                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
 10483                           ;stkvar	_l @ sp[(-17)+7]
 10484  003D2C  0EF6               	movlw	-10
 10485  003D2E  006F FF8C  F03C    	movff	plusw1,btemp
 10486  003D34  0EF7               	movlw	-9
 10487  003D36  006F FF8C  F03D    	movff	plusw1,btemp+1
 10488                           
 10489                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10490  003D3C  0EEB               	movlw	235
 10491  003D3E  26E1               	addwf	fsr1l,f,c
 10492  003D40  0EFF               	movlw	255
 10493  003D42  22E2               	addwfc	fsr1h,f,c
 10494  003D44  0012               	return		;funcret
 10495  003D46                     __end_of_stoa:
 10496                           	opt callstack 0
 10497                           
 10498 ;; *************** function _dtoa *****************
 10499 ;; Defined at:
 10500 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10501 ;; Parameters:    Size  Location     Type
 10502 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10503 ;;		 -> f(5), NULL(0), 
 10504 ;;  d               8  [STACK] long long 
 10505 ;; Auto vars:     Size  Location     Type
 10506 ;;  n               8  [STACK] long long 
 10507 ;;  i               2  [STACK] int 
 10508 ;;  s               2  [STACK] int 
 10509 ;;  w               2  [STACK] int 
 10510 ;;  p               2  [STACK] int 
 10511 ;; Return value:  Size  Location     Type
 10512 ;;                  2  [STACK] int 
 10513 ;; Registers used:
 10514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 10515 ;; Tracked objects:
 10516 ;;		On entry : 0/0
 10517 ;;		On exit  : 0/0
 10518 ;;		Unchanged: 0/0
 10519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10524 ;;Total ram usage:        0 bytes
 10525 ;; Hardware stack levels used:    1
 10526 ;; Hardware stack levels required when called:    8
 10527 ;; This function calls:
 10528 ;;		___aodiv
 10529 ;;		___aomod
 10530 ;;		_abs
 10531 ;;		_pad
 10532 ;; This function is called by:
 10533 ;;		_vfpfcnvrt
 10534 ;; This function uses a reentrant model
 10535 ;;
 10536                           
 10537                           	psect	text43
 10538  002FD4                     __ptext43:
 10539                           	opt callstack 0
 10540  002FD4                     _dtoa:
 10541                           	opt callstack 0
 10542                           
 10543                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 10544  002FD4  0E12               	movlw	18
 10545  002FD6  26E1               	addwf	fsr1l,f,c
 10546  002FD8  0E00               	movlw	0
 10547  002FDA  22E2               	addwfc	fsr1h,f,c
 10548                           
 10549                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
 10550                           ;stkvar	_d @ sp[(-18)+-10]
 10551                           
 10552                           ;incstack = 0
 10553  002FDC  0EE4               	movlw	228
 10554  002FDE  24E1               	addwf	fsr1l,w,c
 10555  002FE0  6ED9               	movwf	fsr2l,c
 10556  002FE2  0EFF               	movlw	255
 10557  002FE4  20E2               	addwfc	fsr1h,w,c
 10558  002FE6  6EDA               	movwf	fsr2h,c
 10559                           
 10560                           ;stkvar	_n @ sp[(-18)+2]
 10561  002FE8  0E08               	movlw	8
 10562  002FEA  6E3C               	movwf	btemp,c
 10563  002FEC  0EF0               	movlw	-16
 10564  002FEE                     us467999:
 10565  002FEE  006F FF7B FFE3     	movff	postinc2,plusw1
 10566  002FF4  28E8               	incf	wreg,w,c
 10567  002FF6  2E3C               	decfsz	btemp,f,c
 10568  002FF8  D7FA               	bra	us467999
 10569                           
 10570                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 10571                           ;stkvar	_n @ sp[(-18)+2]
 10572  002FFA  0EF7               	movlw	-9
 10573  002FFC  AEE3               	btfss	plusw1,7,c
 10574  002FFE  D002               	goto	u4680
 10575  003000  0E01               	movlw	1
 10576  003002  D001               	goto	u4690
 10577  003004                     u4680:
 10578  003004  0E00               	movlw	0
 10579  003006                     u4690:
 10580  003006  6E46               	movwf	btemp+10,c
 10581  003008  6A47               	clrf	btemp+11,c
 10582                           
 10583                           ;stkvar	_s @ sp[(-18)+12]
 10584  00300A  0EFA               	movlw	-6
 10585  00300C  0060  F11B  FFE3   	movff	btemp+10,plusw1
 10586  003012  0EFB               	movlw	-5
 10587  003014  0060  F11F  FFE3   	movff	btemp+11,plusw1
 10588                           
 10589                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 10590                           ;stkvar	_s @ sp[(-18)+12]
 10591  00301A  0EFA               	movlw	-6
 10592  00301C  006F FF8C  F03C    	movff	plusw1,btemp
 10593  003022  0EFB               	movlw	-5
 10594  003024  50E3               	movf	plusw1,w,c
 10595  003026  103C               	iorwf	btemp,w,c
 10596  003028  B4D8               	btfsc	status,2,c
 10597  00302A  D025               	goto	u4710
 10598                           
 10599                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 10600                           ;stkvar	_n @ sp[(-18)+2]
 10601                           ;stkvar	_n @ sp[(-18)+2]
 10602  00302C  0EF0               	movlw	-16
 10603  00302E  6CE3               	negf	plusw1,c
 10604  003030  0EF1               	movlw	-15
 10605  003032  1EE3               	comf	plusw1,f,c
 10606  003034  0EF2               	movlw	-14
 10607  003036  1EE3               	comf	plusw1,f,c
 10608  003038  0EF3               	movlw	-13
 10609  00303A  1EE3               	comf	plusw1,f,c
 10610  00303C  0EF4               	movlw	-12
 10611  00303E  1EE3               	comf	plusw1,f,c
 10612  003040  0EF5               	movlw	-11
 10613  003042  1EE3               	comf	plusw1,f,c
 10614  003044  0EF6               	movlw	-10
 10615  003046  1EE3               	comf	plusw1,f,c
 10616  003048  0EF7               	movlw	-9
 10617  00304A  1EE3               	comf	plusw1,f,c
 10618  00304C  E314               	bnc	u4710
 10619  00304E  0EF1               	movlw	-15
 10620  003050  2AE3               	incf	plusw1,f,c
 10621  003052  E311               	bnc	u4710
 10622  003054  0EF2               	movlw	-14
 10623  003056  2AE3               	incf	plusw1,f,c
 10624  003058  E30E               	bnc	u4710
 10625  00305A  0EF3               	movlw	-13
 10626  00305C  2AE3               	incf	plusw1,f,c
 10627  00305E  E30B               	bnc	u4710
 10628  003060  0EF4               	movlw	-12
 10629  003062  2AE3               	incf	plusw1,f,c
 10630  003064  E308               	bnc	u4710
 10631  003066  0EF5               	movlw	-11
 10632  003068  2AE3               	incf	plusw1,f,c
 10633  00306A  E305               	bnc	u4710
 10634  00306C  0EF6               	movlw	-10
 10635  00306E  2AE3               	incf	plusw1,f,c
 10636  003070  E302               	bnc	u4710
 10637  003072  0EF7               	movlw	-9
 10638  003074  2AE3               	incf	plusw1,f,c
 10639  003076                     u4710:
 10640                           
 10641                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 10642  003076  AE23               	btfss	_prec+1,7,c
 10643                           
 10644                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 10645  003078  9224               	bcf	_flags,1,c
 10646                           
 10647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 10648  00307A  BE23               	btfsc	_prec+1,7,c
 10649  00307C  D005               	goto	u4730
 10650  00307E  5023               	movf	_prec+1,w,c
 10651  003080  E110               	bnz	l8127
 10652  003082  0422               	decf	_prec,w,c
 10653  003084  B0D8               	btfsc	status,0,c
 10654  003086  D00D               	goto	l8127
 10655  003088                     u4730:
 10656  003088  0E01               	movlw	1
 10657  00308A  6E46               	movwf	btemp+10,c
 10658  00308C  0E00               	movlw	0
 10659  00308E  6E47               	movwf	btemp+11,c
 10660                           
 10661                           ;stkvar	_p @ sp[(-18)+16]
 10662  003090  0EFE               	movlw	-2
 10663  003092  0060  F11B  FFE3   	movff	btemp+10,plusw1
 10664  003098  0EFF               	movlw	-1
 10665  00309A  0060  F11F  FFE3   	movff	btemp+11,plusw1
 10666  0030A0  D008               	goto	l1861
 10667  0030A2                     l8127:
 10668                           
 10669                           ;stkvar	_p @ sp[(-18)+16]
 10670  0030A2  0EFE               	movlw	-2
 10671  0030A4  0060  F08B  FFE3   	movff	_prec,plusw1
 10672  0030AA  0EFF               	movlw	-1
 10673  0030AC  0060  F08F  FFE3   	movff	_prec+1,plusw1
 10674  0030B2                     l1861:
 10675                           
 10676                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
 10677                           ;stkvar	_w @ sp[(-18)+14]
 10678  0030B2  0EFC               	movlw	-4
 10679  0030B4  0060  F083  FFE3   	movff	_width,plusw1
 10680  0030BA  0EFD               	movlw	-3
 10681  0030BC  0060  F087  FFE3   	movff	_width+1,plusw1
 10682                           
 10683                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 10684                           ;stkvar	_s @ sp[(-18)+12]
 10685  0030C2  0EFA               	movlw	-6
 10686  0030C4  006F FF8C  F03C    	movff	plusw1,btemp
 10687  0030CA  0EFB               	movlw	-5
 10688  0030CC  50E3               	movf	plusw1,w,c
 10689  0030CE  103C               	iorwf	btemp,w,c
 10690  0030D0  A4D8               	btfss	status,2,c
 10691  0030D2  D002               	goto	u4750
 10692  0030D4  A424               	btfss	_flags,2,c
 10693  0030D6  D00A               	goto	l8135
 10694  0030D8                     u4750:
 10695                           
 10696                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
 10697                           ;stkvar	_w @ sp[(-18)+14]
 10698  0030D8  50E1               	movf	fsr1l,w,c
 10699  0030DA  0FFC               	addlw	-4
 10700  0030DC  6ED9               	movwf	fsr2l,c
 10701  0030DE  50E2               	movf	fsr1h,w,c
 10702  0030E0  6EDA               	movwf	fsr2h,c
 10703  0030E2  0EFF               	movlw	255
 10704  0030E4  22DA               	addwfc	fsr2h,f,c
 10705  0030E6  06DE               	decf	postinc2,f,c
 10706  0030E8  0E00               	movlw	0
 10707  0030EA  5ADD               	subwfb	postdec2,f,c
 10708  0030EC                     l8135:
 10709                           
 10710                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 10711  0030EC  0E1F               	movlw	31
 10712  0030EE  6E46               	movwf	btemp+10,c
 10713  0030F0  0E00               	movlw	0
 10714  0030F2  6E47               	movwf	btemp+11,c
 10715                           
 10716                           ;stkvar	_i @ sp[(-18)+10]
 10717  0030F4  0EF8               	movlw	-8
 10718  0030F6  0060  F11B  FFE3   	movff	btemp+10,plusw1
 10719  0030FC  0EF9               	movlw	-7
 10720  0030FE  0060  F11F  FFE3   	movff	btemp+11,plusw1
 10721                           
 10722                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 10723  003104  0101               	movlb	1	; () banked
 10724  003106  6BE8               	clrf	(_dbuf+31)& (0+255),b
 10725                           
 10726                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10727  003108  D109               	goto	l8149
 10728  00310A                     l8139:
 10729                           
 10730                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
 10731                           ;stkvar	_i @ sp[(-18)+10]
 10732  00310A  50E1               	movf	fsr1l,w,c
 10733  00310C  0FF8               	addlw	-8
 10734  00310E  6ED9               	movwf	fsr2l,c
 10735  003110  50E2               	movf	fsr1h,w,c
 10736  003112  6EDA               	movwf	fsr2h,c
 10737  003114  0EFF               	movlw	255
 10738  003116  22DA               	addwfc	fsr2h,f,c
 10739  003118  06DE               	decf	postinc2,f,c
 10740  00311A  0E00               	movlw	0
 10741  00311C  5ADD               	subwfb	postdec2,f,c
 10742                           
 10743                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 10744  00311E  0E0A               	movlw	10
 10745  003120  6EE6               	movwf	postinc1,c
 10746  003122  0E00               	movlw	0
 10747  003124  6EE6               	movwf	postinc1,c
 10748  003126  0E00               	movlw	0
 10749  003128  6EE6               	movwf	postinc1,c
 10750  00312A  0E00               	movlw	0
 10751  00312C  6EE6               	movwf	postinc1,c
 10752  00312E  0E00               	movlw	0
 10753  003130  6EE6               	movwf	postinc1,c
 10754  003132  0E00               	movlw	0
 10755  003134  6EE6               	movwf	postinc1,c
 10756  003136  0E00               	movlw	0
 10757  003138  6EE6               	movwf	postinc1,c
 10758  00313A  0E00               	movlw	0
 10759  00313C  6EE6               	movwf	postinc1,c
 10760                           
 10761                           ;stkvar	_n @ sp[(-26)+2]
 10762  00313E  50E1               	movf	fsr1l,w,c
 10763  003140  0FE8               	addlw	-24
 10764  003142  6ED9               	movwf	fsr2l,c
 10765  003144  50E2               	movf	fsr1h,w,c
 10766  003146  6EDA               	movwf	fsr2h,c
 10767  003148  0EFF               	movlw	255
 10768  00314A  22DA               	addwfc	fsr2h,f,c
 10769  00314C  006F FF7B FFE6     	movff	postinc2,postinc1
 10770  003152  006F FF7B FFE6     	movff	postinc2,postinc1
 10771  003158  006F FF7B FFE6     	movff	postinc2,postinc1
 10772  00315E  006F FF7B FFE6     	movff	postinc2,postinc1
 10773  003164  006F FF7B FFE6     	movff	postinc2,postinc1
 10774  00316A  006F FF7B FFE6     	movff	postinc2,postinc1
 10775  003170  006F FF7B FFE6     	movff	postinc2,postinc1
 10776  003176  006F FF7B FFE6     	movff	postinc2,postinc1
 10777  00317C  EC88  F023         	call	___aomod	;wreg free
 10778  003180  52E5               	movf	postdec1,f,c
 10779  003182  006F FF9C  F053    	movff	indf1,btemp+23
 10780  003188  52E5               	movf	postdec1,f,c
 10781  00318A  006F FF9C  F052    	movff	indf1,btemp+22
 10782  003190  52E5               	movf	postdec1,f,c
 10783  003192  006F FF9C  F051    	movff	indf1,btemp+21
 10784  003198  52E5               	movf	postdec1,f,c
 10785  00319A  006F FF9C  F050    	movff	indf1,btemp+20
 10786  0031A0  52E5               	movf	postdec1,f,c
 10787  0031A2  006F FF9C  F04F    	movff	indf1,btemp+19
 10788  0031A8  52E5               	movf	postdec1,f,c
 10789  0031AA  006F FF9C  F04E    	movff	indf1,btemp+18
 10790  0031B0  52E5               	movf	postdec1,f,c
 10791  0031B2  006F FF9C  F04D    	movff	indf1,btemp+17
 10792  0031B8  52E5               	movf	postdec1,f,c
 10793  0031BA  006F FF9C  F04C    	movff	indf1,btemp+16
 10794  0031C0  0EF8               	movlw	248
 10795  0031C2  26E1               	addwf	fsr1l,f,c
 10796  0031C4  0EFF               	movlw	255
 10797  0031C6  22E2               	addwfc	fsr1h,f,c
 10798  0031C8  0060  F130  F046   	movff	btemp+16,btemp+10
 10799  0031CE  0060  F134  F047   	movff	btemp+17,btemp+11
 10800  0031D4  0060  F11B  FFE6   	movff	btemp+10,postinc1
 10801  0031DA  0060  F11F  FFE6   	movff	btemp+11,postinc1
 10802  0031E0  EC27  F02D         	call	_abs	;wreg free
 10803  0031E4  0E30               	movlw	48
 10804  0031E6  263C               	addwf	btemp,f,c
 10805                           
 10806                           ;stkvar	_i @ sp[(-18)+10]
 10807  0031E8  0EF8               	movlw	-8
 10808  0031EA  006F FF8C  F046    	movff	plusw1,btemp+10
 10809  0031F0  0EF9               	movlw	-7
 10810  0031F2  006F FF8C  F047    	movff	plusw1,btemp+11
 10811  0031F8  0EC9               	movlw	low _dbuf
 10812  0031FA  2446               	addwf	btemp+10,w,c
 10813  0031FC  6ED9               	movwf	fsr2l,c
 10814  0031FE  0E01               	movlw	high _dbuf
 10815  003200  2047               	addwfc	btemp+11,w,c
 10816  003202  6EDA               	movwf	fsr2h,c
 10817  003204  0060  F0F3  FFDF   	movff	btemp,indf2
 10818                           
 10819                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
 10820                           ;stkvar	_p @ sp[(-18)+16]
 10821  00320A  50E1               	movf	fsr1l,w,c
 10822  00320C  0FFE               	addlw	-2
 10823  00320E  6ED9               	movwf	fsr2l,c
 10824  003210  50E2               	movf	fsr1h,w,c
 10825  003212  6EDA               	movwf	fsr2h,c
 10826  003214  0EFF               	movlw	255
 10827  003216  22DA               	addwfc	fsr2h,f,c
 10828  003218  06DE               	decf	postinc2,f,c
 10829  00321A  0E00               	movlw	0
 10830  00321C  5ADD               	subwfb	postdec2,f,c
 10831                           
 10832                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
 10833                           ;stkvar	_w @ sp[(-18)+14]
 10834  00321E  50E1               	movf	fsr1l,w,c
 10835  003220  0FFC               	addlw	-4
 10836  003222  6ED9               	movwf	fsr2l,c
 10837  003224  50E2               	movf	fsr1h,w,c
 10838  003226  6EDA               	movwf	fsr2h,c
 10839  003228  0EFF               	movlw	255
 10840  00322A  22DA               	addwfc	fsr2h,f,c
 10841  00322C  06DE               	decf	postinc2,f,c
 10842  00322E  0E00               	movlw	0
 10843  003230  5ADD               	subwfb	postdec2,f,c
 10844                           
 10845                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 10846  003232  0E0A               	movlw	10
 10847  003234  6EE6               	movwf	postinc1,c
 10848  003236  0E00               	movlw	0
 10849  003238  6EE6               	movwf	postinc1,c
 10850  00323A  0E00               	movlw	0
 10851  00323C  6EE6               	movwf	postinc1,c
 10852  00323E  0E00               	movlw	0
 10853  003240  6EE6               	movwf	postinc1,c
 10854  003242  0E00               	movlw	0
 10855  003244  6EE6               	movwf	postinc1,c
 10856  003246  0E00               	movlw	0
 10857  003248  6EE6               	movwf	postinc1,c
 10858  00324A  0E00               	movlw	0
 10859  00324C  6EE6               	movwf	postinc1,c
 10860  00324E  0E00               	movlw	0
 10861  003250  6EE6               	movwf	postinc1,c
 10862                           
 10863                           ;stkvar	_n @ sp[(-26)+2]
 10864  003252  50E1               	movf	fsr1l,w,c
 10865  003254  0FE8               	addlw	-24
 10866  003256  6ED9               	movwf	fsr2l,c
 10867  003258  50E2               	movf	fsr1h,w,c
 10868  00325A  6EDA               	movwf	fsr2h,c
 10869  00325C  0EFF               	movlw	255
 10870  00325E  22DA               	addwfc	fsr2h,f,c
 10871  003260  006F FF7B FFE6     	movff	postinc2,postinc1
 10872  003266  006F FF7B FFE6     	movff	postinc2,postinc1
 10873  00326C  006F FF7B FFE6     	movff	postinc2,postinc1
 10874  003272  006F FF7B FFE6     	movff	postinc2,postinc1
 10875  003278  006F FF7B FFE6     	movff	postinc2,postinc1
 10876  00327E  006F FF7B FFE6     	movff	postinc2,postinc1
 10877  003284  006F FF7B FFE6     	movff	postinc2,postinc1
 10878  00328A  006F FF7B FFE6     	movff	postinc2,postinc1
 10879  003290  ECF3  F01F         	call	___aodiv	;wreg free
 10880  003294  52E5               	movf	postdec1,f,c
 10881  003296  006F FF9C  F053    	movff	indf1,btemp+23
 10882  00329C  52E5               	movf	postdec1,f,c
 10883  00329E  006F FF9C  F052    	movff	indf1,btemp+22
 10884  0032A4  52E5               	movf	postdec1,f,c
 10885  0032A6  006F FF9C  F051    	movff	indf1,btemp+21
 10886  0032AC  52E5               	movf	postdec1,f,c
 10887  0032AE  006F FF9C  F050    	movff	indf1,btemp+20
 10888  0032B4  52E5               	movf	postdec1,f,c
 10889  0032B6  006F FF9C  F04F    	movff	indf1,btemp+19
 10890  0032BC  52E5               	movf	postdec1,f,c
 10891  0032BE  006F FF9C  F04E    	movff	indf1,btemp+18
 10892  0032C4  52E5               	movf	postdec1,f,c
 10893  0032C6  006F FF9C  F04D    	movff	indf1,btemp+17
 10894  0032CC  52E5               	movf	postdec1,f,c
 10895  0032CE  006F FF9C  F04C    	movff	indf1,btemp+16
 10896  0032D4  0EF8               	movlw	248
 10897  0032D6  26E1               	addwf	fsr1l,f,c
 10898  0032D8  0EFF               	movlw	255
 10899  0032DA  22E2               	addwfc	fsr1h,f,c
 10900                           
 10901                           ;stkvar	_n @ sp[(-18)+2]
 10902  0032DC  0EF0               	movlw	-16
 10903  0032DE  0060  F133  FFE3   	movff	btemp+16,plusw1
 10904  0032E4  0EF1               	movlw	-15
 10905  0032E6  0060  F137  FFE3   	movff	btemp+17,plusw1
 10906  0032EC  0EF2               	movlw	-14
 10907  0032EE  0060  F13B  FFE3   	movff	btemp+18,plusw1
 10908  0032F4  0EF3               	movlw	-13
 10909  0032F6  0060  F13F  FFE3   	movff	btemp+19,plusw1
 10910  0032FC  0EF4               	movlw	-12
 10911  0032FE  0060  F143  FFE3   	movff	btemp+20,plusw1
 10912  003304  0EF5               	movlw	-11
 10913  003306  0060  F147  FFE3   	movff	btemp+21,plusw1
 10914  00330C  0EF6               	movlw	-10
 10915  00330E  0060  F14B  FFE3   	movff	btemp+22,plusw1
 10916  003314  0EF7               	movlw	-9
 10917  003316  0060  F14F  FFE3   	movff	btemp+23,plusw1
 10918  00331C                     l8149:
 10919                           
 10920                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10921                           ;stkvar	_i @ sp[(-18)+10]
 10922  00331C  0EF9               	movlw	-7
 10923  00331E  BEE3               	btfsc	plusw1,7,c
 10924  003320  D036               	goto	u4800
 10925  003322  0EF9               	movlw	-7
 10926  003324  50E3               	movf	plusw1,w,c
 10927  003326  E104               	bnz	u4760
 10928  003328  0EF8               	movlw	-8
 10929  00332A  04E3               	decf	plusw1,w,c
 10930  00332C  A0D8               	btfss	status,0,c
 10931  00332E  D02F               	goto	u4800
 10932  003330                     u4760:
 10933                           
 10934                           ;stkvar	_n @ sp[(-18)+2]
 10935  003330  0EF0               	movlw	-16
 10936  003332  50E3               	movf	plusw1,w,c
 10937  003334  E115               	bnz	u4771
 10938  003336  0EF1               	movlw	-15
 10939  003338  50E3               	movf	plusw1,w,c
 10940  00333A  E112               	bnz	u4771
 10941  00333C  0EF2               	movlw	-14
 10942  00333E  50E3               	movf	plusw1,w,c
 10943  003340  E10F               	bnz	u4771
 10944  003342  0EF3               	movlw	-13
 10945  003344  50E3               	movf	plusw1,w,c
 10946  003346  E10C               	bnz	u4771
 10947  003348  0EF4               	movlw	-12
 10948  00334A  50E3               	movf	plusw1,w,c
 10949  00334C  E109               	bnz	u4771
 10950  00334E  0EF5               	movlw	-11
 10951  003350  50E3               	movf	plusw1,w,c
 10952  003352  E106               	bnz	u4771
 10953  003354  0EF6               	movlw	-10
 10954  003356  50E3               	movf	plusw1,w,c
 10955  003358  E103               	bnz	u4771
 10956  00335A  0EF7               	movlw	-9
 10957  00335C  50E3               	movf	plusw1,w,c
 10958  00335E  A4D8               	btfss	status,2,c
 10959  003360                     u4771:
 10960  003360  D6D4               	goto	l8139
 10961                           
 10962                           ;stkvar	_p @ sp[(-18)+16]
 10963  003362  0EFF               	movlw	-1
 10964  003364  BEE3               	btfsc	plusw1,7,c
 10965  003366  D007               	goto	u4780
 10966  003368  0EFF               	movlw	-1
 10967  00336A  50E3               	movf	plusw1,w,c
 10968  00336C  E103               	bnz	u4781
 10969  00336E  0EFE               	movlw	-2
 10970  003370  04E3               	decf	plusw1,w,c
 10971  003372  B0D8               	btfsc	status,0,c
 10972  003374                     u4781:
 10973  003374  D6CA               	goto	l8139
 10974  003376                     u4780:
 10975                           
 10976                           ;stkvar	_w @ sp[(-18)+14]
 10977  003376  0EFD               	movlw	-3
 10978  003378  BEE3               	btfsc	plusw1,7,c
 10979  00337A  D009               	goto	u4800
 10980  00337C  0EFD               	movlw	-3
 10981  00337E  50E3               	movf	plusw1,w,c
 10982  003380  E104               	bnz	u4790
 10983  003382  0EFC               	movlw	-4
 10984  003384  04E3               	decf	plusw1,w,c
 10985  003386  A0D8               	btfss	status,0,c
 10986  003388  D002               	goto	u4800
 10987  00338A                     u4790:
 10988  00338A  B224               	btfsc	_flags,1,c
 10989  00338C  D6BE               	goto	l8139
 10990  00338E                     u4800:
 10991                           
 10992                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 10993                           ;stkvar	_s @ sp[(-18)+12]
 10994  00338E  0EFA               	movlw	-6
 10995  003390  006F FF8C  F03C    	movff	plusw1,btemp
 10996  003396  0EFB               	movlw	-5
 10997  003398  50E3               	movf	plusw1,w,c
 10998  00339A  103C               	iorwf	btemp,w,c
 10999  00339C  A4D8               	btfss	status,2,c
 11000  00339E  D002               	goto	u4820
 11001  0033A0  A424               	btfss	_flags,2,c
 11002  0033A2  D033               	goto	l8173
 11003  0033A4                     u4820:
 11004                           
 11005                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 11006                           ;stkvar	_i @ sp[(-18)+10]
 11007  0033A4  50E1               	movf	fsr1l,w,c
 11008  0033A6  0FF8               	addlw	-8
 11009  0033A8  6ED9               	movwf	fsr2l,c
 11010  0033AA  50E2               	movf	fsr1h,w,c
 11011  0033AC  6EDA               	movwf	fsr2h,c
 11012  0033AE  0EFF               	movlw	255
 11013  0033B0  22DA               	addwfc	fsr2h,f,c
 11014  0033B2  06DE               	decf	postinc2,f,c
 11015  0033B4  0E00               	movlw	0
 11016  0033B6  5ADD               	subwfb	postdec2,f,c
 11017                           
 11018                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 11019                           ;stkvar	_s @ sp[(-18)+12]
 11020  0033B8  0EFA               	movlw	-6
 11021  0033BA  006F FF8C  F03C    	movff	plusw1,btemp
 11022  0033C0  0EFB               	movlw	-5
 11023  0033C2  50E3               	movf	plusw1,w,c
 11024  0033C4  103C               	iorwf	btemp,w,c
 11025  0033C6  A4D8               	btfss	status,2,c
 11026  0033C8  D002               	goto	l8169
 11027  0033CA  0E2B               	movlw	43
 11028  0033CC  D001               	goto	L26
 11029  0033CE                     l8169:
 11030  0033CE  0E2D               	movlw	45
 11031  0033D0                     L26:
 11032  0033D0  6E46               	movwf	btemp+10,c
 11033  0033D2  0E00               	movlw	0
 11034  0033D4  6E47               	movwf	btemp+11,c
 11035                           
 11036                           ;stkvar	_dtoa$3875 @ sp[(-18)+0]
 11037  0033D6  0EEE               	movlw	-18
 11038  0033D8  0060  F11B  FFE3   	movff	btemp+10,plusw1
 11039  0033DE  0EEF               	movlw	-17
 11040  0033E0  0060  F11F  FFE3   	movff	btemp+11,plusw1
 11041                           
 11042                           ;stkvar	_dtoa$3875 @ sp[(-18)+0]
 11043                           ;stkvar	_i @ sp[(-18)+10]
 11044  0033E6  0EF8               	movlw	-8
 11045  0033E8  006F FF8C  F046    	movff	plusw1,btemp+10
 11046  0033EE  0EF9               	movlw	-7
 11047  0033F0  006F FF8C  F047    	movff	plusw1,btemp+11
 11048  0033F6  0EC9               	movlw	low _dbuf
 11049  0033F8  2446               	addwf	btemp+10,w,c
 11050  0033FA  6ED9               	movwf	fsr2l,c
 11051  0033FC  0E01               	movlw	high _dbuf
 11052  0033FE  2047               	addwfc	btemp+11,w,c
 11053  003400  6EDA               	movwf	fsr2h,c
 11054  003402  0EEE               	movlw	-18
 11055  003404  006F FF8F FFDF     	movff	plusw1,indf2
 11056  00340A                     l8173:
 11057                           
 11058                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 11059                           ;stkvar	_w @ sp[(-18)+14]
 11060  00340A  0EFC               	movlw	-4
 11061  00340C  006F FF8F FFE6     	movff	plusw1,postinc1
 11062  003412  006F FF8F FFE6     	movff	plusw1,postinc1
 11063                           
 11064                           ;stkvar	_i @ sp[(-20)+10]
 11065  003418  0EC9               	movlw	low _dbuf
 11066  00341A  6E46               	movwf	btemp+10,c
 11067  00341C  0E01               	movlw	high _dbuf
 11068  00341E  6E47               	movwf	btemp+11,c
 11069  003420  0EF6               	movlw	-10
 11070  003422  50E3               	movf	plusw1,w,c
 11071  003424  2646               	addwf	btemp+10,f,c
 11072  003426  0EF7               	movlw	-9
 11073  003428  50E3               	movf	plusw1,w,c
 11074  00342A  2247               	addwfc	btemp+11,f,c
 11075  00342C  0060  F11B  FFE6   	movff	btemp+10,postinc1
 11076  003432  0060  F11F  FFE6   	movff	btemp+11,postinc1
 11077                           
 11078                           ;stkvar	_fp @ sp[(-22)+-2]
 11079  003438  0EE8               	movlw	-24
 11080  00343A  006F FF8F FFE6     	movff	plusw1,postinc1
 11081  003440  006F FF8F FFE6     	movff	plusw1,postinc1
 11082  003446  EC70  F025         	call	_pad	;wreg free
 11083                           
 11084                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 11085  00344A  0EE4               	movlw	228
 11086  00344C  26E1               	addwf	fsr1l,f,c
 11087  00344E  0EFF               	movlw	255
 11088  003450  22E2               	addwfc	fsr1h,f,c
 11089  003452  0012               	return		;funcret
 11090  003454                     __end_of_dtoa:
 11091                           	opt callstack 0
 11092                           
 11093 ;; *************** function _abs *****************
 11094 ;; Defined at:
 11095 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 11096 ;; Parameters:    Size  Location     Type
 11097 ;;  a               2  [STACK] int 
 11098 ;; Auto vars:     Size  Location     Type
 11099 ;;		None
 11100 ;; Return value:  Size  Location     Type
 11101 ;;                  2  [STACK] int 
 11102 ;; Registers used:
 11103 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 11104 ;; Tracked objects:
 11105 ;;		On entry : 0/1
 11106 ;;		On exit  : 0/0
 11107 ;;		Unchanged: 0/0
 11108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11113 ;;Total ram usage:        0 bytes
 11114 ;; Hardware stack levels used:    1
 11115 ;; Hardware stack levels required when called:    3
 11116 ;; This function calls:
 11117 ;;		Nothing
 11118 ;; This function is called by:
 11119 ;;		_dtoa
 11120 ;; This function uses a reentrant model
 11121 ;;
 11122                           
 11123                           	psect	text44
 11124  005A4E                     __ptext44:
 11125                           	opt callstack 0
 11126  005A4E                     _abs:
 11127                           	opt callstack 23
 11128                           
 11129                           ;stkvar	_a @ sp[(0)+-2]
 11130                           
 11131                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11132                           ;incstack = 0
 11133  005A4E  0EFF               	movlw	-1
 11134  005A50  BEE3               	btfsc	plusw1,7,c
 11135  005A52  D007               	goto	u2470
 11136  005A54  0EFF               	movlw	-1
 11137  005A56  50E3               	movf	plusw1,w,c
 11138  005A58  E112               	bnz	l5589
 11139  005A5A  0EFE               	movlw	-2
 11140  005A5C  04E3               	decf	plusw1,w,c
 11141  005A5E  B0D8               	btfsc	status,0,c
 11142  005A60  D00E               	goto	l5589
 11143  005A62                     u2470:
 11144                           
 11145                           ;stkvar	_a @ sp[(0)+-2]
 11146  005A62  0EFE               	movlw	-2
 11147  005A64  006F FF8C  F03C    	movff	plusw1,btemp
 11148  005A6A  1E3C               	comf	btemp,f,c
 11149  005A6C  0EFF               	movlw	-1
 11150  005A6E  006F FF8C  F03D    	movff	plusw1,btemp+1
 11151  005A74  1E3D               	comf	btemp+1,f,c
 11152  005A76  2A3C               	incf	btemp,f,c
 11153  005A78  B4D8               	btfsc	status,2,c
 11154  005A7A  2A3D               	incf	btemp+1,f,c
 11155  005A7C  D008               	goto	l2602
 11156  005A7E                     l5589:
 11157                           
 11158                           ;stkvar	_a @ sp[(0)+-2]
 11159  005A7E  0EFE               	movlw	-2
 11160  005A80  006F FF8C  F03C    	movff	plusw1,btemp
 11161  005A86  0EFF               	movlw	-1
 11162  005A88  006F FF8C  F03D    	movff	plusw1,btemp+1
 11163  005A8E                     l2602:
 11164                           
 11165                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 11166  005A8E  52E5               	movf	postdec1,f,c
 11167  005A90  52E5               	movf	postdec1,f,c
 11168  005A92  0012               	return		;funcret
 11169  005A94                     __end_of_abs:
 11170                           	opt callstack 0
 11171                           
 11172 ;; *************** function ___aomod *****************
 11173 ;; Defined at:
 11174 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 11175 ;; Parameters:    Size  Location     Type
 11176 ;;  dividend        8  [STACK] long long 
 11177 ;;  divisor         8  [STACK] long long 
 11178 ;; Auto vars:     Size  Location     Type
 11179 ;;  sign            1  [STACK] unsigned char 
 11180 ;;  counter         1  [STACK] unsigned char 
 11181 ;; Return value:  Size  Location     Type
 11182 ;;                  8  [STACK] long long 
 11183 ;; Registers used:
 11184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 11185 ;; Tracked objects:
 11186 ;;		On entry : 0/1
 11187 ;;		On exit  : 0/0
 11188 ;;		Unchanged: 0/0
 11189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11194 ;;Total ram usage:        0 bytes
 11195 ;; Hardware stack levels used:    1
 11196 ;; Hardware stack levels required when called:    3
 11197 ;; This function calls:
 11198 ;;		Nothing
 11199 ;; This function is called by:
 11200 ;;		_dtoa
 11201 ;; This function uses a reentrant model
 11202 ;;
 11203                           
 11204                           	psect	text45
 11205  004710                     __ptext45:
 11206                           	opt callstack 0
 11207  004710                     ___aomod:
 11208                           	opt callstack 0
 11209                           
 11210                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 11211  004710  52E6               	movf	postinc1,f,c
 11212  004712  52E6               	movf	postinc1,f,c
 11213                           
 11214                           ;stkvar	_sign @ sp[(-2)+0]
 11215                           
 11216                           ;incstack = 0
 11217  004714  0EFE               	movlw	-2
 11218  004716  6AE3               	clrf	plusw1,c
 11219                           
 11220                           ;stkvar	_dividend @ sp[(-2)+-8]
 11221  004718  0EFD               	movlw	-3
 11222  00471A  AEE3               	btfss	plusw1,7,c
 11223  00471C  D028               	goto	l5645
 11224                           
 11225                           ;stkvar	_dividend @ sp[(-2)+-8]
 11226                           ;stkvar	_dividend @ sp[(-2)+-8]
 11227  00471E  0EF6               	movlw	-10
 11228  004720  6CE3               	negf	plusw1,c
 11229  004722  0EF7               	movlw	-9
 11230  004724  1EE3               	comf	plusw1,f,c
 11231  004726  0EF8               	movlw	-8
 11232  004728  1EE3               	comf	plusw1,f,c
 11233  00472A  0EF9               	movlw	-7
 11234  00472C  1EE3               	comf	plusw1,f,c
 11235  00472E  0EFA               	movlw	-6
 11236  004730  1EE3               	comf	plusw1,f,c
 11237  004732  0EFB               	movlw	-5
 11238  004734  1EE3               	comf	plusw1,f,c
 11239  004736  0EFC               	movlw	-4
 11240  004738  1EE3               	comf	plusw1,f,c
 11241  00473A  0EFD               	movlw	-3
 11242  00473C  1EE3               	comf	plusw1,f,c
 11243  00473E  E314               	bnc	u2610
 11244  004740  0EF7               	movlw	-9
 11245  004742  2AE3               	incf	plusw1,f,c
 11246  004744  E311               	bnc	u2610
 11247  004746  0EF8               	movlw	-8
 11248  004748  2AE3               	incf	plusw1,f,c
 11249  00474A  E30E               	bnc	u2610
 11250  00474C  0EF9               	movlw	-7
 11251  00474E  2AE3               	incf	plusw1,f,c
 11252  004750  E30B               	bnc	u2610
 11253  004752  0EFA               	movlw	-6
 11254  004754  2AE3               	incf	plusw1,f,c
 11255  004756  E308               	bnc	u2610
 11256  004758  0EFB               	movlw	-5
 11257  00475A  2AE3               	incf	plusw1,f,c
 11258  00475C  E305               	bnc	u2610
 11259  00475E  0EFC               	movlw	-4
 11260  004760  2AE3               	incf	plusw1,f,c
 11261  004762  E302               	bnc	u2610
 11262  004764  0EFD               	movlw	-3
 11263  004766  2AE3               	incf	plusw1,f,c
 11264  004768                     u2610:
 11265                           
 11266                           ;stkvar	_sign @ sp[(-2)+0]
 11267  004768  0EFE               	movlw	-2
 11268  00476A  6AE3               	clrf	plusw1,c
 11269  00476C  2AE3               	incf	plusw1,f,c
 11270  00476E                     l5645:
 11271                           
 11272                           ;stkvar	_divisor @ sp[(-2)+-16]
 11273  00476E  0EF5               	movlw	-11
 11274  004770  AEE3               	btfss	plusw1,7,c
 11275  004772  D025               	goto	u2630
 11276                           
 11277                           ;stkvar	_divisor @ sp[(-2)+-16]
 11278                           ;stkvar	_divisor @ sp[(-2)+-16]
 11279  004774  0EEE               	movlw	-18
 11280  004776  6CE3               	negf	plusw1,c
 11281  004778  0EEF               	movlw	-17
 11282  00477A  1EE3               	comf	plusw1,f,c
 11283  00477C  0EF0               	movlw	-16
 11284  00477E  1EE3               	comf	plusw1,f,c
 11285  004780  0EF1               	movlw	-15
 11286  004782  1EE3               	comf	plusw1,f,c
 11287  004784  0EF2               	movlw	-14
 11288  004786  1EE3               	comf	plusw1,f,c
 11289  004788  0EF3               	movlw	-13
 11290  00478A  1EE3               	comf	plusw1,f,c
 11291  00478C  0EF4               	movlw	-12
 11292  00478E  1EE3               	comf	plusw1,f,c
 11293  004790  0EF5               	movlw	-11
 11294  004792  1EE3               	comf	plusw1,f,c
 11295  004794  E314               	bnc	u2630
 11296  004796  0EEF               	movlw	-17
 11297  004798  2AE3               	incf	plusw1,f,c
 11298  00479A  E311               	bnc	u2630
 11299  00479C  0EF0               	movlw	-16
 11300  00479E  2AE3               	incf	plusw1,f,c
 11301  0047A0  E30E               	bnc	u2630
 11302  0047A2  0EF1               	movlw	-15
 11303  0047A4  2AE3               	incf	plusw1,f,c
 11304  0047A6  E30B               	bnc	u2630
 11305  0047A8  0EF2               	movlw	-14
 11306  0047AA  2AE3               	incf	plusw1,f,c
 11307  0047AC  E308               	bnc	u2630
 11308  0047AE  0EF3               	movlw	-13
 11309  0047B0  2AE3               	incf	plusw1,f,c
 11310  0047B2  E305               	bnc	u2630
 11311  0047B4  0EF4               	movlw	-12
 11312  0047B6  2AE3               	incf	plusw1,f,c
 11313  0047B8  E302               	bnc	u2630
 11314  0047BA  0EF5               	movlw	-11
 11315  0047BC  2AE3               	incf	plusw1,f,c
 11316  0047BE                     u2630:
 11317                           
 11318                           ;stkvar	_divisor @ sp[(-2)+-16]
 11319  0047BE  0EEE               	movlw	-18
 11320  0047C0  50E3               	movf	plusw1,w,c
 11321  0047C2  E116               	bnz	u2640
 11322  0047C4  0EEF               	movlw	-17
 11323  0047C6  50E3               	movf	plusw1,w,c
 11324  0047C8  E113               	bnz	u2640
 11325  0047CA  0EF0               	movlw	-16
 11326  0047CC  50E3               	movf	plusw1,w,c
 11327  0047CE  E110               	bnz	u2640
 11328  0047D0  0EF1               	movlw	-15
 11329  0047D2  50E3               	movf	plusw1,w,c
 11330  0047D4  E10D               	bnz	u2640
 11331  0047D6  0EF2               	movlw	-14
 11332  0047D8  50E3               	movf	plusw1,w,c
 11333  0047DA  E10A               	bnz	u2640
 11334  0047DC  0EF3               	movlw	-13
 11335  0047DE  50E3               	movf	plusw1,w,c
 11336  0047E0  E107               	bnz	u2640
 11337  0047E2  0EF4               	movlw	-12
 11338  0047E4  50E3               	movf	plusw1,w,c
 11339  0047E6  E104               	bnz	u2640
 11340  0047E8  0EF5               	movlw	-11
 11341  0047EA  50E3               	movf	plusw1,w,c
 11342  0047EC  B4D8               	btfsc	status,2,c
 11343  0047EE  D075               	goto	u2670
 11344  0047F0                     u2640:
 11345                           
 11346                           ;stkvar	_counter @ sp[(-2)+1]
 11347  0047F0  0EFF               	movlw	-1
 11348  0047F2  6AE3               	clrf	plusw1,c
 11349  0047F4  D012               	goto	L27
 11350  0047F6                     l5653:
 11351                           
 11352                           ;stkvar	_divisor @ sp[(-2)+-16]
 11353  0047F6  90D8               	bcf	status,0,c
 11354  0047F8  0EEE               	movlw	-18
 11355  0047FA  36E3               	rlcf	plusw1,f,c
 11356  0047FC  0EEF               	movlw	-17
 11357  0047FE  36E3               	rlcf	plusw1,f,c
 11358  004800  0EF0               	movlw	-16
 11359  004802  36E3               	rlcf	plusw1,f,c
 11360  004804  0EF1               	movlw	-15
 11361  004806  36E3               	rlcf	plusw1,f,c
 11362  004808  0EF2               	movlw	-14
 11363  00480A  36E3               	rlcf	plusw1,f,c
 11364  00480C  0EF3               	movlw	-13
 11365  00480E  36E3               	rlcf	plusw1,f,c
 11366  004810  0EF4               	movlw	-12
 11367  004812  36E3               	rlcf	plusw1,f,c
 11368  004814  0EF5               	movlw	-11
 11369  004816  36E3               	rlcf	plusw1,f,c
 11370                           
 11371                           ;stkvar	_counter @ sp[(-2)+1]
 11372  004818  0EFF               	movlw	-1
 11373  00481A                     L27:
 11374  00481A  2AE3               	incf	plusw1,f,c
 11375                           
 11376                           ;stkvar	_divisor @ sp[(-2)+-16]
 11377  00481C  0EF5               	movlw	-11
 11378  00481E  AEE3               	btfss	plusw1,7,c
 11379  004820  D7EA               	goto	l5653
 11380  004822                     u2650:
 11381                           
 11382                           ;stkvar	_divisor @ sp[(-2)+-16]
 11383                           ;stkvar	_dividend @ sp[(-2)+-8]
 11384  004822  50E1               	movf	fsr1l,w,c
 11385  004824  0FF6               	addlw	-10
 11386  004826  6ED9               	movwf	fsr2l,c
 11387  004828  50E2               	movf	fsr1h,w,c
 11388  00482A  6EDA               	movwf	fsr2h,c
 11389  00482C  0EFF               	movlw	255
 11390  00482E  22DA               	addwfc	fsr2h,f,c
 11391  004830  0EEE               	movlw	-18
 11392  004832  50E3               	movf	plusw1,w,c
 11393  004834  5CDE               	subwf	postinc2,w,c
 11394  004836  0EEF               	movlw	-17
 11395  004838  50E3               	movf	plusw1,w,c
 11396  00483A  58DE               	subwfb	postinc2,w,c
 11397  00483C  0EF0               	movlw	-16
 11398  00483E  50E3               	movf	plusw1,w,c
 11399  004840  58DE               	subwfb	postinc2,w,c
 11400  004842  0EF1               	movlw	-15
 11401  004844  50E3               	movf	plusw1,w,c
 11402  004846  58DE               	subwfb	postinc2,w,c
 11403  004848  0EF2               	movlw	-14
 11404  00484A  50E3               	movf	plusw1,w,c
 11405  00484C  58DE               	subwfb	postinc2,w,c
 11406  00484E  0EF3               	movlw	-13
 11407  004850  50E3               	movf	plusw1,w,c
 11408  004852  58DE               	subwfb	postinc2,w,c
 11409  004854  0EF4               	movlw	-12
 11410  004856  50E3               	movf	plusw1,w,c
 11411  004858  58DE               	subwfb	postinc2,w,c
 11412  00485A  0EF5               	movlw	-11
 11413  00485C  50E3               	movf	plusw1,w,c
 11414  00485E  58DE               	subwfb	postinc2,w,c
 11415  004860  A0D8               	btfss	status,0,c
 11416  004862  D01F               	goto	l5661
 11417                           
 11418                           ;stkvar	_divisor @ sp[(-2)+-16]
 11419                           ;stkvar	_dividend @ sp[(-2)+-8]
 11420  004864  50E1               	movf	fsr1l,w,c
 11421  004866  0FF6               	addlw	-10
 11422  004868  6ED9               	movwf	fsr2l,c
 11423  00486A  50E2               	movf	fsr1h,w,c
 11424  00486C  6EDA               	movwf	fsr2h,c
 11425  00486E  0EFF               	movlw	255
 11426  004870  22DA               	addwfc	fsr2h,f,c
 11427  004872  0EEE               	movlw	-18
 11428  004874  50E3               	movf	plusw1,w,c
 11429  004876  5EDE               	subwf	postinc2,f,c
 11430  004878  0EEF               	movlw	-17
 11431  00487A  50E3               	movf	plusw1,w,c
 11432  00487C  5ADE               	subwfb	postinc2,f,c
 11433  00487E  0EF0               	movlw	-16
 11434  004880  50E3               	movf	plusw1,w,c
 11435  004882  5ADE               	subwfb	postinc2,f,c
 11436  004884  0EF1               	movlw	-15
 11437  004886  50E3               	movf	plusw1,w,c
 11438  004888  5ADE               	subwfb	postinc2,f,c
 11439  00488A  0EF2               	movlw	-14
 11440  00488C  50E3               	movf	plusw1,w,c
 11441  00488E  5ADE               	subwfb	postinc2,f,c
 11442  004890  0EF3               	movlw	-13
 11443  004892  50E3               	movf	plusw1,w,c
 11444  004894  5ADE               	subwfb	postinc2,f,c
 11445  004896  0EF4               	movlw	-12
 11446  004898  50E3               	movf	plusw1,w,c
 11447  00489A  5ADE               	subwfb	postinc2,f,c
 11448  00489C  0EF5               	movlw	-11
 11449  00489E  50E3               	movf	plusw1,w,c
 11450  0048A0  5ADE               	subwfb	postinc2,f,c
 11451  0048A2                     l5661:
 11452                           
 11453                           ;stkvar	_divisor @ sp[(-2)+-16]
 11454  0048A2  90D8               	bcf	status,0,c
 11455  0048A4  0EF5               	movlw	-11
 11456  0048A6  32E3               	rrcf	plusw1,f,c
 11457  0048A8  0EF4               	movlw	-12
 11458  0048AA  32E3               	rrcf	plusw1,f,c
 11459  0048AC  0EF3               	movlw	-13
 11460  0048AE  32E3               	rrcf	plusw1,f,c
 11461  0048B0  0EF2               	movlw	-14
 11462  0048B2  32E3               	rrcf	plusw1,f,c
 11463  0048B4  0EF1               	movlw	-15
 11464  0048B6  32E3               	rrcf	plusw1,f,c
 11465  0048B8  0EF0               	movlw	-16
 11466  0048BA  32E3               	rrcf	plusw1,f,c
 11467  0048BC  0EEF               	movlw	-17
 11468  0048BE  32E3               	rrcf	plusw1,f,c
 11469  0048C0  0EEE               	movlw	-18
 11470  0048C2  32E3               	rrcf	plusw1,f,c
 11471                           
 11472                           ;stkvar	_counter @ sp[(-2)+1]
 11473  0048C4  0EFF               	movlw	-1
 11474  0048C6  50E3               	movf	plusw1,w,c
 11475  0048C8  6E3C               	movwf	btemp,c
 11476  0048CA  0E01               	movlw	1
 11477  0048CC  5E3C               	subwf	btemp,f,c
 11478  0048CE  0EFF               	movlw	-1
 11479  0048D0  0060  F0F3  FFE3   	movff	btemp,plusw1
 11480  0048D6  A4D8               	btfss	status,2,c
 11481  0048D8  D7A4               	goto	u2650
 11482  0048DA                     u2670:
 11483                           
 11484                           ;stkvar	_sign @ sp[(-2)+0]
 11485  0048DA  0EFE               	movlw	-2
 11486  0048DC  50E3               	movf	plusw1,w,c
 11487  0048DE  B4D8               	btfsc	status,2,c
 11488  0048E0  D025               	goto	u2690
 11489                           
 11490                           ;stkvar	_dividend @ sp[(-2)+-8]
 11491                           ;stkvar	_dividend @ sp[(-2)+-8]
 11492  0048E2  0EF6               	movlw	-10
 11493  0048E4  6CE3               	negf	plusw1,c
 11494  0048E6  0EF7               	movlw	-9
 11495  0048E8  1EE3               	comf	plusw1,f,c
 11496  0048EA  0EF8               	movlw	-8
 11497  0048EC  1EE3               	comf	plusw1,f,c
 11498  0048EE  0EF9               	movlw	-7
 11499  0048F0  1EE3               	comf	plusw1,f,c
 11500  0048F2  0EFA               	movlw	-6
 11501  0048F4  1EE3               	comf	plusw1,f,c
 11502  0048F6  0EFB               	movlw	-5
 11503  0048F8  1EE3               	comf	plusw1,f,c
 11504  0048FA  0EFC               	movlw	-4
 11505  0048FC  1EE3               	comf	plusw1,f,c
 11506  0048FE  0EFD               	movlw	-3
 11507  004900  1EE3               	comf	plusw1,f,c
 11508  004902  E314               	bnc	u2690
 11509  004904  0EF7               	movlw	-9
 11510  004906  2AE3               	incf	plusw1,f,c
 11511  004908  E311               	bnc	u2690
 11512  00490A  0EF8               	movlw	-8
 11513  00490C  2AE3               	incf	plusw1,f,c
 11514  00490E  E30E               	bnc	u2690
 11515  004910  0EF9               	movlw	-7
 11516  004912  2AE3               	incf	plusw1,f,c
 11517  004914  E30B               	bnc	u2690
 11518  004916  0EFA               	movlw	-6
 11519  004918  2AE3               	incf	plusw1,f,c
 11520  00491A  E308               	bnc	u2690
 11521  00491C  0EFB               	movlw	-5
 11522  00491E  2AE3               	incf	plusw1,f,c
 11523  004920  E305               	bnc	u2690
 11524  004922  0EFC               	movlw	-4
 11525  004924  2AE3               	incf	plusw1,f,c
 11526  004926  E302               	bnc	u2690
 11527  004928  0EFD               	movlw	-3
 11528  00492A  2AE3               	incf	plusw1,f,c
 11529  00492C                     u2690:
 11530                           
 11531                           ;stkvar	_dividend @ sp[(-2)+-8]
 11532  00492C  0EF6               	movlw	246
 11533  00492E  24E1               	addwf	fsr1l,w,c
 11534  004930  6ED9               	movwf	fsr2l,c
 11535  004932  0EFF               	movlw	255
 11536  004934  20E2               	addwfc	fsr1h,w,c
 11537  004936  6EDA               	movwf	fsr2h,c
 11538                           
 11539                           ;stkvar	?___aomod @ sp[(-2)+-8]
 11540  004938  0E08               	movlw	8
 11541  00493A  6E3C               	movwf	btemp,c
 11542  00493C  0EF6               	movlw	-10
 11543  00493E                     us270999:
 11544  00493E  006F FF7B FFE3     	movff	postinc2,plusw1
 11545  004944  28E8               	incf	wreg,w,c
 11546  004946  2E3C               	decfsz	btemp,f,c
 11547  004948  D7FA               	bra	us270999
 11548                           
 11549                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 11550  00494A  52E5               	movf	postdec1,f,c
 11551  00494C  52E5               	movf	postdec1,f,c
 11552  00494E  0012               	return		;funcret
 11553  004950                     __end_of___aomod:
 11554                           	opt callstack 0
 11555                           
 11556 ;; *************** function ___aodiv *****************
 11557 ;; Defined at:
 11558 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 11559 ;; Parameters:    Size  Location     Type
 11560 ;;  dividend        8  [STACK] long long 
 11561 ;;  divisor         8  [STACK] long long 
 11562 ;; Auto vars:     Size  Location     Type
 11563 ;;  quotient        8  [STACK] long long 
 11564 ;;  sign            1  [STACK] unsigned char 
 11565 ;;  counter         1  [STACK] unsigned char 
 11566 ;; Return value:  Size  Location     Type
 11567 ;;                  8  [STACK] long long 
 11568 ;; Registers used:
 11569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 11570 ;; Tracked objects:
 11571 ;;		On entry : 0/1
 11572 ;;		On exit  : 0/0
 11573 ;;		Unchanged: 0/0
 11574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11579 ;;Total ram usage:        0 bytes
 11580 ;; Hardware stack levels used:    1
 11581 ;; Hardware stack levels required when called:    3
 11582 ;; This function calls:
 11583 ;;		Nothing
 11584 ;; This function is called by:
 11585 ;;		_dtoa
 11586 ;; This function uses a reentrant model
 11587 ;;
 11588                           
 11589                           	psect	text46
 11590  003FE6                     __ptext46:
 11591                           	opt callstack 0
 11592  003FE6                     ___aodiv:
 11593                           	opt callstack 0
 11594                           
 11595                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 11596  003FE6  0E0A               	movlw	10
 11597  003FE8  26E1               	addwf	fsr1l,f,c
 11598  003FEA  0E00               	movlw	0
 11599  003FEC  22E2               	addwfc	fsr1h,f,c
 11600                           
 11601                           ;stkvar	_sign @ sp[(-10)+8]
 11602                           
 11603                           ;incstack = 0
 11604  003FEE  0EFE               	movlw	-2
 11605  003FF0  6AE3               	clrf	plusw1,c
 11606                           
 11607                           ;stkvar	_divisor @ sp[(-10)+-16]
 11608  003FF2  0EED               	movlw	-19
 11609  003FF4  AEE3               	btfss	plusw1,7,c
 11610  003FF6  D028               	goto	l5601
 11611                           
 11612                           ;stkvar	_divisor @ sp[(-10)+-16]
 11613                           ;stkvar	_divisor @ sp[(-10)+-16]
 11614  003FF8  0EE6               	movlw	-26
 11615  003FFA  6CE3               	negf	plusw1,c
 11616  003FFC  0EE7               	movlw	-25
 11617  003FFE  1EE3               	comf	plusw1,f,c
 11618  004000  0EE8               	movlw	-24
 11619  004002  1EE3               	comf	plusw1,f,c
 11620  004004  0EE9               	movlw	-23
 11621  004006  1EE3               	comf	plusw1,f,c
 11622  004008  0EEA               	movlw	-22
 11623  00400A  1EE3               	comf	plusw1,f,c
 11624  00400C  0EEB               	movlw	-21
 11625  00400E  1EE3               	comf	plusw1,f,c
 11626  004010  0EEC               	movlw	-20
 11627  004012  1EE3               	comf	plusw1,f,c
 11628  004014  0EED               	movlw	-19
 11629  004016  1EE3               	comf	plusw1,f,c
 11630  004018  E314               	bnc	u2490
 11631  00401A  0EE7               	movlw	-25
 11632  00401C  2AE3               	incf	plusw1,f,c
 11633  00401E  E311               	bnc	u2490
 11634  004020  0EE8               	movlw	-24
 11635  004022  2AE3               	incf	plusw1,f,c
 11636  004024  E30E               	bnc	u2490
 11637  004026  0EE9               	movlw	-23
 11638  004028  2AE3               	incf	plusw1,f,c
 11639  00402A  E30B               	bnc	u2490
 11640  00402C  0EEA               	movlw	-22
 11641  00402E  2AE3               	incf	plusw1,f,c
 11642  004030  E308               	bnc	u2490
 11643  004032  0EEB               	movlw	-21
 11644  004034  2AE3               	incf	plusw1,f,c
 11645  004036  E305               	bnc	u2490
 11646  004038  0EEC               	movlw	-20
 11647  00403A  2AE3               	incf	plusw1,f,c
 11648  00403C  E302               	bnc	u2490
 11649  00403E  0EED               	movlw	-19
 11650  004040  2AE3               	incf	plusw1,f,c
 11651  004042                     u2490:
 11652                           
 11653                           ;stkvar	_sign @ sp[(-10)+8]
 11654  004042  0EFE               	movlw	-2
 11655  004044  6AE3               	clrf	plusw1,c
 11656  004046  2AE3               	incf	plusw1,f,c
 11657  004048                     l5601:
 11658                           
 11659                           ;stkvar	_dividend @ sp[(-10)+-8]
 11660  004048  0EF5               	movlw	-11
 11661  00404A  AEE3               	btfss	plusw1,7,c
 11662  00404C  D027               	goto	l5607
 11663                           
 11664                           ;stkvar	_dividend @ sp[(-10)+-8]
 11665                           ;stkvar	_dividend @ sp[(-10)+-8]
 11666  00404E  0EEE               	movlw	-18
 11667  004050  6CE3               	negf	plusw1,c
 11668  004052  0EEF               	movlw	-17
 11669  004054  1EE3               	comf	plusw1,f,c
 11670  004056  0EF0               	movlw	-16
 11671  004058  1EE3               	comf	plusw1,f,c
 11672  00405A  0EF1               	movlw	-15
 11673  00405C  1EE3               	comf	plusw1,f,c
 11674  00405E  0EF2               	movlw	-14
 11675  004060  1EE3               	comf	plusw1,f,c
 11676  004062  0EF3               	movlw	-13
 11677  004064  1EE3               	comf	plusw1,f,c
 11678  004066  0EF4               	movlw	-12
 11679  004068  1EE3               	comf	plusw1,f,c
 11680  00406A  0EF5               	movlw	-11
 11681  00406C  1EE3               	comf	plusw1,f,c
 11682  00406E  E314               	bnc	u2510
 11683  004070  0EEF               	movlw	-17
 11684  004072  2AE3               	incf	plusw1,f,c
 11685  004074  E311               	bnc	u2510
 11686  004076  0EF0               	movlw	-16
 11687  004078  2AE3               	incf	plusw1,f,c
 11688  00407A  E30E               	bnc	u2510
 11689  00407C  0EF1               	movlw	-15
 11690  00407E  2AE3               	incf	plusw1,f,c
 11691  004080  E30B               	bnc	u2510
 11692  004082  0EF2               	movlw	-14
 11693  004084  2AE3               	incf	plusw1,f,c
 11694  004086  E308               	bnc	u2510
 11695  004088  0EF3               	movlw	-13
 11696  00408A  2AE3               	incf	plusw1,f,c
 11697  00408C  E305               	bnc	u2510
 11698  00408E  0EF4               	movlw	-12
 11699  004090  2AE3               	incf	plusw1,f,c
 11700  004092  E302               	bnc	u2510
 11701  004094  0EF5               	movlw	-11
 11702  004096  2AE3               	incf	plusw1,f,c
 11703  004098                     u2510:
 11704                           
 11705                           ;stkvar	_sign @ sp[(-10)+8]
 11706  004098  0EFE               	movlw	-2
 11707  00409A  70E3               	btg	plusw1,0,c
 11708  00409C                     l5607:
 11709                           
 11710                           ;stkvar	_quotient @ sp[(-10)+0]
 11711  00409C  0E07               	movlw	7
 11712  00409E  6E3C               	movwf	btemp,c
 11713  0040A0  0EF6               	movlw	-10
 11714  0040A2                     u2521:
 11715  0040A2  6AE3               	clrf	plusw1,c
 11716  0040A4  2AE8               	incf	wreg,f,c
 11717  0040A6  063C               	decf	btemp,f,c
 11718  0040A8  E2FC               	bc	u2521
 11719                           
 11720                           ;stkvar	_divisor @ sp[(-10)+-16]
 11721  0040AA  0EE6               	movlw	-26
 11722  0040AC  50E3               	movf	plusw1,w,c
 11723  0040AE  E116               	bnz	u2530
 11724  0040B0  0EE7               	movlw	-25
 11725  0040B2  50E3               	movf	plusw1,w,c
 11726  0040B4  E113               	bnz	u2530
 11727  0040B6  0EE8               	movlw	-24
 11728  0040B8  50E3               	movf	plusw1,w,c
 11729  0040BA  E110               	bnz	u2530
 11730  0040BC  0EE9               	movlw	-23
 11731  0040BE  50E3               	movf	plusw1,w,c
 11732  0040C0  E10D               	bnz	u2530
 11733  0040C2  0EEA               	movlw	-22
 11734  0040C4  50E3               	movf	plusw1,w,c
 11735  0040C6  E10A               	bnz	u2530
 11736  0040C8  0EEB               	movlw	-21
 11737  0040CA  50E3               	movf	plusw1,w,c
 11738  0040CC  E107               	bnz	u2530
 11739  0040CE  0EEC               	movlw	-20
 11740  0040D0  50E3               	movf	plusw1,w,c
 11741  0040D2  E104               	bnz	u2530
 11742  0040D4  0EED               	movlw	-19
 11743  0040D6  50E3               	movf	plusw1,w,c
 11744  0040D8  B4D8               	btfsc	status,2,c
 11745  0040DA  D088               	goto	u2560
 11746  0040DC                     u2530:
 11747                           
 11748                           ;stkvar	_counter @ sp[(-10)+9]
 11749  0040DC  0EFF               	movlw	-1
 11750  0040DE  6AE3               	clrf	plusw1,c
 11751  0040E0  D012               	goto	L28
 11752  0040E2                     l5613:
 11753                           
 11754                           ;stkvar	_divisor @ sp[(-10)+-16]
 11755  0040E2  90D8               	bcf	status,0,c
 11756  0040E4  0EE6               	movlw	-26
 11757  0040E6  36E3               	rlcf	plusw1,f,c
 11758  0040E8  0EE7               	movlw	-25
 11759  0040EA  36E3               	rlcf	plusw1,f,c
 11760  0040EC  0EE8               	movlw	-24
 11761  0040EE  36E3               	rlcf	plusw1,f,c
 11762  0040F0  0EE9               	movlw	-23
 11763  0040F2  36E3               	rlcf	plusw1,f,c
 11764  0040F4  0EEA               	movlw	-22
 11765  0040F6  36E3               	rlcf	plusw1,f,c
 11766  0040F8  0EEB               	movlw	-21
 11767  0040FA  36E3               	rlcf	plusw1,f,c
 11768  0040FC  0EEC               	movlw	-20
 11769  0040FE  36E3               	rlcf	plusw1,f,c
 11770  004100  0EED               	movlw	-19
 11771  004102  36E3               	rlcf	plusw1,f,c
 11772                           
 11773                           ;stkvar	_counter @ sp[(-10)+9]
 11774  004104  0EFF               	movlw	-1
 11775  004106                     L28:
 11776  004106  2AE3               	incf	plusw1,f,c
 11777                           
 11778                           ;stkvar	_divisor @ sp[(-10)+-16]
 11779  004108  0EED               	movlw	-19
 11780  00410A  AEE3               	btfss	plusw1,7,c
 11781  00410C  D7EA               	goto	l5613
 11782  00410E                     u2540:
 11783                           
 11784                           ;stkvar	_quotient @ sp[(-10)+0]
 11785  00410E  90D8               	bcf	status,0,c
 11786  004110  0EF6               	movlw	-10
 11787  004112  36E3               	rlcf	plusw1,f,c
 11788  004114  0EF7               	movlw	-9
 11789  004116  36E3               	rlcf	plusw1,f,c
 11790  004118  0EF8               	movlw	-8
 11791  00411A  36E3               	rlcf	plusw1,f,c
 11792  00411C  0EF9               	movlw	-7
 11793  00411E  36E3               	rlcf	plusw1,f,c
 11794  004120  0EFA               	movlw	-6
 11795  004122  36E3               	rlcf	plusw1,f,c
 11796  004124  0EFB               	movlw	-5
 11797  004126  36E3               	rlcf	plusw1,f,c
 11798  004128  0EFC               	movlw	-4
 11799  00412A  36E3               	rlcf	plusw1,f,c
 11800  00412C  0EFD               	movlw	-3
 11801  00412E  36E3               	rlcf	plusw1,f,c
 11802                           
 11803                           ;stkvar	_divisor @ sp[(-10)+-16]
 11804                           ;stkvar	_dividend @ sp[(-10)+-8]
 11805  004130  50E1               	movf	fsr1l,w,c
 11806  004132  0FEE               	addlw	-18
 11807  004134  6ED9               	movwf	fsr2l,c
 11808  004136  50E2               	movf	fsr1h,w,c
 11809  004138  6EDA               	movwf	fsr2h,c
 11810  00413A  0EFF               	movlw	255
 11811  00413C  22DA               	addwfc	fsr2h,f,c
 11812  00413E  0EE6               	movlw	-26
 11813  004140  50E3               	movf	plusw1,w,c
 11814  004142  5CDE               	subwf	postinc2,w,c
 11815  004144  0EE7               	movlw	-25
 11816  004146  50E3               	movf	plusw1,w,c
 11817  004148  58DE               	subwfb	postinc2,w,c
 11818  00414A  0EE8               	movlw	-24
 11819  00414C  50E3               	movf	plusw1,w,c
 11820  00414E  58DE               	subwfb	postinc2,w,c
 11821  004150  0EE9               	movlw	-23
 11822  004152  50E3               	movf	plusw1,w,c
 11823  004154  58DE               	subwfb	postinc2,w,c
 11824  004156  0EEA               	movlw	-22
 11825  004158  50E3               	movf	plusw1,w,c
 11826  00415A  58DE               	subwfb	postinc2,w,c
 11827  00415C  0EEB               	movlw	-21
 11828  00415E  50E3               	movf	plusw1,w,c
 11829  004160  58DE               	subwfb	postinc2,w,c
 11830  004162  0EEC               	movlw	-20
 11831  004164  50E3               	movf	plusw1,w,c
 11832  004166  58DE               	subwfb	postinc2,w,c
 11833  004168  0EED               	movlw	-19
 11834  00416A  50E3               	movf	plusw1,w,c
 11835  00416C  58DE               	subwfb	postinc2,w,c
 11836  00416E  A0D8               	btfss	status,0,c
 11837  004170  D021               	goto	l5625
 11838                           
 11839                           ;stkvar	_divisor @ sp[(-10)+-16]
 11840                           ;stkvar	_dividend @ sp[(-10)+-8]
 11841  004172  50E1               	movf	fsr1l,w,c
 11842  004174  0FEE               	addlw	-18
 11843  004176  6ED9               	movwf	fsr2l,c
 11844  004178  50E2               	movf	fsr1h,w,c
 11845  00417A  6EDA               	movwf	fsr2h,c
 11846  00417C  0EFF               	movlw	255
 11847  00417E  22DA               	addwfc	fsr2h,f,c
 11848  004180  0EE6               	movlw	-26
 11849  004182  50E3               	movf	plusw1,w,c
 11850  004184  5EDE               	subwf	postinc2,f,c
 11851  004186  0EE7               	movlw	-25
 11852  004188  50E3               	movf	plusw1,w,c
 11853  00418A  5ADE               	subwfb	postinc2,f,c
 11854  00418C  0EE8               	movlw	-24
 11855  00418E  50E3               	movf	plusw1,w,c
 11856  004190  5ADE               	subwfb	postinc2,f,c
 11857  004192  0EE9               	movlw	-23
 11858  004194  50E3               	movf	plusw1,w,c
 11859  004196  5ADE               	subwfb	postinc2,f,c
 11860  004198  0EEA               	movlw	-22
 11861  00419A  50E3               	movf	plusw1,w,c
 11862  00419C  5ADE               	subwfb	postinc2,f,c
 11863  00419E  0EEB               	movlw	-21
 11864  0041A0  50E3               	movf	plusw1,w,c
 11865  0041A2  5ADE               	subwfb	postinc2,f,c
 11866  0041A4  0EEC               	movlw	-20
 11867  0041A6  50E3               	movf	plusw1,w,c
 11868  0041A8  5ADE               	subwfb	postinc2,f,c
 11869  0041AA  0EED               	movlw	-19
 11870  0041AC  50E3               	movf	plusw1,w,c
 11871  0041AE  5ADE               	subwfb	postinc2,f,c
 11872                           
 11873                           ;stkvar	_quotient @ sp[(-10)+0]
 11874  0041B0  0EF6               	movlw	-10
 11875  0041B2  80E3               	bsf	plusw1,0,c
 11876  0041B4                     l5625:
 11877                           
 11878                           ;stkvar	_divisor @ sp[(-10)+-16]
 11879  0041B4  90D8               	bcf	status,0,c
 11880  0041B6  0EED               	movlw	-19
 11881  0041B8  32E3               	rrcf	plusw1,f,c
 11882  0041BA  0EEC               	movlw	-20
 11883  0041BC  32E3               	rrcf	plusw1,f,c
 11884  0041BE  0EEB               	movlw	-21
 11885  0041C0  32E3               	rrcf	plusw1,f,c
 11886  0041C2  0EEA               	movlw	-22
 11887  0041C4  32E3               	rrcf	plusw1,f,c
 11888  0041C6  0EE9               	movlw	-23
 11889  0041C8  32E3               	rrcf	plusw1,f,c
 11890  0041CA  0EE8               	movlw	-24
 11891  0041CC  32E3               	rrcf	plusw1,f,c
 11892  0041CE  0EE7               	movlw	-25
 11893  0041D0  32E3               	rrcf	plusw1,f,c
 11894  0041D2  0EE6               	movlw	-26
 11895  0041D4  32E3               	rrcf	plusw1,f,c
 11896                           
 11897                           ;stkvar	_counter @ sp[(-10)+9]
 11898  0041D6  0EFF               	movlw	-1
 11899  0041D8  50E3               	movf	plusw1,w,c
 11900  0041DA  6E3C               	movwf	btemp,c
 11901  0041DC  0E01               	movlw	1
 11902  0041DE  5E3C               	subwf	btemp,f,c
 11903  0041E0  0EFF               	movlw	-1
 11904  0041E2  0060  F0F3  FFE3   	movff	btemp,plusw1
 11905  0041E8  A4D8               	btfss	status,2,c
 11906  0041EA  D791               	goto	u2540
 11907  0041EC                     u2560:
 11908                           
 11909                           ;stkvar	_sign @ sp[(-10)+8]
 11910  0041EC  0EFE               	movlw	-2
 11911  0041EE  50E3               	movf	plusw1,w,c
 11912  0041F0  B4D8               	btfsc	status,2,c
 11913  0041F2  D025               	goto	u2580
 11914                           
 11915                           ;stkvar	_quotient @ sp[(-10)+0]
 11916                           ;stkvar	_quotient @ sp[(-10)+0]
 11917  0041F4  0EF6               	movlw	-10
 11918  0041F6  6CE3               	negf	plusw1,c
 11919  0041F8  0EF7               	movlw	-9
 11920  0041FA  1EE3               	comf	plusw1,f,c
 11921  0041FC  0EF8               	movlw	-8
 11922  0041FE  1EE3               	comf	plusw1,f,c
 11923  004200  0EF9               	movlw	-7
 11924  004202  1EE3               	comf	plusw1,f,c
 11925  004204  0EFA               	movlw	-6
 11926  004206  1EE3               	comf	plusw1,f,c
 11927  004208  0EFB               	movlw	-5
 11928  00420A  1EE3               	comf	plusw1,f,c
 11929  00420C  0EFC               	movlw	-4
 11930  00420E  1EE3               	comf	plusw1,f,c
 11931  004210  0EFD               	movlw	-3
 11932  004212  1EE3               	comf	plusw1,f,c
 11933  004214  E314               	bnc	u2580
 11934  004216  0EF7               	movlw	-9
 11935  004218  2AE3               	incf	plusw1,f,c
 11936  00421A  E311               	bnc	u2580
 11937  00421C  0EF8               	movlw	-8
 11938  00421E  2AE3               	incf	plusw1,f,c
 11939  004220  E30E               	bnc	u2580
 11940  004222  0EF9               	movlw	-7
 11941  004224  2AE3               	incf	plusw1,f,c
 11942  004226  E30B               	bnc	u2580
 11943  004228  0EFA               	movlw	-6
 11944  00422A  2AE3               	incf	plusw1,f,c
 11945  00422C  E308               	bnc	u2580
 11946  00422E  0EFB               	movlw	-5
 11947  004230  2AE3               	incf	plusw1,f,c
 11948  004232  E305               	bnc	u2580
 11949  004234  0EFC               	movlw	-4
 11950  004236  2AE3               	incf	plusw1,f,c
 11951  004238  E302               	bnc	u2580
 11952  00423A  0EFD               	movlw	-3
 11953  00423C  2AE3               	incf	plusw1,f,c
 11954  00423E                     u2580:
 11955                           
 11956                           ;stkvar	_quotient @ sp[(-10)+0]
 11957  00423E  0EF6               	movlw	246
 11958  004240  24E1               	addwf	fsr1l,w,c
 11959  004242  6ED9               	movwf	fsr2l,c
 11960  004244  0EFF               	movlw	255
 11961  004246  20E2               	addwfc	fsr1h,w,c
 11962  004248  6EDA               	movwf	fsr2h,c
 11963                           
 11964                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 11965  00424A  0E08               	movlw	8
 11966  00424C  6E3C               	movwf	btemp,c
 11967  00424E  0EEE               	movlw	-18
 11968  004250                     us259999:
 11969  004250  006F FF7B FFE3     	movff	postinc2,plusw1
 11970  004256  28E8               	incf	wreg,w,c
 11971  004258  2E3C               	decfsz	btemp,f,c
 11972  00425A  D7FA               	bra	us259999
 11973                           
 11974                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 11975  00425C  0EF6               	movlw	246
 11976  00425E  26E1               	addwf	fsr1l,f,c
 11977  004260  0EFF               	movlw	255
 11978  004262  22E2               	addwfc	fsr1h,f,c
 11979  004264  0012               	return		;funcret
 11980  004266                     __end_of___aodiv:
 11981                           	opt callstack 0
 11982                           
 11983 ;; *************** function _ctoa *****************
 11984 ;; Defined at:
 11985 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11986 ;; Parameters:    Size  Location     Type
 11987 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11988 ;;		 -> f(5), NULL(0), 
 11989 ;;  c               1  [STACK] unsigned char 
 11990 ;; Auto vars:     Size  Location     Type
 11991 ;;  w               2  [STACK] int 
 11992 ;;  l               2    0        int 
 11993 ;; Return value:  Size  Location     Type
 11994 ;;                  2  [STACK] int 
 11995 ;; Registers used:
 11996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11997 ;; Tracked objects:
 11998 ;;		On entry : 0/0
 11999 ;;		On exit  : 0/0
 12000 ;;		Unchanged: 0/0
 12001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12006 ;;Total ram usage:        0 bytes
 12007 ;; Hardware stack levels used:    1
 12008 ;; Hardware stack levels required when called:    8
 12009 ;; This function calls:
 12010 ;;		_pad
 12011 ;; This function is called by:
 12012 ;;		_vfpfcnvrt
 12013 ;; This function uses a reentrant model
 12014 ;;
 12015                           
 12016                           	psect	text47
 12017  00562E                     __ptext47:
 12018                           	opt callstack 0
 12019  00562E                     _ctoa:
 12020                           	opt callstack 0
 12021                           
 12022                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12023  00562E  52E6               	movf	postinc1,f,c
 12024  005630  52E6               	movf	postinc1,f,c
 12025                           
 12026                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 12027                           
 12028                           ;incstack = 0
 12029  005632  5020               	movf	_width,w,c
 12030  005634  1021               	iorwf	_width+1,w,c
 12031  005636  A4D8               	btfss	status,2,c
 12032  005638  D009               	goto	l8101
 12033                           
 12034                           ;stkvar	_w @ sp[(-2)+0]
 12035  00563A  0EFE               	movlw	-2
 12036  00563C  0060  F083  FFE3   	movff	_width,plusw1
 12037  005642  0EFF               	movlw	-1
 12038  005644  0060  F087  FFE3   	movff	_width+1,plusw1
 12039  00564A  D016               	goto	l8103
 12040  00564C                     l8101:
 12041  00564C  0EFF               	movlw	255
 12042  00564E  6E46               	movwf	btemp+10,c
 12043  005650  0EFF               	movlw	255
 12044  005652  6E47               	movwf	btemp+11,c
 12045  005654  0060  F080  F044   	movff	_width,btemp+8
 12046  00565A  0060  F084  F045   	movff	_width+1,btemp+9
 12047  005660  5046               	movf	btemp+10,w,c
 12048  005662  2644               	addwf	btemp+8,f,c
 12049  005664  5047               	movf	btemp+11,w,c
 12050  005666  2245               	addwfc	btemp+9,f,c
 12051                           
 12052                           ;stkvar	_w @ sp[(-2)+0]
 12053  005668  0EFE               	movlw	-2
 12054  00566A  0060  F113  FFE3   	movff	btemp+8,plusw1
 12055  005670  0EFF               	movlw	-1
 12056  005672  0060  F117  FFE3   	movff	btemp+9,plusw1
 12057  005678                     l8103:
 12058                           
 12059                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 12060                           ;stkvar	_c @ sp[(-2)+-3]
 12061  005678  0EFB               	movlw	-5
 12062  00567A  006F FF8C  F1C9    	movff	plusw1,_dbuf
 12063                           
 12064                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 12065  005680  0101               	movlb	1	; () banked
 12066  005682  6BCA               	clrf	(_dbuf+1)& (0+255),b
 12067                           
 12068                           ; BSR set to: 1
 12069                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 12070                           ;stkvar	_w @ sp[(-2)+0]
 12071  005684  0EFE               	movlw	-2
 12072  005686  006F FF8F FFE6     	movff	plusw1,postinc1
 12073  00568C  006F FF8F FFE6     	movff	plusw1,postinc1
 12074  005692  0EC9               	movlw	low _dbuf
 12075  005694  6EE6               	movwf	postinc1,c
 12076  005696  0E01               	movlw	high _dbuf
 12077  005698  6EE6               	movwf	postinc1,c
 12078                           
 12079                           ;stkvar	_fp @ sp[(-6)+-2]
 12080  00569A  0EF8               	movlw	-8
 12081  00569C  006F FF8F FFE6     	movff	plusw1,postinc1
 12082  0056A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12083  0056A8  EC70  F025         	call	_pad	;wreg free
 12084                           
 12085                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 12086  0056AC  0EFB               	movlw	251
 12087  0056AE  26E1               	addwf	fsr1l,f,c
 12088  0056B0  0EFF               	movlw	255
 12089  0056B2  22E2               	addwfc	fsr1h,f,c
 12090  0056B4  0012               	return		;funcret
 12091  0056B6                     __end_of_ctoa:
 12092                           	opt callstack 0
 12093                           
 12094 ;; *************** function _pad *****************
 12095 ;; Defined at:
 12096 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 12097 ;; Parameters:    Size  Location     Type
 12098 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12099 ;;		 -> f(5), NULL(0), 
 12100 ;;  buf             2  [STACK] PTR unsigned char 
 12101 ;;		 -> dbuf(32), 
 12102 ;;  p               2  [STACK] int 
 12103 ;; Auto vars:     Size  Location     Type
 12104 ;;  w               2  [STACK] int 
 12105 ;;  i               2  [STACK] int 
 12106 ;; Return value:  Size  Location     Type
 12107 ;;                  2  [STACK] int 
 12108 ;; Registers used:
 12109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12110 ;; Tracked objects:
 12111 ;;		On entry : 0/1
 12112 ;;		On exit  : 0/0
 12113 ;;		Unchanged: 0/0
 12114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12119 ;;Total ram usage:        0 bytes
 12120 ;; Hardware stack levels used:    1
 12121 ;; Hardware stack levels required when called:    7
 12122 ;; This function calls:
 12123 ;;		_fputc
 12124 ;;		_fputs
 12125 ;;		_strlen
 12126 ;; This function is called by:
 12127 ;;		_ctoa
 12128 ;;		_dtoa
 12129 ;; This function uses a reentrant model
 12130 ;;
 12131                           
 12132                           	psect	text48
 12133  004AE0                     __ptext48:
 12134                           	opt callstack 0
 12135  004AE0                     _pad:
 12136                           	opt callstack 0
 12137                           
 12138                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12139  004AE0  52E6               	movf	postinc1,f,c
 12140  004AE2  52E6               	movf	postinc1,f,c
 12141  004AE4  52E6               	movf	postinc1,f,c
 12142  004AE6  52E6               	movf	postinc1,f,c
 12143                           
 12144                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 12145                           
 12146                           ;incstack = 0
 12147  004AE8  A024               	btfss	_flags,0,c
 12148  004AEA  D010               	goto	l8079
 12149                           
 12150                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 12151                           ;stkvar	_fp @ sp[(-4)+-2]
 12152  004AEC  0EFA               	movlw	-6
 12153  004AEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12154  004AF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12155                           
 12156                           ;stkvar	_buf @ sp[(-6)+-4]
 12157  004AFA  0EF6               	movlw	-10
 12158  004AFC  006F FF8F FFE6     	movff	plusw1,postinc1
 12159  004B02  006F FF8F FFE6     	movff	plusw1,postinc1
 12160  004B08  EC82  F02A         	call	_fputs	;wreg free
 12161  004B0C                     l8079:
 12162                           
 12163                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 12164                           ;stkvar	_p @ sp[(-4)+-6]
 12165  004B0C  0EF7               	movlw	-9
 12166  004B0E  BEE3               	btfsc	plusw1,7,c
 12167  004B10  D011               	goto	l8083
 12168                           
 12169                           ;stkvar	_p @ sp[(-4)+-6]
 12170                           ;stkvar	_w @ sp[(-4)+0]
 12171  004B12  0EF6               	movlw	-10
 12172  004B14  006F FF8C  F03C    	movff	plusw1,btemp
 12173  004B1A  0EFC               	movlw	-4
 12174  004B1C  0060  F0F3  FFE3   	movff	btemp,plusw1
 12175  004B22  0EF7               	movlw	-9
 12176  004B24  006F FF8C  F03C    	movff	plusw1,btemp
 12177  004B2A  0EFD               	movlw	-3
 12178  004B2C  0060  F0F3  FFE3   	movff	btemp,plusw1
 12179  004B32  D004               	goto	l1841
 12180  004B34                     l8083:
 12181                           
 12182                           ;stkvar	_w @ sp[(-4)+0]
 12183  004B34  0EFC               	movlw	-4
 12184  004B36  6AE3               	clrf	plusw1,c
 12185  004B38  0EFD               	movlw	-3
 12186  004B3A  6AE3               	clrf	plusw1,c
 12187  004B3C                     l1841:
 12188                           
 12189                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 12190                           ;stkvar	_i @ sp[(-4)+2]
 12191  004B3C  0EFE               	movlw	-2
 12192  004B3E  6AE3               	clrf	plusw1,c
 12193  004B40  0EFF               	movlw	-1
 12194  004B42  6AE3               	clrf	plusw1,c
 12195                           
 12196                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 12197  004B44  D01E               	goto	l8089
 12198  004B46                     l8085:
 12199                           
 12200                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 12201                           ;stkvar	_fp @ sp[(-4)+-2]
 12202  004B46  0EFA               	movlw	-6
 12203  004B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12204  004B4E  006F FF8F FFE6     	movff	plusw1,postinc1
 12205  004B54  0E20               	movlw	32
 12206  004B56  6EE6               	movwf	postinc1,c
 12207  004B58  0E00               	movlw	0
 12208  004B5A  6EE6               	movwf	postinc1,c
 12209  004B5C  ECFA  F025         	call	_fputc	;wreg free
 12210                           
 12211                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 12212                           ;stkvar	_i @ sp[(-4)+2]
 12213  004B60  0EFE               	movlw	-2
 12214  004B62  50E3               	movf	plusw1,w,c
 12215  004B64  0F01               	addlw	1
 12216  004B66  6E3C               	movwf	btemp,c
 12217  004B68  0EFE               	movlw	-2
 12218  004B6A  0060  F0F3  FFE3   	movff	btemp,plusw1
 12219  004B70  6A3C               	clrf	btemp,c
 12220  004B72  0EFF               	movlw	-1
 12221  004B74  50E3               	movf	plusw1,w,c
 12222  004B76  203C               	addwfc	btemp,w,c
 12223  004B78  6E3C               	movwf	btemp,c
 12224  004B7A  0EFF               	movlw	-1
 12225  004B7C  0060  F0F3  FFE3   	movff	btemp,plusw1
 12226  004B82                     l8089:
 12227                           
 12228                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 12229                           ;stkvar	_w @ sp[(-4)+0]
 12230                           ;stkvar	_i @ sp[(-4)+2]
 12231  004B82  50E1               	movf	fsr1l,w,c
 12232  004B84  0FFE               	addlw	-2
 12233  004B86  6ED9               	movwf	fsr2l,c
 12234  004B88  50E2               	movf	fsr1h,w,c
 12235  004B8A  6EDA               	movwf	fsr2h,c
 12236  004B8C  0EFF               	movlw	255
 12237  004B8E  22DA               	addwfc	fsr2h,f,c
 12238  004B90  0EFC               	movlw	-4
 12239  004B92  50E3               	movf	plusw1,w,c
 12240  004B94  5CDE               	subwf	postinc2,w,c
 12241  004B96  50DE               	movf	postinc2,w,c
 12242  004B98  0A80               	xorlw	128
 12243  004B9A  6E3C               	movwf	btemp,c
 12244  004B9C  0EFD               	movlw	-3
 12245  004B9E  50E3               	movf	plusw1,w,c
 12246  004BA0  0A80               	xorlw	128
 12247  004BA2  583C               	subwfb	btemp,w,c
 12248  004BA4  A0D8               	btfss	status,0,c
 12249  004BA6  D7CF               	goto	l8085
 12250                           
 12251                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 12252  004BA8  B024               	btfsc	_flags,0,c
 12253  004BAA  D010               	goto	l8093
 12254                           
 12255                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 12256                           ;stkvar	_fp @ sp[(-4)+-2]
 12257  004BAC  0EFA               	movlw	-6
 12258  004BAE  006F FF8F FFE6     	movff	plusw1,postinc1
 12259  004BB4  006F FF8F FFE6     	movff	plusw1,postinc1
 12260                           
 12261                           ;stkvar	_buf @ sp[(-6)+-4]
 12262  004BBA  0EF6               	movlw	-10
 12263  004BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12264  004BC2  006F FF8F FFE6     	movff	plusw1,postinc1
 12265  004BC8  EC82  F02A         	call	_fputs	;wreg free
 12266  004BCC                     l8093:
 12267                           
 12268                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 12269                           ;stkvar	_w @ sp[(-4)+0]
 12270                           ;stkvar	_buf @ sp[(-4)+-4]
 12271  004BCC  0EF8               	movlw	-8
 12272  004BCE  006F FF8F FFE6     	movff	plusw1,postinc1
 12273  004BD4  006F FF8F FFE6     	movff	plusw1,postinc1
 12274  004BDA  EC49  F029         	call	_strlen	;wreg free
 12275  004BDE  0EFC               	movlw	-4
 12276  004BE0  50E3               	movf	plusw1,w,c
 12277  004BE2  263C               	addwf	btemp,f,c
 12278  004BE4  0EFD               	movlw	-3
 12279  004BE6  50E3               	movf	plusw1,w,c
 12280  004BE8  223D               	addwfc	btemp+1,f,c
 12281                           
 12282                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 12283  004BEA  0EF6               	movlw	246
 12284  004BEC  26E1               	addwf	fsr1l,f,c
 12285  004BEE  0EFF               	movlw	255
 12286  004BF0  22E2               	addwfc	fsr1h,f,c
 12287  004BF2  0012               	return		;funcret
 12288  004BF4                     __end_of_pad:
 12289                           	opt callstack 0
 12290                           
 12291 ;; *************** function _strlen *****************
 12292 ;; Defined at:
 12293 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 12294 ;; Parameters:    Size  Location     Type
 12295 ;;  s               2  [STACK] PTR const unsigned char 
 12296 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 12297 ;;		 -> STR_3(6), V(93), 
 12298 ;; Auto vars:     Size  Location     Type
 12299 ;;  a               2  [STACK] PTR const unsigned char 
 12300 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 12301 ;;		 -> STR_3(6), V(93), 
 12302 ;; Return value:  Size  Location     Type
 12303 ;;                  2  [STACK] unsigned int 
 12304 ;; Registers used:
 12305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 12306 ;; Tracked objects:
 12307 ;;		On entry : 0/0
 12308 ;;		On exit  : 0/0
 12309 ;;		Unchanged: 0/0
 12310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12315 ;;Total ram usage:        0 bytes
 12316 ;; Hardware stack levels used:    1
 12317 ;; Hardware stack levels required when called:    3
 12318 ;; This function calls:
 12319 ;;		Nothing
 12320 ;; This function is called by:
 12321 ;;		_eaDogM_WriteString
 12322 ;;		_pad
 12323 ;;		_stoa
 12324 ;; This function uses a reentrant model
 12325 ;;
 12326                           
 12327                           	psect	text49
 12328  005292                     __ptext49:
 12329                           	opt callstack 0
 12330  005292                     _strlen:
 12331                           	opt callstack 0
 12332                           
 12333                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12334  005292  52E6               	movf	postinc1,f,c
 12335  005294  52E6               	movf	postinc1,f,c
 12336                           
 12337                           ;stkvar	_s @ sp[(-2)+-2]
 12338                           
 12339                           ;incstack = 0
 12340  005296  0EFC               	movlw	-4
 12341  005298  006F FF8C  F046    	movff	plusw1,btemp+10
 12342  00529E  0EFD               	movlw	-3
 12343  0052A0  006F FF8C  F047    	movff	plusw1,btemp+11
 12344                           
 12345                           ;stkvar	_a @ sp[(-2)+0]
 12346  0052A6  0EFF               	movlw	-1
 12347  0052A8  0060  F11F  FFE3   	movff	btemp+11,plusw1
 12348  0052AE  0EFE               	movlw	-2
 12349  0052B0  0060  F11B  FFE3   	movff	btemp+10,plusw1
 12350  0052B6  D011               	goto	l5549
 12351  0052B8                     l5547:
 12352                           
 12353                           ;stkvar	_s @ sp[(-2)+-2]
 12354  0052B8  0EFC               	movlw	-4
 12355  0052BA  50E3               	movf	plusw1,w,c
 12356  0052BC  0F01               	addlw	1
 12357  0052BE  6E3C               	movwf	btemp,c
 12358  0052C0  0EFC               	movlw	-4
 12359  0052C2  0060  F0F3  FFE3   	movff	btemp,plusw1
 12360  0052C8  6A3C               	clrf	btemp,c
 12361  0052CA  0EFD               	movlw	-3
 12362  0052CC  50E3               	movf	plusw1,w,c
 12363  0052CE  203C               	addwfc	btemp,w,c
 12364  0052D0  6E3C               	movwf	btemp,c
 12365  0052D2  0EFD               	movlw	-3
 12366  0052D4  0060  F0F3  FFE3   	movff	btemp,plusw1
 12367  0052DA                     l5549:
 12368                           
 12369                           ;stkvar	_s @ sp[(-2)+-2]
 12370  0052DA  0EFC               	movlw	-4
 12371  0052DC  006F FF8F FFF6     	movff	plusw1,tblptrl
 12372  0052E2  0EFD               	movlw	-3
 12373  0052E4  006F FF8F FFF7     	movff	plusw1,tblptrh
 12374  0052EA  0E00               	movlw	low (__smallconst shr (0+16))
 12375  0052EC  6EF8               	movwf	tblptru,c
 12376  0052EE  0E1F               	movlw	(high __ramtop+-1)
 12377  0052F0  64F7               	cpfsgt	tblptrh,c
 12378  0052F2  D003               	bra	u2407
 12379  0052F4  0008               	tblrd		*
 12380  0052F6  50F5               	movf	tablat,w,c
 12381  0052F8  D007               	bra	u2400
 12382  0052FA                     u2407:
 12383  0052FA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12384  005300  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12385  005306  50EF               	movf	indf0,w,c
 12386  005308                     u2400:
 12387  005308  0900               	iorlw	0
 12388  00530A  A4D8               	btfss	status,2,c
 12389  00530C  D7D5               	goto	l5547
 12390                           
 12391                           ;stkvar	_a @ sp[(-2)+0]
 12392                           ;stkvar	_s @ sp[(-2)+-2]
 12393  00530E  0EFC               	movlw	-4
 12394  005310  006F FF8C  F03C    	movff	plusw1,btemp
 12395  005316  0EFD               	movlw	-3
 12396  005318  006F FF8C  F03D    	movff	plusw1,btemp+1
 12397  00531E  0EFE               	movlw	-2
 12398  005320  50E3               	movf	plusw1,w,c
 12399  005322  5E3C               	subwf	btemp,f,c
 12400  005324  0EFF               	movlw	-1
 12401  005326  50E3               	movf	plusw1,w,c
 12402  005328  5A3D               	subwfb	btemp+1,f,c
 12403                           
 12404                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 12405  00532A  52E5               	movf	postdec1,f,c
 12406  00532C  52E5               	movf	postdec1,f,c
 12407  00532E  52E5               	movf	postdec1,f,c
 12408  005330  52E5               	movf	postdec1,f,c
 12409  005332  0012               	return		;funcret
 12410  005334                     __end_of_strlen:
 12411                           	opt callstack 0
 12412                           
 12413 ;; *************** function _fputs *****************
 12414 ;; Defined at:
 12415 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 12416 ;; Parameters:    Size  Location     Type
 12417 ;;  s               2  [STACK] PTR const unsigned char 
 12418 ;;		 -> dbuf(32), 
 12419 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12420 ;;		 -> f(5), NULL(0), 
 12421 ;; Auto vars:     Size  Location     Type
 12422 ;;  i               2  [STACK] int 
 12423 ;;  c               1  [STACK] unsigned char 
 12424 ;; Return value:  Size  Location     Type
 12425 ;;                  2  [STACK] int 
 12426 ;; Registers used:
 12427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 12428 ;; Tracked objects:
 12429 ;;		On entry : 0/1
 12430 ;;		On exit  : 0/0
 12431 ;;		Unchanged: 0/0
 12432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12437 ;;Total ram usage:        0 bytes
 12438 ;; Hardware stack levels used:    1
 12439 ;; Hardware stack levels required when called:    6
 12440 ;; This function calls:
 12441 ;;		_fputc
 12442 ;; This function is called by:
 12443 ;;		_pad
 12444 ;; This function uses a reentrant model
 12445 ;;
 12446                           
 12447                           	psect	text50
 12448  005504                     __ptext50:
 12449                           	opt callstack 0
 12450  005504                     _fputs:
 12451                           	opt callstack 0
 12452                           
 12453                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12454  005504  52E6               	movf	postinc1,f,c
 12455  005506  52E6               	movf	postinc1,f,c
 12456  005508  52E6               	movf	postinc1,f,c
 12457                           
 12458                           ;stkvar	_i @ sp[(-3)+0]
 12459                           
 12460                           ;incstack = 0
 12461  00550A  0EFD               	movlw	-3
 12462  00550C  6AE3               	clrf	plusw1,c
 12463  00550E  0EFE               	movlw	-2
 12464  005510  6AE3               	clrf	plusw1,c
 12465  005512  D01F               	goto	l8073
 12466  005514                     l8069:
 12467                           
 12468                           ;stkvar	_fp @ sp[(-3)+-4]
 12469  005514  0EF9               	movlw	-7
 12470  005516  006F FF8F FFE6     	movff	plusw1,postinc1
 12471  00551C  006F FF8F FFE6     	movff	plusw1,postinc1
 12472                           
 12473                           ;stkvar	_c @ sp[(-5)+2]
 12474  005522  0EFD               	movlw	-3
 12475  005524  50E3               	movf	plusw1,w,c
 12476  005526  6EE6               	movwf	postinc1,c
 12477  005528  0E00               	movlw	0
 12478  00552A  6EE6               	movwf	postinc1,c
 12479  00552C  ECFA  F025         	call	_fputc	;wreg free
 12480                           
 12481                           ;stkvar	_i @ sp[(-3)+0]
 12482  005530  0EFD               	movlw	-3
 12483  005532  50E3               	movf	plusw1,w,c
 12484  005534  0F01               	addlw	1
 12485  005536  6E3C               	movwf	btemp,c
 12486  005538  0EFD               	movlw	-3
 12487  00553A  0060  F0F3  FFE3   	movff	btemp,plusw1
 12488  005540  6A3C               	clrf	btemp,c
 12489  005542  0EFE               	movlw	-2
 12490  005544  50E3               	movf	plusw1,w,c
 12491  005546  203C               	addwfc	btemp,w,c
 12492  005548  6E3C               	movwf	btemp,c
 12493  00554A  0EFE               	movlw	-2
 12494  00554C  0060  F0F3  FFE3   	movff	btemp,plusw1
 12495  005552                     l8073:
 12496                           
 12497                           ;stkvar	_i @ sp[(-3)+0]
 12498  005552  0EFD               	movlw	-3
 12499  005554  006F FF8C  F046    	movff	plusw1,btemp+10
 12500  00555A  0EFE               	movlw	-2
 12501  00555C  006F FF8C  F047    	movff	plusw1,btemp+11
 12502                           
 12503                           ;stkvar	_s @ sp[(-3)+-2]
 12504  005562  0EFB               	movlw	-5
 12505  005564  006F FF8C  F044    	movff	plusw1,btemp+8
 12506  00556A  0EFC               	movlw	-4
 12507  00556C  006F FF8C  F045    	movff	plusw1,btemp+9
 12508  005572  5046               	movf	btemp+10,w,c
 12509  005574  2444               	addwf	btemp+8,w,c
 12510  005576  6ED9               	movwf	fsr2l,c
 12511  005578  5047               	movf	btemp+11,w,c
 12512  00557A  2045               	addwfc	btemp+9,w,c
 12513  00557C  6EDA               	movwf	fsr2h,c
 12514  00557E  50DF               	movf	indf2,w,c
 12515  005580  6E47               	movwf	btemp+11,c
 12516                           
 12517                           ;stkvar	_c @ sp[(-3)+2]
 12518  005582  0EFF               	movlw	-1
 12519  005584  0060  F11F  FFE3   	movff	btemp+11,plusw1
 12520  00558A  0EFF               	movlw	-1
 12521  00558C  50E3               	movf	plusw1,w,c
 12522  00558E  A4D8               	btfss	status,2,c
 12523  005590  D7C1               	goto	l8069
 12524                           
 12525                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 12526  005592  0EF9               	movlw	249
 12527  005594  26E1               	addwf	fsr1l,f,c
 12528  005596  0EFF               	movlw	255
 12529  005598  22E2               	addwfc	fsr1h,f,c
 12530  00559A  0012               	return		;funcret
 12531  00559C                     __end_of_fputs:
 12532                           	opt callstack 0
 12533                           
 12534 ;; *************** function _fputc *****************
 12535 ;; Defined at:
 12536 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 12537 ;; Parameters:    Size  Location     Type
 12538 ;;  c               2  [STACK] int 
 12539 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12540 ;;		 -> f(5), NULL(0), 
 12541 ;; Auto vars:     Size  Location     Type
 12542 ;;		None
 12543 ;; Return value:  Size  Location     Type
 12544 ;;                  2  [STACK] int 
 12545 ;; Registers used:
 12546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 12547 ;; Tracked objects:
 12548 ;;		On entry : 0/0
 12549 ;;		On exit  : 0/0
 12550 ;;		Unchanged: 0/0
 12551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12556 ;;Total ram usage:        0 bytes
 12557 ;; Hardware stack levels used:    1
 12558 ;; Hardware stack levels required when called:    5
 12559 ;; This function calls:
 12560 ;;		_putch
 12561 ;; This function is called by:
 12562 ;;		_pad
 12563 ;;		_stoa
 12564 ;;		_vfpfcnvrt
 12565 ;;		_fputs
 12566 ;; This function uses a reentrant model
 12567 ;;
 12568                           
 12569                           	psect	text51
 12570  004BF4                     __ptext51:
 12571                           	opt callstack 0
 12572  004BF4                     _fputc:
 12573                           	opt callstack 21
 12574                           
 12575                           ;stkvar	_fp @ sp[(0)+-4]
 12576                           
 12577                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12578                           ;incstack = 0
 12579  004BF4  0EFC               	movlw	-4
 12580  004BF6  006F FF8C  F03C    	movff	plusw1,btemp
 12581  004BFC  0EFD               	movlw	-3
 12582  004BFE  50E3               	movf	plusw1,w,c
 12583  004C00  103C               	iorwf	btemp,w,c
 12584  004C02  B4D8               	btfsc	status,2,c
 12585  004C04  D009               	goto	u4580
 12586                           
 12587                           ;stkvar	_fp @ sp[(0)+-4]
 12588  004C06  0EFC               	movlw	-4
 12589  004C08  006F FF8C  F03C    	movff	plusw1,btemp
 12590  004C0E  0EFD               	movlw	-3
 12591  004C10  50E3               	movf	plusw1,w,c
 12592  004C12  103C               	iorwf	btemp,w,c
 12593  004C14  A4D8               	btfss	status,2,c
 12594  004C16  D006               	goto	l8059
 12595  004C18                     u4580:
 12596                           
 12597                           ;stkvar	_c @ sp[(0)+-2]
 12598  004C18  0EFE               	movlw	-2
 12599  004C1A  50E3               	movf	plusw1,w,c
 12600  004C1C  6EE6               	movwf	postinc1,c
 12601  004C1E  EC9C  F031         	call	_putch	;wreg free
 12602  004C22  D069               	goto	l2624
 12603  004C24                     l8059:
 12604                           
 12605                           ;stkvar	_fp @ sp[(0)+-4]
 12606  004C24  0EFC               	movlw	-4
 12607  004C26  006F FF8C  F046    	movff	plusw1,btemp+10
 12608  004C2C  0EFD               	movlw	-3
 12609  004C2E  006F FF8C  F047    	movff	plusw1,btemp+11
 12610  004C34  0E03               	movlw	3
 12611  004C36  2446               	addwf	btemp+10,w,c
 12612  004C38  6ED9               	movwf	fsr2l,c
 12613  004C3A  0E00               	movlw	0
 12614  004C3C  2047               	addwfc	btemp+11,w,c
 12615  004C3E  6EDA               	movwf	fsr2h,c
 12616  004C40  50DE               	movf	postinc2,w,c
 12617  004C42  10DE               	iorwf	postinc2,w,c
 12618  004C44  B4D8               	btfsc	status,2,c
 12619  004C46  D026               	goto	u4600
 12620                           
 12621                           ;stkvar	_fp @ sp[(0)+-4]
 12622  004C48  0EFC               	movlw	-4
 12623  004C4A  006F FF8C  F046    	movff	plusw1,btemp+10
 12624  004C50  0EFD               	movlw	-3
 12625  004C52  006F FF8C  F047    	movff	plusw1,btemp+11
 12626  004C58  0E03               	movlw	3
 12627  004C5A  2446               	addwf	btemp+10,w,c
 12628  004C5C  6ED9               	movwf	fsr2l,c
 12629  004C5E  0E00               	movlw	0
 12630  004C60  2047               	addwfc	btemp+11,w,c
 12631  004C62  6EDA               	movwf	fsr2h,c
 12632                           
 12633                           ;stkvar	_fp @ sp[(0)+-4]
 12634  004C64  0EFC               	movlw	-4
 12635  004C66  006F FF8C  F046    	movff	plusw1,btemp+10
 12636  004C6C  0EFD               	movlw	-3
 12637  004C6E  006F FF8C  F047    	movff	plusw1,btemp+11
 12638  004C74  0E01               	movlw	1
 12639  004C76  2446               	addwf	btemp+10,w,c
 12640  004C78  6EE9               	movwf	fsr0l,c
 12641  004C7A  0E00               	movlw	0
 12642  004C7C  2047               	addwfc	btemp+11,w,c
 12643  004C7E  6EEA               	movwf	fsr0h,c
 12644  004C80  50DE               	movf	postinc2,w,c
 12645  004C82  5CEE               	subwf	postinc0,w,c
 12646  004C84  50EE               	movf	postinc0,w,c
 12647  004C86  0A80               	xorlw	128
 12648  004C88  6E3C               	movwf	btemp,c
 12649  004C8A  50DE               	movf	postinc2,w,c
 12650  004C8C  0A80               	xorlw	128
 12651  004C8E  583C               	subwfb	btemp,w,c
 12652  004C90  B0D8               	btfsc	status,0,c
 12653  004C92  D031               	goto	l2624
 12654  004C94                     u4600:
 12655                           
 12656                           ;stkvar	_c @ sp[(0)+-2]
 12657                           ;stkvar	_fp @ sp[(0)+-4]
 12658  004C94  0EFC               	movlw	-4
 12659  004C96  006F FF8C  F046    	movff	plusw1,btemp+10
 12660  004C9C  0EFD               	movlw	-3
 12661  004C9E  006F FF8C  F047    	movff	plusw1,btemp+11
 12662  004CA4  0E01               	movlw	1
 12663  004CA6  2446               	addwf	btemp+10,w,c
 12664  004CA8  6ED9               	movwf	fsr2l,c
 12665  004CAA  0E00               	movlw	0
 12666  004CAC  2047               	addwfc	btemp+11,w,c
 12667  004CAE  6EDA               	movwf	fsr2h,c
 12668  004CB0  50DF               	movf	indf2,w,c
 12669  004CB2  6E47               	movwf	btemp+11,c
 12670                           
 12671                           ;stkvar	_fp @ sp[(0)+-4]
 12672  004CB4  0EFC               	movlw	-4
 12673  004CB6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12674  004CBC  0EFD               	movlw	-3
 12675  004CBE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12676  004CC4  50DF               	movf	indf2,w,c
 12677  004CC6  2447               	addwf	btemp+11,w,c
 12678  004CC8  6ED9               	movwf	fsr2l,c
 12679  004CCA  6ADA               	clrf	fsr2h,c
 12680  004CCC  0EFE               	movlw	-2
 12681  004CCE  006F FF8F FFDF     	movff	plusw1,indf2
 12682                           
 12683                           ;stkvar	_fp @ sp[(0)+-4]
 12684  004CD4  0EFC               	movlw	-4
 12685  004CD6  006F FF8C  F046    	movff	plusw1,btemp+10
 12686  004CDC  0EFD               	movlw	-3
 12687  004CDE  006F FF8C  F047    	movff	plusw1,btemp+11
 12688  004CE4  0E01               	movlw	1
 12689  004CE6  2446               	addwf	btemp+10,w,c
 12690  004CE8  6ED9               	movwf	fsr2l,c
 12691  004CEA  0E00               	movlw	0
 12692  004CEC  2047               	addwfc	btemp+11,w,c
 12693  004CEE  6EDA               	movwf	fsr2h,c
 12694  004CF0  2ADE               	incf	postinc2,f,c
 12695  004CF2  0E00               	movlw	0
 12696  004CF4  22DD               	addwfc	postdec2,f,c
 12697  004CF6                     l2624:
 12698                           
 12699                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 12700  004CF6  52E5               	movf	postdec1,f,c
 12701  004CF8  52E5               	movf	postdec1,f,c
 12702  004CFA  52E5               	movf	postdec1,f,c
 12703  004CFC  52E5               	movf	postdec1,f,c
 12704  004CFE  0012               	return		;funcret
 12705  004D00                     __end_of_fputc:
 12706                           	opt callstack 0
 12707                           
 12708 ;; *************** function _putch *****************
 12709 ;; Defined at:
 12710 ;;		line 138 in file "eadog.c"
 12711 ;; Parameters:    Size  Location     Type
 12712 ;;  c               1  [STACK] unsigned char 
 12713 ;; Auto vars:     Size  Location     Type
 12714 ;;		None
 12715 ;; Return value:  Size  Location     Type
 12716 ;;                  1  [STACK] void 
 12717 ;; Registers used:
 12718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 12719 ;; Tracked objects:
 12720 ;;		On entry : 0/0
 12721 ;;		On exit  : 0/0
 12722 ;;		Unchanged: 0/0
 12723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12728 ;;Total ram usage:        0 bytes
 12729 ;; Hardware stack levels used:    1
 12730 ;; Hardware stack levels required when called:    4
 12731 ;; This function calls:
 12732 ;;		_ringBufS_put_dma
 12733 ;; This function is called by:
 12734 ;;		_fputc
 12735 ;; This function uses a reentrant model
 12736 ;;
 12737                           
 12738                           	psect	text52
 12739  006338                     __ptext52:
 12740                           	opt callstack 0
 12741  006338                     _putch:
 12742                           	opt callstack 21
 12743                           
 12744                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 12745                           ;stkvar	_c @ sp[(0)+-1]
 12746                           
 12747                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12748                           ;incstack = 0
 12749  006338  0EFF               	movlw	-1
 12750  00633A  50E3               	movf	plusw1,w,c
 12751  00633C  6EE6               	movwf	postinc1,c
 12752  00633E  0060  F35F  FFE6   	movff	_spi_link+6,postinc1
 12753  006344  0060  F363  FFE6   	movff	_spi_link+7,postinc1
 12754  00634A  ECF4  F028         	call	_ringBufS_put_dma	;wreg free
 12755                           
 12756                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 12757  00634E  52E5               	movf	postdec1,f,c
 12758  006350  0012               	return		;funcret
 12759  006352                     __end_of_putch:
 12760                           	opt callstack 0
 12761                           
 12762 ;; *************** function _ringBufS_put_dma *****************
 12763 ;; Defined at:
 12764 ;;		line 67 in file "ringbufs.c"
 12765 ;; Parameters:    Size  Location     Type
 12766 ;;  _this           2  [STACK] PTR struct ringBufS_t
 12767 ;;		 -> ring_buf1(67), 
 12768 ;;  c               1  [STACK] const unsigned char 
 12769 ;; Auto vars:     Size  Location     Type
 12770 ;;		None
 12771 ;; Return value:  Size  Location     Type
 12772 ;;                  1  [STACK] void 
 12773 ;; Registers used:
 12774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 12775 ;; Tracked objects:
 12776 ;;		On entry : 0/0
 12777 ;;		On exit  : 0/0
 12778 ;;		Unchanged: 0/0
 12779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12784 ;;Total ram usage:        0 bytes
 12785 ;; Hardware stack levels used:    1
 12786 ;; Hardware stack levels required when called:    3
 12787 ;; This function calls:
 12788 ;;		Nothing
 12789 ;; This function is called by:
 12790 ;;		_putch
 12791 ;; This function uses a reentrant model
 12792 ;;
 12793                           
 12794                           	psect	text53
 12795  0051E8                     __ptext53:
 12796                           	opt callstack 0
 12797  0051E8                     _ringBufS_put_dma:
 12798                           	opt callstack 21
 12799                           
 12800                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 12801                           ;stkvar	__this @ sp[(0)+-2]
 12802                           
 12803                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12804                           ;incstack = 0
 12805  0051E8  0EFE               	movlw	-2
 12806  0051EA  006F FF8C  F046    	movff	plusw1,btemp+10
 12807  0051F0  0EFF               	movlw	-1
 12808  0051F2  006F FF8C  F047    	movff	plusw1,btemp+11
 12809  0051F8  0E42               	movlw	66
 12810  0051FA  2446               	addwf	btemp+10,w,c
 12811  0051FC  6ED9               	movwf	fsr2l,c
 12812  0051FE  0E00               	movlw	0
 12813  005200  2047               	addwfc	btemp+11,w,c
 12814  005202  6EDA               	movwf	fsr2h,c
 12815  005204  0E40               	movlw	64
 12816  005206  60DF               	cpfslt	indf2,c
 12817  005208  D040               	goto	l1485
 12818                           
 12819                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 12820                           ;stkvar	_c @ sp[(0)+-3]
 12821                           ;stkvar	__this @ sp[(0)+-2]
 12822  00520A  0EFE               	movlw	-2
 12823  00520C  006F FF8C  F046    	movff	plusw1,btemp+10
 12824  005212  0EFF               	movlw	-1
 12825  005214  006F FF8C  F047    	movff	plusw1,btemp+11
 12826  00521A  0E40               	movlw	64
 12827  00521C  2446               	addwf	btemp+10,w,c
 12828  00521E  6ED9               	movwf	fsr2l,c
 12829  005220  0E00               	movlw	0
 12830  005222  2047               	addwfc	btemp+11,w,c
 12831  005224  6EDA               	movwf	fsr2h,c
 12832  005226  50DF               	movf	indf2,w,c
 12833  005228  6E47               	movwf	btemp+11,c
 12834                           
 12835                           ;stkvar	__this @ sp[(0)+-2]
 12836  00522A  0EFE               	movlw	-2
 12837  00522C  006F FF8C  F044    	movff	plusw1,btemp+8
 12838  005232  0EFF               	movlw	-1
 12839  005234  006F FF8C  F045    	movff	plusw1,btemp+9
 12840  00523A  5047               	movf	btemp+11,w,c
 12841  00523C  2444               	addwf	btemp+8,w,c
 12842  00523E  6ED9               	movwf	fsr2l,c
 12843  005240  0E00               	movlw	0
 12844  005242  2045               	addwfc	btemp+9,w,c
 12845  005244  6EDA               	movwf	fsr2h,c
 12846  005246  0EFD               	movlw	-3
 12847  005248  006F FF8F FFDF     	movff	plusw1,indf2
 12848                           
 12849                           ;ringbufs.c: 71:   ++_this->head;
 12850                           ;stkvar	__this @ sp[(0)+-2]
 12851  00524E  0EFE               	movlw	-2
 12852  005250  006F FF8C  F046    	movff	plusw1,btemp+10
 12853  005256  0EFF               	movlw	-1
 12854  005258  006F FF8C  F047    	movff	plusw1,btemp+11
 12855  00525E  0E40               	movlw	64
 12856  005260  2446               	addwf	btemp+10,w,c
 12857  005262  6ED9               	movwf	fsr2l,c
 12858  005264  0E00               	movlw	0
 12859  005266  2047               	addwfc	btemp+11,w,c
 12860  005268  6EDA               	movwf	fsr2h,c
 12861  00526A  2ADF               	incf	indf2,f,c
 12862                           
 12863                           ;ringbufs.c: 72:   ++_this->count;
 12864                           ;stkvar	__this @ sp[(0)+-2]
 12865  00526C  0EFE               	movlw	-2
 12866  00526E  006F FF8C  F046    	movff	plusw1,btemp+10
 12867  005274  0EFF               	movlw	-1
 12868  005276  006F FF8C  F047    	movff	plusw1,btemp+11
 12869  00527C  0E42               	movlw	66
 12870  00527E  2446               	addwf	btemp+10,w,c
 12871  005280  6ED9               	movwf	fsr2l,c
 12872  005282  0E00               	movlw	0
 12873  005284  2047               	addwfc	btemp+11,w,c
 12874  005286  6EDA               	movwf	fsr2h,c
 12875  005288  2ADF               	incf	indf2,f,c
 12876  00528A                     l1485:
 12877                           
 12878                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 12879  00528A  52E5               	movf	postdec1,f,c
 12880  00528C  52E5               	movf	postdec1,f,c
 12881  00528E  52E5               	movf	postdec1,f,c
 12882  005290  0012               	return		;funcret
 12883  005292                     __end_of_ringBufS_put_dma:
 12884                           	opt callstack 0
 12885                           
 12886 ;; *************** function _SYSTEM_Initialize *****************
 12887 ;; Defined at:
 12888 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12889 ;; Parameters:    Size  Location     Type
 12890 ;;		None
 12891 ;; Auto vars:     Size  Location     Type
 12892 ;;		None
 12893 ;; Return value:  Size  Location     Type
 12894 ;;                  1  [STACK] void 
 12895 ;; Registers used:
 12896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 12897 ;; Tracked objects:
 12898 ;;		On entry : 0/0
 12899 ;;		On exit  : 3F/3C
 12900 ;;		Unchanged: 0/0
 12901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12906 ;;Total ram usage:        0 bytes
 12907 ;; Hardware stack levels used:    1
 12908 ;; Hardware stack levels required when called:    5
 12909 ;; This function calls:
 12910 ;;		_ADCC_Initialize
 12911 ;;		_CLC1_Initialize
 12912 ;;		_CLKREF_Initialize
 12913 ;;		_DMA1_Initialize
 12914 ;;		_DSM_Initialize
 12915 ;;		_EXT_INT_Initialize
 12916 ;;		_INTERRUPT_Initialize
 12917 ;;		_NCO1_Initialize
 12918 ;;		_OSCILLATOR_Initialize
 12919 ;;		_PIN_MANAGER_Initialize
 12920 ;;		_PMD_Initialize
 12921 ;;		_SPI1_Initialize
 12922 ;;		_TMR5_Initialize
 12923 ;;		_TMR6_Initialize
 12924 ;;		_UART1_Initialize
 12925 ;;		_UART2_Initialize
 12926 ;; This function is called by:
 12927 ;;		_main
 12928 ;; This function uses a reentrant model
 12929 ;;
 12930                           
 12931                           	psect	text54
 12932  005B20                     __ptext54:
 12933                           	opt callstack 0
 12934  005B20                     _SYSTEM_Initialize:
 12935                           	opt callstack 25
 12936                           
 12937                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 12938                           
 12939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12940                           ;incstack = 0
 12941  005B20  EC90  F02B         	call	_INTERRUPT_Initialize	;wreg free
 12942                           
 12943                           ; BSR set to: 57
 12944                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 12945  005B24  ECDA  F031         	call	_PMD_Initialize	;wreg free
 12946                           
 12947                           ; BSR set to: 57
 12948                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12949  005B28  EC9A  F029         	call	_PIN_MANAGER_Initialize	;wreg free
 12950                           
 12951                           ; BSR set to: 58
 12952                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12953  005B2C  ECCF  F031         	call	_OSCILLATOR_Initialize	;wreg free
 12954                           
 12955                           ; BSR set to: 57
 12956                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 12957  005B30  EC02  F02D         	call	_ADCC_Initialize	;wreg free
 12958                           
 12959                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 12960  005B34  EC80  F031         	call	_NCO1_Initialize	;wreg free
 12961                           
 12962                           ; BSR set to: 63
 12963                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 12964  005B38  ECDC  F02C         	call	_EXT_INT_Initialize	;wreg free
 12965                           
 12966                           ; BSR set to: 57
 12967                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 12968  005B3C  ECDF  F02F         	call	_TMR6_Initialize	;wreg free
 12969                           
 12970                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 12971  005B40  ECF0  F030         	call	_CLC1_Initialize	;wreg free
 12972                           
 12973                           ; BSR set to: 60
 12974                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 12975  005B44  EC4A  F02D         	call	_TMR5_Initialize	;wreg free
 12976                           
 12977                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 12978  005B48  EC8E  F031         	call	_DSM_Initialize	;wreg free
 12979                           
 12980                           ; BSR set to: 60
 12981                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 12982  005B4C  ECF5  F02B         	call	_UART1_Initialize	;wreg free
 12983                           
 12984                           ; BSR set to: 57
 12985                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 12986  005B50  EC58  F02C         	call	_UART2_Initialize	;wreg free
 12987                           
 12988                           ; BSR set to: 57
 12989                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 12990  005B54  ECC4  F031         	call	_SPI1_Initialize	;wreg free
 12991                           
 12992                           ; BSR set to: 61
 12993                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 12994  005B58  EC5B  F02B         	call	_DMA1_Initialize	;wreg free
 12995                           
 12996                           ; BSR set to: 59
 12997                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 12998  005B5C  EC0B  F032         	call	_CLKREF_Initialize	;wreg free
 12999                           
 13000                           ; BSR set to: 60
 13001                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13002  005B60  0012               	return		;funcret
 13003  005B62                     __end_of_SYSTEM_Initialize:
 13004                           	opt callstack 0
 13005                           
 13006 ;; *************** function _UART2_Initialize *****************
 13007 ;; Defined at:
 13008 ;;		line 78 in file "mcc_generated_files/uart2.c"
 13009 ;; Parameters:    Size  Location     Type
 13010 ;;		None
 13011 ;; Auto vars:     Size  Location     Type
 13012 ;;		None
 13013 ;; Return value:  Size  Location     Type
 13014 ;;                  1  [STACK] void 
 13015 ;; Registers used:
 13016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13017 ;; Tracked objects:
 13018 ;;		On entry : 3F/39
 13019 ;;		On exit  : 3F/39
 13020 ;;		Unchanged: 0/0
 13021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13026 ;;Total ram usage:        0 bytes
 13027 ;; Hardware stack levels used:    1
 13028 ;; Hardware stack levels required when called:    4
 13029 ;; This function calls:
 13030 ;;		_UART2_SetRxInterruptHandler
 13031 ;;		_UART2_SetTxInterruptHandler
 13032 ;; This function is called by:
 13033 ;;		_SYSTEM_Initialize
 13034 ;; This function uses a reentrant model
 13035 ;;
 13036                           
 13037                           	psect	text55
 13038  0058B0                     __ptext55:
 13039                           	opt callstack 0
 13040  0058B0                     _UART2_Initialize:
 13041                           	opt callstack 25
 13042                           
 13043                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 13044                           
 13045                           ; BSR set to: 60
 13046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13047                           ;incstack = 0
 13048  0058B0  0139               	movlb	57	; () banked
 13049  0058B2  9596               	bcf	150,2,b	;volatile
 13050                           
 13051                           ; BSR set to: 57
 13052                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 13053  0058B4  0E88               	movlw	low _UART2_Receive_ISR
 13054  0058B6  6EE6               	movwf	postinc1,c
 13055  0058B8  0E62               	movlw	high _UART2_Receive_ISR
 13056  0058BA  6EE6               	movwf	postinc1,c
 13057  0058BC  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 13058  0058BE  6EE6               	movwf	postinc1,c
 13059  0058C0  ECA3  F02F         	call	_UART2_SetRxInterruptHandler	;wreg free
 13060                           
 13061                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 13062  0058C4  0139               	movlb	57	; () banked
 13063  0058C6  9796               	bcf	150,3,b	;volatile
 13064                           
 13065                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 13066  0058C8  0ED2               	movlw	low _UART2_Transmit_ISR
 13067  0058CA  6EE6               	movwf	postinc1,c
 13068  0058CC  0E5D               	movlw	high _UART2_Transmit_ISR
 13069  0058CE  6EE6               	movwf	postinc1,c
 13070  0058D0  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 13071  0058D2  6EE6               	movwf	postinc1,c
 13072  0058D4  EC8F  F02F         	call	_UART2_SetTxInterruptHandler	;wreg free
 13073                           
 13074                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 13075  0058D8  013D               	movlb	61	; () banked
 13076  0058DA  6BD4               	clrf	212,b	;volatile
 13077                           
 13078                           ; BSR set to: 61
 13079                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 13080  0058DC  6BD6               	clrf	214,b	;volatile
 13081                           
 13082                           ; BSR set to: 61
 13083                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 13084  0058DE  6BD8               	clrf	216,b	;volatile
 13085                           
 13086                           ; BSR set to: 61
 13087                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 13088  0058E0  0EB0               	movlw	176
 13089  0058E2  6FDA               	movwf	218,b	;volatile
 13090                           
 13091                           ; BSR set to: 61
 13092                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 13093  0058E4  0E80               	movlw	128
 13094  0058E6  6FDB               	movwf	219,b	;volatile
 13095                           
 13096                           ; BSR set to: 61
 13097                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 13098  0058E8  6BDC               	clrf	220,b	;volatile
 13099                           
 13100                           ; BSR set to: 61
 13101                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 13102  0058EA  0E82               	movlw	130
 13103  0058EC  6FDD               	movwf	221,b	;volatile
 13104                           
 13105                           ; BSR set to: 61
 13106                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 13107  0058EE  0E06               	movlw	6
 13108  0058F0  6FDE               	movwf	222,b	;volatile
 13109                           
 13110                           ; BSR set to: 61
 13111                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 13112  0058F2  6BDF               	clrf	223,b	;volatile
 13113                           
 13114                           ; BSR set to: 61
 13115                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 13116  0058F4  6BE0               	clrf	224,b	;volatile
 13117                           
 13118                           ; BSR set to: 61
 13119                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 13120  0058F6  6BE1               	clrf	225,b	;volatile
 13121                           
 13122                           ; BSR set to: 61
 13123                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 13124  0058F8  6BE2               	clrf	226,b	;volatile
 13125                           
 13126                           ; BSR set to: 61
 13127                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 13128  0058FA  6A35               	clrf	_uart2TxHead,c	;volatile
 13129                           
 13130                           ; BSR set to: 61
 13131                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 13132  0058FC  6A34               	clrf	_uart2TxTail,c	;volatile
 13133                           
 13134                           ; BSR set to: 61
 13135                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 13136  0058FE  0E40               	movlw	64
 13137  005900  6E33               	movwf	_uart2TxBufferRemaining,c	;volatile
 13138                           
 13139                           ; BSR set to: 61
 13140                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 13141  005902  6A32               	clrf	_uart2RxHead,c	;volatile
 13142                           
 13143                           ; BSR set to: 61
 13144                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 13145  005904  6A31               	clrf	_uart2RxTail,c	;volatile
 13146                           
 13147                           ; BSR set to: 61
 13148                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 13149  005906  6A30               	clrf	_uart2RxCount,c	;volatile
 13150                           
 13151                           ; BSR set to: 61
 13152                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 13153  005908  0139               	movlb	57	; () banked
 13154  00590A  8596               	bsf	150,2,b	;volatile
 13155                           
 13156                           ; BSR set to: 57
 13157                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 13158  00590C  0012               	return		;funcret
 13159  00590E                     __end_of_UART2_Initialize:
 13160                           	opt callstack 0
 13161                           
 13162 ;; *************** function _UART2_SetTxInterruptHandler *****************
 13163 ;; Defined at:
 13164 ;;		line 252 in file "mcc_generated_files/uart2.c"
 13165 ;; Parameters:    Size  Location     Type
 13166 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13167 ;;		 -> UART2_Transmit_ISR(1), 
 13168 ;; Auto vars:     Size  Location     Type
 13169 ;;		None
 13170 ;; Return value:  Size  Location     Type
 13171 ;;                  1  [STACK] void 
 13172 ;; Registers used:
 13173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13174 ;; Tracked objects:
 13175 ;;		On entry : 3F/39
 13176 ;;		On exit  : 0/0
 13177 ;;		Unchanged: 0/0
 13178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13183 ;;Total ram usage:        0 bytes
 13184 ;; Hardware stack levels used:    1
 13185 ;; Hardware stack levels required when called:    3
 13186 ;; This function calls:
 13187 ;;		Nothing
 13188 ;; This function is called by:
 13189 ;;		_UART2_Initialize
 13190 ;; This function uses a reentrant model
 13191 ;;
 13192                           
 13193                           	psect	text56
 13194  005F1E                     __ptext56:
 13195                           	opt callstack 0
 13196  005F1E                     _UART2_SetTxInterruptHandler:
 13197                           	opt callstack 25
 13198                           
 13199                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 13200                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13201                           
 13202                           ; BSR set to: 57
 13203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13204                           ;incstack = 0
 13205  005F1E  50E1               	movf	fsr1l,w,c
 13206  005F20  0FFD               	addlw	-3
 13207  005F22  6ED9               	movwf	fsr2l,c
 13208  005F24  50E2               	movf	fsr1h,w,c
 13209  005F26  6EDA               	movwf	fsr2h,c
 13210  005F28  0EFF               	movlw	255
 13211  005F2A  22DA               	addwfc	fsr2h,f,c
 13212  005F2C  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler
 13213  005F32  006F FF78  F012    	movff	postinc2,_UART2_TxInterruptHandler+1
 13214  005F38  006F FF74  F013    	movff	postdec2,_UART2_TxInterruptHandler+2
 13215                           
 13216                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13217  005F3E  52E5               	movf	postdec1,f,c
 13218  005F40  52E5               	movf	postdec1,f,c
 13219  005F42  52E5               	movf	postdec1,f,c
 13220  005F44  0012               	return		;funcret
 13221  005F46                     __end_of_UART2_SetTxInterruptHandler:
 13222                           	opt callstack 0
 13223                           
 13224 ;; *************** function _UART2_SetRxInterruptHandler *****************
 13225 ;; Defined at:
 13226 ;;		line 248 in file "mcc_generated_files/uart2.c"
 13227 ;; Parameters:    Size  Location     Type
 13228 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13229 ;;		 -> UART2_Receive_ISR(1), 
 13230 ;; Auto vars:     Size  Location     Type
 13231 ;;		None
 13232 ;; Return value:  Size  Location     Type
 13233 ;;                  1  [STACK] void 
 13234 ;; Registers used:
 13235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13236 ;; Tracked objects:
 13237 ;;		On entry : 3F/39
 13238 ;;		On exit  : 0/0
 13239 ;;		Unchanged: 0/0
 13240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13245 ;;Total ram usage:        0 bytes
 13246 ;; Hardware stack levels used:    1
 13247 ;; Hardware stack levels required when called:    3
 13248 ;; This function calls:
 13249 ;;		Nothing
 13250 ;; This function is called by:
 13251 ;;		_UART2_Initialize
 13252 ;; This function uses a reentrant model
 13253 ;;
 13254                           
 13255                           	psect	text57
 13256  005F46                     __ptext57:
 13257                           	opt callstack 0
 13258  005F46                     _UART2_SetRxInterruptHandler:
 13259                           	opt callstack 25
 13260                           
 13261                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 13262                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13263                           
 13264                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13265                           ;incstack = 0
 13266  005F46  50E1               	movf	fsr1l,w,c
 13267  005F48  0FFD               	addlw	-3
 13268  005F4A  6ED9               	movwf	fsr2l,c
 13269  005F4C  50E2               	movf	fsr1h,w,c
 13270  005F4E  6EDA               	movwf	fsr2h,c
 13271  005F50  0EFF               	movlw	255
 13272  005F52  22DA               	addwfc	fsr2h,f,c
 13273  005F54  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler
 13274  005F5A  006F FF78  F015    	movff	postinc2,_UART2_RxInterruptHandler+1
 13275  005F60  006F FF74  F016    	movff	postdec2,_UART2_RxInterruptHandler+2
 13276                           
 13277                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13278  005F66  52E5               	movf	postdec1,f,c
 13279  005F68  52E5               	movf	postdec1,f,c
 13280  005F6A  52E5               	movf	postdec1,f,c
 13281  005F6C  0012               	return		;funcret
 13282  005F6E                     __end_of_UART2_SetRxInterruptHandler:
 13283                           	opt callstack 0
 13284                           
 13285 ;; *************** function _UART1_Initialize *****************
 13286 ;; Defined at:
 13287 ;;		line 78 in file "mcc_generated_files/uart1.c"
 13288 ;; Parameters:    Size  Location     Type
 13289 ;;		None
 13290 ;; Auto vars:     Size  Location     Type
 13291 ;;		None
 13292 ;; Return value:  Size  Location     Type
 13293 ;;                  1  [STACK] void 
 13294 ;; Registers used:
 13295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13296 ;; Tracked objects:
 13297 ;;		On entry : 3F/3C
 13298 ;;		On exit  : 3F/39
 13299 ;;		Unchanged: 0/0
 13300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13305 ;;Total ram usage:        0 bytes
 13306 ;; Hardware stack levels used:    1
 13307 ;; Hardware stack levels required when called:    4
 13308 ;; This function calls:
 13309 ;;		_UART1_SetRxInterruptHandler
 13310 ;;		_UART1_SetTxInterruptHandler
 13311 ;; This function is called by:
 13312 ;;		_SYSTEM_Initialize
 13313 ;; This function uses a reentrant model
 13314 ;;
 13315                           
 13316                           	psect	text58
 13317  0057EA                     __ptext58:
 13318                           	opt callstack 0
 13319  0057EA                     _UART1_Initialize:
 13320                           	opt callstack 25
 13321                           
 13322                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 13323                           
 13324                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13325                           ;incstack = 0
 13326  0057EA  0139               	movlb	57	; () banked
 13327  0057EC  9793               	bcf	147,3,b	;volatile
 13328                           
 13329                           ; BSR set to: 57
 13330                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 13331  0057EE  0E68               	movlw	low _UART1_Receive_ISR
 13332  0057F0  6EE6               	movwf	postinc1,c
 13333  0057F2  0E62               	movlw	high _UART1_Receive_ISR
 13334  0057F4  6EE6               	movwf	postinc1,c
 13335  0057F6  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 13336  0057F8  6EE6               	movwf	postinc1,c
 13337  0057FA  ECCB  F02F         	call	_UART1_SetRxInterruptHandler	;wreg free
 13338                           
 13339                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 13340  0057FE  0139               	movlb	57	; () banked
 13341  005800  9993               	bcf	147,4,b	;volatile
 13342                           
 13343                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 13344  005802  0EA6               	movlw	low _UART1_Transmit_ISR
 13345  005804  6EE6               	movwf	postinc1,c
 13346  005806  0E5D               	movlw	high _UART1_Transmit_ISR
 13347  005808  6EE6               	movwf	postinc1,c
 13348  00580A  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 13349  00580C  6EE6               	movwf	postinc1,c
 13350  00580E  ECB7  F02F         	call	_UART1_SetTxInterruptHandler	;wreg free
 13351                           
 13352                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 13353  005812  013D               	movlb	61	; () banked
 13354  005814  6BEC               	clrf	236,b	;volatile
 13355                           
 13356                           ; BSR set to: 61
 13357                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 13358  005816  6BED               	clrf	237,b	;volatile
 13359                           
 13360                           ; BSR set to: 61
 13361                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 13362  005818  6BEE               	clrf	238,b	;volatile
 13363                           
 13364                           ; BSR set to: 61
 13365                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 13366  00581A  6BEF               	clrf	239,b	;volatile
 13367                           
 13368                           ; BSR set to: 61
 13369                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 13370  00581C  6BF0               	clrf	240,b	;volatile
 13371                           
 13372                           ; BSR set to: 61
 13373                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 13374  00581E  6BF1               	clrf	241,b	;volatile
 13375                           
 13376                           ; BSR set to: 61
 13377                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 13378  005820  0EB0               	movlw	176
 13379  005822  6FF2               	movwf	242,b	;volatile
 13380                           
 13381                           ; BSR set to: 61
 13382                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 13383  005824  0E80               	movlw	128
 13384  005826  6FF3               	movwf	243,b	;volatile
 13385                           
 13386                           ; BSR set to: 61
 13387                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 13388  005828  6BF4               	clrf	244,b	;volatile
 13389                           
 13390                           ; BSR set to: 61
 13391                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 13392  00582A  0E82               	movlw	130
 13393  00582C  6FF5               	movwf	245,b	;volatile
 13394                           
 13395                           ; BSR set to: 61
 13396                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 13397  00582E  0E06               	movlw	6
 13398  005830  6FF6               	movwf	246,b	;volatile
 13399                           
 13400                           ; BSR set to: 61
 13401                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 13402  005832  6BF7               	clrf	247,b	;volatile
 13403                           
 13404                           ; BSR set to: 61
 13405                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 13406  005834  6BF8               	clrf	248,b	;volatile
 13407                           
 13408                           ; BSR set to: 61
 13409                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 13410  005836  6BF9               	clrf	249,b	;volatile
 13411                           
 13412                           ; BSR set to: 61
 13413                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 13414  005838  6BFA               	clrf	250,b	;volatile
 13415                           
 13416                           ; BSR set to: 61
 13417                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 13418  00583A  6A3B               	clrf	_uart1TxHead,c	;volatile
 13419                           
 13420                           ; BSR set to: 61
 13421                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 13422  00583C  6A3A               	clrf	_uart1TxTail,c	;volatile
 13423                           
 13424                           ; BSR set to: 61
 13425                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 13426  00583E  0E40               	movlw	64
 13427  005840  6E39               	movwf	_uart1TxBufferRemaining,c	;volatile
 13428                           
 13429                           ; BSR set to: 61
 13430                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 13431  005842  6A38               	clrf	_uart1RxHead,c	;volatile
 13432                           
 13433                           ; BSR set to: 61
 13434                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 13435  005844  6A37               	clrf	_uart1RxTail,c	;volatile
 13436                           
 13437                           ; BSR set to: 61
 13438                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 13439  005846  6A36               	clrf	_uart1RxCount,c	;volatile
 13440                           
 13441                           ; BSR set to: 61
 13442                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 13443  005848  0139               	movlb	57	; () banked
 13444  00584A  8793               	bsf	147,3,b	;volatile
 13445                           
 13446                           ; BSR set to: 57
 13447                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 13448  00584C  0012               	return		;funcret
 13449  00584E                     __end_of_UART1_Initialize:
 13450                           	opt callstack 0
 13451                           
 13452 ;; *************** function _UART1_SetTxInterruptHandler *****************
 13453 ;; Defined at:
 13454 ;;		line 244 in file "mcc_generated_files/uart1.c"
 13455 ;; Parameters:    Size  Location     Type
 13456 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13457 ;;		 -> UART1_Transmit_ISR(1), 
 13458 ;; Auto vars:     Size  Location     Type
 13459 ;;		None
 13460 ;; Return value:  Size  Location     Type
 13461 ;;                  1  [STACK] void 
 13462 ;; Registers used:
 13463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13464 ;; Tracked objects:
 13465 ;;		On entry : 3F/39
 13466 ;;		On exit  : 0/0
 13467 ;;		Unchanged: 0/0
 13468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13473 ;;Total ram usage:        0 bytes
 13474 ;; Hardware stack levels used:    1
 13475 ;; Hardware stack levels required when called:    3
 13476 ;; This function calls:
 13477 ;;		Nothing
 13478 ;; This function is called by:
 13479 ;;		_UART1_Initialize
 13480 ;; This function uses a reentrant model
 13481 ;;
 13482                           
 13483                           	psect	text59
 13484  005F6E                     __ptext59:
 13485                           	opt callstack 0
 13486  005F6E                     _UART1_SetTxInterruptHandler:
 13487                           	opt callstack 25
 13488                           
 13489                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 13490                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13491                           
 13492                           ; BSR set to: 57
 13493                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13494                           ;incstack = 0
 13495  005F6E  50E1               	movf	fsr1l,w,c
 13496  005F70  0FFD               	addlw	-3
 13497  005F72  6ED9               	movwf	fsr2l,c
 13498  005F74  50E2               	movf	fsr1h,w,c
 13499  005F76  6EDA               	movwf	fsr2h,c
 13500  005F78  0EFF               	movlw	255
 13501  005F7A  22DA               	addwfc	fsr2h,f,c
 13502  005F7C  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler
 13503  005F82  006F FF78  F00C    	movff	postinc2,_UART1_TxInterruptHandler+1
 13504  005F88  006F FF74  F00D    	movff	postdec2,_UART1_TxInterruptHandler+2
 13505                           
 13506                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13507  005F8E  52E5               	movf	postdec1,f,c
 13508  005F90  52E5               	movf	postdec1,f,c
 13509  005F92  52E5               	movf	postdec1,f,c
 13510  005F94  0012               	return		;funcret
 13511  005F96                     __end_of_UART1_SetTxInterruptHandler:
 13512                           	opt callstack 0
 13513                           
 13514 ;; *************** function _UART1_SetRxInterruptHandler *****************
 13515 ;; Defined at:
 13516 ;;		line 239 in file "mcc_generated_files/uart1.c"
 13517 ;; Parameters:    Size  Location     Type
 13518 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13519 ;;		 -> UART1_Receive_ISR(1), 
 13520 ;; Auto vars:     Size  Location     Type
 13521 ;;		None
 13522 ;; Return value:  Size  Location     Type
 13523 ;;                  1  [STACK] void 
 13524 ;; Registers used:
 13525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13526 ;; Tracked objects:
 13527 ;;		On entry : 3F/39
 13528 ;;		On exit  : 0/0
 13529 ;;		Unchanged: 0/0
 13530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13535 ;;Total ram usage:        0 bytes
 13536 ;; Hardware stack levels used:    1
 13537 ;; Hardware stack levels required when called:    3
 13538 ;; This function calls:
 13539 ;;		Nothing
 13540 ;; This function is called by:
 13541 ;;		_UART1_Initialize
 13542 ;; This function uses a reentrant model
 13543 ;;
 13544                           
 13545                           	psect	text60
 13546  005F96                     __ptext60:
 13547                           	opt callstack 0
 13548  005F96                     _UART1_SetRxInterruptHandler:
 13549                           	opt callstack 25
 13550                           
 13551                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 13552                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13553                           
 13554                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13555                           ;incstack = 0
 13556  005F96  50E1               	movf	fsr1l,w,c
 13557  005F98  0FFD               	addlw	-3
 13558  005F9A  6ED9               	movwf	fsr2l,c
 13559  005F9C  50E2               	movf	fsr1h,w,c
 13560  005F9E  6EDA               	movwf	fsr2h,c
 13561  005FA0  0EFF               	movlw	255
 13562  005FA2  22DA               	addwfc	fsr2h,f,c
 13563  005FA4  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler
 13564  005FAA  006F FF78  F00F    	movff	postinc2,_UART1_RxInterruptHandler+1
 13565  005FB0  006F FF74  F010    	movff	postdec2,_UART1_RxInterruptHandler+2
 13566                           
 13567                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13568  005FB6  52E5               	movf	postdec1,f,c
 13569  005FB8  52E5               	movf	postdec1,f,c
 13570  005FBA  52E5               	movf	postdec1,f,c
 13571  005FBC  0012               	return		;funcret
 13572  005FBE                     __end_of_UART1_SetRxInterruptHandler:
 13573                           	opt callstack 0
 13574                           
 13575 ;; *************** function _TMR6_Initialize *****************
 13576 ;; Defined at:
 13577 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 13578 ;; Parameters:    Size  Location     Type
 13579 ;;		None
 13580 ;; Auto vars:     Size  Location     Type
 13581 ;;		None
 13582 ;; Return value:  Size  Location     Type
 13583 ;;                  1  [STACK] void 
 13584 ;; Registers used:
 13585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13586 ;; Tracked objects:
 13587 ;;		On entry : 3F/39
 13588 ;;		On exit  : 0/0
 13589 ;;		Unchanged: 0/0
 13590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13595 ;;Total ram usage:        0 bytes
 13596 ;; Hardware stack levels used:    1
 13597 ;; Hardware stack levels required when called:    4
 13598 ;; This function calls:
 13599 ;;		_TMR6_SetInterruptHandler
 13600 ;; This function is called by:
 13601 ;;		_SYSTEM_Initialize
 13602 ;; This function uses a reentrant model
 13603 ;;
 13604                           
 13605                           	psect	text61
 13606  005FBE                     __ptext61:
 13607                           	opt callstack 0
 13608  005FBE                     _TMR6_Initialize:
 13609                           	opt callstack 25
 13610                           
 13611                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 13612                           
 13613                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13614                           ;incstack = 0
 13615  005FBE  0E01               	movlw	1
 13616  005FC0  6E96               	movwf	16278,c	;volatile
 13617                           
 13618                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 13619  005FC2  6A95               	clrf	16277,c	;volatile
 13620                           
 13621                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 13622  005FC4  6A97               	clrf	16279,c	;volatile
 13623                           
 13624                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 13625  005FC6  0E03               	movlw	3
 13626  005FC8  6E93               	movwf	16275,c	;volatile
 13627                           
 13628                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 13629  005FCA  6A92               	clrf	16274,c	;volatile
 13630                           
 13631                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 13632  005FCC  0139               	movlb	57	; () banked
 13633  005FCE  91A9               	bcf	169,0,b	;volatile
 13634                           
 13635                           ; BSR set to: 57
 13636                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 13637  005FD0  8199               	bsf	153,0,b	;volatile
 13638                           
 13639                           ; BSR set to: 57
 13640                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 13641  005FD2  0EDA               	movlw	low _TMR6_DefaultInterruptHandler
 13642  005FD4  6EE6               	movwf	postinc1,c
 13643  005FD6  0E5A               	movlw	high _TMR6_DefaultInterruptHandler
 13644  005FD8  6EE6               	movwf	postinc1,c
 13645  005FDA  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 13646  005FDC  6EE6               	movwf	postinc1,c
 13647  005FDE  ECF3  F02F         	call	_TMR6_SetInterruptHandler	;wreg free
 13648                           
 13649                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 13650  005FE2  6894               	setf	16276,c	;volatile
 13651                           
 13652                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13653  005FE4  0012               	return		;funcret
 13654  005FE6                     __end_of_TMR6_Initialize:
 13655                           	opt callstack 0
 13656                           
 13657 ;; *************** function _TMR6_SetInterruptHandler *****************
 13658 ;; Defined at:
 13659 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 13660 ;; Parameters:    Size  Location     Type
 13661 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13662 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 13663 ;; Auto vars:     Size  Location     Type
 13664 ;;		None
 13665 ;; Return value:  Size  Location     Type
 13666 ;;                  1  [STACK] void 
 13667 ;; Registers used:
 13668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13669 ;; Tracked objects:
 13670 ;;		On entry : 3F/39
 13671 ;;		On exit  : 0/0
 13672 ;;		Unchanged: 0/0
 13673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13678 ;;Total ram usage:        0 bytes
 13679 ;; Hardware stack levels used:    1
 13680 ;; Hardware stack levels required when called:    3
 13681 ;; This function calls:
 13682 ;;		Nothing
 13683 ;; This function is called by:
 13684 ;;		_TMR6_Initialize
 13685 ;; This function uses a reentrant model
 13686 ;;
 13687                           
 13688                           	psect	text62
 13689  005FE6                     __ptext62:
 13690                           	opt callstack 0
 13691  005FE6                     _TMR6_SetInterruptHandler:
 13692                           	opt callstack 25
 13693                           
 13694                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 13695                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13696                           
 13697                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13698                           ;incstack = 0
 13699  005FE6  50E1               	movf	fsr1l,w,c
 13700  005FE8  0FFD               	addlw	-3
 13701  005FEA  6ED9               	movwf	fsr2l,c
 13702  005FEC  50E2               	movf	fsr1h,w,c
 13703  005FEE  6EDA               	movwf	fsr2h,c
 13704  005FF0  0EFF               	movlw	255
 13705  005FF2  22DA               	addwfc	fsr2h,f,c
 13706  005FF4  006F FF78  F0F7    	movff	postinc2,_TMR6_InterruptHandler
 13707  005FFA  006F FF78  F0F8    	movff	postinc2,_TMR6_InterruptHandler+1
 13708  006000  006F FF74  F0F9    	movff	postdec2,_TMR6_InterruptHandler+2
 13709                           
 13710                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13711  006006  52E5               	movf	postdec1,f,c
 13712  006008  52E5               	movf	postdec1,f,c
 13713  00600A  52E5               	movf	postdec1,f,c
 13714  00600C  0012               	return		;funcret
 13715  00600E                     __end_of_TMR6_SetInterruptHandler:
 13716                           	opt callstack 0
 13717                           
 13718 ;; *************** function _TMR5_Initialize *****************
 13719 ;; Defined at:
 13720 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 13721 ;; Parameters:    Size  Location     Type
 13722 ;;		None
 13723 ;; Auto vars:     Size  Location     Type
 13724 ;;		None
 13725 ;; Return value:  Size  Location     Type
 13726 ;;                  1  [STACK] void 
 13727 ;; Registers used:
 13728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 13729 ;; Tracked objects:
 13730 ;;		On entry : 3F/3C
 13731 ;;		On exit  : 0/0
 13732 ;;		Unchanged: 0/0
 13733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13738 ;;Total ram usage:        0 bytes
 13739 ;; Hardware stack levels used:    1
 13740 ;; Hardware stack levels required when called:    4
 13741 ;; This function calls:
 13742 ;;		_TMR5_SetInterruptHandler
 13743 ;; This function is called by:
 13744 ;;		_SYSTEM_Initialize
 13745 ;; This function uses a reentrant model
 13746 ;;
 13747                           
 13748                           	psect	text63
 13749  005A94                     __ptext63:
 13750                           	opt callstack 0
 13751  005A94                     _TMR5_Initialize:
 13752                           	opt callstack 25
 13753                           
 13754                           ;mcc_generated_files/tmr5.c: 71:  T5GCON = 0x00;
 13755                           
 13756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13757                           ;incstack = 0
 13758  005A94  6A9B               	clrf	16283,c	;volatile
 13759                           
 13760                           ;mcc_generated_files/tmr5.c: 74:  T5GATE = 0x00;
 13761  005A96  6A9C               	clrf	16284,c	;volatile
 13762                           
 13763                           ;mcc_generated_files/tmr5.c: 77:  T5CLK = 0x01;
 13764  005A98  0E01               	movlw	1
 13765  005A9A  6E9D               	movwf	16285,c	;volatile
 13766                           
 13767                           ;mcc_generated_files/tmr5.c: 80:  TMR5H = 0x63;
 13768  005A9C  0E63               	movlw	99
 13769  005A9E  6E99               	movwf	16281,c	;volatile
 13770                           
 13771                           ;mcc_generated_files/tmr5.c: 83:  TMR5L = 0xC0;
 13772  005AA0  0EC0               	movlw	192
 13773  005AA2  6E98               	movwf	16280,c	;volatile
 13774                           
 13775                           ;mcc_generated_files/tmr5.c: 86:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 13776  005AA4  5098               	movf	16280,w,c	;volatile
 13777  005AA6  006F FE64  F03C    	movff	16281,btemp	;volatile
 13778  005AAC  6A3D               	clrf	btemp+1,c
 13779  005AAE  0060  F0F0  F03D   	movff	btemp,btemp+1
 13780  005AB4  6A3C               	clrf	btemp,c
 13781  005AB6  103C               	iorwf	btemp,w,c
 13782  005AB8  6E28               	movwf	_timer5ReloadVal,c	;volatile
 13783  005ABA  503D               	movf	btemp+1,w,c
 13784  005ABC  6E29               	movwf	_timer5ReloadVal+1,c	;volatile
 13785                           
 13786                           ;mcc_generated_files/tmr5.c: 89:  PIR8bits.TMR5IF = 0;
 13787  005ABE  0139               	movlb	57	; () banked
 13788  005AC0  9DA8               	bcf	168,6,b	;volatile
 13789                           
 13790                           ; BSR set to: 57
 13791                           ;mcc_generated_files/tmr5.c: 92:  PIE8bits.TMR5IE = 1;
 13792  005AC2  8D98               	bsf	152,6,b	;volatile
 13793                           
 13794                           ; BSR set to: 57
 13795                           ;mcc_generated_files/tmr5.c: 95:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 13796  005AC4  0E6E               	movlw	low _TMR5_DefaultInterruptHandler
 13797  005AC6  6EE6               	movwf	postinc1,c
 13798  005AC8  0E63               	movlw	high _TMR5_DefaultInterruptHandler
 13799  005ACA  6EE6               	movwf	postinc1,c
 13800  005ACC  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 13801  005ACE  6EE6               	movwf	postinc1,c
 13802  005AD0  EC07  F030         	call	_TMR5_SetInterruptHandler	;wreg free
 13803                           
 13804                           ;mcc_generated_files/tmr5.c: 98:  T5CON = 0x31;
 13805  005AD4  0E31               	movlw	49
 13806  005AD6  6E9A               	movwf	16282,c	;volatile
 13807                           
 13808                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13809  005AD8  0012               	return		;funcret
 13810  005ADA                     __end_of_TMR5_Initialize:
 13811                           	opt callstack 0
 13812                           
 13813 ;; *************** function _TMR5_SetInterruptHandler *****************
 13814 ;; Defined at:
 13815 ;;		line 189 in file "mcc_generated_files/tmr5.c"
 13816 ;; Parameters:    Size  Location     Type
 13817 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13818 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 13819 ;; Auto vars:     Size  Location     Type
 13820 ;;		None
 13821 ;; Return value:  Size  Location     Type
 13822 ;;                  1  [STACK] void 
 13823 ;; Registers used:
 13824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13825 ;; Tracked objects:
 13826 ;;		On entry : 3F/39
 13827 ;;		On exit  : 0/0
 13828 ;;		Unchanged: 0/0
 13829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13834 ;;Total ram usage:        0 bytes
 13835 ;; Hardware stack levels used:    1
 13836 ;; Hardware stack levels required when called:    3
 13837 ;; This function calls:
 13838 ;;		Nothing
 13839 ;; This function is called by:
 13840 ;;		_TMR5_Initialize
 13841 ;; This function uses a reentrant model
 13842 ;;
 13843                           
 13844                           	psect	text64
 13845  00600E                     __ptext64:
 13846                           	opt callstack 0
 13847  00600E                     _TMR5_SetInterruptHandler:
 13848                           	opt callstack 25
 13849                           
 13850                           ;mcc_generated_files/tmr5.c: 189: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 190: {;mcc_generated_files/tmr5.c: 191:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 13851                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13852                           
 13853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13854                           ;incstack = 0
 13855  00600E  50E1               	movf	fsr1l,w,c
 13856  006010  0FFD               	addlw	-3
 13857  006012  6ED9               	movwf	fsr2l,c
 13858  006014  50E2               	movf	fsr1h,w,c
 13859  006016  6EDA               	movwf	fsr2h,c
 13860  006018  0EFF               	movlw	255
 13861  00601A  22DA               	addwfc	fsr2h,f,c
 13862  00601C  006F FF78  F0F4    	movff	postinc2,_TMR5_InterruptHandler
 13863  006022  006F FF78  F0F5    	movff	postinc2,_TMR5_InterruptHandler+1
 13864  006028  006F FF74  F0F6    	movff	postdec2,_TMR5_InterruptHandler+2
 13865                           
 13866                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13867  00602E  52E5               	movf	postdec1,f,c
 13868  006030  52E5               	movf	postdec1,f,c
 13869  006032  52E5               	movf	postdec1,f,c
 13870  006034  0012               	return		;funcret
 13871  006036                     __end_of_TMR5_SetInterruptHandler:
 13872                           	opt callstack 0
 13873                           
 13874 ;; *************** function _SPI1_Initialize *****************
 13875 ;; Defined at:
 13876 ;;		line 64 in file "mcc_generated_files/spi1.c"
 13877 ;; Parameters:    Size  Location     Type
 13878 ;;		None
 13879 ;; Auto vars:     Size  Location     Type
 13880 ;;		None
 13881 ;; Return value:  Size  Location     Type
 13882 ;;                  1  [STACK] void 
 13883 ;; Registers used:
 13884 ;;		wreg, status,2
 13885 ;; Tracked objects:
 13886 ;;		On entry : 3F/39
 13887 ;;		On exit  : 3F/3D
 13888 ;;		Unchanged: 0/0
 13889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13894 ;;Total ram usage:        0 bytes
 13895 ;; Hardware stack levels used:    1
 13896 ;; Hardware stack levels required when called:    3
 13897 ;; This function calls:
 13898 ;;		Nothing
 13899 ;; This function is called by:
 13900 ;;		_SYSTEM_Initialize
 13901 ;; This function uses a reentrant model
 13902 ;;
 13903                           
 13904                           	psect	text65
 13905  006388                     __ptext65:
 13906                           	opt callstack 0
 13907  006388                     _SPI1_Initialize:
 13908                           	opt callstack 26
 13909                           
 13910                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 13911                           
 13912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13913                           ;incstack = 0
 13914  006388  0E40               	movlw	64
 13915  00638A  013D               	movlb	61	; () banked
 13916  00638C  6F15               	movwf	21,b	;volatile
 13917                           
 13918                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 13919  00638E  0E03               	movlw	3
 13920  006390  6F16               	movwf	22,b	;volatile
 13921                           
 13922                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 13923  006392  0E4F               	movlw	79
 13924  006394  6F19               	movwf	25,b	;volatile
 13925                           
 13926                           ; BSR set to: 61
 13927                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 13928  006396  6B1C               	clrf	28,b	;volatile
 13929                           
 13930                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 13931  006398  0E83               	movlw	131
 13932  00639A  6F14               	movwf	20,b	;volatile
 13933                           
 13934                           ; BSR set to: 61
 13935                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13936  00639C  0012               	return		;funcret
 13937  00639E                     __end_of_SPI1_Initialize:
 13938                           	opt callstack 0
 13939                           
 13940 ;; *************** function _PMD_Initialize *****************
 13941 ;; Defined at:
 13942 ;;		line 88 in file "mcc_generated_files/mcc.c"
 13943 ;; Parameters:    Size  Location     Type
 13944 ;;		None
 13945 ;; Auto vars:     Size  Location     Type
 13946 ;;		None
 13947 ;; Return value:  Size  Location     Type
 13948 ;;                  1  [STACK] void 
 13949 ;; Registers used:
 13950 ;;		None
 13951 ;; Tracked objects:
 13952 ;;		On entry : 3F/39
 13953 ;;		On exit  : 3F/39
 13954 ;;		Unchanged: 0/0
 13955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13960 ;;Total ram usage:        0 bytes
 13961 ;; Hardware stack levels used:    1
 13962 ;; Hardware stack levels required when called:    3
 13963 ;; This function calls:
 13964 ;;		Nothing
 13965 ;; This function is called by:
 13966 ;;		_SYSTEM_Initialize
 13967 ;; This function uses a reentrant model
 13968 ;;
 13969                           
 13970                           	psect	text66
 13971  0063B4                     __ptext66:
 13972                           	opt callstack 0
 13973  0063B4                     _PMD_Initialize:
 13974                           	opt callstack 26
 13975                           
 13976                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 13977                           
 13978                           ; BSR set to: 61
 13979                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13980                           ;incstack = 0
 13981  0063B4  0139               	movlb	57	; () banked
 13982  0063B6  6BC0               	clrf	192,b	;volatile
 13983                           
 13984                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 13985  0063B8  6BC1               	clrf	193,b	;volatile
 13986                           
 13987                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 13988  0063BA  6BC2               	clrf	194,b	;volatile
 13989                           
 13990                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 13991  0063BC  6BC3               	clrf	195,b	;volatile
 13992                           
 13993                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 13994  0063BE  6BC4               	clrf	196,b	;volatile
 13995                           
 13996                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 13997  0063C0  6BC5               	clrf	197,b	;volatile
 13998                           
 13999                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 14000  0063C2  6BC6               	clrf	198,b	;volatile
 14001                           
 14002                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 14003  0063C4  6BC7               	clrf	199,b	;volatile
 14004                           
 14005                           ; BSR set to: 57
 14006                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 14007  0063C6  0012               	return		;funcret
 14008  0063C8                     __end_of_PMD_Initialize:
 14009                           	opt callstack 0
 14010                           
 14011 ;; *************** function _PIN_MANAGER_Initialize *****************
 14012 ;; Defined at:
 14013 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 14014 ;; Parameters:    Size  Location     Type
 14015 ;;		None
 14016 ;; Auto vars:     Size  Location     Type
 14017 ;;		None
 14018 ;; Return value:  Size  Location     Type
 14019 ;;                  1  [STACK] void 
 14020 ;; Registers used:
 14021 ;;		wreg, status,2
 14022 ;; Tracked objects:
 14023 ;;		On entry : 3F/39
 14024 ;;		On exit  : 3F/3A
 14025 ;;		Unchanged: 0/0
 14026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14031 ;;Total ram usage:        0 bytes
 14032 ;; Hardware stack levels used:    1
 14033 ;; Hardware stack levels required when called:    3
 14034 ;; This function calls:
 14035 ;;		Nothing
 14036 ;; This function is called by:
 14037 ;;		_SYSTEM_Initialize
 14038 ;; This function uses a reentrant model
 14039 ;;
 14040                           
 14041                           	psect	text67
 14042  005334                     __ptext67:
 14043                           	opt callstack 0
 14044  005334                     _PIN_MANAGER_Initialize:
 14045                           	opt callstack 26
 14046                           
 14047                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 14048                           
 14049                           ; BSR set to: 57
 14050                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14051                           ;incstack = 0
 14052  005334  0E07               	movlw	7
 14053  005336  6EBE               	movwf	16318,c	;volatile
 14054                           
 14055                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 14056  005338  6ABD               	clrf	16317,c	;volatile
 14057                           
 14058                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 14059  00533A  6ABA               	clrf	16314,c	;volatile
 14060                           
 14061                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 14062  00533C  6ABF               	clrf	16319,c	;volatile
 14063                           
 14064                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 14065  00533E  6ABB               	clrf	16315,c	;volatile
 14066                           
 14067                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 14068  005340  0E06               	movlw	6
 14069  005342  6EBC               	movwf	16316,c	;volatile
 14070                           
 14071                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 14072  005344  6AC6               	clrf	16326,c	;volatile
 14073                           
 14074                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 14075  005346  68C7               	setf	16327,c	;volatile
 14076                           
 14077                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 14078  005348  0E8F               	movlw	143
 14079  00534A  6EC2               	movwf	16322,c	;volatile
 14080                           
 14081                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 14082  00534C  0EBF               	movlw	191
 14083  00534E  6EC3               	movwf	16323,c	;volatile
 14084                           
 14085                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 14086  005350  0E91               	movlw	145
 14087  005352  6EC4               	movwf	16324,c	;volatile
 14088                           
 14089                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 14090  005354  0E0C               	movlw	12
 14091  005356  6EC5               	movwf	16325,c	;volatile
 14092                           
 14093                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 14094  005358  013A               	movlb	58	; () banked
 14095  00535A  6B70               	clrf	112,b	;volatile
 14096                           
 14097                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 14098  00535C  0E01               	movlw	1
 14099  00535E  6F60               	movwf	96,b	;volatile
 14100                           
 14101                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 14102  005360  0E38               	movlw	56
 14103  005362  6F50               	movwf	80,b	;volatile
 14104                           
 14105                           ; BSR set to: 58
 14106                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 14107  005364  6B80               	clrf	128,b	;volatile
 14108                           
 14109                           ; BSR set to: 58
 14110                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 14111  005366  6990               	setf	144,b	;volatile
 14112                           
 14113                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 14114  005368  0E8F               	movlw	143
 14115  00536A  6F40               	movwf	64,b	;volatile
 14116                           
 14117                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0xFC;
 14118  00536C  0EFC               	movlw	252
 14119  00536E  6F71               	movwf	113,b	;volatile
 14120                           
 14121                           ; BSR set to: 58
 14122                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 14123  005370  6B91               	clrf	145,b	;volatile
 14124                           
 14125                           ; BSR set to: 58
 14126                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 14127  005372  6B81               	clrf	129,b	;volatile
 14128                           
 14129                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 14130  005374  0E87               	movlw	135
 14131  005376  6F51               	movwf	81,b	;volatile
 14132                           
 14133                           ; BSR set to: 58
 14134                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 14135  005378  6B41               	clrf	65,b	;volatile
 14136                           
 14137                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 14138  00537A  0E90               	movlw	144
 14139  00537C  6F61               	movwf	97,b	;volatile
 14140                           
 14141                           ; BSR set to: 58
 14142                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 14143  00537E  6B82               	clrf	130,b	;volatile
 14144                           
 14145                           ; BSR set to: 58
 14146                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 14147  005380  6B92               	clrf	146,b	;volatile
 14148                           
 14149                           ; BSR set to: 58
 14150                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 14151  005382  6B42               	clrf	66,b	;volatile
 14152                           
 14153                           ; BSR set to: 58
 14154                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 14155  005384  6B52               	clrf	82,b	;volatile
 14156                           
 14157                           ; BSR set to: 58
 14158                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 14159  005386  6B62               	clrf	98,b	;volatile
 14160                           
 14161                           ; BSR set to: 58
 14162                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 14163  005388  6B72               	clrf	114,b	;volatile
 14164                           
 14165                           ; BSR set to: 58
 14166                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 14167  00538A  6943               	setf	67,b	;volatile
 14168                           
 14169                           ; BSR set to: 58
 14170                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 14171  00538C  6953               	setf	83,b	;volatile
 14172                           
 14173                           ; BSR set to: 58
 14174                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 14175  00538E  6963               	setf	99,b	;volatile
 14176                           
 14177                           ; BSR set to: 58
 14178                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 14179  005390  6973               	setf	115,b	;volatile
 14180                           
 14181                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 14182  005392  0E07               	movlw	7
 14183  005394  6F83               	movwf	131,b	;volatile
 14184                           
 14185                           ; BSR set to: 58
 14186                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 14187  005396  6993               	setf	147,b	;volatile
 14188                           
 14189                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 14190  005398  0E0F               	movlw	15
 14191  00539A  6FE8               	movwf	232,b	;volatile
 14192                           
 14193                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 14194  00539C  0E16               	movlw	22
 14195  00539E  6F0E               	movwf	14,b	;volatile
 14196                           
 14197                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 14198  0053A0  0E1E               	movlw	30
 14199  0053A2  6F13               	movwf	19,b	;volatile
 14200                           
 14201                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 14202  0053A4  0E08               	movlw	8
 14203  0053A6  6FC0               	movwf	192,b	;volatile
 14204                           
 14205                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 14206  0053A8  0E0A               	movlw	10
 14207  0053AA  6FC2               	movwf	194,b	;volatile
 14208                           
 14209                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 14210  0053AC  0E09               	movlw	9
 14211  0053AE  6FC1               	movwf	193,b	;volatile
 14212                           
 14213                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 14214  0053B0  0E17               	movlw	23
 14215  0053B2  6FE5               	movwf	229,b	;volatile
 14216                           
 14217                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 14218  0053B4  0E13               	movlw	19
 14219  0053B6  6FDE               	movwf	222,b	;volatile
 14220                           
 14221                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 14222  0053B8  0E01               	movlw	1
 14223  0053BA  6F04               	movwf	4,b	;volatile
 14224                           
 14225                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 14226  0053BC  0E26               	movlw	38
 14227  0053BE  6F05               	movwf	5,b	;volatile
 14228                           
 14229                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 14230  0053C0  0E28               	movlw	40
 14231  0053C2  6F06               	movwf	6,b	;volatile
 14232                           
 14233                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 14234  0053C4  0E1F               	movlw	31
 14235  0053C6  6F15               	movwf	21,b	;volatile
 14236                           
 14237                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 14238  0053C8  0E13               	movlw	19
 14239  0053CA  6F16               	movwf	22,b	;volatile
 14240                           
 14241                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 14242  0053CC  0E14               	movlw	20
 14243  0053CE  6FDF               	movwf	223,b	;volatile
 14244                           
 14245                           ; BSR set to: 58
 14246                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 14247  0053D0  0012               	return		;funcret
 14248  0053D2                     __end_of_PIN_MANAGER_Initialize:
 14249                           	opt callstack 0
 14250                           
 14251 ;; *************** function _OSCILLATOR_Initialize *****************
 14252 ;; Defined at:
 14253 ;;		line 70 in file "mcc_generated_files/mcc.c"
 14254 ;; Parameters:    Size  Location     Type
 14255 ;;		None
 14256 ;; Auto vars:     Size  Location     Type
 14257 ;;		None
 14258 ;; Return value:  Size  Location     Type
 14259 ;;                  1  [STACK] void 
 14260 ;; Registers used:
 14261 ;;		wreg, status,2
 14262 ;; Tracked objects:
 14263 ;;		On entry : 3F/3A
 14264 ;;		On exit  : 3F/39
 14265 ;;		Unchanged: 0/0
 14266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14271 ;;Total ram usage:        0 bytes
 14272 ;; Hardware stack levels used:    1
 14273 ;; Hardware stack levels required when called:    3
 14274 ;; This function calls:
 14275 ;;		Nothing
 14276 ;; This function is called by:
 14277 ;;		_SYSTEM_Initialize
 14278 ;; This function uses a reentrant model
 14279 ;;
 14280                           
 14281                           	psect	text68
 14282  00639E                     __ptext68:
 14283                           	opt callstack 0
 14284  00639E                     _OSCILLATOR_Initialize:
 14285                           	opt callstack 26
 14286                           
 14287                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 14288                           
 14289                           ; BSR set to: 58
 14290                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14291                           ;incstack = 0
 14292  00639E  0E20               	movlw	32
 14293  0063A0  0139               	movlb	57	; () banked
 14294  0063A2  6FD9               	movwf	217,b	;volatile
 14295                           
 14296                           ; BSR set to: 57
 14297                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 14298  0063A4  6BDB               	clrf	219,b	;volatile
 14299                           
 14300                           ; BSR set to: 57
 14301                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 14302  0063A6  6BDD               	clrf	221,b	;volatile
 14303                           
 14304                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 14305  0063A8  0E02               	movlw	2
 14306  0063AA  6FDF               	movwf	223,b	;volatile
 14307                           
 14308                           ; BSR set to: 57
 14309                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 14310  0063AC  6BDE               	clrf	222,b	;volatile
 14311  0063AE                     l194:
 14312                           
 14313                           ; BSR set to: 57
 14314                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 14315  0063AE  B1DC               	btfsc	220,0,b	;volatile
 14316  0063B0  0012               	return	
 14317  0063B2  D7FD               	goto	l194
 14318  0063B4                     __end_of_OSCILLATOR_Initialize:
 14319                           	opt callstack 0
 14320                           
 14321 ;; *************** function _NCO1_Initialize *****************
 14322 ;; Defined at:
 14323 ;;		line 58 in file "mcc_generated_files/nco1.c"
 14324 ;; Parameters:    Size  Location     Type
 14325 ;;		None
 14326 ;; Auto vars:     Size  Location     Type
 14327 ;;		None
 14328 ;; Return value:  Size  Location     Type
 14329 ;;                  1  [STACK] void 
 14330 ;; Registers used:
 14331 ;;		wreg, status,2
 14332 ;; Tracked objects:
 14333 ;;		On entry : 0/39
 14334 ;;		On exit  : 3F/3F
 14335 ;;		Unchanged: 0/0
 14336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14341 ;;Total ram usage:        0 bytes
 14342 ;; Hardware stack levels used:    1
 14343 ;; Hardware stack levels required when called:    3
 14344 ;; This function calls:
 14345 ;;		Nothing
 14346 ;; This function is called by:
 14347 ;;		_SYSTEM_Initialize
 14348 ;; This function uses a reentrant model
 14349 ;;
 14350                           
 14351                           	psect	text69
 14352  006300                     __ptext69:
 14353                           	opt callstack 0
 14354  006300                     _NCO1_Initialize:
 14355                           	opt callstack 26
 14356                           
 14357                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 14358                           
 14359                           ; BSR set to: 57
 14360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14361                           ;incstack = 0
 14362  006300  013F               	movlb	63	; () banked
 14363  006302  6B3E               	clrf	62,b	;volatile
 14364                           
 14365                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 14366  006304  6B3F               	clrf	63,b	;volatile
 14367                           
 14368                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 14369  006306  6B3A               	clrf	58,b	;volatile
 14370                           
 14371                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 14372  006308  6B39               	clrf	57,b	;volatile
 14373                           
 14374                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 14375  00630A  6B38               	clrf	56,b	;volatile
 14376                           
 14377                           ; BSR set to: 63
 14378                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 14379  00630C  0E06               	movlw	6
 14380  00630E  6F3D               	movwf	61,b	;volatile
 14381                           
 14382                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 14383  006310  0EC7               	movlw	199
 14384  006312  6F3C               	movwf	60,b	;volatile
 14385                           
 14386                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 14387  006314  0EAE               	movlw	174
 14388  006316  6F3B               	movwf	59,b	;volatile
 14389                           
 14390                           ; BSR set to: 63
 14391                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 14392  006318  8F3E               	bsf	62,7,b	;volatile
 14393                           
 14394                           ; BSR set to: 63
 14395                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14396  00631A  0012               	return		;funcret
 14397  00631C                     __end_of_NCO1_Initialize:
 14398                           	opt callstack 0
 14399                           
 14400 ;; *************** function _INTERRUPT_Initialize *****************
 14401 ;; Defined at:
 14402 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14403 ;; Parameters:    Size  Location     Type
 14404 ;;		None
 14405 ;; Auto vars:     Size  Location     Type
 14406 ;;  state           1  [STACK] _Bool 
 14407 ;; Return value:  Size  Location     Type
 14408 ;;                  1  [STACK] void 
 14409 ;; Registers used:
 14410 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 14411 ;; Tracked objects:
 14412 ;;		On entry : 0/0
 14413 ;;		On exit  : 3F/39
 14414 ;;		Unchanged: 0/0
 14415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14420 ;;Total ram usage:        0 bytes
 14421 ;; Hardware stack levels used:    1
 14422 ;; Hardware stack levels required when called:    3
 14423 ;; This function calls:
 14424 ;;		Nothing
 14425 ;; This function is called by:
 14426 ;;		_SYSTEM_Initialize
 14427 ;; This function uses a reentrant model
 14428 ;;
 14429                           
 14430                           	psect	text70
 14431  005720                     __ptext70:
 14432                           	opt callstack 0
 14433  005720                     _INTERRUPT_Initialize:
 14434                           	opt callstack 0
 14435                           
 14436                           ; BSR set to: 63
 14437                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14438  005720  52E6               	movf	postinc1,f,c
 14439                           
 14440                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 14441                           
 14442                           ;incstack = 0
 14443  005722  8AD2               	bsf	16338,5,c	;volatile
 14444                           
 14445                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 14446  005724  AED2               	btfss	16338,7,c	;volatile
 14447  005726  D003               	goto	u980
 14448  005728  6A47               	clrf	btemp+11,c
 14449  00572A  2A47               	incf	btemp+11,f,c
 14450  00572C  D001               	goto	u998
 14451  00572E                     u980:
 14452  00572E  6A47               	clrf	btemp+11,c
 14453  005730                     u998:
 14454                           
 14455                           ;stkvar	_state @ sp[(-1)+0]
 14456  005730  0EFF               	movlw	-1
 14457  005732  0060  F11F  FFE3   	movff	btemp+11,plusw1
 14458                           
 14459                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 14460  005738  9ED2               	bcf	16338,7,c	;volatile
 14461                           
 14462                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 14463  00573A  0E55               	movlw	85
 14464  00573C  6ED4               	movwf	16340,c	;volatile
 14465                           
 14466                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 14467  00573E  0EAA               	movlw	170
 14468  005740  6ED4               	movwf	16340,c	;volatile
 14469                           
 14470                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 14471  005742  90D4               	bcf	16340,0,c	;volatile
 14472                           
 14473                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 14474  005744  0138               	movlb	56	; () banked
 14475  005746  6B9F               	clrf	159,b	;volatile
 14476                           
 14477                           ; BSR set to: 56
 14478                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 14479  005748  6B9E               	clrf	158,b	;volatile
 14480                           
 14481                           ; BSR set to: 56
 14482                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 14483  00574A  0E08               	movlw	8
 14484  00574C  6F9D               	movwf	157,b	;volatile
 14485                           
 14486                           ; BSR set to: 56
 14487                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 14488  00574E  0E55               	movlw	85
 14489  005750  6ED4               	movwf	16340,c	;volatile
 14490                           
 14491                           ; BSR set to: 56
 14492                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 14493  005752  0EAA               	movlw	170
 14494  005754  6ED4               	movwf	16340,c	;volatile
 14495                           
 14496                           ; BSR set to: 56
 14497                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 14498  005756  80D4               	bsf	16340,0,c	;volatile
 14499                           
 14500                           ; BSR set to: 56
 14501                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 14502                           ;stkvar	_state @ sp[(-1)+0]
 14503  005758  0EFF               	movlw	-1
 14504  00575A  B0E3               	btfsc	plusw1,0,c
 14505  00575C  D002               	bra	u1005
 14506  00575E  9ED2               	bcf	16338,7,c	;volatile
 14507  005760  D001               	bra	u1006
 14508  005762                     u1005:
 14509  005762  8ED2               	bsf	16338,7,c	;volatile
 14510  005764                     u1006:
 14511                           
 14512                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 14513  005764  0139               	movlb	57	; () banked
 14514  005766  8782               	bsf	130,3,b	;volatile
 14515                           
 14516                           ; BSR set to: 57
 14517                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 14518  005768  8382               	bsf	130,1,b	;volatile
 14519                           
 14520                           ; BSR set to: 57
 14521                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 14522  00576A  8182               	bsf	130,0,b	;volatile
 14523                           
 14524                           ; BSR set to: 57
 14525                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 14526  00576C  8582               	bsf	130,2,b	;volatile
 14527                           
 14528                           ; BSR set to: 57
 14529                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 14530  00576E  8786               	bsf	134,3,b	;volatile
 14531                           
 14532                           ; BSR set to: 57
 14533                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 14534  005770  8586               	bsf	134,2,b	;volatile
 14535                           
 14536                           ; BSR set to: 57
 14537                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 14538  005772  8983               	bsf	131,4,b	;volatile
 14539                           
 14540                           ; BSR set to: 57
 14541                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 14542  005774  8783               	bsf	131,3,b	;volatile
 14543                           
 14544                           ; BSR set to: 57
 14545                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 14546  005776  8181               	bsf	129,0,b	;volatile
 14547                           
 14548                           ; BSR set to: 57
 14549                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 14550  005778  8185               	bsf	133,0,b	;volatile
 14551                           
 14552                           ; BSR set to: 57
 14553                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 14554  00577A  8B87               	bsf	135,5,b	;volatile
 14555                           
 14556                           ; BSR set to: 57
 14557                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 14558  00577C  8189               	bsf	137,0,b	;volatile
 14559                           
 14560                           ; BSR set to: 57
 14561                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 14562  00577E  8D88               	bsf	136,6,b	;volatile
 14563                           
 14564                           ; BSR set to: 57
 14565                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 14566  005780  8581               	bsf	129,2,b	;volatile
 14567                           
 14568                           ; BSR set to: 57
 14569                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 14570  005782  52E5               	movf	postdec1,f,c
 14571  005784  0012               	return		;funcret
 14572  005786                     __end_of_INTERRUPT_Initialize:
 14573                           	opt callstack 0
 14574                           
 14575 ;; *************** function _EXT_INT_Initialize *****************
 14576 ;; Defined at:
 14577 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 14578 ;; Parameters:    Size  Location     Type
 14579 ;;		None
 14580 ;; Auto vars:     Size  Location     Type
 14581 ;;		None
 14582 ;; Return value:  Size  Location     Type
 14583 ;;                  1  [STACK] void 
 14584 ;; Registers used:
 14585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14586 ;; Tracked objects:
 14587 ;;		On entry : 3F/3F
 14588 ;;		On exit  : 3F/39
 14589 ;;		Unchanged: 0/0
 14590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14595 ;;Total ram usage:        0 bytes
 14596 ;; Hardware stack levels used:    1
 14597 ;; Hardware stack levels required when called:    4
 14598 ;; This function calls:
 14599 ;;		_INT0_SetInterruptHandler
 14600 ;;		_INT1_SetInterruptHandler
 14601 ;;		_INT2_SetInterruptHandler
 14602 ;; This function is called by:
 14603 ;;		_SYSTEM_Initialize
 14604 ;; This function uses a reentrant model
 14605 ;;
 14606                           
 14607                           	psect	text71
 14608  0059B8                     __ptext71:
 14609                           	opt callstack 0
 14610  0059B8                     _EXT_INT_Initialize:
 14611                           	opt callstack 25
 14612                           
 14613                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 14614                           
 14615                           ; BSR set to: 57
 14616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14617                           ;incstack = 0
 14618  0059B8  0139               	movlb	57	; () banked
 14619  0059BA  91A1               	bcf	161,0,b	;volatile
 14620                           
 14621                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 14622  0059BC  90D2               	bcf	16338,0,c	;volatile
 14623                           
 14624                           ; BSR set to: 57
 14625                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 14626  0059BE  0E76               	movlw	low _INT0_DefaultInterruptHandler
 14627  0059C0  6EE6               	movwf	postinc1,c
 14628  0059C2  0E64               	movlw	high _INT0_DefaultInterruptHandler
 14629  0059C4  6EE6               	movwf	postinc1,c
 14630  0059C6  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 14631  0059C8  6EE6               	movwf	postinc1,c
 14632  0059CA  EC43  F030         	call	_INT0_SetInterruptHandler	;wreg free
 14633                           
 14634                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 14635  0059CE  0139               	movlb	57	; () banked
 14636  0059D0  8191               	bsf	145,0,b	;volatile
 14637                           
 14638                           ; BSR set to: 57
 14639                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 14640  0059D2  91A5               	bcf	165,0,b	;volatile
 14641                           
 14642                           ; BSR set to: 57
 14643                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 14644  0059D4  92D2               	bcf	16338,1,c	;volatile
 14645                           
 14646                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 14647  0059D6  0E78               	movlw	low _INT1_DefaultInterruptHandler
 14648  0059D8  6EE6               	movwf	postinc1,c
 14649  0059DA  0E64               	movlw	high _INT1_DefaultInterruptHandler
 14650  0059DC  6EE6               	movwf	postinc1,c
 14651  0059DE  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 14652  0059E0  6EE6               	movwf	postinc1,c
 14653  0059E2  EC2F  F030         	call	_INT1_SetInterruptHandler	;wreg free
 14654                           
 14655                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 14656  0059E6  0139               	movlb	57	; () banked
 14657  0059E8  8195               	bsf	149,0,b	;volatile
 14658                           
 14659                           ; BSR set to: 57
 14660                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 14661  0059EA  9BA7               	bcf	167,5,b	;volatile
 14662                           
 14663                           ; BSR set to: 57
 14664                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 14665  0059EC  94D2               	bcf	16338,2,c	;volatile
 14666                           
 14667                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 14668  0059EE  0E7A               	movlw	low _INT2_DefaultInterruptHandler
 14669  0059F0  6EE6               	movwf	postinc1,c
 14670  0059F2  0E64               	movlw	high _INT2_DefaultInterruptHandler
 14671  0059F4  6EE6               	movwf	postinc1,c
 14672  0059F6  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 14673  0059F8  6EE6               	movwf	postinc1,c
 14674  0059FA  EC1B  F030         	call	_INT2_SetInterruptHandler	;wreg free
 14675                           
 14676                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 14677  0059FE  0139               	movlb	57	; () banked
 14678  005A00  8B97               	bsf	151,5,b	;volatile
 14679                           
 14680                           ; BSR set to: 57
 14681                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14682  005A02  0012               	return		;funcret
 14683  005A04                     __end_of_EXT_INT_Initialize:
 14684                           	opt callstack 0
 14685                           
 14686 ;; *************** function _INT2_SetInterruptHandler *****************
 14687 ;; Defined at:
 14688 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 14689 ;; Parameters:    Size  Location     Type
 14690 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14691 ;;		 -> INT2_DefaultInterruptHandler(1), 
 14692 ;; Auto vars:     Size  Location     Type
 14693 ;;		None
 14694 ;; Return value:  Size  Location     Type
 14695 ;;                  1  [STACK] void 
 14696 ;; Registers used:
 14697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14698 ;; Tracked objects:
 14699 ;;		On entry : 3F/39
 14700 ;;		On exit  : 0/0
 14701 ;;		Unchanged: 0/0
 14702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14707 ;;Total ram usage:        0 bytes
 14708 ;; Hardware stack levels used:    1
 14709 ;; Hardware stack levels required when called:    3
 14710 ;; This function calls:
 14711 ;;		Nothing
 14712 ;; This function is called by:
 14713 ;;		_EXT_INT_Initialize
 14714 ;; This function uses a reentrant model
 14715 ;;
 14716                           
 14717                           	psect	text72
 14718  006036                     __ptext72:
 14719                           	opt callstack 0
 14720  006036                     _INT2_SetInterruptHandler:
 14721                           	opt callstack 25
 14722                           
 14723                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 14724                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14725                           
 14726                           ; BSR set to: 57
 14727                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14728                           ;incstack = 0
 14729  006036  50E1               	movf	fsr1l,w,c
 14730  006038  0FFD               	addlw	-3
 14731  00603A  6ED9               	movwf	fsr2l,c
 14732  00603C  50E2               	movf	fsr1h,w,c
 14733  00603E  6EDA               	movwf	fsr2h,c
 14734  006040  0EFF               	movlw	255
 14735  006042  22DA               	addwfc	fsr2h,f,c
 14736  006044  006F FF78  F017    	movff	postinc2,_INT2_InterruptHandler
 14737  00604A  006F FF78  F018    	movff	postinc2,_INT2_InterruptHandler+1
 14738  006050  006F FF74  F019    	movff	postdec2,_INT2_InterruptHandler+2
 14739                           
 14740                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14741  006056  52E5               	movf	postdec1,f,c
 14742  006058  52E5               	movf	postdec1,f,c
 14743  00605A  52E5               	movf	postdec1,f,c
 14744  00605C  0012               	return		;funcret
 14745  00605E                     __end_of_INT2_SetInterruptHandler:
 14746                           	opt callstack 0
 14747                           
 14748 ;; *************** function _INT1_SetInterruptHandler *****************
 14749 ;; Defined at:
 14750 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 14751 ;; Parameters:    Size  Location     Type
 14752 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14753 ;;		 -> INT1_DefaultInterruptHandler(1), 
 14754 ;; Auto vars:     Size  Location     Type
 14755 ;;		None
 14756 ;; Return value:  Size  Location     Type
 14757 ;;                  1  [STACK] void 
 14758 ;; Registers used:
 14759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14760 ;; Tracked objects:
 14761 ;;		On entry : 3F/39
 14762 ;;		On exit  : 0/0
 14763 ;;		Unchanged: 0/0
 14764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14769 ;;Total ram usage:        0 bytes
 14770 ;; Hardware stack levels used:    1
 14771 ;; Hardware stack levels required when called:    3
 14772 ;; This function calls:
 14773 ;;		Nothing
 14774 ;; This function is called by:
 14775 ;;		_EXT_INT_Initialize
 14776 ;; This function uses a reentrant model
 14777 ;;
 14778                           
 14779                           	psect	text73
 14780  00605E                     __ptext73:
 14781                           	opt callstack 0
 14782  00605E                     _INT1_SetInterruptHandler:
 14783                           	opt callstack 25
 14784                           
 14785                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 14786                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14787                           
 14788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14789                           ;incstack = 0
 14790  00605E  50E1               	movf	fsr1l,w,c
 14791  006060  0FFD               	addlw	-3
 14792  006062  6ED9               	movwf	fsr2l,c
 14793  006064  50E2               	movf	fsr1h,w,c
 14794  006066  6EDA               	movwf	fsr2h,c
 14795  006068  0EFF               	movlw	255
 14796  00606A  22DA               	addwfc	fsr2h,f,c
 14797  00606C  006F FF78  F01A    	movff	postinc2,_INT1_InterruptHandler
 14798  006072  006F FF78  F01B    	movff	postinc2,_INT1_InterruptHandler+1
 14799  006078  006F FF74  F01C    	movff	postdec2,_INT1_InterruptHandler+2
 14800                           
 14801                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14802  00607E  52E5               	movf	postdec1,f,c
 14803  006080  52E5               	movf	postdec1,f,c
 14804  006082  52E5               	movf	postdec1,f,c
 14805  006084  0012               	return		;funcret
 14806  006086                     __end_of_INT1_SetInterruptHandler:
 14807                           	opt callstack 0
 14808                           
 14809 ;; *************** function _INT0_SetInterruptHandler *****************
 14810 ;; Defined at:
 14811 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 14812 ;; Parameters:    Size  Location     Type
 14813 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14814 ;;		 -> INT0_DefaultInterruptHandler(1), 
 14815 ;; Auto vars:     Size  Location     Type
 14816 ;;		None
 14817 ;; Return value:  Size  Location     Type
 14818 ;;                  1  [STACK] void 
 14819 ;; Registers used:
 14820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14821 ;; Tracked objects:
 14822 ;;		On entry : 3F/39
 14823 ;;		On exit  : 0/0
 14824 ;;		Unchanged: 0/0
 14825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14830 ;;Total ram usage:        0 bytes
 14831 ;; Hardware stack levels used:    1
 14832 ;; Hardware stack levels required when called:    3
 14833 ;; This function calls:
 14834 ;;		Nothing
 14835 ;; This function is called by:
 14836 ;;		_EXT_INT_Initialize
 14837 ;; This function uses a reentrant model
 14838 ;;
 14839                           
 14840                           	psect	text74
 14841  006086                     __ptext74:
 14842                           	opt callstack 0
 14843  006086                     _INT0_SetInterruptHandler:
 14844                           	opt callstack 25
 14845                           
 14846                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 14847                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14848                           
 14849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14850                           ;incstack = 0
 14851  006086  50E1               	movf	fsr1l,w,c
 14852  006088  0FFD               	addlw	-3
 14853  00608A  6ED9               	movwf	fsr2l,c
 14854  00608C  50E2               	movf	fsr1h,w,c
 14855  00608E  6EDA               	movwf	fsr2h,c
 14856  006090  0EFF               	movlw	255
 14857  006092  22DA               	addwfc	fsr2h,f,c
 14858  006094  006F FF78  F01D    	movff	postinc2,_INT0_InterruptHandler
 14859  00609A  006F FF78  F01E    	movff	postinc2,_INT0_InterruptHandler+1
 14860  0060A0  006F FF74  F01F    	movff	postdec2,_INT0_InterruptHandler+2
 14861                           
 14862                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14863  0060A6  52E5               	movf	postdec1,f,c
 14864  0060A8  52E5               	movf	postdec1,f,c
 14865  0060AA  52E5               	movf	postdec1,f,c
 14866  0060AC  0012               	return		;funcret
 14867  0060AE                     __end_of_INT0_SetInterruptHandler:
 14868                           	opt callstack 0
 14869                           
 14870 ;; *************** function _DSM_Initialize *****************
 14871 ;; Defined at:
 14872 ;;		line 58 in file "mcc_generated_files/dsm.c"
 14873 ;; Parameters:    Size  Location     Type
 14874 ;;		None
 14875 ;; Auto vars:     Size  Location     Type
 14876 ;;		None
 14877 ;; Return value:  Size  Location     Type
 14878 ;;                  1  [STACK] void 
 14879 ;; Registers used:
 14880 ;;		wreg, status,2
 14881 ;; Tracked objects:
 14882 ;;		On entry : 0/3C
 14883 ;;		On exit  : 3F/3C
 14884 ;;		Unchanged: 0/0
 14885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14890 ;;Total ram usage:        0 bytes
 14891 ;; Hardware stack levels used:    1
 14892 ;; Hardware stack levels required when called:    3
 14893 ;; This function calls:
 14894 ;;		Nothing
 14895 ;; This function is called by:
 14896 ;;		_SYSTEM_Initialize
 14897 ;; This function uses a reentrant model
 14898 ;;
 14899                           
 14900                           	psect	text75
 14901  00631C                     __ptext75:
 14902                           	opt callstack 0
 14903  00631C                     _DSM_Initialize:
 14904                           	opt callstack 26
 14905                           
 14906                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 14907                           
 14908                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14909                           ;incstack = 0
 14910  00631C  013C               	movlb	60	; () banked
 14911  00631E  99FA               	bcf	250,4,b	;volatile
 14912                           
 14913                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 14914  006320  81FB               	bsf	251,0,b	;volatile
 14915                           
 14916                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 14917  006322  93FB               	bcf	251,1,b	;volatile
 14918                           
 14919                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 14920  006324  89FB               	bsf	251,4,b	;volatile
 14921                           
 14922                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 14923  006326  9BFB               	bcf	251,5,b	;volatile
 14924                           
 14925                           ; BSR set to: 60
 14926                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 14927  006328  0E13               	movlw	19
 14928  00632A  6FFC               	movwf	252,b	;volatile
 14929                           
 14930                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 14931  00632C  0E0E               	movlw	14
 14932  00632E  6FFE               	movwf	254,b	;volatile
 14933                           
 14934                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 14935  006330  0E04               	movlw	4
 14936  006332  6FFD               	movwf	253,b	;volatile
 14937                           
 14938                           ; BSR set to: 60
 14939                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 14940  006334  8FFA               	bsf	250,7,b	;volatile
 14941                           
 14942                           ; BSR set to: 60
 14943                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 14944  006336  0012               	return		;funcret
 14945  006338                     __end_of_DSM_Initialize:
 14946                           	opt callstack 0
 14947                           
 14948 ;; *************** function _DMA1_Initialize *****************
 14949 ;; Defined at:
 14950 ;;		line 86 in file "mcc_generated_files/dma1.c"
 14951 ;; Parameters:    Size  Location     Type
 14952 ;;		None
 14953 ;; Auto vars:     Size  Location     Type
 14954 ;;		None
 14955 ;; Return value:  Size  Location     Type
 14956 ;;                  1  [STACK] void 
 14957 ;; Registers used:
 14958 ;;		wreg, status,2
 14959 ;; Tracked objects:
 14960 ;;		On entry : 3F/3D
 14961 ;;		On exit  : 3F/3B
 14962 ;;		Unchanged: 0/0
 14963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14968 ;;Total ram usage:        0 bytes
 14969 ;; Hardware stack levels used:    1
 14970 ;; Hardware stack levels required when called:    3
 14971 ;; This function calls:
 14972 ;;		Nothing
 14973 ;; This function is called by:
 14974 ;;		_SYSTEM_Initialize
 14975 ;; This function uses a reentrant model
 14976 ;;
 14977                           
 14978                           	psect	text76
 14979  0056B6                     __ptext76:
 14980                           	opt callstack 0
 14981  0056B6                     _DMA1_Initialize:
 14982                           	opt callstack 26
 14983                           
 14984                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 14985                           
 14986                           ; BSR set to: 60
 14987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14988                           ;incstack = 0
 14989  0056B6  0E00               	movlw	0
 14990  0056B8  013B               	movlb	59	; () banked
 14991  0056BA  6FF9               	movwf	249,b	;volatile
 14992  0056BC  0E10               	movlw	16
 14993  0056BE  6FFA               	movwf	250,b	;volatile
 14994  0056C0  0E00               	movlw	0
 14995  0056C2  6FFB               	movwf	251,b	;volatile
 14996                           
 14997                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 14998  0056C4  0E3D               	movlw	61
 14999  0056C6  6FF1               	movwf	241,b	;volatile
 15000  0056C8  0E11               	movlw	17
 15001  0056CA  6FF0               	movwf	240,b	;volatile
 15002                           
 15003                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 15004  0056CC  0E03               	movlw	3
 15005  0056CE  6FFD               	movwf	253,b	;volatile
 15006                           
 15007                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 15008  0056D0  0E00               	movlw	0
 15009  0056D2  6FF8               	movwf	248,b	;volatile
 15010  0056D4  0E01               	movlw	1
 15011  0056D6  6FF7               	movwf	247,b	;volatile
 15012                           
 15013                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 15014  0056D8  0E00               	movlw	0
 15015  0056DA  6FEF               	movwf	239,b	;volatile
 15016  0056DC  0E01               	movlw	1
 15017  0056DE  6FEE               	movwf	238,b	;volatile
 15018                           
 15019                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 15020  0056E0  0E15               	movlw	21
 15021  0056E2  6FFF               	movwf	255,b	;volatile
 15022                           
 15023                           ; BSR set to: 59
 15024                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 15025  0056E4  6BFE               	clrf	254,b	;volatile
 15026                           
 15027                           ; BSR set to: 59
 15028                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 15029  0056E6  0139               	movlb	57	; () banked
 15030  0056E8  93A2               	bcf	162,1,b	;volatile
 15031                           
 15032                           ; BSR set to: 57
 15033                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 15034  0056EA  91A2               	bcf	162,0,b	;volatile
 15035                           
 15036                           ; BSR set to: 57
 15037                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 15038  0056EC  97A2               	bcf	162,3,b	;volatile
 15039                           
 15040                           ; BSR set to: 57
 15041                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 15042  0056EE  95A2               	bcf	162,2,b	;volatile
 15043                           
 15044                           ; BSR set to: 57
 15045                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 15046  0056F0  8392               	bsf	146,1,b	;volatile
 15047                           
 15048                           ; BSR set to: 57
 15049                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 15050  0056F2  8192               	bsf	146,0,b	;volatile
 15051                           
 15052                           ; BSR set to: 57
 15053                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 15054  0056F4  8792               	bsf	146,3,b	;volatile
 15055                           
 15056                           ; BSR set to: 57
 15057                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 15058  0056F6  8592               	bsf	146,2,b	;volatile
 15059                           
 15060                           ; BSR set to: 57
 15061                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 15062  0056F8  6BF1               	clrf	241,b	;volatile
 15063                           
 15064                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 15065  0056FA  0E01               	movlw	1
 15066  0056FC  6FF2               	movwf	242,b	;volatile
 15067                           
 15068                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 15069  0056FE  0E04               	movlw	4
 15070  005700  6FF3               	movwf	243,b	;volatile
 15071                           
 15072                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 15073  005702  0E02               	movlw	2
 15074  005704  6FF4               	movwf	244,b	;volatile
 15075                           
 15076                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 15077  005706  0E03               	movlw	3
 15078  005708  6FF7               	movwf	247,b	;volatile
 15079  00570A  9ED2               	bcf	16338,7,c	;# 
 15080  00570C  0139               	banksel	14831	;# 
 15081  00570E  0E55               	movlw	85	;# 
 15082  005710  6FEF               	movwf	14831,b	;# 
 15083  005712  0EAA               	movlw	170	;# 
 15084  005714  6FEF               	movwf	14831,b	;# 
 15085  005716  81EF               	bsf	14831,0,b	;# 
 15086  005718  8ED2               	bsf	16338,7,c	;# 
 15087                           
 15088                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 15089  00571A  013B               	movlb	59	; () banked
 15090  00571C  6BFC               	clrf	252,b	;volatile
 15091                           
 15092                           ; BSR set to: 59
 15093                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15094  00571E  0012               	return		;funcret
 15095  005720                     __end_of_DMA1_Initialize:
 15096                           	opt callstack 0
 15097                           
 15098 ;; *************** function _CLKREF_Initialize *****************
 15099 ;; Defined at:
 15100 ;;		line 58 in file "mcc_generated_files/clkref.c"
 15101 ;; Parameters:    Size  Location     Type
 15102 ;;		None
 15103 ;; Auto vars:     Size  Location     Type
 15104 ;;		None
 15105 ;; Return value:  Size  Location     Type
 15106 ;;                  1  [STACK] void 
 15107 ;; Registers used:
 15108 ;;		wreg, status,2
 15109 ;; Tracked objects:
 15110 ;;		On entry : 3F/3B
 15111 ;;		On exit  : 3F/3C
 15112 ;;		Unchanged: 0/0
 15113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15118 ;;Total ram usage:        0 bytes
 15119 ;; Hardware stack levels used:    1
 15120 ;; Hardware stack levels required when called:    3
 15121 ;; This function calls:
 15122 ;;		Nothing
 15123 ;; This function is called by:
 15124 ;;		_SYSTEM_Initialize
 15125 ;; This function uses a reentrant model
 15126 ;;
 15127                           
 15128                           	psect	text77
 15129  006416                     __ptext77:
 15130                           	opt callstack 0
 15131  006416                     _CLKREF_Initialize:
 15132                           	opt callstack 26
 15133                           
 15134                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 15135                           
 15136                           ; BSR set to: 59
 15137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15138                           ;incstack = 0
 15139  006416  013C               	movlb	60	; () banked
 15140  006418  6BE6               	clrf	230,b	;volatile
 15141                           
 15142                           ; BSR set to: 60
 15143                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 15144  00641A  0E94               	movlw	148
 15145  00641C  6FE5               	movwf	229,b	;volatile
 15146                           
 15147                           ; BSR set to: 60
 15148                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15149  00641E  0012               	return		;funcret
 15150  006420                     __end_of_CLKREF_Initialize:
 15151                           	opt callstack 0
 15152                           
 15153 ;; *************** function _CLC1_Initialize *****************
 15154 ;; Defined at:
 15155 ;;		line 58 in file "mcc_generated_files/clc1.c"
 15156 ;; Parameters:    Size  Location     Type
 15157 ;;		None
 15158 ;; Auto vars:     Size  Location     Type
 15159 ;;		None
 15160 ;; Return value:  Size  Location     Type
 15161 ;;                  1  [STACK] void 
 15162 ;; Registers used:
 15163 ;;		wreg, status,2
 15164 ;; Tracked objects:
 15165 ;;		On entry : 0/39
 15166 ;;		On exit  : 3F/3C
 15167 ;;		Unchanged: 0/0
 15168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15173 ;;Total ram usage:        0 bytes
 15174 ;; Hardware stack levels used:    1
 15175 ;; Hardware stack levels required when called:    3
 15176 ;; This function calls:
 15177 ;;		Nothing
 15178 ;; This function is called by:
 15179 ;;		_SYSTEM_Initialize
 15180 ;; This function uses a reentrant model
 15181 ;;
 15182                           
 15183                           	psect	text78
 15184  0061E0                     __ptext78:
 15185                           	opt callstack 0
 15186  0061E0                     _CLC1_Initialize:
 15187                           	opt callstack 26
 15188                           
 15189                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 15190                           
 15191                           ; BSR set to: 60
 15192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15193                           ;incstack = 0
 15194  0061E0  013C               	movlb	60	; () banked
 15195  0061E2  6B75               	clrf	117,b	;volatile
 15196                           
 15197                           ; BSR set to: 60
 15198                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 15199  0061E4  0E04               	movlw	4
 15200  0061E6  6F76               	movwf	118,b	;volatile
 15201                           
 15202                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 15203  0061E8  0E04               	movlw	4
 15204  0061EA  6F77               	movwf	119,b	;volatile
 15205                           
 15206                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 15207  0061EC  0E04               	movlw	4
 15208  0061EE  6F78               	movwf	120,b	;volatile
 15209                           
 15210                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 15211  0061F0  0E04               	movlw	4
 15212  0061F2  6F79               	movwf	121,b	;volatile
 15213                           
 15214                           ; BSR set to: 60
 15215                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 15216  0061F4  6B7A               	clrf	122,b	;volatile
 15217                           
 15218                           ; BSR set to: 60
 15219                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 15220  0061F6  6B7B               	clrf	123,b	;volatile
 15221                           
 15222                           ; BSR set to: 60
 15223                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 15224  0061F8  6B7C               	clrf	124,b	;volatile
 15225                           
 15226                           ; BSR set to: 60
 15227                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 15228  0061FA  6B7D               	clrf	125,b	;volatile
 15229                           
 15230                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 15231  0061FC  0E81               	movlw	129
 15232  0061FE  6F74               	movwf	116,b	;volatile
 15233                           
 15234                           ; BSR set to: 60
 15235                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15236  006200  0012               	return		;funcret
 15237  006202                     __end_of_CLC1_Initialize:
 15238                           	opt callstack 0
 15239                           
 15240 ;; *************** function _ADCC_Initialize *****************
 15241 ;; Defined at:
 15242 ;;		line 64 in file "mcc_generated_files/adcc.c"
 15243 ;; Parameters:    Size  Location     Type
 15244 ;;		None
 15245 ;; Auto vars:     Size  Location     Type
 15246 ;;		None
 15247 ;; Return value:  Size  Location     Type
 15248 ;;                  1  [STACK] void 
 15249 ;; Registers used:
 15250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 15251 ;; Tracked objects:
 15252 ;;		On entry : 3F/39
 15253 ;;		On exit  : 0/0
 15254 ;;		Unchanged: 0/0
 15255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15260 ;;Total ram usage:        0 bytes
 15261 ;; Hardware stack levels used:    1
 15262 ;; Hardware stack levels required when called:    4
 15263 ;; This function calls:
 15264 ;;		_ADCC_SetADIInterruptHandler
 15265 ;; This function is called by:
 15266 ;;		_SYSTEM_Initialize
 15267 ;; This function uses a reentrant model
 15268 ;;
 15269                           
 15270                           	psect	text79
 15271  005A04                     __ptext79:
 15272                           	opt callstack 0
 15273  005A04                     _ADCC_Initialize:
 15274                           	opt callstack 25
 15275                           
 15276                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 15277                           
 15278                           ; BSR set to: 60
 15279                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15280                           ;incstack = 0
 15281  005A04  013E               	movlb	62	; () banked
 15282  005A06  6BDE               	clrf	222,b	;volatile
 15283                           
 15284                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 15285  005A08  6BDF               	clrf	223,b	;volatile
 15286                           
 15287                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 15288  005A0A  6BE0               	clrf	224,b	;volatile
 15289                           
 15290                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 15291  005A0C  6BE1               	clrf	225,b	;volatile
 15292                           
 15293                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 15294  005A0E  6BE4               	clrf	228,b	;volatile
 15295                           
 15296                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 15297  005A10  6BE5               	clrf	229,b	;volatile
 15298                           
 15299                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 15300  005A12  6BEA               	clrf	234,b	;volatile
 15301                           
 15302                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 15303  005A14  6BEC               	clrf	236,b	;volatile
 15304                           
 15305                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 15306  005A16  6BF1               	clrf	241,b	;volatile
 15307                           
 15308                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 15309  005A18  6BF3               	clrf	243,b	;volatile
 15310                           
 15311                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 15312  005A1A  6BF4               	clrf	244,b	;volatile
 15313                           
 15314                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 15315  005A1C  6BF5               	clrf	245,b	;volatile
 15316                           
 15317                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 15318  005A1E  6BF6               	clrf	246,b	;volatile
 15319                           
 15320                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 15321  005A20  6BF7               	clrf	247,b	;volatile
 15322                           
 15323                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 15324  005A22  6BF9               	clrf	249,b	;volatile
 15325                           
 15326                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 15327  005A24  6BFA               	clrf	250,b	;volatile
 15328                           
 15329                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 15330  005A26  6BFB               	clrf	251,b	;volatile
 15331                           
 15332                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 15333  005A28  6BFC               	clrf	252,b	;volatile
 15334                           
 15335                           ; BSR set to: 62
 15336                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 15337  005A2A  0E02               	movlw	2
 15338  005A2C  6FFD               	movwf	253,b	;volatile
 15339                           
 15340                           ; BSR set to: 62
 15341                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 15342  005A2E  6BFE               	clrf	254,b	;volatile
 15343                           
 15344                           ; BSR set to: 62
 15345                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 15346  005A30  6BFF               	clrf	255,b	;volatile
 15347                           
 15348                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 15349  005A32  0E94               	movlw	148
 15350  005A34  6FF8               	movwf	248,b	;volatile
 15351                           
 15352                           ; BSR set to: 62
 15353                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 15354  005A36  0139               	movlb	57	; () banked
 15355  005A38  95A1               	bcf	161,2,b	;volatile
 15356                           
 15357                           ; BSR set to: 57
 15358                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 15359  005A3A  8591               	bsf	145,2,b	;volatile
 15360                           
 15361                           ; BSR set to: 57
 15362                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 15363  005A3C  0E7C               	movlw	low _ADCC_DefaultInterruptHandler
 15364  005A3E  6EE6               	movwf	postinc1,c
 15365  005A40  0E64               	movlw	high _ADCC_DefaultInterruptHandler
 15366  005A42  6EE6               	movwf	postinc1,c
 15367  005A44  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 15368  005A46  6EE6               	movwf	postinc1,c
 15369  005A48  EC57  F030         	call	_ADCC_SetADIInterruptHandler	;wreg free
 15370                           
 15371                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15372  005A4C  0012               	return		;funcret
 15373  005A4E                     __end_of_ADCC_Initialize:
 15374                           	opt callstack 0
 15375                           
 15376 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 15377 ;; Defined at:
 15378 ;;		line 316 in file "mcc_generated_files/adcc.c"
 15379 ;; Parameters:    Size  Location     Type
 15380 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15381 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 15382 ;; Auto vars:     Size  Location     Type
 15383 ;;		None
 15384 ;; Return value:  Size  Location     Type
 15385 ;;                  1  [STACK] void 
 15386 ;; Registers used:
 15387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15388 ;; Tracked objects:
 15389 ;;		On entry : 3F/39
 15390 ;;		On exit  : 0/0
 15391 ;;		Unchanged: 0/0
 15392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15397 ;;Total ram usage:        0 bytes
 15398 ;; Hardware stack levels used:    1
 15399 ;; Hardware stack levels required when called:    3
 15400 ;; This function calls:
 15401 ;;		Nothing
 15402 ;; This function is called by:
 15403 ;;		_ADCC_Initialize
 15404 ;; This function uses a reentrant model
 15405 ;;
 15406                           
 15407                           	psect	text80
 15408  0060AE                     __ptext80:
 15409                           	opt callstack 0
 15410  0060AE                     _ADCC_SetADIInterruptHandler:
 15411                           	opt callstack 25
 15412                           
 15413                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 15414                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15415                           
 15416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15417                           ;incstack = 0
 15418  0060AE  50E1               	movf	fsr1l,w,c
 15419  0060B0  0FFD               	addlw	-3
 15420  0060B2  6ED9               	movwf	fsr2l,c
 15421  0060B4  50E2               	movf	fsr1h,w,c
 15422  0060B6  6EDA               	movwf	fsr2h,c
 15423  0060B8  0EFF               	movlw	255
 15424  0060BA  22DA               	addwfc	fsr2h,f,c
 15425  0060BC  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler
 15426  0060C2  006F FF78  F009    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 15427  0060C8  006F FF74  F00A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 15428                           
 15429                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 15430  0060CE  52E5               	movf	postdec1,f,c
 15431  0060D0  52E5               	movf	postdec1,f,c
 15432  0060D2  52E5               	movf	postdec1,f,c
 15433  0060D4  0012               	return		;funcret
 15434  0060D6                     __end_of_ADCC_SetADIInterruptHandler:
 15435                           	opt callstack 0
 15436                           
 15437 ;; *************** function _INT0_ISR *****************
 15438 ;; Defined at:
 15439 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 15440 ;; Parameters:    Size  Location     Type
 15441 ;;		None
 15442 ;; Auto vars:     Size  Location     Type
 15443 ;;		None
 15444 ;; Return value:  Size  Location     Type
 15445 ;;                  1    wreg      void 
 15446 ;; Registers used:
 15447 ;;		wreg, status,2, status,0, pclath, tosl
 15448 ;; Tracked objects:
 15449 ;;		On entry : 0/0
 15450 ;;		On exit  : 0/0
 15451 ;;		Unchanged: 0/0
 15452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15457 ;;Total ram usage:        0 bytes
 15458 ;; Hardware stack levels used:    1
 15459 ;; Hardware stack levels required when called:    2
 15460 ;; This function calls:
 15461 ;;		_INT0_CallBack
 15462 ;; This function is called by:
 15463 ;;		Interrupt level 2
 15464 ;; This function uses a non-reentrant model
 15465 ;;
 15466                           
 15467                           	psect	text81
 15468  0063D8                     __ptext81:
 15469                           	opt callstack 0
 15470  0063D8                     _INT0_ISR:
 15471                           	opt callstack 17
 15472                           
 15473                           ;incstack = 0
 15474  0063D8  EE13  F154         	lfsr	1,___inthi_sp
 15475                           
 15476                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 15477  0063DC  0139               	movlb	57	; () banked
 15478  0063DE  91A1               	bcf	161,0,b	;volatile
 15479                           
 15480                           ; BSR set to: 57
 15481                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 15482  0063E0  EC01  F031         	call	_INT0_CallBack	;wreg free
 15483  0063E4  0011               	retfie		f
 15484  0063E6                     __end_of_INT0_ISR:
 15485                           	opt callstack 0
 15486                           
 15487 ;; *************** function _INT0_CallBack *****************
 15488 ;; Defined at:
 15489 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 15490 ;; Parameters:    Size  Location     Type
 15491 ;;		None
 15492 ;; Auto vars:     Size  Location     Type
 15493 ;;		None
 15494 ;; Return value:  Size  Location     Type
 15495 ;;                  1  [STACK] void 
 15496 ;; Registers used:
 15497 ;;		wreg, status,2, status,0, pclath, tosl
 15498 ;; Tracked objects:
 15499 ;;		On entry : 3F/39
 15500 ;;		On exit  : 0/0
 15501 ;;		Unchanged: 0/0
 15502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15507 ;;Total ram usage:        0 bytes
 15508 ;; Hardware stack levels used:    1
 15509 ;; Hardware stack levels required when called:    1
 15510 ;; This function calls:
 15511 ;;		Absolute function
 15512 ;;		_INT0_DefaultInterruptHandler
 15513 ;; This function is called by:
 15514 ;;		_INT0_ISR
 15515 ;; This function uses a reentrant model
 15516 ;;
 15517                           
 15518                           	psect	text82
 15519  006202                     __ptext82:
 15520                           	opt callstack 0
 15521  006202                     _INT0_CallBack:
 15522                           	opt callstack 17
 15523                           
 15524                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 15525                           
 15526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15527                           ;incstack = 0
 15528  006202  501D               	movf	_INT0_InterruptHandler,w,c
 15529  006204  101E               	iorwf	_INT0_InterruptHandler+1,w,c
 15530  006206  101F               	iorwf	_INT0_InterruptHandler+2,w,c
 15531  006208  B4D8               	btfsc	status,2,c
 15532  00620A  0012               	return	
 15533                           
 15534                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 15535  00620C  D801               	call	u123_48
 15536  00620E  0012               	return	
 15537  006210                     u123_48:
 15538  006210  0005               	push	
 15539  006212  6EFA               	movwf	pclath,c
 15540  006214  501D               	movf	_INT0_InterruptHandler,w,c
 15541  006216  6EFD               	movwf	tosl,c
 15542  006218  501E               	movf	_INT0_InterruptHandler+1,w,c
 15543  00621A  6EFE               	movwf	tosh,c
 15544  00621C  501F               	movf	_INT0_InterruptHandler+2,w,c
 15545  00621E  6EFF               	movwf	tosu,c
 15546  006220  50FA               	movf	pclath,w,c
 15547  006222  0012               	return		;indir
 15548  006224                     __end_of_INT0_CallBack:
 15549                           	opt callstack 0
 15550                           
 15551 ;; *************** function _INT0_DefaultInterruptHandler *****************
 15552 ;; Defined at:
 15553 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 15554 ;; Parameters:    Size  Location     Type
 15555 ;;		None
 15556 ;; Auto vars:     Size  Location     Type
 15557 ;;		None
 15558 ;; Return value:  Size  Location     Type
 15559 ;;                  1  [STACK] void 
 15560 ;; Registers used:
 15561 ;;		None
 15562 ;; Tracked objects:
 15563 ;;		On entry : 0/39
 15564 ;;		On exit  : 0/0
 15565 ;;		Unchanged: 0/0
 15566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15571 ;;Total ram usage:        0 bytes
 15572 ;; Hardware stack levels used:    1
 15573 ;; This function calls:
 15574 ;;		Nothing
 15575 ;; This function is called by:
 15576 ;;		_EXT_INT_Initialize
 15577 ;;		_INT0_CallBack
 15578 ;; This function uses a reentrant model
 15579 ;;
 15580                           
 15581                           	psect	text83
 15582  006476                     __ptext83:
 15583                           	opt callstack 0
 15584  006476                     _INT0_DefaultInterruptHandler:
 15585                           	opt callstack 17
 15586                           
 15587                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15588                           
 15589                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15590                           ;incstack = 0
 15591  006476  0012               	return		;funcret
 15592  006478                     __end_of_INT0_DefaultInterruptHandler:
 15593                           	opt callstack 0
 15594                           
 15595 ;; *************** function _INT1_ISR *****************
 15596 ;; Defined at:
 15597 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 15598 ;; Parameters:    Size  Location     Type
 15599 ;;		None
 15600 ;; Auto vars:     Size  Location     Type
 15601 ;;		None
 15602 ;; Return value:  Size  Location     Type
 15603 ;;                  1    wreg      void 
 15604 ;; Registers used:
 15605 ;;		wreg, status,2, status,0, pclath, tosl
 15606 ;; Tracked objects:
 15607 ;;		On entry : 0/0
 15608 ;;		On exit  : 0/0
 15609 ;;		Unchanged: 0/0
 15610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15615 ;;Total ram usage:        0 bytes
 15616 ;; Hardware stack levels used:    1
 15617 ;; Hardware stack levels required when called:    2
 15618 ;; This function calls:
 15619 ;;		_INT1_CallBack
 15620 ;; This function is called by:
 15621 ;;		Interrupt level 2
 15622 ;; This function uses a non-reentrant model
 15623 ;;
 15624                           
 15625                           	psect	text84
 15626  0063E8                     __ptext84:
 15627                           	opt callstack 0
 15628  0063E8                     _INT1_ISR:
 15629                           	opt callstack 17
 15630                           
 15631                           ;incstack = 0
 15632  0063E8  EE13  F154         	lfsr	1,___inthi_sp
 15633                           
 15634                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 15635  0063EC  0139               	movlb	57	; () banked
 15636  0063EE  91A5               	bcf	165,0,b	;volatile
 15637                           
 15638                           ; BSR set to: 57
 15639                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 15640  0063F0  EC12  F031         	call	_INT1_CallBack	;wreg free
 15641  0063F4  0011               	retfie		f
 15642  0063F6                     __end_of_INT1_ISR:
 15643                           	opt callstack 0
 15644                           
 15645 ;; *************** function _INT1_CallBack *****************
 15646 ;; Defined at:
 15647 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 15648 ;; Parameters:    Size  Location     Type
 15649 ;;		None
 15650 ;; Auto vars:     Size  Location     Type
 15651 ;;		None
 15652 ;; Return value:  Size  Location     Type
 15653 ;;                  1  [STACK] void 
 15654 ;; Registers used:
 15655 ;;		wreg, status,2, status,0, pclath, tosl
 15656 ;; Tracked objects:
 15657 ;;		On entry : 3F/39
 15658 ;;		On exit  : 0/0
 15659 ;;		Unchanged: 0/0
 15660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15665 ;;Total ram usage:        0 bytes
 15666 ;; Hardware stack levels used:    1
 15667 ;; Hardware stack levels required when called:    1
 15668 ;; This function calls:
 15669 ;;		Absolute function
 15670 ;;		_INT1_DefaultInterruptHandler
 15671 ;; This function is called by:
 15672 ;;		_INT1_ISR
 15673 ;; This function uses a reentrant model
 15674 ;;
 15675                           
 15676                           	psect	text85
 15677  006224                     __ptext85:
 15678                           	opt callstack 0
 15679  006224                     _INT1_CallBack:
 15680                           	opt callstack 17
 15681                           
 15682                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 15683                           
 15684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15685                           ;incstack = 0
 15686  006224  501A               	movf	_INT1_InterruptHandler,w,c
 15687  006226  101B               	iorwf	_INT1_InterruptHandler+1,w,c
 15688  006228  101C               	iorwf	_INT1_InterruptHandler+2,w,c
 15689  00622A  B4D8               	btfsc	status,2,c
 15690  00622C  0012               	return	
 15691                           
 15692                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 15693  00622E  D801               	call	u125_48
 15694  006230  0012               	return	
 15695  006232                     u125_48:
 15696  006232  0005               	push	
 15697  006234  6EFA               	movwf	pclath,c
 15698  006236  501A               	movf	_INT1_InterruptHandler,w,c
 15699  006238  6EFD               	movwf	tosl,c
 15700  00623A  501B               	movf	_INT1_InterruptHandler+1,w,c
 15701  00623C  6EFE               	movwf	tosh,c
 15702  00623E  501C               	movf	_INT1_InterruptHandler+2,w,c
 15703  006240  6EFF               	movwf	tosu,c
 15704  006242  50FA               	movf	pclath,w,c
 15705  006244  0012               	return		;indir
 15706  006246                     __end_of_INT1_CallBack:
 15707                           	opt callstack 0
 15708                           
 15709 ;; *************** function _INT1_DefaultInterruptHandler *****************
 15710 ;; Defined at:
 15711 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 15712 ;; Parameters:    Size  Location     Type
 15713 ;;		None
 15714 ;; Auto vars:     Size  Location     Type
 15715 ;;		None
 15716 ;; Return value:  Size  Location     Type
 15717 ;;                  1  [STACK] void 
 15718 ;; Registers used:
 15719 ;;		None
 15720 ;; Tracked objects:
 15721 ;;		On entry : 0/39
 15722 ;;		On exit  : 0/0
 15723 ;;		Unchanged: 0/0
 15724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15729 ;;Total ram usage:        0 bytes
 15730 ;; Hardware stack levels used:    1
 15731 ;; This function calls:
 15732 ;;		Nothing
 15733 ;; This function is called by:
 15734 ;;		_EXT_INT_Initialize
 15735 ;;		_INT1_CallBack
 15736 ;; This function uses a reentrant model
 15737 ;;
 15738                           
 15739                           	psect	text86
 15740  006478                     __ptext86:
 15741                           	opt callstack 0
 15742  006478                     _INT1_DefaultInterruptHandler:
 15743                           	opt callstack 17
 15744                           
 15745                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15746                           
 15747                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15748                           ;incstack = 0
 15749  006478  0012               	return		;funcret
 15750  00647A                     __end_of_INT1_DefaultInterruptHandler:
 15751                           	opt callstack 0
 15752                           
 15753 ;; *************** function _INT2_ISR *****************
 15754 ;; Defined at:
 15755 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 15756 ;; Parameters:    Size  Location     Type
 15757 ;;		None
 15758 ;; Auto vars:     Size  Location     Type
 15759 ;;		None
 15760 ;; Return value:  Size  Location     Type
 15761 ;;                  1    wreg      void 
 15762 ;; Registers used:
 15763 ;;		wreg, status,2, status,0, pclath, tosl
 15764 ;; Tracked objects:
 15765 ;;		On entry : 0/0
 15766 ;;		On exit  : 0/0
 15767 ;;		Unchanged: 0/0
 15768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15773 ;;Total ram usage:        0 bytes
 15774 ;; Hardware stack levels used:    1
 15775 ;; Hardware stack levels required when called:    2
 15776 ;; This function calls:
 15777 ;;		_INT2_CallBack
 15778 ;; This function is called by:
 15779 ;;		Interrupt level 2
 15780 ;; This function uses a non-reentrant model
 15781 ;;
 15782                           
 15783                           	psect	text87
 15784  0063F8                     __ptext87:
 15785                           	opt callstack 0
 15786  0063F8                     _INT2_ISR:
 15787                           	opt callstack 17
 15788                           
 15789                           ;incstack = 0
 15790  0063F8  EE13  F154         	lfsr	1,___inthi_sp
 15791                           
 15792                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 15793  0063FC  0139               	movlb	57	; () banked
 15794  0063FE  9BA7               	bcf	167,5,b	;volatile
 15795                           
 15796                           ; BSR set to: 57
 15797                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 15798  006400  EC23  F031         	call	_INT2_CallBack	;wreg free
 15799  006404  0011               	retfie		f
 15800  006406                     __end_of_INT2_ISR:
 15801                           	opt callstack 0
 15802                           
 15803 ;; *************** function _INT2_CallBack *****************
 15804 ;; Defined at:
 15805 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 15806 ;; Parameters:    Size  Location     Type
 15807 ;;		None
 15808 ;; Auto vars:     Size  Location     Type
 15809 ;;		None
 15810 ;; Return value:  Size  Location     Type
 15811 ;;                  1  [STACK] void 
 15812 ;; Registers used:
 15813 ;;		wreg, status,2, status,0, pclath, tosl
 15814 ;; Tracked objects:
 15815 ;;		On entry : 3F/39
 15816 ;;		On exit  : 0/0
 15817 ;;		Unchanged: 0/0
 15818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15823 ;;Total ram usage:        0 bytes
 15824 ;; Hardware stack levels used:    1
 15825 ;; Hardware stack levels required when called:    1
 15826 ;; This function calls:
 15827 ;;		Absolute function
 15828 ;;		_INT2_DefaultInterruptHandler
 15829 ;; This function is called by:
 15830 ;;		_INT2_ISR
 15831 ;; This function uses a reentrant model
 15832 ;;
 15833                           
 15834                           	psect	text88
 15835  006246                     __ptext88:
 15836                           	opt callstack 0
 15837  006246                     _INT2_CallBack:
 15838                           	opt callstack 17
 15839                           
 15840                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 15841                           
 15842                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15843                           ;incstack = 0
 15844  006246  5017               	movf	_INT2_InterruptHandler,w,c
 15845  006248  1018               	iorwf	_INT2_InterruptHandler+1,w,c
 15846  00624A  1019               	iorwf	_INT2_InterruptHandler+2,w,c
 15847  00624C  B4D8               	btfsc	status,2,c
 15848  00624E  0012               	return	
 15849                           
 15850                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 15851  006250  D801               	call	u127_48
 15852  006252  0012               	return	
 15853  006254                     u127_48:
 15854  006254  0005               	push	
 15855  006256  6EFA               	movwf	pclath,c
 15856  006258  5017               	movf	_INT2_InterruptHandler,w,c
 15857  00625A  6EFD               	movwf	tosl,c
 15858  00625C  5018               	movf	_INT2_InterruptHandler+1,w,c
 15859  00625E  6EFE               	movwf	tosh,c
 15860  006260  5019               	movf	_INT2_InterruptHandler+2,w,c
 15861  006262  6EFF               	movwf	tosu,c
 15862  006264  50FA               	movf	pclath,w,c
 15863  006266  0012               	return		;indir
 15864  006268                     __end_of_INT2_CallBack:
 15865                           	opt callstack 0
 15866                           
 15867 ;; *************** function _INT2_DefaultInterruptHandler *****************
 15868 ;; Defined at:
 15869 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 15870 ;; Parameters:    Size  Location     Type
 15871 ;;		None
 15872 ;; Auto vars:     Size  Location     Type
 15873 ;;		None
 15874 ;; Return value:  Size  Location     Type
 15875 ;;                  1  [STACK] void 
 15876 ;; Registers used:
 15877 ;;		None
 15878 ;; Tracked objects:
 15879 ;;		On entry : 0/39
 15880 ;;		On exit  : 0/0
 15881 ;;		Unchanged: 0/0
 15882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15887 ;;Total ram usage:        0 bytes
 15888 ;; Hardware stack levels used:    1
 15889 ;; This function calls:
 15890 ;;		Nothing
 15891 ;; This function is called by:
 15892 ;;		_EXT_INT_Initialize
 15893 ;;		_INT2_CallBack
 15894 ;; This function uses a reentrant model
 15895 ;;
 15896                           
 15897                           	psect	text89
 15898  00647A                     __ptext89:
 15899                           	opt callstack 0
 15900  00647A                     _INT2_DefaultInterruptHandler:
 15901                           	opt callstack 17
 15902                           
 15903                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15904                           
 15905                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15906                           ;incstack = 0
 15907  00647A  0012               	return		;funcret
 15908  00647C                     __end_of_INT2_DefaultInterruptHandler:
 15909                           	opt callstack 0
 15910                           
 15911 ;; *************** function _Default_ISR *****************
 15912 ;; Defined at:
 15913 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 15914 ;; Parameters:    Size  Location     Type
 15915 ;;		None
 15916 ;; Auto vars:     Size  Location     Type
 15917 ;;		None
 15918 ;; Return value:  Size  Location     Type
 15919 ;;                  1    wreg      void 
 15920 ;; Registers used:
 15921 ;;		None
 15922 ;; Tracked objects:
 15923 ;;		On entry : 0/0
 15924 ;;		On exit  : 0/0
 15925 ;;		Unchanged: 0/0
 15926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15931 ;;Total ram usage:        0 bytes
 15932 ;; Hardware stack levels used:    1
 15933 ;; This function calls:
 15934 ;;		Nothing
 15935 ;; This function is called by:
 15936 ;;		Interrupt level 2
 15937 ;; This function uses a non-reentrant model
 15938 ;;
 15939                           
 15940                           	psect	text90
 15941  006470                     __ptext90:
 15942                           	opt callstack 0
 15943  006470                     _Default_ISR:
 15944                           	opt callstack 19
 15945                           
 15946                           ;incstack = 0
 15947  006470  EE13  F154         	lfsr	1,___inthi_sp
 15948  006474  0011               	retfie		f
 15949  006476                     __end_of_Default_ISR:
 15950                           	opt callstack 0
 15951                           
 15952 ;; *************** function _ADCC_ISR *****************
 15953 ;; Defined at:
 15954 ;;		line 307 in file "mcc_generated_files/adcc.c"
 15955 ;; Parameters:    Size  Location     Type
 15956 ;;		None
 15957 ;; Auto vars:     Size  Location     Type
 15958 ;;		None
 15959 ;; Return value:  Size  Location     Type
 15960 ;;                  1    wreg      void 
 15961 ;; Registers used:
 15962 ;;		wreg, status,2, status,0, pclath, tosl
 15963 ;; Tracked objects:
 15964 ;;		On entry : 0/0
 15965 ;;		On exit  : 0/0
 15966 ;;		Unchanged: 0/0
 15967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15972 ;;Total ram usage:        0 bytes
 15973 ;; Hardware stack levels used:    1
 15974 ;; Hardware stack levels required when called:    1
 15975 ;; This function calls:
 15976 ;;		Absolute function
 15977 ;;		_ADCC_DefaultInterruptHandler
 15978 ;; This function is called by:
 15979 ;;		Interrupt level 2
 15980 ;; This function uses a non-reentrant model
 15981 ;;
 15982                           
 15983                           	psect	text91
 15984  005E7C                     __ptext91:
 15985                           	opt callstack 0
 15986  005E7C                     _ADCC_ISR:
 15987                           	opt callstack 18
 15988                           
 15989                           ;incstack = 0
 15990  005E7C  EE13  F154         	lfsr	1,___inthi_sp
 15991                           
 15992                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 15993  005E80  0139               	movlb	57	; () banked
 15994  005E82  95A1               	bcf	161,2,b	;volatile
 15995                           
 15996                           ; BSR set to: 57
 15997                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 15998  005E84  5008               	movf	_ADCC_ADI_InterruptHandler,w,c
 15999  005E86  1009               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 16000  005E88  100A               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 16001  005E8A  B4D8               	btfsc	status,2,c
 16002  005E8C  0011               	retfie		f
 16003                           
 16004                           ; BSR set to: 57
 16005                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 16006  005E8E  D801               	call	i2u205_48
 16007  005E90  0011               	retfie		f
 16008  005E92                     i2u205_48:
 16009  005E92  0005               	push	
 16010  005E94  6EFA               	movwf	pclath,c
 16011  005E96  5008               	movf	_ADCC_ADI_InterruptHandler,w,c
 16012  005E98  6EFD               	movwf	tosl,c
 16013  005E9A  5009               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 16014  005E9C  6EFE               	movwf	tosh,c
 16015  005E9E  500A               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 16016  005EA0  6EFF               	movwf	tosu,c
 16017  005EA2  50FA               	movf	pclath,w,c
 16018  005EA4  0012               	return		;indir
 16019  005EA6                     __end_of_ADCC_ISR:
 16020                           	opt callstack 0
 16021                           
 16022 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 16023 ;; Defined at:
 16024 ;;		line 320 in file "mcc_generated_files/adcc.c"
 16025 ;; Parameters:    Size  Location     Type
 16026 ;;		None
 16027 ;; Auto vars:     Size  Location     Type
 16028 ;;		None
 16029 ;; Return value:  Size  Location     Type
 16030 ;;                  1  [STACK] void 
 16031 ;; Registers used:
 16032 ;;		None
 16033 ;; Tracked objects:
 16034 ;;		On entry : 3F/39
 16035 ;;		On exit  : 0/0
 16036 ;;		Unchanged: 0/0
 16037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16042 ;;Total ram usage:        0 bytes
 16043 ;; Hardware stack levels used:    1
 16044 ;; This function calls:
 16045 ;;		Nothing
 16046 ;; This function is called by:
 16047 ;;		_ADCC_Initialize
 16048 ;;		_ADCC_ISR
 16049 ;; This function uses a reentrant model
 16050 ;;
 16051                           
 16052                           	psect	text92
 16053  00647C                     __ptext92:
 16054                           	opt callstack 0
 16055  00647C                     _ADCC_DefaultInterruptHandler:
 16056                           	opt callstack 18
 16057                           
 16058                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16059                           
 16060                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16061                           ;incstack = 0
 16062  00647C  0012               	return		;funcret
 16063  00647E                     __end_of_ADCC_DefaultInterruptHandler:
 16064                           	opt callstack 0
 16065                           
 16066 ;; *************** function _UART1_tx_vect_isr *****************
 16067 ;; Defined at:
 16068 ;;		line 197 in file "mcc_generated_files/uart1.c"
 16069 ;; Parameters:    Size  Location     Type
 16070 ;;		None
 16071 ;; Auto vars:     Size  Location     Type
 16072 ;;		None
 16073 ;; Return value:  Size  Location     Type
 16074 ;;                  1    wreg      void 
 16075 ;; Registers used:
 16076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16077 ;; Tracked objects:
 16078 ;;		On entry : 0/0
 16079 ;;		On exit  : 0/0
 16080 ;;		Unchanged: 0/0
 16081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16086 ;;Total ram usage:        0 bytes
 16087 ;; Hardware stack levels used:    1
 16088 ;; Hardware stack levels required when called:    1
 16089 ;; This function calls:
 16090 ;;		Absolute function
 16091 ;;		_UART1_Transmit_ISR
 16092 ;; This function is called by:
 16093 ;;		Interrupt level 2
 16094 ;; This function uses a non-reentrant model
 16095 ;;
 16096                           
 16097                           	psect	text93
 16098  0060D8                     __ptext93:
 16099                           	opt callstack 0
 16100  0060D8                     _UART1_tx_vect_isr:
 16101                           	opt callstack 18
 16102                           
 16103                           ;incstack = 0
 16104  0060D8  EE13  F154         	lfsr	1,___inthi_sp
 16105                           
 16106                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 16107  0060DC  500B               	movf	_UART1_TxInterruptHandler,w,c
 16108  0060DE  100C               	iorwf	_UART1_TxInterruptHandler+1,w,c
 16109  0060E0  100D               	iorwf	_UART1_TxInterruptHandler+2,w,c
 16110  0060E2  B4D8               	btfsc	status,2,c
 16111  0060E4  0011               	retfie		f
 16112                           
 16113                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 16114  0060E6  D801               	call	i2u428_48
 16115  0060E8  0011               	retfie		f
 16116  0060EA                     i2u428_48:
 16117  0060EA  0005               	push	
 16118  0060EC  6EFA               	movwf	pclath,c
 16119  0060EE  500B               	movf	_UART1_TxInterruptHandler,w,c
 16120  0060F0  6EFD               	movwf	tosl,c
 16121  0060F2  500C               	movf	_UART1_TxInterruptHandler+1,w,c
 16122  0060F4  6EFE               	movwf	tosh,c
 16123  0060F6  500D               	movf	_UART1_TxInterruptHandler+2,w,c
 16124  0060F8  6EFF               	movwf	tosu,c
 16125  0060FA  50FA               	movf	pclath,w,c
 16126  0060FC  0012               	return		;indir
 16127  0060FE                     __end_of_UART1_tx_vect_isr:
 16128                           	opt callstack 0
 16129                           
 16130 ;; *************** function _UART1_Transmit_ISR *****************
 16131 ;; Defined at:
 16132 ;;		line 211 in file "mcc_generated_files/uart1.c"
 16133 ;; Parameters:    Size  Location     Type
 16134 ;;		None
 16135 ;; Auto vars:     Size  Location     Type
 16136 ;;		None
 16137 ;; Return value:  Size  Location     Type
 16138 ;;                  1  [STACK] void 
 16139 ;; Registers used:
 16140 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16141 ;; Tracked objects:
 16142 ;;		On entry : 0/0
 16143 ;;		On exit  : 3B/39
 16144 ;;		Unchanged: 0/0
 16145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16150 ;;Total ram usage:        0 bytes
 16151 ;; Hardware stack levels used:    1
 16152 ;; This function calls:
 16153 ;;		Nothing
 16154 ;; This function is called by:
 16155 ;;		_UART1_Initialize
 16156 ;;		_UART1_tx_vect_isr
 16157 ;; This function uses a reentrant model
 16158 ;;
 16159                           
 16160                           	psect	text94
 16161  005DA6                     __ptext94:
 16162                           	opt callstack 0
 16163  005DA6                     _UART1_Transmit_ISR:
 16164                           	opt callstack 18
 16165                           
 16166                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 16167                           
 16168                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16169                           ;incstack = 0
 16170  005DA6  0E40               	movlw	64
 16171  005DA8  6039               	cpfslt	_uart1TxBufferRemaining,c
 16172  005DAA  D010               	goto	l597
 16173                           
 16174                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 16175  005DAC  0E80               	movlw	low _uart1TxBuffer
 16176  005DAE  243A               	addwf	_uart1TxTail,w,c	;volatile
 16177  005DB0  6ED9               	movwf	fsr2l,c
 16178  005DB2  6ADA               	clrf	fsr2h,c
 16179  005DB4  0E02               	movlw	high _uart1TxBuffer
 16180  005DB6  22DA               	addwfc	fsr2h,f,c
 16181  005DB8  50DF               	movf	indf2,w,c
 16182  005DBA  013D               	movlb	61	; () banked
 16183  005DBC  6FEA               	movwf	234,b	;volatile
 16184                           
 16185                           ; BSR set to: 61
 16186  005DBE  2A3A               	incf	_uart1TxTail,f,c	;volatile
 16187                           
 16188                           ; BSR set to: 61
 16189                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 16190  005DC0  0E3F               	movlw	63
 16191  005DC2  643A               	cpfsgt	_uart1TxTail,c
 16192  005DC4  D001               	goto	l6703
 16193                           
 16194                           ; BSR set to: 61
 16195                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 16196  005DC6  6A3A               	clrf	_uart1TxTail,c	;volatile
 16197  005DC8                     l6703:
 16198                           
 16199                           ; BSR set to: 61
 16200                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 16201  005DC8  2A39               	incf	_uart1TxBufferRemaining,f,c	;volatile
 16202                           
 16203                           ;mcc_generated_files/uart1.c: 220:  } else {
 16204  005DCA  0012               	return	
 16205  005DCC                     l597:
 16206                           
 16207                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 16208  005DCC  0139               	movlb	57	; () banked
 16209  005DCE  9993               	bcf	147,4,b	;volatile
 16210                           
 16211                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 16212  005DD0  0012               	return		;funcret
 16213  005DD2                     __end_of_UART1_Transmit_ISR:
 16214                           	opt callstack 0
 16215                           
 16216 ;; *************** function _UART1_rx_vect_isr *****************
 16217 ;; Defined at:
 16218 ;;		line 204 in file "mcc_generated_files/uart1.c"
 16219 ;; Parameters:    Size  Location     Type
 16220 ;;		None
 16221 ;; Auto vars:     Size  Location     Type
 16222 ;;		None
 16223 ;; Return value:  Size  Location     Type
 16224 ;;                  1    wreg      void 
 16225 ;; Registers used:
 16226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16227 ;; Tracked objects:
 16228 ;;		On entry : 0/0
 16229 ;;		On exit  : 0/0
 16230 ;;		Unchanged: 0/0
 16231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16236 ;;Total ram usage:        0 bytes
 16237 ;; Hardware stack levels used:    1
 16238 ;; Hardware stack levels required when called:    1
 16239 ;; This function calls:
 16240 ;;		Absolute function
 16241 ;;		_UART1_Receive_ISR
 16242 ;; This function is called by:
 16243 ;;		Interrupt level 2
 16244 ;; This function uses a non-reentrant model
 16245 ;;
 16246                           
 16247                           	psect	text95
 16248  006100                     __ptext95:
 16249                           	opt callstack 0
 16250  006100                     _UART1_rx_vect_isr:
 16251                           	opt callstack 18
 16252                           
 16253                           ;incstack = 0
 16254  006100  EE13  F154         	lfsr	1,___inthi_sp
 16255                           
 16256                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 16257  006104  500E               	movf	_UART1_RxInterruptHandler,w,c
 16258  006106  100F               	iorwf	_UART1_RxInterruptHandler+1,w,c
 16259  006108  1010               	iorwf	_UART1_RxInterruptHandler+2,w,c
 16260  00610A  B4D8               	btfsc	status,2,c
 16261  00610C  0011               	retfie		f
 16262                           
 16263                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 16264  00610E  D801               	call	i2u430_48
 16265  006110  0011               	retfie		f
 16266  006112                     i2u430_48:
 16267  006112  0005               	push	
 16268  006114  6EFA               	movwf	pclath,c
 16269  006116  500E               	movf	_UART1_RxInterruptHandler,w,c
 16270  006118  6EFD               	movwf	tosl,c
 16271  00611A  500F               	movf	_UART1_RxInterruptHandler+1,w,c
 16272  00611C  6EFE               	movwf	tosh,c
 16273  00611E  5010               	movf	_UART1_RxInterruptHandler+2,w,c
 16274  006120  6EFF               	movwf	tosu,c
 16275  006122  50FA               	movf	pclath,w,c
 16276  006124  0012               	return		;indir
 16277  006126                     __end_of_UART1_rx_vect_isr:
 16278                           	opt callstack 0
 16279                           
 16280 ;; *************** function _UART1_Receive_ISR *****************
 16281 ;; Defined at:
 16282 ;;		line 227 in file "mcc_generated_files/uart1.c"
 16283 ;; Parameters:    Size  Location     Type
 16284 ;;		None
 16285 ;; Auto vars:     Size  Location     Type
 16286 ;;		None
 16287 ;; Return value:  Size  Location     Type
 16288 ;;                  1  [STACK] void 
 16289 ;; Registers used:
 16290 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16291 ;; Tracked objects:
 16292 ;;		On entry : 0/0
 16293 ;;		On exit  : 0/0
 16294 ;;		Unchanged: 0/0
 16295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16300 ;;Total ram usage:        0 bytes
 16301 ;; Hardware stack levels used:    1
 16302 ;; This function calls:
 16303 ;;		Nothing
 16304 ;; This function is called by:
 16305 ;;		_UART1_Initialize
 16306 ;;		_UART1_rx_vect_isr
 16307 ;; This function uses a reentrant model
 16308 ;;
 16309                           
 16310                           	psect	text96
 16311  006268                     __ptext96:
 16312                           	opt callstack 0
 16313  006268                     _UART1_Receive_ISR:
 16314                           	opt callstack 18
 16315                           
 16316                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 16317                           
 16318                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16319                           ;incstack = 0
 16320  006268  0E40               	movlw	low _uart1RxBuffer
 16321  00626A  2438               	addwf	_uart1RxHead,w,c	;volatile
 16322  00626C  6ED9               	movwf	fsr2l,c
 16323  00626E  6ADA               	clrf	fsr2h,c
 16324  006270  0E02               	movlw	high _uart1RxBuffer
 16325  006272  22DA               	addwfc	fsr2h,f,c
 16326  006274  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 16327  00627A  2A38               	incf	_uart1RxHead,f,c	;volatile
 16328                           
 16329                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 16330  00627C  0E3F               	movlw	63
 16331  00627E  6438               	cpfsgt	_uart1RxHead,c
 16332  006280  D001               	goto	l6713
 16333                           
 16334                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 16335  006282  6A38               	clrf	_uart1RxHead,c	;volatile
 16336  006284                     l6713:
 16337                           
 16338                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 16339  006284  2A36               	incf	_uart1RxCount,f,c	;volatile
 16340                           
 16341                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16342  006286  0012               	return		;funcret
 16343  006288                     __end_of_UART1_Receive_ISR:
 16344                           	opt callstack 0
 16345                           
 16346 ;; *************** function _UART2_tx_vect_isr *****************
 16347 ;; Defined at:
 16348 ;;		line 195 in file "mcc_generated_files/uart2.c"
 16349 ;; Parameters:    Size  Location     Type
 16350 ;;		None
 16351 ;; Auto vars:     Size  Location     Type
 16352 ;;		None
 16353 ;; Return value:  Size  Location     Type
 16354 ;;                  1    wreg      void 
 16355 ;; Registers used:
 16356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16357 ;; Tracked objects:
 16358 ;;		On entry : 0/0
 16359 ;;		On exit  : 0/0
 16360 ;;		Unchanged: 0/0
 16361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16366 ;;Total ram usage:        0 bytes
 16367 ;; Hardware stack levels used:    1
 16368 ;; Hardware stack levels required when called:    1
 16369 ;; This function calls:
 16370 ;;		Absolute function
 16371 ;;		_UART2_Transmit_ISR
 16372 ;; This function is called by:
 16373 ;;		Interrupt level 2
 16374 ;; This function uses a non-reentrant model
 16375 ;;
 16376                           
 16377                           	psect	text97
 16378  006128                     __ptext97:
 16379                           	opt callstack 0
 16380  006128                     _UART2_tx_vect_isr:
 16381                           	opt callstack 18
 16382                           
 16383                           ;incstack = 0
 16384  006128  EE13  F154         	lfsr	1,___inthi_sp
 16385                           
 16386                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 16387  00612C  5011               	movf	_UART2_TxInterruptHandler,w,c
 16388  00612E  1012               	iorwf	_UART2_TxInterruptHandler+1,w,c
 16389  006130  1013               	iorwf	_UART2_TxInterruptHandler+2,w,c
 16390  006132  B4D8               	btfsc	status,2,c
 16391  006134  0011               	retfie		f
 16392                           
 16393                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 16394  006136  D801               	call	i2u432_48
 16395  006138  0011               	retfie		f
 16396  00613A                     i2u432_48:
 16397  00613A  0005               	push	
 16398  00613C  6EFA               	movwf	pclath,c
 16399  00613E  5011               	movf	_UART2_TxInterruptHandler,w,c
 16400  006140  6EFD               	movwf	tosl,c
 16401  006142  5012               	movf	_UART2_TxInterruptHandler+1,w,c
 16402  006144  6EFE               	movwf	tosh,c
 16403  006146  5013               	movf	_UART2_TxInterruptHandler+2,w,c
 16404  006148  6EFF               	movwf	tosu,c
 16405  00614A  50FA               	movf	pclath,w,c
 16406  00614C  0012               	return		;indir
 16407  00614E                     __end_of_UART2_tx_vect_isr:
 16408                           	opt callstack 0
 16409                           
 16410 ;; *************** function _UART2_Transmit_ISR *****************
 16411 ;; Defined at:
 16412 ;;		line 213 in file "mcc_generated_files/uart2.c"
 16413 ;; Parameters:    Size  Location     Type
 16414 ;;		None
 16415 ;; Auto vars:     Size  Location     Type
 16416 ;;		None
 16417 ;; Return value:  Size  Location     Type
 16418 ;;                  1  [STACK] void 
 16419 ;; Registers used:
 16420 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16421 ;; Tracked objects:
 16422 ;;		On entry : 0/0
 16423 ;;		On exit  : 3B/39
 16424 ;;		Unchanged: 0/0
 16425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16430 ;;Total ram usage:        0 bytes
 16431 ;; Hardware stack levels used:    1
 16432 ;; This function calls:
 16433 ;;		Nothing
 16434 ;; This function is called by:
 16435 ;;		_UART2_Initialize
 16436 ;;		_UART2_tx_vect_isr
 16437 ;; This function uses a reentrant model
 16438 ;;
 16439                           
 16440                           	psect	text98
 16441  005DD2                     __ptext98:
 16442                           	opt callstack 0
 16443  005DD2                     _UART2_Transmit_ISR:
 16444                           	opt callstack 18
 16445                           
 16446                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 16447                           
 16448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16449                           ;incstack = 0
 16450  005DD2  0E40               	movlw	64
 16451  005DD4  6033               	cpfslt	_uart2TxBufferRemaining,c
 16452  005DD6  D010               	goto	l717
 16453                           
 16454                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 16455  005DD8  0E00               	movlw	low _uart2TxBuffer
 16456  005DDA  2434               	addwf	_uart2TxTail,w,c	;volatile
 16457  005DDC  6ED9               	movwf	fsr2l,c
 16458  005DDE  6ADA               	clrf	fsr2h,c
 16459  005DE0  0E03               	movlw	high _uart2TxBuffer
 16460  005DE2  22DA               	addwfc	fsr2h,f,c
 16461  005DE4  50DF               	movf	indf2,w,c
 16462  005DE6  013D               	movlb	61	; () banked
 16463  005DE8  6FD2               	movwf	210,b	;volatile
 16464                           
 16465                           ; BSR set to: 61
 16466  005DEA  2A34               	incf	_uart2TxTail,f,c	;volatile
 16467                           
 16468                           ; BSR set to: 61
 16469                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 16470  005DEC  0E3F               	movlw	63
 16471  005DEE  6434               	cpfsgt	_uart2TxTail,c
 16472  005DF0  D001               	goto	l6725
 16473                           
 16474                           ; BSR set to: 61
 16475                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 16476  005DF2  6A34               	clrf	_uart2TxTail,c	;volatile
 16477  005DF4                     l6725:
 16478                           
 16479                           ; BSR set to: 61
 16480                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 16481  005DF4  2A33               	incf	_uart2TxBufferRemaining,f,c	;volatile
 16482                           
 16483                           ;mcc_generated_files/uart2.c: 224:     }
 16484  005DF6  0012               	return	
 16485  005DF8                     l717:
 16486                           
 16487                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 16488  005DF8  0139               	movlb	57	; () banked
 16489  005DFA  9796               	bcf	150,3,b	;volatile
 16490                           
 16491                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 16492  005DFC  0012               	return		;funcret
 16493  005DFE                     __end_of_UART2_Transmit_ISR:
 16494                           	opt callstack 0
 16495                           
 16496 ;; *************** function _UART2_rx_vect_isr *****************
 16497 ;; Defined at:
 16498 ;;		line 203 in file "mcc_generated_files/uart2.c"
 16499 ;; Parameters:    Size  Location     Type
 16500 ;;		None
 16501 ;; Auto vars:     Size  Location     Type
 16502 ;;		None
 16503 ;; Return value:  Size  Location     Type
 16504 ;;                  1    wreg      void 
 16505 ;; Registers used:
 16506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16507 ;; Tracked objects:
 16508 ;;		On entry : 0/0
 16509 ;;		On exit  : 0/0
 16510 ;;		Unchanged: 0/0
 16511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16516 ;;Total ram usage:        0 bytes
 16517 ;; Hardware stack levels used:    1
 16518 ;; Hardware stack levels required when called:    1
 16519 ;; This function calls:
 16520 ;;		Absolute function
 16521 ;;		_UART2_Receive_ISR
 16522 ;; This function is called by:
 16523 ;;		Interrupt level 2
 16524 ;; This function uses a non-reentrant model
 16525 ;;
 16526                           
 16527                           	psect	text99
 16528  006150                     __ptext99:
 16529                           	opt callstack 0
 16530  006150                     _UART2_rx_vect_isr:
 16531                           	opt callstack 18
 16532                           
 16533                           ;incstack = 0
 16534  006150  EE13  F154         	lfsr	1,___inthi_sp
 16535                           
 16536                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 16537  006154  5014               	movf	_UART2_RxInterruptHandler,w,c
 16538  006156  1015               	iorwf	_UART2_RxInterruptHandler+1,w,c
 16539  006158  1016               	iorwf	_UART2_RxInterruptHandler+2,w,c
 16540  00615A  B4D8               	btfsc	status,2,c
 16541  00615C  0011               	retfie		f
 16542                           
 16543                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 16544  00615E  D801               	call	i2u434_48
 16545  006160  0011               	retfie		f
 16546  006162                     i2u434_48:
 16547  006162  0005               	push	
 16548  006164  6EFA               	movwf	pclath,c
 16549  006166  5014               	movf	_UART2_RxInterruptHandler,w,c
 16550  006168  6EFD               	movwf	tosl,c
 16551  00616A  5015               	movf	_UART2_RxInterruptHandler+1,w,c
 16552  00616C  6EFE               	movwf	tosh,c
 16553  00616E  5016               	movf	_UART2_RxInterruptHandler+2,w,c
 16554  006170  6EFF               	movwf	tosu,c
 16555  006172  50FA               	movf	pclath,w,c
 16556  006174  0012               	return		;indir
 16557  006176                     __end_of_UART2_rx_vect_isr:
 16558                           	opt callstack 0
 16559                           
 16560 ;; *************** function _UART2_Receive_ISR *****************
 16561 ;; Defined at:
 16562 ;;		line 233 in file "mcc_generated_files/uart2.c"
 16563 ;; Parameters:    Size  Location     Type
 16564 ;;		None
 16565 ;; Auto vars:     Size  Location     Type
 16566 ;;		None
 16567 ;; Return value:  Size  Location     Type
 16568 ;;                  1  [STACK] void 
 16569 ;; Registers used:
 16570 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16571 ;; Tracked objects:
 16572 ;;		On entry : 0/0
 16573 ;;		On exit  : 0/0
 16574 ;;		Unchanged: 0/0
 16575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16580 ;;Total ram usage:        0 bytes
 16581 ;; Hardware stack levels used:    1
 16582 ;; This function calls:
 16583 ;;		Nothing
 16584 ;; This function is called by:
 16585 ;;		_UART2_Initialize
 16586 ;;		_UART2_rx_vect_isr
 16587 ;; This function uses a reentrant model
 16588 ;;
 16589                           
 16590                           	psect	text100
 16591  006288                     __ptext100:
 16592                           	opt callstack 0
 16593  006288                     _UART2_Receive_ISR:
 16594                           	opt callstack 18
 16595                           
 16596                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 16597                           
 16598                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16599                           ;incstack = 0
 16600  006288  0E00               	movlw	low _uart2RxBuffer
 16601  00628A  2432               	addwf	_uart2RxHead,w,c	;volatile
 16602  00628C  6ED9               	movwf	fsr2l,c
 16603  00628E  6ADA               	clrf	fsr2h,c
 16604  006290  0E02               	movlw	high _uart2RxBuffer
 16605  006292  22DA               	addwfc	fsr2h,f,c
 16606  006294  006F F743 FFDF     	movff	15824,indf2	;volatile
 16607  00629A  2A32               	incf	_uart2RxHead,f,c	;volatile
 16608                           
 16609                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 16610  00629C  0E3F               	movlw	63
 16611  00629E  6432               	cpfsgt	_uart2RxHead,c
 16612  0062A0  D001               	goto	l6735
 16613                           
 16614                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 16615  0062A2  6A32               	clrf	_uart2RxHead,c	;volatile
 16616  0062A4                     l6735:
 16617                           
 16618                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 16619  0062A4  2A30               	incf	_uart2RxCount,f,c	;volatile
 16620                           
 16621                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16622  0062A6  0012               	return		;funcret
 16623  0062A8                     __end_of_UART2_Receive_ISR:
 16624                           	opt callstack 0
 16625                           
 16626 ;; *************** function _TMR6_ISR *****************
 16627 ;; Defined at:
 16628 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 16629 ;; Parameters:    Size  Location     Type
 16630 ;;		None
 16631 ;; Auto vars:     Size  Location     Type
 16632 ;;		None
 16633 ;; Return value:  Size  Location     Type
 16634 ;;                  1    wreg      void 
 16635 ;; Registers used:
 16636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 16637 ;; Tracked objects:
 16638 ;;		On entry : 0/0
 16639 ;;		On exit  : 0/0
 16640 ;;		Unchanged: 0/0
 16641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16644 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16645 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16646 ;;Total ram usage:        1 bytes
 16647 ;; Hardware stack levels used:    1
 16648 ;; Hardware stack levels required when called:    2
 16649 ;; This function calls:
 16650 ;;		_TMR6_CallBack
 16651 ;; This function is called by:
 16652 ;;		Interrupt level 2
 16653 ;; This function uses a non-reentrant model
 16654 ;;
 16655                           
 16656                           	psect	text101
 16657  006354                     __ptext101:
 16658                           	opt callstack 0
 16659  006354                     _TMR6_ISR:
 16660                           	opt callstack 17
 16661                           
 16662                           ;incstack = 0
 16663  006354  0060  F0F0  F05C   	movff	btemp,??_TMR6_ISR
 16664  00635A  EE13  F154         	lfsr	1,___inthi_sp
 16665                           
 16666                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 16667  00635E  0139               	movlb	57	; () banked
 16668  006360  91A9               	bcf	169,0,b	;volatile
 16669                           
 16670                           ; BSR set to: 57
 16671                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 16672  006362  ECBB  F030         	call	_TMR6_CallBack	;wreg free
 16673  006366  0060  F170  F03C   	movff	??_TMR6_ISR,btemp
 16674  00636C  0011               	retfie		f
 16675  00636E                     __end_of_TMR6_ISR:
 16676                           	opt callstack 0
 16677                           
 16678 ;; *************** function _TMR6_CallBack *****************
 16679 ;; Defined at:
 16680 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 16681 ;; Parameters:    Size  Location     Type
 16682 ;;		None
 16683 ;; Auto vars:     Size  Location     Type
 16684 ;;		None
 16685 ;; Return value:  Size  Location     Type
 16686 ;;                  1  [STACK] void 
 16687 ;; Registers used:
 16688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 16689 ;; Tracked objects:
 16690 ;;		On entry : 3F/39
 16691 ;;		On exit  : 0/0
 16692 ;;		Unchanged: 0/0
 16693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16698 ;;Total ram usage:        0 bytes
 16699 ;; Hardware stack levels used:    1
 16700 ;; Hardware stack levels required when called:    1
 16701 ;; This function calls:
 16702 ;;		Absolute function
 16703 ;;		_TMR6_DefaultInterruptHandler
 16704 ;; This function is called by:
 16705 ;;		_TMR6_ISR
 16706 ;; This function uses a reentrant model
 16707 ;;
 16708                           
 16709                           	psect	text102
 16710  006176                     __ptext102:
 16711                           	opt callstack 0
 16712  006176                     _TMR6_CallBack:
 16713                           	opt callstack 17
 16714                           
 16715                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 16716                           
 16717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16718                           ;incstack = 0
 16719  006176  0100               	movlb	0	; () banked
 16720  006178  51F7               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16721  00617A  11F8               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16722  00617C  11F9               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16723  00617E  B4D8               	btfsc	status,2,c
 16724  006180  0012               	return	
 16725                           
 16726                           ; BSR set to: 0
 16727                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 16728  006182  D801               	call	u521_48
 16729  006184  0012               	return	
 16730  006186                     u521_48:
 16731  006186  0005               	push	
 16732  006188  6EFA               	movwf	pclath,c
 16733  00618A  51F7               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16734  00618C  6EFD               	movwf	tosl,c
 16735  00618E  51F8               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16736  006190  6EFE               	movwf	tosh,c
 16737  006192  51F9               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16738  006194  6EFF               	movwf	tosu,c
 16739  006196  50FA               	movf	pclath,w,c
 16740  006198  0012               	return		;indir
 16741  00619A                     __end_of_TMR6_CallBack:
 16742                           	opt callstack 0
 16743                           
 16744 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 16745 ;; Defined at:
 16746 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 16747 ;; Parameters:    Size  Location     Type
 16748 ;;		None
 16749 ;; Auto vars:     Size  Location     Type
 16750 ;;  i               1  [STACK] unsigned char 
 16751 ;; Return value:  Size  Location     Type
 16752 ;;                  1  [STACK] void 
 16753 ;; Registers used:
 16754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 16755 ;; Tracked objects:
 16756 ;;		On entry : 3F/0
 16757 ;;		On exit  : 0/0
 16758 ;;		Unchanged: 0/0
 16759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16764 ;;Total ram usage:        0 bytes
 16765 ;; Hardware stack levels used:    1
 16766 ;; This function calls:
 16767 ;;		Nothing
 16768 ;; This function is called by:
 16769 ;;		_TMR6_Initialize
 16770 ;;		_TMR6_CallBack
 16771 ;; This function uses a reentrant model
 16772 ;;
 16773                           
 16774                           	psect	text103
 16775  005ADA                     __ptext103:
 16776                           	opt callstack 0
 16777  005ADA                     _TMR6_DefaultInterruptHandler:
 16778                           	opt callstack 0
 16779                           
 16780                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16781  005ADA  52E6               	movf	postinc1,f,c
 16782                           
 16783                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 16784                           ;stkvar	_i @ sp[(-1)+0]
 16785                           
 16786                           ;incstack = 0
 16787  005ADC  0EFF               	movlw	-1
 16788  005ADE  6AE3               	clrf	plusw1,c
 16789  005AE0                     l8407:
 16790                           
 16791                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 16792                           ;stkvar	_i @ sp[(-1)+0]
 16793  005AE0  0EFF               	movlw	-1
 16794  005AE2  50E3               	movf	plusw1,w,c
 16795  005AE4  0D02               	mullw	2
 16796  005AE6  50F3               	movf	prodl,w,c
 16797  005AE8  0FDD               	addlw	low _tickCount
 16798  005AEA  6ED9               	movwf	fsr2l,c
 16799  005AEC  6ADA               	clrf	fsr2h,c
 16800  005AEE  50DE               	movf	postinc2,w,c
 16801  005AF0  10DE               	iorwf	postinc2,w,c
 16802  005AF2  B4D8               	btfsc	status,2,c
 16803  005AF4  D00A               	goto	l8411
 16804                           
 16805                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 16806                           ;stkvar	_i @ sp[(-1)+0]
 16807  005AF6  0EFF               	movlw	-1
 16808  005AF8  50E3               	movf	plusw1,w,c
 16809  005AFA  0D02               	mullw	2
 16810  005AFC  50F3               	movf	prodl,w,c
 16811  005AFE  0FDD               	addlw	low _tickCount
 16812  005B00  6ED9               	movwf	fsr2l,c
 16813  005B02  6ADA               	clrf	fsr2h,c
 16814  005B04  06DE               	decf	postinc2,f,c
 16815  005B06  0E00               	movlw	0
 16816  005B08  5ADD               	subwfb	postdec2,f,c
 16817  005B0A                     l8411:
 16818                           
 16819                           ;mcc_generated_files/tmr6.c: 207:  }
 16820                           ;stkvar	_i @ sp[(-1)+0]
 16821  005B0A  0EFF               	movlw	-1
 16822  005B0C  2AE3               	incf	plusw1,f,c
 16823                           
 16824                           ;stkvar	_i @ sp[(-1)+0]
 16825  005B0E  0EFF               	movlw	-1
 16826  005B10  006F FF8C  F03C    	movff	plusw1,btemp
 16827  005B16  0E05               	movlw	5
 16828  005B18  643C               	cpfsgt	btemp,c
 16829  005B1A  D7E2               	goto	l8407
 16830                           
 16831                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16832  005B1C  52E5               	movf	postdec1,f,c
 16833  005B1E  0012               	return		;funcret
 16834  005B20                     __end_of_TMR6_DefaultInterruptHandler:
 16835                           	opt callstack 0
 16836                           
 16837 ;; *************** function _DMA1_DMASCNT_ISR *****************
 16838 ;; Defined at:
 16839 ;;		line 126 in file "mcc_generated_files/dma1.c"
 16840 ;; Parameters:    Size  Location     Type
 16841 ;;		None
 16842 ;; Auto vars:     Size  Location     Type
 16843 ;;		None
 16844 ;; Return value:  Size  Location     Type
 16845 ;;                  1    wreg      void 
 16846 ;; Registers used:
 16847 ;;		None
 16848 ;; Tracked objects:
 16849 ;;		On entry : 0/0
 16850 ;;		On exit  : 3F/0
 16851 ;;		Unchanged: 0/0
 16852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16857 ;;Total ram usage:        0 bytes
 16858 ;; Hardware stack levels used:    1
 16859 ;; This function calls:
 16860 ;;		Nothing
 16861 ;; This function is called by:
 16862 ;;		Interrupt level 2
 16863 ;; This function uses a non-reentrant model
 16864 ;;
 16865                           
 16866                           	psect	text104
 16867  006408                     __ptext104:
 16868                           	opt callstack 0
 16869  006408                     _DMA1_DMASCNT_ISR:
 16870                           	opt callstack 19
 16871                           
 16872                           ;incstack = 0
 16873  006408  EE13  F154         	lfsr	1,___inthi_sp
 16874                           
 16875                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 16876  00640C  0139               	movlb	57	; () banked
 16877  00640E  91A2               	bcf	162,0,b	;volatile
 16878                           
 16879                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 16880  006410  0100               	movlb	0	; () banked
 16881  006412  97D1               	bcf	_spi_link& (0+255),3,b	;volatile
 16882                           
 16883                           ; BSR set to: 0
 16884  006414  0011               	retfie		f
 16885  006416                     __end_of_DMA1_DMASCNT_ISR:
 16886                           	opt callstack 0
 16887                           
 16888 ;; *************** function _DMA1_DMADCNT_ISR *****************
 16889 ;; Defined at:
 16890 ;;		line 133 in file "mcc_generated_files/dma1.c"
 16891 ;; Parameters:    Size  Location     Type
 16892 ;;		None
 16893 ;; Auto vars:     Size  Location     Type
 16894 ;;		None
 16895 ;; Return value:  Size  Location     Type
 16896 ;;                  1    wreg      void 
 16897 ;; Registers used:
 16898 ;;		None
 16899 ;; Tracked objects:
 16900 ;;		On entry : 0/0
 16901 ;;		On exit  : 3F/39
 16902 ;;		Unchanged: 0/0
 16903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16908 ;;Total ram usage:        0 bytes
 16909 ;; Hardware stack levels used:    1
 16910 ;; This function calls:
 16911 ;;		Nothing
 16912 ;; This function is called by:
 16913 ;;		Interrupt level 2
 16914 ;; This function uses a non-reentrant model
 16915 ;;
 16916                           
 16917                           	psect	text105
 16918  006420                     __ptext105:
 16919                           	opt callstack 0
 16920  006420                     _DMA1_DMADCNT_ISR:
 16921                           	opt callstack 19
 16922                           
 16923                           ; BSR set to: 0
 16924                           ;incstack = 0
 16925  006420  EE13  F154         	lfsr	1,___inthi_sp
 16926                           
 16927                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 16928  006424  0139               	movlb	57	; () banked
 16929  006426  93A2               	bcf	162,1,b	;volatile
 16930                           
 16931                           ; BSR set to: 57
 16932  006428  0011               	retfie		f
 16933  00642A                     __end_of_DMA1_DMADCNT_ISR:
 16934                           	opt callstack 0
 16935                           
 16936 ;; *************** function _DMA1_DMAA_ISR *****************
 16937 ;; Defined at:
 16938 ;;		line 143 in file "mcc_generated_files/dma1.c"
 16939 ;; Parameters:    Size  Location     Type
 16940 ;;		None
 16941 ;; Auto vars:     Size  Location     Type
 16942 ;;		None
 16943 ;; Return value:  Size  Location     Type
 16944 ;;                  1    wreg      void 
 16945 ;; Registers used:
 16946 ;;		None
 16947 ;; Tracked objects:
 16948 ;;		On entry : 0/0
 16949 ;;		On exit  : 3F/39
 16950 ;;		Unchanged: 0/0
 16951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16956 ;;Total ram usage:        0 bytes
 16957 ;; Hardware stack levels used:    1
 16958 ;; This function calls:
 16959 ;;		Nothing
 16960 ;; This function is called by:
 16961 ;;		Interrupt level 2
 16962 ;; This function uses a non-reentrant model
 16963 ;;
 16964                           
 16965                           	psect	text106
 16966  00642C                     __ptext106:
 16967                           	opt callstack 0
 16968  00642C                     _DMA1_DMAA_ISR:
 16969                           	opt callstack 19
 16970                           
 16971                           ; BSR set to: 57
 16972                           ;incstack = 0
 16973  00642C  EE13  F154         	lfsr	1,___inthi_sp
 16974                           
 16975                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 16976  006430  0139               	movlb	57	; () banked
 16977  006432  97A2               	bcf	162,3,b	;volatile
 16978                           
 16979                           ; BSR set to: 57
 16980  006434  0011               	retfie		f
 16981  006436                     __end_of_DMA1_DMAA_ISR:
 16982                           	opt callstack 0
 16983                           
 16984 ;; *************** function _DMA1_DMAOR_ISR *****************
 16985 ;; Defined at:
 16986 ;;		line 154 in file "mcc_generated_files/dma1.c"
 16987 ;; Parameters:    Size  Location     Type
 16988 ;;		None
 16989 ;; Auto vars:     Size  Location     Type
 16990 ;;		None
 16991 ;; Return value:  Size  Location     Type
 16992 ;;                  1    wreg      void 
 16993 ;; Registers used:
 16994 ;;		None
 16995 ;; Tracked objects:
 16996 ;;		On entry : 0/0
 16997 ;;		On exit  : 3F/39
 16998 ;;		Unchanged: 0/0
 16999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17004 ;;Total ram usage:        0 bytes
 17005 ;; Hardware stack levels used:    1
 17006 ;; This function calls:
 17007 ;;		Nothing
 17008 ;; This function is called by:
 17009 ;;		Interrupt level 2
 17010 ;; This function uses a non-reentrant model
 17011 ;;
 17012                           
 17013                           	psect	text107
 17014  006438                     __ptext107:
 17015                           	opt callstack 0
 17016  006438                     _DMA1_DMAOR_ISR:
 17017                           	opt callstack 19
 17018                           
 17019                           ; BSR set to: 57
 17020                           ;incstack = 0
 17021  006438  EE13  F154         	lfsr	1,___inthi_sp
 17022                           
 17023                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 17024  00643C  0139               	movlb	57	; () banked
 17025  00643E  95A2               	bcf	162,2,b	;volatile
 17026                           
 17027                           ; BSR set to: 57
 17028  006440  0011               	retfie		f
 17029  006442                     __end_of_DMA1_DMAOR_ISR:
 17030                           	opt callstack 0
 17031                           
 17032 ;; *************** function _TMR5_ISR *****************
 17033 ;; Defined at:
 17034 ;;		line 163 in file "mcc_generated_files/tmr5.c"
 17035 ;; Parameters:    Size  Location     Type
 17036 ;;		None
 17037 ;; Auto vars:     Size  Location     Type
 17038 ;;		None
 17039 ;; Return value:  Size  Location     Type
 17040 ;;                  1    wreg      void 
 17041 ;; Registers used:
 17042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 17043 ;; Tracked objects:
 17044 ;;		On entry : 0/0
 17045 ;;		On exit  : 0/0
 17046 ;;		Unchanged: 0/0
 17047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17050 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17052 ;;Total ram usage:        1 bytes
 17053 ;; Hardware stack levels used:    1
 17054 ;; Hardware stack levels required when called:    2
 17055 ;; This function calls:
 17056 ;;		_TMR5_CallBack
 17057 ;;		_TMR5_WriteTimer
 17058 ;; This function is called by:
 17059 ;;		Interrupt level 2
 17060 ;; This function uses a non-reentrant model
 17061 ;;
 17062                           
 17063                           	psect	text108
 17064  005C9C                     __ptext108:
 17065                           	opt callstack 0
 17066  005C9C                     _TMR5_ISR:
 17067                           	opt callstack 17
 17068                           
 17069                           ; BSR set to: 57
 17070                           ;incstack = 0
 17071  005C9C  0060  F11C  F05D   	movff	btemp+11,??_TMR5_ISR
 17072  005CA2  EE13  F154         	lfsr	1,___inthi_sp
 17073                           
 17074                           ;mcc_generated_files/tmr5.c: 165:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 168:  PIR8bits.TMR5IF = 0;
 17075  005CA6  0139               	movlb	57	; () banked
 17076  005CA8  9DA8               	bcf	168,6,b	;volatile
 17077                           
 17078                           ; BSR set to: 57
 17079                           ;mcc_generated_files/tmr5.c: 169:  TMR5_WriteTimer(timer5ReloadVal);
 17080  005CAA  0060  F0A3  FFE6   	movff	_timer5ReloadVal,postinc1
 17081  005CB0  0060  F0A7  FFE6   	movff	_timer5ReloadVal+1,postinc1
 17082  005CB6  ECB1  F02D         	call	_TMR5_WriteTimer	;wreg free
 17083                           
 17084                           ;mcc_generated_files/tmr5.c: 172:  if (++CountCallBack >= 50) {
 17085  005CBA  4A26               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 17086  005CBC  2A27               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 17087  005CBE  5027               	movf	TMR5_ISR@CountCallBack+1,w,c	;volatile
 17088  005CC0  E104               	bnz	i2u608_40
 17089  005CC2  0E32               	movlw	50
 17090  005CC4  5C26               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 17091  005CC6  A0D8               	btfss	status,0,c
 17092  005CC8  D004               	goto	i2l1139
 17093  005CCA                     i2u608_40:
 17094                           
 17095                           ;mcc_generated_files/tmr5.c: 174:   TMR5_CallBack();
 17096  005CCA  ECCD  F030         	call	_TMR5_CallBack	;wreg free
 17097                           
 17098                           ;mcc_generated_files/tmr5.c: 177:   CountCallBack = 0;
 17099  005CCE  6A26               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 17100  005CD0  6A27               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 17101  005CD2                     i2l1139:
 17102  005CD2  0060  F174  F047   	movff	??_TMR5_ISR,btemp+11
 17103  005CD8  0011               	retfie		f
 17104  005CDA                     __end_of_TMR5_ISR:
 17105                           	opt callstack 0
 17106                           
 17107 ;; *************** function _TMR5_WriteTimer *****************
 17108 ;; Defined at:
 17109 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 17110 ;; Parameters:    Size  Location     Type
 17111 ;;  timerVal        2  [STACK] unsigned short 
 17112 ;; Auto vars:     Size  Location     Type
 17113 ;;		None
 17114 ;; Return value:  Size  Location     Type
 17115 ;;                  1  [STACK] void 
 17116 ;; Registers used:
 17117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17118 ;; Tracked objects:
 17119 ;;		On entry : 3F/39
 17120 ;;		On exit  : 0/0
 17121 ;;		Unchanged: 0/0
 17122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17127 ;;Total ram usage:        0 bytes
 17128 ;; Hardware stack levels used:    1
 17129 ;; This function calls:
 17130 ;;		Nothing
 17131 ;; This function is called by:
 17132 ;;		_TMR5_ISR
 17133 ;; This function uses a reentrant model
 17134 ;;
 17135                           
 17136                           	psect	text109
 17137  005B62                     __ptext109:
 17138                           	opt callstack 0
 17139  005B62                     _TMR5_WriteTimer:
 17140                           	opt callstack 18
 17141                           
 17142                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:  if (T5CONbits.NOT_SYNC == 1) {
 17143                           
 17144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17145                           ;incstack = 0
 17146  005B62  A49A               	btfss	16282,2,c	;volatile
 17147  005B64  D00F               	goto	l4131
 17148                           
 17149                           ;mcc_generated_files/tmr5.c: 133:   T5CONbits.TMR5ON = 0;
 17150  005B66  909A               	bcf	16282,0,c	;volatile
 17151                           
 17152                           ;mcc_generated_files/tmr5.c: 136:   TMR5H = (timerVal >> 8);
 17153                           ;stkvar	_timerVal @ sp[(0)+-2]
 17154  005B68  0EFF               	movlw	255
 17155  005B6A  24E1               	addwf	fsr1l,w,c
 17156  005B6C  6ED9               	movwf	fsr2l,c
 17157  005B6E  0EFF               	movlw	255
 17158  005B70  20E2               	addwfc	fsr1h,w,c
 17159  005B72  6EDA               	movwf	fsr2h,c
 17160  005B74  50DF               	movf	indf2,w,c
 17161  005B76  6E99               	movwf	16281,c	;volatile
 17162                           
 17163                           ;mcc_generated_files/tmr5.c: 137:   TMR5L = timerVal;
 17164                           ;stkvar	_timerVal @ sp[(0)+-2]
 17165  005B78  0EFE               	movlw	-2
 17166  005B7A  006F FF8F FF98     	movff	plusw1,16280	;volatile
 17167                           
 17168                           ;mcc_generated_files/tmr5.c: 140:   T5CONbits.TMR5ON = 1;
 17169  005B80  809A               	bsf	16282,0,c	;volatile
 17170                           
 17171                           ;mcc_generated_files/tmr5.c: 141:  } else {
 17172  005B82  D00C               	goto	l1122
 17173  005B84                     l4131:
 17174                           
 17175                           ;mcc_generated_files/tmr5.c: 143:   TMR5H = (timerVal >> 8);
 17176                           ;stkvar	_timerVal @ sp[(0)+-2]
 17177  005B84  0EFF               	movlw	255
 17178  005B86  24E1               	addwf	fsr1l,w,c
 17179  005B88  6ED9               	movwf	fsr2l,c
 17180  005B8A  0EFF               	movlw	255
 17181  005B8C  20E2               	addwfc	fsr1h,w,c
 17182  005B8E  6EDA               	movwf	fsr2h,c
 17183  005B90  50DF               	movf	indf2,w,c
 17184  005B92  6E99               	movwf	16281,c	;volatile
 17185                           
 17186                           ;mcc_generated_files/tmr5.c: 144:   TMR5L = timerVal;
 17187                           ;stkvar	_timerVal @ sp[(0)+-2]
 17188  005B94  0EFE               	movlw	-2
 17189  005B96  006F FF8F FF98     	movff	plusw1,16280	;volatile
 17190  005B9C                     l1122:
 17191                           
 17192                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 17193  005B9C  52E5               	movf	postdec1,f,c
 17194  005B9E  52E5               	movf	postdec1,f,c
 17195  005BA0  0012               	return		;funcret
 17196  005BA2                     __end_of_TMR5_WriteTimer:
 17197                           	opt callstack 0
 17198                           
 17199 ;; *************** function _TMR5_CallBack *****************
 17200 ;; Defined at:
 17201 ;;		line 181 in file "mcc_generated_files/tmr5.c"
 17202 ;; Parameters:    Size  Location     Type
 17203 ;;		None
 17204 ;; Auto vars:     Size  Location     Type
 17205 ;;		None
 17206 ;; Return value:  Size  Location     Type
 17207 ;;                  1  [STACK] void 
 17208 ;; Registers used:
 17209 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 17210 ;; Tracked objects:
 17211 ;;		On entry : 0/39
 17212 ;;		On exit  : 0/0
 17213 ;;		Unchanged: 0/0
 17214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17219 ;;Total ram usage:        0 bytes
 17220 ;; Hardware stack levels used:    1
 17221 ;; Hardware stack levels required when called:    1
 17222 ;; This function calls:
 17223 ;;		Absolute function
 17224 ;;		_TMR5_DefaultInterruptHandler
 17225 ;; This function is called by:
 17226 ;;		_TMR5_ISR
 17227 ;; This function uses a reentrant model
 17228 ;;
 17229                           
 17230                           	psect	text110
 17231  00619A                     __ptext110:
 17232                           	opt callstack 0
 17233  00619A                     _TMR5_CallBack:
 17234                           	opt callstack 17
 17235                           
 17236                           ;mcc_generated_files/tmr5.c: 184:  if (TMR5_InterruptHandler) {
 17237                           
 17238                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17239                           ;incstack = 0
 17240  00619A  0100               	movlb	0	; () banked
 17241  00619C  51F4               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17242  00619E  11F5               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17243  0061A0  11F6               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17244  0061A2  B4D8               	btfsc	status,2,c
 17245  0061A4  0012               	return	
 17246                           
 17247                           ; BSR set to: 0
 17248                           ;mcc_generated_files/tmr5.c: 185:   TMR5_InterruptHandler();
 17249  0061A6  D801               	call	u361_48
 17250  0061A8  0012               	return	
 17251  0061AA                     u361_48:
 17252  0061AA  0005               	push	
 17253  0061AC  6EFA               	movwf	pclath,c
 17254  0061AE  51F4               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17255  0061B0  6EFD               	movwf	tosl,c
 17256  0061B2  51F5               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17257  0061B4  6EFE               	movwf	tosh,c
 17258  0061B6  51F6               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17259  0061B8  6EFF               	movwf	tosu,c
 17260  0061BA  50FA               	movf	pclath,w,c
 17261  0061BC  0012               	return		;indir
 17262  0061BE                     __end_of_TMR5_CallBack:
 17263                           	opt callstack 0
 17264                           
 17265 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 17266 ;; Defined at:
 17267 ;;		line 194 in file "mcc_generated_files/tmr5.c"
 17268 ;; Parameters:    Size  Location     Type
 17269 ;;		None
 17270 ;; Auto vars:     Size  Location     Type
 17271 ;;		None
 17272 ;; Return value:  Size  Location     Type
 17273 ;;                  1  [STACK] void 
 17274 ;; Registers used:
 17275 ;;		wreg, status,2, status,0, btemp+11
 17276 ;; Tracked objects:
 17277 ;;		On entry : 3F/0
 17278 ;;		On exit  : 0/0
 17279 ;;		Unchanged: 0/0
 17280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17285 ;;Total ram usage:        0 bytes
 17286 ;; Hardware stack levels used:    1
 17287 ;; This function calls:
 17288 ;;		Nothing
 17289 ;; This function is called by:
 17290 ;;		_TMR5_Initialize
 17291 ;;		_TMR5_CallBack
 17292 ;; This function uses a reentrant model
 17293 ;;
 17294                           
 17295                           	psect	text111
 17296  00636E                     __ptext111:
 17297                           	opt callstack 0
 17298  00636E                     _TMR5_DefaultInterruptHandler:
 17299                           	opt callstack 17
 17300                           
 17301                           ;mcc_generated_files/tmr5.c: 198:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 17302                           
 17303                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17304                           ;incstack = 0
 17305  00636E  A0BE               	btfss	16318,0,c	;volatile
 17306  006370  D002               	goto	u338_40
 17307  006372  0E01               	movlw	1
 17308  006374  D001               	goto	u338_46
 17309  006376                     u338_40:
 17310  006376  0E00               	movlw	0
 17311  006378                     u338_46:
 17312  006378  0AFF               	xorlw	255
 17313  00637A  6E47               	movwf	btemp+11,c
 17314  00637C  50BE               	movf	16318,w,c	;volatile
 17315  00637E  1847               	xorwf	btemp+11,w,c
 17316  006380  0BFE               	andlw	-2
 17317  006382  1847               	xorwf	btemp+11,w,c
 17318  006384  6EBE               	movwf	16318,c	;volatile
 17319                           
 17320                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17321  006386  0012               	return		;funcret
 17322  006388                     __end_of_TMR5_DefaultInterruptHandler:
 17323                           	opt callstack 0
 17324                           
 17325                           ;
 17326                           ; Interrupt Vector Table @ 0x8
 17327                           ;
 17328                           
 17329                           	psect	ivt0x8
 17330  000008                     __pivt0x8:
 17331                           	opt callstack 0
 17332  000008                     ivt0x8_base:
 17333                           	opt callstack 0
 17334                           
 17335                           ; Vector 0 : SWINT
 17336  000008  191C               	dw	_Default_ISR shr (0+2)
 17337                           
 17338                           ; Vector 1 : HLVD
 17339  00000A  191C               	dw	_Default_ISR shr (0+2)
 17340                           
 17341                           ; Vector 2 : OSF
 17342  00000C  191C               	dw	_Default_ISR shr (0+2)
 17343                           
 17344                           ; Vector 3 : CSW
 17345  00000E  191C               	dw	_Default_ISR shr (0+2)
 17346                           
 17347                           ; Vector 4 : NVM
 17348  000010  191C               	dw	_Default_ISR shr (0+2)
 17349                           
 17350                           ; Vector 5 : SCAN
 17351  000012  191C               	dw	_Default_ISR shr (0+2)
 17352                           
 17353                           ; Vector 6 : CRC
 17354  000014  191C               	dw	_Default_ISR shr (0+2)
 17355                           
 17356                           ; Vector 7 : IOC
 17357  000016  191C               	dw	_Default_ISR shr (0+2)
 17358                           
 17359                           ; Vector 8 : INT0
 17360  000018  18F6               	dw	_INT0_ISR shr (0+2)
 17361                           
 17362                           ; Vector 9 : ZCD
 17363  00001A  191C               	dw	_Default_ISR shr (0+2)
 17364                           
 17365                           ; Vector 10 : AD
 17366  00001C  179F               	dw	_ADCC_ISR shr (0+2)
 17367                           
 17368                           ; Vector 11 : ADT
 17369  00001E  191C               	dw	_Default_ISR shr (0+2)
 17370                           
 17371                           ; Vector 12 : CMP1
 17372  000020  191C               	dw	_Default_ISR shr (0+2)
 17373                           
 17374                           ; Vector 13 : SMT1
 17375  000022  191C               	dw	_Default_ISR shr (0+2)
 17376                           
 17377                           ; Vector 14 : SMT1PRA
 17378  000024  191C               	dw	_Default_ISR shr (0+2)
 17379                           
 17380                           ; Vector 15 : SMT1PRW
 17381  000026  191C               	dw	_Default_ISR shr (0+2)
 17382                           
 17383                           ; Vector 16 : DMA1SCNT
 17384  000028  1902               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 17385                           
 17386                           ; Vector 17 : DMA1DCNT
 17387  00002A  1908               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 17388                           
 17389                           ; Vector 18 : DMA1OR
 17390  00002C  190E               	dw	_DMA1_DMAOR_ISR shr (0+2)
 17391                           
 17392                           ; Vector 19 : DMA1A
 17393  00002E  190B               	dw	_DMA1_DMAA_ISR shr (0+2)
 17394                           
 17395                           ; Vector 20 : SPI1RX
 17396  000030  191C               	dw	_Default_ISR shr (0+2)
 17397                           
 17398                           ; Vector 21 : SPI1TX
 17399  000032  191C               	dw	_Default_ISR shr (0+2)
 17400                           
 17401                           ; Vector 22 : SPI1
 17402  000034  191C               	dw	_Default_ISR shr (0+2)
 17403                           
 17404                           ; Vector 23 : I2C1RX
 17405  000036  191C               	dw	_Default_ISR shr (0+2)
 17406                           
 17407                           ; Vector 24 : I2C1TX
 17408  000038  191C               	dw	_Default_ISR shr (0+2)
 17409                           
 17410                           ; Vector 25 : I2C1
 17411  00003A  191C               	dw	_Default_ISR shr (0+2)
 17412                           
 17413                           ; Vector 26 : I2C1E
 17414  00003C  191C               	dw	_Default_ISR shr (0+2)
 17415                           
 17416                           ; Vector 27 : U1RX
 17417  00003E  1840               	dw	_UART1_rx_vect_isr shr (0+2)
 17418                           
 17419                           ; Vector 28 : U1TX
 17420  000040  1836               	dw	_UART1_tx_vect_isr shr (0+2)
 17421                           
 17422                           ; Vector 29 : U1E
 17423  000042  191C               	dw	_Default_ISR shr (0+2)
 17424                           
 17425                           ; Vector 30 : U1
 17426  000044  191C               	dw	_Default_ISR shr (0+2)
 17427                           
 17428                           ; Vector 31 : TMR0
 17429  000046  191C               	dw	_Default_ISR shr (0+2)
 17430                           
 17431                           ; Vector 32 : TMR1
 17432  000048  191C               	dw	_Default_ISR shr (0+2)
 17433                           
 17434                           ; Vector 33 : TMR1G
 17435  00004A  191C               	dw	_Default_ISR shr (0+2)
 17436                           
 17437                           ; Vector 34 : TMR2
 17438  00004C  191C               	dw	_Default_ISR shr (0+2)
 17439                           
 17440                           ; Vector 35 : CCP1
 17441  00004E  191C               	dw	_Default_ISR shr (0+2)
 17442                           
 17443                           ; Vector 36 : Undefined
 17444  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17445                           
 17446                           ; Vector 37 : NCO1
 17447  000052  191C               	dw	_Default_ISR shr (0+2)
 17448                           
 17449                           ; Vector 38 : CWG1
 17450  000054  191C               	dw	_Default_ISR shr (0+2)
 17451                           
 17452                           ; Vector 39 : CLC1
 17453  000056  191C               	dw	_Default_ISR shr (0+2)
 17454                           
 17455                           ; Vector 40 : INT1
 17456  000058  18FA               	dw	_INT1_ISR shr (0+2)
 17457                           
 17458                           ; Vector 41 : CMP2
 17459  00005A  191C               	dw	_Default_ISR shr (0+2)
 17460                           
 17461                           ; Vector 42 : DMA2SCNT
 17462  00005C  191C               	dw	_Default_ISR shr (0+2)
 17463                           
 17464                           ; Vector 43 : DMA2DCNT
 17465  00005E  191C               	dw	_Default_ISR shr (0+2)
 17466                           
 17467                           ; Vector 44 : DMA2OR
 17468  000060  191C               	dw	_Default_ISR shr (0+2)
 17469                           
 17470                           ; Vector 45 : DMA2A
 17471  000062  191C               	dw	_Default_ISR shr (0+2)
 17472                           
 17473                           ; Vector 46 : I2C2RX
 17474  000064  191C               	dw	_Default_ISR shr (0+2)
 17475                           
 17476                           ; Vector 47 : I2C2TX
 17477  000066  191C               	dw	_Default_ISR shr (0+2)
 17478                           
 17479                           ; Vector 48 : I2C2
 17480  000068  191C               	dw	_Default_ISR shr (0+2)
 17481                           
 17482                           ; Vector 49 : I2C2E
 17483  00006A  191C               	dw	_Default_ISR shr (0+2)
 17484                           
 17485                           ; Vector 50 : U2RX
 17486  00006C  1854               	dw	_UART2_rx_vect_isr shr (0+2)
 17487                           
 17488                           ; Vector 51 : U2TX
 17489  00006E  184A               	dw	_UART2_tx_vect_isr shr (0+2)
 17490                           
 17491                           ; Vector 52 : U2E
 17492  000070  191C               	dw	_Default_ISR shr (0+2)
 17493                           
 17494                           ; Vector 53 : U2
 17495  000072  191C               	dw	_Default_ISR shr (0+2)
 17496                           
 17497                           ; Vector 54 : TMR3
 17498  000074  191C               	dw	_Default_ISR shr (0+2)
 17499                           
 17500                           ; Vector 55 : TMR3G
 17501  000076  191C               	dw	_Default_ISR shr (0+2)
 17502                           
 17503                           ; Vector 56 : TMR4
 17504  000078  191C               	dw	_Default_ISR shr (0+2)
 17505                           
 17506                           ; Vector 57 : CCP2
 17507  00007A  191C               	dw	_Default_ISR shr (0+2)
 17508                           
 17509                           ; Vector 58 : Undefined
 17510  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 17511                           
 17512                           ; Vector 59 : CWG2
 17513  00007E  191C               	dw	_Default_ISR shr (0+2)
 17514                           
 17515                           ; Vector 60 : CLC2
 17516  000080  191C               	dw	_Default_ISR shr (0+2)
 17517                           
 17518                           ; Vector 61 : INT2
 17519  000082  18FE               	dw	_INT2_ISR shr (0+2)
 17520                           
 17521                           ; Vector 62 : Undefined
 17522  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 17523                           
 17524                           ; Vector 63 : Undefined
 17525  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 17526                           
 17527                           ; Vector 64 : Undefined
 17528  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 17529                           
 17530                           ; Vector 65 : Undefined
 17531  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 17532                           
 17533                           ; Vector 66 : Undefined
 17534  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 17535                           
 17536                           ; Vector 67 : Undefined
 17537  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 17538                           
 17539                           ; Vector 68 : Undefined
 17540  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 17541                           
 17542                           ; Vector 69 : Undefined
 17543  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 17544                           
 17545                           ; Vector 70 : TMR5
 17546  000094  1727               	dw	_TMR5_ISR shr (0+2)
 17547                           
 17548                           ; Vector 71 : TMR5G
 17549  000096  191C               	dw	_Default_ISR shr (0+2)
 17550                           
 17551                           ; Vector 72 : TMR6
 17552  000098  18D5               	dw	_TMR6_ISR shr (0+2)
 17553                           
 17554                           ; Vector 73 : CCP3
 17555  00009A  191C               	dw	_Default_ISR shr (0+2)
 17556                           
 17557                           ; Vector 74 : CWG3
 17558  00009C  191C               	dw	_Default_ISR shr (0+2)
 17559                           
 17560                           ; Vector 75 : CLC3
 17561  00009E  191C               	dw	_Default_ISR shr (0+2)
 17562                           
 17563                           ; Vector 76 : Undefined
 17564  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 17565                           
 17566                           ; Vector 77 : Undefined
 17567  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 17568                           
 17569                           ; Vector 78 : Undefined
 17570  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 17571                           
 17572                           ; Vector 79 : Undefined
 17573  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 17574                           
 17575                           ; Vector 80 : CCP4
 17576  0000A8  191C               	dw	_Default_ISR shr (0+2)
 17577                           
 17578                           ; Vector 81 : CLC4
 17579  0000AA  191C               	dw	_Default_ISR shr (0+2)
 17580  0000AC                     ivt0x8_undefint:
 17581                           	opt callstack 0
 17582  0000AC  00FF               	reset	
 17583                           
 17584                           	psect	text112
 17585  000000                     __ptext112:
 17586                           	opt callstack 0
 17587                           
 17588                           	psect	rparam
 17589  0000                     
 17590                           	psect	temp
 17591  00003C                     btemp:
 17592                           	opt callstack 0
 17593  00003C                     	ds	32
 17594  0000                     wtemp0	set	btemp
 17595  0000                     wtemp1	set	btemp+2
 17596  0000                     wtemp2	set	btemp+4
 17597  0000                     wtemp3	set	btemp+6
 17598  0000                     wtemp4	set	btemp+8
 17599  0000                     wtemp5	set	btemp+10
 17600  0000                     wtemp8	set	btemp+1
 17601  0000                     ttemp0	set	btemp
 17602  0000                     ttemp1	set	btemp+3
 17603  0000                     ttemp2	set	btemp+6
 17604  0000                     ttemp3	set	btemp+9
 17605  0000                     ttemp5	set	btemp+1
 17606  0000                     ttemp6	set	btemp+4
 17607  0000                     ttemp7	set	btemp+8
 17608  0000                     ltemp0	set	btemp
 17609  0000                     ltemp1	set	btemp+4
 17610  0000                     ltemp2	set	btemp+8
 17611  0000                     lltemp0	set	btemp
 17612  0000                     lltemp1	set	btemp+8
 17613  0000                     lltemp2	set	btemp+16
 17614  0000                     lltemp3	set	btemp+24
 17615                           tosu	equ	0x3FFF
 17616                           tosh	equ	0x3FFE
 17617                           tosl	equ	0x3FFD
 17618                           stkptr	equ	0x3FFC
 17619                           pclatu	equ	0x3FFB
 17620                           pclath	equ	0x3FFA
 17621                           pcl	equ	0x3FF9
 17622                           tblptru	equ	0x3FF8
 17623                           tblptrh	equ	0x3FF7
 17624                           tblptrl	equ	0x3FF6
 17625                           tablat	equ	0x3FF5
 17626                           prodh	equ	0x3FF4
 17627                           prodl	equ	0x3FF3
 17628                           indf0	equ	0x3FEF
 17629                           postinc0	equ	0x3FEE
 17630                           postdec0	equ	0x3FED
 17631                           preinc0	equ	0x3FEC
 17632                           plusw0	equ	0x3FEB
 17633                           fsr0h	equ	0x3FEA
 17634                           fsr0l	equ	0x3FE9
 17635                           wreg	equ	0x3FE8
 17636                           indf1	equ	0x3FE7
 17637                           postinc1	equ	0x3FE6
 17638                           postdec1	equ	0x3FE5
 17639                           preinc1	equ	0x3FE4
 17640                           plusw1	equ	0x3FE3
 17641                           fsr1h	equ	0x3FE2
 17642                           fsr1l	equ	0x3FE1
 17643                           bsr	equ	0x3FE0
 17644                           indf2	equ	0x3FDF
 17645                           postinc2	equ	0x3FDE
 17646                           postdec2	equ	0x3FDD
 17647                           preinc2	equ	0x3FDC
 17648                           plusw2	equ	0x3FDB
 17649                           fsr2h	equ	0x3FDA
 17650                           fsr2l	equ	0x3FD9
 17651                           status	equ	0x3FD8


Data Sizes:
    Strings     206
    Constant    0
    Data        388
    BSS         539
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      2      62
    BANK0           160      0     158
    BANK1           256      0     233
    BANK2           256      0     222
    BANK3           256      0     254
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[21]), 
		 -> STR_10(CODE[20]), STR_9(CODE[23]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[21]), 
		 -> STR_10(CODE[20]), STR_9(CODE[23]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 93
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[93]), 

    a	PTR const unsigned char  size(2) Largest target is 93
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[93]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[6]), STR_12(CODE[17]), 
		 -> STR_11(CODE[21]), STR_10(CODE[20]), STR_9(CODE[23]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 93
		 -> V(BANK0[93]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 93
		 -> V(BANK0[93]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4363_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 93
		 -> V(BANK0[93]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 93
		 -> V(BANK0[93]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[21]), 
		 -> STR_10(CODE[20]), STR_9(CODE[23]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 23
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[21]), 
		 -> STR_10(CODE[20]), STR_9(CODE[23]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[93]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[93]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[6]), 
		 -> V(BANK0[93]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16636.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    F16636.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    byte_block	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H27(BANK2[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[91]), 

    k	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H27(BANK2[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[91]), 

    t_link	PTR enum E16173 size(1) Largest target is 93
		 -> V(BANK0[93]), 

    S3684response_type$reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    F16624.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    S3684response_type$header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    F16624.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    r_link	PTR enum E16173 size(1) Largest target is 93
		 -> V(BANK0[93]), 

    m_link	PTR enum E16173 size(1) Largest target is 93
		 -> V(BANK0[93]), 

    byte_block	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H27(BANK2[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[91]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 93
		 -> V(BANK0[93]), 

    strPtr	PTR unsigned char  size(1) Largest target is 93
		 -> V(BANK0[93]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1986spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1986spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   44653
                  _SYSTEM_Initialize
                   _UART1_put_buffer
                   _UART2_put_buffer
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _m_protocol
                         _r_protocol
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           2     1      1    2066
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                             _WaitMs
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     132
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21     9     12    8312
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1    2127
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                     _secs_gem_state
                          _secs_send
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           2     1      1    2271
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
                     _secs_gem_state
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5    1188
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _secs_gem_state                                       2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (3) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   18900
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9495
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9343
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9312
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8087
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    7988
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7749
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     179
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      30
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      30
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      45
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      15
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0     130
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0     130
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0     130
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            1     1      0      60
                                              1 COMRAM     1     1      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _UART1_put_buffer
   _UART2_put_buffer
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
       _wdtdelay
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_gem_state
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_gem_state
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _WaitMs
       _StartTimer
       _TimerDone
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FE      11       99.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      DE       9       86.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E9       7       91.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      2      3E       1       98.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3A1      58        0.0%
DATA                 0      0     3A1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Mar 20 15:39:13 2019

                    _SPI1_Exchange8bit 62C6                                      _V 0067  
     __end_of_TMR5_SetInterruptHandler 6036              __end_of_UART2_is_rx_ready 645A  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
            __end_of_UART2_is_tx_ready 644A                            __CFG_LVP$ON 000000  
                                  _H10 0100                                    _H12 015B  
                                  _H13 01B9                                    _H14 01A8  
                                  _H24 0179                                    _H17 0194  
                                  _H27 02C0                                    _H53 03C6  
                                  l194 63AE                                    l572 5C86  
                                  l717 5DF8                                    l851 62D4  
                                  l579 5BF6                                    l692 5C48  
                                  l597 5DCC                                    l699 5BB8  
                                  _GIE 01FE97                                    u980 572E  
                                  u998 5730                                    _abs 5A4E  
                                  _pad 4AE0                __size_of_PMD_Initialize 0014  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 6202                           _run_checksum 5D4E  
                   _UART1_Transmit_ISR 5DA6                          __CFG_BBEN$OFF 000000  
                        _INT1_CallBack 6224                           __CFG_ZCD$OFF 000000  
                                 l1122 5B9C                                   l1226 210C  
                                 l1252 2336                                   l1236 21BC  
                                 l1270 2572                                   l1254 233A  
                                 l1247 22CC                                   l1271 259E  
                                 l1280 25BE                                   l1353 591A  
                                 l1290 25D6                                   l1266 251C  
                                 l1258 241C                                   l1632 348E  
                                 l2602 5A8E                                   l4131 5B84  
                                 l1707 44C4                                   l1485 528A  
                                 l2624 4CF6                                   l1672 3D4A  
                                 l1841 4B3C                                   l1489 5626  
                                 l1907 2FCA                                   l1861 30B2  
                                 l6021 5BDA                                   l1686 3EC4  
                                 l2656 4AD6                                   l6033 5E20  
                                 l6019 5BD8                                   l1888 3B72  
                                 l5601 4048                                   l6219 5C5E  
                                 l6243 5C20                                   l8101 564C  
                                 l5613 40E2                                   l6421 53DC  
                                 l8103 5678                                   l5607 409C  
                                 l6087 61D8                                   l6431 53EC  
                                 l6423 53E0                                   l5625 41B4  
                                 l8201 3BA8                                   l6281 5E68  
                                 l6345 5D5C                                   l6433 5430  
                                 l6425 53E4                                   l6417 53D4  
                                 l6521 45BE                                   l5547 52B8  
                                 l6419 53D8                                   l9011 2908  
                                 l5549 52DA                                   l5661 48A2  
                                 l5653 47F6                                   l5645 476E  
                                 l8205 3BE4                                   l5813 49B4  
                                 l6437 5434                                   l6541 45FC  
                                 l6509 4576                                   l6703 5DC8  
                                 l8135 30EC                                   l8127 30A2  
                                 l8223 3D06                                   l8215 3C9E  
                                 l6447 543A                                   l9023 2976  
                                 l9015 2926                                   l6519 4598  
                                 l6607 46C6                                   l6713 6284  
                                 l8073 5552                                   l8209 3C14  
                                 l5817 49E4                                   l6449 5460  
                                 l6609 46F8                                   l8411 5B0A  
                                 l8059 4C24                                   l8083 4B34  
                                 l8139 310A                                   l8219 3CCA  
                                 l8331 395C                                   l9035 29F4  
                                 l9027 29A6                                   l9019 294A  
                                 l6571 4672                                   l6539 45E2  
                                 l6475 44E0                                   l9123 20F6  
                                 l6725 5DF4                                   l8069 5514  
                                 l8093 4BCC                                   l8085 4B46  
                                 l5589 5A7E                                   l8173 340A  
                                 l8149 331C                                   l8325 38F2  
                                 l5909 592C                                   l9037 29F8  
                                 l6557 461A                                   l9213 2308  
                                 l9125 20FE                                   l8407 5AE0  
                                 l6735 62A4                                   l8079 4B0C  
                                 l8271 2E60                                   l8255 2CE8  
                                 l8247 2C04                                   l8351 5486  
                                 l8319 3834                                   l8511 4476  
                                 l8503 443C                                   l9071 2AAA  
                                 l9047 2A1C                                   l6495 453C  
                                 l9231 2390                                   l9127 2112  
                                 l8089 4B82                                   l8169 33CE  
                                 l8185 3AF4                                   l8281 2F08  
                                 l8353 54C8                                   l8513 449E  
                                 l9073 2AB2                                   l6569 4634  
                                 l6489 451E                                   l9305 25C2  
                                 l9217 231E                                   l9233 23C2  
                                 l8291 2F60                                   l8259 2D3A  
                                 l8339 3A0A                                   l9075 2AB6  
                                 l9067 2A98                                   l9083 2AD2  
                                 l6595 46AC                                   l9307 25DA  
                                 l9171 2228                                   l9077 2ABE  
                                 l9069 2AA6                                   l9085 2B14  
                                 l9317 263C                                   l9261 2474  
                                 l8287 2F5C                                   l5983 5C16  
                                 l8375 4EEE                                   l8519 44A4  
                                 l9079 2AC4                                   l8711 35F8  
                                 l8703 35A8                                   l9239 2402  
                                 l9191 2298                                   l9167 2212  
                                 l8297 2F7C                                   l8449 5184  
                                 l5985 5C18                                   l8481 43A0  
                                 l8473 42F0                                   l9273 24DE  
                                 l8379 4F60                                   l8723 3676  
                                 l8715 3628                                   l8707 35CC  
                                 l8643 3458                                   l9259 246A  
                                 l9195 22A8                                   l5997 5E4A  
                                 l8493 43F4                                   l8485 43BA  
                                 l8725 367A                                   l8821 3E28  
                                 l8805 3DBC                                   l9277 24EE  
                                 l9189 2294                                   l8495 441C  
                                 l8735 369E                                   l8823 3E34  
                                 l8807 3DCE                                   l9287 2520  
                                 l9199 22C0                                   l8761 3734  
                                 l8673 351A                                   l8665 34EA  
                                 l8817 3E10                                   l9289 254C  
                                 l8499 4422                                   l8915 269C  
                                 l8755 371A                                   l8691 3578  
                                 l8675 3526                                   l8771 3748  
                                 l8835 3E96                                   l8827 3E5A  
                                 l9299 2576                                   l8765 3740  
                                 l8773 378A                                   l8845 3EE4  
                                 l8853 3F02                                   l8951 2780  
                                 l8935 2714                                   l8759 3730  
                                 l8695 3588                                   l8687 355A  
                                 l8863 3F34                                   l8945 2758  
                                 l8929 26E8                                   l8881 3F84  
                                 l8873 3F62                                   l8857 3F18  
                                 l8849 3EFA                                   l8971 27F6  
                                 l8963 27B4                                   l8939 2736  
                                 l8699 3598                                   l8875 3F70  
                                 l8877 3F74                                   l8797 3D8C  
                                 l8885 3F92                                   l8975 2822  
                                 l8967 27D2                                   l8879 3F7C  
                                 l8887 3FD4                                   STR_1 207A  
                                 STR_2 20A8                                   STR_3 20C0  
                                 STR_4 208B                                   l8987 28A0  
                                 l8979 2852                                   l8899 2644  
                                 STR_5 2056                                   STR_6 209A  
                                 l8989 28A4                                   STR_7 20BA  
                                 STR_8 20B4                                   l8999 28D4  
                                 STR_9 2001                                   u1005 5762  
                                 u1006 5764                                   _LATA 003FBA  
                                 u3030 4A8C                                   _LATB 003FBB  
                                 _LATC 003FBC                                   u2400 5308  
                                 _LATD 003FBD                                   _LATE 003FBE  
                                 _LATF 003FBF                                   u2510 4098  
                                 u2407 52FA                                   u2521 40A2  
                                 u2530 40DC                                   u2610 4768  
                                 u2540 410E                                   u2630 47BE  
                                 u2470 5A62                                   u2560 41EC  
                                 u2640 47F0                                   u5120 5174  
                                 u2490 4042                                   u2650 4822  
                                 u5130 42EA                                   u2580 423E  
                                 u5060 3A7E                                   u2670 48DA  
                                 u4600 4C94                                   u2690 492C  
                                 _T6PR 003F93                                   _PMD0 0039C0  
                                 u5405 36E8                                   _PMD1 0039C1  
                                 u4710 3076                                   _PMD2 0039C2  
                                 u5407 36EC                                   _PMD3 0039C3  
                                 u4800 338E                                   _PMD4 0039C4  
                                 _PMD5 0039C5                                   u4730 3088  
                                 _PMD6 0039C6                                   _PMD7 0039C7  
                                 u4580 4C18                                   u4820 33A4  
                                 u4900 3C50                                   u4750 30D8  
                                 u4760 3330                                   u4680 3004  
                                 u5385 36C8                                   u5481 3E4E  
                                 u4690 3006                                   u4930 3D2C  
                                 u4771 3360                                   u4907 3C42  
                                 u5395 36D8                                   u5387 36CC  
                                 u4780 3376                                   u4781 3374  
                                 u5397 36DC                                   u4790 338A  
                                 u5825 2A52                                   u4890 3C0A  
                                 u4970 2C54                                   u5835 2A62  
                                 u5827 2A56                                   u5940 22A2  
                                 u5845 2A72                                   u5837 2A66  
                                 u4990 2D92                                   u5847 2A76  
                                 u5980 22D8                                   u5986 22DA  
                                 _PLLR 01CEE0                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                          _INT2_CallBack 6246  
                     __end_of_ADCC_ISR 5EA6                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01C9                                   _ctoa 562E  
                                 _main 20D0                                   _dtoa 2FD4  
                                 _prec 0022                                   _nout 00FA  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 3A88  
                                 btemp 003C      __size_of_INT2_SetInterruptHandler 0028  
                                 prodl 003FF3                                   start 00AE  
                      _timer5ReloadVal 0028              __end_of_SPI1_Exchange8bit 62E4  
                        __CFG_CSWEN$ON 000000                      _UART1_rx_vect_isr 6100  
                         ___param_bank 000000             __size_of_UART1_is_rx_ready 0008  
                   ?_UART1_rx_vect_isr 005C             __size_of_UART1_is_tx_ready 0008  
                     __end_of_INT0_ISR 63E6                       __end_of_INT1_ISR 63F6  
                     __end_of_INT2_ISR 6406         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 5292          __end_of_OSCILLATOR_Initialize 63B4  
                                PRLOCK 0039EF                        __end_of___aodiv 4266  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                                _ADCLK 003EFF                        __end_of___aomod 4950  
                                _ADPCH 003EF1                                  _ADREF 003EFD  
                                STR_10 2042                                  STR_11 2018  
                                STR_12 2069                                  STR_13 20B4  
                                STR_21 20C6                                  STR_14 2018  
                                STR_23 20C9                                  STR_15 202D  
                                STR_16 20B1                                  STR_25 20C9  
                                STR_17 20CC                          __CFG_WDTE$OFF 000000  
                                STR_19 20C6                                  _ADRPT 003EEC  
                                _U1P1H 003DED                                  _U1P2H 003DEF  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T5CON 003F9A                                  _T6CON 003F94  
                       __CFG_DEBUG$OFF 000000                                  _T6HLT 003F95  
                                _U1UIR 003DF8                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 005C                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 6470  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 60D8  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 5CDA  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 636E  
                         _DMA1CON1bits 003BFD                     r_protocol@rxData_l 002D  
                                _flags 0024                                  _fputc 4BF4  
           __size_of_send_lcd_cmd_long 0028                                  _fputs 5504  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 005C  
                                _width 0020                                  _putch 6338  
             _INT1_SetInterruptHandler 605E                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 003C                                  ltemp1 0040  
                                ltemp2 0044               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  plusw2 003FDB  
                                ttemp0 003C                                  ttemp1 003F  
                                ttemp2 0042                                  ttemp3 0045  
                                ttemp5 003D                                  ttemp6 0040  
                                ttemp7 0044                         _secs_gem_state 53D2  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 5FBE  
          _UART1_SetRxInterruptHandler 5F96                                  wtemp0 003C  
                                wtemp1 003E                                  wtemp2 0040  
                                wtemp3 0042                                  wtemp4 0044  
                                wtemp5 0046                                  wtemp8 003D  
                      __end_of_sprintf 5138                        __end_of_strncmp 4AE0  
                  ??_UART1_tx_vect_isr 005C              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 6126               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 5A94                  __end_of_ringBufS_init 5F1E  
                      __initialization 4D00                      _UART2_rx_vect_isr 6150  
                         __end_of_ctoa 56B6                           __end_of_main 2640  
                         __end_of_dtoa 3454                           __end_of_stoa 3D46  
           __size_of_UART2_is_rx_ready 0008                         __CFG_SAFEN$OFF 000000  
                   ?_UART2_rx_vect_isr 005C             __size_of_UART2_is_tx_ready 0008  
             _TMR5_SetInterruptHandler 600E                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 005C              __end_of_UART1_tx_vect_isr 60FE  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 5FBE  
                     _UART1_Initialize 57EA                      _UART2_tx_vect_isr 6128  
                   _UART2_Transmit_ISR 5DD2                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 005C  
                               _MD1SRC 003CFC                 __end_of_secs_gem_state 546C  
                               _U1CON0 003DF2                                 _U1CON1 003DF3  
                               _U1CON2 003DF4                    __size_of_UART1_Read 003E  
                               _U1BRGH 003DF6                                 _U1FIFO 003DF7  
                               _U2CON0 003DDA                                 _U2CON1 003DDB  
                               _U1BRGL 003DF5                                 _U2CON2 003DDC  
                               _U2BRGH 003DDE                                 _U2FIFO 003DDF  
                               _U2BRGL 003DDD                                 _T5GATE 003F9C  
                  __size_of_UART2_Read 003E                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RA4PPS 003A04  
                               _RA5PPS 003A05                                 _RA6PPS 003A06  
                               _RC3PPS 003A13                                 _RB6PPS 003A0E  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                               i2l1139 5CD2                         __CFG_WDTCCS$SC 000000  
                               u123_48 6210                                 u125_48 6232  
                               u127_48 6254                                 _SCANPR 0039F7  
                               u338_40 6376                                 u361_48 61AA  
                               u521_48 6186                                 u338_46 6378  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               _IVTADU 00389F           __size_of_eaDogM_WriteCommand 000E  
                               _OSCFRQ 0039DF               __end_of_send_lcd_cmd_dma 59B8  
                  ??_UART2_tx_vect_isr 005C              __end_of_UART2_rx_vect_isr 6176  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 6416  
                     _UART2_Initialize 58B0                                 _WaitMs 5E52  
 __size_of_ADCC_SetADIInterruptHandler 0028                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 559C                                 _memset 379C  
                               clear_0 4DA2                                 clear_1 4DAE  
                               clear_2 4DBA                                 clear_3 4DC6  
                               clear_4 4DD2                                 _printf 584E  
                   _eaDogM_WriteString 5138                              ?_ADCC_ISR 005C  
                               _strlen 5292                     __size_of_TimerDone 0022  
                      _ADCC_Initialize 5A04                         _PMD_Initialize 63B4  
 __end_of_INT2_DefaultInterruptHandler 647C  __size_of_INT2_DefaultInterruptHandler 0002  
         _INT2_DefaultInterruptHandler 647A                           __pdataCOMRAM 005E  
            __end_of_UART2_tx_vect_isr 614E                                 lltemp0 003C  
                               lltemp1 0044                                 lltemp2 004C  
                               lltemp3 0054                           __mediumconst 0000  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 596A  
                     __end_of_vfprintf 5504                             _StartTimer 5CDA  
                      _CLC1_Initialize 61E0          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 5ADA                      _SYSTEM_Initialize 5B20  
                           __accesstop 0060                __end_of__initialization 4DE4  
                            ?_INT0_ISR 005C                              ?_INT1_ISR 005C  
                            ?_INT2_ISR 005C              __end_of_CLKREF_Initialize 6420  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 5B62                 __end_of_ringBufS_flush 562E  
                       __pcstackCOMRAM 005C                             ___inthi_sp 0D54  
                         __pidataBANK0 5786                           __pidataBANK1 4FA6  
                         __pidataBANK2 62A8                           __pidataBANK3 5D16  
                            ?_TMR5_ISR 005C                              ?_TMR6_ISR 005C  
                       ivt0x8_undefint 00AC                          __end_of_fputc 4D00  
                        __end_of_fputs 559C                  __end_of_TMR5_CallBack 61BE  
                        __end_of_putch 6352                __end_of_TMR6_Initialize 5FE6  
               __end_of_PMD_Initialize 63C8                __size_of_block_checksum 00D2  
                           ??_ADCC_ISR 005C                  __end_of_TMR6_CallBack 619A  
          __size_of_EXT_INT_Initialize 004C             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 642C       __end_of_INT2_SetInterruptHandler 605E  
             _UART2_RxInterruptHandler 0014              __end_of_SYSTEM_Initialize 5B62  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                       _DSM_Initialize 631C                             __pbssBANK0 00C4  
                           __pbssBANK1 01C9                             __pbssBANK2 0200  
                           __pbssBANK3 0300                  _INT0_InterruptHandler 001D  
                           ??_INT0_ISR 005C                             ??_INT1_ISR 005C  
                           ??_INT2_ISR 005C                      __end_of_TimerDone 61E0  
                     _DMA1_DMADCNT_ISR 6420              __size_of_UART1_put_buffer 002A  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                __end_of_wait_lcd_done 6300                        __CFG_PPS1WAY$ON 000000  
     __end_of_TMR6_SetInterruptHandler 600E                __end_of_ADCC_Initialize 5A4E  
                           ??_TMR5_ISR 005D                             ??_TMR6_ISR 005C  
                   __size_of_secs_send 0268                                _CLC1CON 003C74  
                              _CLC1POL 003C75                                _DMA1DSA 003BF0  
                              _DMA1DSZ 003BEE                                _DMA1SSA 003BF9  
                              _DMA1SSZ 003BF7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                                _MD1CARH 003CFE  
                              _MD1CARL 003CFD                      _UART1_Receive_ISR 6268  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
                              _NCO1CLK 003F3F                         ?_DMA1_DMAA_ISR 005C  
                     _DMA1_DMASCNT_ISR 6408                                _NCO1CON 003F3E  
                              _U1ERRIE 003DFA                                _U1ERRIR 003DF9  
              __end_of_CLC1_Initialize 6202                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                              _INT2PPS 003AC2                           ?_Default_ISR 005C  
                 __size_of_UART1_Write 003E              __size_of_UART2_put_buffer 002A  
           __size_of_UART2_tx_vect_isr 0026                   __size_of_UART2_Write 003E  
                              _U1RXPPS 003AE5                                _U2RXPPS 003AE8  
                              _OSCCON1 0039D9                                _OSCCON3 0039DB  
                              _IVTLOCK 003FD4                     __size_of_vfpfcnvrt 04AE  
                              _SPI1CLK 003D1C                                _SPI1RXB 003D10  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
               __end_of_DSM_Initialize 6338                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
              __end_of_TMR5_WriteTimer 5BA2                     __end_of_UART1_Read 5C9A  
                   __end_of_UART2_Read 5C5C      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000A  
                              __Hparam 0000                                __Lparam 0000  
             __end_of_UART1_Initialize 584E                        __size_of_WaitMs 002A  
                              ___aodiv 3FE6                                ___aomod 4710  
                           _m_protocol 2640              __end_of_UART1_Receive_ISR 6288  
                         __psmallconst 2000                   __end_of_init_display 4ED4  
                              __pcinit 4D00                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 63C8                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 20D0                                __ptext1 3D46  
                              __ptext2 44CE                                __ptext3 5070  
                              __ptext4 3454                                __ptext5 2640  
                              __ptext6 4266                                __ptext7 4ED4  
                              __ptext8 5DFE                                __ptext9 6442  
                    _UART2_Receive_ISR 6288                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 00A2  
                              us270999 493E                                us351999 4702  
                              us259999 4250                  _OSCILLATOR_Initialize 639E  
                         __size_of_abs 0046                                _r_block 00C4  
                              us467999 2FEE                                us484999 3A9A  
                         __size_of_pad 0114                                _mode_sw 002F  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 590E                     m_protocol@rxData_l 002E  
           __size_of_SYSTEM_Initialize 0042                                _sprintf 5070  
                              _strncmp 4950                   end_of_initialization 4DE4  
                    __end_of_secs_send 44CE               _INT2_SetInterruptHandler 6036  
             __size_of_secs_II_message 0242                             _r_protocol 3454  
  __end_of_UART1_SetTxInterruptHandler 5F96            _UART1_SetTxInterruptHandler 5F6E  
  __end_of_UART2_SetRxInterruptHandler 5F6E            _UART2_SetRxInterruptHandler 5F46  
                           _t_protocol 3D46                      __end_of_vfpfcnvrt 2FD4  
                            _SPI1TCNTL 003D12                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 646E  
            __end_of_UART2_Receive_ISR 62A8                         wdtdelay@dcount 00F0  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 005D  
                       _block_checksum 4ED4                  _INT1_InterruptHandler 001A  
                            _PORTBbits 003FCB               _TMR6_SetInterruptHandler 5FE6  
                _TMR5_InterruptHandler 00F4   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 002A    __end_of_ADCC_SetADIInterruptHandler 60D6  
          _ADCC_SetADIInterruptHandler 60AE                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 56B6  
                      _SPI1_Initialize 6388                       _UART1_put_buffer 5E28  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                    __size_of_INT2_ISR 000E                         __end_of_WaitMs 5E7C  
         __end_of_INTERRUPT_Initialize 5786                 __end_of_block_checksum 4FA6  
 __end_of_INT0_DefaultInterruptHandler 6478  __size_of_INT0_DefaultInterruptHandler 0002  
         _INT0_DefaultInterruptHandler 6476             __size_of_UART1_Receive_ISR 0020  
                        __pidataCOMRAM 647E                      __size_of_TMR5_ISR 003E  
                    __size_of_TMR6_ISR 001A            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 3A88                         __end_of_printf 58B0  
             __end_of_DMA1_DMADCNT_ISR 642A                       _UART2_put_buffer 5DFE  
                __end_of_INT0_CallBack 6224                         __end_of_strlen 5334  
                  start_initialization 4D00   __end_of_TMR5_DefaultInterruptHandler 6388  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 636E  
      __size_of_PIN_MANAGER_Initialize 009E                            __end_of_abs 5A94  
                __end_of_INT1_CallBack 6246                            __end_of_pad 4BF4  
                 __size_of_Default_ISR 0006                   __end_of_send_lcd_cmd 5EF6  
                           ivt0x8_base 0008                  __end_of_INT2_CallBack 6268  
                 secs_II_message@block 0001                          _uart1RxBuffer 0240  
                        _uart1TxBuffer 0280                          _uart2RxBuffer 0200  
             __end_of_DMA1_DMASCNT_ISR 6416                          _uart2TxBuffer 0300  
                       _DMA1_DMAOR_ISR 6438                       __CFG_LPBOREN$OFF 000000  
                __size_of_init_display 00EA            __size_of_eaDogM_WriteString 00B0  
                            _TimerDone 61BE                          _ringBufS_init 5EF6  
                          _MD1CON0bits 003CFA                            _MD1CON1bits 003CFB  
                          __pdataBANK0 0060                            __pdataBANK1 0100  
                          __pdataBANK2 02C0                            __pdataBANK3 03C6  
           __size_of_UART2_Receive_ISR 0020             __end_of_EXT_INT_Initialize 5A04  
                      run_checksum@sum 00FC        __end_of_eaDogM_WriteStringAtPos 5DA6  
              __end_of_DMA1_Initialize 5720                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 60AE                __end_of_SPI1_Initialize 639E  
             _UART1_RxInterruptHandler 000E               _UART2_TxInterruptHandler 0011  
                  __size_of_m_protocol 04E6              __size_of_ringBufS_put_dma 00AA  
                         _init_display 4DEA                 __end_of_DMA1_DMAOR_ISR 6442  
               __size_of_TMR5_CallBack 0024                  _INT2_InterruptHandler 0017  
                _TMR6_InterruptHandler 00F7                 __size_of_TMR6_CallBack 0024  
               _PIN_MANAGER_Initialize 5334                   __end_of_wait_lcd_set 6468  
                            __ptext100 6288                              __ptext101 6354  
                            __ptext110 619A                              __ptext102 6176  
                            __ptext111 636E                              __ptext103 5ADA  
                            __ptext112 0000                              __ptext104 6408  
                            __ptext105 6420                              __ptext106 642C  
                            __ptext107 6438                              __ptext108 5C9C  
                            __ptext109 5B62                     __end_of_StartTimer 5D16  
                    __size_of_wdtdelay 005C                      __size_of_vfprintf 0098  
                             _ADCC_ISR 5E7C                    __size_of_r_protocol 0348  
               __CFG_BBSIZE$BBSIZE_512 000000                            __smallconst 2000  
                             _CLC1GLS0 003C7A                               _CLC1GLS1 003C7B  
                             _CLC1GLS2 003C7C                               _CLC1GLS3 003C7D  
                             _CLC1SEL0 003C76                               _CLC1SEL1 003C77  
                             _CLC1SEL2 003C78                               _CLC1SEL3 003C79  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA1SIRQ 003BFF  
                          _NCO1CONbits 003F3E                    __size_of_t_protocol 02A0  
               __size_of_wait_lcd_done 001C                         __size_of_fputc 010C  
                       __size_of_fputs 0098                               _NCO1ACCH 003F39  
                       __size_of_putch 001A                               _NCO1ACCL 003F38  
                             _NCO1ACCU 003F3A                   _INTERRUPT_Initialize 5720  
                             _T6CLKCON 003F96                               _NCO1INCH 003F3C  
                             _NCO1INCL 003F3B                               _NCO1INCU 003F3D  
                      ?_DMA1_DMAOR_ISR 005C                               _INT0_ISR 63D8  
                             _INT1_ISR 63E8                               _INT2_ISR 63F8  
                             _LATCbits 003FBC                               _LATDbits 003FBD  
                             _LATEbits 003FBE      __size_of_INT1_SetInterruptHandler 0028  
                            _secs_send 4266                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 00DD                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR7bits 003987  
                             _IPR8bits 003988                               _PIE6bits 003996  
                             _PIE7bits 003997                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                               i2u205_48 5E92  
                            _ring_buf1 0383                              _ring_buf2 0340  
                             i2u430_48 6112                               i2u432_48 613A  
                             _PIR1bits 0039A1                               i2u434_48 6162  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             i2u428_48 60EA                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             i2u608_40 5CCA                               _PIR5bits 0039A5  
                             _PIR7bits 0039A7                               _PIR8bits 0039A8  
                             _PIR9bits 0039A9               __size_of_TMR5_Initialize 0046  
           __end_of_UART1_Transmit_ISR 5DD2                               _TMR5_ISR 5C9C  
                             _TMR6_ISR 6354                              _vfpfcnvrt 2B26  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 619A  
                            _start_lcd 6468              __size_of_send_lcd_cmd_dma 004E  
                        _TMR6_CallBack 6176               __end_of_UART1_put_buffer 5E52  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                  __end_of_UART1_Write 5C1E                    __end_of_UART2_Write 5BE0  
             __size_of_TMR6_Initialize 0028                            _INTCON0bits 003FD2  
                            copy_data0 4D14                              copy_data1 4D36  
                            copy_data2 4D58                              copy_data3 4D7A  
             _INT0_SetInterruptHandler 6086                 _uart1TxBufferRemaining 0039  
  __end_of_UART2_SetTxInterruptHandler 5F46            _UART2_SetTxInterruptHandler 5F1E  
                         _uart1RxCount 0036               __end_of_UART2_put_buffer 5E28  
                         _uart2RxCount 0030                               __Hrparam 0000  
     __size_of_eaDogM_WriteStringAtPos 002C                __CFG_RSTOSC$EXTOSC_4PLL 000000  
                 __end_of_run_checksum 5D7A                               __Lrparam 0000  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 62E4  
                         _send_lcd_cmd 5ECE                       __size_of___aodiv 0280  
                     __size_of___aomod 0240                        _NCO1_Initialize 6300  
                __end_of_DMA1_DMAA_ISR 6436   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 005C               __size_of_ADCC_Initialize 004A  
          __end_of_eaDogM_WriteCommand 63D6                               __pivt0x8 0008  
                   ??_DMA1_DMADCNT_ISR 005D                               __ptext10 5BA2  
                             __ptext11 5E28                               __ptext20 5C1E  
                             __ptext12 644A                               __ptext21 645A  
                             __ptext13 5BE0                               __ptext30 63C8  
                             __ptext22 5C5C                               __ptext14 53D2  
                             __ptext31 596A                               __ptext23 4DEA  
                             __ptext15 5D4E                               __ptext40 2B26  
                             __ptext32 6462                               __ptext24 5EA6  
                             __ptext16 5E52                               __ptext41 4950  
                             __ptext33 62E4                               __ptext25 5ECE  
                             __ptext17 61BE                               __ptext50 5504  
                             __ptext42 3A88                               __ptext34 590E  
                             __ptext26 62C6                               __ptext18 5CDA  
                             __ptext51 4BF4                               __ptext43 2FD4  
                             __ptext35 6468                               __ptext27 5EF6  
                             __ptext19 6452                               __ptext60 5F96  
                             __ptext52 6338                               __ptext44 5A4E  
                             __ptext36 559C                               __ptext28 5D7A  
                             __ptext61 5FBE                               __ptext53 51E8  
                             __ptext45 4710                               __ptext37 379C  
                             __ptext29 5138                               __ptext70 5720  
                             __ptext62 5FE6                               __ptext54 5B20  
                             __ptext46 3FE6                               __ptext38 584E  
                             __ptext71 59B8                               __ptext63 5A94  
                             __ptext55 58B0                               __ptext47 562E  
                             __ptext39 546C                               __ptext80 60AE  
                             __ptext72 6036                               __ptext64 600E  
                             __ptext56 5F1E                               __ptext48 4AE0  
                             __ptext81 63D8                               __ptext73 605E  
                             __ptext65 6388                               __ptext57 5F46  
                             __ptext49 5292                               __ptext90 6470  
                             __ptext82 6202                               __ptext74 6086  
                             __ptext66 63B4                               __ptext58 57EA  
                             __ptext91 5E7C                               __ptext83 6476  
                             __ptext75 631C                               __ptext67 5334  
                             __ptext59 5F6E                               __ptext92 647C  
                             __ptext84 63E8                               __ptext76 56B6  
                             __ptext68 639E                               __ptext93 60D8  
                             __ptext85 6224                               __ptext77 6416  
                             __ptext69 6300                               __ptext94 5DA6  
                             __ptext86 6478                               __ptext78 61E0  
                             __ptext95 6100                               __ptext87 63F8  
                             __ptext79 5A04                               __ptext96 6268  
                             __ptext88 6246                               __ptext97 6128  
                             __ptext89 647A                               __ptext98 5DD2  
                             __ptext99 6150                        _secs_II_message 44CE  
             __size_of_CLC1_Initialize 0022                       __size_of_sprintf 00C8  
                     __size_of_strncmp 0190                       _ringBufS_put_dma 51E8  
                   __end_of_m_protocol 2B26                          __size_of_ctoa 0088  
                        __size_of_main 0570                          __size_of_dtoa 0480  
                __size_of_wait_lcd_set 0006                          __size_of_stoa 02BE  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 005C  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 0008                              stoa@F1144 0060  
                   ??_DMA1_DMASCNT_ISR 005D                               _spi_link 00D1  
                             _wdtdelay 590E             __end_of_UART2_Transmit_ISR 5DFE  
                             _vfprintf 546C                    secs_gem_state@block 002A  
                    _UART1_is_rx_ready 645A                            _UART1_Write 5BE0  
 __end_of_INT1_DefaultInterruptHandler 647A  __size_of_INT1_DefaultInterruptHandler 0002  
         _INT1_DefaultInterruptHandler 6478                            _UART2_Write 5BA2  
                    _UART1_is_tx_ready 644A                        r_protocol@retry 005E  
                    t_protocol@requeue 002B                          ??_Default_ISR 005C  
                   __end_of_r_protocol 379C                            _uart1RxHead 0038  
                          _uart1TxHead 003B                            _uart2RxHead 0032  
                          _uart1RxTail 0037                            _uart2TxHead 0035  
                          _uart1TxTail 003A                            _uart2RxTail 0031  
                          _uart2TxTail 0034                           _wait_lcd_set 6462  
                   _EXT_INT_Initialize 59B8   __end_of_TMR6_DefaultInterruptHandler 5B20  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 5ADA  
                   __end_of_t_protocol 3FE6   __end_of_ADCC_DefaultInterruptHandler 647E  
__size_of_ADCC_DefaultInterruptHandler 0002           _ADCC_DefaultInterruptHandler 647C  
                             intlevel2 0000                      _send_lcd_cmd_long 5EA6  
              __size_of_secs_gem_state 009A                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 51E8                __end_of_NCO1_Initialize 631C  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF              __end_of_UART1_is_rx_ready 6462  
                           _UART1_Read 5C5C                 __size_of_INT1_CallBack 0022  
                           _UART2_Read 5C1E              __end_of_UART1_is_tx_ready 6452  
               __size_of_INT2_CallBack 0022                      _UART2_is_rx_ready 6452  
               _uart2TxBufferRemaining 0033                      _UART2_is_tx_ready 6442  
                     _send_lcd_cmd_dma 596A                  TMR5_ISR@CountCallBack 0026  
              __end_of_secs_II_message 4710       __end_of_INT1_SetInterruptHandler 6086  
            __size_of_UART1_Initialize 0064                        t_protocol@block 00E9  
                     ??_DMA1_DMAOR_ISR 005D               _UART1_TxInterruptHandler 000B  
                      t_protocol@retry 002C              __end_of_send_lcd_cmd_long 5ECE  
                  __end_of_Default_ISR 6476         __end_of_PIN_MANAGER_Initialize 53D2  
                __size_of_run_checksum 002C                _eaDogM_WriteStringAtPos 5D7A  
            __size_of_UART2_Initialize 005E  
