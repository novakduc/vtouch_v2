

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Mar 22 01:01:43 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1,inline
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=4,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=4,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=4,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=4,class=CODE,delta=1
   117                           	psect	text94,global,reloc=4,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=4,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=4,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=4,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=4,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=4,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=4,class=CODE,delta=1
   131                           	psect	text108,global,reloc=4,class=CODE,delta=1
   132                           	psect	text109,global,reloc=4,class=CODE,delta=1
   133                           	psect	text110,global,reloc=4,class=CODE,delta=1
   134                           	psect	text111,global,reloc=4,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   139                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   142                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   143  0000                     
   144                           ; Version 2.05
   145                           ; Generated 20/12/2018 GMT
   146                           ; 
   147                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   148                           ; All rights reserved.
   149                           ; 
   150                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   151                           ; 
   152                           ; Redistribution and use in source and binary forms, with or without modification, are
   153                           ; permitted provided that the following conditions are met:
   154                           ; 
   155                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   156                           ;        conditions and the following disclaimer.
   157                           ; 
   158                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   159                           ;        of conditions and the following disclaimer in the documentation and/or other
   160                           ;        materials provided with the distribution.
   161                           ; 
   162                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   163                           ;        software without specific prior written permission.
   164                           ; 
   165                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   166                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   167                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   168                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   169                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   170                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   171                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   172                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   173                           ; 
   174                           ; 
   175                           ; Code-generator required, PIC18F57K42 Definitions
   176                           ; 
   177                           ; SFR Addresses
   178  0000                     
   179 ;;_mode	offset	0
   180 ;;_rxData	offset	0
   181 ;;_t_link	offset=-1 (param)
   182 ;;_stream	offset=-6 (param)
   183 ;;_function	offset=-7 (param)
   184 ;;_s	offset=-2 (param)
   185 ;;_f	offset	0
   186 ;;_ap	offset	5
   187 ;;_s	offset=-2 (param)
   188 ;;_fmt	offset=-3 (param)
   189 ;;_rxData	offset	0
   190 ;;_r_link	offset=-1 (param)
   191 ;;_rxData	offset	0
   192 ;;_m_link	offset=-1 (param)
   193 ;;_k	offset	0
   194 ;;_checksum	offset	2
   195 ;;_i	offset	4
   196 ;;_byte_block	offset=-2 (param)
   197 ;;_length	offset=-3 (param)
   198 ;;_fake	offset=-4 (param)
   199 ;;_s_uart	offset=-5 (param)
   200 ;;_i	offset	0
   201 ;;_sum	offset	2
   202 ;;_byte_block	offset=-2 (param)
   203 ;;_byte_count	offset=-4 (param)
   204 ;;_product	offset	0
   205 ;;_multiplier	offset=-8 (param)
   206 ;;_multiplicand	offset=-16 (param)
   207 ;;_bufData	offset=-1 (param)
   208 ;;_txData	offset=-1 (param)
   209 ;;_bufData	offset=-1 (param)
   210 ;;_txData	offset=-1 (param)
   211 ;;_stream	offset=-1 (param)
   212 ;;_function	offset=-2 (param)
   213 ;;_byte_block	offset=-1 (param)
   214 ;;_clear	offset=-2 (param)
   215 ;;_numMilliseconds	offset=-2 (param)
   216 ;;_timer	offset=-1 (param)
   217 ;;_timer	offset=-1 (param)
   218 ;;_count	offset=-3 (param)
   219 ;;_readValue	offset	0
   220 ;;_readValue	offset	0
   221 ;;_cmd	offset=-1 (param)
   222 ;;_cmd	offset=-1 (param)
   223 ;;_data	offset=-1 (param)
   224 ;;__this	offset=-2 (param)
   225 ;;_r	offset=-1 (param)
   226 ;;_c	offset=-2 (param)
   227 ;;_strPtr	offset=-3 (param)
   228 ;;_strPtr	offset=-1 (param)
   229 ;;_cmd	offset=-1 (param)
   230 ;;_strPtr	offset=-1 (param)
   231 ;;_delay	offset=-4 (param)
   232 ;;__this	offset=-2 (param)
   233 ;;_clearBuffer	offset=-3 (param)
   234 ;;_s	offset	0
   235 ;;_k	offset	2
   236 ;;_dest	offset=-2 (param)
   237 ;;_c	offset=-4 (param)
   238 ;;_n	offset=-6 (param)
   239 ;;_ap	offset	0
   240 ;;_fmt	offset=-2 (param)
   241 ;;_cfmt	offset	0
   242 ;;_fp	offset=-2 (param)
   243 ;;_fmt	offset=-3 (param)
   244 ;;_ap	offset=-5 (param)
   245 ;;_ll	offset	0
   246 ;;_cp	offset	8
   247 ;;_c	offset	10
   248 ;;_fp	offset=-2 (param)
   249 ;;_fmt	offset=-4 (param)
   250 ;;_ap	offset=-6 (param)
   251 ;;_r	offset	0
   252 ;;_l	offset	1
   253 ;;__l	offset=-1 (param)
   254 ;;__r	offset=-2 (param)
   255 ;;_n	offset=-4 (param)
   256 ;;_nuls	offset	0
   257 ;;_l	offset	7
   258 ;;_p	offset	9
   259 ;;_cp	offset	11
   260 ;;_w	offset	13
   261 ;;_i	offset	15
   262 ;;_fp	offset=-2 (param)
   263 ;;_s	offset=-4 (param)
   264 ;;_dtoa$3963	offset	0
   265 ;;_n	offset	2
   266 ;;_i	offset	10
   267 ;;_s	offset	12
   268 ;;_w	offset	14
   269 ;;_p	offset	16
   270 ;;_fp	offset=-2 (param)
   271 ;;_d	offset=-10 (param)
   272 ;;_a	offset=-2 (param)
   273 ;;_sign	offset	0
   274 ;;_counter	offset	1
   275 ;;_dividend	offset=-8 (param)
   276 ;;_divisor	offset=-16 (param)
   277 ;;_quotient	offset	0
   278 ;;_sign	offset	8
   279 ;;_counter	offset	9
   280 ;;_dividend	offset=-8 (param)
   281 ;;_divisor	offset=-16 (param)
   282 ;;_w	offset	0
   283 ;;_fp	offset=-2 (param)
   284 ;;_c	offset=-3 (param)
   285 ;;_w	offset	0
   286 ;;_i	offset	2
   287 ;;_fp	offset=-2 (param)
   288 ;;_buf	offset=-4 (param)
   289 ;;_p	offset=-6 (param)
   290 ;;_a	offset	0
   291 ;;_s	offset=-2 (param)
   292 ;;_i	offset	0
   293 ;;_c	offset	2
   294 ;;_s	offset=-2 (param)
   295 ;;_fp	offset=-4 (param)
   296 ;;_c	offset=-2 (param)
   297 ;;_fp	offset=-4 (param)
   298 ;;_c	offset=-1 (param)
   299 ;;__this	offset=-2 (param)
   300 ;;_c	offset=-3 (param)
   301 ;;_InterruptHandler	offset=-3 (param)
   302 ;;_InterruptHandler	offset=-3 (param)
   303 ;;_InterruptHandler	offset=-3 (param)
   304 ;;_InterruptHandler	offset=-3 (param)
   305 ;;_InterruptHandler	offset=-3 (param)
   306 ;;_InterruptHandler	offset=-3 (param)
   307 ;;_state	offset	0
   308 ;;_InterruptHandler	offset=-3 (param)
   309 ;;_InterruptHandler	offset=-3 (param)
   310 ;;_InterruptHandler	offset=-3 (param)
   311 ;;_InterruptHandler	offset=-3 (param)
   312 ;;_i	offset	0
   313 ;;_timerVal	offset=-2 (param)
   314                           
   315                           	psect	idataCOMRAM
   316  006832                     __pidataCOMRAM:
   317                           	opt callstack 0
   318                           
   319                           ;initializer for r_protocol@retry
   320  006832  03                 	db	3
   321                           
   322                           	psect	idataBANK0
   323  005B50                     __pidataBANK0:
   324                           	opt callstack 0
   325                           
   326                           ;initializer for _V
   327  005B50  00                 	db	0
   328  005B51  00                 	db	0
   329  005B52  00                 	db	0
   330  005B53  00                 	db	0
   331  005B54  00                 	db	0
   332  005B55  00                 	db	0
   333  005B56  00                 	db	0
   334  005B57  00                 	db	0
   335  005B58  00                 	db	0
   336  005B59  00                 	db	0
   337  005B5A  00                 	db	0
   338  005B5B  00                 	db	0
   339  005B5C  00                 	db	0
   340  005B5D  00                 	db	0
   341  005B5E  00                 	db	0
   342  005B5F  00                 	db	0
   343  005B60  00                 	db	0
   344  005B61  00                 	db	0
   345  005B62  00                 	db	0
   346  005B63  00                 	db	0
   347  005B64  00                 	db	0
   348  005B65  00                 	db	0
   349  005B66  00                 	db	0
   350  005B67  00                 	db	0
   351  005B68  00                 	db	0
   352  005B69  00                 	db	0
   353  005B6A  00                 	db	0
   354  005B6B  00                 	db	0
   355  005B6C  00                 	db	0
   356  005B6D  00                 	db	0
   357  005B6E  00                 	db	0
   358  005B6F  00                 	db	0
   359  005B70  00                 	db	0
   360  005B71  00                 	db	0
   361  005B72  00                 	db	0
   362  005B73  00                 	db	0
   363  005B74  00                 	db	0
   364  005B75  00                 	db	0
   365  005B76  00                 	db	0
   366  005B77  00                 	db	0
   367  005B78  00                 	db	0
   368  005B79  00                 	db	0
   369  005B7A  00                 	db	0
   370  005B7B  00                 	db	0
   371  005B7C  00                 	db	0
   372  005B7D  00                 	db	0
   373  005B7E  00                 	db	0
   374  005B7F  00                 	db	0
   375  005B80  00                 	db	0
   376  005B81  00                 	db	0
   377  005B82  00                 	db	0
   378  005B83  00                 	db	0
   379  005B84  00                 	db	0
   380  005B85  00                 	db	0
   381  005B86  00                 	db	0
   382  005B87  00                 	db	0
   383  005B88  00                 	db	0
   384  005B89  00                 	db	0
   385  005B8A  00                 	db	0
   386  005B8B  00                 	db	0
   387  005B8C  00                 	db	0
   388  005B8D  00                 	db	0
   389  005B8E  00                 	db	0
   390  005B8F  00                 	db	0
   391  005B90  00                 	db	0
   392  005B91  00                 	db	0
   393  005B92  00                 	db	0
   394  005B93  00                 	db	0
   395  005B94  00                 	db	0
   396  005B95  00                 	db	0
   397  005B96  0000               	dw	0
   398  005B98  0000               	dw	0
   399  005B9A  0000               	dw	0
   400  005B9C  0000               	dw	0
   401  005B9E  00                 	db	0
   402  005B9F  00                 	db	0
   403  005BA0  00                 	db	0
   404  005BA1  00                 	db	0
   405  005BA2  00                 	db	0
   406  005BA3  0000               	dw	0
   407  005BA5  0000               	dw	0
   408  005BA7  0000               	dw	0
   409  005BA9  0000               	dw	0
   410  005BAB  00                 	db	0
   411  005BAC  00                 	db	0
   412  005BAD  00                 	db	0
   413  005BAE  00                 	db	0
   414  005BAF  00                 	db	0
   415  005BB0  01                 	db	1
   416  005BB1  2D                 	db	45
   417                           
   418                           	psect	idataBANK1
   419  0052E2                     __pidataBANK1:
   420                           	opt callstack 0
   421                           
   422                           ;initializer for stoa@F1144
   423  0052E2  28                 	db	40
   424  0052E3  6E                 	db	110
   425  0052E4  75                 	db	117
   426  0052E5  6C                 	db	108
   427  0052E6  6C                 	db	108
   428  0052E7  29                 	db	41
   429  0052E8  00                 	db	0
   430                           
   431                           ;initializer for _H10
   432  0052E9  0000               	dw	0
   433  0052EB  0001               	dw	1
   434  0052ED  0000               	dw	0
   435  0052EF  01                 	db	1
   436  0052F0  80                 	db	128
   437  0052F1  01                 	db	1
   438  0052F2  81                 	db	129
   439  0052F3  00                 	db	0
   440  0052F4  00                 	db	0
   441  0052F5  0A                 	db	10
   442  0052F6  0000               	dw	0
   443  0052F8  00                 	db	0
   444  0052F9  00                 	db	0
   445  0052FA  00                 	db	0
   446  0052FB  00                 	db	0
   447  0052FC  00                 	db	0
   448  0052FD  00                 	db	0
   449  0052FE  00                 	db	0
   450  0052FF  00                 	db	0
   451  005300  00                 	db	0
   452  005301  00                 	db	0
   453  005302  0A                 	db	10
   454  005303  0000               	dw	0
   455  005305  0001               	dw	1
   456  005307  0000               	dw	0
   457  005309  01                 	db	1
   458  00530A  80                 	db	128
   459  00530B  00                 	db	0
   460  00530C  01                 	db	1
   461  00530D  00                 	db	0
   462  00530E  00                 	db	0
   463  00530F  0A                 	db	10
   464  005310  0000               	dw	0
   465  005312  0001               	dw	1
   466  005314  0000               	dw	0
   467  005316  01                 	db	1
   468  005317  80                 	db	128
   469  005318  01                 	db	1
   470  005319  81                 	db	129
   471  00531A  00                 	db	0
   472  00531B  80                 	db	128
   473  00531C  0A                 	db	10
   474  00531D  0000               	dw	0
   475  00531F  0001               	dw	1
   476  005321  0000               	dw	0
   477  005323  01                 	db	1
   478  005324  80                 	db	128
   479  005325  11                 	db	17
   480  005326  82                 	db	130
   481  005327  00                 	db	0
   482  005328  00                 	db	0
   483  005329  0A                 	db	10
   484  00532A  0000               	dw	0
   485  00532C  0001               	dw	1
   486  00532E  0000               	dw	0
   487  005330  01                 	db	1
   488  005331  80                 	db	128
   489  005332  0F                 	db	15
   490  005333  81                 	db	129
   491  005334  00                 	db	0
   492  005335  00                 	db	0
   493  005336  0A                 	db	10
   494  005337  0000               	dw	0
   495  005339  0001               	dw	1
   496  00533B  0000               	dw	0
   497  00533D  01                 	db	1
   498  00533E  80                 	db	128
   499  00533F  11                 	db	17
   500  005340  81                 	db	129
   501  005341  00                 	db	0
   502  005342  00                 	db	0
   503  005343  0A                 	db	10
   504                           
   505                           ;initializer for _H12
   506  005344  0000               	dw	0
   507  005346  00                 	db	0
   508  005347  01                 	db	1
   509  005348  0001               	dw	1
   510  00534A  0000               	dw	0
   511  00534C  01                 	db	1
   512  00534D  80                 	db	128
   513  00534E  02                 	db	2
   514  00534F  01                 	db	1
   515  005350  00                 	db	0
   516  005351  00                 	db	0
   517  005352  0C                 	db	12
   518  005353  0000               	dw	0
   519  005355  00                 	db	0
   520  005356  01                 	db	1
   521  005357  0001               	dw	1
   522  005359  0000               	dw	0
   523  00535B  01                 	db	1
   524  00535C  80                 	db	128
   525  00535D  0D                 	db	13
   526  00535E  81                 	db	129
   527  00535F  00                 	db	0
   528  005360  00                 	db	0
   529  005361  0C                 	db	12
   530                           
   531                           ;initializer for _H24
   532  005362  0000               	dw	0
   533  005364  41                 	db	65
   534  005365  20                 	db	32
   535  005366  30                 	db	48
   536  005367  31                 	db	49
   537  005368  30                 	db	48
   538  005369  39                 	db	57
   539  00536A  31                 	db	49
   540  00536B  31                 	db	49
   541  00536C  30                 	db	48
   542  00536D  38                 	db	56
   543  00536E  34                 	db	52
   544  00536F  36                 	db	54
   545  005370  30                 	db	48
   546  005371  30                 	db	48
   547  005372  0001               	dw	1
   548  005374  0000               	dw	0
   549  005376  01                 	db	1
   550  005377  80                 	db	128
   551  005378  12                 	db	18
   552  005379  02                 	db	2
   553  00537A  00                 	db	0
   554  00537B  00                 	db	0
   555  00537C  18                 	db	24
   556                           
   557                           ;initializer for _H17
   558  00537D  0000               	dw	0
   559  00537F  00                 	db	0
   560  005380  01                 	db	1
   561  005381  00                 	db	0
   562  005382  01                 	db	1
   563  005383  21                 	db	33
   564  005384  02                 	db	2
   565  005385  01                 	db	1
   566  005386  0001               	dw	1
   567  005388  0000               	dw	0
   568  00538A  01                 	db	1
   569  00538B  80                 	db	128
   570  00538C  0E                 	db	14
   571  00538D  01                 	db	1
   572  00538E  00                 	db	0
   573  00538F  00                 	db	0
   574  005390  11                 	db	17
   575                           
   576                           ;initializer for _H14
   577  005391  0000               	dw	0
   578  005393  00                 	db	0
   579  005394  41                 	db	65
   580  005395  11                 	db	17
   581  005396  01                 	db	1
   582  005397  0001               	dw	1
   583  005399  0000               	dw	0
   584  00539B  01                 	db	1
   585  00539C  80                 	db	128
   586  00539D  04                 	db	4
   587  00539E  01                 	db	1
   588  00539F  00                 	db	0
   589  0053A0  00                 	db	0
   590  0053A1  0E                 	db	14
   591                           
   592                           ;initializer for _H13
   593  0053A2  0000               	dw	0
   594  0053A4  00                 	db	0
   595  0053A5  01                 	db	1
   596  0053A6  21                 	db	33
   597  0053A7  0001               	dw	1
   598  0053A9  0000               	dw	0
   599  0053AB  01                 	db	1
   600  0053AC  80                 	db	128
   601  0053AD  0C                 	db	12
   602  0053AE  06                 	db	6
   603  0053AF  00                 	db	0
   604  0053B0  00                 	db	0
   605  0053B1  0D                 	db	13
   606                           
   607                           	psect	idataBANK2
   608  00665E                     __pidataBANK2:
   609                           	opt callstack 0
   610                           
   611                           ;initializer for _H27
   612  00665E  0000               	dw	0
   613  006660  00                 	db	0
   614  006661  00                 	db	0
   615  006662  00                 	db	0
   616  006663  00                 	db	0
   617  006664  00                 	db	0
   618  006665  00                 	db	0
   619  006666  00                 	db	0
   620  006667  00                 	db	0
   621  006668  00                 	db	0
   622  006669  00                 	db	0
   623  00666A  00                 	db	0
   624  00666B  00                 	db	0
   625  00666C  00                 	db	0
   626  00666D  00                 	db	0
   627  00666E  00                 	db	0
   628  00666F  00                 	db	0
   629  006670  00                 	db	0
   630  006671  0001               	dw	1
   631  006673  0000               	dw	0
   632  006675  01                 	db	1
   633  006676  80                 	db	128
   634  006677  0D                 	db	13
   635  006678  81                 	db	129
   636  006679  00                 	db	0
   637  00667A  80                 	db	128
   638  00667B  1B                 	db	27
   639                           
   640                           	psect	idataBANK3
   641  006088                     __pidataBANK3:
   642                           	opt callstack 0
   643                           
   644                           ;initializer for _H53
   645  006088  0000               	dw	0
   646  00608A  00                 	db	0
   647  00608B  00                 	db	0
   648  00608C  00                 	db	0
   649  00608D  00                 	db	0
   650  00608E  00                 	db	0
   651  00608F  00                 	db	0
   652  006090  00                 	db	0
   653  006091  00                 	db	0
   654  006092  00                 	db	0
   655  006093  00                 	db	0
   656  006094  00                 	db	0
   657  006095  00                 	db	0
   658  006096  00                 	db	0
   659  006097  00                 	db	0
   660  006098  00                 	db	0
   661  006099  00                 	db	0
   662  00609A  00                 	db	0
   663  00609B  00                 	db	0
   664  00609C  00                 	db	0
   665  00609D  00                 	db	0
   666  00609E  00                 	db	0
   667  00609F  00                 	db	0
   668  0060A0  00                 	db	0
   669  0060A1  00                 	db	0
   670  0060A2  00                 	db	0
   671  0060A3  00                 	db	0
   672  0060A4  00                 	db	0
   673  0060A5  00                 	db	0
   674  0060A6  00                 	db	0
   675  0060A7  00                 	db	0
   676  0060A8  00                 	db	0
   677  0060A9  00                 	db	0
   678  0060AA  00                 	db	0
   679  0060AB  00                 	db	0
   680  0060AC  00                 	db	0
   681  0060AD  00                 	db	0
   682  0060AE  00                 	db	0
   683  0060AF  00                 	db	0
   684  0060B0  00                 	db	0
   685  0060B1  46                 	db	70
   686  0060B2  01                 	db	1
   687  0060B3  41                 	db	65
   688  0060B4  00                 	db	0
   689  0060B5  0001               	dw	1
   690  0060B7  0000               	dw	0
   691  0060B9  01                 	db	1
   692  0060BA  80                 	db	128
   693  0060BB  03                 	db	3
   694  0060BC  8A                 	db	138
   695  0060BD  00                 	db	0
   696  0060BE  00                 	db	0
   697  0060BF  35                 	db	53
   698  0000                     _IVTADL	set	14493
   699  0000                     _IVTADH	set	14494
   700  0000                     _IVTADU	set	14495
   701  0000                     _PIE8bits	set	14744
   702  0000                     _PIR8bits	set	14760
   703  0000                     _SCANPR	set	14839
   704  0000                     _DMA2PR	set	14836
   705  0000                     _DMA1PR	set	14835
   706  0000                     _MAINPR	set	14834
   707  0000                     _ISRPR	set	14833
   708  0000                     _PIE2bits	set	14738
   709  0000                     _PIR2bits	set	14754
   710  0000                     _PIE9bits	set	14745
   711  0000                     _PIR9bits	set	14761
   712  0000                     _PIE6bits	set	14742
   713  0000                     _PIE3bits	set	14739
   714  0000                     _PMD7	set	14791
   715  0000                     _PMD6	set	14790
   716  0000                     _PMD5	set	14789
   717  0000                     _PMD4	set	14788
   718  0000                     _PMD3	set	14787
   719  0000                     _PMD2	set	14786
   720  0000                     _PMD1	set	14785
   721  0000                     _PMD0	set	14784
   722  0000                     _OSCTUNE	set	14814
   723  0000                     _OSCFRQ	set	14815
   724  0000                     _OSCEN	set	14813
   725  0000                     _OSCCON3	set	14811
   726  0000                     _OSCCON1	set	14809
   727  0000                     _IPR8bits	set	14728
   728  0000                     _IPR9bits	set	14729
   729  0000                     _IPR7bits	set	14727
   730  0000                     _IPR5bits	set	14725
   731  0000                     _IPR1bits	set	14721
   732  0000                     _IPR3bits	set	14723
   733  0000                     _IPR6bits	set	14726
   734  0000                     _IPR2bits	set	14722
   735  0000                     _PIE7bits	set	14743
   736  0000                     _PIE5bits	set	14741
   737  0000                     _PIE1bits	set	14737
   738  0000                     _PIR7bits	set	14759
   739  0000                     _PIR5bits	set	14757
   740  0000                     _PIR1bits	set	14753
   741  0000                     _PLLR	set	118496
   742  0000                     _SPI1SDIPPS	set	15071
   743  0000                     _RC6PPS	set	14870
   744  0000                     _RC5PPS	set	14869
   745  0000                     _RA6PPS	set	14854
   746  0000                     _RA5PPS	set	14853
   747  0000                     _RA4PPS	set	14852
   748  0000                     _SPI1SCKPPS	set	15070
   749  0000                     _U1RXPPS	set	15077
   750  0000                     _INT1PPS	set	15041
   751  0000                     _INT2PPS	set	15042
   752  0000                     _INT0PPS	set	15040
   753  0000                     _RC3PPS	set	14867
   754  0000                     _RB6PPS	set	14862
   755  0000                     _U2RXPPS	set	15080
   756  0000                     _SLRCONF	set	14995
   757  0000                     _SLRCONE	set	14979
   758  0000                     _SLRCOND	set	14963
   759  0000                     _SLRCONC	set	14947
   760  0000                     _SLRCONB	set	14931
   761  0000                     _SLRCONA	set	14915
   762  0000                     _ODCOND	set	14962
   763  0000                     _ODCONC	set	14946
   764  0000                     _ODCONB	set	14930
   765  0000                     _ODCONA	set	14914
   766  0000                     _ODCONF	set	14994
   767  0000                     _ODCONE	set	14978
   768  0000                     _WPUC	set	14945
   769  0000                     _WPUA	set	14913
   770  0000                     _WPUB	set	14929
   771  0000                     _WPUE	set	14977
   772  0000                     _WPUF	set	14993
   773  0000                     _WPUD	set	14961
   774  0000                     _ANSELA	set	14912
   775  0000                     _ANSELF	set	14992
   776  0000                     _ANSELE	set	14976
   777  0000                     _ANSELB	set	14928
   778  0000                     _ANSELC	set	14944
   779  0000                     _ANSELD	set	14960
   780  0000                     _DMA1SSA	set	15353
   781  0000                     _DMA1DSZ	set	15342
   782  0000                     _DMA1SSZ	set	15351
   783  0000                     _DMA1DSA	set	15344
   784  0000                     _DMA1CON0bits	set	15356
   785  0000                     _DMA1CON1bits	set	15357
   786  0000                     _DMA1CON0	set	15356
   787  0000                     _DMA1AIRQ	set	15358
   788  0000                     _DMA1SIRQ	set	15359
   789  0000                     _DMA1CON1	set	15357
   790  0000                     _CLC1CON	set	15476
   791  0000                     _CLC1GLS3	set	15485
   792  0000                     _CLC1GLS2	set	15484
   793  0000                     _CLC1GLS1	set	15483
   794  0000                     _CLC1GLS0	set	15482
   795  0000                     _CLC1SEL3	set	15481
   796  0000                     _CLC1SEL2	set	15480
   797  0000                     _CLC1SEL1	set	15479
   798  0000                     _CLC1SEL0	set	15478
   799  0000                     _CLC1POL	set	15477
   800  0000                     _CLKRCON	set	15589
   801  0000                     _CLKRCLK	set	15590
   802  0000                     _MD1CARL	set	15613
   803  0000                     _MD1CARH	set	15614
   804  0000                     _MD1SRC	set	15612
   805  0000                     _MD1CON1bits	set	15611
   806  0000                     _MD1CON0bits	set	15610
   807  0000                     _SPI1INTFbits	set	15642
   808  0000                     _SPI1RXB	set	15632
   809  0000                     _SPI1TXB	set	15633
   810  0000                     _SPI1TCNTL	set	15634
   811  0000                     _SPI1CON0	set	15636
   812  0000                     _SPI1CLK	set	15644
   813  0000                     _SPI1BAUD	set	15641
   814  0000                     _SPI1CON2	set	15638
   815  0000                     _SPI1CON1	set	15637
   816  0000                     _U2RXB	set	15824
   817  0000                     _U2TXB	set	15826
   818  0000                     _U2ERRIE	set	15842
   819  0000                     _U2ERRIR	set	15841
   820  0000                     _U2UIR	set	15840
   821  0000                     _U2FIFO	set	15839
   822  0000                     _U2BRGH	set	15838
   823  0000                     _U2BRGL	set	15837
   824  0000                     _U2CON2	set	15836
   825  0000                     _U2CON1	set	15835
   826  0000                     _U2CON0	set	15834
   827  0000                     _U2P3L	set	15832
   828  0000                     _U2P2L	set	15830
   829  0000                     _U2P1L	set	15828
   830  0000                     _U1RXB	set	15848
   831  0000                     _U1TXB	set	15850
   832  0000                     _U1ERRIE	set	15866
   833  0000                     _U1ERRIR	set	15865
   834  0000                     _U1UIR	set	15864
   835  0000                     _U1FIFO	set	15863
   836  0000                     _U1BRGH	set	15862
   837  0000                     _U1BRGL	set	15861
   838  0000                     _U1CON2	set	15860
   839  0000                     _U1CON1	set	15859
   840  0000                     _U1CON0	set	15858
   841  0000                     _U1P3H	set	15857
   842  0000                     _U1P3L	set	15856
   843  0000                     _U1P2H	set	15855
   844  0000                     _U1P2L	set	15854
   845  0000                     _U1P1H	set	15853
   846  0000                     _U1P1L	set	15852
   847  0000                     _ADCON0	set	16120
   848  0000                     _ADCLK	set	16127
   849  0000                     _ADACT	set	16126
   850  0000                     _ADREF	set	16125
   851  0000                     _ADSTAT	set	16124
   852  0000                     _ADCON3	set	16123
   853  0000                     _ADCON2	set	16122
   854  0000                     _ADCON1	set	16121
   855  0000                     _ADPREH	set	16119
   856  0000                     _ADPREL	set	16118
   857  0000                     _ADCAP	set	16117
   858  0000                     _ADACQH	set	16116
   859  0000                     _ADACQL	set	16115
   860  0000                     _ADPCH	set	16113
   861  0000                     _ADRPT	set	16108
   862  0000                     _ADACCU	set	16106
   863  0000                     _ADSTPTH	set	16101
   864  0000                     _ADSTPTL	set	16100
   865  0000                     _ADUTHH	set	16097
   866  0000                     _ADUTHL	set	16096
   867  0000                     _ADLTHH	set	16095
   868  0000                     _ADLTHL	set	16094
   869  0000                     _NCO1CONbits	set	16190
   870  0000                     _NCO1INCL	set	16187
   871  0000                     _NCO1INCH	set	16188
   872  0000                     _NCO1INCU	set	16189
   873  0000                     _NCO1ACCL	set	16184
   874  0000                     _NCO1ACCH	set	16185
   875  0000                     _NCO1ACCU	set	16186
   876  0000                     _NCO1CLK	set	16191
   877  0000                     _NCO1CON	set	16190
   878  0000                     _LATCbits	set	16316
   879  0000                     _LATDbits	set	16317
   880  0000                     _PORTBbits	set	16331
   881  0000                     _LATEbits	set	16318
   882  0000                     _T5CONbits	set	16282
   883  0000                     _T5CON	set	16282
   884  0000                     _TMR5L	set	16280
   885  0000                     _TMR5H	set	16281
   886  0000                     _T5CLK	set	16285
   887  0000                     _T5GATE	set	16284
   888  0000                     _T5GCON	set	16283
   889  0000                     _T6CON	set	16276
   890  0000                     _T6TMR	set	16274
   891  0000                     _T6PR	set	16275
   892  0000                     _T6RST	set	16279
   893  0000                     _T6HLT	set	16277
   894  0000                     _T6CLKCON	set	16278
   895  0000                     _TRISD	set	16325
   896  0000                     _TRISC	set	16324
   897  0000                     _TRISB	set	16323
   898  0000                     _TRISA	set	16322
   899  0000                     _TRISF	set	16327
   900  0000                     _TRISE	set	16326
   901  0000                     _LATC	set	16316
   902  0000                     _LATB	set	16315
   903  0000                     _LATF	set	16319
   904  0000                     _LATA	set	16314
   905  0000                     _LATD	set	16317
   906  0000                     _LATE	set	16318
   907  0000                     _IVTLOCKbits	set	16340
   908  0000                     _IVTLOCK	set	16340
   909  0000                     _INTCON0bits	set	16338
   910  0000                     _GIE	set	130711
   911                           
   912                           	psect	smallconst
   913  002000                     __psmallconst:
   914                           	opt callstack 0
   915  002000  00                 	db	0
   916  002001                     STR_11:
   917  002001  4C                 	db	76	;'L'
   918  002002  4F                 	db	79	;'O'
   919  002003  47                 	db	71	;'G'
   920  002004  3A                 	db	58	;':'
   921  002005  20                 	db	32
   922  002006  55                 	db	85	;'U'
   923  002007  25                 	db	37
   924  002008  64                 	db	100	;'d'
   925  002009  20                 	db	32
   926  00200A  47                 	db	71	;'G'
   927  00200B  25                 	db	37
   928  00200C  64                 	db	100	;'d'
   929  00200D  20                 	db	32
   930  00200E  25                 	db	37
   931  00200F  64                 	db	100	;'d'
   932  002010  20                 	db	32
   933  002011  25                 	db	37
   934  002012  64                 	db	100	;'d'
   935  002013  20                 	db	32
   936  002014  20                 	db	32
   937  002015  20                 	db	32
   938  002016  20                 	db	32
   939  002017  20                 	db	32
   940  002018  20                 	db	32
   941  002019  23                 	db	35
   942  00201A  00                 	db	0
   943  00201B                     STR_15:
   944  00201B  52                 	db	82	;'R'
   945  00201C  25                 	db	37
   946  00201D  64                 	db	100	;'d'
   947  00201E  20                 	db	32
   948  00201F  25                 	db	37
   949  002020  64                 	db	100	;'d'
   950  002021  2C                 	db	44
   951  002022  20                 	db	32
   952  002023  54                 	db	84	;'T'
   953  002024  25                 	db	37
   954  002025  64                 	db	100	;'d'
   955  002026  20                 	db	32
   956  002027  25                 	db	37
   957  002028  64                 	db	100	;'d'
   958  002029  20                 	db	32
   959  00202A  43                 	db	67	;'C'
   960  00202B  25                 	db	37
   961  00202C  64                 	db	100	;'d'
   962  00202D  20                 	db	32
   963  00202E  20                 	db	32
   964  00202F  20                 	db	32
   965  002030  20                 	db	32
   966  002031  20                 	db	32
   967  002032  20                 	db	32
   968  002033  23                 	db	35
   969  002034  00                 	db	0
   970  002035                     STR_5:
   971  002035  48                 	db	72	;'H'
   972  002036  4F                 	db	79	;'O'
   973  002037  53                 	db	83	;'S'
   974  002038  54                 	db	84	;'T'
   975  002039  3A                 	db	58	;':'
   976  00203A  20                 	db	32
   977  00203B  25                 	db	37
   978  00203C  6C                 	db	108	;'l'
   979  00203D  64                 	db	100	;'d'
   980  00203E  20                 	db	32
   981  00203F  47                 	db	71	;'G'
   982  002040  25                 	db	37
   983  002041  64                 	db	100	;'d'
   984  002042  20                 	db	32
   985  002043  20                 	db	32
   986  002044  20                 	db	32
   987  002045  20                 	db	32
   988  002046  20                 	db	32
   989  002047  20                 	db	32
   990  002048  23                 	db	35
   991  002049  00                 	db	0
   992  00204A                     STR_12:
   993  00204A  20                 	db	32
   994  00204B  53                 	db	83	;'S'
   995  00204C  25                 	db	37
   996  00204D  64                 	db	100	;'d'
   997  00204E  46                 	db	70	;'F'
   998  00204F  25                 	db	37
   999  002050  64                 	db	100	;'d'
  1000  002051  20                 	db	32
  1001  002052  23                 	db	35
  1002  002053  25                 	db	37
  1003  002054  6C                 	db	108	;'l'
  1004  002055  64                 	db	100	;'d'
  1005  002056  20                 	db	32
  1006  002057  20                 	db	32
  1007  002058  20                 	db	32
  1008  002059  20                 	db	32
  1009  00205A  20                 	db	32
  1010  00205B  20                 	db	32
  1011  00205C  00                 	db	0
  1012  00205D                     STR_9:
  1013  00205D  45                 	db	69	;'E'
  1014  00205E  25                 	db	37
  1015  00205F  64                 	db	100	;'d'
  1016  002060  20                 	db	32
  1017  002061  41                 	db	65	;'A'
  1018  002062  25                 	db	37
  1019  002063  64                 	db	100	;'d'
  1020  002064  20                 	db	32
  1021  002065  54                 	db	84	;'T'
  1022  002066  25                 	db	37
  1023  002067  64                 	db	100	;'d'
  1024  002068  20                 	db	32
  1025  002069  43                 	db	67	;'C'
  1026  00206A  25                 	db	37
  1027  00206B  64                 	db	100	;'d'
  1028  00206C  20                 	db	32
  1029  00206D  23                 	db	35
  1030  00206E  00                 	db	0
  1031  00206F                     STR_1:
  1032  00206F  20                 	db	32
  1033  002070  52                 	db	82	;'R'
  1034  002071  56                 	db	86	;'V'
  1035  002072  49                 	db	73	;'I'
  1036  002073  20                 	db	32
  1037  002074  48                 	db	72	;'H'
  1038  002075  4F                 	db	79	;'O'
  1039  002076  53                 	db	83	;'S'
  1040  002077  54                 	db	84	;'T'
  1041  002078  20                 	db	32
  1042  002079  54                 	db	84	;'T'
  1043  00207A  45                 	db	69	;'E'
  1044  00207B  53                 	db	83	;'S'
  1045  00207C  54                 	db	84	;'T'
  1046  00207D  45                 	db	69	;'E'
  1047  00207E  52                 	db	82	;'R'
  1048  00207F  00                 	db	0
  1049  002080                     STR_4:
  1050  002080  20                 	db	32
  1051  002081  46                 	db	70	;'F'
  1052  002082  47                 	db	71	;'G'
  1053  002083  42                 	db	66	;'B'
  1054  002084  40                 	db	64	;'@'
  1055  002085  4D                 	db	77	;'M'
  1056  002086  43                 	db	67	;'C'
  1057  002087  48                 	db	72	;'H'
  1058  002088  50                 	db	80	;'P'
  1059  002089  20                 	db	32
  1060  00208A  46                 	db	70	;'F'
  1061  00208B  41                 	db	65	;'A'
  1062  00208C  42                 	db	66	;'B'
  1063  00208D  34                 	db	52	;'4'
  1064  00208E  00                 	db	0
  1065  00208F                     STR_6:
  1066  00208F  20                 	db	32
  1067  002090  53                 	db	83	;'S'
  1068  002091  25                 	db	37
  1069  002092  64                 	db	100	;'d'
  1070  002093  46                 	db	70	;'F'
  1071  002094  25                 	db	37
  1072  002095  64                 	db	100	;'d'
  1073  002096  20                 	db	32
  1074  002097  23                 	db	35
  1075  002098  20                 	db	32
  1076  002099  20                 	db	32
  1077  00209A  20                 	db	32
  1078  00209B  20                 	db	32
  1079  00209C  00                 	db	0
  1080  00209D                     STR_2:
  1081  00209D  20                 	db	32
  1082  00209E  56                 	db	86	;'V'
  1083  00209F  65                 	db	101	;'e'
  1084  0020A0  72                 	db	114	;'r'
  1085  0020A1  73                 	db	115	;'s'
  1086  0020A2  69                 	db	105	;'i'
  1087  0020A3  6F                 	db	111	;'o'
  1088  0020A4  6E                 	db	110	;'n'
  1089  0020A5  20                 	db	32
  1090  0020A6  25                 	db	37
  1091  0020A7  73                 	db	115	;'s'
  1092  0020A8  00                 	db	0
  1093  0020A9                     STR_8:
  1094  0020A9  20                 	db	32
  1095  0020AA  4F                 	db	79	;'O'
  1096  0020AB  4B                 	db	75	;'K'
  1097  0020AC  20                 	db	32
  1098  0020AD  23                 	db	35
  1099  0020AE  00                 	db	0
  1100  0020AF                     STR_7:
  1101  0020AF  20                 	db	32
  1102  0020B0  4F                 	db	79	;'O'
  1103  0020B1  4B                 	db	75	;'K'
  1104  0020B2  51                 	db	81	;'Q'
  1105  0020B3  23                 	db	35
  1106  0020B4  00                 	db	0
  1107  0020B5                     STR_3:
  1108  0020B5  30                 	db	48	;'0'
  1109  0020B6  2E                 	db	46
  1110  0020B7  38                 	db	56	;'8'
  1111  0020B8  33                 	db	51	;'3'
  1112  0020B9  42                 	db	66	;'B'
  1113  0020BA  00                 	db	0
  1114  0020BB                     STR_19:
  1115  0020BB  6C                 	db	108	;'l'
  1116  0020BC  64                 	db	100	;'d'
  1117  0020BD  00                 	db	0
  1118  0020BE                     STR_23:
  1119  0020BE  6C                 	db	108	;'l'
  1120  0020BF  69                 	db	105	;'i'
  1121  0020C0  00                 	db	0
  1122  0020C1                     STR_17:
  1123  0020C1  25                 	db	37
  1124  0020C2  63                 	db	99	;'c'
  1125  0020C3  00                 	db	0
  1126  0000                     
  1127                           ; #config settings
  1128  0020C4  00                 	db	0	; dummy byte at the end
  1129  0000                     
  1130                           	psect	cinit
  1131  00510E                     __pcinit:
  1132                           	opt callstack 0
  1133  00510E                     start_initialization:
  1134                           	opt callstack 0
  1135  00510E                     __initialization:
  1136                           	opt callstack 0
  1137                           
  1138                           ; Initialize objects allocated to BANK3 (56 bytes)
  1139                           ; load TBLPTR registers with __pidataBANK3
  1140  00510E  0E88               	movlw	low __pidataBANK3
  1141  005110  6EF6               	movwf	tblptrl,c
  1142  005112  0E60               	movlw	high __pidataBANK3
  1143  005114  6EF7               	movwf	tblptrh,c
  1144  005116  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1145  005118  6EF8               	movwf	tblptru,c
  1146  00511A  EE00  F3C6         	lfsr	0,__pdataBANK3
  1147  00511E  EE20 F038          	lfsr	2,56
  1148  005122                     copy_data0:
  1149  005122  0009               	tblrd		*+
  1150  005124  006F FFD7 FFEE     	movff	tablat,postinc0
  1151  00512A  50DD               	movf	postdec2,w,c
  1152  00512C  50D9               	movf	fsr2l,w,c
  1153  00512E  E1F9               	bnz	copy_data0
  1154                           
  1155                           ; Initialize objects allocated to BANK2 (30 bytes)
  1156                           ; load TBLPTR registers with __pidataBANK2
  1157  005130  0E5E               	movlw	low __pidataBANK2
  1158  005132  6EF6               	movwf	tblptrl,c
  1159  005134  0E66               	movlw	high __pidataBANK2
  1160  005136  6EF7               	movwf	tblptrh,c
  1161  005138  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1162  00513A  6EF8               	movwf	tblptru,c
  1163  00513C  EE00  F2C0         	lfsr	0,__pdataBANK2
  1164  005140  EE20 F01E          	lfsr	2,30
  1165  005144                     copy_data1:
  1166  005144  0009               	tblrd		*+
  1167  005146  006F FFD7 FFEE     	movff	tablat,postinc0
  1168  00514C  50DD               	movf	postdec2,w,c
  1169  00514E  50D9               	movf	fsr2l,w,c
  1170  005150  E1F9               	bnz	copy_data1
  1171                           
  1172                           ; Initialize objects allocated to BANK1 (208 bytes)
  1173                           ; load TBLPTR registers with __pidataBANK1
  1174  005152  0EE2               	movlw	low __pidataBANK1
  1175  005154  6EF6               	movwf	tblptrl,c
  1176  005156  0E52               	movlw	high __pidataBANK1
  1177  005158  6EF7               	movwf	tblptrh,c
  1178  00515A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1179  00515C  6EF8               	movwf	tblptru,c
  1180  00515E  EE00  F100         	lfsr	0,__pdataBANK1
  1181  005162  EE20 F0D0          	lfsr	2,208
  1182  005166                     copy_data2:
  1183  005166  0009               	tblrd		*+
  1184  005168  006F FFD7 FFEE     	movff	tablat,postinc0
  1185  00516E  50DD               	movf	postdec2,w,c
  1186  005170  50D9               	movf	fsr2l,w,c
  1187  005172  E1F9               	bnz	copy_data2
  1188                           
  1189                           ; Initialize objects allocated to BANK0 (98 bytes)
  1190                           ; load TBLPTR registers with __pidataBANK0
  1191  005174  0E50               	movlw	low __pidataBANK0
  1192  005176  6EF6               	movwf	tblptrl,c
  1193  005178  0E5B               	movlw	high __pidataBANK0
  1194  00517A  6EF7               	movwf	tblptrh,c
  1195  00517C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1196  00517E  6EF8               	movwf	tblptru,c
  1197  005180  EE00  F060         	lfsr	0,__pdataBANK0
  1198  005184  EE20 F062          	lfsr	2,98
  1199  005188                     copy_data3:
  1200  005188  0009               	tblrd		*+
  1201  00518A  006F FFD7 FFEE     	movff	tablat,postinc0
  1202  005190  50DD               	movf	postdec2,w,c
  1203  005192  50D9               	movf	fsr2l,w,c
  1204  005194  E1F9               	bnz	copy_data3
  1205                           
  1206                           ; Initialize objects allocated to COMRAM (1 bytes)
  1207                           ; load TBLPTR registers with __pidataCOMRAM
  1208  005196  0E32               	movlw	low __pidataCOMRAM
  1209  005198  6EF6               	movwf	tblptrl,c
  1210  00519A  0E68               	movlw	high __pidataCOMRAM
  1211  00519C  6EF7               	movwf	tblptrh,c
  1212  00519E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1213  0051A0  6EF8               	movwf	tblptru,c
  1214  0051A2  0009               	tblrd		*+	;fetch initializer
  1215  0051A4  006F FFD4  F05D    	movff	tablat,__pdataCOMRAM
  1216                           
  1217                           ; Clear objects allocated to BANK3 (198 bytes)
  1218  0051AA  EE00  F300         	lfsr	0,__pbssBANK3
  1219  0051AE  0EC6               	movlw	198
  1220  0051B0                     clear_0:
  1221  0051B0  6AEE               	clrf	postinc0,c
  1222  0051B2  06E8               	decf	wreg,f,c
  1223  0051B4  E1FD               	bnz	clear_0
  1224                           
  1225                           ; Clear objects allocated to BANK2 (192 bytes)
  1226  0051B6  EE00  F200         	lfsr	0,__pbssBANK2
  1227  0051BA  0EC0               	movlw	192
  1228  0051BC                     clear_1:
  1229  0051BC  6AEE               	clrf	postinc0,c
  1230  0051BE  06E8               	decf	wreg,f,c
  1231  0051C0  E1FD               	bnz	clear_1
  1232                           
  1233                           ; Clear objects allocated to BANK1 (45 bytes)
  1234  0051C2  EE00  F1D0         	lfsr	0,__pbssBANK1
  1235  0051C6  0E2D               	movlw	45
  1236  0051C8                     clear_2:
  1237  0051C8  6AEE               	clrf	postinc0,c
  1238  0051CA  06E8               	decf	wreg,f,c
  1239  0051CC  E1FD               	bnz	clear_2
  1240                           
  1241                           ; Clear objects allocated to BANK0 (56 bytes)
  1242  0051CE  EE00  F0C2         	lfsr	0,__pbssBANK0
  1243  0051D2  0E38               	movlw	56
  1244  0051D4                     clear_3:
  1245  0051D4  6AEE               	clrf	postinc0,c
  1246  0051D6  06E8               	decf	wreg,f,c
  1247  0051D8  E1FD               	bnz	clear_3
  1248                           
  1249                           ; Clear objects allocated to COMRAM (56 bytes)
  1250  0051DA  EE00  F001         	lfsr	0,__pbssCOMRAM
  1251  0051DE  0E38               	movlw	56
  1252  0051E0                     clear_4:
  1253  0051E0  6AEE               	clrf	postinc0,c
  1254  0051E2  06E8               	decf	wreg,f,c
  1255  0051E4  E1FD               	bnz	clear_4
  1256                           
  1257                           ;
  1258                           ; Setup IVTBASE
  1259                           ;
  1260  0051E6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1261  0051E8  6ED5               	movwf	213,c
  1262  0051EA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1263  0051EC  6ED6               	movwf	214,c
  1264  0051EE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1265  0051F0  6ED7               	movwf	215,c
  1266  0051F2                     end_of_initialization:
  1267                           	opt callstack 0
  1268  0051F2                     __end_of__initialization:
  1269                           	opt callstack 0
  1270  0051F2  0100               	movlb	0
  1271  0051F4  EF63  F010         	goto	_main	;jump to C main() function
  1272                           
  1273                           	psect	bssCOMRAM
  1274  000001                     __pbssCOMRAM:
  1275                           	opt callstack 0
  1276  000001                     secs_II_message@block:
  1277                           	opt callstack 0
  1278  000001                     	ds	7
  1279  000008                     _UART1_TxInterruptHandler:
  1280                           	opt callstack 0
  1281  000008                     	ds	3
  1282  00000B                     _UART1_RxInterruptHandler:
  1283                           	opt callstack 0
  1284  00000B                     	ds	3
  1285  00000E                     _UART2_TxInterruptHandler:
  1286                           	opt callstack 0
  1287  00000E                     	ds	3
  1288  000011                     _UART2_RxInterruptHandler:
  1289                           	opt callstack 0
  1290  000011                     	ds	3
  1291  000014                     _INT2_InterruptHandler:
  1292                           	opt callstack 0
  1293  000014                     	ds	3
  1294  000017                     _INT1_InterruptHandler:
  1295                           	opt callstack 0
  1296  000017                     	ds	3
  1297  00001A                     _INT0_InterruptHandler:
  1298                           	opt callstack 0
  1299  00001A                     	ds	3
  1300  00001D                     _width:
  1301                           	opt callstack 0
  1302  00001D                     	ds	2
  1303  00001F                     _prec:
  1304                           	opt callstack 0
  1305  00001F                     	ds	2
  1306  000021                     _flags:
  1307                           	opt callstack 0
  1308  000021                     	ds	2
  1309  000023                     TMR5_ISR@CountCallBack:
  1310                           	opt callstack 0
  1311  000023                     	ds	2
  1312  000025                     _timer5ReloadVal:
  1313                           	opt callstack 0
  1314  000025                     	ds	2
  1315  000027                     secs_gem_state@block:
  1316                           	opt callstack 0
  1317  000027                     	ds	1
  1318  000028                     t_protocol@requeue:
  1319                           	opt callstack 0
  1320  000028                     	ds	1
  1321  000029                     t_protocol@retry:
  1322                           	opt callstack 0
  1323  000029                     	ds	1
  1324  00002A                     r_protocol@rxData_l:
  1325                           	opt callstack 0
  1326  00002A                     	ds	1
  1327  00002B                     m_protocol@rxData_l:
  1328                           	opt callstack 0
  1329  00002B                     	ds	1
  1330  00002C                     _mode_sw:
  1331                           	opt callstack 0
  1332  00002C                     	ds	1
  1333  00002D                     _uart2RxCount:
  1334                           	opt callstack 0
  1335  00002D                     	ds	1
  1336  00002E                     _uart2RxTail:
  1337                           	opt callstack 0
  1338  00002E                     	ds	1
  1339  00002F                     _uart2RxHead:
  1340                           	opt callstack 0
  1341  00002F                     	ds	1
  1342  000030                     _uart2TxBufferRemaining:
  1343                           	opt callstack 0
  1344  000030                     	ds	1
  1345  000031                     _uart2TxTail:
  1346                           	opt callstack 0
  1347  000031                     	ds	1
  1348  000032                     _uart2TxHead:
  1349                           	opt callstack 0
  1350  000032                     	ds	1
  1351  000033                     _uart1RxCount:
  1352                           	opt callstack 0
  1353  000033                     	ds	1
  1354  000034                     _uart1RxTail:
  1355                           	opt callstack 0
  1356  000034                     	ds	1
  1357  000035                     _uart1RxHead:
  1358                           	opt callstack 0
  1359  000035                     	ds	1
  1360  000036                     _uart1TxBufferRemaining:
  1361                           	opt callstack 0
  1362  000036                     	ds	1
  1363  000037                     _uart1TxTail:
  1364                           	opt callstack 0
  1365  000037                     	ds	1
  1366  000038                     _uart1TxHead:
  1367                           	opt callstack 0
  1368  000038                     	ds	1
  1369                           
  1370                           	psect	dataCOMRAM
  1371  00005D                     __pdataCOMRAM:
  1372                           	opt callstack 0
  1373  00005D                     r_protocol@retry:
  1374                           	opt callstack 0
  1375  00005D                     	ds	1
  1376                           
  1377                           	psect	bssBANK0
  1378  0000C2                     __pbssBANK0:
  1379                           	opt callstack 0
  1380  0000C2                     _spi_link:
  1381                           	opt callstack 0
  1382  0000C2                     	ds	12
  1383  0000CE                     _tickCount:
  1384                           	opt callstack 0
  1385  0000CE                     	ds	12
  1386  0000DA                     t_protocol@block:
  1387                           	opt callstack 0
  1388  0000DA                     	ds	7
  1389  0000E1                     wdtdelay@dcount:
  1390                           	opt callstack 0
  1391  0000E1                     	ds	4
  1392  0000E5                     _TMR5_InterruptHandler:
  1393                           	opt callstack 0
  1394  0000E5                     	ds	3
  1395  0000E8                     _TMR6_InterruptHandler:
  1396                           	opt callstack 0
  1397  0000E8                     	ds	3
  1398  0000EB                     _ADCC_ADI_InterruptHandler:
  1399                           	opt callstack 0
  1400  0000EB                     	ds	3
  1401  0000EE                     _nout:
  1402                           	opt callstack 0
  1403  0000EE                     	ds	2
  1404  0000F0                     run_checksum@sum:
  1405                           	opt callstack 0
  1406  0000F0                     	ds	2
  1407  0000F2                     _seed:
  1408                           	opt callstack 0
  1409  0000F2                     	ds	8
  1410                           
  1411                           	psect	dataBANK0
  1412  000060                     __pdataBANK0:
  1413                           	opt callstack 0
  1414  000060                     _V:
  1415                           	opt callstack 0
  1416  000060                     	ds	98
  1417                           
  1418                           	psect	bssBANK1
  1419  0001D0                     __pbssBANK1:
  1420                           	opt callstack 0
  1421  0001D0                     _r_block:
  1422                           	opt callstack 0
  1423  0001D0                     	ds	13
  1424  0001DD                     _dbuf:
  1425                           	opt callstack 0
  1426  0001DD                     	ds	32
  1427                           
  1428                           	psect	dataBANK1
  1429  000100                     __pdataBANK1:
  1430                           	opt callstack 0
  1431  000100                     stoa@F1144:
  1432                           	opt callstack 0
  1433  000100                     	ds	7
  1434  000107                     _H10:
  1435                           	opt callstack 0
  1436  000107                     	ds	91
  1437  000162                     _H12:
  1438                           	opt callstack 0
  1439  000162                     	ds	30
  1440  000180                     _H24:
  1441                           	opt callstack 0
  1442  000180                     	ds	27
  1443  00019B                     _H17:
  1444                           	opt callstack 0
  1445  00019B                     	ds	20
  1446  0001AF                     _H14:
  1447                           	opt callstack 0
  1448  0001AF                     	ds	17
  1449  0001C0                     _H13:
  1450                           	opt callstack 0
  1451  0001C0                     	ds	16
  1452                           
  1453                           	psect	bssBANK2
  1454  000200                     __pbssBANK2:
  1455                           	opt callstack 0
  1456  000200                     _uart2RxBuffer:
  1457                           	opt callstack 0
  1458  000200                     	ds	64
  1459  000240                     _uart1RxBuffer:
  1460                           	opt callstack 0
  1461  000240                     	ds	64
  1462  000280                     _uart1TxBuffer:
  1463                           	opt callstack 0
  1464  000280                     	ds	64
  1465                           
  1466                           	psect	dataBANK2
  1467  0002C0                     __pdataBANK2:
  1468                           	opt callstack 0
  1469  0002C0                     _H27:
  1470                           	opt callstack 0
  1471  0002C0                     	ds	30
  1472                           
  1473                           	psect	bssBANK3
  1474  000300                     __pbssBANK3:
  1475                           	opt callstack 0
  1476  000300                     _uart2TxBuffer:
  1477                           	opt callstack 0
  1478  000300                     	ds	64
  1479  000340                     _ring_buf2:
  1480                           	opt callstack 0
  1481  000340                     	ds	67
  1482  000383                     _ring_buf1:
  1483                           	opt callstack 0
  1484  000383                     	ds	67
  1485                           
  1486                           	psect	dataBANK3
  1487  0003C6                     __pdataBANK3:
  1488                           	opt callstack 0
  1489  0003C6                     _H53:
  1490                           	opt callstack 0
  1491  0003C6                     	ds	56
  1492                           
  1493                           	psect	cstackCOMRAM
  1494  000059                     __pcstackCOMRAM:
  1495                           	opt callstack 0
  1496  000059                     ??_TMR6_ISR:
  1497  000059                     
  1498                           ; 1 bytes @ 0x0
  1499  000059                     	ds	1
  1500  00005A                     ??_TMR5_ISR:
  1501                           
  1502                           ; 1 bytes @ 0x1
  1503  00005A                     	ds	3
  1504                           
  1505 ;;
  1506 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1507 ;;
  1508 ;; *************** function _main *****************
  1509 ;; Defined at:
  1510 ;;		line 313 in file "main.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  mode            1  [STACK] enum E16897
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1  [STACK] void 
  1517 ;; Registers used:
  1518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 4/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1528 ;;Total ram usage:        0 bytes
  1529 ;; Hardware stack levels required when called:   14
  1530 ;; This function calls:
  1531 ;;		_SYSTEM_Initialize
  1532 ;;		_UART1_put_buffer
  1533 ;;		_UART2_put_buffer
  1534 ;;		_WaitMs
  1535 ;;		_eaDogM_WriteCommand
  1536 ;;		_eaDogM_WriteStringAtPos
  1537 ;;		_init_display
  1538 ;;		_m_protocol
  1539 ;;		_r_protocol
  1540 ;;		_sprintf
  1541 ;;		_srand
  1542 ;;		_t_protocol
  1543 ;;		_wait_lcd_done
  1544 ;; This function is called by:
  1545 ;;		Startup code after reset
  1546 ;; This function uses a reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text0
  1550  0020C6                     __ptext0:
  1551                           	opt callstack 0
  1552  0020C6                     _main:
  1553                           	opt callstack 0
  1554                           
  1555                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1556  0020C6  52E6               	movf	postinc1,f,c
  1557                           
  1558                           ;main.c: 315:  UI_STATES mode;;main.c: 318:  SYSTEM_Initialize();
  1559                           
  1560                           ;incstack = 0
  1561  0020C8  EC69  F02F         	call	_SYSTEM_Initialize	;wreg free
  1562                           
  1563                           ; BSR set to: 60
  1564                           ;main.c: 321:  (INTCON0bits.GIEH = 1);
  1565  0020CC  8ED2               	bsf	16338,7,c	;volatile
  1566                           
  1567                           ; BSR set to: 60
  1568                           ;main.c: 324:  (INTCON0bits.GIEL = 1);
  1569  0020CE  8CD2               	bsf	16338,6,c	;volatile
  1570                           
  1571                           ; BSR set to: 60
  1572                           ;main.c: 326:  V.ui_state = UI_STATE_INIT;
  1573  0020D0  0100               	movlb	0	; () banked
  1574  0020D2  6B61               	clrf	(_V+1)& (0+255),b	;volatile
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;main.c: 331:  WaitMs(300);
  1578  0020D4  0E2C               	movlw	44
  1579  0020D6  6EE6               	movwf	postinc1,c
  1580  0020D8  0E01               	movlw	1
  1581  0020DA  6EE6               	movwf	postinc1,c
  1582  0020DC  EC60  F030         	call	_WaitMs	;wreg free
  1583                           
  1584                           ;main.c: 332:  if (PORTBbits.RB0) {
  1585  0020E0  A0CB               	btfss	16331,0,c	;volatile
  1586  0020E2  D004               	goto	l9507
  1587                           
  1588                           ;main.c: 333:   mode = UI_STATE_HOST;
  1589                           ;stkvar	_mode @ sp[(-1)+0]
  1590  0020E4  0EFF               	movlw	-1
  1591  0020E6  6AE3               	clrf	plusw1,c
  1592  0020E8  2AE3               	incf	plusw1,f,c
  1593                           
  1594                           ;main.c: 334:  } else {
  1595  0020EA  D004               	goto	l9509
  1596  0020EC                     l9507:
  1597                           
  1598                           ;main.c: 335:   mode = UI_STATE_LOG;
  1599                           ;stkvar	_mode @ sp[(-1)+0]
  1600  0020EC  0EFF               	movlw	-1
  1601  0020EE  6AE3               	clrf	plusw1,c
  1602  0020F0  80E3               	bsf	plusw1,0,c
  1603  0020F2  82E3               	bsf	plusw1,1,c	;indir
  1604  0020F4                     l9509:
  1605                           
  1606                           ;main.c: 338:  if (mode == UI_STATE_HOST) {
  1607                           ;stkvar	_mode @ sp[(-1)+0]
  1608  0020F4  0EFF               	movlw	-1
  1609  0020F6  04E3               	decf	plusw1,w,c
  1610  0020F8  A4D8               	btfss	status,2,c
  1611  0020FA  D003               	goto	l1230
  1612                           
  1613                           ;main.c: 339:   do { LATDbits.LATD0 = 1; } while(0);
  1614  0020FC  80BD               	bsf	16317,0,c	;volatile
  1615                           
  1616                           ;main.c: 340:   do { LATDbits.LATD1 = 1; } while(0);
  1617  0020FE  82BD               	bsf	16317,1,c	;volatile
  1618  002100  D252               	goto	l9685
  1619  002102                     l1230:
  1620  002102  90BD               	bcf	16317,0,c	;volatile
  1621                           
  1622                           ;main.c: 343:   do { LATDbits.LATD1 = 0; } while(0);
  1623  002104  92BD               	bcf	16317,1,c	;volatile
  1624  002106  D24F               	goto	l9685
  1625  002108                     l9511:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;main.c: 349:    init_display();
  1629  002108  ECFC  F028         	call	_init_display	;wreg free
  1630                           
  1631                           ; BSR set to: 61
  1632                           ;main.c: 350:    eaDogM_WriteCommand(0b00001100);
  1633  00210C  0E0C               	movlw	12
  1634  00210E  6EE6               	movwf	postinc1,c
  1635  002110  ECBE  F033         	call	_eaDogM_WriteCommand	;wreg free
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;main.c: 352:    V.ui_state = mode;
  1639                           ;stkvar	_mode @ sp[(-1)+0]
  1640  002114  0EFF               	movlw	-1
  1641  002116  006F FF8C  F061    	movff	plusw1,_V+1	;volatile
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;main.c: 353:    V.s_state = SEQ_STATE_INIT;
  1645  00211C  6B60               	clrf	_V& (0+255),b	;volatile
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;main.c: 354:    srand(1957);
  1649  00211E  0EA5               	movlw	165
  1650  002120  6EE6               	movwf	postinc1,c
  1651  002122  0E07               	movlw	7
  1652  002124  6EE6               	movwf	postinc1,c
  1653  002126  EC7B  F030         	call	_srand	;wreg free
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;main.c: 355:    sprintf(V.buf, " RVI HOST TESTER");
  1657  00212A  0E6F               	movlw	STR_1& (0+255)
  1658  00212C  6EE6               	movwf	postinc1,c
  1659  00212E  0E60               	movlw	_V& (0+255)
  1660  002130  0F06               	addlw	6
  1661  002132  6EE6               	movwf	postinc1,c
  1662  002134  0E02               	movlw	2
  1663  002136  6EE6               	movwf	postinc1,c
  1664  002138  EC40  F02A         	call	_sprintf	;wreg free
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;main.c: 356:    wait_lcd_done();
  1668  00213C  EC4D  F033         	call	_wait_lcd_done	;wreg free
  1669                           
  1670                           ; BSR set to: 0
  1671                           ;main.c: 357:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1672  002140  0E60               	movlw	_V& (0+255)
  1673  002142  0F06               	addlw	6
  1674  002144  6EE6               	movwf	postinc1,c
  1675  002146  0E00               	movlw	0
  1676  002148  6EE6               	movwf	postinc1,c
  1677  00214A  0E00               	movlw	0
  1678  00214C  6EE6               	movwf	postinc1,c
  1679  00214E  ECAB  F030         	call	_eaDogM_WriteStringAtPos	;wreg free
  1680                           
  1681                           ; BSR set to: 59
  1682                           ;main.c: 358:    sprintf(V.buf, " Version %s", "0.83B");
  1683  002152  0EB5               	movlw	STR_3& (0+255)
  1684  002154  6E44               	movwf	btemp+11,c
  1685  002156  0060  F113  FFE6   	movff	btemp+11,postinc1
  1686  00215C  0E20               	movlw	high __smallconst
  1687  00215E  6EE6               	movwf	postinc1,c
  1688  002160  0E9D               	movlw	STR_2& (0+255)
  1689  002162  6EE6               	movwf	postinc1,c
  1690  002164  0E60               	movlw	_V& (0+255)
  1691  002166  0F06               	addlw	6
  1692  002168  6EE6               	movwf	postinc1,c
  1693  00216A  0E04               	movlw	4
  1694  00216C  6EE6               	movwf	postinc1,c
  1695  00216E  EC40  F02A         	call	_sprintf	;wreg free
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;main.c: 359:    wait_lcd_done();
  1699  002172  EC4D  F033         	call	_wait_lcd_done	;wreg free
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;main.c: 360:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1703  002176  0E60               	movlw	_V& (0+255)
  1704  002178  0F06               	addlw	6
  1705  00217A  6EE6               	movwf	postinc1,c
  1706  00217C  0E00               	movlw	0
  1707  00217E  6EE6               	movwf	postinc1,c
  1708  002180  0E01               	movlw	1
  1709  002182  6EE6               	movwf	postinc1,c
  1710  002184  ECAB  F030         	call	_eaDogM_WriteStringAtPos	;wreg free
  1711                           
  1712                           ; BSR set to: 59
  1713                           ;main.c: 361:    sprintf(V.buf, " FGB@MCHP FAB4");
  1714  002188  0E80               	movlw	STR_4& (0+255)
  1715  00218A  6EE6               	movwf	postinc1,c
  1716  00218C  0E60               	movlw	_V& (0+255)
  1717  00218E  0F06               	addlw	6
  1718  002190  6EE6               	movwf	postinc1,c
  1719  002192  0E02               	movlw	2
  1720  002194  6EE6               	movwf	postinc1,c
  1721  002196  EC40  F02A         	call	_sprintf	;wreg free
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;main.c: 362:    wait_lcd_done();
  1725  00219A  EC4D  F033         	call	_wait_lcd_done	;wreg free
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;main.c: 363:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1729  00219E  0E60               	movlw	_V& (0+255)
  1730  0021A0  0F06               	addlw	6
  1731  0021A2  6EE6               	movwf	postinc1,c
  1732  0021A4  0E00               	movlw	0
  1733  0021A6  6EE6               	movwf	postinc1,c
  1734  0021A8  0E02               	movlw	2
  1735  0021AA  6EE6               	movwf	postinc1,c
  1736  0021AC  ECAB  F030         	call	_eaDogM_WriteStringAtPos	;wreg free
  1737                           
  1738                           ; BSR set to: 59
  1739                           ;main.c: 364:    WaitMs(3000);
  1740  0021B0  0EB8               	movlw	184
  1741  0021B2  6EE6               	movwf	postinc1,c
  1742  0021B4  0E0B               	movlw	11
  1743  0021B6  6EE6               	movwf	postinc1,c
  1744  0021B8  EC60  F030         	call	_WaitMs	;wreg free
  1745                           
  1746                           ;main.c: 365:    break;
  1747  0021BC  D208               	goto	l1273
  1748  0021BE                     l1240:
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;main.c: 369:     V.r_l_state = LINK_STATE_IDLE;
  1752  0021BE  6B64               	clrf	(_V+4)& (0+255),b	;volatile
  1753                           
  1754                           ;main.c: 370:     V.t_l_state = LINK_STATE_IDLE;
  1755  0021C0  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;main.c: 371:     V.s_state = SEQ_STATE_RX;
  1759  0021C2  0E01               	movlw	1
  1760  0021C4  6F60               	movwf	_V& (0+255),b	;volatile
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;main.c: 372:     if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  1764  0021C6  0E0A               	movlw	10
  1765  0021C8  19B0               	xorwf	(_V+80)& (0+255),w,b	;volatile
  1766  0021CA  A4D8               	btfss	status,2,c
  1767  0021CC  D029               	goto	l9555
  1768                           
  1769                           ; BSR set to: 0
  1770  0021CE  0E0A               	movlw	10
  1771  0021D0  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  1772  0021D2  A4D8               	btfss	status,2,c
  1773  0021D4  D025               	goto	l9555
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;main.c: 373:      sprintf(V.buf, "HOST: %ld G%d      #", V.ticks, V.g_state);
  1777  0021D6  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  1778  0021D8  6EE6               	movwf	postinc1,c
  1779  0021DA  0E00               	movlw	0
  1780  0021DC  6EE6               	movwf	postinc1,c
  1781  0021DE  0060  F29B  FFE6   	movff	_V+70,postinc1
  1782  0021E4  0060  F29F  FFE6   	movff	_V+71,postinc1
  1783  0021EA  0060  F2A3  FFE6   	movff	_V+72,postinc1
  1784  0021F0  0060  F2A7  FFE6   	movff	_V+73,postinc1
  1785  0021F6  0E35               	movlw	STR_5& (0+255)
  1786  0021F8  6EE6               	movwf	postinc1,c
  1787  0021FA  0E60               	movlw	_V& (0+255)
  1788  0021FC  0F06               	addlw	6
  1789  0021FE  6EE6               	movwf	postinc1,c
  1790  002200  0E08               	movlw	8
  1791  002202  6EE6               	movwf	postinc1,c
  1792  002204  EC40  F02A         	call	_sprintf	;wreg free
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;main.c: 374:      V.buf[16] = 0;
  1796  002208  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;main.c: 375:      wait_lcd_done();
  1800  00220A  EC4D  F033         	call	_wait_lcd_done	;wreg free
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;main.c: 376:      eaDogM_WriteStringAtPos(2, 0, V.buf);
  1804  00220E  0E60               	movlw	_V& (0+255)
  1805  002210  0F06               	addlw	6
  1806  002212  6EE6               	movwf	postinc1,c
  1807  002214  0E00               	movlw	0
  1808  002216  6EE6               	movwf	postinc1,c
  1809  002218  0E02               	movlw	2
  1810  00221A  6EE6               	movwf	postinc1,c
  1811  00221C  ECAB  F030         	call	_eaDogM_WriteStringAtPos	;wreg free
  1812  002220                     l9555:
  1813                           
  1814                           ;main.c: 379:     WaitMs(50);
  1815  002220  0E32               	movlw	50
  1816  002222  6EE6               	movwf	postinc1,c
  1817  002224  0E00               	movlw	0
  1818  002226  6EE6               	movwf	postinc1,c
  1819  002228  EC60  F030         	call	_WaitMs	;wreg free
  1820                           
  1821                           ;main.c: 380:     UART1_put_buffer(0x05);
  1822  00222C  0E05               	movlw	5
  1823  00222E  6EE6               	movwf	postinc1,c
  1824  002230  EC19  F031         	call	_UART1_put_buffer	;wreg free
  1825                           
  1826                           ;main.c: 382:     break;
  1827  002234  D0C3               	goto	l9619
  1828  002236                     l9559:
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;main.c: 387:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1832  002236  0E60               	movlw	_V& (0+255)
  1833  002238  0F04               	addlw	4
  1834  00223A  6EE6               	movwf	postinc1,c
  1835  00223C  EC5E  F01A         	call	_r_protocol	;wreg free
  1836  002240  0E04               	movlw	4
  1837  002242  1839               	xorwf	btemp,w,c
  1838  002244  A4D8               	btfss	status,2,c
  1839  002246  D02F               	goto	l9579
  1840                           
  1841                           ;main.c: 388:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1842  002248  0100               	movlb	0	; () banked
  1843  00224A  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  1844  00224C  6EE6               	movwf	postinc1,c
  1845  00224E  0E00               	movlw	0
  1846  002250  6EE6               	movwf	postinc1,c
  1847  002252  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  1848  002254  6EE6               	movwf	postinc1,c
  1849  002256  0E00               	movlw	0
  1850  002258  6EE6               	movwf	postinc1,c
  1851  00225A  0E8F               	movlw	STR_6& (0+255)
  1852  00225C  6EE6               	movwf	postinc1,c
  1853  00225E  0E60               	movlw	_V& (0+255)
  1854  002260  0F06               	addlw	6
  1855  002262  6EE6               	movwf	postinc1,c
  1856  002264  0E06               	movlw	6
  1857  002266  6EE6               	movwf	postinc1,c
  1858  002268  EC40  F02A         	call	_sprintf	;wreg free
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;main.c: 389:      V.buf[11] = 0;
  1862  00226C  6B71               	clrf	(_V+17)& (0+255),b	;volatile
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;main.c: 390:      wait_lcd_done();
  1866  00226E  EC4D  F033         	call	_wait_lcd_done	;wreg free
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;main.c: 391:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1870  002272  0E60               	movlw	_V& (0+255)
  1871  002274  0F06               	addlw	6
  1872  002276  6EE6               	movwf	postinc1,c
  1873  002278  0E00               	movlw	0
  1874  00227A  6EE6               	movwf	postinc1,c
  1875  00227C  0E00               	movlw	0
  1876  00227E  6EE6               	movwf	postinc1,c
  1877  002280  ECAB  F030         	call	_eaDogM_WriteStringAtPos	;wreg free
  1878                           
  1879                           ; BSR set to: 59
  1880                           ;main.c: 393:      WaitMs(5);
  1881  002284  0E05               	movlw	5
  1882  002286  6EE6               	movwf	postinc1,c
  1883  002288  0E00               	movlw	0
  1884  00228A  6EE6               	movwf	postinc1,c
  1885  00228C  EC60  F030         	call	_WaitMs	;wreg free
  1886                           
  1887                           ;main.c: 395:      if (V.wbit) {
  1888  002290  0100               	movlb	0	; () banked
  1889  002292  A3BB               	btfss	(_V+91)& (0+255),1,b	;volatile
  1890  002294  D006               	goto	l9577
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;main.c: 396:       V.s_state = SEQ_STATE_TX;
  1894  002296  0E02               	movlw	2
  1895  002298  6F60               	movwf	_V& (0+255),b	;volatile
  1896                           
  1897                           ;main.c: 397:       V.failed_send = 0;
  1898  00229A  0E87               	movlw	-121
  1899  00229C  17BB               	andwf	(_V+91)& (0+255),f,b	;volatile
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;main.c: 398:       V.t_l_state = LINK_STATE_IDLE;
  1903  00229E  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  1904                           
  1905                           ;main.c: 399:      } else {
  1906  0022A0  D002               	goto	l9579
  1907  0022A2                     l9577:
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;main.c: 400:       V.s_state = SEQ_STATE_TRIGGER;
  1911  0022A2  0E03               	movlw	3
  1912  0022A4  6F60               	movwf	_V& (0+255),b	;volatile
  1913  0022A6                     l9579:
  1914                           
  1915                           ;main.c: 403:     if (V.r_l_state == LINK_STATE_ERROR)
  1916  0022A6  0E06               	movlw	6
  1917  0022A8  0100               	movlb	0	; () banked
  1918  0022AA  1964               	xorwf	(_V+4)& (0+255),w,b	;volatile
  1919  0022AC  D00F               	goto	L28
  1920  0022AE                     l9583:
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;main.c: 410:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1924  0022AE  0E60               	movlw	_V& (0+255)
  1925  0022B0  0F05               	addlw	5
  1926  0022B2  6EE6               	movwf	postinc1,c
  1927  0022B4  EC79  F01D         	call	_t_protocol	;wreg free
  1928  0022B8  0E04               	movlw	4
  1929  0022BA  1839               	xorwf	btemp,w,c
  1930  0022BC  A4D8               	btfss	status,2,c
  1931  0022BE  D003               	goto	l9587
  1932                           
  1933                           ;main.c: 411:      V.s_state = SEQ_STATE_TRIGGER;
  1934  0022C0  0E03               	movlw	3
  1935  0022C2  0100               	movlb	0	; () banked
  1936  0022C4  6F60               	movwf	_V& (0+255),b	;volatile
  1937  0022C6                     l9587:
  1938                           
  1939                           ;main.c: 413:     if (V.t_l_state == LINK_STATE_ERROR)
  1940  0022C6  0E06               	movlw	6
  1941  0022C8  0100               	movlb	0	; () banked
  1942  0022CA  1965               	xorwf	(_V+5)& (0+255),w,b	;volatile
  1943  0022CC                     L28:
  1944  0022CC  A4D8               	btfss	status,2,c
  1945  0022CE  D076               	goto	l9619
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;main.c: 414:      V.s_state = SEQ_STATE_ERROR;
  1949  0022D0  0E06               	movlw	6
  1950  0022D2  6F60               	movwf	_V& (0+255),b	;volatile
  1951  0022D4  D073               	goto	l9619
  1952  0022D6                     l1251:
  1953                           
  1954                           ; BSR set to: 0
  1955                           ;main.c: 417:     if (V.queue) {
  1956  0022D6  A9BC               	btfss	(_V+92)& (0+255),4,b	;volatile
  1957  0022D8  D00E               	goto	l9597
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;main.c: 418:      V.r_l_state = LINK_STATE_IDLE;
  1961  0022DA  6B64               	clrf	(_V+4)& (0+255),b	;volatile
  1962                           
  1963                           ;main.c: 419:      V.t_l_state = LINK_STATE_IDLE;
  1964  0022DC  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;main.c: 420:      V.s_state = SEQ_STATE_TX;
  1968  0022DE  0E02               	movlw	2
  1969  0022E0  6F60               	movwf	_V& (0+255),b	;volatile
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;main.c: 421:      sprintf(V.buf, " OKQ#");
  1973  0022E2  0EAF               	movlw	STR_7& (0+255)
  1974  0022E4  6EE6               	movwf	postinc1,c
  1975  0022E6  0E60               	movlw	_V& (0+255)
  1976  0022E8  0F06               	addlw	6
  1977  0022EA  6EE6               	movwf	postinc1,c
  1978  0022EC  0E02               	movlw	2
  1979  0022EE  6EE6               	movwf	postinc1,c
  1980  0022F0  EC40  F02A         	call	_sprintf	;wreg free
  1981                           
  1982                           ;main.c: 422:     } else {
  1983  0022F4  D00B               	goto	l9601
  1984  0022F6                     l9597:
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;main.c: 423:      V.s_state = SEQ_STATE_DONE;
  1988  0022F6  0E05               	movlw	5
  1989  0022F8  6F60               	movwf	_V& (0+255),b	;volatile
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;main.c: 424:      sprintf(V.buf, " OK #");
  1993  0022FA  0EA9               	movlw	STR_8& (0+255)
  1994  0022FC  6EE6               	movwf	postinc1,c
  1995  0022FE  0E60               	movlw	_V& (0+255)
  1996  002300  0F06               	addlw	6
  1997  002302  6EE6               	movwf	postinc1,c
  1998  002304  0E02               	movlw	2
  1999  002306  6EE6               	movwf	postinc1,c
  2000  002308  EC40  F02A         	call	_sprintf	;wreg free
  2001  00230C                     l9601:
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;main.c: 426:     wait_lcd_done();
  2005  00230C  EC4D  F033         	call	_wait_lcd_done	;wreg free
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;main.c: 427:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  2009  002310  0E60               	movlw	_V& (0+255)
  2010  002312  0F06               	addlw	6
  2011  002314  6EE6               	movwf	postinc1,c
  2012  002316  0E0B               	movlw	11
  2013  002318  6EE6               	movwf	postinc1,c
  2014  00231A  0E00               	movlw	0
  2015  00231C  6EE6               	movwf	postinc1,c
  2016  00231E  ECAB  F030         	call	_eaDogM_WriteStringAtPos	;wreg free
  2017                           
  2018                           ;main.c: 428:     break;
  2019  002322  D04C               	goto	l9619
  2020  002324                     l1254:
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;main.c: 430:     V.s_state = SEQ_STATE_INIT;
  2024  002324  6B60               	clrf	_V& (0+255),b	;volatile
  2025                           
  2026                           ;main.c: 431:     break;
  2027  002326  D04A               	goto	l9619
  2028  002328                     l1256:
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;main.c: 434:     V.s_state = SEQ_STATE_INIT;
  2032  002328  6B60               	clrf	_V& (0+255),b	;volatile
  2033                           
  2034                           ; BSR set to: 0
  2035                           ;main.c: 435:     sprintf(V.buf, "E%d A%d T%d C%d #", V.error, V.abort, V.timer_error, V
      +                          .checksum_error);
  2036  00232A  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2037  002330  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2038  002336  0060  F2E7  FFE6   	movff	_V+89,postinc1
  2039  00233C  0060  F2EB  FFE6   	movff	_V+90,postinc1
  2040  002342  51B1               	movf	(_V+81)& (0+255),w,b	;volatile
  2041  002344  6EE6               	movwf	postinc1,c
  2042  002346  0E00               	movlw	0
  2043  002348  6EE6               	movwf	postinc1,c
  2044  00234A  51B0               	movf	(_V+80)& (0+255),w,b	;volatile
  2045  00234C  6EE6               	movwf	postinc1,c
  2046  00234E  0E00               	movlw	0
  2047  002350  6EE6               	movwf	postinc1,c
  2048  002352  0E5D               	movlw	STR_9& (0+255)
  2049  002354  6EE6               	movwf	postinc1,c
  2050  002356  0E60               	movlw	_V& (0+255)
  2051  002358  0F06               	addlw	6
  2052  00235A  6EE6               	movwf	postinc1,c
  2053  00235C  0E0A               	movlw	10
  2054  00235E  6EE6               	movwf	postinc1,c
  2055  002360  EC40  F02A         	call	_sprintf	;wreg free
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;main.c: 436:     V.buf[16] = 0;
  2059  002364  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;main.c: 437:     wait_lcd_done();
  2063  002366  EC4D  F033         	call	_wait_lcd_done	;wreg free
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;main.c: 438:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2067  00236A  0E60               	movlw	_V& (0+255)
  2068  00236C  0F06               	addlw	6
  2069  00236E  6EE6               	movwf	postinc1,c
  2070  002370  0E00               	movlw	0
  2071  002372  6EE6               	movwf	postinc1,c
  2072  002374  0E02               	movlw	2
  2073  002376  6EE6               	movwf	postinc1,c
  2074  002378  ECAB  F030         	call	_eaDogM_WriteStringAtPos	;wreg free
  2075                           
  2076                           ; BSR set to: 59
  2077                           ;main.c: 439:     WaitMs(2000);
  2078  00237C  0ED0               	movlw	208
  2079  00237E  6EE6               	movwf	postinc1,c
  2080  002380  0E07               	movlw	7
  2081  002382  6EE6               	movwf	postinc1,c
  2082  002384  EC60  F030         	call	_WaitMs	;wreg free
  2083                           
  2084                           ;main.c: 440:     break;
  2085  002388  D019               	goto	l9619
  2086  00238A                     l9617:
  2087                           
  2088                           ; BSR set to: 0
  2089  00238A  5160               	movf	_V& (0+255),w,b	;volatile
  2090  00238C  6E43               	movwf	btemp+10,c
  2091  00238E  6A44               	clrf	btemp+11,c
  2092                           
  2093                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2094                           ; Switch size 1, requested type "simple"
  2095                           ; Number of cases is 1, Range of values is 0 to 0
  2096                           ; switch strategies available:
  2097                           ; Name         Instructions Cycles
  2098                           ; simple_byte            4     3 (average)
  2099                           ;	Chosen strategy is simple_byte
  2100  002390  5044               	movf	btemp+11,w,c
  2101  002392  0A00               	xorlw	0	; case 0
  2102  002394  A4D8               	btfss	status,2,c
  2103  002396  D7C8               	goto	l1256
  2104                           
  2105                           ; BSR set to: 0
  2106                           ; Switch size 1, requested type "simple"
  2107                           ; Number of cases is 6, Range of values is 0 to 6
  2108                           ; switch strategies available:
  2109                           ; Name         Instructions Cycles
  2110                           ; simple_byte           19    10 (average)
  2111                           ;	Chosen strategy is simple_byte
  2112  002398  5043               	movf	btemp+10,w,c
  2113  00239A  0A00               	xorlw	0	; case 0
  2114  00239C  B4D8               	btfsc	status,2,c
  2115  00239E  D70F               	goto	l1240
  2116  0023A0  0A01               	xorlw	1	; case 1
  2117  0023A2  B4D8               	btfsc	status,2,c
  2118  0023A4  D748               	goto	l9559
  2119  0023A6  0A03               	xorlw	3	; case 2
  2120  0023A8  B4D8               	btfsc	status,2,c
  2121  0023AA  D781               	goto	l9583
  2122  0023AC  0A01               	xorlw	1	; case 3
  2123  0023AE  B4D8               	btfsc	status,2,c
  2124  0023B0  D792               	goto	l1251
  2125  0023B2  0A06               	xorlw	6	; case 5
  2126  0023B4  B4D8               	btfsc	status,2,c
  2127  0023B6  D7B6               	goto	l1254
  2128  0023B8  0A03               	xorlw	3	; case 6
  2129  0023BA  D7B6               	goto	l1256
  2130  0023BC                     l9619:
  2131                           
  2132                           ;main.c: 442:    if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  2133  0023BC  0E0A               	movlw	10
  2134  0023BE  0100               	movlb	0	; () banked
  2135  0023C0  19B0               	xorwf	(_V+80)& (0+255),w,b	;volatile
  2136  0023C2  A4D8               	btfss	status,2,c
  2137  0023C4  D104               	goto	l1273
  2138                           
  2139                           ; BSR set to: 0
  2140  0023C6  0E0A               	movlw	10
  2141  0023C8  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  2142  0023CA  A4D8               	btfss	status,2,c
  2143  0023CC  D100               	goto	l1273
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;main.c: 443:     sprintf(V.buf, "HOST: %ld G%d      #", V.ticks, V.g_state);
  2147  0023CE  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2148  0023D0  6EE6               	movwf	postinc1,c
  2149  0023D2  0E00               	movlw	0
  2150  0023D4  6EE6               	movwf	postinc1,c
  2151  0023D6  0060  F29B  FFE6   	movff	_V+70,postinc1
  2152  0023DC  0060  F29F  FFE6   	movff	_V+71,postinc1
  2153  0023E2  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2154  0023E8  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2155  0023EE  0E35               	movlw	STR_5& (0+255)
  2156  0023F0  6EE6               	movwf	postinc1,c
  2157  0023F2  0E60               	movlw	_V& (0+255)
  2158  0023F4  0F06               	addlw	6
  2159  0023F6  6EE6               	movwf	postinc1,c
  2160  0023F8  0E08               	movlw	8
  2161  0023FA  6EE6               	movwf	postinc1,c
  2162  0023FC  EC40  F02A         	call	_sprintf	;wreg free
  2163  002400                     l9625:
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;main.c: 444:     V.buf[16] = 0;
  2167  002400  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;main.c: 445:     wait_lcd_done();
  2171  002402  EC4D  F033         	call	_wait_lcd_done	;wreg free
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;main.c: 446:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2175  002406  0E60               	movlw	_V& (0+255)
  2176  002408  0F06               	addlw	6
  2177  00240A  6EE6               	movwf	postinc1,c
  2178  00240C  0E00               	movlw	0
  2179  00240E  6EE6               	movwf	postinc1,c
  2180  002410  0E02               	movlw	2
  2181  002412  6EE6               	movwf	postinc1,c
  2182  002414  ECAB  F030         	call	_eaDogM_WriteStringAtPos	;wreg free
  2183  002418  D0DA               	goto	l1273
  2184  00241A                     l1260:
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;main.c: 452:     V.m_l_state = LINK_STATE_IDLE;
  2188  00241A  6B63               	clrf	(_V+3)& (0+255),b	;volatile
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;main.c: 453:     V.s_state = SEQ_STATE_RX;
  2192  00241C  0E01               	movlw	1
  2193  00241E  6F60               	movwf	_V& (0+255),b	;volatile
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;main.c: 454:     sprintf(V.buf, "LOG: U%d G%d %d %d      #", V.uart, V.g_state, V.timer
      +                          _error, V.checksum_error);
  2197  002420  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2198  002426  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2199  00242C  0060  F2E7  FFE6   	movff	_V+89,postinc1
  2200  002432  0060  F2EB  FFE6   	movff	_V+90,postinc1
  2201  002438  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2202  00243A  6EE6               	movwf	postinc1,c
  2203  00243C  0E00               	movlw	0
  2204  00243E  6EE6               	movwf	postinc1,c
  2205  002440  51C0               	movf	(_V+96)& (0+255),w,b	;volatile
  2206  002442  6EE6               	movwf	postinc1,c
  2207  002444  0E00               	movlw	0
  2208  002446  6EE6               	movwf	postinc1,c
  2209  002448  0E01               	movlw	STR_11& (0+255)
  2210  00244A  6EE6               	movwf	postinc1,c
  2211  00244C  0E60               	movlw	_V& (0+255)
  2212  00244E  0F06               	addlw	6
  2213  002450  6EE6               	movwf	postinc1,c
  2214  002452  0E0A               	movlw	10
  2215  002454  6EE6               	movwf	postinc1,c
  2216  002456  EC40  F02A         	call	_sprintf	;wreg free
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;main.c: 455:     V.buf[16] = 0;
  2220  00245A  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2221                           
  2222                           ; BSR set to: 0
  2223                           ;main.c: 456:     wait_lcd_done();
  2224  00245C  EC4D  F033         	call	_wait_lcd_done	;wreg free
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;main.c: 457:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2228  002460  0E60               	movlw	_V& (0+255)
  2229  002462  0F06               	addlw	6
  2230  002464  6EE6               	movwf	postinc1,c
  2231  002466  0E00               	movlw	0
  2232  002468  6EE6               	movwf	postinc1,c
  2233  00246A  0E02               	movlw	2
  2234  00246C  6EE6               	movwf	postinc1,c
  2235  00246E  ECAB  F030         	call	_eaDogM_WriteStringAtPos	;wreg free
  2236                           
  2237                           ; BSR set to: 59
  2238                           ;main.c: 459:     if (LATEbits.LATE0) {
  2239  002472  A0BE               	btfss	16318,0,c	;volatile
  2240  002474  D005               	goto	l9645
  2241                           
  2242                           ; BSR set to: 59
  2243                           ;main.c: 460:      UART2_put_buffer(0x05);
  2244  002476  0E05               	movlw	5
  2245  002478  6EE6               	movwf	postinc1,c
  2246  00247A  EC04  F031         	call	_UART2_put_buffer	;wreg free
  2247                           
  2248                           ;main.c: 461:     } else {
  2249  00247E  D072               	goto	l9675
  2250  002480                     l9645:
  2251                           
  2252                           ; BSR set to: 59
  2253                           ;main.c: 462:      UART1_put_buffer(0x05);
  2254  002480  0E05               	movlw	5
  2255  002482  6EE6               	movwf	postinc1,c
  2256  002484  EC19  F031         	call	_UART1_put_buffer	;wreg free
  2257  002488  D06D               	goto	l9675
  2258  00248A                     l9647:
  2259                           
  2260                           ; BSR set to: 0
  2261                           ;main.c: 470:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  2262  00248A  0E60               	movlw	_V& (0+255)
  2263  00248C  0F03               	addlw	3
  2264  00248E  6EE6               	movwf	postinc1,c
  2265  002490  EC3E  F013         	call	_m_protocol	;wreg free
  2266  002494  0E04               	movlw	4
  2267  002496  1839               	xorwf	btemp,w,c
  2268  002498  A4D8               	btfss	status,2,c
  2269  00249A  D02D               	goto	l9659
  2270                           
  2271                           ;main.c: 471:      sprintf(V.buf, " S%dF%d #%ld      ", V.stream, V.function, V.ticks);
  2272  00249C  0060  F29B  FFE6   	movff	_V+70,postinc1
  2273  0024A2  0060  F29F  FFE6   	movff	_V+71,postinc1
  2274  0024A8  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2275  0024AE  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2276  0024B4  0100               	movlb	0	; () banked
  2277  0024B6  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  2278  0024B8  6EE6               	movwf	postinc1,c
  2279  0024BA  0E00               	movlw	0
  2280  0024BC  6EE6               	movwf	postinc1,c
  2281  0024BE  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  2282  0024C0  6EE6               	movwf	postinc1,c
  2283  0024C2  0E00               	movlw	0
  2284  0024C4  6EE6               	movwf	postinc1,c
  2285  0024C6  0E4A               	movlw	STR_12& (0+255)
  2286  0024C8  6EE6               	movwf	postinc1,c
  2287  0024CA  0E60               	movlw	_V& (0+255)
  2288  0024CC  0F06               	addlw	6
  2289  0024CE  6EE6               	movwf	postinc1,c
  2290  0024D0  0E0A               	movlw	10
  2291  0024D2  6EE6               	movwf	postinc1,c
  2292  0024D4  EC40  F02A         	call	_sprintf	;wreg free
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;main.c: 472:      V.buf[13] = 0;
  2296  0024D8  6B73               	clrf	(_V+19)& (0+255),b	;volatile
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;main.c: 473:      wait_lcd_done();
  2300  0024DA  EC4D  F033         	call	_wait_lcd_done	;wreg free
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;main.c: 474:      eaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
  2304  0024DE  0E60               	movlw	_V& (0+255)
  2305  0024E0  0F06               	addlw	6
  2306  0024E2  6EE6               	movwf	postinc1,c
  2307  0024E4  0E00               	movlw	0
  2308  0024E6  6EE6               	movwf	postinc1,c
  2309  0024E8  05C0               	decf	(_V+96)& (0+255),w,b	;volatile
  2310  0024EA  6EE6               	movwf	postinc1,c
  2311  0024EC  ECAB  F030         	call	_eaDogM_WriteStringAtPos	;wreg free
  2312                           
  2313                           ; BSR set to: 59
  2314                           ;main.c: 475:      V.s_state = SEQ_STATE_TRIGGER;
  2315  0024F0  0E03               	movlw	3
  2316  0024F2  0100               	movlb	0	; () banked
  2317  0024F4  6F60               	movwf	_V& (0+255),b	;volatile
  2318  0024F6                     l9659:
  2319                           
  2320                           ;main.c: 477:     if (V.m_l_state == LINK_STATE_ERROR)
  2321  0024F6  0E06               	movlw	6
  2322  0024F8  0100               	movlb	0	; () banked
  2323  0024FA  1963               	xorwf	(_V+3)& (0+255),w,b	;volatile
  2324  0024FC  A4D8               	btfss	status,2,c
  2325  0024FE  D032               	goto	l9675
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;main.c: 478:      V.s_state = SEQ_STATE_ERROR;
  2329  002500  0E06               	movlw	6
  2330  002502  6F60               	movwf	_V& (0+255),b	;volatile
  2331  002504  D02F               	goto	l9675
  2332  002506                     l9663:
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;main.c: 481:     V.s_state = SEQ_STATE_DONE;
  2336  002506  0E05               	movlw	5
  2337  002508  6F60               	movwf	_V& (0+255),b	;volatile
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;main.c: 482:     sprintf(V.buf, " OK #");
  2341  00250A  0EA9               	movlw	STR_8& (0+255)
  2342  00250C  6EE6               	movwf	postinc1,c
  2343  00250E  0E60               	movlw	_V& (0+255)
  2344  002510  0F06               	addlw	6
  2345  002512  6EE6               	movwf	postinc1,c
  2346  002514  0E02               	movlw	2
  2347  002516  6EE6               	movwf	postinc1,c
  2348  002518  EC40  F02A         	call	_sprintf	;wreg free
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;main.c: 483:     wait_lcd_done();
  2352  00251C  EC4D  F033         	call	_wait_lcd_done	;wreg free
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;main.c: 484:     eaDogM_WriteStringAtPos(V.uart - 1, 13, V.buf);
  2356  002520  0E60               	movlw	_V& (0+255)
  2357  002522  0F06               	addlw	6
  2358  002524  6EE6               	movwf	postinc1,c
  2359  002526  0E0D               	movlw	13
  2360  002528  6EE6               	movwf	postinc1,c
  2361  00252A  05C0               	decf	(_V+96)& (0+255),w,b	;volatile
  2362  00252C  6EE6               	movwf	postinc1,c
  2363  00252E  ECAB  F030         	call	_eaDogM_WriteStringAtPos	;wreg free
  2364                           
  2365                           ;main.c: 485:     break;
  2366  002532  D018               	goto	l9675
  2367  002534                     l1268:
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;main.c: 491:     V.s_state = SEQ_STATE_INIT;
  2371                           
  2372                           ;main.c: 490:    default:
  2373                           
  2374                           ;main.c: 488:     break;
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;main.c: 487:     V.s_state = SEQ_STATE_INIT;
  2378  002534  6B60               	clrf	_V& (0+255),b	;volatile
  2379                           
  2380                           ;main.c: 492:     break;
  2381  002536  D016               	goto	l9675
  2382  002538                     l9673:
  2383                           
  2384                           ; BSR set to: 0
  2385  002538  5160               	movf	_V& (0+255),w,b	;volatile
  2386  00253A  6E43               	movwf	btemp+10,c
  2387  00253C  6A44               	clrf	btemp+11,c
  2388                           
  2389                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2390                           ; Switch size 1, requested type "simple"
  2391                           ; Number of cases is 1, Range of values is 0 to 0
  2392                           ; switch strategies available:
  2393                           ; Name         Instructions Cycles
  2394                           ; simple_byte            4     3 (average)
  2395                           ;	Chosen strategy is simple_byte
  2396  00253E  5044               	movf	btemp+11,w,c
  2397  002540  0A00               	xorlw	0	; case 0
  2398  002542  A4D8               	btfss	status,2,c
  2399  002544  D7F7               	goto	l1268
  2400                           
  2401                           ; BSR set to: 0
  2402                           ; Switch size 1, requested type "simple"
  2403                           ; Number of cases is 5, Range of values is 0 to 6
  2404                           ; switch strategies available:
  2405                           ; Name         Instructions Cycles
  2406                           ; simple_byte           16     9 (average)
  2407                           ;	Chosen strategy is simple_byte
  2408  002546  5043               	movf	btemp+10,w,c
  2409  002548  0A00               	xorlw	0	; case 0
  2410  00254A  B4D8               	btfsc	status,2,c
  2411  00254C  D766               	goto	l1260
  2412  00254E  0A01               	xorlw	1	; case 1
  2413  002550  B4D8               	btfsc	status,2,c
  2414  002552  D79B               	goto	l9647
  2415  002554  0A02               	xorlw	2	; case 3
  2416  002556  B4D8               	btfsc	status,2,c
  2417  002558  D7D6               	goto	l9663
  2418  00255A  0A06               	xorlw	6	; case 5
  2419  00255C  B4D8               	btfsc	status,2,c
  2420  00255E  D7EA               	goto	l1268
  2421  002560  0A03               	xorlw	3	; case 6
  2422  002562  D7E8               	goto	l1268
  2423  002564                     l9675:
  2424                           
  2425                           ;main.c: 494:    sprintf(V.buf, "LOG: U%d G%d %d %d      #", V.uart, V.g_state, V.timer_
      +                          error, V.checksum_error);
  2426  002564  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2427  00256A  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2428  002570  0060  F2E7  FFE6   	movff	_V+89,postinc1
  2429  002576  0060  F2EB  FFE6   	movff	_V+90,postinc1
  2430  00257C  0100               	movlb	0	; () banked
  2431  00257E  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2432  002580  6EE6               	movwf	postinc1,c
  2433  002582  0E00               	movlw	0
  2434  002584  6EE6               	movwf	postinc1,c
  2435  002586  51C0               	movf	(_V+96)& (0+255),w,b	;volatile
  2436  002588  6EE6               	movwf	postinc1,c
  2437  00258A  0E00               	movlw	0
  2438  00258C  6EE6               	movwf	postinc1,c
  2439  00258E  0E01               	movlw	STR_11& (0+255)
  2440  002590  6EE6               	movwf	postinc1,c
  2441  002592  0E60               	movlw	_V& (0+255)
  2442  002594  0F06               	addlw	6
  2443  002596  6EE6               	movwf	postinc1,c
  2444  002598  0E0A               	movlw	10
  2445  00259A  6EE6               	movwf	postinc1,c
  2446  00259C  EC40  F02A         	call	_sprintf	;wreg free
  2447  0025A0  D72F               	goto	l9625
  2448  0025A2                     l1272:
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;main.c: 501:    V.ui_state = UI_STATE_INIT;
  2452  0025A2  6B61               	clrf	(_V+1)& (0+255),b	;volatile
  2453                           
  2454                           ;main.c: 502:    break;
  2455  0025A4  D014               	goto	l1273
  2456  0025A6                     l9685:
  2457  0025A6  0100               	movlb	0	; () banked
  2458  0025A8  5161               	movf	(_V+1)& (0+255),w,b	;volatile
  2459  0025AA  6E43               	movwf	btemp+10,c
  2460  0025AC  6A44               	clrf	btemp+11,c
  2461                           
  2462                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2463                           ; Switch size 1, requested type "simple"
  2464                           ; Number of cases is 1, Range of values is 0 to 0
  2465                           ; switch strategies available:
  2466                           ; Name         Instructions Cycles
  2467                           ; simple_byte            4     3 (average)
  2468                           ;	Chosen strategy is simple_byte
  2469  0025AE  5044               	movf	btemp+11,w,c
  2470  0025B0  0A00               	xorlw	0	; case 0
  2471  0025B2  A4D8               	btfss	status,2,c
  2472  0025B4  D7F6               	goto	l1272
  2473                           
  2474                           ; BSR set to: 0
  2475                           ; Switch size 1, requested type "simple"
  2476                           ; Number of cases is 4, Range of values is 0 to 4
  2477                           ; switch strategies available:
  2478                           ; Name         Instructions Cycles
  2479                           ; simple_byte           13     7 (average)
  2480                           ;	Chosen strategy is simple_byte
  2481  0025B6  5043               	movf	btemp+10,w,c
  2482  0025B8  0A00               	xorlw	0	; case 0
  2483  0025BA  B4D8               	btfsc	status,2,c
  2484  0025BC  D5A5               	goto	l9511
  2485  0025BE  0A01               	xorlw	1	; case 1
  2486  0025C0  B4D8               	btfsc	status,2,c
  2487  0025C2  D6E3               	goto	l9617
  2488  0025C4  0A02               	xorlw	2	; case 3
  2489  0025C6  B4D8               	btfsc	status,2,c
  2490  0025C8  D7B7               	goto	l9673
  2491  0025CA  0A07               	xorlw	7	; case 4
  2492  0025CC  D7EA               	goto	l1272
  2493  0025CE                     l1273:
  2494  0025CE  84BE               	bsf	16318,2,c	;volatile
  2495                           
  2496                           ;main.c: 505:   if (V.ticks) {
  2497  0025D0  0100               	movlb	0	; () banked
  2498  0025D2  51A6               	movf	(_V+70)& (0+255),w,b	;volatile
  2499  0025D4  11A7               	iorwf	(_V+71)& (0+255),w,b	;volatile
  2500  0025D6  11A8               	iorwf	(_V+72)& (0+255),w,b	;volatile
  2501  0025D8  11A9               	iorwf	(_V+73)& (0+255),w,b	;volatile
  2502  0025DA  B4D8               	btfsc	status,2,c
  2503  0025DC  D016               	goto	l9693
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;main.c: 506:    if (V.failed_receive) {
  2507  0025DE  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  2508  0025E0  0B0F               	andlw	15
  2509  0025E2  0900               	iorlw	0
  2510  0025E4  B4D8               	btfsc	status,2,c
  2511  0025E6  D003               	goto	l1282
  2512                           
  2513                           ; BSR set to: 0
  2514                           
  2515                           ;main.c: 507:     do { LATDbits.LATD4 = 0; } while(0);
  2516  0025E8  98BD               	bcf	16317,4,c	;volatile
  2517                           
  2518                           ; BSR set to: 0
  2519                           
  2520                           ;main.c: 508:     do { LATDbits.LATD5 = 1; } while(0);
  2521  0025EA  8ABD               	bsf	16317,5,c	;volatile
  2522  0025EC  D002               	goto	l9691
  2523  0025EE                     l1282:
  2524                           
  2525                           ; BSR set to: 0
  2526  0025EE  88BD               	bsf	16317,4,c	;volatile
  2527                           
  2528                           ; BSR set to: 0
  2529                           
  2530                           ;main.c: 511:     do { LATDbits.LATD5 = 0; } while(0);
  2531  0025F0  9ABD               	bcf	16317,5,c	;volatile
  2532  0025F2                     l9691:
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;main.c: 513:    if (V.failed_send) {
  2536  0025F2  31BB               	rrcf	(_V+91)& (0+255),w,b	;volatile
  2537  0025F4  32E8               	rrcf	wreg,f,c
  2538  0025F6  32E8               	rrcf	wreg,f,c
  2539  0025F8  0B0F               	andlw	15
  2540  0025FA  0900               	iorlw	0
  2541  0025FC  B4D8               	btfsc	status,2,c
  2542  0025FE  D003               	goto	l1292
  2543                           
  2544                           ; BSR set to: 0
  2545                           
  2546                           ;main.c: 514:     do { LATDbits.LATD6 = 0; } while(0);
  2547  002600  9CBD               	bcf	16317,6,c	;volatile
  2548                           
  2549                           ; BSR set to: 0
  2550                           
  2551                           ;main.c: 515:     do { LATDbits.LATD7 = 1; } while(0);
  2552  002602  8EBD               	bsf	16317,7,c	;volatile
  2553  002604  D002               	goto	l9693
  2554  002606                     l1292:
  2555                           
  2556                           ; BSR set to: 0
  2557  002606  8CBD               	bsf	16317,6,c	;volatile
  2558                           
  2559                           ; BSR set to: 0
  2560                           
  2561                           ;main.c: 518:     do { LATDbits.LATD7 = 0; } while(0);
  2562  002608  9EBD               	bcf	16317,7,c	;volatile
  2563  00260A                     l9693:
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;main.c: 521:   sprintf(V.buf, "R%d %d, T%d %d C%d      #", V.r_l_state, V.failed_receiv
      +                          e, V.t_l_state, V.failed_send, V.checksum_error);
  2567  00260A  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2568  002610  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2569  002616  31BB               	rrcf	(_V+91)& (0+255),w,b	;volatile
  2570  002618  32E8               	rrcf	wreg,f,c
  2571  00261A  32E8               	rrcf	wreg,f,c
  2572  00261C  0B0F               	andlw	15
  2573  00261E  6EE6               	movwf	postinc1,c
  2574  002620  0E00               	movlw	0
  2575  002622  6EE6               	movwf	postinc1,c
  2576  002624  5165               	movf	(_V+5)& (0+255),w,b	;volatile
  2577  002626  6EE6               	movwf	postinc1,c
  2578  002628  0E00               	movlw	0
  2579  00262A  6EE6               	movwf	postinc1,c
  2580  00262C  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  2581  00262E  0B0F               	andlw	15
  2582  002630  6EE6               	movwf	postinc1,c
  2583  002632  0E00               	movlw	0
  2584  002634  6EE6               	movwf	postinc1,c
  2585  002636  5164               	movf	(_V+4)& (0+255),w,b	;volatile
  2586  002638  6EE6               	movwf	postinc1,c
  2587  00263A  0E00               	movlw	0
  2588  00263C  6EE6               	movwf	postinc1,c
  2589  00263E  0E1B               	movlw	STR_15& (0+255)
  2590  002640  6EE6               	movwf	postinc1,c
  2591  002642  0E60               	movlw	_V& (0+255)
  2592  002644  0F06               	addlw	6
  2593  002646  6EE6               	movwf	postinc1,c
  2594  002648  0E0C               	movlw	12
  2595  00264A  6EE6               	movwf	postinc1,c
  2596  00264C  EC40  F02A         	call	_sprintf	;wreg free
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;main.c: 522:   V.buf[16] = 0;
  2600  002650  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;main.c: 523:   wait_lcd_done();
  2604  002652  EC4D  F033         	call	_wait_lcd_done	;wreg free
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;main.c: 524:   if (mode != UI_STATE_LOG)
  2608                           ;stkvar	_mode @ sp[(-1)+0]
  2609  002656  0EFF               	movlw	-1
  2610  002658  006F FF8C  F039    	movff	plusw1,btemp
  2611  00265E  0E03               	movlw	3
  2612  002660  1839               	xorwf	btemp,w,c
  2613  002662  B4D8               	btfsc	status,2,c
  2614  002664  D009               	goto	l9703
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;main.c: 525:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  2618  002666  0E60               	movlw	_V& (0+255)
  2619  002668  0F06               	addlw	6
  2620  00266A  6EE6               	movwf	postinc1,c
  2621  00266C  0E00               	movlw	0
  2622  00266E  6EE6               	movwf	postinc1,c
  2623  002670  0E01               	movlw	1
  2624  002672  6EE6               	movwf	postinc1,c
  2625  002674  ECAB  F030         	call	_eaDogM_WriteStringAtPos	;wreg free
  2626  002678                     l9703:
  2627  002678  94BE               	bcf	16318,2,c	;volatile
  2628  00267A  D795               	goto	l9685
  2629  00267C                     __end_of_main:
  2630                           	opt callstack 0
  2631                           
  2632 ;; *************** function _t_protocol *****************
  2633 ;; Defined at:
  2634 ;;		line 330 in file "gemsecs.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  t_link          1  [STACK] PTR enum E16173
  2637 ;;		 -> V(98), 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  rxData          1  [STACK] unsigned char 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1  [STACK] enum E16913
  2642 ;; Registers used:
  2643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2653 ;;Total ram usage:        0 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    7
  2656 ;; This function calls:
  2657 ;;		_StartTimer
  2658 ;;		_TimerDone
  2659 ;;		_UART1_Read
  2660 ;;		_UART1_Write
  2661 ;;		_UART1_is_rx_ready
  2662 ;;		_UART1_put_buffer
  2663 ;;		_WaitMs
  2664 ;;		_rand
  2665 ;;		_secs_II_message
  2666 ;;		_secs_send
  2667 ;; This function is called by:
  2668 ;;		_main
  2669 ;; This function uses a reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text1
  2673  003AF2                     __ptext1:
  2674                           	opt callstack 0
  2675  003AF2                     _t_protocol:
  2676                           	opt callstack 0
  2677                           
  2678                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2679  003AF2  52E6               	movf	postinc1,f,c
  2680                           
  2681                           ;gemsecs.c: 330: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 331: {;gemsecs.
      +                          c: 332:  uint8_t rxData;;gemsecs.c: 333:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          334:  static response_type block;;gemsecs.c: 336:  switch (*t_link) {
  2682                           
  2683                           ;incstack = 0
  2684  003AF4  D134               	goto	l9265
  2685  003AF6                     l9157:
  2686                           
  2687                           ;gemsecs.c: 338:   V.error = LINK_ERROR_NONE;
  2688  003AF6  0E0A               	movlw	10
  2689  003AF8  0100               	movlb	0	; () banked
  2690  003AFA  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  2691                           
  2692                           ;gemsecs.c: 339:   retry = 3;
  2693  003AFC  0E03               	movlw	3
  2694  003AFE  6E29               	movwf	t_protocol@retry,c
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;gemsecs.c: 340:   UART1_Write(0x05);
  2698  003B00  0E05               	movlw	5
  2699  003B02  6EE6               	movwf	postinc1,c
  2700  003B04  ECC9  F02F         	call	_UART1_Write	;wreg free
  2701                           
  2702                           ; BSR set to: 57
  2703                           ;gemsecs.c: 341:   StartTimer(TMR_T2, 2000);
  2704  003B08  0ED0               	movlw	208
  2705  003B0A  6EE6               	movwf	postinc1,c
  2706  003B0C  0E07               	movlw	7
  2707  003B0E  6EE6               	movwf	postinc1,c
  2708  003B10  0E02               	movlw	2
  2709  003B12  6EE6               	movwf	postinc1,c
  2710  003B14  EC26  F030         	call	_StartTimer	;wreg free
  2711                           
  2712                           ;gemsecs.c: 342:   *t_link = LINK_STATE_ENQ;
  2713                           ;stkvar	_t_link @ sp[(-1)+-1]
  2714  003B18  0EFE               	movlw	-2
  2715  003B1A  50E3               	movf	plusw1,w,c
  2716  003B1C  6ED9               	movwf	fsr2l,c
  2717  003B1E  6ADA               	clrf	fsr2h,c
  2718  003B20  0E01               	movlw	1
  2719  003B22  6EDF               	movwf	indf2,c
  2720                           
  2721                           ;gemsecs.c: 344:   WaitMs(5);
  2722  003B24  0E05               	movlw	5
  2723  003B26  6EE6               	movwf	postinc1,c
  2724  003B28  0E00               	movlw	0
  2725  003B2A  6EE6               	movwf	postinc1,c
  2726  003B2C  EC60  F030         	call	_WaitMs	;wreg free
  2727                           
  2728                           ;gemsecs.c: 345:   UART1_put_buffer(0x04);
  2729  003B30  0E04               	movlw	4
  2730  003B32  6EE6               	movwf	postinc1,c
  2731  003B34  EC19  F031         	call	_UART1_put_buffer	;wreg free
  2732                           
  2733                           ;gemsecs.c: 347:   break;
  2734  003B38  D133               	goto	l9267
  2735  003B3A                     l9169:
  2736                           
  2737                           ;gemsecs.c: 349:   if (TimerDone(TMR_T2)) {
  2738  003B3A  0E02               	movlw	2
  2739  003B3C  6EE6               	movwf	postinc1,c
  2740  003B3E  EC95  F032         	call	_TimerDone	;wreg free
  2741  003B42  5039               	movf	btemp,w,c
  2742  003B44  B4D8               	btfsc	status,2,c
  2743  003B46  D01C               	goto	l9181
  2744                           
  2745                           ;gemsecs.c: 350:    V.timer_error++;
  2746  003B48  0100               	movlb	0	; () banked
  2747  003B4A  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  2748  003B4C  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;gemsecs.c: 351:    if (!retry--) {
  2752  003B4E  0629               	decf	t_protocol@retry,f,c
  2753  003B50  2829               	incf	t_protocol@retry,w,c
  2754  003B52  A4D8               	btfss	status,2,c
  2755  003B54  D00C               	goto	l9179
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;gemsecs.c: 352:     V.error = LINK_ERROR_T2;
  2759  003B56  0E0C               	movlw	12
  2760  003B58  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  2761                           
  2762                           ;gemsecs.c: 353:     V.failed_send = 1;
  2763  003B5A  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  2764  003B5C  0B87               	andlw	-121
  2765  003B5E  0908               	iorlw	8
  2766  003B60  6FBB               	movwf	(_V+91)& (0+255),b	;volatile
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;gemsecs.c: 354:     *t_link = LINK_STATE_NAK;
  2770                           ;stkvar	_t_link @ sp[(-1)+-1]
  2771  003B62  0EFE               	movlw	-2
  2772  003B64  50E3               	movf	plusw1,w,c
  2773  003B66  6ED9               	movwf	fsr2l,c
  2774  003B68  6ADA               	clrf	fsr2h,c
  2775  003B6A  0E05               	movlw	5
  2776  003B6C  D0F6               	goto	L2
  2777  003B6E                     l9179:
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;gemsecs.c: 356:     StartTimer(TMR_T2, 2000);
  2781  003B6E  0ED0               	movlw	208
  2782  003B70  6EE6               	movwf	postinc1,c
  2783  003B72  0E07               	movlw	7
  2784  003B74  6EE6               	movwf	postinc1,c
  2785  003B76  0E02               	movlw	2
  2786  003B78  6EE6               	movwf	postinc1,c
  2787  003B7A  EC26  F030         	call	_StartTimer	;wreg free
  2788  003B7E  D110               	goto	l9267
  2789  003B80                     l9181:
  2790                           
  2791                           ;gemsecs.c: 359:    if (UART1_is_rx_ready()) {
  2792  003B80  EC07  F034         	call	_UART1_is_rx_ready	;wreg free
  2793  003B84  5039               	movf	btemp,w,c
  2794  003B86  B4D8               	btfsc	status,2,c
  2795  003B88  D10B               	goto	l9267
  2796                           
  2797                           ;gemsecs.c: 360:     rxData = UART1_Read();
  2798  003B8A  EC07  F030         	call	_UART1_Read	;wreg free
  2799                           
  2800                           ;stkvar	_rxData @ sp[(-1)+0]
  2801  003B8E  0EFF               	movlw	-1
  2802  003B90  0060  F0E7  FFE3   	movff	btemp,plusw1
  2803                           
  2804                           ; BSR set to: 57
  2805                           ;gemsecs.c: 361:     if (rxData == 0x04) {
  2806                           ;stkvar	_rxData @ sp[(-1)+0]
  2807  003B96  0EFF               	movlw	-1
  2808  003B98  006F FF8C  F039    	movff	plusw1,btemp
  2809  003B9E  0E04               	movlw	4
  2810  003BA0  1839               	xorwf	btemp,w,c
  2811  003BA2  A4D8               	btfss	status,2,c
  2812  003BA4  D00E               	goto	l9191
  2813                           
  2814                           ; BSR set to: 57
  2815                           ;gemsecs.c: 362:      StartTimer(TMR_T3, 5000);
  2816  003BA6  0E88               	movlw	136
  2817  003BA8  6EE6               	movwf	postinc1,c
  2818  003BAA  0E13               	movlw	19
  2819  003BAC  6EE6               	movwf	postinc1,c
  2820  003BAE  0E03               	movlw	3
  2821  003BB0  6EE6               	movwf	postinc1,c
  2822  003BB2  EC26  F030         	call	_StartTimer	;wreg free
  2823                           
  2824                           ;gemsecs.c: 363:      *t_link = LINK_STATE_EOT;
  2825                           ;stkvar	_t_link @ sp[(-1)+-1]
  2826  003BB6  0EFE               	movlw	-2
  2827  003BB8  50E3               	movf	plusw1,w,c
  2828  003BBA  6ED9               	movwf	fsr2l,c
  2829  003BBC  6ADA               	clrf	fsr2h,c
  2830  003BBE  0E02               	movlw	2
  2831  003BC0  6EDF               	movwf	indf2,c
  2832  003BC2                     l9191:
  2833                           
  2834                           ;gemsecs.c: 365:     if (rxData == 0x05) {
  2835                           ;stkvar	_rxData @ sp[(-1)+0]
  2836  003BC2  0EFF               	movlw	-1
  2837  003BC4  006F FF8C  F039    	movff	plusw1,btemp
  2838  003BCA  0E05               	movlw	5
  2839  003BCC  1839               	xorwf	btemp,w,c
  2840  003BCE  A4D8               	btfss	status,2,c
  2841  003BD0  D0E7               	goto	l9267
  2842                           
  2843                           ;gemsecs.c: 366:      UART1_put_buffer(0x04);
  2844  003BD2  0E04               	movlw	4
  2845  003BD4  6EE6               	movwf	postinc1,c
  2846  003BD6  EC19  F031         	call	_UART1_put_buffer	;wreg free
  2847  003BDA                     l9195:
  2848                           
  2849                           ;gemsecs.c: 367:      *t_link = LINK_STATE_DONE;
  2850                           ;stkvar	_t_link @ sp[(-1)+-1]
  2851  003BDA  0EFE               	movlw	-2
  2852  003BDC  50E3               	movf	plusw1,w,c
  2853  003BDE  6ED9               	movwf	fsr2l,c
  2854  003BE0  6ADA               	clrf	fsr2h,c
  2855  003BE2  0E04               	movlw	4
  2856  003BE4  D0BA               	goto	L2
  2857  003BE6                     l9197:
  2858                           
  2859                           ;gemsecs.c: 373:   if (!requeue)
  2860  003BE6  5028               	movf	t_protocol@requeue,w,c
  2861  003BE8  A4D8               	btfss	status,2,c
  2862  003BEA  D010               	goto	l9201
  2863                           
  2864                           ;gemsecs.c: 374:    block = secs_II_message(V.stream, V.function);
  2865  003BEC  0100               	movlb	0	; () banked
  2866  003BEE  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  2867  003BF0  6EE6               	movwf	postinc1,c
  2868  003BF2  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  2869  003BF4  6EE6               	movwf	postinc1,c
  2870  003BF6  ECAD  F022         	call	_secs_II_message	;wreg free
  2871  003BFA  EE20  F0DA         	lfsr	2,t_protocol@block
  2872  003BFE  0E06               	movlw	6
  2873  003C00                     u5941:
  2874  003C00  52E5               	movf	postdec1,f,c
  2875  003C02  006F FF9F FFDB     	movff	indf1,plusw2
  2876  003C08  06E8               	decf	wreg,f,c
  2877  003C0A  E2FA               	bc	u5941
  2878  003C0C                     l9201:
  2879                           
  2880                           ;gemsecs.c: 376:   if (V.abort == LINK_ERROR_ABORT) {
  2881  003C0C  0E11               	movlw	17
  2882  003C0E  0100               	movlb	0	; () banked
  2883  003C10  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  2884  003C12  A4D8               	btfss	status,2,c
  2885  003C14  D019               	goto	l9209
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;gemsecs.c: 377:    secs_send((uint8_t*) block.header, block.length, 0, 1);
  2889  003C16  0E01               	movlw	1
  2890  003C18  6EE6               	movwf	postinc1,c
  2891  003C1A  0E00               	movlw	0
  2892  003C1C  6EE6               	movwf	postinc1,c
  2893  003C1E  51DC               	movf	(t_protocol@block+2)& (0+255),w,b
  2894  003C20  6EE6               	movwf	postinc1,c
  2895  003C22  0060  F36B  FFE6   	movff	t_protocol@block,postinc1
  2896  003C28  0060  F36F  FFE6   	movff	t_protocol@block+1,postinc1
  2897  003C2E  EC78  F021         	call	_secs_send	;wreg free
  2898                           
  2899                           ;gemsecs.c: 378:    V.failed_send = 2;
  2900  003C32  0100               	movlb	0	; () banked
  2901  003C34  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  2902  003C36  0B87               	andlw	-121
  2903  003C38  0910               	iorlw	16
  2904  003C3A  6FBB               	movwf	(_V+91)& (0+255),b	;volatile
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;gemsecs.c: 379:    *t_link = LINK_STATE_ERROR;
  2908                           ;stkvar	_t_link @ sp[(-1)+-1]
  2909  003C3C  0EFE               	movlw	-2
  2910  003C3E  50E3               	movf	plusw1,w,c
  2911  003C40  6ED9               	movwf	fsr2l,c
  2912  003C42  6ADA               	clrf	fsr2h,c
  2913  003C44  0E06               	movlw	6
  2914  003C46  D031               	goto	L3
  2915  003C48                     l9209:
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;gemsecs.c: 381:    if (!requeue) {
  2919  003C48  5028               	movf	t_protocol@requeue,w,c
  2920  003C4A  A4D8               	btfss	status,2,c
  2921  003C4C  D014               	goto	l1695
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;gemsecs.c: 382:     secs_send((uint8_t*) block.header, block.length, 0, 1);
  2925  003C4E  0E01               	movlw	1
  2926  003C50  6EE6               	movwf	postinc1,c
  2927  003C52  0E00               	movlw	0
  2928  003C54  6EE6               	movwf	postinc1,c
  2929  003C56  51DC               	movf	(t_protocol@block+2)& (0+255),w,b
  2930  003C58  6EE6               	movwf	postinc1,c
  2931  003C5A  0060  F36B  FFE6   	movff	t_protocol@block,postinc1
  2932  003C60  0060  F36F  FFE6   	movff	t_protocol@block+1,postinc1
  2933  003C66  EC78  F021         	call	_secs_send	;wreg free
  2934                           
  2935                           ;gemsecs.c: 383:     if (V.queue)
  2936  003C6A  0100               	movlb	0	; () banked
  2937  003C6C  A9BC               	btfss	(_V+92)& (0+255),4,b	;volatile
  2938  003C6E  D013               	goto	l9219
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;gemsecs.c: 384:      requeue = 1;
  2942  003C70  0E01               	movlw	1
  2943  003C72  6E28               	movwf	t_protocol@requeue,c
  2944  003C74  D010               	goto	l9219
  2945  003C76                     l1695:
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;gemsecs.c: 386:     requeue = 0;
  2949  003C76  6A28               	clrf	t_protocol@requeue,c
  2950                           
  2951                           ;gemsecs.c: 387:     V.queue = 0;
  2952  003C78  99BC               	bcf	(_V+92)& (0+255),4,b	;volatile
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;gemsecs.c: 388:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
  2956  003C7A  0E01               	movlw	1
  2957  003C7C  6EE6               	movwf	postinc1,c
  2958  003C7E  0E00               	movlw	0
  2959  003C80  6EE6               	movwf	postinc1,c
  2960  003C82  51DF               	movf	(t_protocol@block+5)& (0+255),w,b
  2961  003C84  6EE6               	movwf	postinc1,c
  2962  003C86  0060  F377  FFE6   	movff	t_protocol@block+3,postinc1
  2963  003C8C  0060  F37B  FFE6   	movff	t_protocol@block+4,postinc1
  2964  003C92  EC78  F021         	call	_secs_send	;wreg free
  2965  003C96                     l9219:
  2966                           
  2967                           ;gemsecs.c: 390:    if (V.error == LINK_ERROR_NONE) {
  2968  003C96  0E0A               	movlw	10
  2969  003C98  0100               	movlb	0	; () banked
  2970  003C9A  19B0               	xorwf	(_V+80)& (0+255),w,b	;volatile
  2971  003C9C  A4D8               	btfss	status,2,c
  2972  003C9E  D007               	goto	l9223
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;gemsecs.c: 391:     *t_link = LINK_STATE_ACK;
  2976                           ;stkvar	_t_link @ sp[(-1)+-1]
  2977  003CA0  0EFE               	movlw	-2
  2978  003CA2  50E3               	movf	plusw1,w,c
  2979  003CA4  6ED9               	movwf	fsr2l,c
  2980  003CA6  6ADA               	clrf	fsr2h,c
  2981  003CA8  0E03               	movlw	3
  2982  003CAA                     L3:
  2983  003CAA  6EDF               	movwf	indf2,c
  2984                           
  2985                           ;gemsecs.c: 392:    } else {
  2986  003CAC  D004               	goto	l9227
  2987  003CAE                     l9223:
  2988                           
  2989                           ; BSR set to: 0
  2990                           ;gemsecs.c: 393:     V.failed_send = 3;
  2991  003CAE  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  2992  003CB0  0B87               	andlw	-121
  2993  003CB2  0918               	iorlw	24
  2994  003CB4  D7C2               	goto	L4
  2995  003CB6                     l9227:
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;gemsecs.c: 398:   WaitMs(5);
  2999  003CB6  0E05               	movlw	5
  3000  003CB8  6EE6               	movwf	postinc1,c
  3001  003CBA  0E00               	movlw	0
  3002  003CBC  6EE6               	movwf	postinc1,c
  3003  003CBE  EC60  F030         	call	_WaitMs	;wreg free
  3004                           
  3005                           ;gemsecs.c: 400:   if (rand() < 31000)
  3006  003CC2  EC64  F026         	call	_rand	;wreg free
  3007  003CC6  BE3A               	btfsc	btemp+1,7,c
  3008  003CC8  D006               	goto	u5990
  3009  003CCA  0E18               	movlw	24
  3010  003CCC  5C39               	subwf	btemp,w,c
  3011  003CCE  0E79               	movlw	121
  3012  003CD0  583A               	subwfb	btemp+1,w,c
  3013  003CD2  B0D8               	btfsc	status,0,c
  3014  003CD4  D065               	goto	l9267
  3015  003CD6                     u5990:
  3016                           
  3017                           ; BSR set to: 0
  3018                           ;gemsecs.c: 402:    UART1_put_buffer(0x06);
  3019  003CD6  0E06               	movlw	6
  3020  003CD8  6EE6               	movwf	postinc1,c
  3021  003CDA  EC19  F031         	call	_UART1_put_buffer	;wreg free
  3022  003CDE  D060               	goto	l9267
  3023  003CE0                     l9233:
  3024                           
  3025                           ;gemsecs.c: 406:   if (TimerDone(TMR_T3)) {
  3026  003CE0  0E03               	movlw	3
  3027  003CE2  6EE6               	movwf	postinc1,c
  3028  003CE4  EC95  F032         	call	_TimerDone	;wreg free
  3029  003CE8  5039               	movf	btemp,w,c
  3030  003CEA  B4D8               	btfsc	status,2,c
  3031  003CEC  D009               	goto	l9243
  3032                           
  3033                           ;gemsecs.c: 407:    V.timer_error++;
  3034  003CEE  0100               	movlb	0	; () banked
  3035  003CF0  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  3036  003CF2  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  3037                           
  3038                           ; BSR set to: 0
  3039                           ;gemsecs.c: 408:    V.error = LINK_ERROR_T3;
  3040  003CF4  0E0D               	movlw	13
  3041  003CF6  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;gemsecs.c: 409:    V.failed_send = 4;
  3045  003CF8  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  3046  003CFA  0B87               	andlw	-121
  3047  003CFC  0920               	iorlw	32
  3048  003CFE  D730               	goto	L5
  3049  003D00                     l9243:
  3050                           
  3051                           ;gemsecs.c: 412:    if (UART1_is_rx_ready()) {
  3052  003D00  EC07  F034         	call	_UART1_is_rx_ready	;wreg free
  3053  003D04  5039               	movf	btemp,w,c
  3054  003D06  B4D8               	btfsc	status,2,c
  3055  003D08  D04B               	goto	l9267
  3056                           
  3057                           ;gemsecs.c: 413:     rxData = UART1_Read();
  3058  003D0A  EC07  F030         	call	_UART1_Read	;wreg free
  3059                           
  3060                           ;stkvar	_rxData @ sp[(-1)+0]
  3061  003D0E  0EFF               	movlw	-1
  3062  003D10  0060  F0E7  FFE3   	movff	btemp,plusw1
  3063                           
  3064                           ; BSR set to: 57
  3065                           ;gemsecs.c: 414:     if (rxData == 0x06) {
  3066                           ;stkvar	_rxData @ sp[(-1)+0]
  3067  003D16  0EFF               	movlw	-1
  3068  003D18  006F FF8C  F039    	movff	plusw1,btemp
  3069  003D1E  0E06               	movlw	6
  3070  003D20  1839               	xorwf	btemp,w,c
  3071  003D22  A4D8               	btfss	status,2,c
  3072  003D24  D03D               	goto	l9267
  3073                           
  3074                           ; BSR set to: 57
  3075                           ;gemsecs.c: 415:      V.failed_send = 0;
  3076  003D26  0E87               	movlw	-121
  3077  003D28  0100               	movlb	0	; () banked
  3078  003D2A  17BB               	andwf	(_V+91)& (0+255),f,b	;volatile
  3079  003D2C  D756               	goto	l9195
  3080  003D2E                     l9253:
  3081                           
  3082                           ;gemsecs.c: 422:   *t_link = LINK_STATE_ERROR;
  3083                           ;stkvar	_t_link @ sp[(-1)+-1]
  3084  003D2E  0EFE               	movlw	-2
  3085  003D30  50E3               	movf	plusw1,w,c
  3086  003D32  6ED9               	movwf	fsr2l,c
  3087  003D34  6ADA               	clrf	fsr2h,c
  3088  003D36  0E06               	movlw	6
  3089  003D38  6EDF               	movwf	indf2,c
  3090                           
  3091                           ;gemsecs.c: 423:   while ((uart1RxCount)) {
  3092  003D3A  D002               	goto	l9257
  3093  003D3C                     l9255:
  3094                           
  3095                           ;gemsecs.c: 424:    UART1_Read();
  3096  003D3C  EC07  F030         	call	_UART1_Read	;wreg free
  3097  003D40                     l9257:
  3098                           
  3099                           ;gemsecs.c: 423:   while ((uart1RxCount)) {
  3100  003D40  5033               	movf	_uart1RxCount,w,c	;volatile
  3101  003D42  B4D8               	btfsc	status,2,c
  3102  003D44  D02D               	goto	l9267
  3103  003D46  D7FA               	goto	l9255
  3104  003D48                     l9259:
  3105                           
  3106                           ;gemsecs.c: 430:   V.failed_send = 0;
  3107  003D48  0E87               	movlw	-121
  3108  003D4A  0100               	movlb	0	; () banked
  3109  003D4C  17BB               	andwf	(_V+91)& (0+255),f,b	;volatile
  3110                           
  3111                           ;gemsecs.c: 431:   break;
  3112  003D4E  D028               	goto	l9267
  3113  003D50                     l9261:
  3114                           
  3115                           ;gemsecs.c: 433:   *t_link = LINK_STATE_IDLE;
  3116                           ;stkvar	_t_link @ sp[(-1)+-1]
  3117  003D50  0EFE               	movlw	-2
  3118  003D52  50E3               	movf	plusw1,w,c
  3119  003D54  6ED9               	movwf	fsr2l,c
  3120  003D56  6ADA               	clrf	fsr2h,c
  3121  003D58  0E00               	movlw	0
  3122  003D5A                     L2:
  3123  003D5A  6EDF               	movwf	indf2,c
  3124                           
  3125                           ;gemsecs.c: 435:   break;
  3126  003D5C  D021               	goto	l9267
  3127  003D5E                     l9265:
  3128                           
  3129                           ;stkvar	_t_link @ sp[(-1)+-1]
  3130  003D5E  0EFE               	movlw	-2
  3131  003D60  50E3               	movf	plusw1,w,c
  3132  003D62  6ED9               	movwf	fsr2l,c
  3133  003D64  6ADA               	clrf	fsr2h,c
  3134  003D66  50DF               	movf	indf2,w,c
  3135  003D68  6E43               	movwf	btemp+10,c
  3136  003D6A  6A44               	clrf	btemp+11,c
  3137                           
  3138                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3139                           ; Switch size 1, requested type "simple"
  3140                           ; Number of cases is 1, Range of values is 0 to 0
  3141                           ; switch strategies available:
  3142                           ; Name         Instructions Cycles
  3143                           ; simple_byte            4     3 (average)
  3144                           ;	Chosen strategy is simple_byte
  3145  003D6C  5044               	movf	btemp+11,w,c
  3146  003D6E  0A00               	xorlw	0	; case 0
  3147  003D70  A4D8               	btfss	status,2,c
  3148  003D72  D7EE               	goto	l9261
  3149                           
  3150                           ; Switch size 1, requested type "simple"
  3151                           ; Number of cases is 7, Range of values is 0 to 6
  3152                           ; switch strategies available:
  3153                           ; Name         Instructions Cycles
  3154                           ; simple_byte           22    12 (average)
  3155                           ;	Chosen strategy is simple_byte
  3156  003D74  5043               	movf	btemp+10,w,c
  3157  003D76  0A00               	xorlw	0	; case 0
  3158  003D78  B4D8               	btfsc	status,2,c
  3159  003D7A  D6BD               	goto	l9157
  3160  003D7C  0A01               	xorlw	1	; case 1
  3161  003D7E  B4D8               	btfsc	status,2,c
  3162  003D80  D6DC               	goto	l9169
  3163  003D82  0A03               	xorlw	3	; case 2
  3164  003D84  B4D8               	btfsc	status,2,c
  3165  003D86  D72F               	goto	l9197
  3166  003D88  0A01               	xorlw	1	; case 3
  3167  003D8A  B4D8               	btfsc	status,2,c
  3168  003D8C  D7A9               	goto	l9233
  3169  003D8E  0A07               	xorlw	7	; case 4
  3170  003D90  B4D8               	btfsc	status,2,c
  3171  003D92  D7DA               	goto	l9259
  3172  003D94  0A01               	xorlw	1	; case 5
  3173  003D96  B4D8               	btfsc	status,2,c
  3174  003D98  D7CA               	goto	l9253
  3175  003D9A  0A03               	xorlw	3	; case 6
  3176  003D9C  A4D8               	btfss	status,2,c
  3177  003D9E  D7D8               	goto	l9261
  3178  003DA0                     l9267:
  3179                           
  3180                           ;gemsecs.c: 438:  return *t_link;
  3181                           ;stkvar	_t_link @ sp[(-1)+-1]
  3182  003DA0  0EFE               	movlw	-2
  3183  003DA2  50E3               	movf	plusw1,w,c
  3184  003DA4  6ED9               	movwf	fsr2l,c
  3185  003DA6  6ADA               	clrf	fsr2h,c
  3186  003DA8  50DF               	movf	indf2,w,c
  3187  003DAA  6E39               	movwf	btemp,c
  3188                           
  3189                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3190  003DAC  52E5               	movf	postdec1,f,c
  3191  003DAE  52E5               	movf	postdec1,f,c
  3192  003DB0  0012               	return		;funcret
  3193  003DB2                     __end_of_t_protocol:
  3194                           	opt callstack 0
  3195                           
  3196 ;; *************** function _secs_II_message *****************
  3197 ;; Defined at:
  3198 ;;		line 498 in file "gemsecs.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  stream          1  [STACK] unsigned char 
  3201 ;;  function        1  [STACK] unsigned char 
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;		None
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  7  [STACK] struct response_type
  3206 ;; Registers used:
  3207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  3208 ;; Tracked objects:
  3209 ;;		On entry : 3F/0
  3210 ;;		On exit  : 3E/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3217 ;;Total ram usage:        0 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    3
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_t_protocol
  3224 ;; This function uses a reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text2
  3228  00455A                     __ptext2:
  3229                           	opt callstack 0
  3230  00455A                     _secs_II_message:
  3231                           	opt callstack 0
  3232                           
  3233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  3234  00455A  0E05               	movlw	5
  3235  00455C  26E1               	addwf	fsr1l,f,c
  3236  00455E  0E00               	movlw	0
  3237  004560  22E2               	addwfc	fsr1h,f,c
  3238                           
  3239                           ;gemsecs.c: 498: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 499: {;gemsecs.c: 500:  static response_type block;;gemsecs.c: 502:  V.abort = LINK_
      +                          ERROR_NONE;
  3240                           
  3241                           ;incstack = 0
  3242  004562  0E0A               	movlw	10
  3243  004564  0100               	movlb	0	; () banked
  3244  004566  6FB1               	movwf	(_V+81)& (0+255),b	;volatile
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;gemsecs.c: 503:  V.queue = 0;
  3248  004568  99BC               	bcf	(_V+92)& (0+255),4,b	;volatile
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;gemsecs.c: 504:  block.respond = 0;
  3252  00456A  9007               	bcf	secs_II_message@block+6,0,c
  3253                           
  3254                           ;gemsecs.c: 506:  switch (stream) {
  3255  00456C  D0F3               	goto	l6711
  3256  00456E                     l6579:
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;gemsecs.c: 510:    block.header = (uint8_t*) & H12[0];
  3260  00456E  0E62               	movlw	low _H12
  3261  004570  6E01               	movwf	secs_II_message@block,c
  3262  004572  0E01               	movlw	high _H12
  3263  004574  6E02               	movwf	secs_II_message@block+1,c
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;gemsecs.c: 511:    block.length = sizeof(header12);
  3267  004576  0E0F               	movlw	15
  3268  004578  6E03               	movwf	secs_II_message@block+2,c
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;gemsecs.c: 512:    H12[0].block.block.systemb = V.systemb;
  3272  00457A  C0AA  F166         	movff	_V+74,_H12+4	;volatile
  3273  00457E  C0AB  F167         	movff	_V+75,_H12+5	;volatile
  3274  004582  C0AC  F168         	movff	_V+76,_H12+6	;volatile
  3275  004586  C0AD  F169         	movff	_V+77,_H12+7	;volatile
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;gemsecs.c: 513:    H10[0].block.block.systemb = V.systemb;
  3279  00458A  C0AA  F109         	movff	_V+74,_H10+2	;volatile
  3280  00458E  C0AB  F10A         	movff	_V+75,_H10+3	;volatile
  3281  004592  C0AC  F10B         	movff	_V+76,_H10+4	;volatile
  3282  004596  C0AD  F10C         	movff	_V+77,_H10+5	;volatile
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;gemsecs.c: 514:    block.respond = 1;
  3286  00459A  8007               	bsf	secs_II_message@block+6,0,c
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;gemsecs.c: 515:    block.reply = (uint8_t*) & H10[0];
  3290  00459C  0E07               	movlw	low _H10
  3291  00459E  6E04               	movwf	secs_II_message@block+3,c
  3292  0045A0  0E01               	movlw	high _H10
  3293  0045A2  6E05               	movwf	secs_II_message@block+4,c
  3294                           
  3295                           ;gemsecs.c: 516:    block.reply_length = sizeof(header10);
  3296  0045A4  0E0D               	movlw	13
  3297  0045A6                     L6:
  3298  0045A6  6E06               	movwf	secs_II_message@block+5,c
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;gemsecs.c: 517:    V.queue = 1;
  3302  0045A8  89BC               	bsf	(_V+92)& (0+255),4,b	;volatile
  3303                           
  3304                           ;gemsecs.c: 518:    break;
  3305  0045AA  D0ED               	goto	l6713
  3306  0045AC                     l6593:
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;gemsecs.c: 520:    block.header = (uint8_t*) & H14[0];
  3310  0045AC  0EAF               	movlw	low _H14
  3311  0045AE  6E01               	movwf	secs_II_message@block,c
  3312  0045B0  0E01               	movlw	high _H14
  3313  0045B2  6E02               	movwf	secs_II_message@block+1,c
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;gemsecs.c: 521:    block.length = sizeof(header14);
  3317  0045B4  0E11               	movlw	17
  3318  0045B6  6E03               	movwf	secs_II_message@block+2,c
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;gemsecs.c: 522:    H14[0].block.block.systemb = V.systemb;
  3322  0045B8  C0AA  F1B5         	movff	_V+74,_H14+6	;volatile
  3323  0045BC  C0AB  F1B6         	movff	_V+75,_H14+7	;volatile
  3324  0045C0  C0AC  F1B7         	movff	_V+76,_H14+8	;volatile
  3325  0045C4  C0AD  F1B8         	movff	_V+77,_H14+9	;volatile
  3326                           
  3327                           ;gemsecs.c: 523:    break;
  3328  0045C8  D0DE               	goto	l6713
  3329  0045CA                     l6599:
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;gemsecs.c: 525:    block.header = (uint8_t*) & H17[0];
  3333  0045CA  0E9B               	movlw	low _H17
  3334  0045CC  6E01               	movwf	secs_II_message@block,c
  3335  0045CE  0E01               	movlw	high _H17
  3336  0045D0  6E02               	movwf	secs_II_message@block+1,c
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;gemsecs.c: 526:    block.length = sizeof(header17);
  3340  0045D2  0E14               	movlw	20
  3341  0045D4  6E03               	movwf	secs_II_message@block+2,c
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;gemsecs.c: 527:    H17[0].block.block.systemb = V.systemb;
  3345  0045D6  C0AA  F1A4         	movff	_V+74,_H17+9	;volatile
  3346  0045DA  C0AB  F1A5         	movff	_V+75,_H17+10	;volatile
  3347  0045DE  C0AC  F1A6         	movff	_V+76,_H17+11	;volatile
  3348  0045E2  C0AD  F1A7         	movff	_V+77,_H17+12	;volatile
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;gemsecs.c: 528:    H12[1].block.block.systemb = V.systemb;
  3352  0045E6  C0AA  F175         	movff	_V+74,_H12+19	;volatile
  3353  0045EA  C0AB  F176         	movff	_V+75,_H12+20	;volatile
  3354  0045EE  C0AC  F177         	movff	_V+76,_H12+21	;volatile
  3355  0045F2  C0AD  F178         	movff	_V+77,_H12+22	;volatile
  3356                           
  3357                           ; BSR set to: 0
  3358                           ;gemsecs.c: 529:    block.respond = 1;
  3359  0045F6  8007               	bsf	secs_II_message@block+6,0,c
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;gemsecs.c: 530:    block.reply = (uint8_t*) & H12[1];
  3363  0045F8  0E71               	movlw	low (_H12+15)
  3364  0045FA  6E04               	movwf	secs_II_message@block+3,c
  3365  0045FC  0E01               	movlw	high (_H12+15)
  3366  0045FE  6E05               	movwf	secs_II_message@block+4,c
  3367                           
  3368                           ;gemsecs.c: 531:    block.reply_length = sizeof(header12);
  3369  004600  0E0F               	movlw	15
  3370  004602  D7D1               	goto	L6
  3371  004604                     l6613:
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;gemsecs.c: 535:    block.header = (uint8_t*) & H10[2];
  3375  004604  0E21               	movlw	low (_H10+26)
  3376  004606  6E01               	movwf	secs_II_message@block,c
  3377  004608  0E01               	movlw	high (_H10+26)
  3378  00460A  6E02               	movwf	secs_II_message@block+1,c
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;gemsecs.c: 536:    block.length = sizeof(header10);
  3382  00460C  0E0D               	movlw	13
  3383  00460E  6E03               	movwf	secs_II_message@block+2,c
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;gemsecs.c: 537:    H10[2].block.block.systemb = V.systemb;
  3387  004610  C0AA  F123         	movff	_V+74,_H10+28	;volatile
  3388  004614  C0AB  F124         	movff	_V+75,_H10+29	;volatile
  3389  004618  C0AC  F125         	movff	_V+76,_H10+30	;volatile
  3390  00461C  C0AD  F126         	movff	_V+77,_H10+31	;volatile
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;gemsecs.c: 538:    V.abort = LINK_ERROR_ABORT;
  3394  004620  0E11               	movlw	17
  3395  004622  6FB1               	movwf	(_V+81)& (0+255),b	;volatile
  3396                           
  3397                           ;gemsecs.c: 539:    break;
  3398  004624  D0B0               	goto	l6713
  3399  004626                     l6623:
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;stkvar	_function @ sp[(0)+-7]
  3403  004626  0EF9               	movlw	-7
  3404  004628  50E3               	movf	plusw1,w,c
  3405  00462A  6E43               	movwf	btemp+10,c
  3406  00462C  6A44               	clrf	btemp+11,c
  3407                           
  3408                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3409                           ; Switch size 1, requested type "simple"
  3410                           ; Number of cases is 1, Range of values is 0 to 0
  3411                           ; switch strategies available:
  3412                           ; Name         Instructions Cycles
  3413                           ; simple_byte            4     3 (average)
  3414                           ;	Chosen strategy is simple_byte
  3415  00462E  5044               	movf	btemp+11,w,c
  3416  004630  0A00               	xorlw	0	; case 0
  3417  004632  A4D8               	btfss	status,2,c
  3418  004634  D7E7               	goto	l6613
  3419                           
  3420                           ; BSR set to: 0
  3421                           ; Switch size 1, requested type "simple"
  3422                           ; Number of cases is 3, Range of values is 1 to 13
  3423                           ; switch strategies available:
  3424                           ; Name         Instructions Cycles
  3425                           ; simple_byte           10     6 (average)
  3426                           ;	Chosen strategy is simple_byte
  3427  004636  5043               	movf	btemp+10,w,c
  3428  004638  0A01               	xorlw	1	; case 1
  3429  00463A  B4D8               	btfsc	status,2,c
  3430  00463C  D798               	goto	l6579
  3431  00463E  0A02               	xorlw	2	; case 3
  3432  004640  B4D8               	btfsc	status,2,c
  3433  004642  D7B4               	goto	l6593
  3434  004644  0A0E               	xorlw	14	; case 13
  3435  004646  B4D8               	btfsc	status,2,c
  3436  004648  D7C0               	goto	l6599
  3437  00464A  D7DC               	goto	l6613
  3438  00464C                     l6625:
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;gemsecs.c: 545:    block.header = (uint8_t*) & H24[0];
  3442  00464C  0E80               	movlw	low _H24
  3443  00464E  6E01               	movwf	secs_II_message@block,c
  3444  004650  0E01               	movlw	high _H24
  3445  004652  6E02               	movwf	secs_II_message@block+1,c
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;gemsecs.c: 546:    block.length = sizeof(header24);
  3449  004654  0E1B               	movlw	27
  3450  004656  6E03               	movwf	secs_II_message@block+2,c
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;gemsecs.c: 547:    H24[0].block.block.systemb = V.systemb;
  3454  004658  C0AA  F190         	movff	_V+74,_H24+16	;volatile
  3455  00465C  C0AB  F191         	movff	_V+75,_H24+17	;volatile
  3456  004660  C0AC  F192         	movff	_V+76,_H24+18	;volatile
  3457  004664  C0AD  F193         	movff	_V+77,_H24+19	;volatile
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;gemsecs.c: 548:    H24[0].data[12] = 12;
  3461  004668  0E0C               	movlw	12
  3462  00466A  0101               	movlb	1	; () banked
  3463  00466C  6F8E               	movwf	(_H24+14)& (0+255),b
  3464                           
  3465                           ;gemsecs.c: 549:    break;
  3466  00466E  D08B               	goto	l6713
  3467  004670                     l6643:
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;stkvar	_function @ sp[(0)+-7]
  3471  004670  0EF9               	movlw	-7
  3472  004672  50E3               	movf	plusw1,w,c
  3473  004674  6E43               	movwf	btemp+10,c
  3474  004676  6A44               	clrf	btemp+11,c
  3475                           
  3476                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3477                           ; Switch size 1, requested type "simple"
  3478                           ; Number of cases is 1, Range of values is 0 to 0
  3479                           ; switch strategies available:
  3480                           ; Name         Instructions Cycles
  3481                           ; simple_byte            4     3 (average)
  3482                           ;	Chosen strategy is simple_byte
  3483  004678  5044               	movf	btemp+11,w,c
  3484  00467A  0A00               	xorlw	0	; case 0
  3485  00467C  A4D8               	btfss	status,2,c
  3486  00467E  D7C2               	goto	l6613
  3487                           
  3488                           ; BSR set to: 0
  3489                           ; Switch size 1, requested type "simple"
  3490                           ; Number of cases is 1, Range of values is 17 to 17
  3491                           ; switch strategies available:
  3492                           ; Name         Instructions Cycles
  3493                           ; simple_byte            4     3 (average)
  3494                           ;	Chosen strategy is simple_byte
  3495  004680  5043               	movf	btemp+10,w,c
  3496  004682  0A11               	xorlw	17	; case 17
  3497  004684  B4D8               	btfsc	status,2,c
  3498  004686  D7E2               	goto	l6625
  3499  004688  D7BD               	goto	l6613
  3500  00468A                     l6645:
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;gemsecs.c: 561:    block.header = (uint8_t*) & H13[0];
  3504  00468A  0EC0               	movlw	low _H13
  3505  00468C  6E01               	movwf	secs_II_message@block,c
  3506  00468E  0E01               	movlw	high _H13
  3507  004690  6E02               	movwf	secs_II_message@block+1,c
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;gemsecs.c: 562:    block.length = sizeof(header13);
  3511  004692  0E10               	movlw	16
  3512  004694  6E03               	movwf	secs_II_message@block+2,c
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;gemsecs.c: 563:    H13[0].block.block.systemb = V.systemb;
  3516  004696  C0AA  F1C5         	movff	_V+74,_H13+5	;volatile
  3517  00469A  C0AB  F1C6         	movff	_V+75,_H13+6	;volatile
  3518  00469E  C0AC  F1C7         	movff	_V+76,_H13+7	;volatile
  3519  0046A2  C0AD  F1C8         	movff	_V+77,_H13+8	;volatile
  3520                           
  3521                           ;gemsecs.c: 564:    break;
  3522  0046A6  D06F               	goto	l6713
  3523  0046A8                     l6661:
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;stkvar	_function @ sp[(0)+-7]
  3527  0046A8  0EF9               	movlw	-7
  3528  0046AA  50E3               	movf	plusw1,w,c
  3529  0046AC  6E43               	movwf	btemp+10,c
  3530  0046AE  6A44               	clrf	btemp+11,c
  3531                           
  3532                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3533                           ; Switch size 1, requested type "simple"
  3534                           ; Number of cases is 1, Range of values is 0 to 0
  3535                           ; switch strategies available:
  3536                           ; Name         Instructions Cycles
  3537                           ; simple_byte            4     3 (average)
  3538                           ;	Chosen strategy is simple_byte
  3539  0046B0  5044               	movf	btemp+11,w,c
  3540  0046B2  0A00               	xorlw	0	; case 0
  3541  0046B4  A4D8               	btfss	status,2,c
  3542  0046B6  D7A6               	goto	l6613
  3543                           
  3544                           ; BSR set to: 0
  3545                           ; Switch size 1, requested type "simple"
  3546                           ; Number of cases is 1, Range of values is 11 to 11
  3547                           ; switch strategies available:
  3548                           ; Name         Instructions Cycles
  3549                           ; simple_byte            4     3 (average)
  3550                           ;	Chosen strategy is simple_byte
  3551  0046B8  5043               	movf	btemp+10,w,c
  3552  0046BA  0A0B               	xorlw	11	; case 11
  3553  0046BC  B4D8               	btfsc	status,2,c
  3554  0046BE  D7E5               	goto	l6645
  3555  0046C0  D7A1               	goto	l6613
  3556  0046C2                     l6673:
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;stkvar	_function @ sp[(0)+-7]
  3560  0046C2  0EF9               	movlw	-7
  3561  0046C4  50E3               	movf	plusw1,w,c
  3562  0046C6  6E43               	movwf	btemp+10,c
  3563  0046C8  6A44               	clrf	btemp+11,c
  3564                           
  3565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3566                           ; Switch size 1, requested type "simple"
  3567                           ; Number of cases is 1, Range of values is 0 to 0
  3568                           ; switch strategies available:
  3569                           ; Name         Instructions Cycles
  3570                           ; simple_byte            4     3 (average)
  3571                           ;	Chosen strategy is simple_byte
  3572  0046CA  5044               	movf	btemp+11,w,c
  3573  0046CC  0A00               	xorlw	0	; case 0
  3574  0046CE  A4D8               	btfss	status,2,c
  3575  0046D0  D799               	goto	l6613
  3576                           
  3577                           ; BSR set to: 0
  3578                           ; Switch size 1, requested type "simple"
  3579                           ; Number of cases is 7, Range of values is 1 to 13
  3580                           ; switch strategies available:
  3581                           ; Name         Instructions Cycles
  3582                           ; simple_byte           22    12 (average)
  3583                           ;	Chosen strategy is simple_byte
  3584  0046D2  5043               	movf	btemp+10,w,c
  3585  0046D4  0A01               	xorlw	1	; case 1
  3586  0046D6  B4D8               	btfsc	status,2,c
  3587  0046D8  D056               	goto	l6713
  3588  0046DA  0A02               	xorlw	2	; case 3
  3589  0046DC  B4D8               	btfsc	status,2,c
  3590  0046DE  D053               	goto	l6713
  3591  0046E0  0A06               	xorlw	6	; case 5
  3592  0046E2  B4D8               	btfsc	status,2,c
  3593  0046E4  D050               	goto	l6713
  3594  0046E6  0A02               	xorlw	2	; case 7
  3595  0046E8  B4D8               	btfsc	status,2,c
  3596  0046EA  D04D               	goto	l6713
  3597  0046EC  0A0E               	xorlw	14	; case 9
  3598  0046EE  B4D8               	btfsc	status,2,c
  3599  0046F0  D04A               	goto	l6713
  3600  0046F2  0A02               	xorlw	2	; case 11
  3601  0046F4  B4D8               	btfsc	status,2,c
  3602  0046F6  D047               	goto	l6713
  3603  0046F8  0A06               	xorlw	6	; case 13
  3604  0046FA  B4D8               	btfsc	status,2,c
  3605  0046FC  D044               	goto	l6713
  3606  0046FE  D782               	goto	l6613
  3607  004700                     l6675:
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;gemsecs.c: 600:    block.header = (uint8_t*) & H12[0];
  3611  004700  0E62               	movlw	low _H12
  3612  004702  6E01               	movwf	secs_II_message@block,c
  3613  004704  0E01               	movlw	high _H12
  3614  004706  6E02               	movwf	secs_II_message@block+1,c
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;gemsecs.c: 601:    block.length = sizeof(header12);
  3618  004708  0E0F               	movlw	15
  3619  00470A  6E03               	movwf	secs_II_message@block+2,c
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;gemsecs.c: 602:    H12[0].block.block.systemb = V.systemb;
  3623  00470C  C0AA  F166         	movff	_V+74,_H12+4	;volatile
  3624  004710  C0AB  F167         	movff	_V+75,_H12+5	;volatile
  3625  004714  C0AC  F168         	movff	_V+76,_H12+6	;volatile
  3626  004718  C0AD  F169         	movff	_V+77,_H12+7	;volatile
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;gemsecs.c: 603:    H53[0].block.block.systemb = V.systemb;
  3630  00471C  C0AA  F3F3         	movff	_V+74,_H53+45	;volatile
  3631  004720  C0AB  F3F4         	movff	_V+75,_H53+46	;volatile
  3632  004724  C0AC  F3F5         	movff	_V+76,_H53+47	;volatile
  3633  004728  C0AD  F3F6         	movff	_V+77,_H53+48	;volatile
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;gemsecs.c: 604:    block.respond = 1;
  3637  00472C  8007               	bsf	secs_II_message@block+6,0,c
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;gemsecs.c: 605:    block.reply = (uint8_t*) & H53[0];
  3641  00472E  0EC6               	movlw	low _H53
  3642  004730  6E04               	movwf	secs_II_message@block+3,c
  3643  004732  0E03               	movlw	high _H53
  3644  004734  6E05               	movwf	secs_II_message@block+4,c
  3645                           
  3646                           ;gemsecs.c: 606:    block.reply_length = sizeof(header53);
  3647  004736  0E38               	movlw	56
  3648  004738  D736               	goto	L6
  3649  00473A                     l6699:
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;stkvar	_function @ sp[(0)+-7]
  3653  00473A  0EF9               	movlw	-7
  3654  00473C  50E3               	movf	plusw1,w,c
  3655  00473E  6E43               	movwf	btemp+10,c
  3656  004740  6A44               	clrf	btemp+11,c
  3657                           
  3658                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3659                           ; Switch size 1, requested type "simple"
  3660                           ; Number of cases is 1, Range of values is 0 to 0
  3661                           ; switch strategies available:
  3662                           ; Name         Instructions Cycles
  3663                           ; simple_byte            4     3 (average)
  3664                           ;	Chosen strategy is simple_byte
  3665  004742  5044               	movf	btemp+11,w,c
  3666  004744  0A00               	xorlw	0	; case 0
  3667  004746  A4D8               	btfss	status,2,c
  3668  004748  D75D               	goto	l6613
  3669                           
  3670                           ; BSR set to: 0
  3671                           ; Switch size 1, requested type "simple"
  3672                           ; Number of cases is 1, Range of values is 1 to 1
  3673                           ; switch strategies available:
  3674                           ; Name         Instructions Cycles
  3675                           ; simple_byte            4     3 (average)
  3676                           ;	Chosen strategy is simple_byte
  3677  00474A  5043               	movf	btemp+10,w,c
  3678  00474C  0A01               	xorlw	1	; case 1
  3679  00474E  B4D8               	btfsc	status,2,c
  3680  004750  D7D7               	goto	l6675
  3681  004752  D758               	goto	l6613
  3682  004754                     l6711:
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;stkvar	_stream @ sp[(0)+-6]
  3686  004754  0EFA               	movlw	-6
  3687  004756  50E3               	movf	plusw1,w,c
  3688  004758  6E43               	movwf	btemp+10,c
  3689  00475A  6A44               	clrf	btemp+11,c
  3690                           
  3691                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3692                           ; Switch size 1, requested type "simple"
  3693                           ; Number of cases is 1, Range of values is 0 to 0
  3694                           ; switch strategies available:
  3695                           ; Name         Instructions Cycles
  3696                           ; simple_byte            4     3 (average)
  3697                           ;	Chosen strategy is simple_byte
  3698  00475C  5044               	movf	btemp+11,w,c
  3699  00475E  0A00               	xorlw	0	; case 0
  3700  004760  A4D8               	btfss	status,2,c
  3701  004762  D750               	goto	l6613
  3702                           
  3703                           ; BSR set to: 0
  3704                           ; Switch size 1, requested type "simple"
  3705                           ; Number of cases is 5, Range of values is 1 to 10
  3706                           ; switch strategies available:
  3707                           ; Name         Instructions Cycles
  3708                           ; simple_byte           16     9 (average)
  3709                           ;	Chosen strategy is simple_byte
  3710  004764  5043               	movf	btemp+10,w,c
  3711  004766  0A01               	xorlw	1	; case 1
  3712  004768  B4D8               	btfsc	status,2,c
  3713  00476A  D75D               	goto	l6623
  3714  00476C  0A03               	xorlw	3	; case 2
  3715  00476E  B4D8               	btfsc	status,2,c
  3716  004770  D77F               	goto	l6643
  3717  004772  0A04               	xorlw	4	; case 6
  3718  004774  B4D8               	btfsc	status,2,c
  3719  004776  D798               	goto	l6661
  3720  004778  0A0F               	xorlw	15	; case 9
  3721  00477A  B4D8               	btfsc	status,2,c
  3722  00477C  D7A2               	goto	l6673
  3723  00477E  0A03               	xorlw	3	; case 10
  3724  004780  B4D8               	btfsc	status,2,c
  3725  004782  D7DB               	goto	l6699
  3726  004784  D73F               	goto	l6613
  3727  004786                     l6713:
  3728                           
  3729                           ;gemsecs.c: 625:  return(block);
  3730  004786  EE20  F001         	lfsr	2,secs_II_message@block
  3731                           
  3732                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  3733  00478A  0E07               	movlw	7
  3734  00478C  6E39               	movwf	btemp,c
  3735  00478E  0EF9               	movlw	-7
  3736  004790                     us373999:
  3737  004790  006F FF7B FFE3     	movff	postinc2,plusw1
  3738  004796  28E8               	incf	wreg,w,c
  3739  004798  2E39               	decfsz	btemp,f,c
  3740  00479A  D7FA               	bra	us373999
  3741                           
  3742                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  3743  00479C  0012               	return		;funcret
  3744  00479E                     __end_of_secs_II_message:
  3745                           	opt callstack 0
  3746                           
  3747 ;; *************** function _srand *****************
  3748 ;; Defined at:
  3749 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/rand.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  s               2  [STACK] unsigned int 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;		None
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1  [STACK] void 
  3756 ;; Registers used:
  3757 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  3758 ;; Tracked objects:
  3759 ;;		On entry : 3F/0
  3760 ;;		On exit  : 3F/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3767 ;;Total ram usage:        0 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:    3
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_main
  3774 ;; This function uses a reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text3
  3778  0060F6                     __ptext3:
  3779                           	opt callstack 0
  3780  0060F6                     _srand:
  3781                           	opt callstack 27
  3782                           
  3783                           ;stkvar	_s @ sp[(0)+-2]
  3784                           
  3785                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3786                           ;incstack = 0
  3787  0060F6  0EFE               	movlw	-2
  3788  0060F8  50E3               	movf	plusw1,w,c
  3789  0060FA  0FFF               	addlw	255
  3790  0060FC  6E43               	movwf	btemp+10,c
  3791  0060FE  0EFF               	movlw	-1
  3792  006100  006F FF8C  F044    	movff	plusw1,btemp+11
  3793  006106  0EFF               	movlw	255
  3794  006108  2244               	addwfc	btemp+11,f,c
  3795  00610A  0060  F10C  F0F2   	movff	btemp+10,_seed
  3796  006110  0060  F110  F0F3   	movff	btemp+11,_seed+1
  3797  006116  0100               	movlb	0	; () banked
  3798  006118  6BF4               	clrf	(_seed+2)& (0+255),b
  3799  00611A  6BF5               	clrf	(_seed+3)& (0+255),b
  3800  00611C  6BF6               	clrf	(_seed+4)& (0+255),b
  3801  00611E  6BF7               	clrf	(_seed+5)& (0+255),b
  3802  006120  6BF8               	clrf	(_seed+6)& (0+255),b
  3803  006122  6BF9               	clrf	(_seed+7)& (0+255),b
  3804                           
  3805                           ; BSR set to: 0
  3806                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  3807  006124  52E5               	movf	postdec1,f,c
  3808  006126  52E5               	movf	postdec1,f,c
  3809  006128  0012               	return		;funcret
  3810  00612A                     __end_of_srand:
  3811                           	opt callstack 0
  3812                           
  3813 ;; *************** function _sprintf *****************
  3814 ;; Defined at:
  3815 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;  s               1  [STACK] PTR unsigned char 
  3818 ;;		 -> V(98), 
  3819 ;;  fmt             1  [STACK] PTR const unsigned char 
  3820 ;;		 -> STR_15(26), STR_14(26), STR_13(6), STR_12(19), 
  3821 ;;		 -> STR_11(26), STR_10(21), STR_9(18), STR_8(6), 
  3822 ;;		 -> STR_7(6), STR_6(14), STR_5(21), STR_4(15), 
  3823 ;;		 -> STR_2(12), STR_1(17), 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  f               5  [STACK] struct _IO_FILE
  3826 ;;  ap              2  [STACK] PTR void [1]
  3827 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3828 ;;  ret             2    0        int 
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  2  [STACK] int 
  3831 ;; Registers used:
  3832 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  3833 ;; Tracked objects:
  3834 ;;		On entry : 4/0
  3835 ;;		On exit  : 3F/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3842 ;;Total ram usage:        0 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; Hardware stack levels required when called:   11
  3845 ;; This function calls:
  3846 ;;		_vfprintf
  3847 ;; This function is called by:
  3848 ;;		_main
  3849 ;; This function uses a reentrant model
  3850 ;;
  3851                           
  3852                           	psect	text4
  3853  005480                     __ptext4:
  3854                           	opt callstack 0
  3855  005480                     _sprintf:
  3856                           	opt callstack 0
  3857                           
  3858                           ; BSR set to: 0
  3859                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3860  005480  0E07               	movlw	7
  3861  005482  26E1               	addwf	fsr1l,f,c
  3862  005484  0E00               	movlw	0
  3863  005486  22E2               	addwfc	fsr1h,f,c
  3864                           
  3865                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  3866                           
  3867                           ;incstack = 0
  3868  005488  0EF6               	movlw	246
  3869  00548A  24E1               	addwf	fsr1l,w,c
  3870  00548C  6E43               	movwf	btemp+10,c
  3871  00548E  0EFF               	movlw	255
  3872  005490  20E2               	addwfc	fsr1h,w,c
  3873  005492  6E44               	movwf	btemp+11,c
  3874                           
  3875                           ;stkvar	_ap @ sp[(-7)+5]
  3876  005494  0EFF               	movlw	-1
  3877  005496  0060  F113  FFE3   	movff	btemp+11,plusw1
  3878  00549C  0EFE               	movlw	-2
  3879  00549E  0060  F10F  FFE3   	movff	btemp+10,plusw1
  3880                           
  3881                           ;stkvar	_s @ sp[(-7)+-2]
  3882  0054A4  0EF7               	movlw	-9
  3883  0054A6  006F FF8C  F044    	movff	plusw1,btemp+11
  3884                           
  3885                           ;stkvar	_f @ sp[(-7)+0]
  3886  0054AC  0EF9               	movlw	-7
  3887  0054AE  0060  F113  FFE3   	movff	btemp+11,plusw1
  3888                           
  3889                           ;stkvar	_f @ sp[(-7)+0]
  3890  0054B4  0EFA               	movlw	250
  3891  0054B6  24E1               	addwf	fsr1l,w,c
  3892  0054B8  6ED9               	movwf	fsr2l,c
  3893  0054BA  0EFF               	movlw	255
  3894  0054BC  20E2               	addwfc	fsr1h,w,c
  3895  0054BE  6EDA               	movwf	fsr2h,c
  3896  0054C0  0E00               	movlw	0
  3897  0054C2  6EDE               	movwf	postinc2,c
  3898  0054C4  0E00               	movlw	0
  3899  0054C6  6EDD               	movwf	postdec2,c
  3900                           
  3901                           ;stkvar	_f @ sp[(-7)+0]
  3902  0054C8  0EFC               	movlw	252
  3903  0054CA  24E1               	addwf	fsr1l,w,c
  3904  0054CC  6ED9               	movwf	fsr2l,c
  3905  0054CE  0EFF               	movlw	255
  3906  0054D0  20E2               	addwfc	fsr1h,w,c
  3907  0054D2  6EDA               	movwf	fsr2h,c
  3908  0054D4  0E00               	movlw	0
  3909  0054D6  6EDE               	movwf	postinc2,c
  3910  0054D8  0E00               	movlw	0
  3911  0054DA  6EDD               	movwf	postdec2,c
  3912                           
  3913                           ;stkvar	_ap @ sp[(-7)+5]
  3914  0054DC  0EFE               	movlw	254
  3915  0054DE  24E1               	addwf	fsr1l,w,c
  3916  0054E0  6E39               	movwf	btemp,c
  3917  0054E2  0EFF               	movlw	255
  3918  0054E4  20E2               	addwfc	fsr1h,w,c
  3919  0054E6  6E3A               	movwf	btemp+1,c
  3920  0054E8  0060  F0E7  FFE6   	movff	btemp,postinc1
  3921  0054EE  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  3922                           
  3923                           ;stkvar	_fmt @ sp[(-9)+-3]
  3924  0054F4  0EF4               	movlw	-12
  3925  0054F6  50E3               	movf	plusw1,w,c
  3926  0054F8  6EE6               	movwf	postinc1,c
  3927                           
  3928                           ;stkvar	_f @ sp[(-10)+0]
  3929  0054FA  0EF6               	movlw	246
  3930  0054FC  24E1               	addwf	fsr1l,w,c
  3931  0054FE  6E39               	movwf	btemp,c
  3932  005500  0EFF               	movlw	255
  3933  005502  20E2               	addwfc	fsr1h,w,c
  3934  005504  6E3A               	movwf	btemp+1,c
  3935  005506  0060  F0E7  FFE6   	movff	btemp,postinc1
  3936  00550C  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  3937  005512  ECE9  F02B         	call	_vfprintf	;wreg free
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;stkvar	_f @ sp[(-7)+0]
  3941  005516  0EFA               	movlw	250
  3942  005518  24E1               	addwf	fsr1l,w,c
  3943  00551A  6ED9               	movwf	fsr2l,c
  3944  00551C  0EFF               	movlw	255
  3945  00551E  20E2               	addwfc	fsr1h,w,c
  3946  005520  6EDA               	movwf	fsr2h,c
  3947  005522  50DF               	movf	indf2,w,c
  3948  005524  6E44               	movwf	btemp+11,c
  3949                           
  3950                           ;stkvar	_s @ sp[(-7)+-2]
  3951  005526  0EF7               	movlw	-9
  3952  005528  50E3               	movf	plusw1,w,c
  3953  00552A  2444               	addwf	btemp+11,w,c
  3954  00552C  6ED9               	movwf	fsr2l,c
  3955  00552E  6ADA               	clrf	fsr2h,c
  3956  005530  0E00               	movlw	0
  3957  005532  6EDF               	movwf	indf2,c
  3958                           
  3959                           ; BSR set to: 0
  3960                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 2, vargsize = 0
  3961  005534  0EF9               	movlw	249
  3962  005536  26E1               	addwf	fsr1l,f,c
  3963  005538  0EFF               	movlw	255
  3964  00553A  22E2               	addwfc	fsr1h,f,c
  3965  00553C  52E5               	movf	postdec1,f,c
  3966  00553E  50E7               	movf	indf1,w,c
  3967  005540  5EE1               	subwf	fsr1l,f,c
  3968  005542  0E00               	movlw	0
  3969  005544  5AE2               	subwfb	fsr1h,f,c
  3970  005546  0012               	return		;funcret
  3971  005548                     __end_of_sprintf:
  3972                           	opt callstack 0
  3973                           
  3974 ;; *************** function _r_protocol *****************
  3975 ;; Defined at:
  3976 ;;		line 212 in file "gemsecs.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  r_link          1  [STACK] PTR enum E16173
  3979 ;;		 -> V(98), 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  rxData          1  [STACK] unsigned char 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1  [STACK] enum E16913
  3984 ;; Registers used:
  3985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3995 ;;Total ram usage:        0 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    7
  3998 ;; This function calls:
  3999 ;;		_StartTimer
  4000 ;;		_TimerDone
  4001 ;;		_UART1_Read
  4002 ;;		_UART1_Write
  4003 ;;		_UART1_is_rx_ready
  4004 ;;		_WaitMs
  4005 ;;		_run_checksum
  4006 ;;		_secs_gem_state
  4007 ;;		_secs_send
  4008 ;; This function is called by:
  4009 ;;		_main
  4010 ;; This function uses a reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text5
  4014  0034BC                     __ptext5:
  4015                           	opt callstack 0
  4016  0034BC                     _r_protocol:
  4017                           	opt callstack 0
  4018                           
  4019                           ; BSR set to: 0
  4020                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4021  0034BC  52E6               	movf	postinc1,f,c
  4022                           
  4023                           ;gemsecs.c: 212: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 213: {;gemsecs.
      +                          c: 214:  uint8_t rxData;;gemsecs.c: 215:  static uint8_t rxData_l = 0, retry = 3;;gemsec
      +                          s.c: 217:  switch (*r_link) {
  4024                           
  4025                           ;incstack = 0
  4026  0034BE  D179               	goto	l9143
  4027  0034C0                     l9011:
  4028                           
  4029                           ;gemsecs.c: 219:   if (UART1_is_rx_ready()) {
  4030  0034C0  EC07  F034         	call	_UART1_is_rx_ready	;wreg free
  4031  0034C4  5039               	movf	btemp,w,c
  4032  0034C6  B4D8               	btfsc	status,2,c
  4033  0034C8  D195               	goto	l9145
  4034                           
  4035                           ;gemsecs.c: 220:    rxData = UART1_Read();
  4036  0034CA  EC07  F030         	call	_UART1_Read	;wreg free
  4037                           
  4038                           ;stkvar	_rxData @ sp[(-1)+0]
  4039  0034CE  0EFF               	movlw	-1
  4040  0034D0  0060  F0E7  FFE3   	movff	btemp,plusw1
  4041                           
  4042                           ; BSR set to: 57
  4043                           ;gemsecs.c: 221:    if (rxData == 0x05) {
  4044                           ;stkvar	_rxData @ sp[(-1)+0]
  4045  0034D6  0EFF               	movlw	-1
  4046  0034D8  006F FF8C  F039    	movff	plusw1,btemp
  4047  0034DE  0E05               	movlw	5
  4048  0034E0  1839               	xorwf	btemp,w,c
  4049  0034E2  A4D8               	btfss	status,2,c
  4050  0034E4  D187               	goto	l9145
  4051                           
  4052                           ; BSR set to: 57
  4053                           ;gemsecs.c: 222:     V.error = LINK_ERROR_NONE;
  4054  0034E6  0E0A               	movlw	10
  4055  0034E8  0100               	movlb	0	; () banked
  4056  0034EA  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;gemsecs.c: 223:     *r_link = LINK_STATE_ENQ;
  4060                           ;stkvar	_r_link @ sp[(-1)+-1]
  4061  0034EC  0EFE               	movlw	-2
  4062  0034EE  50E3               	movf	plusw1,w,c
  4063  0034F0  6ED9               	movwf	fsr2l,c
  4064  0034F2  6ADA               	clrf	fsr2h,c
  4065  0034F4  0E01               	movlw	1
  4066  0034F6  D144               	goto	L10
  4067  0034F8                     l1641:
  4068                           
  4069                           ;gemsecs.c: 228:   rxData_l = 0;
  4070  0034F8  6A2A               	clrf	r_protocol@rxData_l,c
  4071                           
  4072                           ;gemsecs.c: 229:   UART1_Write(0x04);
  4073  0034FA  0E04               	movlw	4
  4074  0034FC  6EE6               	movwf	postinc1,c
  4075  0034FE  ECC9  F02F         	call	_UART1_Write	;wreg free
  4076                           
  4077                           ; BSR set to: 57
  4078                           ;gemsecs.c: 230:   StartTimer(TMR_T2, 2000);
  4079  003502  0ED0               	movlw	208
  4080  003504  6EE6               	movwf	postinc1,c
  4081  003506  0E07               	movlw	7
  4082  003508  6EE6               	movwf	postinc1,c
  4083  00350A  0E02               	movlw	2
  4084  00350C  6EE6               	movwf	postinc1,c
  4085  00350E  EC26  F030         	call	_StartTimer	;wreg free
  4086                           
  4087                           ;gemsecs.c: 231:   *r_link = LINK_STATE_EOT;
  4088                           ;stkvar	_r_link @ sp[(-1)+-1]
  4089  003512  0EFE               	movlw	-2
  4090  003514  50E3               	movf	plusw1,w,c
  4091  003516  6ED9               	movwf	fsr2l,c
  4092  003518  6ADA               	clrf	fsr2h,c
  4093  00351A  0E02               	movlw	2
  4094  00351C  6EDF               	movwf	indf2,c
  4095                           
  4096                           ;gemsecs.c: 233:   WaitMs(5);
  4097  00351E  0E05               	movlw	5
  4098  003520  6EE6               	movwf	postinc1,c
  4099  003522  0E00               	movlw	0
  4100  003524  6EE6               	movwf	postinc1,c
  4101  003526  EC60  F030         	call	_WaitMs	;wreg free
  4102                           
  4103                           ;gemsecs.c: 234:   H27[0].block.block.systemb = V.ticks;
  4104  00352A  C0A6  F2D3         	movff	_V+70,_H27+19	;volatile
  4105  00352E  C0A7  F2D4         	movff	_V+71,_H27+20	;volatile
  4106  003532  C0A8  F2D5         	movff	_V+72,_H27+21	;volatile
  4107  003536  C0A9  F2D6         	movff	_V+73,_H27+22	;volatile
  4108                           
  4109                           ;gemsecs.c: 235:   secs_send((uint8_t*) & H27[0], sizeof(header27), 1, 1);
  4110  00353A  0E01               	movlw	1
  4111  00353C  6EE6               	movwf	postinc1,c
  4112  00353E  0E01               	movlw	1
  4113  003540  6EE6               	movwf	postinc1,c
  4114  003542  0E1E               	movlw	30
  4115  003544  6EE6               	movwf	postinc1,c
  4116  003546  0EC0               	movlw	low _H27
  4117  003548  6EE6               	movwf	postinc1,c
  4118  00354A  0E02               	movlw	high _H27
  4119  00354C  6EE6               	movwf	postinc1,c
  4120  00354E  EC78  F021         	call	_secs_send	;wreg free
  4121                           
  4122                           ;gemsecs.c: 239:   break;
  4123  003552  D150               	goto	l9145
  4124  003554                     l9033:
  4125                           
  4126                           ;gemsecs.c: 241:   if (TimerDone(TMR_T2)) {
  4127  003554  0E02               	movlw	2
  4128  003556  6EE6               	movwf	postinc1,c
  4129  003558  EC95  F032         	call	_TimerDone	;wreg free
  4130  00355C  5039               	movf	btemp,w,c
  4131  00355E  B4D8               	btfsc	status,2,c
  4132  003560  D019               	goto	l9045
  4133                           
  4134                           ;gemsecs.c: 242:    V.timer_error++;
  4135  003562  0100               	movlb	0	; () banked
  4136  003564  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  4137  003566  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;gemsecs.c: 243:    if (!retry--) {
  4141  003568  065D               	decf	r_protocol@retry,f,c
  4142  00356A  285D               	incf	r_protocol@retry,w,c
  4143  00356C  A4D8               	btfss	status,2,c
  4144  00356E  D00C               	goto	l9043
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;gemsecs.c: 244:     V.error = LINK_ERROR_T2;
  4148  003570  0E0C               	movlw	12
  4149  003572  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4150                           
  4151                           ;gemsecs.c: 245:     V.failed_receive = 1;
  4152  003574  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  4153  003576  0BF0               	andlw	-16
  4154  003578  0901               	iorlw	1
  4155  00357A  6FBC               	movwf	(_V+92)& (0+255),b	;volatile
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;gemsecs.c: 246:     *r_link = LINK_STATE_NAK;
  4159                           ;stkvar	_r_link @ sp[(-1)+-1]
  4160  00357C  0EFE               	movlw	-2
  4161  00357E  50E3               	movf	plusw1,w,c
  4162  003580  6ED9               	movwf	fsr2l,c
  4163  003582  6ADA               	clrf	fsr2h,c
  4164  003584  0E05               	movlw	5
  4165  003586  D0FC               	goto	L10
  4166  003588                     l9043:
  4167                           
  4168                           ;gemsecs.c: 248:     *r_link = LINK_STATE_IDLE;
  4169                           ;stkvar	_r_link @ sp[(-1)+-1]
  4170  003588  0EFE               	movlw	-2
  4171  00358A  50E3               	movf	plusw1,w,c
  4172  00358C  6ED9               	movwf	fsr2l,c
  4173  00358E  6ADA               	clrf	fsr2h,c
  4174  003590  0E00               	movlw	0
  4175  003592  D0F6               	goto	L10
  4176  003594                     l9045:
  4177                           
  4178                           ;gemsecs.c: 251:    if (UART1_is_rx_ready()) {
  4179  003594  EC07  F034         	call	_UART1_is_rx_ready	;wreg free
  4180  003598  5039               	movf	btemp,w,c
  4181  00359A  B4D8               	btfsc	status,2,c
  4182  00359C  D12B               	goto	l9145
  4183                           
  4184                           ;gemsecs.c: 252:     rxData = UART1_Read();
  4185  00359E  EC07  F030         	call	_UART1_Read	;wreg free
  4186                           
  4187                           ;stkvar	_rxData @ sp[(-1)+0]
  4188  0035A2  0EFF               	movlw	-1
  4189  0035A4  0060  F0E7  FFE3   	movff	btemp,plusw1
  4190                           
  4191                           ; BSR set to: 57
  4192                           ;gemsecs.c: 253:     if (rxData_l == 0) {
  4193  0035AA  502A               	movf	r_protocol@rxData_l,w,c
  4194  0035AC  A4D8               	btfss	status,2,c
  4195  0035AE  D00C               	goto	l9057
  4196                           
  4197                           ; BSR set to: 57
  4198                           ;gemsecs.c: 254:      r_block.length = rxData;
  4199                           ;stkvar	_rxData @ sp[(-1)+0]
  4200  0035B0  0EFF               	movlw	-1
  4201  0035B2  006F FF8C  F1DC    	movff	plusw1,_r_block+12
  4202                           
  4203                           ; BSR set to: 57
  4204                           ;gemsecs.c: 255:      run_checksum(0, 1);
  4205  0035B8  0E01               	movlw	1
  4206  0035BA  6EE6               	movwf	postinc1,c
  4207  0035BC  0E00               	movlw	0
  4208  0035BE  6EE6               	movwf	postinc1,c
  4209  0035C0  EC95  F030         	call	_run_checksum	;wreg free
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;gemsecs.c: 256:      rxData_l++;
  4213  0035C4  2A2A               	incf	r_protocol@rxData_l,f,c
  4214                           
  4215                           ;gemsecs.c: 257:     } else {
  4216  0035C6  D116               	goto	l9145
  4217  0035C8                     l9057:
  4218                           
  4219                           ; BSR set to: 57
  4220                           ;gemsecs.c: 261:      if (rxData_l <= sizeof(block10))
  4221  0035C8  0E0B               	movlw	11
  4222  0035CA  602A               	cpfslt	r_protocol@rxData_l,c
  4223  0035CC  D00C               	goto	l9061
  4224                           
  4225                           ; BSR set to: 57
  4226                           ;gemsecs.c: 262:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  4227                           ;stkvar	_rxData @ sp[(-1)+0]
  4228  0035CE  502A               	movf	r_protocol@rxData_l,w,c
  4229  0035D0  0820               	sublw	low (_H10+25)
  4230  0035D2  6ED9               	movwf	fsr2l,c
  4231  0035D4  0E00               	movlw	0
  4232  0035D6  A0D8               	btfss	status,0,c
  4233  0035D8  2AE8               	incf	wreg,f,c
  4234  0035DA  0801               	sublw	high (_H10+25)
  4235  0035DC  6EDA               	movwf	fsr2h,c
  4236  0035DE  0EFF               	movlw	-1
  4237  0035E0  006F FF8F FFDF     	movff	plusw1,indf2
  4238  0035E6                     l9061:
  4239                           
  4240                           ; BSR set to: 57
  4241                           ;gemsecs.c: 264:      if (rxData_l == sizeof(block10) + 1)
  4242  0035E6  0E0B               	movlw	11
  4243  0035E8  182A               	xorwf	r_protocol@rxData_l,w,c
  4244  0035EA  A4D8               	btfss	status,2,c
  4245  0035EC  D004               	goto	l9065
  4246                           
  4247                           ; BSR set to: 57
  4248                           ;gemsecs.c: 265:       V.ack[2] = rxData;
  4249                           ;stkvar	_rxData @ sp[(-1)+0]
  4250  0035EE  0EFF               	movlw	-1
  4251  0035F0  006F FF8C  F0BF    	movff	plusw1,_V+95	;volatile
  4252  0035F6                     l9065:
  4253                           
  4254                           ; BSR set to: 57
  4255                           ;gemsecs.c: 266:      if (rxData_l == sizeof(block10) + 2)
  4256  0035F6  0E0C               	movlw	12
  4257  0035F8  182A               	xorwf	r_protocol@rxData_l,w,c
  4258  0035FA  A4D8               	btfss	status,2,c
  4259  0035FC  D004               	goto	l9069
  4260                           
  4261                           ; BSR set to: 57
  4262                           ;gemsecs.c: 267:       V.ack[1] = rxData;
  4263                           ;stkvar	_rxData @ sp[(-1)+0]
  4264  0035FE  0EFF               	movlw	-1
  4265  003600  006F FF8C  F0BE    	movff	plusw1,_V+94	;volatile
  4266  003606                     l9069:
  4267                           
  4268                           ; BSR set to: 57
  4269                           ;gemsecs.c: 268:      if (rxData_l == sizeof(block10) + 3)
  4270  003606  0E0D               	movlw	13
  4271  003608  182A               	xorwf	r_protocol@rxData_l,w,c
  4272  00360A  A4D8               	btfss	status,2,c
  4273  00360C  D004               	goto	l9073
  4274                           
  4275                           ; BSR set to: 57
  4276                           ;gemsecs.c: 269:       V.ack[0] = rxData;
  4277                           ;stkvar	_rxData @ sp[(-1)+0]
  4278  00360E  0EFF               	movlw	-1
  4279  003610  006F FF8C  F0BD    	movff	plusw1,_V+93	;volatile
  4280  003616                     l9073:
  4281                           
  4282                           ; BSR set to: 57
  4283                           ;gemsecs.c: 271:      if (rxData_l <= r_block.length)
  4284  003616  502A               	movf	r_protocol@rxData_l,w,c
  4285  003618  0101               	movlb	1	; () banked
  4286  00361A  5DDC               	subwf	(_r_block+12)& (0+255),w,b
  4287  00361C  A0D8               	btfss	status,0,c
  4288  00361E  D00D               	goto	l9077
  4289                           
  4290                           ; BSR set to: 1
  4291                           ;gemsecs.c: 272:       V.r_checksum = run_checksum(rxData, 0);
  4292  003620  0E00               	movlw	0
  4293  003622  6EE6               	movwf	postinc1,c
  4294                           
  4295                           ;stkvar	_rxData @ sp[(-2)+0]
  4296  003624  0EFE               	movlw	-2
  4297  003626  50E3               	movf	plusw1,w,c
  4298  003628  6EE6               	movwf	postinc1,c
  4299  00362A  EC95  F030         	call	_run_checksum	;wreg free
  4300  00362E  0060  F0E4  F0B3   	movff	btemp,_V+83	;volatile
  4301  003634  0060  F0E8  F0B4   	movff	btemp+1,_V+84	;volatile
  4302  00363A                     l9077:
  4303                           
  4304                           ;gemsecs.c: 274:      if (rxData_l == r_block.length + 1)
  4305  00363A  502A               	movf	r_protocol@rxData_l,w,c
  4306  00363C  6E43               	movwf	btemp+10,c
  4307  00363E  6A44               	clrf	btemp+11,c
  4308  003640  0101               	movlb	1	; () banked
  4309  003642  51DC               	movf	(_r_block+12)& (0+255),w,b
  4310  003644  6E41               	movwf	btemp+8,c
  4311  003646  6A42               	clrf	btemp+9,c
  4312  003648  0E01               	movlw	1
  4313  00364A  2641               	addwf	btemp+8,f,c
  4314  00364C  0E00               	movlw	0
  4315  00364E  2242               	addwfc	btemp+9,f,c
  4316  003650  5043               	movf	btemp+10,w,c
  4317  003652  1841               	xorwf	btemp+8,w,c
  4318  003654  E108               	bnz	l9081
  4319  003656  5044               	movf	btemp+11,w,c
  4320  003658  1842               	xorwf	btemp+9,w,c
  4321  00365A  A4D8               	btfss	status,2,c
  4322  00365C  D004               	goto	l9081
  4323                           
  4324                           ; BSR set to: 1
  4325                           ;gemsecs.c: 275:       H10[1].checksum = (uint16_t) rxData << 8;
  4326                           ;stkvar	_rxData @ sp[(-1)+0]
  4327  00365E  0EFF               	movlw	-1
  4328  003660  50E3               	movf	plusw1,w,c
  4329  003662  6F15               	movwf	(_H10+14)& (0+255),b
  4330  003664  6B14               	clrf	(_H10+13)& (0+255),b
  4331  003666                     l9081:
  4332                           
  4333                           ; BSR set to: 1
  4334                           ;gemsecs.c: 276:      if (rxData_l == r_block.length + 2)
  4335  003666  502A               	movf	r_protocol@rxData_l,w,c
  4336  003668  6E43               	movwf	btemp+10,c
  4337  00366A  6A44               	clrf	btemp+11,c
  4338  00366C  51DC               	movf	(_r_block+12)& (0+255),w,b
  4339  00366E  6E41               	movwf	btemp+8,c
  4340  003670  6A42               	clrf	btemp+9,c
  4341  003672  0E02               	movlw	2
  4342  003674  2641               	addwf	btemp+8,f,c
  4343  003676  0E00               	movlw	0
  4344  003678  2242               	addwfc	btemp+9,f,c
  4345  00367A  5043               	movf	btemp+10,w,c
  4346  00367C  1841               	xorwf	btemp+8,w,c
  4347  00367E  E109               	bnz	l9085
  4348  003680  5044               	movf	btemp+11,w,c
  4349  003682  1842               	xorwf	btemp+9,w,c
  4350  003684  A4D8               	btfss	status,2,c
  4351  003686  D005               	goto	l9085
  4352                           
  4353                           ; BSR set to: 1
  4354                           ;gemsecs.c: 277:       H10[1].checksum += rxData;
  4355                           ;stkvar	_rxData @ sp[(-1)+0]
  4356  003688  0EFF               	movlw	-1
  4357  00368A  50E3               	movf	plusw1,w,c
  4358  00368C  2714               	addwf	(_H10+13)& (0+255),f,b
  4359  00368E  0E00               	movlw	0
  4360  003690  2315               	addwfc	(_H10+14)& (0+255),f,b
  4361  003692                     l9085:
  4362                           
  4363                           ; BSR set to: 1
  4364                           ;gemsecs.c: 279:      rxData_l++;
  4365  003692  2A2A               	incf	r_protocol@rxData_l,f,c
  4366                           
  4367                           ; BSR set to: 1
  4368                           ;gemsecs.c: 280:      if (rxData_l > (r_block.length + 2)) {
  4369  003694  502A               	movf	r_protocol@rxData_l,w,c
  4370  003696  6E43               	movwf	btemp+10,c
  4371  003698  6A44               	clrf	btemp+11,c
  4372  00369A  51DC               	movf	(_r_block+12)& (0+255),w,b
  4373  00369C  6E41               	movwf	btemp+8,c
  4374  00369E  6A42               	clrf	btemp+9,c
  4375  0036A0  0E02               	movlw	2
  4376  0036A2  2641               	addwf	btemp+8,f,c
  4377  0036A4  0E00               	movlw	0
  4378  0036A6  2242               	addwfc	btemp+9,f,c
  4379  0036A8  5043               	movf	btemp+10,w,c
  4380  0036AA  5C41               	subwf	btemp+8,w,c
  4381  0036AC  5042               	movf	btemp+9,w,c
  4382  0036AE  0A80               	xorlw	128
  4383  0036B0  6E39               	movwf	btemp,c
  4384  0036B2  5044               	movf	btemp+11,w,c
  4385  0036B4  0A80               	xorlw	128
  4386  0036B6  5839               	subwfb	btemp,w,c
  4387  0036B8  B0D8               	btfsc	status,0,c
  4388  0036BA  D09C               	goto	l9145
  4389                           
  4390                           ; BSR set to: 1
  4391                           ;gemsecs.c: 281:       if (V.r_checksum == H10[1].checksum) {
  4392  0036BC  5114               	movf	(_H10+13)& (0+255),w,b
  4393  0036BE  0100               	movlb	0	; () banked
  4394  0036C0  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  4395  0036C2  E10E               	bnz	l9095
  4396  0036C4  0101               	movlb	1	; () banked
  4397  0036C6  5115               	movf	(_H10+14)& (0+255),w,b
  4398  0036C8  0100               	movlb	0	; () banked
  4399  0036CA  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  4400  0036CC  A4D8               	btfss	status,2,c
  4401  0036CE  D008               	goto	l9095
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;gemsecs.c: 282:        *r_link = LINK_STATE_ACK;
  4405                           ;stkvar	_r_link @ sp[(-1)+-1]
  4406  0036D0  0EFE               	movlw	-2
  4407  0036D2  50E3               	movf	plusw1,w,c
  4408  0036D4  6ED9               	movwf	fsr2l,c
  4409  0036D6  6ADA               	clrf	fsr2h,c
  4410  0036D8  0E03               	movlw	3
  4411  0036DA  D052               	goto	L10
  4412  0036DC                     l9093:
  4413  0036DC  EC07  F030         	call	_UART1_Read	;wreg free
  4414  0036E0                     l9095:
  4415                           
  4416                           ;gemsecs.c: 284:        while (UART1_is_rx_ready())
  4417  0036E0  EC07  F034         	call	_UART1_is_rx_ready	;wreg free
  4418  0036E4  5039               	movf	btemp,w,c
  4419  0036E6  A4D8               	btfss	status,2,c
  4420  0036E8  D7F9               	goto	l9093
  4421                           
  4422                           ;gemsecs.c: 286:        WaitMs(500);
  4423  0036EA  0EF4               	movlw	244
  4424  0036EC  6EE6               	movwf	postinc1,c
  4425  0036EE  0E01               	movlw	1
  4426  0036F0  6EE6               	movwf	postinc1,c
  4427  0036F2  EC60  F030         	call	_WaitMs	;wreg free
  4428                           
  4429                           ;gemsecs.c: 287:        V.error = LINK_ERROR_CHECKSUM;
  4430  0036F6  0E0F               	movlw	15
  4431  0036F8  0100               	movlb	0	; () banked
  4432  0036FA  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;gemsecs.c: 288:        V.checksum_error++;
  4436  0036FC  4BB7               	infsnz	(_V+87)& (0+255),f,b	;volatile
  4437  0036FE  2BB8               	incf	(_V+88)& (0+255),f,b	;volatile
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;gemsecs.c: 289:        V.failed_receive = 2;
  4441  003700  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  4442  003702  0BF0               	andlw	-16
  4443  003704  0902               	iorlw	2
  4444  003706  D739               	goto	L11
  4445  003708                     l9107:
  4446                           
  4447                           ;gemsecs.c: 298:   V.stream = H10[1].block.block.stream;
  4448  003708  0101               	movlb	1	; () banked
  4449  00370A  511D               	movf	(_H10+22)& (0+255),w,b
  4450  00370C  0B7F               	andlw	127
  4451  00370E  0100               	movlb	0	; () banked
  4452  003710  6FAE               	movwf	(_V+78)& (0+255),b	;volatile
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;gemsecs.c: 299:   V.function = H10[1].block.block.function;
  4456  003712  C11C  F0AF         	movff	_H10+21,_V+79	;volatile
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;gemsecs.c: 300:   V.systemb = H10[1].block.block.systemb;
  4460  003716  C116  F0AA         	movff	_H10+15,_V+74	;volatile
  4461  00371A  C117  F0AB         	movff	_H10+16,_V+75	;volatile
  4462  00371E  C118  F0AC         	movff	_H10+17,_V+76	;volatile
  4463  003722  C119  F0AD         	movff	_H10+18,_V+77	;volatile
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;gemsecs.c: 301:   V.rbit = H10[1].block.block.rbit;
  4467  003726  0101               	movlb	1	; () banked
  4468  003728  AF1F               	btfss	(_H10+24)& (0+255),7,b
  4469  00372A  D003               	bra	u5845
  4470  00372C  0100               	movlb	0	; () banked
  4471  00372E  81BB               	bsf	(_V+91)& (0+255),0,b	;volatile
  4472  003730  D002               	bra	u5847
  4473  003732                     u5845:
  4474  003732  0100               	movlb	0	; () banked
  4475  003734  91BB               	bcf	(_V+91)& (0+255),0,b	;volatile
  4476  003736                     u5847:
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;gemsecs.c: 302:   V.wbit = H10[1].block.block.wbit;
  4480  003736  0101               	movlb	1	; () banked
  4481  003738  AF1D               	btfss	(_H10+22)& (0+255),7,b
  4482  00373A  D003               	bra	u5855
  4483  00373C  0100               	movlb	0	; () banked
  4484  00373E  83BB               	bsf	(_V+91)& (0+255),1,b	;volatile
  4485  003740  D002               	bra	u5857
  4486  003742                     u5855:
  4487  003742  0100               	movlb	0	; () banked
  4488  003744  93BB               	bcf	(_V+91)& (0+255),1,b	;volatile
  4489  003746                     u5857:
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;gemsecs.c: 303:   V.ebit = H10[1].block.block.ebit;
  4493  003746  0101               	movlb	1	; () banked
  4494  003748  AF1B               	btfss	(_H10+20)& (0+255),7,b
  4495  00374A  D003               	bra	u5865
  4496  00374C  0100               	movlb	0	; () banked
  4497  00374E  85BB               	bsf	(_V+91)& (0+255),2,b	;volatile
  4498  003750  D002               	bra	u5867
  4499  003752                     u5865:
  4500  003752  0100               	movlb	0	; () banked
  4501  003754  95BB               	bcf	(_V+91)& (0+255),2,b	;volatile
  4502  003756                     u5867:
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;gemsecs.c: 304:   V.g_state = secs_gem_state(V.stream, V.function);
  4506  003756  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  4507  003758  6EE6               	movwf	postinc1,c
  4508  00375A  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  4509  00375C  6EE6               	movwf	postinc1,c
  4510  00375E  ECD9  F029         	call	_secs_gem_state	;wreg free
  4511  003762  5039               	movf	btemp,w,c
  4512  003764  0100               	movlb	0	; () banked
  4513  003766  6F62               	movwf	(_V+2)& (0+255),b	;volatile
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;gemsecs.c: 305:   UART1_Write(0x06);
  4517  003768  0E06               	movlw	6
  4518  00376A  6EE6               	movwf	postinc1,c
  4519  00376C  ECC9  F02F         	call	_UART1_Write	;wreg free
  4520                           
  4521                           ; BSR set to: 57
  4522                           ;gemsecs.c: 306:   V.failed_receive = 0;
  4523  003770  0EF0               	movlw	-16
  4524  003772  0100               	movlb	0	; () banked
  4525  003774  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;gemsecs.c: 307:   *r_link = LINK_STATE_DONE;
  4529                           ;stkvar	_r_link @ sp[(-1)+-1]
  4530  003776  0EFE               	movlw	-2
  4531  003778  50E3               	movf	plusw1,w,c
  4532  00377A  6ED9               	movwf	fsr2l,c
  4533  00377C  6ADA               	clrf	fsr2h,c
  4534  00377E  0E04               	movlw	4
  4535  003780                     L10:
  4536  003780  6EDF               	movwf	indf2,c
  4537                           
  4538                           ;gemsecs.c: 308:   break;
  4539  003782  D038               	goto	l9145
  4540  003784                     l9127:
  4541                           
  4542                           ;gemsecs.c: 310:   UART1_Write(0x15);
  4543  003784  0E15               	movlw	21
  4544  003786  6EE6               	movwf	postinc1,c
  4545  003788  ECC9  F02F         	call	_UART1_Write	;wreg free
  4546                           
  4547                           ; BSR set to: 57
  4548                           ;gemsecs.c: 311:   *r_link = LINK_STATE_ERROR;
  4549                           ;stkvar	_r_link @ sp[(-1)+-1]
  4550  00378C  0EFE               	movlw	-2
  4551  00378E  50E3               	movf	plusw1,w,c
  4552  003790  6ED9               	movwf	fsr2l,c
  4553  003792  6ADA               	clrf	fsr2h,c
  4554  003794  0E06               	movlw	6
  4555  003796  6EDF               	movwf	indf2,c
  4556                           
  4557                           ;gemsecs.c: 312:   while ((uart1RxCount)) {
  4558  003798  D002               	goto	l9133
  4559  00379A                     l9131:
  4560                           
  4561                           ; BSR set to: 57
  4562                           ;gemsecs.c: 313:    UART1_Read();
  4563  00379A  EC07  F030         	call	_UART1_Read	;wreg free
  4564  00379E                     l9133:
  4565                           
  4566                           ; BSR set to: 57
  4567                           ;gemsecs.c: 312:   while ((uart1RxCount)) {
  4568  00379E  5033               	movf	_uart1RxCount,w,c	;volatile
  4569  0037A0  A4D8               	btfss	status,2,c
  4570  0037A2  D7FB               	goto	l9131
  4571                           
  4572                           ; BSR set to: 57
  4573                           ;gemsecs.c: 315:   retry = 3;
  4574  0037A4  0E03               	movlw	3
  4575  0037A6  6E5D               	movwf	r_protocol@retry,c
  4576                           
  4577                           ;gemsecs.c: 316:   break;
  4578  0037A8  D025               	goto	l9145
  4579  0037AA                     l9137:
  4580                           
  4581                           ;gemsecs.c: 320:   V.failed_receive = 0;
  4582  0037AA  0EF0               	movlw	-16
  4583  0037AC  0100               	movlb	0	; () banked
  4584  0037AE  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  4585  0037B0  D6EB               	goto	l9043
  4586  0037B2                     l9143:
  4587                           
  4588                           ;stkvar	_r_link @ sp[(-1)+-1]
  4589  0037B2  0EFE               	movlw	-2
  4590  0037B4  50E3               	movf	plusw1,w,c
  4591  0037B6  6ED9               	movwf	fsr2l,c
  4592  0037B8  6ADA               	clrf	fsr2h,c
  4593  0037BA  50DF               	movf	indf2,w,c
  4594  0037BC  6E43               	movwf	btemp+10,c
  4595  0037BE  6A44               	clrf	btemp+11,c
  4596                           
  4597                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4598                           ; Switch size 1, requested type "simple"
  4599                           ; Number of cases is 1, Range of values is 0 to 0
  4600                           ; switch strategies available:
  4601                           ; Name         Instructions Cycles
  4602                           ; simple_byte            4     3 (average)
  4603                           ;	Chosen strategy is simple_byte
  4604  0037C0  5044               	movf	btemp+11,w,c
  4605  0037C2  0A00               	xorlw	0	; case 0
  4606  0037C4  A4D8               	btfss	status,2,c
  4607  0037C6  D6E0               	goto	l9043
  4608                           
  4609                           ; Switch size 1, requested type "simple"
  4610                           ; Number of cases is 7, Range of values is 0 to 6
  4611                           ; switch strategies available:
  4612                           ; Name         Instructions Cycles
  4613                           ; simple_byte           22    12 (average)
  4614                           ;	Chosen strategy is simple_byte
  4615  0037C8  5043               	movf	btemp+10,w,c
  4616  0037CA  0A00               	xorlw	0	; case 0
  4617  0037CC  B4D8               	btfsc	status,2,c
  4618  0037CE  D678               	goto	l9011
  4619  0037D0  0A01               	xorlw	1	; case 1
  4620  0037D2  B4D8               	btfsc	status,2,c
  4621  0037D4  D691               	goto	l1641
  4622  0037D6  0A03               	xorlw	3	; case 2
  4623  0037D8  B4D8               	btfsc	status,2,c
  4624  0037DA  D6BC               	goto	l9033
  4625  0037DC  0A01               	xorlw	1	; case 3
  4626  0037DE  B4D8               	btfsc	status,2,c
  4627  0037E0  D793               	goto	l9107
  4628  0037E2  0A07               	xorlw	7	; case 4
  4629  0037E4  B4D8               	btfsc	status,2,c
  4630  0037E6  D7E1               	goto	l9137
  4631  0037E8  0A01               	xorlw	1	; case 5
  4632  0037EA  B4D8               	btfsc	status,2,c
  4633  0037EC  D7CB               	goto	l9127
  4634  0037EE  0A03               	xorlw	3	; case 6
  4635  0037F0  A4D8               	btfss	status,2,c
  4636  0037F2  D6CA               	goto	l9043
  4637  0037F4                     l9145:
  4638                           
  4639                           ;gemsecs.c: 327:  return *r_link;
  4640                           ;stkvar	_r_link @ sp[(-1)+-1]
  4641  0037F4  0EFE               	movlw	-2
  4642  0037F6  50E3               	movf	plusw1,w,c
  4643  0037F8  6ED9               	movwf	fsr2l,c
  4644  0037FA  6ADA               	clrf	fsr2h,c
  4645  0037FC  50DF               	movf	indf2,w,c
  4646  0037FE  6E39               	movwf	btemp,c
  4647                           
  4648                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4649  003800  52E5               	movf	postdec1,f,c
  4650  003802  52E5               	movf	postdec1,f,c
  4651  003804  0012               	return		;funcret
  4652  003806                     __end_of_r_protocol:
  4653                           	opt callstack 0
  4654                           
  4655 ;; *************** function _m_protocol *****************
  4656 ;; Defined at:
  4657 ;;		line 46 in file "gemsecs.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;  m_link          1  [STACK] PTR enum E16173
  4660 ;;		 -> V(98), 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  rxData          1  [STACK] unsigned char 
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1  [STACK] enum E16913
  4665 ;; Registers used:
  4666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4676 ;;Total ram usage:        0 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    7
  4679 ;; This function calls:
  4680 ;;		_StartTimer
  4681 ;;		_TimerDone
  4682 ;;		_UART1_Read
  4683 ;;		_UART1_is_rx_ready
  4684 ;;		_UART2_Read
  4685 ;;		_UART2_is_rx_ready
  4686 ;;		_WaitMs
  4687 ;;		_rand
  4688 ;;		_run_checksum
  4689 ;;		_secs_gem_state
  4690 ;;		_secs_send
  4691 ;; This function is called by:
  4692 ;;		_main
  4693 ;; This function uses a reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text6
  4697  00267C                     __ptext6:
  4698                           	opt callstack 0
  4699  00267C                     _m_protocol:
  4700                           	opt callstack 0
  4701                           
  4702                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4703  00267C  52E6               	movf	postinc1,f,c
  4704                           
  4705                           ;gemsecs.c: 46: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 47: {;gemsecs.c: 
      +                          48:  uint8_t rxData;;gemsecs.c: 49:  static uint8_t rxData_l = 0;;gemsecs.c: 51:  switch
      +                           (*m_link) {
  4706                           
  4707                           ;incstack = 0
  4708  00267E  D25D               	goto	l9475
  4709  002680                     l9279:
  4710                           
  4711                           ;gemsecs.c: 54:   WaitMs(50);
  4712  002680  0E32               	movlw	50
  4713  002682  6EE6               	movwf	postinc1,c
  4714  002684  0E00               	movlw	0
  4715  002686  6EE6               	movwf	postinc1,c
  4716  002688  EC60  F030         	call	_WaitMs	;wreg free
  4717                           
  4718                           ;gemsecs.c: 56:   if (UART1_is_rx_ready()) {
  4719  00268C  EC07  F034         	call	_UART1_is_rx_ready	;wreg free
  4720  002690  5039               	movf	btemp,w,c
  4721  002692  B4D8               	btfsc	status,2,c
  4722  002694  D022               	goto	l9295
  4723                           
  4724                           ;gemsecs.c: 57:    rxData = UART1_Read();
  4725  002696  EC07  F030         	call	_UART1_Read	;wreg free
  4726                           
  4727                           ;stkvar	_rxData @ sp[(-1)+0]
  4728  00269A  0EFF               	movlw	-1
  4729  00269C  0060  F0E7  FFE3   	movff	btemp,plusw1
  4730                           
  4731                           ; BSR set to: 57
  4732                           ;gemsecs.c: 58:    if (rxData == 0x05) {
  4733                           ;stkvar	_rxData @ sp[(-1)+0]
  4734  0026A2  0EFF               	movlw	-1
  4735  0026A4  006F FF8C  F039    	movff	plusw1,btemp
  4736  0026AA  0E05               	movlw	5
  4737  0026AC  1839               	xorwf	btemp,w,c
  4738  0026AE  A4D8               	btfss	status,2,c
  4739  0026B0  D014               	goto	l9295
  4740                           
  4741                           ; BSR set to: 57
  4742                           ;gemsecs.c: 59:     V.uart = 1;
  4743  0026B2  0E01               	movlw	1
  4744  0026B4  0100               	movlb	0	; () banked
  4745  0026B6  6FC0               	movwf	(_V+96)& (0+255),b	;volatile
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;gemsecs.c: 60:     StartTimer(TMR_T2, 2000);
  4749  0026B8  0ED0               	movlw	208
  4750  0026BA  6EE6               	movwf	postinc1,c
  4751  0026BC  0E07               	movlw	7
  4752  0026BE  6EE6               	movwf	postinc1,c
  4753  0026C0  0E02               	movlw	2
  4754  0026C2  6EE6               	movwf	postinc1,c
  4755  0026C4  EC26  F030         	call	_StartTimer	;wreg free
  4756                           
  4757                           ;gemsecs.c: 61:     V.error = LINK_ERROR_NONE;
  4758  0026C8  0E0A               	movlw	10
  4759  0026CA  0100               	movlb	0	; () banked
  4760  0026CC  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;gemsecs.c: 62:     *m_link = LINK_STATE_ENQ;
  4764                           ;stkvar	_m_link @ sp[(-1)+-1]
  4765  0026CE  0EFE               	movlw	-2
  4766  0026D0  50E3               	movf	plusw1,w,c
  4767  0026D2  6ED9               	movwf	fsr2l,c
  4768  0026D4  6ADA               	clrf	fsr2h,c
  4769  0026D6  0E01               	movlw	1
  4770  0026D8  6EDF               	movwf	indf2,c
  4771  0026DA                     l9295:
  4772                           
  4773                           ;gemsecs.c: 65:   if (UART2_is_rx_ready()) {
  4774  0026DA  EC03  F034         	call	_UART2_is_rx_ready	;wreg free
  4775  0026DE  5039               	movf	btemp,w,c
  4776  0026E0  B4D8               	btfsc	status,2,c
  4777  0026E2  D24C               	goto	l9477
  4778                           
  4779                           ;gemsecs.c: 66:    rxData = UART2_Read();
  4780  0026E4  ECE8  F02F         	call	_UART2_Read	;wreg free
  4781                           
  4782                           ;stkvar	_rxData @ sp[(-1)+0]
  4783  0026E8  0EFF               	movlw	-1
  4784  0026EA  0060  F0E7  FFE3   	movff	btemp,plusw1
  4785                           
  4786                           ; BSR set to: 57
  4787                           ;gemsecs.c: 67:    if (rxData == 0x05) {
  4788                           ;stkvar	_rxData @ sp[(-1)+0]
  4789  0026F0  0EFF               	movlw	-1
  4790  0026F2  006F FF8C  F039    	movff	plusw1,btemp
  4791  0026F8  0E05               	movlw	5
  4792  0026FA  1839               	xorwf	btemp,w,c
  4793  0026FC  A4D8               	btfss	status,2,c
  4794  0026FE  D23E               	goto	l9477
  4795                           
  4796                           ; BSR set to: 57
  4797                           ;gemsecs.c: 68:     V.uart = 2;
  4798  002700  0E02               	movlw	2
  4799  002702  0100               	movlb	0	; () banked
  4800  002704  6FC0               	movwf	(_V+96)& (0+255),b	;volatile
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;gemsecs.c: 69:     StartTimer(TMR_T2, 2000);
  4804  002706  0ED0               	movlw	208
  4805  002708  6EE6               	movwf	postinc1,c
  4806  00270A  0E07               	movlw	7
  4807  00270C  6EE6               	movwf	postinc1,c
  4808  00270E  0E02               	movlw	2
  4809  002710  6EE6               	movwf	postinc1,c
  4810  002712  EC26  F030         	call	_StartTimer	;wreg free
  4811                           
  4812                           ;gemsecs.c: 70:     V.error = LINK_ERROR_NONE;
  4813  002716  0E0A               	movlw	10
  4814  002718  0100               	movlb	0	; () banked
  4815  00271A  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;gemsecs.c: 71:     *m_link = LINK_STATE_ENQ;
  4819                           ;stkvar	_m_link @ sp[(-1)+-1]
  4820  00271C  0EFE               	movlw	-2
  4821  00271E  50E3               	movf	plusw1,w,c
  4822  002720  6ED9               	movwf	fsr2l,c
  4823  002722  6ADA               	clrf	fsr2h,c
  4824  002724  0E01               	movlw	1
  4825  002726  D207               	goto	L17
  4826  002728                     l1584:
  4827                           
  4828                           ;gemsecs.c: 76:   rxData_l = 0;
  4829  002728  6A2B               	clrf	m_protocol@rxData_l,c
  4830                           
  4831                           ;gemsecs.c: 78:   WaitMs(50);
  4832  00272A  0E32               	movlw	50
  4833  00272C  6EE6               	movwf	postinc1,c
  4834  00272E  0E00               	movlw	0
  4835  002730  6EE6               	movwf	postinc1,c
  4836  002732  EC60  F030         	call	_WaitMs	;wreg free
  4837                           
  4838                           ;gemsecs.c: 79:   if (V.uart == 1)
  4839  002736  0100               	movlb	0	; () banked
  4840  002738  05C0               	decf	(_V+96)& (0+255),w,b	;volatile
  4841  00273A  A4D8               	btfss	status,2,c
  4842  00273C  D016               	goto	l9317
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;gemsecs.c: 81:    if (rand() < 31000)
  4846  00273E  EC64  F026         	call	_rand	;wreg free
  4847  002742  BE3A               	btfsc	btemp+1,7,c
  4848  002744  D006               	goto	u6090
  4849  002746  0E18               	movlw	24
  4850  002748  5C39               	subwf	btemp,w,c
  4851  00274A  0E79               	movlw	121
  4852  00274C  583A               	subwfb	btemp+1,w,c
  4853  00274E  B0D8               	btfsc	status,0,c
  4854  002750  D00C               	goto	l9317
  4855  002752                     u6090:
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;gemsecs.c: 83:     secs_send((uint8_t*) & H27[0], sizeof(header27), 1, V.uart);
  4859  002752  51C0               	movf	(_V+96)& (0+255),w,b	;volatile
  4860  002754  6EE6               	movwf	postinc1,c
  4861  002756  0E01               	movlw	1
  4862  002758  6EE6               	movwf	postinc1,c
  4863  00275A  0E1E               	movlw	30
  4864  00275C  6EE6               	movwf	postinc1,c
  4865  00275E  0EC0               	movlw	low _H27
  4866  002760  6EE6               	movwf	postinc1,c
  4867  002762  0E02               	movlw	high _H27
  4868  002764  6EE6               	movwf	postinc1,c
  4869  002766  EC78  F021         	call	_secs_send	;wreg free
  4870  00276A                     l9317:
  4871                           
  4872                           ;gemsecs.c: 84:   if (V.uart == 2)
  4873  00276A  0E02               	movlw	2
  4874  00276C  0100               	movlb	0	; () banked
  4875  00276E  19C0               	xorwf	(_V+96)& (0+255),w,b	;volatile
  4876  002770  A4D8               	btfss	status,2,c
  4877  002772  D016               	goto	l9323
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;gemsecs.c: 86:    if (rand() < 31000)
  4881  002774  EC64  F026         	call	_rand	;wreg free
  4882  002778  BE3A               	btfsc	btemp+1,7,c
  4883  00277A  D006               	goto	u6110
  4884  00277C  0E18               	movlw	24
  4885  00277E  5C39               	subwf	btemp,w,c
  4886  002780  0E79               	movlw	121
  4887  002782  583A               	subwfb	btemp+1,w,c
  4888  002784  B0D8               	btfsc	status,0,c
  4889  002786  D00C               	goto	l9323
  4890  002788                     u6110:
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;gemsecs.c: 88:     secs_send((uint8_t*) & H10[0], sizeof(header10), 1, V.uart);
  4894  002788  51C0               	movf	(_V+96)& (0+255),w,b	;volatile
  4895  00278A  6EE6               	movwf	postinc1,c
  4896  00278C  0E01               	movlw	1
  4897  00278E  6EE6               	movwf	postinc1,c
  4898  002790  0E0D               	movlw	13
  4899  002792  6EE6               	movwf	postinc1,c
  4900  002794  0E07               	movlw	low _H10
  4901  002796  6EE6               	movwf	postinc1,c
  4902  002798  0E01               	movlw	high _H10
  4903  00279A  6EE6               	movwf	postinc1,c
  4904  00279C  EC78  F021         	call	_secs_send	;wreg free
  4905  0027A0                     l9323:
  4906                           
  4907                           ;gemsecs.c: 90:   V.error = LINK_ERROR_NONE;
  4908  0027A0  0E0A               	movlw	10
  4909  0027A2  0100               	movlb	0	; () banked
  4910  0027A4  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;gemsecs.c: 91:   *m_link = LINK_STATE_EOT;
  4914                           ;stkvar	_m_link @ sp[(-1)+-1]
  4915  0027A6  0EFE               	movlw	-2
  4916  0027A8  50E3               	movf	plusw1,w,c
  4917  0027AA  6ED9               	movwf	fsr2l,c
  4918  0027AC  6ADA               	clrf	fsr2h,c
  4919  0027AE  0E02               	movlw	2
  4920  0027B0  6EDF               	movwf	indf2,c
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;gemsecs.c: 92:   StartTimer(TMR_T2, 2000);
  4924  0027B2  0ED0               	movlw	208
  4925  0027B4  6EE6               	movwf	postinc1,c
  4926  0027B6  0E07               	movlw	7
  4927  0027B8  6EE6               	movwf	postinc1,c
  4928  0027BA  0E02               	movlw	2
  4929  0027BC  6EE6               	movwf	postinc1,c
  4930  0027BE  EC26  F030         	call	_StartTimer	;wreg free
  4931                           
  4932                           ;gemsecs.c: 93:   break;
  4933  0027C2  D1DC               	goto	l9477
  4934  0027C4                     l9329:
  4935                           
  4936                           ;gemsecs.c: 95:   if (TimerDone(TMR_T2)) {
  4937  0027C4  0E02               	movlw	2
  4938  0027C6  6EE6               	movwf	postinc1,c
  4939  0027C8  EC95  F032         	call	_TimerDone	;wreg free
  4940  0027CC  5039               	movf	btemp,w,c
  4941  0027CE  B4D8               	btfsc	status,2,c
  4942  0027D0  D00F               	goto	l9339
  4943                           
  4944                           ;gemsecs.c: 96:    V.error = LINK_ERROR_T2;
  4945  0027D2  0E0C               	movlw	12
  4946  0027D4  0100               	movlb	0	; () banked
  4947  0027D6  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4948                           
  4949                           ; BSR set to: 0
  4950                           ;gemsecs.c: 97:    V.timer_error++;
  4951  0027D8  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  4952  0027DA  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;gemsecs.c: 98:    V.failed_receive = 2;
  4956  0027DC  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  4957  0027DE  0BF0               	andlw	-16
  4958  0027E0  0902               	iorlw	2
  4959  0027E2  6FBC               	movwf	(_V+92)& (0+255),b	;volatile
  4960                           
  4961                           ; BSR set to: 0
  4962                           ;gemsecs.c: 99:    *m_link = LINK_STATE_NAK;
  4963                           ;stkvar	_m_link @ sp[(-1)+-1]
  4964  0027E4  0EFE               	movlw	-2
  4965  0027E6  50E3               	movf	plusw1,w,c
  4966  0027E8  6ED9               	movwf	fsr2l,c
  4967  0027EA  6ADA               	clrf	fsr2h,c
  4968  0027EC  0E05               	movlw	5
  4969  0027EE  D1A3               	goto	L17
  4970  0027F0                     l9339:
  4971                           
  4972                           ;gemsecs.c: 101:    if (UART1_is_rx_ready()) {
  4973  0027F0  EC07  F034         	call	_UART1_is_rx_ready	;wreg free
  4974  0027F4  5039               	movf	btemp,w,c
  4975  0027F6  B4D8               	btfsc	status,2,c
  4976  0027F8  D0A3               	goto	l9389
  4977                           
  4978                           ;gemsecs.c: 102:     rxData = UART1_Read();
  4979  0027FA  EC07  F030         	call	_UART1_Read	;wreg free
  4980                           
  4981                           ;stkvar	_rxData @ sp[(-1)+0]
  4982  0027FE  0EFF               	movlw	-1
  4983  002800  0060  F0E7  FFE3   	movff	btemp,plusw1
  4984                           
  4985                           ; BSR set to: 57
  4986                           ;gemsecs.c: 103:     if (rxData_l == 0) {
  4987  002806  502B               	movf	m_protocol@rxData_l,w,c
  4988  002808  A4D8               	btfss	status,2,c
  4989  00280A  D00C               	goto	l9351
  4990                           
  4991                           ; BSR set to: 57
  4992                           ;gemsecs.c: 104:      r_block.length = rxData;
  4993                           ;stkvar	_rxData @ sp[(-1)+0]
  4994  00280C  0EFF               	movlw	-1
  4995  00280E  006F FF8C  F1DC    	movff	plusw1,_r_block+12
  4996                           
  4997                           ; BSR set to: 57
  4998                           ;gemsecs.c: 105:      run_checksum(0, 1);
  4999  002814  0E01               	movlw	1
  5000  002816  6EE6               	movwf	postinc1,c
  5001  002818  0E00               	movlw	0
  5002  00281A  6EE6               	movwf	postinc1,c
  5003  00281C  EC95  F030         	call	_run_checksum	;wreg free
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;gemsecs.c: 106:      rxData_l++;
  5007  002820  2A2B               	incf	m_protocol@rxData_l,f,c
  5008                           
  5009                           ;gemsecs.c: 107:     } else {
  5010  002822  D08E               	goto	l9389
  5011  002824                     l9351:
  5012                           
  5013                           ; BSR set to: 57
  5014                           ;gemsecs.c: 111:      if (rxData_l <= sizeof(block10))
  5015  002824  0E0B               	movlw	11
  5016  002826  602B               	cpfslt	m_protocol@rxData_l,c
  5017  002828  D00C               	goto	l9355
  5018                           
  5019                           ; BSR set to: 57
  5020                           ;gemsecs.c: 112:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5021                           ;stkvar	_rxData @ sp[(-1)+0]
  5022  00282A  502B               	movf	m_protocol@rxData_l,w,c
  5023  00282C  0820               	sublw	low (_H10+25)
  5024  00282E  6ED9               	movwf	fsr2l,c
  5025  002830  0E00               	movlw	0
  5026  002832  A0D8               	btfss	status,0,c
  5027  002834  2AE8               	incf	wreg,f,c
  5028  002836  0801               	sublw	high (_H10+25)
  5029  002838  6EDA               	movwf	fsr2h,c
  5030  00283A  0EFF               	movlw	-1
  5031  00283C  006F FF8F FFDF     	movff	plusw1,indf2
  5032  002842                     l9355:
  5033                           
  5034                           ; BSR set to: 57
  5035                           ;gemsecs.c: 113:      if (rxData_l <= r_block.length)
  5036  002842  502B               	movf	m_protocol@rxData_l,w,c
  5037  002844  0101               	movlb	1	; () banked
  5038  002846  5DDC               	subwf	(_r_block+12)& (0+255),w,b
  5039  002848  A0D8               	btfss	status,0,c
  5040  00284A  D00D               	goto	l9359
  5041                           
  5042                           ; BSR set to: 1
  5043                           ;gemsecs.c: 114:       V.r_checksum = run_checksum(rxData, 0);
  5044  00284C  0E00               	movlw	0
  5045  00284E  6EE6               	movwf	postinc1,c
  5046                           
  5047                           ;stkvar	_rxData @ sp[(-2)+0]
  5048  002850  0EFE               	movlw	-2
  5049  002852  50E3               	movf	plusw1,w,c
  5050  002854  6EE6               	movwf	postinc1,c
  5051  002856  EC95  F030         	call	_run_checksum	;wreg free
  5052  00285A  0060  F0E4  F0B3   	movff	btemp,_V+83	;volatile
  5053  002860  0060  F0E8  F0B4   	movff	btemp+1,_V+84	;volatile
  5054  002866                     l9359:
  5055                           
  5056                           ;gemsecs.c: 116:      if (rxData_l == r_block.length + 1)
  5057  002866  502B               	movf	m_protocol@rxData_l,w,c
  5058  002868  6E43               	movwf	btemp+10,c
  5059  00286A  6A44               	clrf	btemp+11,c
  5060  00286C  0101               	movlb	1	; () banked
  5061  00286E  51DC               	movf	(_r_block+12)& (0+255),w,b
  5062  002870  6E41               	movwf	btemp+8,c
  5063  002872  6A42               	clrf	btemp+9,c
  5064  002874  0E01               	movlw	1
  5065  002876  2641               	addwf	btemp+8,f,c
  5066  002878  0E00               	movlw	0
  5067  00287A  2242               	addwfc	btemp+9,f,c
  5068  00287C  5043               	movf	btemp+10,w,c
  5069  00287E  1841               	xorwf	btemp+8,w,c
  5070  002880  E108               	bnz	l9363
  5071  002882  5044               	movf	btemp+11,w,c
  5072  002884  1842               	xorwf	btemp+9,w,c
  5073  002886  A4D8               	btfss	status,2,c
  5074  002888  D004               	goto	l9363
  5075                           
  5076                           ; BSR set to: 1
  5077                           ;gemsecs.c: 117:       H10[1].checksum = (uint16_t) rxData << 8;
  5078                           ;stkvar	_rxData @ sp[(-1)+0]
  5079  00288A  0EFF               	movlw	-1
  5080  00288C  50E3               	movf	plusw1,w,c
  5081  00288E  6F15               	movwf	(_H10+14)& (0+255),b
  5082  002890  6B14               	clrf	(_H10+13)& (0+255),b
  5083  002892                     l9363:
  5084                           
  5085                           ; BSR set to: 1
  5086                           ;gemsecs.c: 118:      if (rxData_l == r_block.length + 2)
  5087  002892  502B               	movf	m_protocol@rxData_l,w,c
  5088  002894  6E43               	movwf	btemp+10,c
  5089  002896  6A44               	clrf	btemp+11,c
  5090  002898  51DC               	movf	(_r_block+12)& (0+255),w,b
  5091  00289A  6E41               	movwf	btemp+8,c
  5092  00289C  6A42               	clrf	btemp+9,c
  5093  00289E  0E02               	movlw	2
  5094  0028A0  2641               	addwf	btemp+8,f,c
  5095  0028A2  0E00               	movlw	0
  5096  0028A4  2242               	addwfc	btemp+9,f,c
  5097  0028A6  5043               	movf	btemp+10,w,c
  5098  0028A8  1841               	xorwf	btemp+8,w,c
  5099  0028AA  E109               	bnz	l9367
  5100  0028AC  5044               	movf	btemp+11,w,c
  5101  0028AE  1842               	xorwf	btemp+9,w,c
  5102  0028B0  A4D8               	btfss	status,2,c
  5103  0028B2  D005               	goto	l9367
  5104                           
  5105                           ; BSR set to: 1
  5106                           ;gemsecs.c: 119:       H10[1].checksum += rxData;
  5107                           ;stkvar	_rxData @ sp[(-1)+0]
  5108  0028B4  0EFF               	movlw	-1
  5109  0028B6  50E3               	movf	plusw1,w,c
  5110  0028B8  2714               	addwf	(_H10+13)& (0+255),f,b
  5111  0028BA  0E00               	movlw	0
  5112  0028BC  2315               	addwfc	(_H10+14)& (0+255),f,b
  5113  0028BE                     l9367:
  5114                           
  5115                           ; BSR set to: 1
  5116                           ;gemsecs.c: 121:      rxData_l++;
  5117  0028BE  2A2B               	incf	m_protocol@rxData_l,f,c
  5118                           
  5119                           ; BSR set to: 1
  5120                           ;gemsecs.c: 122:      if (rxData_l > (r_block.length + 2)) {
  5121  0028C0  502B               	movf	m_protocol@rxData_l,w,c
  5122  0028C2  6E43               	movwf	btemp+10,c
  5123  0028C4  6A44               	clrf	btemp+11,c
  5124  0028C6  51DC               	movf	(_r_block+12)& (0+255),w,b
  5125  0028C8  6E41               	movwf	btemp+8,c
  5126  0028CA  6A42               	clrf	btemp+9,c
  5127  0028CC  0E02               	movlw	2
  5128  0028CE  2641               	addwf	btemp+8,f,c
  5129  0028D0  0E00               	movlw	0
  5130  0028D2  2242               	addwfc	btemp+9,f,c
  5131  0028D4  5043               	movf	btemp+10,w,c
  5132  0028D6  5C41               	subwf	btemp+8,w,c
  5133  0028D8  5042               	movf	btemp+9,w,c
  5134  0028DA  0A80               	xorlw	128
  5135  0028DC  6E39               	movwf	btemp,c
  5136  0028DE  5044               	movf	btemp+11,w,c
  5137  0028E0  0A80               	xorlw	128
  5138  0028E2  5839               	subwfb	btemp,w,c
  5139  0028E4  B0D8               	btfsc	status,0,c
  5140  0028E6  D02C               	goto	l9389
  5141                           
  5142                           ; BSR set to: 1
  5143                           ;gemsecs.c: 123:       if (V.r_checksum == H10[1].checksum) {
  5144  0028E8  5114               	movf	(_H10+13)& (0+255),w,b
  5145  0028EA  0100               	movlb	0	; () banked
  5146  0028EC  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  5147  0028EE  E10E               	bnz	l9377
  5148  0028F0  0101               	movlb	1	; () banked
  5149  0028F2  5115               	movf	(_H10+14)& (0+255),w,b
  5150  0028F4  0100               	movlb	0	; () banked
  5151  0028F6  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  5152  0028F8  A4D8               	btfss	status,2,c
  5153  0028FA  D008               	goto	l9377
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;gemsecs.c: 124:        *m_link = LINK_STATE_ACK;
  5157                           ;stkvar	_m_link @ sp[(-1)+-1]
  5158  0028FC  0EFE               	movlw	-2
  5159  0028FE  50E3               	movf	plusw1,w,c
  5160  002900  6ED9               	movwf	fsr2l,c
  5161  002902  6ADA               	clrf	fsr2h,c
  5162  002904  0E03               	movlw	3
  5163  002906  D01B               	goto	L14
  5164  002908                     l9375:
  5165  002908  EC07  F030         	call	_UART1_Read	;wreg free
  5166  00290C                     l9377:
  5167                           
  5168                           ;gemsecs.c: 126:        while (UART1_is_rx_ready())
  5169  00290C  EC07  F034         	call	_UART1_is_rx_ready	;wreg free
  5170  002910  5039               	movf	btemp,w,c
  5171  002912  A4D8               	btfss	status,2,c
  5172  002914  D7F9               	goto	l9375
  5173                           
  5174                           ;gemsecs.c: 128:        WaitMs(500);
  5175  002916  0EF4               	movlw	244
  5176  002918  6EE6               	movwf	postinc1,c
  5177  00291A  0E01               	movlw	1
  5178  00291C  6EE6               	movwf	postinc1,c
  5179  00291E  EC60  F030         	call	_WaitMs	;wreg free
  5180                           
  5181                           ;gemsecs.c: 129:        V.error = LINK_ERROR_CHECKSUM;
  5182  002922  0E0F               	movlw	15
  5183  002924  0100               	movlb	0	; () banked
  5184  002926  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;gemsecs.c: 130:        V.checksum_error++;
  5188  002928  4BB7               	infsnz	(_V+87)& (0+255),f,b	;volatile
  5189  00292A  2BB8               	incf	(_V+88)& (0+255),f,b	;volatile
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;gemsecs.c: 131:        V.failed_receive = 3;
  5193  00292C  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  5194  00292E  0BF0               	andlw	-16
  5195  002930  0903               	iorlw	3
  5196  002932  6FBC               	movwf	(_V+92)& (0+255),b	;volatile
  5197                           
  5198                           ; BSR set to: 0
  5199                           ;gemsecs.c: 132:        *m_link = LINK_STATE_NAK;
  5200                           ;stkvar	_m_link @ sp[(-1)+-1]
  5201  002934  0EFE               	movlw	-2
  5202  002936  50E3               	movf	plusw1,w,c
  5203  002938  6ED9               	movwf	fsr2l,c
  5204  00293A  6ADA               	clrf	fsr2h,c
  5205  00293C  0E05               	movlw	5
  5206  00293E                     L14:
  5207  00293E  6EDF               	movwf	indf2,c
  5208  002940                     l9389:
  5209                           
  5210                           ;gemsecs.c: 138:    if (UART2_is_rx_ready()) {
  5211  002940  EC03  F034         	call	_UART2_is_rx_ready	;wreg free
  5212  002944  5039               	movf	btemp,w,c
  5213  002946  B4D8               	btfsc	status,2,c
  5214  002948  D119               	goto	l9477
  5215                           
  5216                           ;gemsecs.c: 139:     rxData = UART2_Read();
  5217  00294A  ECE8  F02F         	call	_UART2_Read	;wreg free
  5218                           
  5219                           ;stkvar	_rxData @ sp[(-1)+0]
  5220  00294E  0EFF               	movlw	-1
  5221  002950  0060  F0E7  FFE3   	movff	btemp,plusw1
  5222                           
  5223                           ; BSR set to: 57
  5224                           ;gemsecs.c: 140:     if (rxData_l == 0) {
  5225  002956  502B               	movf	m_protocol@rxData_l,w,c
  5226  002958  A4D8               	btfss	status,2,c
  5227  00295A  D00C               	goto	l9401
  5228                           
  5229                           ; BSR set to: 57
  5230                           ;gemsecs.c: 141:      r_block.length = rxData;
  5231                           ;stkvar	_rxData @ sp[(-1)+0]
  5232  00295C  0EFF               	movlw	-1
  5233  00295E  006F FF8C  F1DC    	movff	plusw1,_r_block+12
  5234                           
  5235                           ; BSR set to: 57
  5236                           ;gemsecs.c: 142:      run_checksum(0, 1);
  5237  002964  0E01               	movlw	1
  5238  002966  6EE6               	movwf	postinc1,c
  5239  002968  0E00               	movlw	0
  5240  00296A  6EE6               	movwf	postinc1,c
  5241  00296C  EC95  F030         	call	_run_checksum	;wreg free
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;gemsecs.c: 143:      rxData_l++;
  5245  002970  2A2B               	incf	m_protocol@rxData_l,f,c
  5246                           
  5247                           ;gemsecs.c: 144:     } else {
  5248  002972  D104               	goto	l9477
  5249  002974                     l9401:
  5250                           
  5251                           ; BSR set to: 57
  5252                           ;gemsecs.c: 148:      if (rxData_l <= sizeof(block10))
  5253  002974  0E0B               	movlw	11
  5254  002976  602B               	cpfslt	m_protocol@rxData_l,c
  5255  002978  D00C               	goto	l9405
  5256                           
  5257                           ; BSR set to: 57
  5258                           ;gemsecs.c: 149:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5259                           ;stkvar	_rxData @ sp[(-1)+0]
  5260  00297A  502B               	movf	m_protocol@rxData_l,w,c
  5261  00297C  0820               	sublw	low (_H10+25)
  5262  00297E  6ED9               	movwf	fsr2l,c
  5263  002980  0E00               	movlw	0
  5264  002982  A0D8               	btfss	status,0,c
  5265  002984  2AE8               	incf	wreg,f,c
  5266  002986  0801               	sublw	high (_H10+25)
  5267  002988  6EDA               	movwf	fsr2h,c
  5268  00298A  0EFF               	movlw	-1
  5269  00298C  006F FF8F FFDF     	movff	plusw1,indf2
  5270  002992                     l9405:
  5271                           
  5272                           ; BSR set to: 57
  5273                           ;gemsecs.c: 150:      if (rxData_l <= r_block.length)
  5274  002992  502B               	movf	m_protocol@rxData_l,w,c
  5275  002994  0101               	movlb	1	; () banked
  5276  002996  5DDC               	subwf	(_r_block+12)& (0+255),w,b
  5277  002998  A0D8               	btfss	status,0,c
  5278  00299A  D00D               	goto	l9409
  5279                           
  5280                           ; BSR set to: 1
  5281                           ;gemsecs.c: 151:       V.r_checksum = run_checksum(rxData, 0);
  5282  00299C  0E00               	movlw	0
  5283  00299E  6EE6               	movwf	postinc1,c
  5284                           
  5285                           ;stkvar	_rxData @ sp[(-2)+0]
  5286  0029A0  0EFE               	movlw	-2
  5287  0029A2  50E3               	movf	plusw1,w,c
  5288  0029A4  6EE6               	movwf	postinc1,c
  5289  0029A6  EC95  F030         	call	_run_checksum	;wreg free
  5290  0029AA  0060  F0E4  F0B3   	movff	btemp,_V+83	;volatile
  5291  0029B0  0060  F0E8  F0B4   	movff	btemp+1,_V+84	;volatile
  5292  0029B6                     l9409:
  5293                           
  5294                           ;gemsecs.c: 153:      if (rxData_l == r_block.length + 1)
  5295  0029B6  502B               	movf	m_protocol@rxData_l,w,c
  5296  0029B8  6E43               	movwf	btemp+10,c
  5297  0029BA  6A44               	clrf	btemp+11,c
  5298  0029BC  0101               	movlb	1	; () banked
  5299  0029BE  51DC               	movf	(_r_block+12)& (0+255),w,b
  5300  0029C0  6E41               	movwf	btemp+8,c
  5301  0029C2  6A42               	clrf	btemp+9,c
  5302  0029C4  0E01               	movlw	1
  5303  0029C6  2641               	addwf	btemp+8,f,c
  5304  0029C8  0E00               	movlw	0
  5305  0029CA  2242               	addwfc	btemp+9,f,c
  5306  0029CC  5043               	movf	btemp+10,w,c
  5307  0029CE  1841               	xorwf	btemp+8,w,c
  5308  0029D0  E108               	bnz	l9413
  5309  0029D2  5044               	movf	btemp+11,w,c
  5310  0029D4  1842               	xorwf	btemp+9,w,c
  5311  0029D6  A4D8               	btfss	status,2,c
  5312  0029D8  D004               	goto	l9413
  5313                           
  5314                           ; BSR set to: 1
  5315                           ;gemsecs.c: 154:       H10[1].checksum = (uint16_t) rxData << 8;
  5316                           ;stkvar	_rxData @ sp[(-1)+0]
  5317  0029DA  0EFF               	movlw	-1
  5318  0029DC  50E3               	movf	plusw1,w,c
  5319  0029DE  6F15               	movwf	(_H10+14)& (0+255),b
  5320  0029E0  6B14               	clrf	(_H10+13)& (0+255),b
  5321  0029E2                     l9413:
  5322                           
  5323                           ; BSR set to: 1
  5324                           ;gemsecs.c: 155:      if (rxData_l == r_block.length + 2)
  5325  0029E2  502B               	movf	m_protocol@rxData_l,w,c
  5326  0029E4  6E43               	movwf	btemp+10,c
  5327  0029E6  6A44               	clrf	btemp+11,c
  5328  0029E8  51DC               	movf	(_r_block+12)& (0+255),w,b
  5329  0029EA  6E41               	movwf	btemp+8,c
  5330  0029EC  6A42               	clrf	btemp+9,c
  5331  0029EE  0E02               	movlw	2
  5332  0029F0  2641               	addwf	btemp+8,f,c
  5333  0029F2  0E00               	movlw	0
  5334  0029F4  2242               	addwfc	btemp+9,f,c
  5335  0029F6  5043               	movf	btemp+10,w,c
  5336  0029F8  1841               	xorwf	btemp+8,w,c
  5337  0029FA  E109               	bnz	l9417
  5338  0029FC  5044               	movf	btemp+11,w,c
  5339  0029FE  1842               	xorwf	btemp+9,w,c
  5340  002A00  A4D8               	btfss	status,2,c
  5341  002A02  D005               	goto	l9417
  5342                           
  5343                           ; BSR set to: 1
  5344                           ;gemsecs.c: 156:       H10[1].checksum += rxData;
  5345                           ;stkvar	_rxData @ sp[(-1)+0]
  5346  002A04  0EFF               	movlw	-1
  5347  002A06  50E3               	movf	plusw1,w,c
  5348  002A08  2714               	addwf	(_H10+13)& (0+255),f,b
  5349  002A0A  0E00               	movlw	0
  5350  002A0C  2315               	addwfc	(_H10+14)& (0+255),f,b
  5351  002A0E                     l9417:
  5352                           
  5353                           ; BSR set to: 1
  5354                           ;gemsecs.c: 158:      rxData_l++;
  5355  002A0E  2A2B               	incf	m_protocol@rxData_l,f,c
  5356                           
  5357                           ; BSR set to: 1
  5358                           ;gemsecs.c: 159:      if (rxData_l > (r_block.length + 2)) {
  5359  002A10  502B               	movf	m_protocol@rxData_l,w,c
  5360  002A12  6E43               	movwf	btemp+10,c
  5361  002A14  6A44               	clrf	btemp+11,c
  5362  002A16  51DC               	movf	(_r_block+12)& (0+255),w,b
  5363  002A18  6E41               	movwf	btemp+8,c
  5364  002A1A  6A42               	clrf	btemp+9,c
  5365  002A1C  0E02               	movlw	2
  5366  002A1E  2641               	addwf	btemp+8,f,c
  5367  002A20  0E00               	movlw	0
  5368  002A22  2242               	addwfc	btemp+9,f,c
  5369  002A24  5043               	movf	btemp+10,w,c
  5370  002A26  5C41               	subwf	btemp+8,w,c
  5371  002A28  5042               	movf	btemp+9,w,c
  5372  002A2A  0A80               	xorlw	128
  5373  002A2C  6E39               	movwf	btemp,c
  5374  002A2E  5044               	movf	btemp+11,w,c
  5375  002A30  0A80               	xorlw	128
  5376  002A32  5839               	subwfb	btemp,w,c
  5377  002A34  B0D8               	btfsc	status,0,c
  5378  002A36  D0A2               	goto	l9477
  5379                           
  5380                           ; BSR set to: 1
  5381                           ;gemsecs.c: 160:       if (V.r_checksum == H10[1].checksum) {
  5382  002A38  5114               	movf	(_H10+13)& (0+255),w,b
  5383  002A3A  0100               	movlb	0	; () banked
  5384  002A3C  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  5385  002A3E  E10E               	bnz	l9427
  5386  002A40  0101               	movlb	1	; () banked
  5387  002A42  5115               	movf	(_H10+14)& (0+255),w,b
  5388  002A44  0100               	movlb	0	; () banked
  5389  002A46  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  5390  002A48  A4D8               	btfss	status,2,c
  5391  002A4A  D008               	goto	l9427
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;gemsecs.c: 161:        *m_link = LINK_STATE_ACK;
  5395                           ;stkvar	_m_link @ sp[(-1)+-1]
  5396  002A4C  0EFE               	movlw	-2
  5397  002A4E  50E3               	movf	plusw1,w,c
  5398  002A50  6ED9               	movwf	fsr2l,c
  5399  002A52  6ADA               	clrf	fsr2h,c
  5400  002A54  0E03               	movlw	3
  5401  002A56  D06F               	goto	L17
  5402  002A58                     l9425:
  5403  002A58  ECE8  F02F         	call	_UART2_Read	;wreg free
  5404  002A5C                     l9427:
  5405                           
  5406                           ;gemsecs.c: 163:        while (UART2_is_rx_ready())
  5407  002A5C  EC03  F034         	call	_UART2_is_rx_ready	;wreg free
  5408  002A60  5039               	movf	btemp,w,c
  5409  002A62  A4D8               	btfss	status,2,c
  5410  002A64  D7F9               	goto	l9425
  5411                           
  5412                           ;gemsecs.c: 165:        WaitMs(500);
  5413  002A66  0EF4               	movlw	244
  5414  002A68  6EE6               	movwf	postinc1,c
  5415  002A6A  0E01               	movlw	1
  5416  002A6C  6EE6               	movwf	postinc1,c
  5417  002A6E  EC60  F030         	call	_WaitMs	;wreg free
  5418                           
  5419                           ;gemsecs.c: 166:        V.error = LINK_ERROR_CHECKSUM;
  5420  002A72  0E0F               	movlw	15
  5421  002A74  0100               	movlb	0	; () banked
  5422  002A76  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;gemsecs.c: 167:        V.checksum_error++;
  5426  002A78  4BB7               	infsnz	(_V+87)& (0+255),f,b	;volatile
  5427  002A7A  2BB8               	incf	(_V+88)& (0+255),f,b	;volatile
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;gemsecs.c: 168:        V.failed_receive = 4;
  5431  002A7C  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  5432  002A7E  0BF0               	andlw	-16
  5433  002A80  0904               	iorlw	4
  5434  002A82  D6AF               	goto	L16
  5435  002A84                     l9439:
  5436                           
  5437                           ;gemsecs.c: 178:   WaitMs(50);
  5438  002A84  0E32               	movlw	50
  5439  002A86  6EE6               	movwf	postinc1,c
  5440  002A88  0E00               	movlw	0
  5441  002A8A  6EE6               	movwf	postinc1,c
  5442  002A8C  EC60  F030         	call	_WaitMs	;wreg free
  5443                           
  5444                           ;gemsecs.c: 180:   V.stream = H10[1].block.block.stream;
  5445  002A90  0101               	movlb	1	; () banked
  5446  002A92  511D               	movf	(_H10+22)& (0+255),w,b
  5447  002A94  0B7F               	andlw	127
  5448  002A96  0100               	movlb	0	; () banked
  5449  002A98  6FAE               	movwf	(_V+78)& (0+255),b	;volatile
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;gemsecs.c: 181:   V.function = H10[1].block.block.function;
  5453  002A9A  C11C  F0AF         	movff	_H10+21,_V+79	;volatile
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;gemsecs.c: 182:   V.systemb = H10[1].block.block.systemb;
  5457  002A9E  C116  F0AA         	movff	_H10+15,_V+74	;volatile
  5458  002AA2  C117  F0AB         	movff	_H10+16,_V+75	;volatile
  5459  002AA6  C118  F0AC         	movff	_H10+17,_V+76	;volatile
  5460  002AAA  C119  F0AD         	movff	_H10+18,_V+77	;volatile
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;gemsecs.c: 183:   V.rbit = H10[1].block.block.rbit;
  5464  002AAE  0101               	movlb	1	; () banked
  5465  002AB0  AF1F               	btfss	(_H10+24)& (0+255),7,b
  5466  002AB2  D003               	bra	u6315
  5467  002AB4  0100               	movlb	0	; () banked
  5468  002AB6  81BB               	bsf	(_V+91)& (0+255),0,b	;volatile
  5469  002AB8  D002               	bra	u6317
  5470  002ABA                     u6315:
  5471  002ABA  0100               	movlb	0	; () banked
  5472  002ABC  91BB               	bcf	(_V+91)& (0+255),0,b	;volatile
  5473  002ABE                     u6317:
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;gemsecs.c: 184:   V.wbit = H10[1].block.block.wbit;
  5477  002ABE  0101               	movlb	1	; () banked
  5478  002AC0  AF1D               	btfss	(_H10+22)& (0+255),7,b
  5479  002AC2  D003               	bra	u6325
  5480  002AC4  0100               	movlb	0	; () banked
  5481  002AC6  83BB               	bsf	(_V+91)& (0+255),1,b	;volatile
  5482  002AC8  D002               	bra	u6327
  5483  002ACA                     u6325:
  5484  002ACA  0100               	movlb	0	; () banked
  5485  002ACC  93BB               	bcf	(_V+91)& (0+255),1,b	;volatile
  5486  002ACE                     u6327:
  5487                           
  5488                           ; BSR set to: 0
  5489                           ;gemsecs.c: 185:   V.ebit = H10[1].block.block.ebit;
  5490  002ACE  0101               	movlb	1	; () banked
  5491  002AD0  AF1B               	btfss	(_H10+20)& (0+255),7,b
  5492  002AD2  D003               	bra	u6335
  5493  002AD4  0100               	movlb	0	; () banked
  5494  002AD6  85BB               	bsf	(_V+91)& (0+255),2,b	;volatile
  5495  002AD8  D002               	bra	u6337
  5496  002ADA                     u6335:
  5497  002ADA  0100               	movlb	0	; () banked
  5498  002ADC  95BB               	bcf	(_V+91)& (0+255),2,b	;volatile
  5499  002ADE                     u6337:
  5500                           
  5501                           ; BSR set to: 0
  5502                           ;gemsecs.c: 186:   V.failed_receive = 0;
  5503  002ADE  0EF0               	movlw	-16
  5504  002AE0  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  5505                           
  5506                           ; BSR set to: 0
  5507                           ;gemsecs.c: 187:   V.g_state = secs_gem_state(V.stream, V.function);
  5508  002AE2  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  5509  002AE4  6EE6               	movwf	postinc1,c
  5510  002AE6  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  5511  002AE8  6EE6               	movwf	postinc1,c
  5512  002AEA  ECD9  F029         	call	_secs_gem_state	;wreg free
  5513  002AEE  5039               	movf	btemp,w,c
  5514  002AF0  0100               	movlb	0	; () banked
  5515  002AF2  6F62               	movwf	(_V+2)& (0+255),b	;volatile
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;gemsecs.c: 188:   *m_link = LINK_STATE_DONE;
  5519                           ;stkvar	_m_link @ sp[(-1)+-1]
  5520  002AF4  0EFE               	movlw	-2
  5521  002AF6  50E3               	movf	plusw1,w,c
  5522  002AF8  6ED9               	movwf	fsr2l,c
  5523  002AFA  6ADA               	clrf	fsr2h,c
  5524  002AFC  0E04               	movlw	4
  5525  002AFE  D01B               	goto	L17
  5526  002B00                     l9459:
  5527                           
  5528                           ;gemsecs.c: 191:   *m_link = LINK_STATE_ERROR;
  5529                           ;stkvar	_m_link @ sp[(-1)+-1]
  5530  002B00  0EFE               	movlw	-2
  5531  002B02  50E3               	movf	plusw1,w,c
  5532  002B04  6ED9               	movwf	fsr2l,c
  5533  002B06  6ADA               	clrf	fsr2h,c
  5534  002B08  0E06               	movlw	6
  5535  002B0A  6EDF               	movwf	indf2,c
  5536                           
  5537                           ;gemsecs.c: 192:   while ((uart1RxCount)) {
  5538  002B0C  D002               	goto	l9463
  5539  002B0E                     l9461:
  5540                           
  5541                           ;gemsecs.c: 193:    UART1_Read();
  5542  002B0E  EC07  F030         	call	_UART1_Read	;wreg free
  5543  002B12                     l9463:
  5544                           
  5545                           ;gemsecs.c: 192:   while ((uart1RxCount)) {
  5546  002B12  5033               	movf	_uart1RxCount,w,c	;volatile
  5547  002B14  B4D8               	btfsc	status,2,c
  5548  002B16  D003               	goto	l9467
  5549  002B18  D7FA               	goto	l9461
  5550  002B1A                     l9465:
  5551                           
  5552                           ;gemsecs.c: 196:    UART2_Read();
  5553  002B1A  ECE8  F02F         	call	_UART2_Read	;wreg free
  5554  002B1E                     l9467:
  5555                           
  5556                           ;gemsecs.c: 195:   while ((uart2RxCount)) {
  5557  002B1E  502D               	movf	_uart2RxCount,w,c	;volatile
  5558  002B20  B4D8               	btfsc	status,2,c
  5559  002B22  D02C               	goto	l9477
  5560  002B24  D7FA               	goto	l9465
  5561  002B26                     l9469:
  5562                           
  5563                           ;gemsecs.c: 202:   V.failed_receive = 0;
  5564  002B26  0EF0               	movlw	-16
  5565  002B28  0100               	movlb	0	; () banked
  5566  002B2A  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  5567  002B2C                     l9471:
  5568                           
  5569                           ;gemsecs.c: 204:   *m_link = LINK_STATE_IDLE;
  5570                           ;stkvar	_m_link @ sp[(-1)+-1]
  5571  002B2C  0EFE               	movlw	-2
  5572  002B2E  50E3               	movf	plusw1,w,c
  5573  002B30  6ED9               	movwf	fsr2l,c
  5574  002B32  6ADA               	clrf	fsr2h,c
  5575  002B34  0E00               	movlw	0
  5576  002B36                     L17:
  5577  002B36  6EDF               	movwf	indf2,c
  5578                           
  5579                           ;gemsecs.c: 206:   break;
  5580  002B38  D021               	goto	l9477
  5581  002B3A                     l9475:
  5582                           
  5583                           ;stkvar	_m_link @ sp[(-1)+-1]
  5584  002B3A  0EFE               	movlw	-2
  5585  002B3C  50E3               	movf	plusw1,w,c
  5586  002B3E  6ED9               	movwf	fsr2l,c
  5587  002B40  6ADA               	clrf	fsr2h,c
  5588  002B42  50DF               	movf	indf2,w,c
  5589  002B44  6E43               	movwf	btemp+10,c
  5590  002B46  6A44               	clrf	btemp+11,c
  5591                           
  5592                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5593                           ; Switch size 1, requested type "simple"
  5594                           ; Number of cases is 1, Range of values is 0 to 0
  5595                           ; switch strategies available:
  5596                           ; Name         Instructions Cycles
  5597                           ; simple_byte            4     3 (average)
  5598                           ;	Chosen strategy is simple_byte
  5599  002B48  5044               	movf	btemp+11,w,c
  5600  002B4A  0A00               	xorlw	0	; case 0
  5601  002B4C  A4D8               	btfss	status,2,c
  5602  002B4E  D7EE               	goto	l9471
  5603                           
  5604                           ; Switch size 1, requested type "simple"
  5605                           ; Number of cases is 7, Range of values is 0 to 6
  5606                           ; switch strategies available:
  5607                           ; Name         Instructions Cycles
  5608                           ; simple_byte           22    12 (average)
  5609                           ;	Chosen strategy is simple_byte
  5610  002B50  5043               	movf	btemp+10,w,c
  5611  002B52  0A00               	xorlw	0	; case 0
  5612  002B54  B4D8               	btfsc	status,2,c
  5613  002B56  D594               	goto	l9279
  5614  002B58  0A01               	xorlw	1	; case 1
  5615  002B5A  B4D8               	btfsc	status,2,c
  5616  002B5C  D5E5               	goto	l1584
  5617  002B5E  0A03               	xorlw	3	; case 2
  5618  002B60  B4D8               	btfsc	status,2,c
  5619  002B62  D630               	goto	l9329
  5620  002B64  0A01               	xorlw	1	; case 3
  5621  002B66  B4D8               	btfsc	status,2,c
  5622  002B68  D78D               	goto	l9439
  5623  002B6A  0A07               	xorlw	7	; case 4
  5624  002B6C  B4D8               	btfsc	status,2,c
  5625  002B6E  D7DB               	goto	l9469
  5626  002B70  0A01               	xorlw	1	; case 5
  5627  002B72  B4D8               	btfsc	status,2,c
  5628  002B74  D7C5               	goto	l9459
  5629  002B76  0A03               	xorlw	3	; case 6
  5630  002B78  A4D8               	btfss	status,2,c
  5631  002B7A  D7D8               	goto	l9471
  5632  002B7C                     l9477:
  5633                           
  5634                           ;gemsecs.c: 209:  return *m_link;
  5635                           ;stkvar	_m_link @ sp[(-1)+-1]
  5636  002B7C  0EFE               	movlw	-2
  5637  002B7E  50E3               	movf	plusw1,w,c
  5638  002B80  6ED9               	movwf	fsr2l,c
  5639  002B82  6ADA               	clrf	fsr2h,c
  5640  002B84  50DF               	movf	indf2,w,c
  5641  002B86  6E39               	movwf	btemp,c
  5642                           
  5643                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5644  002B88  52E5               	movf	postdec1,f,c
  5645  002B8A  52E5               	movf	postdec1,f,c
  5646  002B8C  0012               	return		;funcret
  5647  002B8E                     __end_of_m_protocol:
  5648                           	opt callstack 0
  5649                           
  5650 ;; *************** function _secs_send *****************
  5651 ;; Defined at:
  5652 ;;		line 442 in file "gemsecs.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;  byte_block      2  [STACK] PTR unsigned char 
  5655 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  5656 ;;		 -> H14(17), H13(16), H12(30), H10(91), 
  5657 ;;  length          1  [STACK] unsigned char 
  5658 ;;  fake            1  [STACK] _Bool 
  5659 ;;  s_uart          1  [STACK] unsigned char 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;  k               2  [STACK] PTR unsigned char 
  5662 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  5663 ;;		 -> H14(17), H13(16), H12(30), H10(91), 
  5664 ;;  checksum        2  [STACK] unsigned short 
  5665 ;;  i               1  [STACK] unsigned char 
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  1  [STACK] _Bool 
  5668 ;; Registers used:
  5669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5679 ;;Total ram usage:        0 bytes
  5680 ;; Hardware stack levels used:    1
  5681 ;; Hardware stack levels required when called:    6
  5682 ;; This function calls:
  5683 ;;		_UART1_Write
  5684 ;;		_UART1_is_tx_ready
  5685 ;;		_UART1_put_buffer
  5686 ;;		_UART2_Write
  5687 ;;		_UART2_is_tx_ready
  5688 ;;		_UART2_put_buffer
  5689 ;;		_block_checksum
  5690 ;; This function is called by:
  5691 ;;		_m_protocol
  5692 ;;		_r_protocol
  5693 ;;		_t_protocol
  5694 ;; This function uses a reentrant model
  5695 ;;
  5696                           
  5697                           	psect	text7
  5698  0042F0                     __ptext7:
  5699                           	opt callstack 0
  5700  0042F0                     _secs_send:
  5701                           	opt callstack 0
  5702                           
  5703                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5704  0042F0  0E05               	movlw	5
  5705  0042F2  26E1               	addwf	fsr1l,f,c
  5706  0042F4  0E00               	movlw	0
  5707  0042F6  22E2               	addwfc	fsr1h,f,c
  5708                           
  5709                           ;gemsecs.c: 442: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake, uint8_
      +                          t s_uart);gemsecs.c: 443: {;gemsecs.c: 444:  uint8_t i, *k;;gemsecs.c: 445:  uint16_t ch
      +                          ecksum;;gemsecs.c: 447:  k = (uint8_t *) byte_block;
  5710                           ;stkvar	_byte_block @ sp[(-5)+-2]
  5711                           
  5712                           ;incstack = 0
  5713  0042F8  0EF9               	movlw	-7
  5714  0042FA  006F FF8C  F043    	movff	plusw1,btemp+10
  5715  004300  0EFA               	movlw	-6
  5716  004302  006F FF8C  F044    	movff	plusw1,btemp+11
  5717                           
  5718                           ;stkvar	_k @ sp[(-5)+0]
  5719  004308  0EFC               	movlw	-4
  5720  00430A  0060  F113  FFE3   	movff	btemp+11,plusw1
  5721  004310  0EFB               	movlw	-5
  5722  004312  0060  F10F  FFE3   	movff	btemp+10,plusw1
  5723                           
  5724                           ;gemsecs.c: 449:  ++V.ticks;
  5725  004318  0E01               	movlw	1
  5726  00431A  0100               	movlb	0	; () banked
  5727  00431C  27A6               	addwf	(_V+70)& (0+255),f,b	;volatile
  5728  00431E  0E00               	movlw	0
  5729  004320  23A7               	addwfc	(_V+71)& (0+255),f,b	;volatile
  5730  004322  23A8               	addwfc	(_V+72)& (0+255),f,b	;volatile
  5731  004324  23A9               	addwfc	(_V+73)& (0+255),f,b	;volatile
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;gemsecs.c: 450:  V.error = LINK_ERROR_NONE;
  5735  004326  0E0A               	movlw	10
  5736  004328  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5737                           
  5738                           ; BSR set to: 0
  5739                           ;gemsecs.c: 451:  if ((length - 3) != k[length - 1]) {
  5740                           ;stkvar	_length @ sp[(-5)+-3]
  5741  00432A  0EF8               	movlw	-8
  5742  00432C  50E3               	movf	plusw1,w,c
  5743  00432E  6E43               	movwf	btemp+10,c
  5744  004330  6A44               	clrf	btemp+11,c
  5745                           
  5746                           ;stkvar	_k @ sp[(-5)+0]
  5747  004332  0EFB               	movlw	-5
  5748  004334  50E3               	movf	plusw1,w,c
  5749  004336  2643               	addwf	btemp+10,f,c
  5750  004338  0EFC               	movlw	-4
  5751  00433A  50E3               	movf	plusw1,w,c
  5752  00433C  2244               	addwfc	btemp+11,f,c
  5753  00433E  0EFF               	movlw	255
  5754  004340  2443               	addwf	btemp+10,w,c
  5755  004342  6ED9               	movwf	fsr2l,c
  5756  004344  0EFF               	movlw	255
  5757  004346  2044               	addwfc	btemp+11,w,c
  5758  004348  6EDA               	movwf	fsr2h,c
  5759  00434A  50DF               	movf	indf2,w,c
  5760  00434C  6E43               	movwf	btemp+10,c
  5761  00434E  6A44               	clrf	btemp+11,c
  5762  004350  0EFD               	movlw	253
  5763  004352  6E41               	movwf	btemp+8,c
  5764  004354  0EFF               	movlw	255
  5765  004356  6E42               	movwf	btemp+9,c
  5766                           
  5767                           ;stkvar	_length @ sp[(-5)+-3]
  5768  004358  0EF8               	movlw	-8
  5769  00435A  50E3               	movf	plusw1,w,c
  5770  00435C  6E3F               	movwf	btemp+6,c
  5771  00435E  6A40               	clrf	btemp+7,c
  5772  004360  5041               	movf	btemp+8,w,c
  5773  004362  263F               	addwf	btemp+6,f,c
  5774  004364  5042               	movf	btemp+9,w,c
  5775  004366  2240               	addwfc	btemp+7,f,c
  5776  004368  5043               	movf	btemp+10,w,c
  5777  00436A  183F               	xorwf	btemp+6,w,c
  5778  00436C  E104               	bnz	u5570
  5779  00436E  5044               	movf	btemp+11,w,c
  5780  004370  1840               	xorwf	btemp+7,w,c
  5781  004372  B4D8               	btfsc	status,2,c
  5782  004374  D003               	goto	l8773
  5783  004376                     u5570:
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;gemsecs.c: 452:   V.error = LINK_ERROR_SEND;
  5787  004376  0E12               	movlw	18
  5788  004378  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5789  00437A  D0EA               	goto	l1717
  5790  00437C                     l8773:
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;gemsecs.c: 461:  checksum = block_checksum(&k[2], length - 3);
  5794  00437C  0EFD               	movlw	253
  5795  00437E  6E43               	movwf	btemp+10,c
  5796  004380  0EFF               	movlw	255
  5797  004382  6E44               	movwf	btemp+11,c
  5798                           
  5799                           ;stkvar	_length @ sp[(-5)+-3]
  5800  004384  0EF8               	movlw	-8
  5801  004386  50E3               	movf	plusw1,w,c
  5802  004388  6E41               	movwf	btemp+8,c
  5803  00438A  6A42               	clrf	btemp+9,c
  5804  00438C  5043               	movf	btemp+10,w,c
  5805  00438E  2641               	addwf	btemp+8,f,c
  5806  004390  5044               	movf	btemp+11,w,c
  5807  004392  2242               	addwfc	btemp+9,f,c
  5808  004394  0060  F107  FFE6   	movff	btemp+8,postinc1
  5809  00439A  0060  F10B  FFE6   	movff	btemp+9,postinc1
  5810                           
  5811                           ;stkvar	_k @ sp[(-7)+0]
  5812  0043A0  0EF9               	movlw	-7
  5813  0043A2  50E3               	movf	plusw1,w,c
  5814  0043A4  0F02               	addlw	2
  5815  0043A6  6E43               	movwf	btemp+10,c
  5816  0043A8  0EFA               	movlw	-6
  5817  0043AA  006F FF8C  F044    	movff	plusw1,btemp+11
  5818  0043B0  0E00               	movlw	0
  5819  0043B2  2244               	addwfc	btemp+11,f,c
  5820  0043B4  0060  F10F  FFE6   	movff	btemp+10,postinc1
  5821  0043BA  0060  F113  FFE6   	movff	btemp+11,postinc1
  5822  0043C0  EC03  F028         	call	_block_checksum	;wreg free
  5823                           
  5824                           ;stkvar	_checksum @ sp[(-5)+2]
  5825  0043C4  0EFD               	movlw	-3
  5826  0043C6  0060  F0E7  FFE3   	movff	btemp,plusw1
  5827  0043CC  0EFE               	movlw	-2
  5828  0043CE  0060  F0EB  FFE3   	movff	btemp+1,plusw1
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;gemsecs.c: 462:  k[0] = checksum & 0xff;
  5832                           ;stkvar	_checksum @ sp[(-5)+2]
  5833                           ;stkvar	_k @ sp[(-5)+0]
  5834  0043D4  0EFB               	movlw	-5
  5835  0043D6  006F FF8F FFD9     	movff	plusw1,fsr2l
  5836  0043DC  0EFC               	movlw	-4
  5837  0043DE  006F FF8F FFDA     	movff	plusw1,fsr2h
  5838  0043E4  0EFD               	movlw	-3
  5839  0043E6  006F FF8F FFDF     	movff	plusw1,indf2
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;gemsecs.c: 463:  k[1] = (checksum >> 8)&0xff;
  5843                           ;stkvar	_checksum @ sp[(-5)+2]
  5844  0043EC  0EFE               	movlw	254
  5845  0043EE  24E1               	addwf	fsr1l,w,c
  5846  0043F0  6ED9               	movwf	fsr2l,c
  5847  0043F2  0EFF               	movlw	255
  5848  0043F4  20E2               	addwfc	fsr1h,w,c
  5849  0043F6  6EDA               	movwf	fsr2h,c
  5850                           
  5851                           ;stkvar	_k @ sp[(-5)+0]
  5852  0043F8  0EFB               	movlw	-5
  5853  0043FA  006F FF8C  F043    	movff	plusw1,btemp+10
  5854  004400  0EFC               	movlw	-4
  5855  004402  006F FF8C  F044    	movff	plusw1,btemp+11
  5856  004408  0E01               	movlw	1
  5857  00440A  2443               	addwf	btemp+10,w,c
  5858  00440C  6EE9               	movwf	fsr0l,c
  5859  00440E  0E00               	movlw	0
  5860  004410  2044               	addwfc	btemp+11,w,c
  5861  004412  6EEA               	movwf	fsr0h,c
  5862  004414  006F FF7F FFEF     	movff	indf2,indf0
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;gemsecs.c: 464:  V.t_checksum = checksum;
  5866                           ;stkvar	_checksum @ sp[(-5)+2]
  5867  00441A  0EFD               	movlw	-3
  5868  00441C  006F FF8C  F0B5    	movff	plusw1,_V+85	;volatile
  5869  004422  0EFE               	movlw	-2
  5870  004424  006F FF8C  F0B6    	movff	plusw1,_V+86	;volatile
  5871                           
  5872                           ;gemsecs.c: 466:  switch (s_uart) {
  5873  00442A  D082               	goto	l8819
  5874  00442C                     l8781:
  5875  00442C  ECFB  F033         	call	_UART2_is_tx_ready	;wreg free
  5876  004430  0E3F               	movlw	63
  5877  004432  6439               	cpfsgt	btemp,c
  5878  004434  D7FB               	goto	l8781
  5879                           
  5880                           ;gemsecs.c: 469:   for (i = length; i > 0; i--) {
  5881                           ;stkvar	_length @ sp[(-5)+-3]
  5882                           ;stkvar	_i @ sp[(-5)+4]
  5883  004436  0EF8               	movlw	-8
  5884  004438  006F FF8C  F039    	movff	plusw1,btemp
  5885  00443E  0EFF               	movlw	-1
  5886  004440  0060  F0E7  FFE3   	movff	btemp,plusw1
  5887  004446                     l8785:
  5888                           
  5889                           ;stkvar	_i @ sp[(-5)+4]
  5890  004446  0EFF               	movlw	-1
  5891  004448  50E3               	movf	plusw1,w,c
  5892  00444A  B4D8               	btfsc	status,2,c
  5893  00444C  D081               	goto	l1717
  5894                           
  5895                           ;gemsecs.c: 470:    if (fake) {
  5896                           ;stkvar	_fake @ sp[(-5)+-4]
  5897  00444E  0EF7               	movlw	-9
  5898  004450  50E3               	movf	plusw1,w,c
  5899  004452  B4D8               	btfsc	status,2,c
  5900  004454  D015               	goto	l8793
  5901                           
  5902                           ;gemsecs.c: 471:     UART2_put_buffer(k[i - 1]);
  5903                           ;stkvar	_i @ sp[(-5)+4]
  5904  004456  0EFF               	movlw	-1
  5905  004458  50E3               	movf	plusw1,w,c
  5906  00445A  6E43               	movwf	btemp+10,c
  5907  00445C  6A44               	clrf	btemp+11,c
  5908                           
  5909                           ;stkvar	_k @ sp[(-5)+0]
  5910  00445E  0EFB               	movlw	-5
  5911  004460  50E3               	movf	plusw1,w,c
  5912  004462  2643               	addwf	btemp+10,f,c
  5913  004464  0EFC               	movlw	-4
  5914  004466  50E3               	movf	plusw1,w,c
  5915  004468  2244               	addwfc	btemp+11,f,c
  5916  00446A  0EFF               	movlw	255
  5917  00446C  2443               	addwf	btemp+10,w,c
  5918  00446E  6ED9               	movwf	fsr2l,c
  5919  004470  0EFF               	movlw	255
  5920  004472  2044               	addwfc	btemp+11,w,c
  5921  004474  6EDA               	movwf	fsr2h,c
  5922  004476  50DF               	movf	indf2,w,c
  5923  004478  6EE6               	movwf	postinc1,c
  5924  00447A  EC04  F031         	call	_UART2_put_buffer	;wreg free
  5925                           
  5926                           ;gemsecs.c: 472:    } else {
  5927  00447E  D014               	goto	l8795
  5928  004480                     l8793:
  5929                           
  5930                           ;gemsecs.c: 474:     UART2_Write(k[i - 1]);
  5931                           ;stkvar	_i @ sp[(-5)+4]
  5932  004480  0EFF               	movlw	-1
  5933  004482  50E3               	movf	plusw1,w,c
  5934  004484  6E43               	movwf	btemp+10,c
  5935  004486  6A44               	clrf	btemp+11,c
  5936                           
  5937                           ;stkvar	_k @ sp[(-5)+0]
  5938  004488  0EFB               	movlw	-5
  5939  00448A  50E3               	movf	plusw1,w,c
  5940  00448C  2643               	addwf	btemp+10,f,c
  5941  00448E  0EFC               	movlw	-4
  5942  004490  50E3               	movf	plusw1,w,c
  5943  004492  2244               	addwfc	btemp+11,f,c
  5944  004494  0EFF               	movlw	255
  5945  004496  2443               	addwf	btemp+10,w,c
  5946  004498  6ED9               	movwf	fsr2l,c
  5947  00449A  0EFF               	movlw	255
  5948  00449C  2044               	addwfc	btemp+11,w,c
  5949  00449E  6EDA               	movwf	fsr2h,c
  5950  0044A0  50DF               	movf	indf2,w,c
  5951  0044A2  6EE6               	movwf	postinc1,c
  5952  0044A4  ECAA  F02F         	call	_UART2_Write	;wreg free
  5953  0044A8                     l8795:
  5954                           
  5955                           ; BSR set to: 57
  5956                           ;gemsecs.c: 476:   }
  5957                           ;stkvar	_i @ sp[(-5)+4]
  5958  0044A8  0EFF               	movlw	-1
  5959  0044AA  06E3               	decf	plusw1,f,c
  5960  0044AC  D7CC               	goto	l8785
  5961  0044AE                     l8799:
  5962  0044AE  ECFF  F033         	call	_UART1_is_tx_ready	;wreg free
  5963  0044B2  0E3F               	movlw	63
  5964  0044B4  6439               	cpfsgt	btemp,c
  5965  0044B6  D7FB               	goto	l8799
  5966                           
  5967                           ;gemsecs.c: 481:   for (i = length; i > 0; i--) {
  5968                           ;stkvar	_length @ sp[(-5)+-3]
  5969                           ;stkvar	_i @ sp[(-5)+4]
  5970  0044B8  0EF8               	movlw	-8
  5971  0044BA  006F FF8C  F039    	movff	plusw1,btemp
  5972  0044C0  0EFF               	movlw	-1
  5973  0044C2  0060  F0E7  FFE3   	movff	btemp,plusw1
  5974  0044C8                     l8803:
  5975                           
  5976                           ;stkvar	_i @ sp[(-5)+4]
  5977  0044C8  0EFF               	movlw	-1
  5978  0044CA  50E3               	movf	plusw1,w,c
  5979  0044CC  B4D8               	btfsc	status,2,c
  5980  0044CE  D040               	goto	l1717
  5981                           
  5982                           ;gemsecs.c: 482:    if (fake) {
  5983                           ;stkvar	_fake @ sp[(-5)+-4]
  5984  0044D0  0EF7               	movlw	-9
  5985  0044D2  50E3               	movf	plusw1,w,c
  5986  0044D4  B4D8               	btfsc	status,2,c
  5987  0044D6  D015               	goto	l8811
  5988                           
  5989                           ;gemsecs.c: 483:     UART1_put_buffer(k[i - 1]);
  5990                           ;stkvar	_i @ sp[(-5)+4]
  5991  0044D8  0EFF               	movlw	-1
  5992  0044DA  50E3               	movf	plusw1,w,c
  5993  0044DC  6E43               	movwf	btemp+10,c
  5994  0044DE  6A44               	clrf	btemp+11,c
  5995                           
  5996                           ;stkvar	_k @ sp[(-5)+0]
  5997  0044E0  0EFB               	movlw	-5
  5998  0044E2  50E3               	movf	plusw1,w,c
  5999  0044E4  2643               	addwf	btemp+10,f,c
  6000  0044E6  0EFC               	movlw	-4
  6001  0044E8  50E3               	movf	plusw1,w,c
  6002  0044EA  2244               	addwfc	btemp+11,f,c
  6003  0044EC  0EFF               	movlw	255
  6004  0044EE  2443               	addwf	btemp+10,w,c
  6005  0044F0  6ED9               	movwf	fsr2l,c
  6006  0044F2  0EFF               	movlw	255
  6007  0044F4  2044               	addwfc	btemp+11,w,c
  6008  0044F6  6EDA               	movwf	fsr2h,c
  6009  0044F8  50DF               	movf	indf2,w,c
  6010  0044FA  6EE6               	movwf	postinc1,c
  6011  0044FC  EC19  F031         	call	_UART1_put_buffer	;wreg free
  6012                           
  6013                           ;gemsecs.c: 484:    } else {
  6014  004500  D014               	goto	l8813
  6015  004502                     l8811:
  6016                           
  6017                           ;gemsecs.c: 486:     UART1_Write(k[i - 1]);
  6018                           ;stkvar	_i @ sp[(-5)+4]
  6019  004502  0EFF               	movlw	-1
  6020  004504  50E3               	movf	plusw1,w,c
  6021  004506  6E43               	movwf	btemp+10,c
  6022  004508  6A44               	clrf	btemp+11,c
  6023                           
  6024                           ;stkvar	_k @ sp[(-5)+0]
  6025  00450A  0EFB               	movlw	-5
  6026  00450C  50E3               	movf	plusw1,w,c
  6027  00450E  2643               	addwf	btemp+10,f,c
  6028  004510  0EFC               	movlw	-4
  6029  004512  50E3               	movf	plusw1,w,c
  6030  004514  2244               	addwfc	btemp+11,f,c
  6031  004516  0EFF               	movlw	255
  6032  004518  2443               	addwf	btemp+10,w,c
  6033  00451A  6ED9               	movwf	fsr2l,c
  6034  00451C  0EFF               	movlw	255
  6035  00451E  2044               	addwfc	btemp+11,w,c
  6036  004520  6EDA               	movwf	fsr2h,c
  6037  004522  50DF               	movf	indf2,w,c
  6038  004524  6EE6               	movwf	postinc1,c
  6039  004526  ECC9  F02F         	call	_UART1_Write	;wreg free
  6040  00452A                     l8813:
  6041                           
  6042                           ; BSR set to: 57
  6043                           ;gemsecs.c: 488:   }
  6044                           ;stkvar	_i @ sp[(-5)+4]
  6045  00452A  0EFF               	movlw	-1
  6046  00452C  06E3               	decf	plusw1,f,c
  6047  00452E  D7CC               	goto	l8803
  6048  004530                     l8819:
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;stkvar	_s_uart @ sp[(-5)+-5]
  6052  004530  0EF6               	movlw	-10
  6053  004532  50E3               	movf	plusw1,w,c
  6054  004534  6E43               	movwf	btemp+10,c
  6055  004536  6A44               	clrf	btemp+11,c
  6056                           
  6057                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6058                           ; Switch size 1, requested type "simple"
  6059                           ; Number of cases is 1, Range of values is 0 to 0
  6060                           ; switch strategies available:
  6061                           ; Name         Instructions Cycles
  6062                           ; simple_byte            4     3 (average)
  6063                           ;	Chosen strategy is simple_byte
  6064  004538  5044               	movf	btemp+11,w,c
  6065  00453A  0A00               	xorlw	0	; case 0
  6066  00453C  A4D8               	btfss	status,2,c
  6067  00453E  D7B7               	goto	l8799
  6068                           
  6069                           ; BSR set to: 0
  6070                           ; Switch size 1, requested type "simple"
  6071                           ; Number of cases is 2, Range of values is 1 to 2
  6072                           ; switch strategies available:
  6073                           ; Name         Instructions Cycles
  6074                           ; simple_byte            7     4 (average)
  6075                           ;	Chosen strategy is simple_byte
  6076  004540  5043               	movf	btemp+10,w,c
  6077  004542  0A01               	xorlw	1	; case 1
  6078  004544  B4D8               	btfsc	status,2,c
  6079  004546  D7B3               	goto	l8799
  6080  004548  0A03               	xorlw	3	; case 2
  6081  00454A  B4D8               	btfsc	status,2,c
  6082  00454C  D76F               	goto	l8781
  6083  00454E  D7AF               	goto	l8799
  6084  004550                     l1717:
  6085                           
  6086                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
  6087  004550  0EF6               	movlw	246
  6088  004552  26E1               	addwf	fsr1l,f,c
  6089  004554  0EFF               	movlw	255
  6090  004556  22E2               	addwfc	fsr1h,f,c
  6091  004558  0012               	return		;funcret
  6092  00455A                     __end_of_secs_send:
  6093                           	opt callstack 0
  6094                           
  6095 ;; *************** function _block_checksum *****************
  6096 ;; Defined at:
  6097 ;;		line 18 in file "gemsecs.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;  byte_block      2  [STACK] PTR unsigned char 
  6100 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  6101 ;;		 -> H14(17), H13(16), H12(30), H10(91), 
  6102 ;;  byte_count      2  [STACK] unsigned short 
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;  i               2  [STACK] unsigned short 
  6105 ;;  sum             2  [STACK] unsigned short 
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  2  [STACK] unsigned short 
  6108 ;; Registers used:
  6109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btem
      +p+23
  6110 ;; Tracked objects:
  6111 ;;		On entry : 3F/0
  6112 ;;		On exit  : 3F/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6119 ;;Total ram usage:        0 bytes
  6120 ;; Hardware stack levels used:    1
  6121 ;; Hardware stack levels required when called:    5
  6122 ;; This function calls:
  6123 ;;		_rand
  6124 ;; This function is called by:
  6125 ;;		_secs_send
  6126 ;; This function uses a reentrant model
  6127 ;;
  6128                           
  6129                           	psect	text8
  6130  005006                     __ptext8:
  6131                           	opt callstack 0
  6132  005006                     _block_checksum:
  6133                           	opt callstack 0
  6134                           
  6135                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6136  005006  52E6               	movf	postinc1,f,c
  6137  005008  52E6               	movf	postinc1,f,c
  6138  00500A  52E6               	movf	postinc1,f,c
  6139  00500C  52E6               	movf	postinc1,f,c
  6140                           
  6141                           ;gemsecs.c: 18: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 19: {;gemsecs.c: 20:  uint16_t sum = 0, i;
  6142                           ;stkvar	_sum @ sp[(-4)+2]
  6143                           
  6144                           ;incstack = 0
  6145  00500E  0EFE               	movlw	-2
  6146  005010  6AE3               	clrf	plusw1,c
  6147  005012  0EFF               	movlw	-1
  6148  005014  6AE3               	clrf	plusw1,c
  6149                           
  6150                           ;gemsecs.c: 22:  for (i = 0; i < byte_count; i++) {
  6151                           ;stkvar	_i @ sp[(-4)+0]
  6152  005016  0EFC               	movlw	-4
  6153  005018  6AE3               	clrf	plusw1,c
  6154  00501A  0EFD               	movlw	-3
  6155  00501C  6AE3               	clrf	plusw1,c
  6156  00501E  D039               	goto	l8617
  6157  005020                     l8613:
  6158                           
  6159                           ;gemsecs.c: 23:   sum += byte_block[i];
  6160                           ;stkvar	_i @ sp[(-4)+0]
  6161  005020  0EFC               	movlw	-4
  6162  005022  006F FF8C  F043    	movff	plusw1,btemp+10
  6163  005028  0EFD               	movlw	-3
  6164  00502A  006F FF8C  F044    	movff	plusw1,btemp+11
  6165                           
  6166                           ;stkvar	_byte_block @ sp[(-4)+-2]
  6167  005030  0EFA               	movlw	-6
  6168  005032  006F FF8C  F041    	movff	plusw1,btemp+8
  6169  005038  0EFB               	movlw	-5
  6170  00503A  006F FF8C  F042    	movff	plusw1,btemp+9
  6171  005040  5043               	movf	btemp+10,w,c
  6172  005042  2441               	addwf	btemp+8,w,c
  6173  005044  6ED9               	movwf	fsr2l,c
  6174  005046  5044               	movf	btemp+11,w,c
  6175  005048  2042               	addwfc	btemp+9,w,c
  6176  00504A  6EDA               	movwf	fsr2h,c
  6177  00504C  50DF               	movf	indf2,w,c
  6178  00504E  6E44               	movwf	btemp+11,c
  6179                           
  6180                           ;stkvar	_sum @ sp[(-4)+2]
  6181  005050  0EFE               	movlw	-2
  6182  005052  50E3               	movf	plusw1,w,c
  6183  005054  2444               	addwf	btemp+11,w,c
  6184  005056  6E39               	movwf	btemp,c
  6185  005058  0EFE               	movlw	-2
  6186  00505A  0060  F0E7  FFE3   	movff	btemp,plusw1
  6187  005060  6A39               	clrf	btemp,c
  6188  005062  0EFF               	movlw	-1
  6189  005064  50E3               	movf	plusw1,w,c
  6190  005066  2239               	addwfc	btemp,f,c
  6191  005068  0EFF               	movlw	-1
  6192  00506A  0060  F0E7  FFE3   	movff	btemp,plusw1
  6193                           
  6194                           ;gemsecs.c: 24:  }
  6195                           ;stkvar	_i @ sp[(-4)+0]
  6196  005070  0EFC               	movlw	-4
  6197  005072  50E3               	movf	plusw1,w,c
  6198  005074  0F01               	addlw	1
  6199  005076  6E39               	movwf	btemp,c
  6200  005078  0EFC               	movlw	-4
  6201  00507A  0060  F0E7  FFE3   	movff	btemp,plusw1
  6202  005080  6A39               	clrf	btemp,c
  6203  005082  0EFD               	movlw	-3
  6204  005084  50E3               	movf	plusw1,w,c
  6205  005086  2039               	addwfc	btemp,w,c
  6206  005088  6E39               	movwf	btemp,c
  6207  00508A  0EFD               	movlw	-3
  6208  00508C  0060  F0E7  FFE3   	movff	btemp,plusw1
  6209  005092                     l8617:
  6210                           
  6211                           ;stkvar	_byte_count @ sp[(-4)+-4]
  6212  005092  0EF8               	movlw	-8
  6213  005094  006F FF8C  F043    	movff	plusw1,btemp+10
  6214  00509A  0EF9               	movlw	-7
  6215  00509C  006F FF8C  F044    	movff	plusw1,btemp+11
  6216                           
  6217                           ;stkvar	_i @ sp[(-4)+0]
  6218  0050A2  0EFC               	movlw	-4
  6219  0050A4  006F FF8C  F041    	movff	plusw1,btemp+8
  6220  0050AA  0EFD               	movlw	-3
  6221  0050AC  006F FF8C  F042    	movff	plusw1,btemp+9
  6222  0050B2  5043               	movf	btemp+10,w,c
  6223  0050B4  5C41               	subwf	btemp+8,w,c
  6224  0050B6  5044               	movf	btemp+11,w,c
  6225  0050B8  5842               	subwfb	btemp+9,w,c
  6226  0050BA  A0D8               	btfss	status,0,c
  6227  0050BC  D7B1               	goto	l8613
  6228                           
  6229                           ;gemsecs.c: 26:  if (rand() > 30000)
  6230  0050BE  EC64  F026         	call	_rand	;wreg free
  6231  0050C2  BE3A               	btfsc	btemp+1,7,c
  6232  0050C4  D017               	goto	l8623
  6233  0050C6  0E31               	movlw	49
  6234  0050C8  5C39               	subwf	btemp,w,c
  6235  0050CA  0E75               	movlw	117
  6236  0050CC  583A               	subwfb	btemp+1,w,c
  6237  0050CE  A0D8               	btfss	status,0,c
  6238  0050D0  D011               	goto	l8623
  6239                           
  6240                           ; BSR set to: 0
  6241                           ;gemsecs.c: 27:   sum++;
  6242                           ;stkvar	_sum @ sp[(-4)+2]
  6243  0050D2  0EFE               	movlw	-2
  6244  0050D4  50E3               	movf	plusw1,w,c
  6245  0050D6  0F01               	addlw	1
  6246  0050D8  6E39               	movwf	btemp,c
  6247  0050DA  0EFE               	movlw	-2
  6248  0050DC  0060  F0E7  FFE3   	movff	btemp,plusw1
  6249  0050E2  6A39               	clrf	btemp,c
  6250  0050E4  0EFF               	movlw	-1
  6251  0050E6  50E3               	movf	plusw1,w,c
  6252  0050E8  2039               	addwfc	btemp,w,c
  6253  0050EA  6E39               	movwf	btemp,c
  6254  0050EC  0EFF               	movlw	-1
  6255  0050EE  0060  F0E7  FFE3   	movff	btemp,plusw1
  6256  0050F4                     l8623:
  6257                           
  6258                           ; BSR set to: 0
  6259                           ;gemsecs.c: 29:  return sum;
  6260                           ;stkvar	_sum @ sp[(-4)+2]
  6261  0050F4  0EFE               	movlw	-2
  6262  0050F6  006F FF8C  F039    	movff	plusw1,btemp
  6263  0050FC  0EFF               	movlw	-1
  6264  0050FE  006F FF8C  F03A    	movff	plusw1,btemp+1
  6265                           
  6266                           ; BSR set to: 0
  6267                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  6268  005104  0EF8               	movlw	248
  6269  005106  26E1               	addwf	fsr1l,f,c
  6270  005108  0EFF               	movlw	255
  6271  00510A  22E2               	addwfc	fsr1h,f,c
  6272  00510C  0012               	return		;funcret
  6273  00510E                     __end_of_block_checksum:
  6274                           	opt callstack 0
  6275                           
  6276 ;; *************** function _rand *****************
  6277 ;; Defined at:
  6278 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/rand.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;		None
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;		None
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  2  [STACK] int 
  6285 ;; Registers used:
  6286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 3F/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6296 ;;Total ram usage:        0 bytes
  6297 ;; Hardware stack levels used:    1
  6298 ;; Hardware stack levels required when called:    4
  6299 ;; This function calls:
  6300 ;;		___omul
  6301 ;; This function is called by:
  6302 ;;		_block_checksum
  6303 ;;		_m_protocol
  6304 ;;		_t_protocol
  6305 ;; This function uses a reentrant model
  6306 ;;
  6307                           
  6308                           	psect	text9
  6309  004CC8                     __ptext9:
  6310                           	opt callstack 0
  6311  004CC8                     _rand:
  6312                           	opt callstack 23
  6313                           
  6314                           ; BSR set to: 0
  6315                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6316                           ;incstack = 0
  6317  004CC8  0E2D               	movlw	45
  6318  004CCA  6EE6               	movwf	postinc1,c
  6319  004CCC  0E7F               	movlw	127
  6320  004CCE  6EE6               	movwf	postinc1,c
  6321  004CD0  0E95               	movlw	149
  6322  004CD2  6EE6               	movwf	postinc1,c
  6323  004CD4  0E4C               	movlw	76
  6324  004CD6  6EE6               	movwf	postinc1,c
  6325  004CD8  0E2D               	movlw	45
  6326  004CDA  6EE6               	movwf	postinc1,c
  6327  004CDC  0EF4               	movlw	244
  6328  004CDE  6EE6               	movwf	postinc1,c
  6329  004CE0  0E51               	movlw	81
  6330  004CE2  6EE6               	movwf	postinc1,c
  6331  004CE4  0E58               	movlw	88
  6332  004CE6  6EE6               	movwf	postinc1,c
  6333  004CE8  EE20  F0F2         	lfsr	2,_seed
  6334  004CEC  006F FF7B FFE6     	movff	postinc2,postinc1
  6335  004CF2  006F FF7B FFE6     	movff	postinc2,postinc1
  6336  004CF8  006F FF7B FFE6     	movff	postinc2,postinc1
  6337  004CFE  006F FF7B FFE6     	movff	postinc2,postinc1
  6338  004D04  006F FF7B FFE6     	movff	postinc2,postinc1
  6339  004D0A  006F FF7B FFE6     	movff	postinc2,postinc1
  6340  004D10  006F FF7B FFE6     	movff	postinc2,postinc1
  6341  004D16  006F FF7B FFE6     	movff	postinc2,postinc1
  6342  004D1C  ECB7  F025         	call	___omul	;wreg free
  6343  004D20  52E5               	movf	postdec1,f,c
  6344  004D22  006F FF9C  F050    	movff	indf1,btemp+23
  6345  004D28  52E5               	movf	postdec1,f,c
  6346  004D2A  006F FF9C  F04F    	movff	indf1,btemp+22
  6347  004D30  52E5               	movf	postdec1,f,c
  6348  004D32  006F FF9C  F04E    	movff	indf1,btemp+21
  6349  004D38  52E5               	movf	postdec1,f,c
  6350  004D3A  006F FF9C  F04D    	movff	indf1,btemp+20
  6351  004D40  52E5               	movf	postdec1,f,c
  6352  004D42  006F FF9C  F04C    	movff	indf1,btemp+19
  6353  004D48  52E5               	movf	postdec1,f,c
  6354  004D4A  006F FF9C  F04B    	movff	indf1,btemp+18
  6355  004D50  52E5               	movf	postdec1,f,c
  6356  004D52  006F FF9C  F04A    	movff	indf1,btemp+17
  6357  004D58  52E5               	movf	postdec1,f,c
  6358  004D5A  006F FF9C  F049    	movff	indf1,btemp+16
  6359  004D60  0EF8               	movlw	248
  6360  004D62  26E1               	addwf	fsr1l,f,c
  6361  004D64  0EFF               	movlw	255
  6362  004D66  22E2               	addwfc	fsr1h,f,c
  6363  004D68  0E01               	movlw	1
  6364  004D6A  2449               	addwf	btemp+16,w,c
  6365  004D6C  0100               	movlb	0	; () banked
  6366  004D6E  6FF2               	movwf	_seed& (0+255),b
  6367  004D70  0E00               	movlw	0
  6368  004D72  204A               	addwfc	btemp+17,w,c
  6369  004D74  6FF3               	movwf	(_seed+1)& (0+255),b
  6370  004D76  0E00               	movlw	0
  6371  004D78  204B               	addwfc	btemp+18,w,c
  6372  004D7A  6FF4               	movwf	(_seed+2)& (0+255),b
  6373  004D7C  0E00               	movlw	0
  6374  004D7E  204C               	addwfc	btemp+19,w,c
  6375  004D80  6FF5               	movwf	(_seed+3)& (0+255),b
  6376  004D82  0E00               	movlw	0
  6377  004D84  204D               	addwfc	btemp+20,w,c
  6378  004D86  6FF6               	movwf	(_seed+4)& (0+255),b
  6379  004D88  0E00               	movlw	0
  6380  004D8A  204E               	addwfc	btemp+21,w,c
  6381  004D8C  6FF7               	movwf	(_seed+5)& (0+255),b
  6382  004D8E  0E00               	movlw	0
  6383  004D90  204F               	addwfc	btemp+22,w,c
  6384  004D92  6FF8               	movwf	(_seed+6)& (0+255),b
  6385  004D94  0E00               	movlw	0
  6386  004D96  2050               	addwfc	btemp+23,w,c
  6387  004D98  6FF9               	movwf	(_seed+7)& (0+255),b
  6388                           
  6389                           ; BSR set to: 0
  6390  004D9A  0060  F3C8  F039   	movff	_seed,btemp
  6391  004DA0  0060  F3CC  F03A   	movff	_seed+1,btemp+1
  6392  004DA6  0060  F3D0  F03B   	movff	_seed+2,btemp+2
  6393  004DAC  0060  F3D4  F03C   	movff	_seed+3,btemp+3
  6394  004DB2  0060  F3D8  F03D   	movff	_seed+4,btemp+4
  6395  004DB8  0060  F3DC  F03E   	movff	_seed+5,btemp+5
  6396  004DBE  0060  F3E0  F03F   	movff	_seed+6,btemp+6
  6397  004DC4  0060  F3E4  F040   	movff	_seed+7,btemp+7
  6398  004DCA  0E08               	movlw	8
  6399  004DCC  D009               	goto	u5360
  6400  004DCE                     u5365:
  6401  004DCE  90D8               	bcf	status,0,c
  6402  004DD0  3240               	rrcf	btemp+7,f,c
  6403  004DD2  323F               	rrcf	btemp+6,f,c
  6404  004DD4  323E               	rrcf	btemp+5,f,c
  6405  004DD6  323D               	rrcf	btemp+4,f,c
  6406  004DD8  323C               	rrcf	btemp+3,f,c
  6407  004DDA  323B               	rrcf	btemp+2,f,c
  6408  004DDC  323A               	rrcf	btemp+1,f,c
  6409  004DDE  3239               	rrcf	btemp,f,c
  6410  004DE0                     u5360:
  6411  004DE0  2EE8               	decfsz	wreg,f,c
  6412  004DE2  D7F5               	goto	u5365
  6413                           
  6414                           ; BSR set to: 0
  6415                           ; _rand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize 
      +                          = 0, vargsize = 0
  6416  004DE4  0012               	return		;funcret
  6417  004DE6                     __end_of_rand:
  6418                           	opt callstack 0
  6419                           
  6420 ;; *************** function ___omul *****************
  6421 ;; Defined at:
  6422 ;;		line 91 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul64.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;  multiplier      8  [STACK] unsigned long long 
  6425 ;;  multiplicand    8  [STACK] unsigned long long 
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;  product         8  [STACK] unsigned long long 
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  8  [STACK] unsigned long long 
  6430 ;; Registers used:
  6431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6441 ;;Total ram usage:        0 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    3
  6444 ;; This function calls:
  6445 ;;		Nothing
  6446 ;; This function is called by:
  6447 ;;		_rand
  6448 ;; This function uses a reentrant model
  6449 ;;
  6450                           
  6451                           	psect	text10
  6452  004B6E                     __ptext10:
  6453                           	opt callstack 0
  6454  004B6E                     ___omul:
  6455                           	opt callstack 0
  6456                           
  6457                           ; BSR set to: 0
  6458                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  6459  004B6E  0E08               	movlw	8
  6460  004B70  26E1               	addwf	fsr1l,f,c
  6461  004B72  0E00               	movlw	0
  6462  004B74  22E2               	addwfc	fsr1h,f,c
  6463                           
  6464                           ;stkvar	_product @ sp[(-8)+0]
  6465                           
  6466                           ;incstack = 0
  6467  004B76  0E07               	movlw	7
  6468  004B78  6E39               	movwf	btemp,c
  6469  004B7A  0EF8               	movlw	-8
  6470  004B7C                     u5271:
  6471  004B7C  6AE3               	clrf	plusw1,c
  6472  004B7E  2AE8               	incf	wreg,f,c
  6473  004B80  0639               	decf	btemp,f,c
  6474  004B82  E2FC               	bc	u5271
  6475  004B84                     l8453:
  6476                           
  6477                           ;stkvar	_multiplier @ sp[(-8)+-8]
  6478  004B84  0EF0               	movlw	-16
  6479  004B86  A0E3               	btfss	plusw1,0,c
  6480  004B88  D050               	goto	l8457
  6481                           
  6482                           ;stkvar	_multiplicand @ sp[(-8)+-16]
  6483                           ;stkvar	_product @ sp[(-8)+0]
  6484  004B8A  0EF8               	movlw	-8
  6485  004B8C  50E3               	movf	plusw1,w,c
  6486  004B8E  6E39               	movwf	btemp,c
  6487  004B90  0EE8               	movlw	-24
  6488  004B92  50E3               	movf	plusw1,w,c
  6489  004B94  2639               	addwf	btemp,f,c
  6490  004B96  0EF8               	movlw	-8
  6491  004B98  0060  F0E7  FFE3   	movff	btemp,plusw1
  6492  004B9E  0EF9               	movlw	-7
  6493  004BA0  50E3               	movf	plusw1,w,c
  6494  004BA2  6E39               	movwf	btemp,c
  6495  004BA4  0EE9               	movlw	-23
  6496  004BA6  50E3               	movf	plusw1,w,c
  6497  004BA8  2239               	addwfc	btemp,f,c
  6498  004BAA  0EF9               	movlw	-7
  6499  004BAC  0060  F0E7  FFE3   	movff	btemp,plusw1
  6500  004BB2  0EFA               	movlw	-6
  6501  004BB4  50E3               	movf	plusw1,w,c
  6502  004BB6  6E39               	movwf	btemp,c
  6503  004BB8  0EEA               	movlw	-22
  6504  004BBA  50E3               	movf	plusw1,w,c
  6505  004BBC  2239               	addwfc	btemp,f,c
  6506  004BBE  0EFA               	movlw	-6
  6507  004BC0  0060  F0E7  FFE3   	movff	btemp,plusw1
  6508  004BC6  0EFB               	movlw	-5
  6509  004BC8  50E3               	movf	plusw1,w,c
  6510  004BCA  6E39               	movwf	btemp,c
  6511  004BCC  0EEB               	movlw	-21
  6512  004BCE  50E3               	movf	plusw1,w,c
  6513  004BD0  2239               	addwfc	btemp,f,c
  6514  004BD2  0EFB               	movlw	-5
  6515  004BD4  0060  F0E7  FFE3   	movff	btemp,plusw1
  6516  004BDA  0EFC               	movlw	-4
  6517  004BDC  50E3               	movf	plusw1,w,c
  6518  004BDE  6E39               	movwf	btemp,c
  6519  004BE0  0EEC               	movlw	-20
  6520  004BE2  50E3               	movf	plusw1,w,c
  6521  004BE4  2239               	addwfc	btemp,f,c
  6522  004BE6  0EFC               	movlw	-4
  6523  004BE8  0060  F0E7  FFE3   	movff	btemp,plusw1
  6524  004BEE  0EFD               	movlw	-3
  6525  004BF0  50E3               	movf	plusw1,w,c
  6526  004BF2  6E39               	movwf	btemp,c
  6527  004BF4  0EED               	movlw	-19
  6528  004BF6  50E3               	movf	plusw1,w,c
  6529  004BF8  2239               	addwfc	btemp,f,c
  6530  004BFA  0EFD               	movlw	-3
  6531  004BFC  0060  F0E7  FFE3   	movff	btemp,plusw1
  6532  004C02  0EFE               	movlw	-2
  6533  004C04  50E3               	movf	plusw1,w,c
  6534  004C06  6E39               	movwf	btemp,c
  6535  004C08  0EEE               	movlw	-18
  6536  004C0A  50E3               	movf	plusw1,w,c
  6537  004C0C  2239               	addwfc	btemp,f,c
  6538  004C0E  0EFE               	movlw	-2
  6539  004C10  0060  F0E7  FFE3   	movff	btemp,plusw1
  6540  004C16  0EFF               	movlw	-1
  6541  004C18  50E3               	movf	plusw1,w,c
  6542  004C1A  6E39               	movwf	btemp,c
  6543  004C1C  0EEF               	movlw	-17
  6544  004C1E  50E3               	movf	plusw1,w,c
  6545  004C20  2239               	addwfc	btemp,f,c
  6546  004C22  0EFF               	movlw	-1
  6547  004C24  0060  F0E7  FFE3   	movff	btemp,plusw1
  6548  004C2A                     l8457:
  6549                           
  6550                           ;stkvar	_multiplicand @ sp[(-8)+-16]
  6551  004C2A  90D8               	bcf	status,0,c
  6552  004C2C  0EE8               	movlw	-24
  6553  004C2E  36E3               	rlcf	plusw1,f,c
  6554  004C30  0EE9               	movlw	-23
  6555  004C32  36E3               	rlcf	plusw1,f,c
  6556  004C34  0EEA               	movlw	-22
  6557  004C36  36E3               	rlcf	plusw1,f,c
  6558  004C38  0EEB               	movlw	-21
  6559  004C3A  36E3               	rlcf	plusw1,f,c
  6560  004C3C  0EEC               	movlw	-20
  6561  004C3E  36E3               	rlcf	plusw1,f,c
  6562  004C40  0EED               	movlw	-19
  6563  004C42  36E3               	rlcf	plusw1,f,c
  6564  004C44  0EEE               	movlw	-18
  6565  004C46  36E3               	rlcf	plusw1,f,c
  6566  004C48  0EEF               	movlw	-17
  6567  004C4A  36E3               	rlcf	plusw1,f,c
  6568                           
  6569                           ;stkvar	_multiplier @ sp[(-8)+-8]
  6570  004C4C  90D8               	bcf	status,0,c
  6571  004C4E  0EF7               	movlw	-9
  6572  004C50  32E3               	rrcf	plusw1,f,c
  6573  004C52  0EF6               	movlw	-10
  6574  004C54  32E3               	rrcf	plusw1,f,c
  6575  004C56  0EF5               	movlw	-11
  6576  004C58  32E3               	rrcf	plusw1,f,c
  6577  004C5A  0EF4               	movlw	-12
  6578  004C5C  32E3               	rrcf	plusw1,f,c
  6579  004C5E  0EF3               	movlw	-13
  6580  004C60  32E3               	rrcf	plusw1,f,c
  6581  004C62  0EF2               	movlw	-14
  6582  004C64  32E3               	rrcf	plusw1,f,c
  6583  004C66  0EF1               	movlw	-15
  6584  004C68  32E3               	rrcf	plusw1,f,c
  6585  004C6A  0EF0               	movlw	-16
  6586  004C6C  32E3               	rrcf	plusw1,f,c
  6587                           
  6588                           ;stkvar	_multiplier @ sp[(-8)+-8]
  6589  004C6E  0EF0               	movlw	-16
  6590  004C70  50E3               	movf	plusw1,w,c
  6591  004C72  E188               	bnz	l8453
  6592  004C74  0EF1               	movlw	-15
  6593  004C76  50E3               	movf	plusw1,w,c
  6594  004C78  E185               	bnz	l8453
  6595  004C7A  0EF2               	movlw	-14
  6596  004C7C  50E3               	movf	plusw1,w,c
  6597  004C7E  E182               	bnz	l8453
  6598  004C80  0EF3               	movlw	-13
  6599  004C82  50E3               	movf	plusw1,w,c
  6600  004C84  E10C               	bnz	u5291
  6601  004C86  0EF4               	movlw	-12
  6602  004C88  50E3               	movf	plusw1,w,c
  6603  004C8A  E109               	bnz	u5291
  6604  004C8C  0EF5               	movlw	-11
  6605  004C8E  50E3               	movf	plusw1,w,c
  6606  004C90  E106               	bnz	u5291
  6607  004C92  0EF6               	movlw	-10
  6608  004C94  50E3               	movf	plusw1,w,c
  6609  004C96  E103               	bnz	u5291
  6610  004C98  0EF7               	movlw	-9
  6611  004C9A  50E3               	movf	plusw1,w,c
  6612  004C9C  A4D8               	btfss	status,2,c
  6613  004C9E                     u5291:
  6614  004C9E  D772               	goto	l8453
  6615                           
  6616                           ;stkvar	_product @ sp[(-8)+0]
  6617  004CA0  0EF8               	movlw	248
  6618  004CA2  24E1               	addwf	fsr1l,w,c
  6619  004CA4  6ED9               	movwf	fsr2l,c
  6620  004CA6  0EFF               	movlw	255
  6621  004CA8  20E2               	addwfc	fsr1h,w,c
  6622  004CAA  6EDA               	movwf	fsr2h,c
  6623                           
  6624                           ;stkvar	?___omul @ sp[(-8)+-8]
  6625  004CAC  0E08               	movlw	8
  6626  004CAE  6E39               	movwf	btemp,c
  6627  004CB0  0EF0               	movlw	-16
  6628  004CB2                     us530999:
  6629  004CB2  006F FF7B FFE3     	movff	postinc2,plusw1
  6630  004CB8  28E8               	incf	wreg,w,c
  6631  004CBA  2E39               	decfsz	btemp,f,c
  6632  004CBC  D7FA               	bra	us530999
  6633                           
  6634                           ; ___omul: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsi
      +                          ze = 16, vargsize = 0
  6635  004CBE  0EF8               	movlw	248
  6636  004CC0  26E1               	addwf	fsr1l,f,c
  6637  004CC2  0EFF               	movlw	255
  6638  004CC4  22E2               	addwfc	fsr1h,f,c
  6639  004CC6  0012               	return		;funcret
  6640  004CC8                     __end_of___omul:
  6641                           	opt callstack 0
  6642                           
  6643 ;; *************** function _UART2_put_buffer *****************
  6644 ;; Defined at:
  6645 ;;		line 257 in file "mcc_generated_files/uart2.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;  bufData         1  [STACK] unsigned char 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;		None
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  1  [STACK] void 
  6652 ;; Registers used:
  6653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/3B
  6656 ;;		On exit  : 3F/39
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6663 ;;Total ram usage:        0 bytes
  6664 ;; Hardware stack levels used:    1
  6665 ;; Hardware stack levels required when called:    3
  6666 ;; This function calls:
  6667 ;;		Nothing
  6668 ;; This function is called by:
  6669 ;;		_main
  6670 ;;		_secs_send
  6671 ;; This function uses a reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text11
  6675  006208                     __ptext11:
  6676                           	opt callstack 0
  6677  006208                     _UART2_put_buffer:
  6678                           	opt callstack 25
  6679                           
  6680                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
  6681                           
  6682                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6683                           ;incstack = 0
  6684  006208  0139               	movlb	57	; () banked
  6685  00620A  9596               	bcf	150,2,b	;volatile
  6686                           
  6687                           ; BSR set to: 57
  6688                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
  6689                           ;stkvar	_bufData @ sp[(0)+-1]
  6690  00620C  0E00               	movlw	low _uart2RxBuffer
  6691  00620E  242F               	addwf	_uart2RxHead,w,c	;volatile
  6692  006210  6ED9               	movwf	fsr2l,c
  6693  006212  6ADA               	clrf	fsr2h,c
  6694  006214  0E02               	movlw	high _uart2RxBuffer
  6695  006216  22DA               	addwfc	fsr2h,f,c
  6696  006218  0EFF               	movlw	-1
  6697  00621A  006F FF8F FFDF     	movff	plusw1,indf2
  6698                           
  6699                           ; BSR set to: 57
  6700  006220  2A2F               	incf	_uart2RxHead,f,c	;volatile
  6701                           
  6702                           ; BSR set to: 57
  6703                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
  6704  006222  0E3F               	movlw	63
  6705  006224  642F               	cpfsgt	_uart2RxHead,c
  6706  006226  D001               	goto	l8595
  6707                           
  6708                           ; BSR set to: 57
  6709                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
  6710  006228  6A2F               	clrf	_uart2RxHead,c	;volatile
  6711  00622A                     l8595:
  6712                           
  6713                           ; BSR set to: 57
  6714                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
  6715  00622A  2A2D               	incf	_uart2RxCount,f,c	;volatile
  6716                           
  6717                           ; BSR set to: 57
  6718                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
  6719  00622C  8596               	bsf	150,2,b	;volatile
  6720                           
  6721                           ; BSR set to: 57
  6722                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6723  00622E  52E5               	movf	postdec1,f,c
  6724  006230  0012               	return		;funcret
  6725  006232                     __end_of_UART2_put_buffer:
  6726                           	opt callstack 0
  6727                           
  6728 ;; *************** function _UART2_is_tx_ready *****************
  6729 ;; Defined at:
  6730 ;;		line 142 in file "mcc_generated_files/uart2.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;		None
  6733 ;; Auto vars:     Size  Location     Type
  6734 ;;		None
  6735 ;; Return value:  Size  Location     Type
  6736 ;;                  1  [STACK] unsigned char 
  6737 ;; Registers used:
  6738 ;;		btemp
  6739 ;; Tracked objects:
  6740 ;;		On entry : 0/0
  6741 ;;		On exit  : 0/0
  6742 ;;		Unchanged: 0/0
  6743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6748 ;;Total ram usage:        0 bytes
  6749 ;; Hardware stack levels used:    1
  6750 ;; Hardware stack levels required when called:    3
  6751 ;; This function calls:
  6752 ;;		Nothing
  6753 ;; This function is called by:
  6754 ;;		_secs_send
  6755 ;; This function uses a reentrant model
  6756 ;;
  6757                           
  6758                           	psect	text12
  6759  0067F6                     __ptext12:
  6760                           	opt callstack 0
  6761  0067F6                     _UART2_is_tx_ready:
  6762                           	opt callstack 25
  6763                           
  6764                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
  6765                           
  6766                           ; BSR set to: 57
  6767                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6768                           ;incstack = 0
  6769  0067F6  0060  F0C0  F039   	movff	_uart2TxBufferRemaining,btemp	;volatile
  6770                           
  6771                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6772  0067FC  0012               	return		;funcret
  6773  0067FE                     __end_of_UART2_is_tx_ready:
  6774                           	opt callstack 0
  6775                           
  6776 ;; *************** function _UART2_Write *****************
  6777 ;; Defined at:
  6778 ;;		line 172 in file "mcc_generated_files/uart2.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;  txData          1  [STACK] unsigned char 
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;		None
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  1  [STACK] void 
  6785 ;; Registers used:
  6786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6787 ;; Tracked objects:
  6788 ;;		On entry : 0/0
  6789 ;;		On exit  : 3F/39
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6796 ;;Total ram usage:        0 bytes
  6797 ;; Hardware stack levels used:    1
  6798 ;; Hardware stack levels required when called:    3
  6799 ;; This function calls:
  6800 ;;		Nothing
  6801 ;; This function is called by:
  6802 ;;		_secs_send
  6803 ;; This function uses a reentrant model
  6804 ;;
  6805                           
  6806                           	psect	text13
  6807  005F54                     __ptext13:
  6808                           	opt callstack 0
  6809  005F54                     _UART2_Write:
  6810                           	opt callstack 25
  6811                           
  6812                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  6813                           
  6814                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  6815                           
  6816                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6817                           ;incstack = 0
  6818  005F54  5030               	movf	_uart2TxBufferRemaining,w,c	;volatile
  6819  005F56  B4D8               	btfsc	status,2,c
  6820  005F58  D7FD               	goto	_UART2_Write
  6821                           
  6822                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
  6823  005F5A  0139               	movlb	57	; () banked
  6824  005F5C  B796               	btfsc	150,3,b	;volatile
  6825  005F5E  D005               	goto	l699
  6826                           
  6827                           ; BSR set to: 57
  6828                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
  6829                           ;stkvar	_txData @ sp[(0)+-1]
  6830  005F60  0EFF               	movlw	-1
  6831  005F62  006F FF8F FDD2     	movff	plusw1,15826	;volatile
  6832                           
  6833                           ;mcc_generated_files/uart2.c: 181:     }
  6834  005F68  D011               	goto	l8583
  6835  005F6A                     l699:
  6836                           
  6837                           ; BSR set to: 57
  6838                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
  6839  005F6A  9796               	bcf	150,3,b	;volatile
  6840                           
  6841                           ; BSR set to: 57
  6842                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
  6843                           ;stkvar	_txData @ sp[(0)+-1]
  6844  005F6C  0E00               	movlw	low _uart2TxBuffer
  6845  005F6E  2432               	addwf	_uart2TxHead,w,c	;volatile
  6846  005F70  6ED9               	movwf	fsr2l,c
  6847  005F72  6ADA               	clrf	fsr2h,c
  6848  005F74  0E03               	movlw	high _uart2TxBuffer
  6849  005F76  22DA               	addwfc	fsr2h,f,c
  6850  005F78  0EFF               	movlw	-1
  6851  005F7A  006F FF8F FFDF     	movff	plusw1,indf2
  6852                           
  6853                           ; BSR set to: 57
  6854  005F80  2A32               	incf	_uart2TxHead,f,c	;volatile
  6855                           
  6856                           ; BSR set to: 57
  6857                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  6858  005F82  0E3F               	movlw	63
  6859  005F84  6432               	cpfsgt	_uart2TxHead,c
  6860  005F86  D001               	goto	l8581
  6861                           
  6862                           ; BSR set to: 57
  6863                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
  6864  005F88  6A32               	clrf	_uart2TxHead,c	;volatile
  6865  005F8A                     l8581:
  6866                           
  6867                           ; BSR set to: 57
  6868                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
  6869  005F8A  0630               	decf	_uart2TxBufferRemaining,f,c	;volatile
  6870  005F8C                     l8583:
  6871                           
  6872                           ; BSR set to: 57
  6873                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
  6874  005F8C  8796               	bsf	150,3,b	;volatile
  6875                           
  6876                           ; BSR set to: 57
  6877                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6878  005F8E  52E5               	movf	postdec1,f,c
  6879  005F90  0012               	return		;funcret
  6880  005F92                     __end_of_UART2_Write:
  6881                           	opt callstack 0
  6882                           
  6883 ;; *************** function _UART1_put_buffer *****************
  6884 ;; Defined at:
  6885 ;;		line 250 in file "mcc_generated_files/uart1.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  bufData         1  [STACK] unsigned char 
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;		None
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  1  [STACK] void 
  6892 ;; Registers used:
  6893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 3F/39
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6903 ;;Total ram usage:        0 bytes
  6904 ;; Hardware stack levels used:    1
  6905 ;; Hardware stack levels required when called:    3
  6906 ;; This function calls:
  6907 ;;		Nothing
  6908 ;; This function is called by:
  6909 ;;		_main
  6910 ;;		_t_protocol
  6911 ;;		_secs_send
  6912 ;; This function uses a reentrant model
  6913 ;;
  6914                           
  6915                           	psect	text14
  6916  006232                     __ptext14:
  6917                           	opt callstack 0
  6918  006232                     _UART1_put_buffer:
  6919                           	opt callstack 25
  6920                           
  6921                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  6922                           
  6923                           ; BSR set to: 57
  6924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6925                           ;incstack = 0
  6926  006232  0139               	movlb	57	; () banked
  6927  006234  9793               	bcf	147,3,b	;volatile
  6928                           
  6929                           ; BSR set to: 57
  6930                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  6931                           ;stkvar	_bufData @ sp[(0)+-1]
  6932  006236  0E40               	movlw	low _uart1RxBuffer
  6933  006238  2435               	addwf	_uart1RxHead,w,c	;volatile
  6934  00623A  6ED9               	movwf	fsr2l,c
  6935  00623C  6ADA               	clrf	fsr2h,c
  6936  00623E  0E02               	movlw	high _uart1RxBuffer
  6937  006240  22DA               	addwfc	fsr2h,f,c
  6938  006242  0EFF               	movlw	-1
  6939  006244  006F FF8F FFDF     	movff	plusw1,indf2
  6940                           
  6941                           ; BSR set to: 57
  6942  00624A  2A35               	incf	_uart1RxHead,f,c	;volatile
  6943                           
  6944                           ; BSR set to: 57
  6945                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  6946  00624C  0E3F               	movlw	63
  6947  00624E  6435               	cpfsgt	_uart1RxHead,c
  6948  006250  D001               	goto	l8559
  6949                           
  6950                           ; BSR set to: 57
  6951                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  6952  006252  6A35               	clrf	_uart1RxHead,c	;volatile
  6953  006254                     l8559:
  6954                           
  6955                           ; BSR set to: 57
  6956                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  6957  006254  2A33               	incf	_uart1RxCount,f,c	;volatile
  6958                           
  6959                           ; BSR set to: 57
  6960                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  6961  006256  8793               	bsf	147,3,b	;volatile
  6962                           
  6963                           ; BSR set to: 57
  6964                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6965  006258  52E5               	movf	postdec1,f,c
  6966  00625A  0012               	return		;funcret
  6967  00625C                     __end_of_UART1_put_buffer:
  6968                           	opt callstack 0
  6969                           
  6970 ;; *************** function _UART1_is_tx_ready *****************
  6971 ;; Defined at:
  6972 ;;		line 151 in file "mcc_generated_files/uart1.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;		None
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;		None
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  1  [STACK] unsigned char 
  6979 ;; Registers used:
  6980 ;;		btemp
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6990 ;;Total ram usage:        0 bytes
  6991 ;; Hardware stack levels used:    1
  6992 ;; Hardware stack levels required when called:    3
  6993 ;; This function calls:
  6994 ;;		Nothing
  6995 ;; This function is called by:
  6996 ;;		_secs_send
  6997 ;; This function uses a reentrant model
  6998 ;;
  6999                           
  7000                           	psect	text15
  7001  0067FE                     __ptext15:
  7002                           	opt callstack 0
  7003  0067FE                     _UART1_is_tx_ready:
  7004                           	opt callstack 25
  7005                           
  7006                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  7007                           
  7008                           ; BSR set to: 57
  7009                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7010                           ;incstack = 0
  7011  0067FE  0060  F0D8  F039   	movff	_uart1TxBufferRemaining,btemp	;volatile
  7012                           
  7013                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7014  006804  0012               	return		;funcret
  7015  006806                     __end_of_UART1_is_tx_ready:
  7016                           	opt callstack 0
  7017                           
  7018 ;; *************** function _UART1_Write *****************
  7019 ;; Defined at:
  7020 ;;		line 179 in file "mcc_generated_files/uart1.c"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;  txData          1  [STACK] unsigned char 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;		None
  7025 ;; Return value:  Size  Location     Type
  7026 ;;                  1  [STACK] void 
  7027 ;; Registers used:
  7028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 3F/39
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7038 ;;Total ram usage:        0 bytes
  7039 ;; Hardware stack levels used:    1
  7040 ;; Hardware stack levels required when called:    3
  7041 ;; This function calls:
  7042 ;;		Nothing
  7043 ;; This function is called by:
  7044 ;;		_r_protocol
  7045 ;;		_t_protocol
  7046 ;;		_secs_send
  7047 ;; This function uses a reentrant model
  7048 ;;
  7049                           
  7050                           	psect	text16
  7051  005F92                     __ptext16:
  7052                           	opt callstack 0
  7053  005F92                     _UART1_Write:
  7054                           	opt callstack 25
  7055                           
  7056                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  7057                           
  7058                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  7059                           
  7060                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7061                           ;incstack = 0
  7062  005F92  5036               	movf	_uart1TxBufferRemaining,w,c	;volatile
  7063  005F94  B4D8               	btfsc	status,2,c
  7064  005F96  D7FD               	goto	_UART1_Write
  7065                           
  7066                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  7067  005F98  0139               	movlb	57	; () banked
  7068  005F9A  B993               	btfsc	147,4,b	;volatile
  7069  005F9C  D005               	goto	l579
  7070                           
  7071                           ; BSR set to: 57
  7072                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  7073                           ;stkvar	_txData @ sp[(0)+-1]
  7074  005F9E  0EFF               	movlw	-1
  7075  005FA0  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  7076                           
  7077                           ;mcc_generated_files/uart1.c: 186:  } else {
  7078  005FA6  D011               	goto	l8547
  7079  005FA8                     l579:
  7080                           
  7081                           ; BSR set to: 57
  7082                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  7083  005FA8  9993               	bcf	147,4,b	;volatile
  7084                           
  7085                           ; BSR set to: 57
  7086                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  7087                           ;stkvar	_txData @ sp[(0)+-1]
  7088  005FAA  0E80               	movlw	low _uart1TxBuffer
  7089  005FAC  2438               	addwf	_uart1TxHead,w,c	;volatile
  7090  005FAE  6ED9               	movwf	fsr2l,c
  7091  005FB0  6ADA               	clrf	fsr2h,c
  7092  005FB2  0E02               	movlw	high _uart1TxBuffer
  7093  005FB4  22DA               	addwfc	fsr2h,f,c
  7094  005FB6  0EFF               	movlw	-1
  7095  005FB8  006F FF8F FFDF     	movff	plusw1,indf2
  7096                           
  7097                           ; BSR set to: 57
  7098  005FBE  2A38               	incf	_uart1TxHead,f,c	;volatile
  7099                           
  7100                           ; BSR set to: 57
  7101                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  7102  005FC0  0E3F               	movlw	63
  7103  005FC2  6438               	cpfsgt	_uart1TxHead,c
  7104  005FC4  D001               	goto	l8545
  7105                           
  7106                           ; BSR set to: 57
  7107                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  7108  005FC6  6A38               	clrf	_uart1TxHead,c	;volatile
  7109  005FC8                     l8545:
  7110                           
  7111                           ; BSR set to: 57
  7112                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  7113  005FC8  0636               	decf	_uart1TxBufferRemaining,f,c	;volatile
  7114  005FCA                     l8547:
  7115                           
  7116                           ; BSR set to: 57
  7117                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  7118  005FCA  8993               	bsf	147,4,b	;volatile
  7119                           
  7120                           ; BSR set to: 57
  7121                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7122  005FCC  52E5               	movf	postdec1,f,c
  7123  005FCE  0012               	return		;funcret
  7124  005FD0                     __end_of_UART1_Write:
  7125                           	opt callstack 0
  7126                           
  7127 ;; *************** function _secs_gem_state *****************
  7128 ;; Defined at:
  7129 ;;		line 631 in file "gemsecs.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;  stream          1  [STACK] unsigned char 
  7132 ;;  function        1  [STACK] unsigned char 
  7133 ;; Auto vars:     Size  Location     Type
  7134 ;;		None
  7135 ;; Return value:  Size  Location     Type
  7136 ;;                  1  [STACK] enum E16164
  7137 ;; Registers used:
  7138 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
  7139 ;; Tracked objects:
  7140 ;;		On entry : 3F/0
  7141 ;;		On exit  : 0/0
  7142 ;;		Unchanged: 0/0
  7143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7148 ;;Total ram usage:        0 bytes
  7149 ;; Hardware stack levels used:    1
  7150 ;; Hardware stack levels required when called:    3
  7151 ;; This function calls:
  7152 ;;		Nothing
  7153 ;; This function is called by:
  7154 ;;		_m_protocol
  7155 ;;		_r_protocol
  7156 ;; This function uses a reentrant model
  7157 ;;
  7158                           
  7159                           	psect	text17
  7160  0053B2                     __ptext17:
  7161                           	opt callstack 0
  7162  0053B2                     _secs_gem_state:
  7163                           	opt callstack 26
  7164                           
  7165                           ;gemsecs.c: 631: GEM_STATES secs_gem_state(uint8_t stream, uint8_t function);gemsecs.c: 
      +                          632: {;gemsecs.c: 633:  static GEM_STATES block = GEM_STATE_DISABLE;;gemsecs.c: 635:  sw
      +                          itch (stream) {
  7166                           
  7167                           ; BSR set to: 57
  7168                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7169                           ;incstack = 0
  7170  0053B2  D04D               	goto	l8871
  7171  0053B4                     l8827:
  7172                           
  7173                           ;gemsecs.c: 642:    block = GEM_STATE_REMOTE;
  7174  0053B4  0E04               	movlw	4
  7175  0053B6                     L19:
  7176  0053B6  6E27               	movwf	secs_gem_state@block,c
  7177                           
  7178                           ;gemsecs.c: 643:    V.ticker = 0;
  7179  0053B8  0100               	movlb	0	; () banked
  7180  0053BA  6BC1               	clrf	(_V+97)& (0+255),b	;volatile
  7181                           
  7182                           ;gemsecs.c: 644:    break;
  7183  0053BC  D05B               	goto	l8873
  7184  0053BE                     l8831:
  7185                           
  7186                           ;gemsecs.c: 649:    block = GEM_STATE_COMM;
  7187  0053BE  0E01               	movlw	1
  7188  0053C0  6E27               	movwf	secs_gem_state@block,c
  7189                           
  7190                           ;gemsecs.c: 650:    V.ticker = 15;
  7191  0053C2  0E0F               	movlw	15
  7192  0053C4  D041               	goto	L21
  7193  0053C6                     l8833:
  7194                           
  7195                           ;gemsecs.c: 656:    block = GEM_STATE_OFFLINE;
  7196  0053C6  0E02               	movlw	2
  7197  0053C8  D7F6               	goto	L19
  7198  0053CA                     l8837:
  7199                           
  7200                           ;gemsecs.c: 663:    block = GEM_STATE_ONLINE;
  7201  0053CA  0E03               	movlw	3
  7202  0053CC  D7F4               	goto	L19
  7203  0053CE                     l8841:
  7204                           
  7205                           ;gemsecs.c: 667:    if (block == GEM_STATE_DISABLE) {
  7206  0053CE  5027               	movf	secs_gem_state@block,w,c
  7207  0053D0  B4D8               	btfsc	status,2,c
  7208  0053D2  D7F5               	goto	l8831
  7209  0053D4  D04F               	goto	l8873
  7210  0053D6                     l8847:
  7211                           
  7212                           ;stkvar	_function @ sp[(0)+-2]
  7213  0053D6  0EFE               	movlw	-2
  7214  0053D8  50E3               	movf	plusw1,w,c
  7215  0053DA  6E43               	movwf	btemp+10,c
  7216  0053DC  6A44               	clrf	btemp+11,c
  7217                           
  7218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7219                           ; Switch size 1, requested type "simple"
  7220                           ; Number of cases is 1, Range of values is 0 to 0
  7221                           ; switch strategies available:
  7222                           ; Name         Instructions Cycles
  7223                           ; simple_byte            4     3 (average)
  7224                           ;	Chosen strategy is simple_byte
  7225  0053DE  5044               	movf	btemp+11,w,c
  7226  0053E0  0A00               	xorlw	0	; case 0
  7227  0053E2  A4D8               	btfss	status,2,c
  7228  0053E4  D7F4               	goto	l8841
  7229                           
  7230                           ; Switch size 1, requested type "simple"
  7231                           ; Number of cases is 8, Range of values is 1 to 18
  7232                           ; switch strategies available:
  7233                           ; Name         Instructions Cycles
  7234                           ; simple_byte           25    13 (average)
  7235                           ;	Chosen strategy is simple_byte
  7236  0053E6  5043               	movf	btemp+10,w,c
  7237  0053E8  0A01               	xorlw	1	; case 1
  7238  0053EA  B4D8               	btfsc	status,2,c
  7239  0053EC  D7E3               	goto	l8827
  7240  0053EE  0A03               	xorlw	3	; case 2
  7241  0053F0  B4D8               	btfsc	status,2,c
  7242  0053F2  D7E0               	goto	l8827
  7243  0053F4  0A0F               	xorlw	15	; case 13
  7244  0053F6  B4D8               	btfsc	status,2,c
  7245  0053F8  D7E2               	goto	l8831
  7246  0053FA  0A03               	xorlw	3	; case 14
  7247  0053FC  B4D8               	btfsc	status,2,c
  7248  0053FE  D7DF               	goto	l8831
  7249  005400  0A01               	xorlw	1	; case 15
  7250  005402  B4D8               	btfsc	status,2,c
  7251  005404  D7E0               	goto	l8833
  7252  005406  0A1F               	xorlw	31	; case 16
  7253  005408  B4D8               	btfsc	status,2,c
  7254  00540A  D7DD               	goto	l8833
  7255  00540C  0A01               	xorlw	1	; case 17
  7256  00540E  B4D8               	btfsc	status,2,c
  7257  005410  D7DC               	goto	l8837
  7258  005412  0A03               	xorlw	3	; case 18
  7259  005414  B4D8               	btfsc	status,2,c
  7260  005416  D7D9               	goto	l8837
  7261  005418  D7DA               	goto	l8841
  7262  00541A                     l8849:
  7263                           
  7264                           ;gemsecs.c: 677:    block = GEM_STATE_ALARM;
  7265  00541A  0E05               	movlw	5
  7266  00541C  6E27               	movwf	secs_gem_state@block,c
  7267                           
  7268                           ;gemsecs.c: 678:    if (V.ticker != 45)
  7269  00541E  0E2D               	movlw	45
  7270  005420  0100               	movlb	0	; () banked
  7271  005422  19C1               	xorwf	(_V+97)& (0+255),w,b	;volatile
  7272  005424  B4D8               	btfsc	status,2,c
  7273  005426  D026               	goto	l8873
  7274  005428                     u5650:
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;gemsecs.c: 679:     V.ticker = 15;
  7278  005428  0E0F               	movlw	15
  7279  00542A  D00F               	goto	L20
  7280  00542C                     l8857:
  7281                           
  7282                           ;gemsecs.c: 686:    block = GEM_STATE_ERROR;
  7283  00542C  0E06               	movlw	6
  7284  00542E  6E27               	movwf	secs_gem_state@block,c
  7285                           
  7286                           ;gemsecs.c: 687:    if (V.ticker != 45)
  7287  005430  0E2D               	movlw	45
  7288  005432  0100               	movlb	0	; () banked
  7289  005434  19C1               	xorwf	(_V+97)& (0+255),w,b	;volatile
  7290  005436  A4D8               	btfss	status,2,c
  7291  005438  D7F7               	goto	u5650
  7292  00543A  D01C               	goto	l8873
  7293  00543C                     l8865:
  7294                           
  7295                           ;gemsecs.c: 693:   if (block == GEM_STATE_DISABLE) {
  7296  00543C  5027               	movf	secs_gem_state@block,w,c
  7297  00543E  A4D8               	btfss	status,2,c
  7298  005440  D019               	goto	l8873
  7299                           
  7300                           ;gemsecs.c: 694:    block = GEM_STATE_COMM;
  7301  005442  0E01               	movlw	1
  7302  005444  6E27               	movwf	secs_gem_state@block,c
  7303                           
  7304                           ;gemsecs.c: 695:    V.ticker = 45;
  7305  005446  0E2D               	movlw	45
  7306  005448                     L21:
  7307  005448  0100               	movlb	0	; () banked
  7308  00544A                     L20:
  7309  00544A  6FC1               	movwf	(_V+97)& (0+255),b	;volatile
  7310  00544C  D013               	goto	l8873
  7311  00544E                     l8871:
  7312                           
  7313                           ;stkvar	_stream @ sp[(0)+-1]
  7314  00544E  0EFF               	movlw	-1
  7315  005450  50E3               	movf	plusw1,w,c
  7316  005452  6E43               	movwf	btemp+10,c
  7317  005454  6A44               	clrf	btemp+11,c
  7318                           
  7319                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7320                           ; Switch size 1, requested type "simple"
  7321                           ; Number of cases is 1, Range of values is 0 to 0
  7322                           ; switch strategies available:
  7323                           ; Name         Instructions Cycles
  7324                           ; simple_byte            4     3 (average)
  7325                           ;	Chosen strategy is simple_byte
  7326  005456  5044               	movf	btemp+11,w,c
  7327  005458  0A00               	xorlw	0	; case 0
  7328  00545A  A4D8               	btfss	status,2,c
  7329  00545C  D7EF               	goto	l8865
  7330                           
  7331                           ; Switch size 1, requested type "simple"
  7332                           ; Number of cases is 3, Range of values is 1 to 9
  7333                           ; switch strategies available:
  7334                           ; Name         Instructions Cycles
  7335                           ; simple_byte           10     6 (average)
  7336                           ;	Chosen strategy is simple_byte
  7337  00545E  5043               	movf	btemp+10,w,c
  7338  005460  0A01               	xorlw	1	; case 1
  7339  005462  B4D8               	btfsc	status,2,c
  7340  005464  D7B8               	goto	l8847
  7341  005466  0A04               	xorlw	4	; case 5
  7342  005468  B4D8               	btfsc	status,2,c
  7343  00546A  D7D7               	goto	l8849
  7344  00546C  0A0C               	xorlw	12	; case 9
  7345  00546E  B4D8               	btfsc	status,2,c
  7346  005470  D7DD               	goto	l8857
  7347  005472  D7E4               	goto	l8865
  7348  005474                     l8873:
  7349                           
  7350                           ;gemsecs.c: 700:  return(block);
  7351  005474  0060  F09C  F039   	movff	secs_gem_state@block,btemp
  7352                           
  7353                           ; _secs_gem_state: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
  7354  00547A  52E5               	movf	postdec1,f,c
  7355  00547C  52E5               	movf	postdec1,f,c
  7356  00547E  0012               	return		;funcret
  7357  005480                     __end_of_secs_gem_state:
  7358                           	opt callstack 0
  7359                           
  7360 ;; *************** function _run_checksum *****************
  7361 ;; Defined at:
  7362 ;;		line 35 in file "gemsecs.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;  byte_block      1  [STACK] unsigned char 
  7365 ;;  clear           1  [STACK] _Bool 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;		None
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  2  [STACK] unsigned short 
  7370 ;; Registers used:
  7371 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  7372 ;; Tracked objects:
  7373 ;;		On entry : 7/39
  7374 ;;		On exit  : 3F/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7381 ;;Total ram usage:        0 bytes
  7382 ;; Hardware stack levels used:    1
  7383 ;; Hardware stack levels required when called:    3
  7384 ;; This function calls:
  7385 ;;		Nothing
  7386 ;; This function is called by:
  7387 ;;		_m_protocol
  7388 ;;		_r_protocol
  7389 ;; This function uses a reentrant model
  7390 ;;
  7391                           
  7392                           	psect	text18
  7393  00612A                     __ptext18:
  7394                           	opt callstack 0
  7395  00612A                     _run_checksum:
  7396                           	opt callstack 26
  7397                           
  7398                           ;gemsecs.c: 35: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 36: {;
      +                          gemsecs.c: 37:  static uint16_t sum = 0;;gemsecs.c: 39:  if (clear)
  7399                           ;stkvar	_clear @ sp[(0)+-2]
  7400                           
  7401                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7402                           ;incstack = 0
  7403  00612A  0EFE               	movlw	-2
  7404  00612C  50E3               	movf	plusw1,w,c
  7405  00612E  B4D8               	btfsc	status,2,c
  7406  006130  D003               	goto	l8755
  7407                           
  7408                           ;gemsecs.c: 40:   sum = 0;
  7409  006132  0100               	movlb	0	; () banked
  7410  006134  6BF0               	clrf	run_checksum@sum& (0+255),b
  7411  006136  6BF1               	clrf	(run_checksum@sum+1)& (0+255),b
  7412  006138                     l8755:
  7413                           
  7414                           ;gemsecs.c: 42:  sum += byte_block;
  7415                           ;stkvar	_byte_block @ sp[(0)+-1]
  7416  006138  0EFF               	movlw	-1
  7417  00613A  50E3               	movf	plusw1,w,c
  7418  00613C  0100               	movlb	0	; () banked
  7419  00613E  27F0               	addwf	run_checksum@sum& (0+255),f,b
  7420  006140  0E00               	movlw	0
  7421  006142  23F1               	addwfc	(run_checksum@sum+1)& (0+255),f,b
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;gemsecs.c: 43:  return sum;
  7425  006144  0060  F3C0  F039   	movff	run_checksum@sum,btemp
  7426  00614A  0060  F3C4  F03A   	movff	run_checksum@sum+1,btemp+1
  7427                           
  7428                           ; BSR set to: 0
  7429                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  7430  006150  52E5               	movf	postdec1,f,c
  7431  006152  52E5               	movf	postdec1,f,c
  7432  006154  0012               	return		;funcret
  7433  006156                     __end_of_run_checksum:
  7434                           	opt callstack 0
  7435                           
  7436 ;; *************** function _WaitMs *****************
  7437 ;; Defined at:
  7438 ;;		line 32 in file "timers.c"
  7439 ;; Parameters:    Size  Location     Type
  7440 ;;  numMilliseco    2  [STACK] unsigned short 
  7441 ;; Auto vars:     Size  Location     Type
  7442 ;;		None
  7443 ;; Return value:  Size  Location     Type
  7444 ;;                  1  [STACK] void 
  7445 ;; Registers used:
  7446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7447 ;; Tracked objects:
  7448 ;;		On entry : 0/0
  7449 ;;		On exit  : 0/0
  7450 ;;		Unchanged: 0/0
  7451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7456 ;;Total ram usage:        0 bytes
  7457 ;; Hardware stack levels used:    1
  7458 ;; Hardware stack levels required when called:    4
  7459 ;; This function calls:
  7460 ;;		_StartTimer
  7461 ;;		_TimerDone
  7462 ;; This function is called by:
  7463 ;;		_main
  7464 ;;		_m_protocol
  7465 ;;		_r_protocol
  7466 ;;		_t_protocol
  7467 ;; This function uses a reentrant model
  7468 ;;
  7469                           
  7470                           	psect	text19
  7471  0060C0                     __ptext19:
  7472                           	opt callstack 0
  7473  0060C0                     _WaitMs:
  7474                           	opt callstack 25
  7475                           
  7476                           ;timers.c: 32: void WaitMs(uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  7477                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  7478                           
  7479                           ; BSR set to: 0
  7480                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7481                           ;incstack = 0
  7482  0060C0  0EFE               	movlw	-2
  7483  0060C2  006F FF8F FFE6     	movff	plusw1,postinc1
  7484  0060C8  006F FF8F FFE6     	movff	plusw1,postinc1
  7485  0060CE  0E00               	movlw	0
  7486  0060D0  6EE6               	movwf	postinc1,c
  7487  0060D2  EC26  F030         	call	_StartTimer	;wreg free
  7488                           
  7489                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  7490  0060D6  D005               	goto	l8705
  7491  0060D8                     l1824:
  7492                           
  7493                           ;timers.c: 36:   __nop();
  7494  0060D8  F000               	nop	
  7495                           
  7496                           ;timers.c: 37:   __nop();
  7497  0060DA  F000               	nop	
  7498                           
  7499                           ;timers.c: 38:   __nop();
  7500  0060DC  F000               	nop	
  7501                           
  7502                           ;timers.c: 39:   __nop();
  7503  0060DE  F000               	nop	
  7504  0060E0  0004               	clrwdt		;# 
  7505  0060E2                     l8705:
  7506                           
  7507                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  7508  0060E2  0E00               	movlw	0
  7509  0060E4  6EE6               	movwf	postinc1,c
  7510  0060E6  EC95  F032         	call	_TimerDone	;wreg free
  7511  0060EA  5039               	movf	btemp,w,c
  7512  0060EC  B4D8               	btfsc	status,2,c
  7513  0060EE  D7F4               	goto	l1824
  7514                           
  7515                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  7516  0060F0  52E5               	movf	postdec1,f,c
  7517  0060F2  52E5               	movf	postdec1,f,c
  7518  0060F4  0012               	return		;funcret
  7519  0060F6                     __end_of_WaitMs:
  7520                           	opt callstack 0
  7521                           
  7522 ;; *************** function _TimerDone *****************
  7523 ;; Defined at:
  7524 ;;		line 20 in file "timers.c"
  7525 ;; Parameters:    Size  Location     Type
  7526 ;;  timer           1  [STACK] unsigned char 
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;		None
  7529 ;; Return value:  Size  Location     Type
  7530 ;;                  1  [STACK] _Bool 
  7531 ;; Registers used:
  7532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7533 ;; Tracked objects:
  7534 ;;		On entry : 0/0
  7535 ;;		On exit  : 0/0
  7536 ;;		Unchanged: 0/0
  7537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7542 ;;Total ram usage:        0 bytes
  7543 ;; Hardware stack levels used:    1
  7544 ;; Hardware stack levels required when called:    3
  7545 ;; This function calls:
  7546 ;;		Nothing
  7547 ;; This function is called by:
  7548 ;;		_m_protocol
  7549 ;;		_r_protocol
  7550 ;;		_t_protocol
  7551 ;;		_WaitMs
  7552 ;; This function uses a reentrant model
  7553 ;;
  7554                           
  7555                           	psect	text20
  7556  00652A                     __ptext20:
  7557                           	opt callstack 0
  7558  00652A                     _TimerDone:
  7559                           	opt callstack 25
  7560                           
  7561                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7562                           ;incstack = 0
  7563  00652A  0004               	clrwdt		;# 
  7564                           
  7565                           ;timers.c: 23:  if (tickCount[timer] == 0) {
  7566                           ;stkvar	_timer @ sp[(0)+-1]
  7567  00652C  0EFF               	movlw	-1
  7568  00652E  50E3               	movf	plusw1,w,c
  7569  006530  0D02               	mullw	2
  7570  006532  50F3               	movf	prodl,w,c
  7571  006534  0FCE               	addlw	low _tickCount
  7572  006536  6ED9               	movwf	fsr2l,c
  7573  006538  6ADA               	clrf	fsr2h,c
  7574  00653A  50DE               	movf	postinc2,w,c
  7575  00653C  10DE               	iorwf	postinc2,w,c
  7576  00653E  A4D8               	btfss	status,2,c
  7577  006540  D002               	goto	l8637
  7578                           
  7579                           ;timers.c: 24:   return 1;
  7580  006542  0E01               	movlw	1
  7581  006544  D001               	goto	L22
  7582  006546                     l8637:
  7583                           
  7584                           ;timers.c: 26:  return 0;
  7585  006546  0E00               	movlw	0
  7586  006548                     L22:
  7587  006548  6E39               	movwf	btemp,c
  7588                           
  7589                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7590  00654A  52E5               	movf	postdec1,f,c
  7591  00654C  0012               	return		;funcret
  7592  00654E                     __end_of_TimerDone:
  7593                           	opt callstack 0
  7594                           
  7595 ;; *************** function _StartTimer *****************
  7596 ;; Defined at:
  7597 ;;		line 12 in file "timers.c"
  7598 ;; Parameters:    Size  Location     Type
  7599 ;;  timer           1  [STACK] unsigned char 
  7600 ;;  count           2  [STACK] unsigned short 
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;		None
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  1  [STACK] void 
  7605 ;; Registers used:
  7606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/39
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7616 ;;Total ram usage:        0 bytes
  7617 ;; Hardware stack levels used:    1
  7618 ;; Hardware stack levels required when called:    3
  7619 ;; This function calls:
  7620 ;;		Nothing
  7621 ;; This function is called by:
  7622 ;;		_m_protocol
  7623 ;;		_r_protocol
  7624 ;;		_t_protocol
  7625 ;;		_WaitMs
  7626 ;; This function uses a reentrant model
  7627 ;;
  7628                           
  7629                           	psect	text21
  7630  00604C                     __ptext21:
  7631                           	opt callstack 0
  7632  00604C                     _StartTimer:
  7633                           	opt callstack 25
  7634                           
  7635                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  7636                           ;stkvar	_count @ sp[(0)+-3]
  7637                           
  7638                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7639                           ;incstack = 0
  7640  00604C  0EFD               	movlw	-3
  7641  00604E  006F FF8C  F043    	movff	plusw1,btemp+10
  7642  006054  0EFE               	movlw	-2
  7643  006056  006F FF8C  F044    	movff	plusw1,btemp+11
  7644  00605C  90D8               	bcf	status,0,c
  7645  00605E  3443               	rlcf	btemp+10,w,c
  7646  006060  6E41               	movwf	btemp+8,c
  7647  006062  3444               	rlcf	btemp+11,w,c
  7648  006064  6E42               	movwf	btemp+9,c
  7649                           
  7650                           ;stkvar	_timer @ sp[(0)+-1]
  7651  006066  0EFF               	movlw	-1
  7652  006068  50E3               	movf	plusw1,w,c
  7653  00606A  0D02               	mullw	2
  7654  00606C  50F3               	movf	prodl,w,c
  7655  00606E  0FCE               	addlw	low _tickCount
  7656  006070  6ED9               	movwf	fsr2l,c
  7657  006072  6ADA               	clrf	fsr2h,c
  7658  006074  0060  F107  FFDE   	movff	btemp+8,postinc2
  7659  00607A  0060  F10B  FFDD   	movff	btemp+9,postdec2
  7660                           
  7661                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  7662  006080  52E5               	movf	postdec1,f,c
  7663  006082  52E5               	movf	postdec1,f,c
  7664  006084  52E5               	movf	postdec1,f,c
  7665  006086  0012               	return		;funcret
  7666  006088                     __end_of_StartTimer:
  7667                           	opt callstack 0
  7668                           
  7669 ;; *************** function _UART2_is_rx_ready *****************
  7670 ;; Defined at:
  7671 ;;		line 137 in file "mcc_generated_files/uart2.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;		None
  7674 ;; Auto vars:     Size  Location     Type
  7675 ;;		None
  7676 ;; Return value:  Size  Location     Type
  7677 ;;                  1  [STACK] unsigned char 
  7678 ;; Registers used:
  7679 ;;		btemp
  7680 ;; Tracked objects:
  7681 ;;		On entry : 0/0
  7682 ;;		On exit  : 0/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7689 ;;Total ram usage:        0 bytes
  7690 ;; Hardware stack levels used:    1
  7691 ;; Hardware stack levels required when called:    3
  7692 ;; This function calls:
  7693 ;;		Nothing
  7694 ;; This function is called by:
  7695 ;;		_m_protocol
  7696 ;; This function uses a reentrant model
  7697 ;;
  7698                           
  7699                           	psect	text22
  7700  006806                     __ptext22:
  7701                           	opt callstack 0
  7702  006806                     _UART2_is_rx_ready:
  7703                           	opt callstack 26
  7704                           
  7705                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
  7706                           
  7707                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7708                           ;incstack = 0
  7709  006806  0060  F0B4  F039   	movff	_uart2RxCount,btemp	;volatile
  7710                           
  7711                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7712  00680C  0012               	return		;funcret
  7713  00680E                     __end_of_UART2_is_rx_ready:
  7714                           	opt callstack 0
  7715                           
  7716 ;; *************** function _UART2_Read *****************
  7717 ;; Defined at:
  7718 ;;		line 152 in file "mcc_generated_files/uart2.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;		None
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;  readValue       1  [STACK] unsigned char 
  7723 ;; Return value:  Size  Location     Type
  7724 ;;                  1  [STACK] unsigned char 
  7725 ;; Registers used:
  7726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/0
  7729 ;;		On exit  : 3F/39
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7736 ;;Total ram usage:        0 bytes
  7737 ;; Hardware stack levels used:    1
  7738 ;; Hardware stack levels required when called:    3
  7739 ;; This function calls:
  7740 ;;		Nothing
  7741 ;; This function is called by:
  7742 ;;		_m_protocol
  7743 ;; This function uses a reentrant model
  7744 ;;
  7745                           
  7746                           	psect	text23
  7747  005FD0                     __ptext23:
  7748                           	opt callstack 0
  7749  005FD0                     _UART2_Read:
  7750                           	opt callstack 0
  7751                           
  7752                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7753  005FD0  52E6               	movf	postinc1,f,c
  7754  005FD2                     
  7755                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  7756                           
  7757                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  7758  005FD2  502D               	movf	_uart2RxCount,w,c	;volatile
  7759  005FD4  B4D8               	btfsc	status,2,c
  7760  005FD6  D7FD               	goto	l8683
  7761                           
  7762                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
  7763  005FD8  0E00               	movlw	low _uart2RxBuffer
  7764  005FDA  242E               	addwf	_uart2RxTail,w,c	;volatile
  7765  005FDC  6ED9               	movwf	fsr2l,c
  7766  005FDE  6ADA               	clrf	fsr2h,c
  7767  005FE0  0E02               	movlw	high _uart2RxBuffer
  7768  005FE2  22DA               	addwfc	fsr2h,f,c
  7769  005FE4  50DF               	movf	indf2,w,c
  7770  005FE6  6E44               	movwf	btemp+11,c
  7771                           
  7772                           ;stkvar	_readValue @ sp[(-1)+0]
  7773  005FE8  0EFF               	movlw	-1
  7774  005FEA  0060  F113  FFE3   	movff	btemp+11,plusw1
  7775  005FF0  2A2E               	incf	_uart2RxTail,f,c	;volatile
  7776                           
  7777                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  7778  005FF2  0E3F               	movlw	63
  7779  005FF4  642E               	cpfsgt	_uart2RxTail,c
  7780  005FF6  D001               	goto	l692
  7781                           
  7782                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
  7783  005FF8  6A2E               	clrf	_uart2RxTail,c	;volatile
  7784  005FFA                     l692:
  7785                           
  7786                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
  7787  005FFA  0139               	movlb	57	; () banked
  7788  005FFC  9596               	bcf	150,2,b	;volatile
  7789                           
  7790                           ; BSR set to: 57
  7791                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
  7792  005FFE  062D               	decf	_uart2RxCount,f,c	;volatile
  7793                           
  7794                           ; BSR set to: 57
  7795                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
  7796  006000  8596               	bsf	150,2,b	;volatile
  7797                           
  7798                           ; BSR set to: 57
  7799                           ;mcc_generated_files/uart2.c: 169:     return readValue;
  7800                           ;stkvar	_readValue @ sp[(-1)+0]
  7801  006002  0EFF               	movlw	-1
  7802  006004  006F FF8C  F039    	movff	plusw1,btemp
  7803                           
  7804                           ; BSR set to: 57
  7805                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7806  00600A  52E5               	movf	postdec1,f,c
  7807  00600C  0012               	return		;funcret
  7808  00600E                     __end_of_UART2_Read:
  7809                           	opt callstack 0
  7810                           
  7811 ;; *************** function _UART1_is_rx_ready *****************
  7812 ;; Defined at:
  7813 ;;		line 146 in file "mcc_generated_files/uart1.c"
  7814 ;; Parameters:    Size  Location     Type
  7815 ;;		None
  7816 ;; Auto vars:     Size  Location     Type
  7817 ;;		None
  7818 ;; Return value:  Size  Location     Type
  7819 ;;                  1  [STACK] unsigned char 
  7820 ;; Registers used:
  7821 ;;		btemp
  7822 ;; Tracked objects:
  7823 ;;		On entry : 0/0
  7824 ;;		On exit  : 0/0
  7825 ;;		Unchanged: 0/0
  7826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7831 ;;Total ram usage:        0 bytes
  7832 ;; Hardware stack levels used:    1
  7833 ;; Hardware stack levels required when called:    3
  7834 ;; This function calls:
  7835 ;;		Nothing
  7836 ;; This function is called by:
  7837 ;;		_m_protocol
  7838 ;;		_r_protocol
  7839 ;;		_t_protocol
  7840 ;; This function uses a reentrant model
  7841 ;;
  7842                           
  7843                           	psect	text24
  7844  00680E                     __ptext24:
  7845                           	opt callstack 0
  7846  00680E                     _UART1_is_rx_ready:
  7847                           	opt callstack 26
  7848                           
  7849                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  7850                           
  7851                           ; BSR set to: 57
  7852                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7853                           ;incstack = 0
  7854  00680E  0060  F0CC  F039   	movff	_uart1RxCount,btemp	;volatile
  7855                           
  7856                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7857  006814  0012               	return		;funcret
  7858  006816                     __end_of_UART1_is_rx_ready:
  7859                           	opt callstack 0
  7860                           
  7861 ;; *************** function _UART1_Read *****************
  7862 ;; Defined at:
  7863 ;;		line 161 in file "mcc_generated_files/uart1.c"
  7864 ;; Parameters:    Size  Location     Type
  7865 ;;		None
  7866 ;; Auto vars:     Size  Location     Type
  7867 ;;  readValue       1  [STACK] unsigned char 
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  1  [STACK] unsigned char 
  7870 ;; Registers used:
  7871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 3F/39
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7881 ;;Total ram usage:        0 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    3
  7884 ;; This function calls:
  7885 ;;		Nothing
  7886 ;; This function is called by:
  7887 ;;		_m_protocol
  7888 ;;		_r_protocol
  7889 ;;		_t_protocol
  7890 ;; This function uses a reentrant model
  7891 ;;
  7892                           
  7893                           	psect	text25
  7894  00600E                     __ptext25:
  7895                           	opt callstack 0
  7896  00600E                     _UART1_Read:
  7897                           	opt callstack 0
  7898                           
  7899                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7900  00600E  52E6               	movf	postinc1,f,c
  7901  006010                     
  7902                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  7903                           
  7904                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  7905  006010  5033               	movf	_uart1RxCount,w,c	;volatile
  7906  006012  B4D8               	btfsc	status,2,c
  7907  006014  D7FD               	goto	l8659
  7908                           
  7909                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  7910  006016  0E40               	movlw	low _uart1RxBuffer
  7911  006018  2434               	addwf	_uart1RxTail,w,c	;volatile
  7912  00601A  6ED9               	movwf	fsr2l,c
  7913  00601C  6ADA               	clrf	fsr2h,c
  7914  00601E  0E02               	movlw	high _uart1RxBuffer
  7915  006020  22DA               	addwfc	fsr2h,f,c
  7916  006022  50DF               	movf	indf2,w,c
  7917  006024  6E44               	movwf	btemp+11,c
  7918                           
  7919                           ;stkvar	_readValue @ sp[(-1)+0]
  7920  006026  0EFF               	movlw	-1
  7921  006028  0060  F113  FFE3   	movff	btemp+11,plusw1
  7922  00602E  2A34               	incf	_uart1RxTail,f,c	;volatile
  7923                           
  7924                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  7925  006030  0E3F               	movlw	63
  7926  006032  6434               	cpfsgt	_uart1RxTail,c
  7927  006034  D001               	goto	l572
  7928                           
  7929                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  7930  006036  6A34               	clrf	_uart1RxTail,c	;volatile
  7931  006038                     l572:
  7932                           
  7933                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  7934  006038  0139               	movlb	57	; () banked
  7935  00603A  9793               	bcf	147,3,b	;volatile
  7936                           
  7937                           ; BSR set to: 57
  7938                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  7939  00603C  0633               	decf	_uart1RxCount,f,c	;volatile
  7940                           
  7941                           ; BSR set to: 57
  7942                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  7943  00603E  8793               	bsf	147,3,b	;volatile
  7944                           
  7945                           ; BSR set to: 57
  7946                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  7947                           ;stkvar	_readValue @ sp[(-1)+0]
  7948  006040  0EFF               	movlw	-1
  7949  006042  006F FF8C  F039    	movff	plusw1,btemp
  7950                           
  7951                           ; BSR set to: 57
  7952                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7953  006048  52E5               	movf	postdec1,f,c
  7954  00604A  0012               	return		;funcret
  7955  00604C                     __end_of_UART1_Read:
  7956                           	opt callstack 0
  7957                           
  7958 ;; *************** function _init_display *****************
  7959 ;; Defined at:
  7960 ;;		line 35 in file "eadog.c"
  7961 ;; Parameters:    Size  Location     Type
  7962 ;;		None
  7963 ;; Auto vars:     Size  Location     Type
  7964 ;;		None
  7965 ;; Return value:  Size  Location     Type
  7966 ;;                  1  [STACK] void 
  7967 ;; Registers used:
  7968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7969 ;; Tracked objects:
  7970 ;;		On entry : 0/0
  7971 ;;		On exit  : 3F/3D
  7972 ;;		Unchanged: 0/0
  7973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7978 ;;Total ram usage:        0 bytes
  7979 ;; Hardware stack levels used:    1
  7980 ;; Hardware stack levels required when called:    5
  7981 ;; This function calls:
  7982 ;;		_ringBufS_init
  7983 ;;		_send_lcd_cmd
  7984 ;;		_send_lcd_cmd_long
  7985 ;;		_wdtdelay
  7986 ;; This function is called by:
  7987 ;;		_main
  7988 ;; This function uses a reentrant model
  7989 ;;
  7990                           
  7991                           	psect	text26
  7992  0051F8                     __ptext26:
  7993                           	opt callstack 0
  7994  0051F8                     _init_display:
  7995                           	opt callstack 25
  7996                           
  7997                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  7998                           
  7999                           ; BSR set to: 57
  8000                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8001                           ;incstack = 0
  8002  0051F8  0E83               	movlw	low _ring_buf1
  8003  0051FA  0100               	movlb	0	; () banked
  8004  0051FC  6FC8               	movwf	(_spi_link+6)& (0+255),b	;volatile
  8005  0051FE  0E03               	movlw	high _ring_buf1
  8006  005200  6FC9               	movwf	(_spi_link+7)& (0+255),b	;volatile
  8007                           
  8008                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  8009  005202  0E40               	movlw	low _ring_buf2
  8010  005204  6FC6               	movwf	(_spi_link+4)& (0+255),b	;volatile
  8011  005206  0E03               	movlw	high _ring_buf2
  8012  005208  6FC7               	movwf	(_spi_link+5)& (0+255),b	;volatile
  8013                           
  8014                           ; BSR set to: 0
  8015                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  8016  00520A  0060  F323  FFE6   	movff	_spi_link+6,postinc1
  8017  005210  0060  F327  FFE6   	movff	_spi_link+7,postinc1
  8018  005216  EC56  F031         	call	_ringBufS_init	;wreg free
  8019                           
  8020                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  8021  00521A  0060  F31B  FFE6   	movff	_spi_link+4,postinc1
  8022  005220  0060  F31F  FFE6   	movff	_spi_link+5,postinc1
  8023  005226  EC56  F031         	call	_ringBufS_init	;wreg free
  8024                           
  8025                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  8026  00522A  80BE               	bsf	16318,0,c	;volatile
  8027  00522C  84BC               	bsf	16316,2,c	;volatile
  8028                           
  8029                           ;eadog.c: 44:  wdtdelay(350000);
  8030  00522E  0E30               	movlw	48
  8031  005230  6EE6               	movwf	postinc1,c
  8032  005232  0E57               	movlw	87
  8033  005234  6EE6               	movwf	postinc1,c
  8034  005236  0E05               	movlw	5
  8035  005238  6EE6               	movwf	postinc1,c
  8036  00523A  0E00               	movlw	0
  8037  00523C  6EE6               	movwf	postinc1,c
  8038  00523E  EC39  F02E         	call	_wdtdelay	;wreg free
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  8042  005242  0E39               	movlw	57
  8043  005244  6EE6               	movwf	postinc1,c
  8044  005246  EC42  F031         	call	_send_lcd_cmd	;wreg free
  8045                           
  8046                           ; BSR set to: 0
  8047                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  8048  00524A  0E1D               	movlw	29
  8049  00524C  6EE6               	movwf	postinc1,c
  8050  00524E  EC42  F031         	call	_send_lcd_cmd	;wreg free
  8051                           
  8052                           ; BSR set to: 0
  8053                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  8054  005252  0E50               	movlw	80
  8055  005254  6EE6               	movwf	postinc1,c
  8056  005256  EC42  F031         	call	_send_lcd_cmd	;wreg free
  8057                           
  8058                           ; BSR set to: 0
  8059                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  8060  00525A  0E6C               	movlw	108
  8061  00525C  6EE6               	movwf	postinc1,c
  8062  00525E  EC42  F031         	call	_send_lcd_cmd	;wreg free
  8063                           
  8064                           ; BSR set to: 0
  8065                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  8066  005262  0E76               	movlw	118
  8067  005264  6EE6               	movwf	postinc1,c
  8068  005266  EC42  F031         	call	_send_lcd_cmd	;wreg free
  8069                           
  8070                           ; BSR set to: 0
  8071                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  8072  00526A  0E38               	movlw	56
  8073  00526C  6EE6               	movwf	postinc1,c
  8074  00526E  EC2E  F031         	call	_send_lcd_cmd_long	;wreg free
  8075                           
  8076                           ; BSR set to: 0
  8077                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  8078  005272  0E0F               	movlw	15
  8079  005274  6EE6               	movwf	postinc1,c
  8080  005276  EC42  F031         	call	_send_lcd_cmd	;wreg free
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  8084  00527A  0E01               	movlw	1
  8085  00527C  6EE6               	movwf	postinc1,c
  8086  00527E  EC2E  F031         	call	_send_lcd_cmd_long	;wreg free
  8087                           
  8088                           ; BSR set to: 0
  8089                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  8090  005282  0E02               	movlw	2
  8091  005284  6EE6               	movwf	postinc1,c
  8092  005286  EC42  F031         	call	_send_lcd_cmd	;wreg free
  8093                           
  8094                           ; BSR set to: 0
  8095                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  8096  00528A  0E06               	movlw	6
  8097  00528C  6EE6               	movwf	postinc1,c
  8098  00528E  EC42  F031         	call	_send_lcd_cmd	;wreg free
  8099                           
  8100                           ; BSR set to: 0
  8101                           ;eadog.c: 55:  wdtdelay(30);
  8102  005292  0E1E               	movlw	30
  8103  005294  6EE6               	movwf	postinc1,c
  8104  005296  0E00               	movlw	0
  8105  005298  6EE6               	movwf	postinc1,c
  8106  00529A  0E00               	movlw	0
  8107  00529C  6EE6               	movwf	postinc1,c
  8108  00529E  0E00               	movlw	0
  8109  0052A0  6EE6               	movwf	postinc1,c
  8110  0052A2  EC39  F02E         	call	_wdtdelay	;wreg free
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  8114  0052A6  0E02               	movlw	2
  8115  0052A8  013D               	movlb	61	; () banked
  8116  0052AA  6F16               	movwf	22,b	;volatile
  8117                           
  8118                           ; BSR set to: 61
  8119                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  8120  0052AC  0E40               	movlw	64
  8121  0052AE  6F15               	movwf	21,b	;volatile
  8122                           
  8123                           ; BSR set to: 61
  8124                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  8125  0052B0  0E83               	movlw	131
  8126  0052B2  6F14               	movwf	20,b	;volatile
  8127                           
  8128                           ; BSR set to: 61
  8129                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  8130  0052B4  931A               	bcf	26,1,b	;volatile
  8131                           
  8132                           ; BSR set to: 61
  8133                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  8134  0052B6  0E3F               	movlw	-193
  8135  0052B8  013B               	movlb	59	; () banked
  8136  0052BA  17FD               	andwf	253,f,b	;volatile
  8137                           
  8138                           ; BSR set to: 59
  8139                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  8140  0052BC  9BFD               	bcf	253,5,b	;volatile
  8141                           
  8142                           ; BSR set to: 59
  8143                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  8144  0052BE  51FD               	movf	253,w,b	;volatile
  8145  0052C0  0BF9               	andlw	-7
  8146  0052C2  0902               	iorlw	2
  8147  0052C4  6FFD               	movwf	253,b	;volatile
  8148                           
  8149                           ; BSR set to: 59
  8150                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  8151  0052C6  0EE7               	movlw	-25
  8152  0052C8  17FD               	andwf	253,f,b	;volatile
  8153                           
  8154                           ; BSR set to: 59
  8155                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  8156  0052CA  81FD               	bsf	253,0,b	;volatile
  8157                           
  8158                           ; BSR set to: 59
  8159                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  8160  0052CC  0E83               	movlw	low _ring_buf1
  8161  0052CE  6FF9               	movwf	249,b	;volatile
  8162  0052D0  0E03               	movlw	high _ring_buf1
  8163  0052D2  6FFA               	movwf	250,b	;volatile
  8164  0052D4  0E00               	movlw	low (_ring_buf1 shr (0+16))
  8165  0052D6  6FFB               	movwf	251,b	;volatile
  8166                           
  8167                           ; BSR set to: 59
  8168                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  8169  0052D8  9BFC               	bcf	252,5,b	;volatile
  8170                           
  8171                           ; BSR set to: 59
  8172                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  8173  0052DA  013D               	movlb	61	; () banked
  8174  0052DC  831A               	bsf	26,1,b	;volatile
  8175                           
  8176                           ; BSR set to: 61
  8177                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  8178  0052DE  90BE               	bcf	16318,0,c	;volatile
  8179                           
  8180                           ; BSR set to: 61
  8181                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8182  0052E0  0012               	return		;funcret
  8183  0052E2                     __end_of_init_display:
  8184                           	opt callstack 0
  8185                           
  8186 ;; *************** function _send_lcd_cmd_long *****************
  8187 ;; Defined at:
  8188 ;;		line 97 in file "eadog.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;  cmd             1  [STACK] unsigned char 
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;		None
  8193 ;; Return value:  Size  Location     Type
  8194 ;;                  1  [STACK] void 
  8195 ;; Registers used:
  8196 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8197 ;; Tracked objects:
  8198 ;;		On entry : 3F/0
  8199 ;;		On exit  : 3F/0
  8200 ;;		Unchanged: 0/0
  8201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8206 ;;Total ram usage:        0 bytes
  8207 ;; Hardware stack levels used:    1
  8208 ;; Hardware stack levels required when called:    4
  8209 ;; This function calls:
  8210 ;;		_SPI1_Exchange8bit
  8211 ;;		_wdtdelay
  8212 ;; This function is called by:
  8213 ;;		_init_display
  8214 ;; This function uses a reentrant model
  8215 ;;
  8216                           
  8217                           	psect	text27
  8218  00625C                     __ptext27:
  8219                           	opt callstack 0
  8220  00625C                     _send_lcd_cmd_long:
  8221                           	opt callstack 25
  8222                           
  8223                           ; BSR set to: 61
  8224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8225                           ;incstack = 0
  8226                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  8227  00625C  92BC               	bcf	16316,1,c	;volatile
  8228                           
  8229                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  8230  00625E  94BC               	bcf	16316,2,c	;volatile
  8231                           
  8232                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  8233                           ;stkvar	_cmd @ sp[(0)+-1]
  8234  006260  0EFF               	movlw	-1
  8235  006262  50E3               	movf	plusw1,w,c
  8236  006264  6EE6               	movwf	postinc1,c
  8237  006266  EC3E  F033         	call	_SPI1_Exchange8bit	;wreg free
  8238                           
  8239                           ; BSR set to: 57
  8240                           ;eadog.c: 102:  wdtdelay(800);
  8241  00626A  0E20               	movlw	32
  8242  00626C  6EE6               	movwf	postinc1,c
  8243  00626E  0E03               	movlw	3
  8244  006270  6EE6               	movwf	postinc1,c
  8245  006272  0E00               	movlw	0
  8246  006274  6EE6               	movwf	postinc1,c
  8247  006276  0E00               	movlw	0
  8248  006278  6EE6               	movwf	postinc1,c
  8249  00627A  EC39  F02E         	call	_wdtdelay	;wreg free
  8250                           
  8251                           ; BSR set to: 0
  8252  00627E  82BC               	bsf	16316,1,c	;volatile
  8253                           
  8254                           ; BSR set to: 0
  8255                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8256  006280  52E5               	movf	postdec1,f,c
  8257  006282  0012               	return		;funcret
  8258  006284                     __end_of_send_lcd_cmd_long:
  8259                           	opt callstack 0
  8260                           
  8261 ;; *************** function _send_lcd_cmd *****************
  8262 ;; Defined at:
  8263 ;;		line 85 in file "eadog.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;  cmd             1  [STACK] unsigned char 
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;		None
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  1  [STACK] void 
  8270 ;; Registers used:
  8271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8272 ;; Tracked objects:
  8273 ;;		On entry : 3F/0
  8274 ;;		On exit  : 3F/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8281 ;;Total ram usage:        0 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:    4
  8284 ;; This function calls:
  8285 ;;		_SPI1_Exchange8bit
  8286 ;;		_wdtdelay
  8287 ;; This function is called by:
  8288 ;;		_init_display
  8289 ;; This function uses a reentrant model
  8290 ;;
  8291                           
  8292                           	psect	text28
  8293  006284                     __ptext28:
  8294                           	opt callstack 0
  8295  006284                     _send_lcd_cmd:
  8296                           	opt callstack 25
  8297                           
  8298                           ; BSR set to: 0
  8299                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8300                           ;incstack = 0
  8301                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  8302  006284  92BC               	bcf	16316,1,c	;volatile
  8303                           
  8304                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  8305  006286  94BC               	bcf	16316,2,c	;volatile
  8306                           
  8307                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  8308                           ;stkvar	_cmd @ sp[(0)+-1]
  8309  006288  0EFF               	movlw	-1
  8310  00628A  50E3               	movf	plusw1,w,c
  8311  00628C  6EE6               	movwf	postinc1,c
  8312  00628E  EC3E  F033         	call	_SPI1_Exchange8bit	;wreg free
  8313                           
  8314                           ; BSR set to: 57
  8315                           ;eadog.c: 90:  wdtdelay(30);
  8316  006292  0E1E               	movlw	30
  8317  006294  6EE6               	movwf	postinc1,c
  8318  006296  0E00               	movlw	0
  8319  006298  6EE6               	movwf	postinc1,c
  8320  00629A  0E00               	movlw	0
  8321  00629C  6EE6               	movwf	postinc1,c
  8322  00629E  0E00               	movlw	0
  8323  0062A0  6EE6               	movwf	postinc1,c
  8324  0062A2  EC39  F02E         	call	_wdtdelay	;wreg free
  8325                           
  8326                           ; BSR set to: 0
  8327  0062A6  82BC               	bsf	16316,1,c	;volatile
  8328                           
  8329                           ; BSR set to: 0
  8330                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  8331  0062A8  52E5               	movf	postdec1,f,c
  8332  0062AA  0012               	return		;funcret
  8333  0062AC                     __end_of_send_lcd_cmd:
  8334                           	opt callstack 0
  8335                           
  8336 ;; *************** function _SPI1_Exchange8bit *****************
  8337 ;; Defined at:
  8338 ;;		line 79 in file "mcc_generated_files/spi1.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;  data            1  [STACK] unsigned char 
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;		None
  8343 ;; Return value:  Size  Location     Type
  8344 ;;                  1  [STACK] unsigned char 
  8345 ;; Registers used:
  8346 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  8347 ;; Tracked objects:
  8348 ;;		On entry : 0/0
  8349 ;;		On exit  : 3F/39
  8350 ;;		Unchanged: 0/0
  8351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8356 ;;Total ram usage:        0 bytes
  8357 ;; Hardware stack levels used:    1
  8358 ;; Hardware stack levels required when called:    3
  8359 ;; This function calls:
  8360 ;;		Nothing
  8361 ;; This function is called by:
  8362 ;;		_send_lcd_cmd
  8363 ;;		_send_lcd_cmd_long
  8364 ;; This function uses a reentrant model
  8365 ;;
  8366                           
  8367                           	psect	text29
  8368  00667C                     __ptext29:
  8369                           	opt callstack 0
  8370  00667C                     _SPI1_Exchange8bit:
  8371                           	opt callstack 25
  8372                           
  8373                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  8374                           
  8375                           ; BSR set to: 0
  8376                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8377                           ;incstack = 0
  8378  00667C  0E01               	movlw	1
  8379  00667E  013D               	movlb	61	; () banked
  8380  006680  6F12               	movwf	18,b	;volatile
  8381                           
  8382                           ; BSR set to: 61
  8383                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  8384                           ;stkvar	_data @ sp[(0)+-1]
  8385  006682  0EFF               	movlw	-1
  8386  006684  006F FF8F FD11     	movff	plusw1,15633	;volatile
  8387  00668A                     l851:
  8388                           
  8389                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  8390  00668A  0139               	movlb	57	; () banked
  8391  00668C  A9A2               	btfss	162,4,b	;volatile
  8392  00668E  D7FD               	goto	l851
  8393                           
  8394                           ; BSR set to: 57
  8395                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  8396  006690  006F F440  F039    	movff	15632,btemp	;volatile
  8397                           
  8398                           ; BSR set to: 57
  8399                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8400  006696  52E5               	movf	postdec1,f,c
  8401  006698  0012               	return		;funcret
  8402  00669A                     __end_of_SPI1_Exchange8bit:
  8403                           	opt callstack 0
  8404                           
  8405 ;; *************** function _ringBufS_init *****************
  8406 ;; Defined at:
  8407 ;;		line 22 in file "ringbufs.c"
  8408 ;; Parameters:    Size  Location     Type
  8409 ;;  _this           2  [STACK] PTR volatile struct ring
  8410 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;		None
  8413 ;; Return value:  Size  Location     Type
  8414 ;;                  1  [STACK] void 
  8415 ;; Registers used:
  8416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8417 ;; Tracked objects:
  8418 ;;		On entry : 0/0
  8419 ;;		On exit  : 0/0
  8420 ;;		Unchanged: 0/0
  8421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8426 ;;Total ram usage:        0 bytes
  8427 ;; Hardware stack levels used:    1
  8428 ;; Hardware stack levels required when called:    4
  8429 ;; This function calls:
  8430 ;;		_memset
  8431 ;; This function is called by:
  8432 ;;		_init_display
  8433 ;; This function uses a reentrant model
  8434 ;;
  8435                           
  8436                           	psect	text30
  8437  0062AC                     __ptext30:
  8438                           	opt callstack 0
  8439  0062AC                     _ringBufS_init:
  8440                           	opt callstack 25
  8441                           
  8442                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  8443                           
  8444                           ; BSR set to: 57
  8445                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8446                           ;incstack = 0
  8447  0062AC  0E43               	movlw	67
  8448  0062AE  6EE6               	movwf	postinc1,c
  8449  0062B0  0E00               	movlw	0
  8450  0062B2  6EE6               	movwf	postinc1,c
  8451  0062B4  0E00               	movlw	0
  8452  0062B6  6EE6               	movwf	postinc1,c
  8453  0062B8  0E00               	movlw	0
  8454  0062BA  6EE6               	movwf	postinc1,c
  8455                           
  8456                           ;stkvar	__this @ sp[(-4)+-2]
  8457  0062BC  0EFA               	movlw	-6
  8458  0062BE  006F FF8F FFE6     	movff	plusw1,postinc1
  8459  0062C4  006F FF8F FFE6     	movff	plusw1,postinc1
  8460  0062CA  EC03  F01C         	call	_memset	;wreg free
  8461                           
  8462                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8463  0062CE  52E5               	movf	postdec1,f,c
  8464  0062D0  52E5               	movf	postdec1,f,c
  8465  0062D2  0012               	return		;funcret
  8466  0062D4                     __end_of_ringBufS_init:
  8467                           	opt callstack 0
  8468                           
  8469 ;; *************** function _eaDogM_WriteStringAtPos *****************
  8470 ;; Defined at:
  8471 ;;		line 222 in file "eadog.c"
  8472 ;; Parameters:    Size  Location     Type
  8473 ;;  r               1  [STACK] unsigned char 
  8474 ;;  c               1  [STACK] unsigned char 
  8475 ;;  strPtr          1  [STACK] PTR unsigned char 
  8476 ;;		 -> V(98), 
  8477 ;; Auto vars:     Size  Location     Type
  8478 ;;		None
  8479 ;; Return value:  Size  Location     Type
  8480 ;;                  1  [STACK] void 
  8481 ;; Registers used:
  8482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  8483 ;; Tracked objects:
  8484 ;;		On entry : 3F/0
  8485 ;;		On exit  : 3F/3B
  8486 ;;		Unchanged: 0/0
  8487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8492 ;;Total ram usage:        0 bytes
  8493 ;; Hardware stack levels used:    1
  8494 ;; Hardware stack levels required when called:   13
  8495 ;; This function calls:
  8496 ;;		_eaDogM_WriteString
  8497 ;;		_send_lcd_cmd_dma
  8498 ;; This function is called by:
  8499 ;;		_main
  8500 ;; This function uses a reentrant model
  8501 ;;
  8502                           
  8503                           	psect	text31
  8504  006156                     __ptext31:
  8505                           	opt callstack 0
  8506  006156                     _eaDogM_WriteStringAtPos:
  8507                           	opt callstack 17
  8508                           
  8509                           ;eadog.c: 222: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           223: {;eadog.c: 224:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  8510                           ;stkvar	_c @ sp[(0)+-2]
  8511                           
  8512                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8513                           ;incstack = 0
  8514  006156  0EFE               	movlw	-2
  8515  006158  006F FF8C  F044    	movff	plusw1,btemp+11
  8516                           
  8517                           ;stkvar	_r @ sp[(0)+-1]
  8518  00615E  0EFF               	movlw	-1
  8519  006160  50E3               	movf	plusw1,w,c
  8520  006162  0D10               	mullw	16
  8521  006164  50F3               	movf	prodl,w,c
  8522  006166  2444               	addwf	btemp+11,w,c
  8523  006168  0F80               	addlw	128
  8524  00616A  6EE6               	movwf	postinc1,c
  8525  00616C  EC67  F02E         	call	_send_lcd_cmd_dma	;wreg free
  8526                           
  8527                           ; BSR set to: 0
  8528                           ;eadog.c: 225:  eaDogM_WriteString(strPtr);
  8529                           ;stkvar	_strPtr @ sp[(0)+-3]
  8530  006170  0EFD               	movlw	-3
  8531  006172  50E3               	movf	plusw1,w,c
  8532  006174  6EE6               	movwf	postinc1,c
  8533  006176  EC4A  F02B         	call	_eaDogM_WriteString	;wreg free
  8534                           
  8535                           ; BSR set to: 59
  8536                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  8537  00617A  52E5               	movf	postdec1,f,c
  8538  00617C  52E5               	movf	postdec1,f,c
  8539  00617E  52E5               	movf	postdec1,f,c
  8540  006180  0012               	return		;funcret
  8541  006182                     __end_of_eaDogM_WriteStringAtPos:
  8542                           	opt callstack 0
  8543                           
  8544 ;; *************** function _eaDogM_WriteString *****************
  8545 ;; Defined at:
  8546 ;;		line 167 in file "eadog.c"
  8547 ;; Parameters:    Size  Location     Type
  8548 ;;  strPtr          1  [STACK] PTR unsigned char 
  8549 ;;		 -> V(98), 
  8550 ;; Auto vars:     Size  Location     Type
  8551 ;;		None
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  1  [STACK] void 
  8554 ;; Registers used:
  8555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8556 ;; Tracked objects:
  8557 ;;		On entry : 3F/0
  8558 ;;		On exit  : 3F/3B
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8565 ;;Total ram usage:        0 bytes
  8566 ;; Hardware stack levels used:    1
  8567 ;; Hardware stack levels required when called:   12
  8568 ;; This function calls:
  8569 ;;		_printf
  8570 ;;		_ringBufS_flush
  8571 ;;		_start_lcd
  8572 ;;		_strlen
  8573 ;;		_wait_lcd_set
  8574 ;; This function is called by:
  8575 ;;		_eaDogM_WriteStringAtPos
  8576 ;; This function uses a reentrant model
  8577 ;;
  8578                           
  8579                           	psect	text32
  8580  005694                     __ptext32:
  8581                           	opt callstack 0
  8582  005694                     _eaDogM_WriteString:
  8583                           	opt callstack 17
  8584                           
  8585                           ; BSR set to: 59
  8586                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8587                           ;incstack = 0
  8588                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  do {
      +                           LATEbits.LATE1 = 1; } while(0);
  8589  005694  82BE               	bsf	16318,1,c	;volatile
  8590                           
  8591                           ;eadog.c: 170:  wait_lcd_set();
  8592  005696  EC0B  F034         	call	_wait_lcd_set	;wreg free
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;eadog.c: 172:  ringBufS_flush(spi_link.tx1a, 0);
  8596  00569A  0E00               	movlw	0
  8597  00569C  6EE6               	movwf	postinc1,c
  8598  00569E  0060  F323  FFE6   	movff	_spi_link+6,postinc1
  8599  0056A4  0060  F327  FFE6   	movff	_spi_link+7,postinc1
  8600  0056AA  EC81  F02C         	call	_ringBufS_flush	;wreg free
  8601  0056AE  94BC               	bcf	16316,2,c	;volatile
  8602                           
  8603                           ;eadog.c: 174:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  8604                           ;stkvar	_strPtr @ sp[(0)+-1]
  8605  0056B0  0EFF               	movlw	-1
  8606  0056B2  006F FF8C  F044    	movff	plusw1,btemp+11
  8607  0056B8  0060  F113  FFE6   	movff	btemp+11,postinc1
  8608  0056BE  0E00               	movlw	0
  8609  0056C0  6EE6               	movwf	postinc1,c
  8610  0056C2  ECF9  F02A         	call	_strlen	;wreg free
  8611  0056C6  503A               	movf	btemp+1,w,c
  8612  0056C8  E104               	bnz	u5550
  8613  0056CA  0E41               	movlw	65
  8614  0056CC  5C39               	subwf	btemp,w,c
  8615  0056CE  A0D8               	btfss	status,0,c
  8616  0056D0  D008               	goto	l8739
  8617  0056D2                     u5550:
  8618                           
  8619                           ;stkvar	_strPtr @ sp[(0)+-1]
  8620  0056D2  0EFF               	movlw	-1
  8621  0056D4  50E3               	movf	plusw1,w,c
  8622  0056D6  6ED9               	movwf	fsr2l,c
  8623  0056D8  6ADA               	clrf	fsr2h,c
  8624  0056DA  0E40               	movlw	64
  8625  0056DC  26D9               	addwf	fsr2l,f,c
  8626  0056DE  0E00               	movlw	0
  8627  0056E0  6EDF               	movwf	indf2,c
  8628  0056E2                     l8739:
  8629                           
  8630                           ;eadog.c: 175:  DMA1CON0bits.EN = 0;
  8631  0056E2  013B               	movlb	59	; () banked
  8632  0056E4  9FFC               	bcf	252,7,b	;volatile
  8633                           
  8634                           ; BSR set to: 59
  8635                           ;eadog.c: 176:  DMA1SSZ = strlen(strPtr);
  8636                           ;stkvar	_strPtr @ sp[(0)+-1]
  8637  0056E6  0EFF               	movlw	-1
  8638  0056E8  006F FF8C  F044    	movff	plusw1,btemp+11
  8639  0056EE  0060  F113  FFE6   	movff	btemp+11,postinc1
  8640  0056F4  0E00               	movlw	0
  8641  0056F6  6EE6               	movwf	postinc1,c
  8642  0056F8  ECF9  F02A         	call	_strlen	;wreg free
  8643  0056FC  0060  F0E7  FBF7   	movff	btemp,15351	;volatile
  8644  005702  0060  F0EB  FBF8   	movff	btemp+1,15352	;volatile
  8645                           
  8646                           ;eadog.c: 177:  DMA1CON0bits.EN = 1;
  8647  005708  013B               	movlb	59	; () banked
  8648  00570A  8FFC               	bsf	252,7,b	;volatile
  8649                           
  8650                           ; BSR set to: 59
  8651                           ;eadog.c: 178:  printf("%s", strPtr);
  8652                           ;stkvar	_strPtr @ sp[(0)+-1]
  8653  00570C  0EFF               	movlw	-1
  8654  00570E  006F FF8C  F044    	movff	plusw1,btemp+11
  8655  005714  0060  F113  FFE6   	movff	btemp+11,postinc1
  8656  00571A  0E00               	movlw	0
  8657  00571C  6EE6               	movwf	postinc1,c
  8658  00571E  0EA6               	movlw	(STR_2+9)& (0+255)
  8659  005720  6EE6               	movwf	postinc1,c
  8660  005722  0E03               	movlw	3
  8661  005724  6EE6               	movwf	postinc1,c
  8662  005726  ECD9  F02D         	call	_printf	;wreg free
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;eadog.c: 179:  start_lcd();
  8666  00572A  EC0E  F034         	call	_start_lcd	;wreg free
  8667                           
  8668                           ; BSR set to: 59
  8669  00572E  92BE               	bcf	16318,1,c	;volatile
  8670                           
  8671                           ; BSR set to: 59
  8672                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8673  005730  52E5               	movf	postdec1,f,c
  8674  005732  0012               	return		;funcret
  8675  005734                     __end_of_eaDogM_WriteString:
  8676                           	opt callstack 0
  8677                           
  8678 ;; *************** function _eaDogM_WriteCommand *****************
  8679 ;; Defined at:
  8680 ;;		line 143 in file "eadog.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;  cmd             1  [STACK] unsigned char 
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;		None
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  1  [STACK] void 
  8687 ;; Registers used:
  8688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8689 ;; Tracked objects:
  8690 ;;		On entry : 3F/3D
  8691 ;;		On exit  : 3F/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8698 ;;Total ram usage:        0 bytes
  8699 ;; Hardware stack levels used:    1
  8700 ;; Hardware stack levels required when called:   13
  8701 ;; This function calls:
  8702 ;;		_send_lcd_cmd_dma
  8703 ;; This function is called by:
  8704 ;;		_main
  8705 ;; This function uses a reentrant model
  8706 ;;
  8707                           
  8708                           	psect	text33
  8709  00677C                     __ptext33:
  8710                           	opt callstack 0
  8711  00677C                     _eaDogM_WriteCommand:
  8712                           	opt callstack 17
  8713                           
  8714                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  8715                           ;stkvar	_cmd @ sp[(0)+-1]
  8716                           
  8717                           ; BSR set to: 59
  8718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8719                           ;incstack = 0
  8720  00677C  0EFF               	movlw	-1
  8721  00677E  50E3               	movf	plusw1,w,c
  8722  006780  6EE6               	movwf	postinc1,c
  8723  006782  EC67  F02E         	call	_send_lcd_cmd_dma	;wreg free
  8724                           
  8725                           ; BSR set to: 0
  8726                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8727  006786  52E5               	movf	postdec1,f,c
  8728  006788  0012               	return		;funcret
  8729  00678A                     __end_of_eaDogM_WriteCommand:
  8730                           	opt callstack 0
  8731                           
  8732 ;; *************** function _send_lcd_cmd_dma *****************
  8733 ;; Defined at:
  8734 ;;		line 189 in file "eadog.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;  strPtr          1  [STACK] unsigned char 
  8737 ;; Auto vars:     Size  Location     Type
  8738 ;;		None
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  1  [STACK] void 
  8741 ;; Registers used:
  8742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 3F/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8752 ;;Total ram usage:        0 bytes
  8753 ;; Hardware stack levels used:    1
  8754 ;; Hardware stack levels required when called:   12
  8755 ;; This function calls:
  8756 ;;		_printf
  8757 ;;		_ringBufS_flush
  8758 ;;		_start_lcd
  8759 ;;		_wait_lcd_done
  8760 ;;		_wait_lcd_set
  8761 ;; This function is called by:
  8762 ;;		_eaDogM_WriteCommand
  8763 ;;		_eaDogM_WriteStringAtPos
  8764 ;; This function uses a reentrant model
  8765 ;;
  8766                           
  8767                           	psect	text34
  8768  005CCE                     __ptext34:
  8769                           	opt callstack 0
  8770  005CCE                     _send_lcd_cmd_dma:
  8771                           	opt callstack 17
  8772                           
  8773                           ;eadog.c: 189: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 190: {;eadog.c: 191:  wait
      +                          _lcd_set();
  8774                           
  8775                           ; BSR set to: 0
  8776                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8777                           ;incstack = 0
  8778  005CCE  EC0B  F034         	call	_wait_lcd_set	;wreg free
  8779                           
  8780                           ; BSR set to: 0
  8781                           ;eadog.c: 193:  ringBufS_flush(spi_link.tx1a, 0);
  8782  005CD2  0E00               	movlw	0
  8783  005CD4  6EE6               	movwf	postinc1,c
  8784  005CD6  0060  F323  FFE6   	movff	_spi_link+6,postinc1
  8785  005CDC  0060  F327  FFE6   	movff	_spi_link+7,postinc1
  8786  005CE2  EC81  F02C         	call	_ringBufS_flush	;wreg free
  8787  005CE6  92BC               	bcf	16316,1,c	;volatile
  8788  005CE8  94BC               	bcf	16316,2,c	;volatile
  8789                           
  8790                           ;eadog.c: 196:  DMA1CON0bits.EN = 0;
  8791  005CEA  013B               	movlb	59	; () banked
  8792  005CEC  9FFC               	bcf	252,7,b	;volatile
  8793                           
  8794                           ; BSR set to: 59
  8795                           ;eadog.c: 197:  DMA1SSZ = 1;
  8796  005CEE  0E00               	movlw	0
  8797  005CF0  6FF8               	movwf	248,b	;volatile
  8798  005CF2  0E01               	movlw	1
  8799  005CF4  6FF7               	movwf	247,b	;volatile
  8800                           
  8801                           ; BSR set to: 59
  8802                           ;eadog.c: 198:  DMA1CON0bits.EN = 1;
  8803  005CF6  8FFC               	bsf	252,7,b	;volatile
  8804                           
  8805                           ; BSR set to: 59
  8806                           ;eadog.c: 199:  printf("%c", strPtr);
  8807                           ;stkvar	_strPtr @ sp[(0)+-1]
  8808  005CF8  0EFF               	movlw	-1
  8809  005CFA  50E3               	movf	plusw1,w,c
  8810  005CFC  6EE6               	movwf	postinc1,c
  8811  005CFE  0E00               	movlw	0
  8812  005D00  6EE6               	movwf	postinc1,c
  8813  005D02  0EC1               	movlw	STR_17& (0+255)
  8814  005D04  6EE6               	movwf	postinc1,c
  8815  005D06  0E03               	movlw	3
  8816  005D08  6EE6               	movwf	postinc1,c
  8817  005D0A  ECD9  F02D         	call	_printf	;wreg free
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;eadog.c: 200:  start_lcd();
  8821  005D0E  EC0E  F034         	call	_start_lcd	;wreg free
  8822                           
  8823                           ; BSR set to: 59
  8824                           ;eadog.c: 201:  wait_lcd_done();
  8825  005D12  EC4D  F033         	call	_wait_lcd_done	;wreg free
  8826                           
  8827                           ; BSR set to: 0
  8828  005D16  82BC               	bsf	16316,1,c	;volatile
  8829                           
  8830                           ; BSR set to: 0
  8831                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8832  005D18  52E5               	movf	postdec1,f,c
  8833  005D1A  0012               	return		;funcret
  8834  005D1C                     __end_of_send_lcd_cmd_dma:
  8835                           	opt callstack 0
  8836                           
  8837 ;; *************** function _wait_lcd_set *****************
  8838 ;; Defined at:
  8839 ;;		line 114 in file "eadog.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;		None
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  1  [STACK] void 
  8846 ;; Registers used:
  8847 ;;		None
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 3F/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8857 ;;Total ram usage:        0 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:    3
  8860 ;; This function calls:
  8861 ;;		Nothing
  8862 ;; This function is called by:
  8863 ;;		_eaDogM_WriteString
  8864 ;;		_send_lcd_cmd_dma
  8865 ;; This function uses a reentrant model
  8866 ;;
  8867                           
  8868                           	psect	text35
  8869  006816                     __ptext35:
  8870                           	opt callstack 0
  8871  006816                     _wait_lcd_set:
  8872                           	opt callstack 25
  8873                           
  8874                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  8875                           
  8876                           ; BSR set to: 0
  8877                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8878                           ;incstack = 0
  8879  006816  0100               	movlb	0	; () banked
  8880  006818  87C2               	bsf	_spi_link& (0+255),3,b	;volatile
  8881                           
  8882                           ; BSR set to: 0
  8883                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8884  00681A  0012               	return		;funcret
  8885  00681C                     __end_of_wait_lcd_set:
  8886                           	opt callstack 0
  8887                           
  8888 ;; *************** function _wait_lcd_done *****************
  8889 ;; Defined at:
  8890 ;;		line 124 in file "eadog.c"
  8891 ;; Parameters:    Size  Location     Type
  8892 ;;		None
  8893 ;; Auto vars:     Size  Location     Type
  8894 ;;		None
  8895 ;; Return value:  Size  Location     Type
  8896 ;;                  1  [STACK] void 
  8897 ;; Registers used:
  8898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8899 ;; Tracked objects:
  8900 ;;		On entry : 4/0
  8901 ;;		On exit  : 3F/0
  8902 ;;		Unchanged: 0/0
  8903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8908 ;;Total ram usage:        0 bytes
  8909 ;; Hardware stack levels used:    1
  8910 ;; Hardware stack levels required when called:    4
  8911 ;; This function calls:
  8912 ;;		_wdtdelay
  8913 ;; This function is called by:
  8914 ;;		_main
  8915 ;;		_send_lcd_cmd_dma
  8916 ;; This function uses a reentrant model
  8917 ;;
  8918                           
  8919                           	psect	text36
  8920  00669A                     __ptext36:
  8921                           	opt callstack 0
  8922  00669A                     _wait_lcd_done:
  8923                           	opt callstack 26
  8924                           
  8925                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  8926                           
  8927                           ; BSR set to: 0
  8928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8929                           ;incstack = 0
  8930  00669A  0100               	movlb	0	; () banked
  8931  00669C  B7C2               	btfsc	_spi_link& (0+255),3,b	;volatile
  8932  00669E  D7FD               	goto	_wait_lcd_done
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;eadog.c: 127:  wdtdelay(50);
  8936  0066A0  0E32               	movlw	50
  8937  0066A2  6EE6               	movwf	postinc1,c
  8938  0066A4  0E00               	movlw	0
  8939  0066A6  6EE6               	movwf	postinc1,c
  8940  0066A8  0E00               	movlw	0
  8941  0066AA  6EE6               	movwf	postinc1,c
  8942  0066AC  0E00               	movlw	0
  8943  0066AE  6EE6               	movwf	postinc1,c
  8944  0066B0  EC39  F02E         	call	_wdtdelay	;wreg free
  8945                           
  8946                           ; BSR set to: 0
  8947                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8948  0066B4  0012               	return		;funcret
  8949  0066B6                     __end_of_wait_lcd_done:
  8950                           	opt callstack 0
  8951                           
  8952 ;; *************** function _wdtdelay *****************
  8953 ;; Defined at:
  8954 ;;		line 21 in file "eadog.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;  delay           4  [STACK] unsigned long 
  8957 ;; Auto vars:     Size  Location     Type
  8958 ;;		None
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  1  [STACK] void 
  8961 ;; Registers used:
  8962 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8963 ;; Tracked objects:
  8964 ;;		On entry : 0/0
  8965 ;;		On exit  : 3F/0
  8966 ;;		Unchanged: 0/0
  8967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8972 ;;Total ram usage:        0 bytes
  8973 ;; Hardware stack levels used:    1
  8974 ;; Hardware stack levels required when called:    3
  8975 ;; This function calls:
  8976 ;;		Nothing
  8977 ;; This function is called by:
  8978 ;;		_init_display
  8979 ;;		_send_lcd_cmd
  8980 ;;		_send_lcd_cmd_long
  8981 ;;		_wait_lcd_done
  8982 ;; This function uses a reentrant model
  8983 ;;
  8984                           
  8985                           	psect	text37
  8986  005C72                     __ptext37:
  8987                           	opt callstack 0
  8988  005C72                     _wdtdelay:
  8989                           	opt callstack 26
  8990                           
  8991                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  8992                           
  8993                           ; BSR set to: 0
  8994                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8995                           ;incstack = 0
  8996  005C72  0100               	movlb	0	; () banked
  8997  005C74  6BE1               	clrf	wdtdelay@dcount& (0+255),b
  8998  005C76  6BE2               	clrf	(wdtdelay@dcount+1)& (0+255),b
  8999  005C78  6BE3               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9000  005C7A  6BE4               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9001  005C7C  D009               	goto	l5777
  9002  005C7E                     l1355:
  9003                           
  9004                           ; BSR set to: 0
  9005                           ;eadog.c: 26:   __nop();
  9006  005C7E  F000               	nop	
  9007  005C80  0004               	clrwdt		;# 
  9008                           
  9009                           ;eadog.c: 28:  };
  9010  005C82  0E01               	movlw	1
  9011  005C84  0100               	movlb	0	; () banked
  9012  005C86  27E1               	addwf	wdtdelay@dcount& (0+255),f,b
  9013  005C88  0E00               	movlw	0
  9014  005C8A  23E2               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9015  005C8C  23E3               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9016  005C8E  23E4               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9017  005C90                     l5777:
  9018                           
  9019                           ; BSR set to: 0
  9020                           ;stkvar	_delay @ sp[(0)+-4]
  9021  005C90  0EFC               	movlw	-4
  9022  005C92  006F FF8C  F039    	movff	plusw1,btemp
  9023  005C98  51E1               	movf	wdtdelay@dcount& (0+255),w,b
  9024  005C9A  5C39               	subwf	btemp,w,c
  9025  005C9C  0EFD               	movlw	-3
  9026  005C9E  006F FF8C  F039    	movff	plusw1,btemp
  9027  005CA4  51E2               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  9028  005CA6  5839               	subwfb	btemp,w,c
  9029  005CA8  0EFE               	movlw	-2
  9030  005CAA  006F FF8C  F039    	movff	plusw1,btemp
  9031  005CB0  51E3               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  9032  005CB2  5839               	subwfb	btemp,w,c
  9033  005CB4  0EFF               	movlw	-1
  9034  005CB6  006F FF8C  F039    	movff	plusw1,btemp
  9035  005CBC  51E4               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  9036  005CBE  5839               	subwfb	btemp,w,c
  9037  005CC0  B0D8               	btfsc	status,0,c
  9038  005CC2  D7DD               	goto	l1355
  9039                           
  9040                           ; BSR set to: 0
  9041                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  9042  005CC4  52E5               	movf	postdec1,f,c
  9043  005CC6  52E5               	movf	postdec1,f,c
  9044  005CC8  52E5               	movf	postdec1,f,c
  9045  005CCA  52E5               	movf	postdec1,f,c
  9046  005CCC  0012               	return		;funcret
  9047  005CCE                     __end_of_wdtdelay:
  9048                           	opt callstack 0
  9049                           
  9050 ;; *************** function _start_lcd *****************
  9051 ;; Defined at:
  9052 ;;		line 109 in file "eadog.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;		None
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;		None
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  1  [STACK] void 
  9059 ;; Registers used:
  9060 ;;		None
  9061 ;; Tracked objects:
  9062 ;;		On entry : 3F/0
  9063 ;;		On exit  : 3F/3B
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9070 ;;Total ram usage:        0 bytes
  9071 ;; Hardware stack levels used:    1
  9072 ;; Hardware stack levels required when called:    3
  9073 ;; This function calls:
  9074 ;;		Nothing
  9075 ;; This function is called by:
  9076 ;;		_eaDogM_WriteString
  9077 ;;		_send_lcd_cmd_dma
  9078 ;; This function uses a reentrant model
  9079 ;;
  9080                           
  9081                           	psect	text38
  9082  00681C                     __ptext38:
  9083                           	opt callstack 0
  9084  00681C                     _start_lcd:
  9085                           	opt callstack 25
  9086                           
  9087                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  9088                           
  9089                           ; BSR set to: 0
  9090                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9091                           ;incstack = 0
  9092  00681C  013B               	movlb	59	; () banked
  9093  00681E  8DFC               	bsf	252,6,b	;volatile
  9094                           
  9095                           ; BSR set to: 59
  9096                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9097  006820  0012               	return		;funcret
  9098  006822                     __end_of_start_lcd:
  9099                           	opt callstack 0
  9100                           
  9101 ;; *************** function _ringBufS_flush *****************
  9102 ;; Defined at:
  9103 ;;		line 76 in file "ringbufs.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;  _this           2  [STACK] PTR struct ringBufS_t
  9106 ;;		 -> ring_buf1(67), 
  9107 ;;  clearBuffer     1  [STACK] const char 
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;		None
  9110 ;; Return value:  Size  Location     Type
  9111 ;;                  1  [STACK] void 
  9112 ;; Registers used:
  9113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9114 ;; Tracked objects:
  9115 ;;		On entry : 3F/0
  9116 ;;		On exit  : 0/0
  9117 ;;		Unchanged: 0/0
  9118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9123 ;;Total ram usage:        0 bytes
  9124 ;; Hardware stack levels used:    1
  9125 ;; Hardware stack levels required when called:    4
  9126 ;; This function calls:
  9127 ;;		_memset
  9128 ;; This function is called by:
  9129 ;;		_eaDogM_WriteString
  9130 ;;		_send_lcd_cmd_dma
  9131 ;; This function uses a reentrant model
  9132 ;;
  9133                           
  9134                           	psect	text39
  9135  005902                     __ptext39:
  9136                           	opt callstack 0
  9137  005902                     _ringBufS_flush:
  9138                           	opt callstack 24
  9139                           
  9140                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  9141                           ;stkvar	__this @ sp[(0)+-2]
  9142                           
  9143                           ; BSR set to: 59
  9144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9145                           ;incstack = 0
  9146  005902  0EFE               	movlw	-2
  9147  005904  006F FF8C  F043    	movff	plusw1,btemp+10
  9148  00590A  0EFF               	movlw	-1
  9149  00590C  006F FF8C  F044    	movff	plusw1,btemp+11
  9150  005912  0E42               	movlw	66
  9151  005914  2443               	addwf	btemp+10,w,c
  9152  005916  6ED9               	movwf	fsr2l,c
  9153  005918  0E00               	movlw	0
  9154  00591A  2044               	addwfc	btemp+11,w,c
  9155  00591C  6EDA               	movwf	fsr2h,c
  9156  00591E  0E00               	movlw	0
  9157  005920  6EDF               	movwf	indf2,c
  9158                           
  9159                           ;ringbufs.c: 79:  _this->head = 0;
  9160                           ;stkvar	__this @ sp[(0)+-2]
  9161  005922  0EFE               	movlw	-2
  9162  005924  006F FF8C  F043    	movff	plusw1,btemp+10
  9163  00592A  0EFF               	movlw	-1
  9164  00592C  006F FF8C  F044    	movff	plusw1,btemp+11
  9165  005932  0E40               	movlw	64
  9166  005934  2443               	addwf	btemp+10,w,c
  9167  005936  6ED9               	movwf	fsr2l,c
  9168  005938  0E00               	movlw	0
  9169  00593A  2044               	addwfc	btemp+11,w,c
  9170  00593C  6EDA               	movwf	fsr2h,c
  9171  00593E  0E00               	movlw	0
  9172  005940  6EDF               	movwf	indf2,c
  9173                           
  9174                           ;ringbufs.c: 80:  _this->tail = 0;
  9175                           ;stkvar	__this @ sp[(0)+-2]
  9176  005942  0EFE               	movlw	-2
  9177  005944  006F FF8C  F043    	movff	plusw1,btemp+10
  9178  00594A  0EFF               	movlw	-1
  9179  00594C  006F FF8C  F044    	movff	plusw1,btemp+11
  9180  005952  0E41               	movlw	65
  9181  005954  2443               	addwf	btemp+10,w,c
  9182  005956  6ED9               	movwf	fsr2l,c
  9183  005958  0E00               	movlw	0
  9184  00595A  2044               	addwfc	btemp+11,w,c
  9185  00595C  6EDA               	movwf	fsr2h,c
  9186  00595E  0E00               	movlw	0
  9187  005960  6EDF               	movwf	indf2,c
  9188                           
  9189                           ;ringbufs.c: 81:  if (clearBuffer) {
  9190                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  9191  005962  0EFD               	movlw	-3
  9192  005964  50E3               	movf	plusw1,w,c
  9193  005966  B4D8               	btfsc	status,2,c
  9194  005968  D011               	goto	l1493
  9195                           
  9196                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  9197  00596A  0E40               	movlw	64
  9198  00596C  6EE6               	movwf	postinc1,c
  9199  00596E  0E00               	movlw	0
  9200  005970  6EE6               	movwf	postinc1,c
  9201  005972  0E00               	movlw	0
  9202  005974  6EE6               	movwf	postinc1,c
  9203  005976  0E00               	movlw	0
  9204  005978  6EE6               	movwf	postinc1,c
  9205                           
  9206                           ;stkvar	__this @ sp[(-4)+-2]
  9207  00597A  0EFA               	movlw	-6
  9208  00597C  006F FF8F FFE6     	movff	plusw1,postinc1
  9209  005982  006F FF8F FFE6     	movff	plusw1,postinc1
  9210  005988  EC03  F01C         	call	_memset	;wreg free
  9211  00598C                     l1493:
  9212                           
  9213                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  9214  00598C  52E5               	movf	postdec1,f,c
  9215  00598E  52E5               	movf	postdec1,f,c
  9216  005990  52E5               	movf	postdec1,f,c
  9217  005992  0012               	return		;funcret
  9218  005994                     __end_of_ringBufS_flush:
  9219                           	opt callstack 0
  9220                           
  9221 ;; *************** function _memset *****************
  9222 ;; Defined at:
  9223 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;  dest            2  [STACK] PTR void 
  9226 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9227 ;;  c               2  [STACK] int 
  9228 ;;  n               2  [STACK] unsigned int 
  9229 ;; Auto vars:     Size  Location     Type
  9230 ;;  s               2  [STACK] PTR unsigned char 
  9231 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9232 ;;  k               2  [STACK] unsigned int 
  9233 ;; Return value:  Size  Location     Type
  9234 ;;                  2  [STACK] PTR void 
  9235 ;; Registers used:
  9236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9237 ;; Tracked objects:
  9238 ;;		On entry : 0/0
  9239 ;;		On exit  : 0/0
  9240 ;;		Unchanged: 0/0
  9241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9246 ;;Total ram usage:        0 bytes
  9247 ;; Hardware stack levels used:    1
  9248 ;; Hardware stack levels required when called:    3
  9249 ;; This function calls:
  9250 ;;		Nothing
  9251 ;; This function is called by:
  9252 ;;		_ringBufS_init
  9253 ;;		_ringBufS_flush
  9254 ;; This function uses a reentrant model
  9255 ;;
  9256                           
  9257                           	psect	text40
  9258  003806                     __ptext40:
  9259                           	opt callstack 0
  9260  003806                     _memset:
  9261                           	opt callstack 0
  9262                           
  9263                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9264  003806  52E6               	movf	postinc1,f,c
  9265  003808  52E6               	movf	postinc1,f,c
  9266  00380A  52E6               	movf	postinc1,f,c
  9267  00380C  52E6               	movf	postinc1,f,c
  9268                           
  9269                           ;stkvar	_dest @ sp[(-4)+-2]
  9270                           
  9271                           ;incstack = 0
  9272  00380E  0EFA               	movlw	-6
  9273  003810  006F FF8C  F043    	movff	plusw1,btemp+10
  9274  003816  0EFB               	movlw	-5
  9275  003818  006F FF8C  F044    	movff	plusw1,btemp+11
  9276                           
  9277                           ;stkvar	_s @ sp[(-4)+0]
  9278  00381E  0EFD               	movlw	-3
  9279  003820  0060  F113  FFE3   	movff	btemp+11,plusw1
  9280  003826  0EFC               	movlw	-4
  9281  003828  0060  F10F  FFE3   	movff	btemp+10,plusw1
  9282                           
  9283                           ;stkvar	_n @ sp[(-4)+-6]
  9284  00382E  0EF6               	movlw	-10
  9285  003830  006F FF8C  F039    	movff	plusw1,btemp
  9286  003836  0EF7               	movlw	-9
  9287  003838  50E3               	movf	plusw1,w,c
  9288  00383A  1039               	iorwf	btemp,w,c
  9289  00383C  B4D8               	btfsc	status,2,c
  9290  00383E  D154               	goto	u5350
  9291                           
  9292                           ;stkvar	_c @ sp[(-4)+-4]
  9293                           ;stkvar	_s @ sp[(-4)+0]
  9294  003840  0EFC               	movlw	-4
  9295  003842  006F FF8F FFD9     	movff	plusw1,fsr2l
  9296  003848  0EFD               	movlw	-3
  9297  00384A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9298  003850  0EF8               	movlw	-8
  9299  003852  006F FF8F FFDF     	movff	plusw1,indf2
  9300                           
  9301                           ;stkvar	_c @ sp[(-4)+-4]
  9302                           ;stkvar	_n @ sp[(-4)+-6]
  9303                           ;stkvar	_s @ sp[(-4)+0]
  9304  003858  0EFC               	movlw	-4
  9305  00385A  006F FF8C  F043    	movff	plusw1,btemp+10
  9306  003860  0EFD               	movlw	-3
  9307  003862  006F FF8C  F044    	movff	plusw1,btemp+11
  9308  003868  0EF6               	movlw	-10
  9309  00386A  50E3               	movf	plusw1,w,c
  9310  00386C  2643               	addwf	btemp+10,f,c
  9311  00386E  0EF7               	movlw	-9
  9312  003870  50E3               	movf	plusw1,w,c
  9313  003872  2244               	addwfc	btemp+11,f,c
  9314  003874  0EFF               	movlw	255
  9315  003876  2443               	addwf	btemp+10,w,c
  9316  003878  6ED9               	movwf	fsr2l,c
  9317  00387A  0EFF               	movlw	255
  9318  00387C  2044               	addwfc	btemp+11,w,c
  9319  00387E  6EDA               	movwf	fsr2h,c
  9320  003880  0EF8               	movlw	-8
  9321  003882  006F FF8F FFDF     	movff	plusw1,indf2
  9322                           
  9323                           ;stkvar	_n @ sp[(-4)+-6]
  9324  003888  0EF7               	movlw	-9
  9325  00388A  50E3               	movf	plusw1,w,c
  9326  00388C  E108               	bnz	l8479
  9327  00388E  0EF6               	movlw	-10
  9328  003890  006F FF8C  F039    	movff	plusw1,btemp
  9329  003896  0E03               	movlw	3
  9330  003898  5E39               	subwf	btemp,f,c
  9331  00389A  A0D8               	btfss	status,0,c
  9332  00389C  D125               	goto	u5350
  9333  00389E                     l8479:
  9334                           
  9335                           ;stkvar	_c @ sp[(-4)+-4]
  9336                           ;stkvar	_s @ sp[(-4)+0]
  9337  00389E  0EFC               	movlw	-4
  9338  0038A0  006F FF8C  F043    	movff	plusw1,btemp+10
  9339  0038A6  0EFD               	movlw	-3
  9340  0038A8  006F FF8C  F044    	movff	plusw1,btemp+11
  9341  0038AE  0E01               	movlw	1
  9342  0038B0  2443               	addwf	btemp+10,w,c
  9343  0038B2  6ED9               	movwf	fsr2l,c
  9344  0038B4  0E00               	movlw	0
  9345  0038B6  2044               	addwfc	btemp+11,w,c
  9346  0038B8  6EDA               	movwf	fsr2h,c
  9347  0038BA  0EF8               	movlw	-8
  9348  0038BC  006F FF8F FFDF     	movff	plusw1,indf2
  9349                           
  9350                           ;stkvar	_c @ sp[(-4)+-4]
  9351                           ;stkvar	_s @ sp[(-4)+0]
  9352  0038C2  0EFC               	movlw	-4
  9353  0038C4  006F FF8C  F043    	movff	plusw1,btemp+10
  9354  0038CA  0EFD               	movlw	-3
  9355  0038CC  006F FF8C  F044    	movff	plusw1,btemp+11
  9356  0038D2  0E02               	movlw	2
  9357  0038D4  2443               	addwf	btemp+10,w,c
  9358  0038D6  6ED9               	movwf	fsr2l,c
  9359  0038D8  0E00               	movlw	0
  9360  0038DA  2044               	addwfc	btemp+11,w,c
  9361  0038DC  6EDA               	movwf	fsr2h,c
  9362  0038DE  0EF8               	movlw	-8
  9363  0038E0  006F FF8F FFDF     	movff	plusw1,indf2
  9364                           
  9365                           ;stkvar	_c @ sp[(-4)+-4]
  9366                           ;stkvar	_n @ sp[(-4)+-6]
  9367                           ;stkvar	_s @ sp[(-4)+0]
  9368  0038E6  0EFC               	movlw	-4
  9369  0038E8  006F FF8C  F043    	movff	plusw1,btemp+10
  9370  0038EE  0EFD               	movlw	-3
  9371  0038F0  006F FF8C  F044    	movff	plusw1,btemp+11
  9372  0038F6  0EF6               	movlw	-10
  9373  0038F8  50E3               	movf	plusw1,w,c
  9374  0038FA  2643               	addwf	btemp+10,f,c
  9375  0038FC  0EF7               	movlw	-9
  9376  0038FE  50E3               	movf	plusw1,w,c
  9377  003900  2244               	addwfc	btemp+11,f,c
  9378  003902  0EFE               	movlw	254
  9379  003904  2443               	addwf	btemp+10,w,c
  9380  003906  6ED9               	movwf	fsr2l,c
  9381  003908  0EFF               	movlw	255
  9382  00390A  2044               	addwfc	btemp+11,w,c
  9383  00390C  6EDA               	movwf	fsr2h,c
  9384  00390E  0EF8               	movlw	-8
  9385  003910  006F FF8F FFDF     	movff	plusw1,indf2
  9386                           
  9387                           ;stkvar	_c @ sp[(-4)+-4]
  9388                           ;stkvar	_n @ sp[(-4)+-6]
  9389                           ;stkvar	_s @ sp[(-4)+0]
  9390  003916  0EFC               	movlw	-4
  9391  003918  006F FF8C  F043    	movff	plusw1,btemp+10
  9392  00391E  0EFD               	movlw	-3
  9393  003920  006F FF8C  F044    	movff	plusw1,btemp+11
  9394  003926  0EF6               	movlw	-10
  9395  003928  50E3               	movf	plusw1,w,c
  9396  00392A  2643               	addwf	btemp+10,f,c
  9397  00392C  0EF7               	movlw	-9
  9398  00392E  50E3               	movf	plusw1,w,c
  9399  003930  2244               	addwfc	btemp+11,f,c
  9400  003932  0EFD               	movlw	253
  9401  003934  2443               	addwf	btemp+10,w,c
  9402  003936  6ED9               	movwf	fsr2l,c
  9403  003938  0EFF               	movlw	255
  9404  00393A  2044               	addwfc	btemp+11,w,c
  9405  00393C  6EDA               	movwf	fsr2h,c
  9406  00393E  0EF8               	movlw	-8
  9407  003940  006F FF8F FFDF     	movff	plusw1,indf2
  9408                           
  9409                           ;stkvar	_n @ sp[(-4)+-6]
  9410  003946  0EF7               	movlw	-9
  9411  003948  50E3               	movf	plusw1,w,c
  9412  00394A  E108               	bnz	l8485
  9413  00394C  0EF6               	movlw	-10
  9414  00394E  006F FF8C  F039    	movff	plusw1,btemp
  9415  003954  0E07               	movlw	7
  9416  003956  5E39               	subwf	btemp,f,c
  9417  003958  A0D8               	btfss	status,0,c
  9418  00395A  D0C6               	goto	u5350
  9419  00395C                     l8485:
  9420                           
  9421                           ;stkvar	_c @ sp[(-4)+-4]
  9422                           ;stkvar	_s @ sp[(-4)+0]
  9423  00395C  0EFC               	movlw	-4
  9424  00395E  006F FF8C  F043    	movff	plusw1,btemp+10
  9425  003964  0EFD               	movlw	-3
  9426  003966  006F FF8C  F044    	movff	plusw1,btemp+11
  9427  00396C  0E03               	movlw	3
  9428  00396E  2443               	addwf	btemp+10,w,c
  9429  003970  6ED9               	movwf	fsr2l,c
  9430  003972  0E00               	movlw	0
  9431  003974  2044               	addwfc	btemp+11,w,c
  9432  003976  6EDA               	movwf	fsr2h,c
  9433  003978  0EF8               	movlw	-8
  9434  00397A  006F FF8F FFDF     	movff	plusw1,indf2
  9435                           
  9436                           ;stkvar	_c @ sp[(-4)+-4]
  9437                           ;stkvar	_n @ sp[(-4)+-6]
  9438                           ;stkvar	_s @ sp[(-4)+0]
  9439  003980  0EFC               	movlw	-4
  9440  003982  006F FF8C  F043    	movff	plusw1,btemp+10
  9441  003988  0EFD               	movlw	-3
  9442  00398A  006F FF8C  F044    	movff	plusw1,btemp+11
  9443  003990  0EF6               	movlw	-10
  9444  003992  50E3               	movf	plusw1,w,c
  9445  003994  2643               	addwf	btemp+10,f,c
  9446  003996  0EF7               	movlw	-9
  9447  003998  50E3               	movf	plusw1,w,c
  9448  00399A  2244               	addwfc	btemp+11,f,c
  9449  00399C  0EFC               	movlw	252
  9450  00399E  2443               	addwf	btemp+10,w,c
  9451  0039A0  6ED9               	movwf	fsr2l,c
  9452  0039A2  0EFF               	movlw	255
  9453  0039A4  2044               	addwfc	btemp+11,w,c
  9454  0039A6  6EDA               	movwf	fsr2h,c
  9455  0039A8  0EF8               	movlw	-8
  9456  0039AA  006F FF8F FFDF     	movff	plusw1,indf2
  9457                           
  9458                           ;stkvar	_n @ sp[(-4)+-6]
  9459  0039B0  0EF7               	movlw	-9
  9460  0039B2  50E3               	movf	plusw1,w,c
  9461  0039B4  E108               	bnz	l8491
  9462  0039B6  0EF6               	movlw	-10
  9463  0039B8  006F FF8C  F039    	movff	plusw1,btemp
  9464  0039BE  0E09               	movlw	9
  9465  0039C0  5E39               	subwf	btemp,f,c
  9466  0039C2  A0D8               	btfss	status,0,c
  9467  0039C4  D091               	goto	u5350
  9468  0039C6                     l8491:
  9469                           
  9470                           ;stkvar	_s @ sp[(-4)+0]
  9471  0039C6  0EFC               	movlw	-4
  9472  0039C8  006F FF8C  F043    	movff	plusw1,btemp+10
  9473  0039CE  1E43               	comf	btemp+10,f,c
  9474  0039D0  0EFD               	movlw	-3
  9475  0039D2  006F FF8C  F044    	movff	plusw1,btemp+11
  9476  0039D8  1E44               	comf	btemp+11,f,c
  9477  0039DA  2A43               	incf	btemp+10,f,c
  9478  0039DC  B4D8               	btfsc	status,2,c
  9479  0039DE  2A44               	incf	btemp+11,f,c
  9480  0039E0  0E03               	movlw	3
  9481  0039E2  1643               	andwf	btemp+10,f,c
  9482  0039E4  0E00               	movlw	0
  9483  0039E6  1644               	andwf	btemp+11,f,c
  9484                           
  9485                           ;stkvar	_k @ sp[(-4)+2]
  9486  0039E8  0EFE               	movlw	-2
  9487  0039EA  0060  F10F  FFE3   	movff	btemp+10,plusw1
  9488  0039F0  0EFF               	movlw	-1
  9489  0039F2  0060  F113  FFE3   	movff	btemp+11,plusw1
  9490                           
  9491                           ;stkvar	_k @ sp[(-4)+2]
  9492                           ;stkvar	_s @ sp[(-4)+0]
  9493  0039F8  0EFC               	movlw	-4
  9494  0039FA  50E3               	movf	plusw1,w,c
  9495  0039FC  6E39               	movwf	btemp,c
  9496  0039FE  0EFE               	movlw	-2
  9497  003A00  50E3               	movf	plusw1,w,c
  9498  003A02  2639               	addwf	btemp,f,c
  9499  003A04  0EFC               	movlw	-4
  9500  003A06  0060  F0E7  FFE3   	movff	btemp,plusw1
  9501  003A0C  0EFD               	movlw	-3
  9502  003A0E  50E3               	movf	plusw1,w,c
  9503  003A10  6E39               	movwf	btemp,c
  9504  003A12  0EFF               	movlw	-1
  9505  003A14  50E3               	movf	plusw1,w,c
  9506  003A16  2239               	addwfc	btemp,f,c
  9507  003A18  0EFD               	movlw	-3
  9508  003A1A  0060  F0E7  FFE3   	movff	btemp,plusw1
  9509                           
  9510                           ;stkvar	_k @ sp[(-4)+2]
  9511                           ;stkvar	_n @ sp[(-4)+-6]
  9512  003A20  0EF6               	movlw	-10
  9513  003A22  50E3               	movf	plusw1,w,c
  9514  003A24  6E39               	movwf	btemp,c
  9515  003A26  0EFE               	movlw	-2
  9516  003A28  50E3               	movf	plusw1,w,c
  9517  003A2A  5E39               	subwf	btemp,f,c
  9518  003A2C  0EF6               	movlw	-10
  9519  003A2E  0060  F0E7  FFE3   	movff	btemp,plusw1
  9520  003A34  0EF7               	movlw	-9
  9521  003A36  50E3               	movf	plusw1,w,c
  9522  003A38  6E39               	movwf	btemp,c
  9523  003A3A  0EFF               	movlw	-1
  9524  003A3C  50E3               	movf	plusw1,w,c
  9525  003A3E  5A39               	subwfb	btemp,f,c
  9526  003A40  0EF7               	movlw	-9
  9527  003A42  0060  F0E7  FFE3   	movff	btemp,plusw1
  9528  003A48  0EFC               	movlw	252
  9529  003A4A  6E43               	movwf	btemp+10,c
  9530  003A4C  0EFF               	movlw	255
  9531  003A4E  6E44               	movwf	btemp+11,c
  9532                           
  9533                           ;stkvar	_n @ sp[(-4)+-6]
  9534  003A50  0EF6               	movlw	-10
  9535  003A52  006F FF8C  F039    	movff	plusw1,btemp
  9536  003A58  5043               	movf	btemp+10,w,c
  9537  003A5A  1639               	andwf	btemp,f,c
  9538  003A5C  0EF6               	movlw	-10
  9539  003A5E  0060  F0E7  FFE3   	movff	btemp,plusw1
  9540  003A64  0EF7               	movlw	-9
  9541  003A66  006F FF8C  F039    	movff	plusw1,btemp
  9542  003A6C  5044               	movf	btemp+11,w,c
  9543  003A6E  1639               	andwf	btemp,f,c
  9544  003A70  0EF7               	movlw	-9
  9545  003A72  D02E               	goto	L23
  9546  003A74                     l8499:
  9547                           
  9548                           ;stkvar	_c @ sp[(-4)+-4]
  9549                           ;stkvar	_s @ sp[(-4)+0]
  9550  003A74  0EFC               	movlw	-4
  9551  003A76  006F FF8F FFD9     	movff	plusw1,fsr2l
  9552  003A7C  0EFD               	movlw	-3
  9553  003A7E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9554  003A84  0EF8               	movlw	-8
  9555  003A86  006F FF8F FFDF     	movff	plusw1,indf2
  9556                           
  9557                           ;stkvar	_n @ sp[(-4)+-6]
  9558  003A8C  0EF6               	movlw	-10
  9559  003A8E  006F FF8C  F039    	movff	plusw1,btemp
  9560  003A94  0E01               	movlw	1
  9561  003A96  5E39               	subwf	btemp,f,c
  9562  003A98  0EF6               	movlw	-10
  9563  003A9A  0060  F0E7  FFE3   	movff	btemp,plusw1
  9564  003AA0  0EF7               	movlw	-9
  9565  003AA2  006F FF8C  F039    	movff	plusw1,btemp
  9566  003AA8  0E00               	movlw	0
  9567  003AAA  5A39               	subwfb	btemp,f,c
  9568  003AAC  0EF7               	movlw	-9
  9569  003AAE  0060  F0E7  FFE3   	movff	btemp,plusw1
  9570                           
  9571                           ;stkvar	_s @ sp[(-4)+0]
  9572  003AB4  0EFC               	movlw	-4
  9573  003AB6  50E3               	movf	plusw1,w,c
  9574  003AB8  0F01               	addlw	1
  9575  003ABA  6E39               	movwf	btemp,c
  9576  003ABC  0EFC               	movlw	-4
  9577  003ABE  0060  F0E7  FFE3   	movff	btemp,plusw1
  9578  003AC4  6A39               	clrf	btemp,c
  9579  003AC6  0EFD               	movlw	-3
  9580  003AC8  50E3               	movf	plusw1,w,c
  9581  003ACA  2039               	addwfc	btemp,w,c
  9582  003ACC  6E39               	movwf	btemp,c
  9583  003ACE  0EFD               	movlw	-3
  9584  003AD0                     L23:
  9585  003AD0  0060  F0E7  FFE3   	movff	btemp,plusw1
  9586                           
  9587                           ;stkvar	_n @ sp[(-4)+-6]
  9588  003AD6  0EF6               	movlw	-10
  9589  003AD8  006F FF8C  F039    	movff	plusw1,btemp
  9590  003ADE  0EF7               	movlw	-9
  9591  003AE0  50E3               	movf	plusw1,w,c
  9592  003AE2  1039               	iorwf	btemp,w,c
  9593  003AE4  A4D8               	btfss	status,2,c
  9594  003AE6  D7C6               	goto	l8499
  9595  003AE8                     u5350:
  9596                           
  9597                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  9598  003AE8  0EF6               	movlw	246
  9599  003AEA  26E1               	addwf	fsr1l,f,c
  9600  003AEC  0EFF               	movlw	255
  9601  003AEE  22E2               	addwfc	fsr1h,f,c
  9602  003AF0  0012               	return		;funcret
  9603  003AF2                     __end_of_memset:
  9604                           	opt callstack 0
  9605                           
  9606 ;; *************** function _printf *****************
  9607 ;; Defined at:
  9608 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  9609 ;; Parameters:    Size  Location     Type
  9610 ;;  fmt             1  [STACK] PTR const unsigned char 
  9611 ;;		 -> STR_18(3), STR_17(3), STR_16(3), 
  9612 ;; Auto vars:     Size  Location     Type
  9613 ;;  ap              2  [STACK] PTR void [1]
  9614 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9615 ;;  ret             2    0        int 
  9616 ;; Return value:  Size  Location     Type
  9617 ;;                  2  [STACK] int 
  9618 ;; Registers used:
  9619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9620 ;; Tracked objects:
  9621 ;;		On entry : 3F/3B
  9622 ;;		On exit  : 3F/0
  9623 ;;		Unchanged: 0/0
  9624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9629 ;;Total ram usage:        0 bytes
  9630 ;; Hardware stack levels used:    1
  9631 ;; Hardware stack levels required when called:   11
  9632 ;; This function calls:
  9633 ;;		_vfprintf
  9634 ;; This function is called by:
  9635 ;;		_eaDogM_WriteString
  9636 ;;		_send_lcd_cmd_dma
  9637 ;; This function uses a reentrant model
  9638 ;;
  9639                           
  9640                           	psect	text41
  9641  005BB2                     __ptext41:
  9642                           	opt callstack 0
  9643  005BB2                     _printf:
  9644                           	opt callstack 0
  9645                           
  9646                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9647  005BB2  52E6               	movf	postinc1,f,c
  9648  005BB4  52E6               	movf	postinc1,f,c
  9649                           
  9650                           ;stkvar	?_printf @ sp[(-2)+-3]
  9651                           
  9652                           ;incstack = 0
  9653  005BB6  0EFB               	movlw	251
  9654  005BB8  24E1               	addwf	fsr1l,w,c
  9655  005BBA  6E43               	movwf	btemp+10,c
  9656  005BBC  0EFF               	movlw	255
  9657  005BBE  20E2               	addwfc	fsr1h,w,c
  9658  005BC0  6E44               	movwf	btemp+11,c
  9659  005BC2  0E01               	movlw	1
  9660  005BC4  2643               	addwf	btemp+10,f,c
  9661  005BC6  0E00               	movlw	0
  9662  005BC8  2244               	addwfc	btemp+11,f,c
  9663                           
  9664                           ;stkvar	_ap @ sp[(-2)+0]
  9665  005BCA  0EFF               	movlw	-1
  9666  005BCC  0060  F113  FFE3   	movff	btemp+11,plusw1
  9667  005BD2  0EFE               	movlw	-2
  9668  005BD4  0060  F10F  FFE3   	movff	btemp+10,plusw1
  9669                           
  9670                           ;stkvar	_ap @ sp[(-2)+0]
  9671  005BDA  0EFE               	movlw	254
  9672  005BDC  24E1               	addwf	fsr1l,w,c
  9673  005BDE  6E39               	movwf	btemp,c
  9674  005BE0  0EFF               	movlw	255
  9675  005BE2  20E2               	addwfc	fsr1h,w,c
  9676  005BE4  6E3A               	movwf	btemp+1,c
  9677  005BE6  0060  F0E7  FFE6   	movff	btemp,postinc1
  9678  005BEC  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  9679                           
  9680                           ;stkvar	_fmt @ sp[(-4)+-2]
  9681  005BF2  0EFA               	movlw	-6
  9682  005BF4  50E3               	movf	plusw1,w,c
  9683  005BF6  6EE6               	movwf	postinc1,c
  9684  005BF8  0E00               	movlw	0
  9685  005BFA  6EE6               	movwf	postinc1,c
  9686  005BFC  0E00               	movlw	0
  9687  005BFE  6EE6               	movwf	postinc1,c
  9688  005C00  ECE9  F02B         	call	_vfprintf	;wreg free
  9689                           
  9690                           ; BSR set to: 0
  9691                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  9692  005C04  52E5               	movf	postdec1,f,c
  9693  005C06  52E5               	movf	postdec1,f,c
  9694  005C08  52E5               	movf	postdec1,f,c
  9695  005C0A  50E7               	movf	indf1,w,c
  9696  005C0C  5EE1               	subwf	fsr1l,f,c
  9697  005C0E  0E00               	movlw	0
  9698  005C10  5AE2               	subwfb	fsr1h,f,c
  9699  005C12  0012               	return		;funcret
  9700  005C14                     __end_of_printf:
  9701                           	opt callstack 0
  9702                           
  9703 ;; *************** function _vfprintf *****************
  9704 ;; Defined at:
  9705 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9706 ;; Parameters:    Size  Location     Type
  9707 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9708 ;;		 -> f(5), NULL(0), 
  9709 ;;  fmt             1  [STACK] PTR const unsigned char 
  9710 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
  9711 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
  9712 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
  9713 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
  9714 ;;		 -> STR_1(17), 
  9715 ;;  ap              2  [STACK] PTR PTR void 
  9716 ;;		 -> ap(2), ap(2), 
  9717 ;; Auto vars:     Size  Location     Type
  9718 ;;  cfmt            1  [STACK] PTR unsigned char 
  9719 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
  9720 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
  9721 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
  9722 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
  9723 ;;		 -> STR_1(17), 
  9724 ;; Return value:  Size  Location     Type
  9725 ;;                  2  [STACK] int 
  9726 ;; Registers used:
  9727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9728 ;; Tracked objects:
  9729 ;;		On entry : 0/0
  9730 ;;		On exit  : 3F/0
  9731 ;;		Unchanged: 0/0
  9732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9737 ;;Total ram usage:        0 bytes
  9738 ;; Hardware stack levels used:    1
  9739 ;; Hardware stack levels required when called:   10
  9740 ;; This function calls:
  9741 ;;		_vfpfcnvrt
  9742 ;; This function is called by:
  9743 ;;		_sprintf
  9744 ;;		_printf
  9745 ;; This function uses a reentrant model
  9746 ;;
  9747                           
  9748                           	psect	text42
  9749  0057D2                     __ptext42:
  9750                           	opt callstack 0
  9751  0057D2                     _vfprintf:
  9752                           	opt callstack 0
  9753                           
  9754                           ; BSR set to: 0
  9755                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9756  0057D2  52E6               	movf	postinc1,f,c
  9757                           
  9758                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  9759                           ;stkvar	_fmt @ sp[(-1)+-3]
  9760                           
  9761                           ;incstack = 0
  9762  0057D4  0EFC               	movlw	-4
  9763  0057D6  006F FF8C  F044    	movff	plusw1,btemp+11
  9764                           
  9765                           ;stkvar	_cfmt @ sp[(-1)+0]
  9766  0057DC  0EFF               	movlw	-1
  9767  0057DE  0060  F113  FFE3   	movff	btemp+11,plusw1
  9768                           
  9769                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  9770  0057E4  0100               	movlb	0	; () banked
  9771  0057E6  6BEE               	clrf	_nout& (0+255),b
  9772  0057E8  6BEF               	clrf	(_nout+1)& (0+255),b
  9773                           
  9774                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9775  0057EA  D021               	goto	l8519
  9776  0057EC                     l8517:
  9777                           
  9778                           ; BSR set to: 0
  9779                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  9780                           ;stkvar	_ap @ sp[(-1)+-5]
  9781  0057EC  0EFA               	movlw	-6
  9782  0057EE  006F FF8F FFE6     	movff	plusw1,postinc1
  9783  0057F4  006F FF8F FFE6     	movff	plusw1,postinc1
  9784                           
  9785                           ;stkvar	_cfmt @ sp[(-3)+0]
  9786  0057FA  0EFD               	movlw	253
  9787  0057FC  24E1               	addwf	fsr1l,w,c
  9788  0057FE  6E39               	movwf	btemp,c
  9789  005800  0EFF               	movlw	255
  9790  005802  20E2               	addwfc	fsr1h,w,c
  9791  005804  6E3A               	movwf	btemp+1,c
  9792  005806  0060  F0E7  FFE6   	movff	btemp,postinc1
  9793  00580C  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  9794                           
  9795                           ;stkvar	_fp @ sp[(-5)+-2]
  9796  005812  0EF9               	movlw	-7
  9797  005814  006F FF8F FFE6     	movff	plusw1,postinc1
  9798  00581A  006F FF8F FFE6     	movff	plusw1,postinc1
  9799  005820  ECC7  F015         	call	_vfpfcnvrt	;wreg free
  9800  005824  5039               	movf	btemp,w,c
  9801  005826  0100               	movlb	0	; () banked
  9802  005828  27EE               	addwf	_nout& (0+255),f,b
  9803  00582A  503A               	movf	btemp+1,w,c
  9804  00582C  23EF               	addwfc	(_nout+1)& (0+255),f,b
  9805  00582E                     l8519:
  9806                           
  9807                           ; BSR set to: 0
  9808                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9809                           ;stkvar	_cfmt @ sp[(-1)+0]
  9810  00582E  50E1               	movf	fsr1l,w,c
  9811  005830  0FFF               	addlw	-1
  9812  005832  6ED9               	movwf	fsr2l,c
  9813  005834  50E2               	movf	fsr1h,w,c
  9814  005836  6EDA               	movwf	fsr2h,c
  9815  005838  0EFF               	movlw	255
  9816  00583A  22DA               	addwfc	fsr2h,f,c
  9817  00583C  006F FF7F FFF6     	movff	indf2,tblptrl
  9818  005842                     	if	1	;There is more than 1 active tblptr byte
  9819  005842  0E20               	movlw	high __smallconst
  9820  005844  6EF7               	movwf	tblptrh,c
  9821  005846                     	endif
  9822  005846                     	if	0	;tblptru may be non-zero
  9823  005846                     	endif
  9824  005846                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9825  005846  0E00               	movlw	low (__smallconst shr (0+16))
  9826  005848  6EF8               	movwf	tblptru,c
  9827  00584A                     	endif
  9828  00584A  0008               	tblrd		*
  9829  00584C  50F5               	movf	tablat,w,c
  9830  00584E  0900               	iorlw	0
  9831  005850  A4D8               	btfss	status,2,c
  9832  005852  D7CC               	goto	l8517
  9833                           
  9834                           ; BSR set to: 0
  9835                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  9836  005854  0060  F3B8  F039   	movff	_nout,btemp
  9837  00585A  0060  F3BC  F03A   	movff	_nout+1,btemp+1
  9838                           
  9839                           ; BSR set to: 0
  9840                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  9841  005860  0EFA               	movlw	250
  9842  005862  26E1               	addwf	fsr1l,f,c
  9843  005864  0EFF               	movlw	255
  9844  005866  22E2               	addwfc	fsr1h,f,c
  9845  005868  0012               	return		;funcret
  9846  00586A                     __end_of_vfprintf:
  9847                           	opt callstack 0
  9848                           
  9849 ;; *************** function _vfpfcnvrt *****************
  9850 ;; Defined at:
  9851 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9852 ;; Parameters:    Size  Location     Type
  9853 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9854 ;;		 -> f(5), NULL(0), 
  9855 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  9856 ;;		 -> cfmt(1), 
  9857 ;;  ap              2  [STACK] PTR PTR void 
  9858 ;;		 -> ap(2), ap(2), 
  9859 ;; Auto vars:     Size  Location     Type
  9860 ;;  ll              8  [STACK] long long 
  9861 ;;  llu             8    0        unsigned long long 
  9862 ;;  f               4    0        unsigned long long 
  9863 ;;  vp              3    0        PTR void 
  9864 ;;  ct              3    0        unsigned char [3]
  9865 ;;  cp              2  [STACK] PTR unsigned char 
  9866 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(98), 
  9867 ;;  i               2    0        int 
  9868 ;;  done            2    0        int 
  9869 ;;  c               1  [STACK] unsigned char 
  9870 ;; Return value:  Size  Location     Type
  9871 ;;                  2  [STACK] int 
  9872 ;; Registers used:
  9873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9874 ;; Tracked objects:
  9875 ;;		On entry : 0/0
  9876 ;;		On exit  : 0/0
  9877 ;;		Unchanged: 0/0
  9878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9883 ;;Total ram usage:        0 bytes
  9884 ;; Hardware stack levels used:    1
  9885 ;; Hardware stack levels required when called:    9
  9886 ;; This function calls:
  9887 ;;		_ctoa
  9888 ;;		_dtoa
  9889 ;;		_fputc
  9890 ;;		_stoa
  9891 ;;		_strncmp
  9892 ;; This function is called by:
  9893 ;;		_vfprintf
  9894 ;; This function uses a reentrant model
  9895 ;;
  9896                           
  9897                           	psect	text43
  9898  002B8E                     __ptext43:
  9899                           	opt callstack 0
  9900  002B8E                     _vfpfcnvrt:
  9901                           	opt callstack 0
  9902                           
  9903                           ; BSR set to: 0
  9904                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9905  002B8E  0E0B               	movlw	11
  9906  002B90  26E1               	addwf	fsr1l,f,c
  9907  002B92  0E00               	movlw	0
  9908  002B94  22E2               	addwfc	fsr1h,f,c
  9909                           
  9910                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  9911                           ;stkvar	_fmt @ sp[(-11)+-4]
  9912                           
  9913                           ;incstack = 0
  9914  002B96  0EF1               	movlw	-15
  9915  002B98  006F FF8F FFD9     	movff	plusw1,fsr2l
  9916  002B9E  0EF2               	movlw	-14
  9917  002BA0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9918  002BA6  006F FF7F FFF6     	movff	indf2,tblptrl
  9919  002BAC                     	if	1	;There is more than 1 active tblptr byte
  9920  002BAC  0E20               	movlw	high __smallconst
  9921  002BAE  6EF7               	movwf	tblptrh,c
  9922  002BB0                     	endif
  9923  002BB0                     	if	0	;tblptru may be non-zero
  9924  002BB0                     	endif
  9925  002BB0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9926  002BB0  0E00               	movlw	low (__smallconst shr (0+16))
  9927  002BB2  6EF8               	movwf	tblptru,c
  9928  002BB4                     	endif
  9929  002BB4  0008               	tblrd		*
  9930  002BB6  50F5               	movf	tablat,w,c
  9931  002BB8  0A25               	xorlw	37
  9932  002BBA  A4D8               	btfss	status,2,c
  9933  002BBC  D213               	goto	l8443
  9934                           
  9935                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  9936                           ;stkvar	_fmt @ sp[(-11)+-4]
  9937  002BBE  0EF1               	movlw	-15
  9938  002BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9939  002BC6  0EF2               	movlw	-14
  9940  002BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9941  002BCE  2ADF               	incf	indf2,f,c
  9942                           
  9943                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  9944  002BD0  6A1D               	clrf	_width,c
  9945  002BD2  6A1E               	clrf	_width+1,c
  9946  002BD4  6A21               	clrf	_flags,c
  9947  002BD6  6A22               	clrf	_flags+1,c
  9948                           
  9949                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  9950  002BD8  681F               	setf	_prec,c
  9951  002BDA  6820               	setf	_prec+1,c
  9952                           
  9953                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  9954                           ;stkvar	_fmt @ sp[(-11)+-4]
  9955  002BDC  0EF1               	movlw	-15
  9956  002BDE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9957  002BE4  0EF2               	movlw	-14
  9958  002BE6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9959  002BEC  006F FF7F FFF6     	movff	indf2,tblptrl
  9960  002BF2                     	if	1	;There is more than 1 active tblptr byte
  9961  002BF2  0E20               	movlw	high __smallconst
  9962  002BF4  6EF7               	movwf	tblptrh,c
  9963  002BF6                     	endif
  9964  002BF6                     	if	0	;tblptru may be non-zero
  9965  002BF6                     	endif
  9966  002BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9967  002BF6  0E00               	movlw	low (__smallconst shr (0+16))
  9968  002BF8  6EF8               	movwf	tblptru,c
  9969  002BFA                     	endif
  9970  002BFA  0008               	tblrd		*
  9971  002BFC  50F5               	movf	tablat,w,c
  9972  002BFE  0A63               	xorlw	99
  9973  002C00  A4D8               	btfss	status,2,c
  9974  002C02  D034               	goto	l8393
  9975                           
  9976                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  9977                           ;stkvar	_fmt @ sp[(-11)+-4]
  9978  002C04  0EF1               	movlw	-15
  9979  002C06  006F FF8F FFD9     	movff	plusw1,fsr2l
  9980  002C0C  0EF2               	movlw	-14
  9981  002C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9982  002C14  2ADF               	incf	indf2,f,c
  9983                           
  9984                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9985                           ;stkvar	_ap @ sp[(-11)+-6]
  9986  002C16  0EEF               	movlw	-17
  9987  002C18  006F FF8F FFD9     	movff	plusw1,fsr2l
  9988  002C1E  0EF0               	movlw	-16
  9989  002C20  006F FF8F FFDA     	movff	plusw1,fsr2h
  9990  002C26  0E02               	movlw	2
  9991  002C28  5EDE               	subwf	postinc2,f,c
  9992  002C2A  0E00               	movlw	0
  9993  002C2C  5ADD               	subwfb	postdec2,f,c
  9994  002C2E  006F FF78  F043    	movff	postinc2,btemp+10
  9995  002C34  006F FF74  F044    	movff	postdec2,btemp+11
  9996  002C3A  0060  F10F  FFD9   	movff	btemp+10,fsr2l
  9997  002C40  0060  F113  FFDA   	movff	btemp+11,fsr2h
  9998  002C46  50DF               	movf	indf2,w,c
  9999  002C48  6E44               	movwf	btemp+11,c
 10000                           
 10001                           ;stkvar	_c @ sp[(-11)+10]
 10002  002C4A  0EFF               	movlw	-1
 10003  002C4C  0060  F113  FFE3   	movff	btemp+11,plusw1
 10004                           
 10005                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 10006                           ;stkvar	_c @ sp[(-11)+10]
 10007  002C52  0EFF               	movlw	-1
 10008  002C54  50E3               	movf	plusw1,w,c
 10009  002C56  6EE6               	movwf	postinc1,c
 10010                           
 10011                           ;stkvar	_fp @ sp[(-12)+-2]
 10012  002C58  0EF2               	movlw	-14
 10013  002C5A  006F FF8F FFE6     	movff	plusw1,postinc1
 10014  002C60  006F FF8F FFE6     	movff	plusw1,postinc1
 10015  002C66  ECCA  F02C         	call	_ctoa	;wreg free
 10016  002C6A  D1E3               	goto	l1921
 10017  002C6C                     l8393:
 10018                           
 10019                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 10020                           ;stkvar	_fmt @ sp[(-11)+-4]
 10021  002C6C  0EF1               	movlw	-15
 10022  002C6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10023  002C74  0EF2               	movlw	-14
 10024  002C76  006F FF8F FFDA     	movff	plusw1,fsr2h
 10025  002C7C  006F FF7F FFF6     	movff	indf2,tblptrl
 10026  002C82                     	if	1	;There is more than 1 active tblptr byte
 10027  002C82  0E20               	movlw	high __smallconst
 10028  002C84  6EF7               	movwf	tblptrh,c
 10029  002C86                     	endif
 10030  002C86                     	if	0	;tblptru may be non-zero
 10031  002C86                     	endif
 10032  002C86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10033  002C86  0E00               	movlw	low (__smallconst shr (0+16))
 10034  002C88  6EF8               	movwf	tblptru,c
 10035  002C8A                     	endif
 10036  002C8A  0008               	tblrd		*
 10037  002C8C  50F5               	movf	tablat,w,c
 10038  002C8E  0A64               	xorlw	100
 10039  002C90  B4D8               	btfsc	status,2,c
 10040  002C92  D014               	goto	u5220
 10041                           
 10042                           ;stkvar	_fmt @ sp[(-11)+-4]
 10043  002C94  0EF1               	movlw	-15
 10044  002C96  006F FF8F FFD9     	movff	plusw1,fsr2l
 10045  002C9C  0EF2               	movlw	-14
 10046  002C9E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10047  002CA4  006F FF7F FFF6     	movff	indf2,tblptrl
 10048  002CAA                     	if	1	;There is more than 1 active tblptr byte
 10049  002CAA  0E20               	movlw	high __smallconst
 10050  002CAC  6EF7               	movwf	tblptrh,c
 10051  002CAE                     	endif
 10052  002CAE                     	if	0	;tblptru may be non-zero
 10053  002CAE                     	endif
 10054  002CAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10055  002CAE  0E00               	movlw	low (__smallconst shr (0+16))
 10056  002CB0  6EF8               	movwf	tblptru,c
 10057  002CB2                     	endif
 10058  002CB2  0008               	tblrd		*
 10059  002CB4  50F5               	movf	tablat,w,c
 10060  002CB6  0A69               	xorlw	105
 10061  002CB8  A4D8               	btfss	status,2,c
 10062  002CBA  D073               	goto	l8405
 10063  002CBC                     u5220:
 10064                           
 10065                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 10066                           ;stkvar	_fmt @ sp[(-11)+-4]
 10067  002CBC  0EF1               	movlw	-15
 10068  002CBE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10069  002CC4  0EF2               	movlw	-14
 10070  002CC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10071  002CCC  2ADF               	incf	indf2,f,c
 10072                           
 10073                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 10074                           ;stkvar	_ap @ sp[(-11)+-6]
 10075  002CCE  0EEF               	movlw	-17
 10076  002CD0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10077  002CD6  0EF0               	movlw	-16
 10078  002CD8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10079  002CDE  0E02               	movlw	2
 10080  002CE0  5EDE               	subwf	postinc2,f,c
 10081  002CE2  0E00               	movlw	0
 10082  002CE4  5ADD               	subwfb	postdec2,f,c
 10083  002CE6  006F FF78  F043    	movff	postinc2,btemp+10
 10084  002CEC  006F FF74  F044    	movff	postdec2,btemp+11
 10085  002CF2  0060  F10F  FFD9   	movff	btemp+10,fsr2l
 10086  002CF8  0060  F113  FFDA   	movff	btemp+11,fsr2h
 10087  002CFE  006F FF78  F043    	movff	postinc2,btemp+10
 10088  002D04  006F FF74  F044    	movff	postdec2,btemp+11
 10089                           
 10090                           ;stkvar	_ll @ sp[(-11)+0]
 10091  002D0A  0EF5               	movlw	-11
 10092  002D0C  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10093  002D12  0EF6               	movlw	-10
 10094  002D14  0060  F113  FFE3   	movff	btemp+11,plusw1
 10095  002D1A  6A39               	clrf	btemp,c
 10096  002D1C  BEE3               	btfsc	plusw1,7,c
 10097  002D1E  6839               	setf	btemp,c
 10098  002D20  0EF7               	movlw	-9
 10099  002D22  0060  F0E7  FFE3   	movff	btemp,plusw1
 10100  002D28  0EF8               	movlw	-8
 10101  002D2A  0060  F0E7  FFE3   	movff	btemp,plusw1
 10102  002D30  0EF9               	movlw	-7
 10103  002D32  0060  F0E7  FFE3   	movff	btemp,plusw1
 10104  002D38  0EFA               	movlw	-6
 10105  002D3A  0060  F0E7  FFE3   	movff	btemp,plusw1
 10106  002D40  0EFB               	movlw	-5
 10107  002D42  0060  F0E7  FFE3   	movff	btemp,plusw1
 10108  002D48  0EFC               	movlw	-4
 10109  002D4A  0060  F0E7  FFE3   	movff	btemp,plusw1
 10110  002D50                     l8401:
 10111                           
 10112                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 10113                           ;stkvar	_ll @ sp[(-11)+0]
 10114  002D50  50E1               	movf	fsr1l,w,c
 10115  002D52  0FF5               	addlw	-11
 10116  002D54  6ED9               	movwf	fsr2l,c
 10117  002D56  50E2               	movf	fsr1h,w,c
 10118  002D58  6EDA               	movwf	fsr2h,c
 10119  002D5A  0EFF               	movlw	255
 10120  002D5C  22DA               	addwfc	fsr2h,f,c
 10121  002D5E  006F FF7B FFE6     	movff	postinc2,postinc1
 10122  002D64  006F FF7B FFE6     	movff	postinc2,postinc1
 10123  002D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 10124  002D70  006F FF7B FFE6     	movff	postinc2,postinc1
 10125  002D76  006F FF7B FFE6     	movff	postinc2,postinc1
 10126  002D7C  006F FF7B FFE6     	movff	postinc2,postinc1
 10127  002D82  006F FF7B FFE6     	movff	postinc2,postinc1
 10128  002D88  006F FF7B FFE6     	movff	postinc2,postinc1
 10129                           
 10130                           ;stkvar	_fp @ sp[(-19)+-2]
 10131  002D8E  0EEB               	movlw	-21
 10132  002D90  006F FF8F FFE6     	movff	plusw1,postinc1
 10133  002D96  006F FF8F FFE6     	movff	plusw1,postinc1
 10134  002D9C  EC1E  F018         	call	_dtoa	;wreg free
 10135  002DA0  D148               	goto	l1921
 10136  002DA2                     l8405:
 10137                           
 10138                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 10139  002DA2  0E02               	movlw	2
 10140  002DA4  6EE6               	movwf	postinc1,c
 10141  002DA6  0E00               	movlw	0
 10142  002DA8  6EE6               	movwf	postinc1,c
 10143  002DAA  0EBB               	movlw	STR_19& (0+255)
 10144  002DAC  6EE6               	movwf	postinc1,c
 10145                           
 10146                           ;stkvar	_fmt @ sp[(-14)+-4]
 10147  002DAE  0EEE               	movlw	-18
 10148  002DB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10149  002DB6  0EEF               	movlw	-17
 10150  002DB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10151  002DBE  50DF               	movf	indf2,w,c
 10152  002DC0  6EE6               	movwf	postinc1,c
 10153  002DC2  ECEF  F024         	call	_strncmp	;wreg free
 10154  002DC6  5039               	movf	btemp,w,c
 10155  002DC8  103A               	iorwf	btemp+1,w,c
 10156  002DCA  B4D8               	btfsc	status,2,c
 10157  002DCC  D016               	goto	u5240
 10158  002DCE  0E02               	movlw	2
 10159  002DD0  6EE6               	movwf	postinc1,c
 10160  002DD2  0E00               	movlw	0
 10161  002DD4  6EE6               	movwf	postinc1,c
 10162  002DD6  0EBE               	movlw	STR_23& (0+255)
 10163  002DD8  6EE6               	movwf	postinc1,c
 10164                           
 10165                           ;stkvar	_fmt @ sp[(-14)+-4]
 10166  002DDA  0EEE               	movlw	-18
 10167  002DDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10168  002DE2  0EEF               	movlw	-17
 10169  002DE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10170  002DEA  50DF               	movf	indf2,w,c
 10171  002DEC  6EE6               	movwf	postinc1,c
 10172  002DEE  ECEF  F024         	call	_strncmp	;wreg free
 10173  002DF2  5039               	movf	btemp,w,c
 10174  002DF4  103A               	iorwf	btemp+1,w,c
 10175  002DF6  A4D8               	btfss	status,2,c
 10176  002DF8  D067               	goto	l8417
 10177  002DFA                     u5240:
 10178                           
 10179                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 10180                           ;stkvar	_fmt @ sp[(-11)+-4]
 10181  002DFA  0EF1               	movlw	-15
 10182  002DFC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10183  002E02  0EF2               	movlw	-14
 10184  002E04  006F FF8F FFDA     	movff	plusw1,fsr2h
 10185  002E0A  0E02               	movlw	2
 10186  002E0C  26DF               	addwf	indf2,f,c
 10187                           
 10188                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 10189                           ;stkvar	_ap @ sp[(-11)+-6]
 10190  002E0E  0EEF               	movlw	-17
 10191  002E10  006F FF8F FFD9     	movff	plusw1,fsr2l
 10192  002E16  0EF0               	movlw	-16
 10193  002E18  006F FF8F FFDA     	movff	plusw1,fsr2h
 10194  002E1E  0E04               	movlw	4
 10195  002E20  5EDE               	subwf	postinc2,f,c
 10196  002E22  0E00               	movlw	0
 10197  002E24  5ADD               	subwfb	postdec2,f,c
 10198  002E26  006F FF78  F043    	movff	postinc2,btemp+10
 10199  002E2C  006F FF74  F044    	movff	postdec2,btemp+11
 10200  002E32  0060  F10F  FFD9   	movff	btemp+10,fsr2l
 10201  002E38  0060  F113  FFDA   	movff	btemp+11,fsr2h
 10202  002E3E  006F FF78  F041    	movff	postinc2,btemp+8
 10203  002E44  006F FF78  F042    	movff	postinc2,btemp+9
 10204  002E4A  006F FF78  F043    	movff	postinc2,btemp+10
 10205  002E50  006F FF78  F044    	movff	postinc2,btemp+11
 10206  002E56  0060  F104  F049   	movff	btemp+8,btemp+16
 10207  002E5C  0060  F108  F04A   	movff	btemp+9,btemp+17
 10208  002E62  0060  F10C  F04B   	movff	btemp+10,btemp+18
 10209  002E68  0060  F110  F04C   	movff	btemp+11,btemp+19
 10210  002E6E  6A4D               	clrf	btemp+20,c
 10211  002E70  BE4C               	btfsc	btemp+19,7,c
 10212  002E72  684D               	setf	btemp+20,c
 10213  002E74  0060  F134  F04E   	movff	btemp+20,btemp+21
 10214  002E7A  0060  F134  F04F   	movff	btemp+20,btemp+22
 10215  002E80  0060  F134  F050   	movff	btemp+20,btemp+23
 10216                           
 10217                           ;stkvar	_ll @ sp[(-11)+0]
 10218  002E86  0EF5               	movlw	-11
 10219  002E88  0060  F127  FFE3   	movff	btemp+16,plusw1
 10220  002E8E  0EF6               	movlw	-10
 10221  002E90  0060  F12B  FFE3   	movff	btemp+17,plusw1
 10222  002E96  0EF7               	movlw	-9
 10223  002E98  0060  F12F  FFE3   	movff	btemp+18,plusw1
 10224  002E9E  0EF8               	movlw	-8
 10225  002EA0  0060  F133  FFE3   	movff	btemp+19,plusw1
 10226  002EA6  0EF9               	movlw	-7
 10227  002EA8  0060  F137  FFE3   	movff	btemp+20,plusw1
 10228  002EAE  0EFA               	movlw	-6
 10229  002EB0  0060  F13B  FFE3   	movff	btemp+21,plusw1
 10230  002EB6  0EFB               	movlw	-5
 10231  002EB8  0060  F13F  FFE3   	movff	btemp+22,plusw1
 10232  002EBE  0EFC               	movlw	-4
 10233  002EC0  0060  F143  FFE3   	movff	btemp+23,plusw1
 10234  002EC6  D744               	goto	l8401
 10235  002EC8                     l8417:
 10236                           
 10237                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 10238                           ;stkvar	_fmt @ sp[(-11)+-4]
 10239  002EC8  0EF1               	movlw	-15
 10240  002ECA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10241  002ED0  0EF2               	movlw	-14
 10242  002ED2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10243  002ED8  006F FF7F FFF6     	movff	indf2,tblptrl
 10244  002EDE                     	if	1	;There is more than 1 active tblptr byte
 10245  002EDE  0E20               	movlw	high __smallconst
 10246  002EE0  6EF7               	movwf	tblptrh,c
 10247  002EE2                     	endif
 10248  002EE2                     	if	0	;tblptru may be non-zero
 10249  002EE2                     	endif
 10250  002EE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10251  002EE2  0E00               	movlw	low (__smallconst shr (0+16))
 10252  002EE4  6EF8               	movwf	tblptru,c
 10253  002EE6                     	endif
 10254  002EE6  0008               	tblrd		*
 10255  002EE8  50F5               	movf	tablat,w,c
 10256  002EEA  0A73               	xorlw	115
 10257  002EEC  A4D8               	btfss	status,2,c
 10258  002EEE  D040               	goto	l8427
 10259                           
 10260                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 10261                           ;stkvar	_fmt @ sp[(-11)+-4]
 10262  002EF0  0EF1               	movlw	-15
 10263  002EF2  006F FF8F FFD9     	movff	plusw1,fsr2l
 10264  002EF8  0EF2               	movlw	-14
 10265  002EFA  006F FF8F FFDA     	movff	plusw1,fsr2h
 10266  002F00  2ADF               	incf	indf2,f,c
 10267                           
 10268                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 10269                           ;stkvar	_ap @ sp[(-11)+-6]
 10270  002F02  0EEF               	movlw	-17
 10271  002F04  006F FF8F FFD9     	movff	plusw1,fsr2l
 10272  002F0A  0EF0               	movlw	-16
 10273  002F0C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10274  002F12  0E02               	movlw	2
 10275  002F14  5EDE               	subwf	postinc2,f,c
 10276  002F16  0E00               	movlw	0
 10277  002F18  5ADD               	subwfb	postdec2,f,c
 10278  002F1A  006F FF78  F043    	movff	postinc2,btemp+10
 10279  002F20  006F FF74  F044    	movff	postdec2,btemp+11
 10280  002F26  0060  F10F  FFD9   	movff	btemp+10,fsr2l
 10281  002F2C  0060  F113  FFDA   	movff	btemp+11,fsr2h
 10282  002F32  006F FF78  F043    	movff	postinc2,btemp+10
 10283  002F38  006F FF74  F044    	movff	postdec2,btemp+11
 10284                           
 10285                           ;stkvar	_cp @ sp[(-11)+8]
 10286  002F3E  0EFE               	movlw	-2
 10287  002F40  0060  F113  FFE3   	movff	btemp+11,plusw1
 10288  002F46  0EFD               	movlw	-3
 10289  002F48  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10290                           
 10291                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 10292                           ;stkvar	_cp @ sp[(-11)+8]
 10293  002F4E  0EFD               	movlw	-3
 10294  002F50  006F FF8F FFE6     	movff	plusw1,postinc1
 10295  002F56  006F FF8F FFE6     	movff	plusw1,postinc1
 10296                           
 10297                           ;stkvar	_fp @ sp[(-13)+-2]
 10298  002F5C  0EF1               	movlw	-15
 10299  002F5E  006F FF8F FFE6     	movff	plusw1,postinc1
 10300  002F64  006F FF8F FFE6     	movff	plusw1,postinc1
 10301  002F6A  ECD9  F01E         	call	_stoa	;wreg free
 10302  002F6E  D061               	goto	l1921
 10303  002F70                     l8427:
 10304                           
 10305                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 10306                           ;stkvar	_fmt @ sp[(-11)+-4]
 10307  002F70  0EF1               	movlw	-15
 10308  002F72  006F FF8F FFD9     	movff	plusw1,fsr2l
 10309  002F78  0EF2               	movlw	-14
 10310  002F7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10311  002F80  006F FF7F FFF6     	movff	indf2,tblptrl
 10312  002F86                     	if	1	;There is more than 1 active tblptr byte
 10313  002F86  0E20               	movlw	high __smallconst
 10314  002F88  6EF7               	movwf	tblptrh,c
 10315  002F8A                     	endif
 10316  002F8A                     	if	0	;tblptru may be non-zero
 10317  002F8A                     	endif
 10318  002F8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10319  002F8A  0E00               	movlw	low (__smallconst shr (0+16))
 10320  002F8C  6EF8               	movwf	tblptru,c
 10321  002F8E                     	endif
 10322  002F8E  0008               	tblrd		*
 10323  002F90  50F5               	movf	tablat,w,c
 10324  002F92  0A25               	xorlw	37
 10325  002F94  A4D8               	btfss	status,2,c
 10326  002F96  D018               	goto	l8437
 10327                           
 10328                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 10329                           ;stkvar	_fmt @ sp[(-11)+-4]
 10330  002F98  0EF1               	movlw	-15
 10331  002F9A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10332  002FA0  0EF2               	movlw	-14
 10333  002FA2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10334  002FA8  2ADF               	incf	indf2,f,c
 10335                           
 10336                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 10337                           ;stkvar	_fp @ sp[(-11)+-2]
 10338  002FAA  0EF3               	movlw	-13
 10339  002FAC  006F FF8F FFE6     	movff	plusw1,postinc1
 10340  002FB2  006F FF8F FFE6     	movff	plusw1,postinc1
 10341  002FB8  0E25               	movlw	37
 10342  002FBA  6EE6               	movwf	postinc1,c
 10343  002FBC  0E00               	movlw	0
 10344  002FBE  6EE6               	movwf	postinc1,c
 10345  002FC0  EC7D  F027         	call	_fputc	;wreg free
 10346  002FC4                     l8433:
 10347                           
 10348                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 10349  002FC4  0E01               	movlw	1
 10350  002FC6  D00A               	goto	L24
 10351  002FC8                     l8437:
 10352                           
 10353                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 10354                           ;stkvar	_fmt @ sp[(-11)+-4]
 10355  002FC8  0EF1               	movlw	-15
 10356  002FCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10357  002FD0  0EF2               	movlw	-14
 10358  002FD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10359  002FD8  2ADF               	incf	indf2,f,c
 10360                           
 10361                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 10362  002FDA  0E00               	movlw	0
 10363  002FDC                     L24:
 10364  002FDC  6E39               	movwf	btemp,c
 10365  002FDE  0E00               	movlw	0
 10366  002FE0  6E3A               	movwf	btemp+1,c
 10367  002FE2  D027               	goto	l1921
 10368  002FE4                     l8443:
 10369                           
 10370                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 10371                           ;stkvar	_fp @ sp[(-11)+-2]
 10372  002FE4  0EF3               	movlw	-13
 10373  002FE6  006F FF8F FFE6     	movff	plusw1,postinc1
 10374  002FEC  006F FF8F FFE6     	movff	plusw1,postinc1
 10375                           
 10376                           ;stkvar	_fmt @ sp[(-13)+-4]
 10377  002FF2  0EEF               	movlw	-17
 10378  002FF4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10379  002FFA  0EF0               	movlw	-16
 10380  002FFC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10381  003002  006F FF7F FFF6     	movff	indf2,tblptrl
 10382  003008                     	if	1	;There is more than 1 active tblptr byte
 10383  003008  0E20               	movlw	high __smallconst
 10384  00300A  6EF7               	movwf	tblptrh,c
 10385  00300C                     	endif
 10386  00300C                     	if	0	;tblptru may be non-zero
 10387  00300C                     	endif
 10388  00300C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10389  00300C  0E00               	movlw	low (__smallconst shr (0+16))
 10390  00300E  6EF8               	movwf	tblptru,c
 10391  003010                     	endif
 10392  003010  0008               	tblrd		*
 10393  003012  50F5               	movf	tablat,w,c
 10394  003014  6EE6               	movwf	postinc1,c
 10395  003016  0E00               	movlw	0
 10396  003018  6EE6               	movwf	postinc1,c
 10397  00301A  EC7D  F027         	call	_fputc	;wreg free
 10398                           
 10399                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 10400                           ;stkvar	_fmt @ sp[(-11)+-4]
 10401  00301E  0EF1               	movlw	-15
 10402  003020  006F FF8F FFD9     	movff	plusw1,fsr2l
 10403  003026  0EF2               	movlw	-14
 10404  003028  006F FF8F FFDA     	movff	plusw1,fsr2h
 10405  00302E  2ADF               	incf	indf2,f,c
 10406  003030  D7C9               	goto	l8433
 10407  003032                     l1921:
 10408                           
 10409                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 10410  003032  0EEF               	movlw	239
 10411  003034  26E1               	addwf	fsr1l,f,c
 10412  003036  0EFF               	movlw	255
 10413  003038  22E2               	addwfc	fsr1h,f,c
 10414  00303A  0012               	return		;funcret
 10415  00303C                     __end_of_vfpfcnvrt:
 10416                           	opt callstack 0
 10417                           
 10418 ;; *************** function _strncmp *****************
 10419 ;; Defined at:
 10420 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
 10421 ;; Parameters:    Size  Location     Type
 10422 ;;  _l              1  [STACK] PTR const unsigned char 
 10423 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
 10424 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
 10425 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
 10426 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
 10427 ;;		 -> STR_1(17), 
 10428 ;;  _r              1  [STACK] PTR const unsigned char 
 10429 ;;		 -> STR_25(3), STR_21(3), 
 10430 ;;  n               2  [STACK] unsigned int 
 10431 ;; Auto vars:     Size  Location     Type
 10432 ;;  r               1  [STACK] PTR const unsigned char 
 10433 ;;		 -> STR_25(3), STR_21(3), 
 10434 ;;  l               1  [STACK] PTR const unsigned char 
 10435 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
 10436 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
 10437 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
 10438 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
 10439 ;;		 -> STR_1(17), 
 10440 ;; Return value:  Size  Location     Type
 10441 ;;                  2  [STACK] int 
 10442 ;; Registers used:
 10443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
 10444 ;; Tracked objects:
 10445 ;;		On entry : 0/0
 10446 ;;		On exit  : 0/0
 10447 ;;		Unchanged: 0/0
 10448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10453 ;;Total ram usage:        0 bytes
 10454 ;; Hardware stack levels used:    1
 10455 ;; Hardware stack levels required when called:    3
 10456 ;; This function calls:
 10457 ;;		Nothing
 10458 ;; This function is called by:
 10459 ;;		_vfpfcnvrt
 10460 ;; This function uses a reentrant model
 10461 ;;
 10462                           
 10463                           	psect	text44
 10464  0049DE                     __ptext44:
 10465                           	opt callstack 0
 10466  0049DE                     _strncmp:
 10467                           	opt callstack 0
 10468                           
 10469                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10470  0049DE  52E6               	movf	postinc1,f,c
 10471  0049E0  52E6               	movf	postinc1,f,c
 10472                           
 10473                           ;stkvar	__l @ sp[(-2)+-1]
 10474                           
 10475                           ;incstack = 0
 10476  0049E2  0EFD               	movlw	-3
 10477  0049E4  006F FF8C  F044    	movff	plusw1,btemp+11
 10478                           
 10479                           ;stkvar	_l @ sp[(-2)+1]
 10480  0049EA  0EFF               	movlw	-1
 10481  0049EC  0060  F113  FFE3   	movff	btemp+11,plusw1
 10482                           
 10483                           ;stkvar	__r @ sp[(-2)+-2]
 10484  0049F2  0EFC               	movlw	-4
 10485  0049F4  006F FF8C  F044    	movff	plusw1,btemp+11
 10486                           
 10487                           ;stkvar	_r @ sp[(-2)+0]
 10488  0049FA  0EFE               	movlw	-2
 10489  0049FC  0060  F113  FFE3   	movff	btemp+11,plusw1
 10490                           
 10491                           ;stkvar	_n @ sp[(-2)+-4]
 10492  004A02  0EFA               	movlw	-6
 10493  004A04  006F FF8C  F039    	movff	plusw1,btemp
 10494  004A0A  0E01               	movlw	1
 10495  004A0C  5E39               	subwf	btemp,f,c
 10496  004A0E  0EFA               	movlw	-6
 10497  004A10  0060  F0E7  FFE3   	movff	btemp,plusw1
 10498  004A16  0EFB               	movlw	-5
 10499  004A18  006F FF8C  F039    	movff	plusw1,btemp
 10500  004A1E  0E00               	movlw	0
 10501  004A20  5A39               	subwfb	btemp,f,c
 10502  004A22  0EFB               	movlw	-5
 10503  004A24  0060  F0E7  FFE3   	movff	btemp,plusw1
 10504  004A2A  0EFA               	movlw	-6
 10505  004A2C  28E3               	incf	plusw1,w,c
 10506  004A2E  E121               	bnz	l5671
 10507  004A30  0EFB               	movlw	-5
 10508  004A32  28E3               	incf	plusw1,w,c
 10509  004A34  A4D8               	btfss	status,2,c
 10510  004A36  D01D               	goto	l5671
 10511  004A38  0E00               	movlw	0
 10512  004A3A  6E39               	movwf	btemp,c
 10513  004A3C  0E00               	movlw	0
 10514  004A3E  6E3A               	movwf	btemp+1,c
 10515  004A40  D091               	goto	l2678
 10516  004A42                     l5667:
 10517                           
 10518                           ;stkvar	_l @ sp[(-2)+1]
 10519  004A42  0EFF               	movlw	-1
 10520  004A44  2AE3               	incf	plusw1,f,c
 10521                           
 10522                           ;stkvar	_r @ sp[(-2)+0]
 10523  004A46  0EFE               	movlw	-2
 10524  004A48  2AE3               	incf	plusw1,f,c
 10525                           
 10526                           ;stkvar	_n @ sp[(-2)+-4]
 10527  004A4A  0EFA               	movlw	-6
 10528  004A4C  006F FF8C  F039    	movff	plusw1,btemp
 10529  004A52  0E01               	movlw	1
 10530  004A54  5E39               	subwf	btemp,f,c
 10531  004A56  0EFA               	movlw	-6
 10532  004A58  0060  F0E7  FFE3   	movff	btemp,plusw1
 10533  004A5E  0EFB               	movlw	-5
 10534  004A60  006F FF8C  F039    	movff	plusw1,btemp
 10535  004A66  0E00               	movlw	0
 10536  004A68  5A39               	subwfb	btemp,f,c
 10537  004A6A  0EFB               	movlw	-5
 10538  004A6C  0060  F0E7  FFE3   	movff	btemp,plusw1
 10539  004A72                     l5671:
 10540                           
 10541                           ;stkvar	_l @ sp[(-2)+1]
 10542  004A72  50E1               	movf	fsr1l,w,c
 10543  004A74  0FFF               	addlw	-1
 10544  004A76  6ED9               	movwf	fsr2l,c
 10545  004A78  50E2               	movf	fsr1h,w,c
 10546  004A7A  6EDA               	movwf	fsr2h,c
 10547  004A7C  0EFF               	movlw	255
 10548  004A7E  22DA               	addwfc	fsr2h,f,c
 10549  004A80  006F FF7F FFF6     	movff	indf2,tblptrl
 10550  004A86                     	if	1	;There is more than 1 active tblptr byte
 10551  004A86  0E20               	movlw	high __smallconst
 10552  004A88  6EF7               	movwf	tblptrh,c
 10553  004A8A                     	endif
 10554  004A8A                     	if	0	;tblptru may be non-zero
 10555  004A8A                     	endif
 10556  004A8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10557  004A8A  0E00               	movlw	low (__smallconst shr (0+16))
 10558  004A8C  6EF8               	movwf	tblptru,c
 10559  004A8E                     	endif
 10560  004A8E  0008               	tblrd		*
 10561  004A90  50F5               	movf	tablat,w,c
 10562  004A92  0900               	iorlw	0
 10563  004A94  B4D8               	btfsc	status,2,c
 10564  004A96  D041               	goto	u3130
 10565                           
 10566                           ;stkvar	_r @ sp[(-2)+0]
 10567  004A98  50E1               	movf	fsr1l,w,c
 10568  004A9A  0FFE               	addlw	-2
 10569  004A9C  6ED9               	movwf	fsr2l,c
 10570  004A9E  50E2               	movf	fsr1h,w,c
 10571  004AA0  6EDA               	movwf	fsr2h,c
 10572  004AA2  0EFF               	movlw	255
 10573  004AA4  22DA               	addwfc	fsr2h,f,c
 10574  004AA6  006F FF7F FFF6     	movff	indf2,tblptrl
 10575  004AAC                     	if	1	;There is more than 1 active tblptr byte
 10576  004AAC  0E20               	movlw	high __smallconst
 10577  004AAE  6EF7               	movwf	tblptrh,c
 10578  004AB0                     	endif
 10579  004AB0                     	if	0	;tblptru may be non-zero
 10580  004AB0                     	endif
 10581  004AB0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10582  004AB0  0E00               	movlw	low (__smallconst shr (0+16))
 10583  004AB2  6EF8               	movwf	tblptru,c
 10584  004AB4                     	endif
 10585  004AB4  0008               	tblrd		*
 10586  004AB6  50F5               	movf	tablat,w,c
 10587  004AB8  0900               	iorlw	0
 10588  004ABA  B4D8               	btfsc	status,2,c
 10589  004ABC  D02E               	goto	u3130
 10590                           
 10591                           ;stkvar	_n @ sp[(-2)+-4]
 10592  004ABE  0EFA               	movlw	-6
 10593  004AC0  006F FF8C  F039    	movff	plusw1,btemp
 10594  004AC6  0EFB               	movlw	-5
 10595  004AC8  50E3               	movf	plusw1,w,c
 10596  004ACA  1039               	iorwf	btemp,w,c
 10597  004ACC  B4D8               	btfsc	status,2,c
 10598  004ACE  D025               	goto	u3130
 10599                           
 10600                           ;stkvar	_l @ sp[(-2)+1]
 10601  004AD0  50E1               	movf	fsr1l,w,c
 10602  004AD2  0FFF               	addlw	-1
 10603  004AD4  6ED9               	movwf	fsr2l,c
 10604  004AD6  50E2               	movf	fsr1h,w,c
 10605  004AD8  6EDA               	movwf	fsr2h,c
 10606  004ADA  0EFF               	movlw	255
 10607  004ADC  22DA               	addwfc	fsr2h,f,c
 10608  004ADE  006F FF7F FFF6     	movff	indf2,tblptrl
 10609  004AE4                     	if	1	;There is more than 1 active tblptr byte
 10610  004AE4  0E20               	movlw	high __smallconst
 10611  004AE6  6EF7               	movwf	tblptrh,c
 10612  004AE8                     	endif
 10613  004AE8                     	if	0	;tblptru may be non-zero
 10614  004AE8                     	endif
 10615  004AE8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10616  004AE8  0E00               	movlw	low (__smallconst shr (0+16))
 10617  004AEA  6EF8               	movwf	tblptru,c
 10618  004AEC                     	endif
 10619  004AEC  0008               	tblrd		*
 10620  004AEE  006F FFD4  F044    	movff	tablat,btemp+11
 10621                           
 10622                           ;stkvar	_r @ sp[(-2)+0]
 10623  004AF4  50E1               	movf	fsr1l,w,c
 10624  004AF6  0FFE               	addlw	-2
 10625  004AF8  6ED9               	movwf	fsr2l,c
 10626  004AFA  50E2               	movf	fsr1h,w,c
 10627  004AFC  6EDA               	movwf	fsr2h,c
 10628  004AFE  0EFF               	movlw	255
 10629  004B00  22DA               	addwfc	fsr2h,f,c
 10630  004B02  006F FF7F FFF6     	movff	indf2,tblptrl
 10631  004B08                     	if	1	;There is more than 1 active tblptr byte
 10632  004B08  0E20               	movlw	high __smallconst
 10633  004B0A  6EF7               	movwf	tblptrh,c
 10634  004B0C                     	endif
 10635  004B0C                     	if	0	;tblptru may be non-zero
 10636  004B0C                     	endif
 10637  004B0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10638  004B0C  0E00               	movlw	low (__smallconst shr (0+16))
 10639  004B0E  6EF8               	movwf	tblptru,c
 10640  004B10                     	endif
 10641  004B10  0008               	tblrd		*
 10642  004B12  50F5               	movf	tablat,w,c
 10643  004B14  1844               	xorwf	btemp+11,w,c
 10644  004B16  B4D8               	btfsc	status,2,c
 10645  004B18  D794               	goto	l5667
 10646  004B1A                     u3130:
 10647                           
 10648                           ;stkvar	_l @ sp[(-2)+1]
 10649  004B1A  50E1               	movf	fsr1l,w,c
 10650  004B1C  0FFF               	addlw	-1
 10651  004B1E  6ED9               	movwf	fsr2l,c
 10652  004B20  50E2               	movf	fsr1h,w,c
 10653  004B22  6EDA               	movwf	fsr2h,c
 10654  004B24  0EFF               	movlw	255
 10655  004B26  22DA               	addwfc	fsr2h,f,c
 10656  004B28  006F FF7F FFF6     	movff	indf2,tblptrl
 10657  004B2E                     	if	1	;There is more than 1 active tblptr byte
 10658  004B2E  0E20               	movlw	high __smallconst
 10659  004B30  6EF7               	movwf	tblptrh,c
 10660  004B32                     	endif
 10661  004B32                     	if	0	;tblptru may be non-zero
 10662  004B32                     	endif
 10663  004B32                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10664  004B32  0E00               	movlw	low (__smallconst shr (0+16))
 10665  004B34  6EF8               	movwf	tblptru,c
 10666  004B36                     	endif
 10667  004B36  0008               	tblrd		*
 10668  004B38  50F5               	movf	tablat,w,c
 10669  004B3A  6E39               	movwf	btemp,c
 10670  004B3C  6A3A               	clrf	btemp+1,c
 10671                           
 10672                           ;stkvar	_r @ sp[(-2)+0]
 10673  004B3E  50E1               	movf	fsr1l,w,c
 10674  004B40  0FFE               	addlw	-2
 10675  004B42  6ED9               	movwf	fsr2l,c
 10676  004B44  50E2               	movf	fsr1h,w,c
 10677  004B46  6EDA               	movwf	fsr2h,c
 10678  004B48  0EFF               	movlw	255
 10679  004B4A  22DA               	addwfc	fsr2h,f,c
 10680  004B4C  006F FF7F FFF6     	movff	indf2,tblptrl
 10681  004B52                     	if	1	;There is more than 1 active tblptr byte
 10682  004B52  0E20               	movlw	high __smallconst
 10683  004B54  6EF7               	movwf	tblptrh,c
 10684  004B56                     	endif
 10685  004B56                     	if	0	;tblptru may be non-zero
 10686  004B56                     	endif
 10687  004B56                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10688  004B56  0E00               	movlw	low (__smallconst shr (0+16))
 10689  004B58  6EF8               	movwf	tblptru,c
 10690  004B5A                     	endif
 10691  004B5A  0008               	tblrd		*
 10692  004B5C  50F5               	movf	tablat,w,c
 10693  004B5E  5E39               	subwf	btemp,f,c
 10694  004B60  0E00               	movlw	0
 10695  004B62  5A3A               	subwfb	btemp+1,f,c
 10696  004B64                     l2678:
 10697                           
 10698                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 10699  004B64  0EFA               	movlw	250
 10700  004B66  26E1               	addwf	fsr1l,f,c
 10701  004B68  0EFF               	movlw	255
 10702  004B6A  22E2               	addwfc	fsr1h,f,c
 10703  004B6C  0012               	return		;funcret
 10704  004B6E                     __end_of_strncmp:
 10705                           	opt callstack 0
 10706                           
 10707 ;; *************** function _stoa *****************
 10708 ;; Defined at:
 10709 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10710 ;; Parameters:    Size  Location     Type
 10711 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10712 ;;		 -> f(5), NULL(0), 
 10713 ;;  s               2  [STACK] PTR unsigned char 
 10714 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(98), 
 10715 ;; Auto vars:     Size  Location     Type
 10716 ;;  nuls            7  [STACK] unsigned char [7]
 10717 ;;  l               2  [STACK] int 
 10718 ;;  p               2  [STACK] int 
 10719 ;;  cp              2  [STACK] PTR unsigned char 
 10720 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(6), 
 10721 ;;		 -> V(98), 
 10722 ;;  w               2  [STACK] int 
 10723 ;;  i               2  [STACK] int 
 10724 ;; Return value:  Size  Location     Type
 10725 ;;                  2  [STACK] int 
 10726 ;; Registers used:
 10727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10728 ;; Tracked objects:
 10729 ;;		On entry : 0/0
 10730 ;;		On exit  : 0/0
 10731 ;;		Unchanged: 0/0
 10732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10737 ;;Total ram usage:        0 bytes
 10738 ;; Hardware stack levels used:    1
 10739 ;; Hardware stack levels required when called:    6
 10740 ;; This function calls:
 10741 ;;		_fputc
 10742 ;;		_strlen
 10743 ;; This function is called by:
 10744 ;;		_vfpfcnvrt
 10745 ;; This function uses a reentrant model
 10746 ;;
 10747                           
 10748                           	psect	text45
 10749  003DB2                     __ptext45:
 10750                           	opt callstack 0
 10751  003DB2                     _stoa:
 10752                           	opt callstack 0
 10753                           
 10754                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10755  003DB2  0E11               	movlw	17
 10756  003DB4  26E1               	addwf	fsr1l,f,c
 10757  003DB6  0E00               	movlw	0
 10758  003DB8  22E2               	addwfc	fsr1h,f,c
 10759                           
 10760                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10761                           
 10762                           ;incstack = 0
 10763  003DBA  EE20  F100         	lfsr	2,stoa@F1144
 10764                           
 10765                           ;stkvar	_nuls @ sp[(-17)+0]
 10766  003DBE  0E07               	movlw	7
 10767  003DC0  6E39               	movwf	btemp,c
 10768  003DC2  0EEF               	movlw	-17
 10769  003DC4                     us509999:
 10770  003DC4  006F FF7B FFE3     	movff	postinc2,plusw1
 10771  003DCA  28E8               	incf	wreg,w,c
 10772  003DCC  2E39               	decfsz	btemp,f,c
 10773  003DCE  D7FA               	bra	us509999
 10774                           
 10775                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10776                           ;stkvar	_s @ sp[(-17)+-4]
 10777  003DD0  0EEB               	movlw	-21
 10778  003DD2  006F FF8C  F043    	movff	plusw1,btemp+10
 10779  003DD8  0EEC               	movlw	-20
 10780  003DDA  006F FF8C  F044    	movff	plusw1,btemp+11
 10781                           
 10782                           ;stkvar	_cp @ sp[(-17)+11]
 10783  003DE0  0EFB               	movlw	-5
 10784  003DE2  0060  F113  FFE3   	movff	btemp+11,plusw1
 10785  003DE8  0EFA               	movlw	-6
 10786  003DEA  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10787                           
 10788                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10789                           ;stkvar	_cp @ sp[(-17)+11]
 10790  003DF0  0EFA               	movlw	-6
 10791  003DF2  006F FF8C  F039    	movff	plusw1,btemp
 10792  003DF8  0EFB               	movlw	-5
 10793  003DFA  50E3               	movf	plusw1,w,c
 10794  003DFC  1039               	iorwf	btemp,w,c
 10795  003DFE  A4D8               	btfss	status,2,c
 10796  003E00  D00E               	goto	l8331
 10797                           
 10798                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10799                           ;stkvar	_nuls @ sp[(-17)+0]
 10800  003E02  0EEF               	movlw	239
 10801  003E04  24E1               	addwf	fsr1l,w,c
 10802  003E06  6E43               	movwf	btemp+10,c
 10803  003E08  0EFF               	movlw	255
 10804  003E0A  20E2               	addwfc	fsr1h,w,c
 10805  003E0C  6E44               	movwf	btemp+11,c
 10806                           
 10807                           ;stkvar	_cp @ sp[(-17)+11]
 10808  003E0E  0EFB               	movlw	-5
 10809  003E10  0060  F113  FFE3   	movff	btemp+11,plusw1
 10810  003E16  0EFA               	movlw	-6
 10811  003E18  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10812  003E1E                     l8331:
 10813                           
 10814                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10815                           ;stkvar	_cp @ sp[(-17)+11]
 10816  003E1E  0EFA               	movlw	-6
 10817  003E20  006F FF8F FFE6     	movff	plusw1,postinc1
 10818  003E26  006F FF8F FFE6     	movff	plusw1,postinc1
 10819  003E2C  ECF9  F02A         	call	_strlen	;wreg free
 10820                           
 10821                           ;stkvar	_l @ sp[(-17)+7]
 10822  003E30  0EF6               	movlw	-10
 10823  003E32  0060  F0E7  FFE3   	movff	btemp,plusw1
 10824  003E38  0EF7               	movlw	-9
 10825  003E3A  0060  F0EB  FFE3   	movff	btemp+1,plusw1
 10826                           
 10827                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10828                           ;stkvar	_p @ sp[(-17)+9]
 10829  003E40  0EF8               	movlw	-8
 10830  003E42  0060  F07F  FFE3   	movff	_prec,plusw1
 10831  003E48  0EF9               	movlw	-7
 10832  003E4A  0060  F083  FFE3   	movff	_prec+1,plusw1
 10833                           
 10834                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10835                           ;stkvar	_p @ sp[(-17)+9]
 10836  003E50  0EF9               	movlw	-7
 10837  003E52  BEE3               	btfsc	plusw1,7,c
 10838  003E54  D023               	goto	l1902
 10839                           
 10840                           ;stkvar	_l @ sp[(-17)+7]
 10841                           ;stkvar	_p @ sp[(-17)+9]
 10842  003E56  50E1               	movf	fsr1l,w,c
 10843  003E58  0FF8               	addlw	-8
 10844  003E5A  6ED9               	movwf	fsr2l,c
 10845  003E5C  50E2               	movf	fsr1h,w,c
 10846  003E5E  6EDA               	movwf	fsr2h,c
 10847  003E60  0EFF               	movlw	255
 10848  003E62  22DA               	addwfc	fsr2h,f,c
 10849  003E64  0EF6               	movlw	-10
 10850  003E66  50E3               	movf	plusw1,w,c
 10851  003E68  5CDE               	subwf	postinc2,w,c
 10852  003E6A  50DE               	movf	postinc2,w,c
 10853  003E6C  0A80               	xorlw	128
 10854  003E6E  6E39               	movwf	btemp,c
 10855  003E70  0EF7               	movlw	-9
 10856  003E72  50E3               	movf	plusw1,w,c
 10857  003E74  0A80               	xorlw	128
 10858  003E76  5839               	subwfb	btemp,w,c
 10859  003E78  B0D8               	btfsc	status,0,c
 10860  003E7A  D010               	goto	l1902
 10861                           
 10862                           ;stkvar	_p @ sp[(-17)+9]
 10863                           ;stkvar	_l @ sp[(-17)+7]
 10864  003E7C  0EF8               	movlw	-8
 10865  003E7E  006F FF8C  F039    	movff	plusw1,btemp
 10866  003E84  0EF6               	movlw	-10
 10867  003E86  0060  F0E7  FFE3   	movff	btemp,plusw1
 10868  003E8C  0EF9               	movlw	-7
 10869  003E8E  006F FF8C  F039    	movff	plusw1,btemp
 10870  003E94  0EF7               	movlw	-9
 10871  003E96  0060  F0E7  FFE3   	movff	btemp,plusw1
 10872  003E9C                     l1902:
 10873                           
 10874                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
 10875                           ;stkvar	_l @ sp[(-17)+7]
 10876                           ;stkvar	_p @ sp[(-17)+9]
 10877  003E9C  0EF6               	movlw	-10
 10878  003E9E  006F FF8C  F039    	movff	plusw1,btemp
 10879  003EA4  0EF8               	movlw	-8
 10880  003EA6  0060  F0E7  FFE3   	movff	btemp,plusw1
 10881  003EAC  0EF7               	movlw	-9
 10882  003EAE  006F FF8C  F039    	movff	plusw1,btemp
 10883  003EB4  0EF9               	movlw	-7
 10884  003EB6  0060  F0E7  FFE3   	movff	btemp,plusw1
 10885                           
 10886                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
 10887                           ;stkvar	_w @ sp[(-17)+13]
 10888  003EBC  0EFC               	movlw	-4
 10889  003EBE  0060  F077  FFE3   	movff	_width,plusw1
 10890  003EC4  0EFD               	movlw	-3
 10891  003EC6  0060  F07B  FFE3   	movff	_width+1,plusw1
 10892                           
 10893                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 10894  003ECC  A021               	btfss	_flags,0,c
 10895  003ECE  D01F               	goto	l8351
 10896  003ED0  D031               	goto	u5140
 10897  003ED2                     l8347:
 10898                           
 10899                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 10900                           ;stkvar	_fp @ sp[(-17)+-2]
 10901  003ED2  0EED               	movlw	-19
 10902  003ED4  006F FF8F FFE6     	movff	plusw1,postinc1
 10903  003EDA  006F FF8F FFE6     	movff	plusw1,postinc1
 10904  003EE0  0E20               	movlw	32
 10905  003EE2  6EE6               	movwf	postinc1,c
 10906  003EE4  0E00               	movlw	0
 10907  003EE6  6EE6               	movwf	postinc1,c
 10908  003EE8  EC7D  F027         	call	_fputc	;wreg free
 10909                           
 10910                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10911                           ;stkvar	_l @ sp[(-17)+7]
 10912  003EEC  0EF6               	movlw	-10
 10913  003EEE  50E3               	movf	plusw1,w,c
 10914  003EF0  0F01               	addlw	1
 10915  003EF2  6E39               	movwf	btemp,c
 10916  003EF4  0EF6               	movlw	-10
 10917  003EF6  0060  F0E7  FFE3   	movff	btemp,plusw1
 10918  003EFC  6A39               	clrf	btemp,c
 10919  003EFE  0EF7               	movlw	-9
 10920  003F00  50E3               	movf	plusw1,w,c
 10921  003F02  2039               	addwfc	btemp,w,c
 10922  003F04  6E39               	movwf	btemp,c
 10923  003F06  0EF7               	movlw	-9
 10924  003F08  0060  F0E7  FFE3   	movff	btemp,plusw1
 10925  003F0E                     l8351:
 10926                           
 10927                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 10928                           ;stkvar	_w @ sp[(-17)+13]
 10929                           ;stkvar	_l @ sp[(-17)+7]
 10930  003F0E  50E1               	movf	fsr1l,w,c
 10931  003F10  0FF6               	addlw	-10
 10932  003F12  6ED9               	movwf	fsr2l,c
 10933  003F14  50E2               	movf	fsr1h,w,c
 10934  003F16  6EDA               	movwf	fsr2h,c
 10935  003F18  0EFF               	movlw	255
 10936  003F1A  22DA               	addwfc	fsr2h,f,c
 10937  003F1C  0EFC               	movlw	-4
 10938  003F1E  50E3               	movf	plusw1,w,c
 10939  003F20  5CDE               	subwf	postinc2,w,c
 10940  003F22  50DE               	movf	postinc2,w,c
 10941  003F24  0A80               	xorlw	128
 10942  003F26  6E39               	movwf	btemp,c
 10943  003F28  0EFD               	movlw	-3
 10944  003F2A  50E3               	movf	plusw1,w,c
 10945  003F2C  0A80               	xorlw	128
 10946  003F2E  5839               	subwfb	btemp,w,c
 10947  003F30  A0D8               	btfss	status,0,c
 10948  003F32  D7CF               	goto	l8347
 10949  003F34                     u5140:
 10950                           
 10951                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10952                           ;stkvar	_i @ sp[(-17)+15]
 10953  003F34  0EFE               	movlw	-2
 10954  003F36  6AE3               	clrf	plusw1,c
 10955  003F38  0EFF               	movlw	-1
 10956  003F3A  6AE3               	clrf	plusw1,c
 10957                           
 10958                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10959  003F3C  D045               	goto	l8361
 10960  003F3E                     l8355:
 10961                           
 10962                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10963                           ;stkvar	_fp @ sp[(-17)+-2]
 10964  003F3E  0EED               	movlw	-19
 10965  003F40  006F FF8F FFE6     	movff	plusw1,postinc1
 10966  003F46  006F FF8F FFE6     	movff	plusw1,postinc1
 10967                           
 10968                           ;stkvar	_cp @ sp[(-19)+11]
 10969  003F4C  0EF8               	movlw	-8
 10970  003F4E  006F FF8F FFF6     	movff	plusw1,tblptrl
 10971  003F54  0EF9               	movlw	-7
 10972  003F56  006F FF8F FFF7     	movff	plusw1,tblptrh
 10973  003F5C  0E00               	movlw	low (__smallconst shr (0+16))
 10974  003F5E  6EF8               	movwf	tblptru,c
 10975  003F60  0E1F               	movlw	(high __ramtop+-1)
 10976  003F62  64F7               	cpfsgt	tblptrh,c
 10977  003F64  D003               	bra	u5157
 10978  003F66  0008               	tblrd		*
 10979  003F68  50F5               	movf	tablat,w,c
 10980  003F6A  D007               	bra	u5150
 10981  003F6C                     u5157:
 10982  003F6C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10983  003F72  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10984  003F78  50EF               	movf	indf0,w,c
 10985  003F7A                     u5150:
 10986  003F7A  6EE6               	movwf	postinc1,c
 10987  003F7C  0E00               	movlw	0
 10988  003F7E  6EE6               	movwf	postinc1,c
 10989  003F80  EC7D  F027         	call	_fputc	;wreg free
 10990                           
 10991                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 10992                           ;stkvar	_cp @ sp[(-17)+11]
 10993  003F84  0EFA               	movlw	-6
 10994  003F86  50E3               	movf	plusw1,w,c
 10995  003F88  0F01               	addlw	1
 10996  003F8A  6E39               	movwf	btemp,c
 10997  003F8C  0EFA               	movlw	-6
 10998  003F8E  0060  F0E7  FFE3   	movff	btemp,plusw1
 10999  003F94  6A39               	clrf	btemp,c
 11000  003F96  0EFB               	movlw	-5
 11001  003F98  50E3               	movf	plusw1,w,c
 11002  003F9A  2039               	addwfc	btemp,w,c
 11003  003F9C  6E39               	movwf	btemp,c
 11004  003F9E  0EFB               	movlw	-5
 11005  003FA0  0060  F0E7  FFE3   	movff	btemp,plusw1
 11006                           
 11007                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11008                           ;stkvar	_i @ sp[(-17)+15]
 11009  003FA6  0EFE               	movlw	-2
 11010  003FA8  50E3               	movf	plusw1,w,c
 11011  003FAA  0F01               	addlw	1
 11012  003FAC  6E39               	movwf	btemp,c
 11013  003FAE  0EFE               	movlw	-2
 11014  003FB0  0060  F0E7  FFE3   	movff	btemp,plusw1
 11015  003FB6  6A39               	clrf	btemp,c
 11016  003FB8  0EFF               	movlw	-1
 11017  003FBA  50E3               	movf	plusw1,w,c
 11018  003FBC  2039               	addwfc	btemp,w,c
 11019  003FBE  6E39               	movwf	btemp,c
 11020  003FC0  0EFF               	movlw	-1
 11021  003FC2  0060  F0E7  FFE3   	movff	btemp,plusw1
 11022  003FC8                     l8361:
 11023                           
 11024                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11025                           ;stkvar	_p @ sp[(-17)+9]
 11026                           ;stkvar	_i @ sp[(-17)+15]
 11027  003FC8  50E1               	movf	fsr1l,w,c
 11028  003FCA  0FFE               	addlw	-2
 11029  003FCC  6ED9               	movwf	fsr2l,c
 11030  003FCE  50E2               	movf	fsr1h,w,c
 11031  003FD0  6EDA               	movwf	fsr2h,c
 11032  003FD2  0EFF               	movlw	255
 11033  003FD4  22DA               	addwfc	fsr2h,f,c
 11034  003FD6  0EF8               	movlw	-8
 11035  003FD8  50E3               	movf	plusw1,w,c
 11036  003FDA  5CDE               	subwf	postinc2,w,c
 11037  003FDC  50DE               	movf	postinc2,w,c
 11038  003FDE  0A80               	xorlw	128
 11039  003FE0  6E39               	movwf	btemp,c
 11040  003FE2  0EF9               	movlw	-7
 11041  003FE4  50E3               	movf	plusw1,w,c
 11042  003FE6  0A80               	xorlw	128
 11043  003FE8  5839               	subwfb	btemp,w,c
 11044  003FEA  A0D8               	btfss	status,0,c
 11045  003FEC  D7A8               	goto	l8355
 11046                           
 11047                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11048  003FEE  B021               	btfsc	_flags,0,c
 11049  003FF0  D01F               	goto	l8369
 11050  003FF2  D031               	goto	u5180
 11051  003FF4                     l8365:
 11052                           
 11053                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11054                           ;stkvar	_fp @ sp[(-17)+-2]
 11055  003FF4  0EED               	movlw	-19
 11056  003FF6  006F FF8F FFE6     	movff	plusw1,postinc1
 11057  003FFC  006F FF8F FFE6     	movff	plusw1,postinc1
 11058  004002  0E20               	movlw	32
 11059  004004  6EE6               	movwf	postinc1,c
 11060  004006  0E00               	movlw	0
 11061  004008  6EE6               	movwf	postinc1,c
 11062  00400A  EC7D  F027         	call	_fputc	;wreg free
 11063                           
 11064                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11065                           ;stkvar	_l @ sp[(-17)+7]
 11066  00400E  0EF6               	movlw	-10
 11067  004010  50E3               	movf	plusw1,w,c
 11068  004012  0F01               	addlw	1
 11069  004014  6E39               	movwf	btemp,c
 11070  004016  0EF6               	movlw	-10
 11071  004018  0060  F0E7  FFE3   	movff	btemp,plusw1
 11072  00401E  6A39               	clrf	btemp,c
 11073  004020  0EF7               	movlw	-9
 11074  004022  50E3               	movf	plusw1,w,c
 11075  004024  2039               	addwfc	btemp,w,c
 11076  004026  6E39               	movwf	btemp,c
 11077  004028  0EF7               	movlw	-9
 11078  00402A  0060  F0E7  FFE3   	movff	btemp,plusw1
 11079  004030                     l8369:
 11080                           
 11081                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11082                           ;stkvar	_w @ sp[(-17)+13]
 11083                           ;stkvar	_l @ sp[(-17)+7]
 11084  004030  50E1               	movf	fsr1l,w,c
 11085  004032  0FF6               	addlw	-10
 11086  004034  6ED9               	movwf	fsr2l,c
 11087  004036  50E2               	movf	fsr1h,w,c
 11088  004038  6EDA               	movwf	fsr2h,c
 11089  00403A  0EFF               	movlw	255
 11090  00403C  22DA               	addwfc	fsr2h,f,c
 11091  00403E  0EFC               	movlw	-4
 11092  004040  50E3               	movf	plusw1,w,c
 11093  004042  5CDE               	subwf	postinc2,w,c
 11094  004044  50DE               	movf	postinc2,w,c
 11095  004046  0A80               	xorlw	128
 11096  004048  6E39               	movwf	btemp,c
 11097  00404A  0EFD               	movlw	-3
 11098  00404C  50E3               	movf	plusw1,w,c
 11099  00404E  0A80               	xorlw	128
 11100  004050  5839               	subwfb	btemp,w,c
 11101  004052  A0D8               	btfss	status,0,c
 11102  004054  D7CF               	goto	l8365
 11103  004056                     u5180:
 11104                           
 11105                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
 11106                           ;stkvar	_l @ sp[(-17)+7]
 11107  004056  0EF6               	movlw	-10
 11108  004058  006F FF8C  F039    	movff	plusw1,btemp
 11109  00405E  0EF7               	movlw	-9
 11110  004060  006F FF8C  F03A    	movff	plusw1,btemp+1
 11111                           
 11112                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11113  004066  0EEB               	movlw	235
 11114  004068  26E1               	addwf	fsr1l,f,c
 11115  00406A  0EFF               	movlw	255
 11116  00406C  22E2               	addwfc	fsr1h,f,c
 11117  00406E  0012               	return		;funcret
 11118  004070                     __end_of_stoa:
 11119                           	opt callstack 0
 11120                           
 11121 ;; *************** function _dtoa *****************
 11122 ;; Defined at:
 11123 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11124 ;; Parameters:    Size  Location     Type
 11125 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11126 ;;		 -> f(5), NULL(0), 
 11127 ;;  d               8  [STACK] long long 
 11128 ;; Auto vars:     Size  Location     Type
 11129 ;;  n               8  [STACK] long long 
 11130 ;;  i               2  [STACK] int 
 11131 ;;  s               2  [STACK] int 
 11132 ;;  w               2  [STACK] int 
 11133 ;;  p               2  [STACK] int 
 11134 ;; Return value:  Size  Location     Type
 11135 ;;                  2  [STACK] int 
 11136 ;; Registers used:
 11137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 11138 ;; Tracked objects:
 11139 ;;		On entry : 0/0
 11140 ;;		On exit  : 0/0
 11141 ;;		Unchanged: 0/0
 11142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11147 ;;Total ram usage:        0 bytes
 11148 ;; Hardware stack levels used:    1
 11149 ;; Hardware stack levels required when called:    8
 11150 ;; This function calls:
 11151 ;;		___aodiv
 11152 ;;		___aomod
 11153 ;;		_abs
 11154 ;;		_pad
 11155 ;; This function is called by:
 11156 ;;		_vfpfcnvrt
 11157 ;; This function uses a reentrant model
 11158 ;;
 11159                           
 11160                           	psect	text46
 11161  00303C                     __ptext46:
 11162                           	opt callstack 0
 11163  00303C                     _dtoa:
 11164                           	opt callstack 0
 11165                           
 11166                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 11167  00303C  0E12               	movlw	18
 11168  00303E  26E1               	addwf	fsr1l,f,c
 11169  003040  0E00               	movlw	0
 11170  003042  22E2               	addwfc	fsr1h,f,c
 11171                           
 11172                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
 11173                           ;stkvar	_d @ sp[(-18)+-10]
 11174                           
 11175                           ;incstack = 0
 11176  003044  0EE4               	movlw	228
 11177  003046  24E1               	addwf	fsr1l,w,c
 11178  003048  6ED9               	movwf	fsr2l,c
 11179  00304A  0EFF               	movlw	255
 11180  00304C  20E2               	addwfc	fsr1h,w,c
 11181  00304E  6EDA               	movwf	fsr2h,c
 11182                           
 11183                           ;stkvar	_n @ sp[(-18)+2]
 11184  003050  0E08               	movlw	8
 11185  003052  6E39               	movwf	btemp,c
 11186  003054  0EF0               	movlw	-16
 11187  003056                     us492999:
 11188  003056  006F FF7B FFE3     	movff	postinc2,plusw1
 11189  00305C  28E8               	incf	wreg,w,c
 11190  00305E  2E39               	decfsz	btemp,f,c
 11191  003060  D7FA               	bra	us492999
 11192                           
 11193                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 11194                           ;stkvar	_n @ sp[(-18)+2]
 11195  003062  0EF7               	movlw	-9
 11196  003064  AEE3               	btfss	plusw1,7,c
 11197  003066  D002               	goto	u4930
 11198  003068  0E01               	movlw	1
 11199  00306A  D001               	goto	u4940
 11200  00306C                     u4930:
 11201  00306C  0E00               	movlw	0
 11202  00306E                     u4940:
 11203  00306E  6E43               	movwf	btemp+10,c
 11204  003070  6A44               	clrf	btemp+11,c
 11205                           
 11206                           ;stkvar	_s @ sp[(-18)+12]
 11207  003072  0EFA               	movlw	-6
 11208  003074  0060  F10F  FFE3   	movff	btemp+10,plusw1
 11209  00307A  0EFB               	movlw	-5
 11210  00307C  0060  F113  FFE3   	movff	btemp+11,plusw1
 11211                           
 11212                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 11213                           ;stkvar	_s @ sp[(-18)+12]
 11214  003082  0EFA               	movlw	-6
 11215  003084  006F FF8C  F039    	movff	plusw1,btemp
 11216  00308A  0EFB               	movlw	-5
 11217  00308C  50E3               	movf	plusw1,w,c
 11218  00308E  1039               	iorwf	btemp,w,c
 11219  003090  B4D8               	btfsc	status,2,c
 11220  003092  D025               	goto	u4960
 11221                           
 11222                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 11223                           ;stkvar	_n @ sp[(-18)+2]
 11224                           ;stkvar	_n @ sp[(-18)+2]
 11225  003094  0EF0               	movlw	-16
 11226  003096  6CE3               	negf	plusw1,c
 11227  003098  0EF1               	movlw	-15
 11228  00309A  1EE3               	comf	plusw1,f,c
 11229  00309C  0EF2               	movlw	-14
 11230  00309E  1EE3               	comf	plusw1,f,c
 11231  0030A0  0EF3               	movlw	-13
 11232  0030A2  1EE3               	comf	plusw1,f,c
 11233  0030A4  0EF4               	movlw	-12
 11234  0030A6  1EE3               	comf	plusw1,f,c
 11235  0030A8  0EF5               	movlw	-11
 11236  0030AA  1EE3               	comf	plusw1,f,c
 11237  0030AC  0EF6               	movlw	-10
 11238  0030AE  1EE3               	comf	plusw1,f,c
 11239  0030B0  0EF7               	movlw	-9
 11240  0030B2  1EE3               	comf	plusw1,f,c
 11241  0030B4  E314               	bnc	u4960
 11242  0030B6  0EF1               	movlw	-15
 11243  0030B8  2AE3               	incf	plusw1,f,c
 11244  0030BA  E311               	bnc	u4960
 11245  0030BC  0EF2               	movlw	-14
 11246  0030BE  2AE3               	incf	plusw1,f,c
 11247  0030C0  E30E               	bnc	u4960
 11248  0030C2  0EF3               	movlw	-13
 11249  0030C4  2AE3               	incf	plusw1,f,c
 11250  0030C6  E30B               	bnc	u4960
 11251  0030C8  0EF4               	movlw	-12
 11252  0030CA  2AE3               	incf	plusw1,f,c
 11253  0030CC  E308               	bnc	u4960
 11254  0030CE  0EF5               	movlw	-11
 11255  0030D0  2AE3               	incf	plusw1,f,c
 11256  0030D2  E305               	bnc	u4960
 11257  0030D4  0EF6               	movlw	-10
 11258  0030D6  2AE3               	incf	plusw1,f,c
 11259  0030D8  E302               	bnc	u4960
 11260  0030DA  0EF7               	movlw	-9
 11261  0030DC  2AE3               	incf	plusw1,f,c
 11262  0030DE                     u4960:
 11263                           
 11264                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 11265  0030DE  AE20               	btfss	_prec+1,7,c
 11266                           
 11267                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 11268  0030E0  9221               	bcf	_flags,1,c
 11269                           
 11270                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 11271  0030E2  BE20               	btfsc	_prec+1,7,c
 11272  0030E4  D005               	goto	u4980
 11273  0030E6  5020               	movf	_prec+1,w,c
 11274  0030E8  E110               	bnz	l8273
 11275  0030EA  041F               	decf	_prec,w,c
 11276  0030EC  B0D8               	btfsc	status,0,c
 11277  0030EE  D00D               	goto	l8273
 11278  0030F0                     u4980:
 11279  0030F0  0E01               	movlw	1
 11280  0030F2  6E43               	movwf	btemp+10,c
 11281  0030F4  0E00               	movlw	0
 11282  0030F6  6E44               	movwf	btemp+11,c
 11283                           
 11284                           ;stkvar	_p @ sp[(-18)+16]
 11285  0030F8  0EFE               	movlw	-2
 11286  0030FA  0060  F10F  FFE3   	movff	btemp+10,plusw1
 11287  003100  0EFF               	movlw	-1
 11288  003102  0060  F113  FFE3   	movff	btemp+11,plusw1
 11289  003108  D008               	goto	l1875
 11290  00310A                     l8273:
 11291                           
 11292                           ;stkvar	_p @ sp[(-18)+16]
 11293  00310A  0EFE               	movlw	-2
 11294  00310C  0060  F07F  FFE3   	movff	_prec,plusw1
 11295  003112  0EFF               	movlw	-1
 11296  003114  0060  F083  FFE3   	movff	_prec+1,plusw1
 11297  00311A                     l1875:
 11298                           
 11299                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
 11300                           ;stkvar	_w @ sp[(-18)+14]
 11301  00311A  0EFC               	movlw	-4
 11302  00311C  0060  F077  FFE3   	movff	_width,plusw1
 11303  003122  0EFD               	movlw	-3
 11304  003124  0060  F07B  FFE3   	movff	_width+1,plusw1
 11305                           
 11306                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 11307                           ;stkvar	_s @ sp[(-18)+12]
 11308  00312A  0EFA               	movlw	-6
 11309  00312C  006F FF8C  F039    	movff	plusw1,btemp
 11310  003132  0EFB               	movlw	-5
 11311  003134  50E3               	movf	plusw1,w,c
 11312  003136  1039               	iorwf	btemp,w,c
 11313  003138  A4D8               	btfss	status,2,c
 11314  00313A  D002               	goto	u5000
 11315  00313C  A421               	btfss	_flags,2,c
 11316  00313E  D00A               	goto	l8281
 11317  003140                     u5000:
 11318                           
 11319                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
 11320                           ;stkvar	_w @ sp[(-18)+14]
 11321  003140  50E1               	movf	fsr1l,w,c
 11322  003142  0FFC               	addlw	-4
 11323  003144  6ED9               	movwf	fsr2l,c
 11324  003146  50E2               	movf	fsr1h,w,c
 11325  003148  6EDA               	movwf	fsr2h,c
 11326  00314A  0EFF               	movlw	255
 11327  00314C  22DA               	addwfc	fsr2h,f,c
 11328  00314E  06DE               	decf	postinc2,f,c
 11329  003150  0E00               	movlw	0
 11330  003152  5ADD               	subwfb	postdec2,f,c
 11331  003154                     l8281:
 11332                           
 11333                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 11334  003154  0E1F               	movlw	31
 11335  003156  6E43               	movwf	btemp+10,c
 11336  003158  0E00               	movlw	0
 11337  00315A  6E44               	movwf	btemp+11,c
 11338                           
 11339                           ;stkvar	_i @ sp[(-18)+10]
 11340  00315C  0EF8               	movlw	-8
 11341  00315E  0060  F10F  FFE3   	movff	btemp+10,plusw1
 11342  003164  0EF9               	movlw	-7
 11343  003166  0060  F113  FFE3   	movff	btemp+11,plusw1
 11344                           
 11345                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 11346  00316C  0101               	movlb	1	; () banked
 11347  00316E  6BFC               	clrf	(_dbuf+31)& (0+255),b
 11348                           
 11349                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11350  003170  D109               	goto	l8295
 11351  003172                     l8285:
 11352                           
 11353                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
 11354                           ;stkvar	_i @ sp[(-18)+10]
 11355  003172  50E1               	movf	fsr1l,w,c
 11356  003174  0FF8               	addlw	-8
 11357  003176  6ED9               	movwf	fsr2l,c
 11358  003178  50E2               	movf	fsr1h,w,c
 11359  00317A  6EDA               	movwf	fsr2h,c
 11360  00317C  0EFF               	movlw	255
 11361  00317E  22DA               	addwfc	fsr2h,f,c
 11362  003180  06DE               	decf	postinc2,f,c
 11363  003182  0E00               	movlw	0
 11364  003184  5ADD               	subwfb	postdec2,f,c
 11365                           
 11366                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 11367  003186  0E0A               	movlw	10
 11368  003188  6EE6               	movwf	postinc1,c
 11369  00318A  0E00               	movlw	0
 11370  00318C  6EE6               	movwf	postinc1,c
 11371  00318E  0E00               	movlw	0
 11372  003190  6EE6               	movwf	postinc1,c
 11373  003192  0E00               	movlw	0
 11374  003194  6EE6               	movwf	postinc1,c
 11375  003196  0E00               	movlw	0
 11376  003198  6EE6               	movwf	postinc1,c
 11377  00319A  0E00               	movlw	0
 11378  00319C  6EE6               	movwf	postinc1,c
 11379  00319E  0E00               	movlw	0
 11380  0031A0  6EE6               	movwf	postinc1,c
 11381  0031A2  0E00               	movlw	0
 11382  0031A4  6EE6               	movwf	postinc1,c
 11383                           
 11384                           ;stkvar	_n @ sp[(-26)+2]
 11385  0031A6  50E1               	movf	fsr1l,w,c
 11386  0031A8  0FE8               	addlw	-24
 11387  0031AA  6ED9               	movwf	fsr2l,c
 11388  0031AC  50E2               	movf	fsr1h,w,c
 11389  0031AE  6EDA               	movwf	fsr2h,c
 11390  0031B0  0EFF               	movlw	255
 11391  0031B2  22DA               	addwfc	fsr2h,f,c
 11392  0031B4  006F FF7B FFE6     	movff	postinc2,postinc1
 11393  0031BA  006F FF7B FFE6     	movff	postinc2,postinc1
 11394  0031C0  006F FF7B FFE6     	movff	postinc2,postinc1
 11395  0031C6  006F FF7B FFE6     	movff	postinc2,postinc1
 11396  0031CC  006F FF7B FFE6     	movff	postinc2,postinc1
 11397  0031D2  006F FF7B FFE6     	movff	postinc2,postinc1
 11398  0031D8  006F FF7B FFE6     	movff	postinc2,postinc1
 11399  0031DE  006F FF7B FFE6     	movff	postinc2,postinc1
 11400  0031E4  ECCF  F023         	call	___aomod	;wreg free
 11401  0031E8  52E5               	movf	postdec1,f,c
 11402  0031EA  006F FF9C  F050    	movff	indf1,btemp+23
 11403  0031F0  52E5               	movf	postdec1,f,c
 11404  0031F2  006F FF9C  F04F    	movff	indf1,btemp+22
 11405  0031F8  52E5               	movf	postdec1,f,c
 11406  0031FA  006F FF9C  F04E    	movff	indf1,btemp+21
 11407  003200  52E5               	movf	postdec1,f,c
 11408  003202  006F FF9C  F04D    	movff	indf1,btemp+20
 11409  003208  52E5               	movf	postdec1,f,c
 11410  00320A  006F FF9C  F04C    	movff	indf1,btemp+19
 11411  003210  52E5               	movf	postdec1,f,c
 11412  003212  006F FF9C  F04B    	movff	indf1,btemp+18
 11413  003218  52E5               	movf	postdec1,f,c
 11414  00321A  006F FF9C  F04A    	movff	indf1,btemp+17
 11415  003220  52E5               	movf	postdec1,f,c
 11416  003222  006F FF9C  F049    	movff	indf1,btemp+16
 11417  003228  0EF8               	movlw	248
 11418  00322A  26E1               	addwf	fsr1l,f,c
 11419  00322C  0EFF               	movlw	255
 11420  00322E  22E2               	addwfc	fsr1h,f,c
 11421  003230  0060  F124  F043   	movff	btemp+16,btemp+10
 11422  003236  0060  F128  F044   	movff	btemp+17,btemp+11
 11423  00323C  0060  F10F  FFE6   	movff	btemp+10,postinc1
 11424  003242  0060  F113  FFE6   	movff	btemp+11,postinc1
 11425  003248  EC00  F02F         	call	_abs	;wreg free
 11426  00324C  0E30               	movlw	48
 11427  00324E  2639               	addwf	btemp,f,c
 11428                           
 11429                           ;stkvar	_i @ sp[(-18)+10]
 11430  003250  0EF8               	movlw	-8
 11431  003252  006F FF8C  F043    	movff	plusw1,btemp+10
 11432  003258  0EF9               	movlw	-7
 11433  00325A  006F FF8C  F044    	movff	plusw1,btemp+11
 11434  003260  0EDD               	movlw	low _dbuf
 11435  003262  2443               	addwf	btemp+10,w,c
 11436  003264  6ED9               	movwf	fsr2l,c
 11437  003266  0E01               	movlw	high _dbuf
 11438  003268  2044               	addwfc	btemp+11,w,c
 11439  00326A  6EDA               	movwf	fsr2h,c
 11440  00326C  0060  F0E7  FFDF   	movff	btemp,indf2
 11441                           
 11442                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
 11443                           ;stkvar	_p @ sp[(-18)+16]
 11444  003272  50E1               	movf	fsr1l,w,c
 11445  003274  0FFE               	addlw	-2
 11446  003276  6ED9               	movwf	fsr2l,c
 11447  003278  50E2               	movf	fsr1h,w,c
 11448  00327A  6EDA               	movwf	fsr2h,c
 11449  00327C  0EFF               	movlw	255
 11450  00327E  22DA               	addwfc	fsr2h,f,c
 11451  003280  06DE               	decf	postinc2,f,c
 11452  003282  0E00               	movlw	0
 11453  003284  5ADD               	subwfb	postdec2,f,c
 11454                           
 11455                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
 11456                           ;stkvar	_w @ sp[(-18)+14]
 11457  003286  50E1               	movf	fsr1l,w,c
 11458  003288  0FFC               	addlw	-4
 11459  00328A  6ED9               	movwf	fsr2l,c
 11460  00328C  50E2               	movf	fsr1h,w,c
 11461  00328E  6EDA               	movwf	fsr2h,c
 11462  003290  0EFF               	movlw	255
 11463  003292  22DA               	addwfc	fsr2h,f,c
 11464  003294  06DE               	decf	postinc2,f,c
 11465  003296  0E00               	movlw	0
 11466  003298  5ADD               	subwfb	postdec2,f,c
 11467                           
 11468                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 11469  00329A  0E0A               	movlw	10
 11470  00329C  6EE6               	movwf	postinc1,c
 11471  00329E  0E00               	movlw	0
 11472  0032A0  6EE6               	movwf	postinc1,c
 11473  0032A2  0E00               	movlw	0
 11474  0032A4  6EE6               	movwf	postinc1,c
 11475  0032A6  0E00               	movlw	0
 11476  0032A8  6EE6               	movwf	postinc1,c
 11477  0032AA  0E00               	movlw	0
 11478  0032AC  6EE6               	movwf	postinc1,c
 11479  0032AE  0E00               	movlw	0
 11480  0032B0  6EE6               	movwf	postinc1,c
 11481  0032B2  0E00               	movlw	0
 11482  0032B4  6EE6               	movwf	postinc1,c
 11483  0032B6  0E00               	movlw	0
 11484  0032B8  6EE6               	movwf	postinc1,c
 11485                           
 11486                           ;stkvar	_n @ sp[(-26)+2]
 11487  0032BA  50E1               	movf	fsr1l,w,c
 11488  0032BC  0FE8               	addlw	-24
 11489  0032BE  6ED9               	movwf	fsr2l,c
 11490  0032C0  50E2               	movf	fsr1h,w,c
 11491  0032C2  6EDA               	movwf	fsr2h,c
 11492  0032C4  0EFF               	movlw	255
 11493  0032C6  22DA               	addwfc	fsr2h,f,c
 11494  0032C8  006F FF7B FFE6     	movff	postinc2,postinc1
 11495  0032CE  006F FF7B FFE6     	movff	postinc2,postinc1
 11496  0032D4  006F FF7B FFE6     	movff	postinc2,postinc1
 11497  0032DA  006F FF7B FFE6     	movff	postinc2,postinc1
 11498  0032E0  006F FF7B FFE6     	movff	postinc2,postinc1
 11499  0032E6  006F FF7B FFE6     	movff	postinc2,postinc1
 11500  0032EC  006F FF7B FFE6     	movff	postinc2,postinc1
 11501  0032F2  006F FF7B FFE6     	movff	postinc2,postinc1
 11502  0032F8  EC38  F020         	call	___aodiv	;wreg free
 11503  0032FC  52E5               	movf	postdec1,f,c
 11504  0032FE  006F FF9C  F050    	movff	indf1,btemp+23
 11505  003304  52E5               	movf	postdec1,f,c
 11506  003306  006F FF9C  F04F    	movff	indf1,btemp+22
 11507  00330C  52E5               	movf	postdec1,f,c
 11508  00330E  006F FF9C  F04E    	movff	indf1,btemp+21
 11509  003314  52E5               	movf	postdec1,f,c
 11510  003316  006F FF9C  F04D    	movff	indf1,btemp+20
 11511  00331C  52E5               	movf	postdec1,f,c
 11512  00331E  006F FF9C  F04C    	movff	indf1,btemp+19
 11513  003324  52E5               	movf	postdec1,f,c
 11514  003326  006F FF9C  F04B    	movff	indf1,btemp+18
 11515  00332C  52E5               	movf	postdec1,f,c
 11516  00332E  006F FF9C  F04A    	movff	indf1,btemp+17
 11517  003334  52E5               	movf	postdec1,f,c
 11518  003336  006F FF9C  F049    	movff	indf1,btemp+16
 11519  00333C  0EF8               	movlw	248
 11520  00333E  26E1               	addwf	fsr1l,f,c
 11521  003340  0EFF               	movlw	255
 11522  003342  22E2               	addwfc	fsr1h,f,c
 11523                           
 11524                           ;stkvar	_n @ sp[(-18)+2]
 11525  003344  0EF0               	movlw	-16
 11526  003346  0060  F127  FFE3   	movff	btemp+16,plusw1
 11527  00334C  0EF1               	movlw	-15
 11528  00334E  0060  F12B  FFE3   	movff	btemp+17,plusw1
 11529  003354  0EF2               	movlw	-14
 11530  003356  0060  F12F  FFE3   	movff	btemp+18,plusw1
 11531  00335C  0EF3               	movlw	-13
 11532  00335E  0060  F133  FFE3   	movff	btemp+19,plusw1
 11533  003364  0EF4               	movlw	-12
 11534  003366  0060  F137  FFE3   	movff	btemp+20,plusw1
 11535  00336C  0EF5               	movlw	-11
 11536  00336E  0060  F13B  FFE3   	movff	btemp+21,plusw1
 11537  003374  0EF6               	movlw	-10
 11538  003376  0060  F13F  FFE3   	movff	btemp+22,plusw1
 11539  00337C  0EF7               	movlw	-9
 11540  00337E  0060  F143  FFE3   	movff	btemp+23,plusw1
 11541  003384                     l8295:
 11542                           
 11543                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11544                           ;stkvar	_i @ sp[(-18)+10]
 11545  003384  0EF9               	movlw	-7
 11546  003386  BEE3               	btfsc	plusw1,7,c
 11547  003388  D036               	goto	u5050
 11548  00338A  0EF9               	movlw	-7
 11549  00338C  50E3               	movf	plusw1,w,c
 11550  00338E  E104               	bnz	u5010
 11551  003390  0EF8               	movlw	-8
 11552  003392  04E3               	decf	plusw1,w,c
 11553  003394  A0D8               	btfss	status,0,c
 11554  003396  D02F               	goto	u5050
 11555  003398                     u5010:
 11556                           
 11557                           ;stkvar	_n @ sp[(-18)+2]
 11558  003398  0EF0               	movlw	-16
 11559  00339A  50E3               	movf	plusw1,w,c
 11560  00339C  E115               	bnz	u5021
 11561  00339E  0EF1               	movlw	-15
 11562  0033A0  50E3               	movf	plusw1,w,c
 11563  0033A2  E112               	bnz	u5021
 11564  0033A4  0EF2               	movlw	-14
 11565  0033A6  50E3               	movf	plusw1,w,c
 11566  0033A8  E10F               	bnz	u5021
 11567  0033AA  0EF3               	movlw	-13
 11568  0033AC  50E3               	movf	plusw1,w,c
 11569  0033AE  E10C               	bnz	u5021
 11570  0033B0  0EF4               	movlw	-12
 11571  0033B2  50E3               	movf	plusw1,w,c
 11572  0033B4  E109               	bnz	u5021
 11573  0033B6  0EF5               	movlw	-11
 11574  0033B8  50E3               	movf	plusw1,w,c
 11575  0033BA  E106               	bnz	u5021
 11576  0033BC  0EF6               	movlw	-10
 11577  0033BE  50E3               	movf	plusw1,w,c
 11578  0033C0  E103               	bnz	u5021
 11579  0033C2  0EF7               	movlw	-9
 11580  0033C4  50E3               	movf	plusw1,w,c
 11581  0033C6  A4D8               	btfss	status,2,c
 11582  0033C8                     u5021:
 11583  0033C8  D6D4               	goto	l8285
 11584                           
 11585                           ;stkvar	_p @ sp[(-18)+16]
 11586  0033CA  0EFF               	movlw	-1
 11587  0033CC  BEE3               	btfsc	plusw1,7,c
 11588  0033CE  D007               	goto	u5030
 11589  0033D0  0EFF               	movlw	-1
 11590  0033D2  50E3               	movf	plusw1,w,c
 11591  0033D4  E103               	bnz	u5031
 11592  0033D6  0EFE               	movlw	-2
 11593  0033D8  04E3               	decf	plusw1,w,c
 11594  0033DA  B0D8               	btfsc	status,0,c
 11595  0033DC                     u5031:
 11596  0033DC  D6CA               	goto	l8285
 11597  0033DE                     u5030:
 11598                           
 11599                           ;stkvar	_w @ sp[(-18)+14]
 11600  0033DE  0EFD               	movlw	-3
 11601  0033E0  BEE3               	btfsc	plusw1,7,c
 11602  0033E2  D009               	goto	u5050
 11603  0033E4  0EFD               	movlw	-3
 11604  0033E6  50E3               	movf	plusw1,w,c
 11605  0033E8  E104               	bnz	u5040
 11606  0033EA  0EFC               	movlw	-4
 11607  0033EC  04E3               	decf	plusw1,w,c
 11608  0033EE  A0D8               	btfss	status,0,c
 11609  0033F0  D002               	goto	u5050
 11610  0033F2                     u5040:
 11611  0033F2  B221               	btfsc	_flags,1,c
 11612  0033F4  D6BE               	goto	l8285
 11613  0033F6                     u5050:
 11614                           
 11615                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 11616                           ;stkvar	_s @ sp[(-18)+12]
 11617  0033F6  0EFA               	movlw	-6
 11618  0033F8  006F FF8C  F039    	movff	plusw1,btemp
 11619  0033FE  0EFB               	movlw	-5
 11620  003400  50E3               	movf	plusw1,w,c
 11621  003402  1039               	iorwf	btemp,w,c
 11622  003404  A4D8               	btfss	status,2,c
 11623  003406  D002               	goto	u5070
 11624  003408  A421               	btfss	_flags,2,c
 11625  00340A  D033               	goto	l8319
 11626  00340C                     u5070:
 11627                           
 11628                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 11629                           ;stkvar	_i @ sp[(-18)+10]
 11630  00340C  50E1               	movf	fsr1l,w,c
 11631  00340E  0FF8               	addlw	-8
 11632  003410  6ED9               	movwf	fsr2l,c
 11633  003412  50E2               	movf	fsr1h,w,c
 11634  003414  6EDA               	movwf	fsr2h,c
 11635  003416  0EFF               	movlw	255
 11636  003418  22DA               	addwfc	fsr2h,f,c
 11637  00341A  06DE               	decf	postinc2,f,c
 11638  00341C  0E00               	movlw	0
 11639  00341E  5ADD               	subwfb	postdec2,f,c
 11640                           
 11641                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 11642                           ;stkvar	_s @ sp[(-18)+12]
 11643  003420  0EFA               	movlw	-6
 11644  003422  006F FF8C  F039    	movff	plusw1,btemp
 11645  003428  0EFB               	movlw	-5
 11646  00342A  50E3               	movf	plusw1,w,c
 11647  00342C  1039               	iorwf	btemp,w,c
 11648  00342E  A4D8               	btfss	status,2,c
 11649  003430  D002               	goto	l8315
 11650  003432  0E2B               	movlw	43
 11651  003434  D001               	goto	L25
 11652  003436                     l8315:
 11653  003436  0E2D               	movlw	45
 11654  003438                     L25:
 11655  003438  6E43               	movwf	btemp+10,c
 11656  00343A  0E00               	movlw	0
 11657  00343C  6E44               	movwf	btemp+11,c
 11658                           
 11659                           ;stkvar	_dtoa$3963 @ sp[(-18)+0]
 11660  00343E  0EEE               	movlw	-18
 11661  003440  0060  F10F  FFE3   	movff	btemp+10,plusw1
 11662  003446  0EEF               	movlw	-17
 11663  003448  0060  F113  FFE3   	movff	btemp+11,plusw1
 11664                           
 11665                           ;stkvar	_dtoa$3963 @ sp[(-18)+0]
 11666                           ;stkvar	_i @ sp[(-18)+10]
 11667  00344E  0EF8               	movlw	-8
 11668  003450  006F FF8C  F043    	movff	plusw1,btemp+10
 11669  003456  0EF9               	movlw	-7
 11670  003458  006F FF8C  F044    	movff	plusw1,btemp+11
 11671  00345E  0EDD               	movlw	low _dbuf
 11672  003460  2443               	addwf	btemp+10,w,c
 11673  003462  6ED9               	movwf	fsr2l,c
 11674  003464  0E01               	movlw	high _dbuf
 11675  003466  2044               	addwfc	btemp+11,w,c
 11676  003468  6EDA               	movwf	fsr2h,c
 11677  00346A  0EEE               	movlw	-18
 11678  00346C  006F FF8F FFDF     	movff	plusw1,indf2
 11679  003472                     l8319:
 11680                           
 11681                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 11682                           ;stkvar	_w @ sp[(-18)+14]
 11683  003472  0EFC               	movlw	-4
 11684  003474  006F FF8F FFE6     	movff	plusw1,postinc1
 11685  00347A  006F FF8F FFE6     	movff	plusw1,postinc1
 11686                           
 11687                           ;stkvar	_i @ sp[(-20)+10]
 11688  003480  0EDD               	movlw	low _dbuf
 11689  003482  6E43               	movwf	btemp+10,c
 11690  003484  0E01               	movlw	high _dbuf
 11691  003486  6E44               	movwf	btemp+11,c
 11692  003488  0EF6               	movlw	-10
 11693  00348A  50E3               	movf	plusw1,w,c
 11694  00348C  2643               	addwf	btemp+10,f,c
 11695  00348E  0EF7               	movlw	-9
 11696  003490  50E3               	movf	plusw1,w,c
 11697  003492  2244               	addwfc	btemp+11,f,c
 11698  003494  0060  F10F  FFE6   	movff	btemp+10,postinc1
 11699  00349A  0060  F113  FFE6   	movff	btemp+11,postinc1
 11700                           
 11701                           ;stkvar	_fp @ sp[(-22)+-2]
 11702  0034A0  0EE8               	movlw	-24
 11703  0034A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11704  0034A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11705  0034AE  ECF3  F026         	call	_pad	;wreg free
 11706                           
 11707                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 11708  0034B2  0EE4               	movlw	228
 11709  0034B4  26E1               	addwf	fsr1l,f,c
 11710  0034B6  0EFF               	movlw	255
 11711  0034B8  22E2               	addwfc	fsr1h,f,c
 11712  0034BA  0012               	return		;funcret
 11713  0034BC                     __end_of_dtoa:
 11714                           	opt callstack 0
 11715                           
 11716 ;; *************** function _abs *****************
 11717 ;; Defined at:
 11718 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 11719 ;; Parameters:    Size  Location     Type
 11720 ;;  a               2  [STACK] int 
 11721 ;; Auto vars:     Size  Location     Type
 11722 ;;		None
 11723 ;; Return value:  Size  Location     Type
 11724 ;;                  2  [STACK] int 
 11725 ;; Registers used:
 11726 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 11727 ;; Tracked objects:
 11728 ;;		On entry : 0/1
 11729 ;;		On exit  : 0/0
 11730 ;;		Unchanged: 0/0
 11731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11736 ;;Total ram usage:        0 bytes
 11737 ;; Hardware stack levels used:    1
 11738 ;; Hardware stack levels required when called:    3
 11739 ;; This function calls:
 11740 ;;		Nothing
 11741 ;; This function is called by:
 11742 ;;		_dtoa
 11743 ;; This function uses a reentrant model
 11744 ;;
 11745                           
 11746                           	psect	text47
 11747  005E00                     __ptext47:
 11748                           	opt callstack 0
 11749  005E00                     _abs:
 11750                           	opt callstack 23
 11751                           
 11752                           ;stkvar	_a @ sp[(0)+-2]
 11753                           
 11754                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11755                           ;incstack = 0
 11756  005E00  0EFF               	movlw	-1
 11757  005E02  BEE3               	btfsc	plusw1,7,c
 11758  005E04  D007               	goto	u2570
 11759  005E06  0EFF               	movlw	-1
 11760  005E08  50E3               	movf	plusw1,w,c
 11761  005E0A  E112               	bnz	l5443
 11762  005E0C  0EFE               	movlw	-2
 11763  005E0E  04E3               	decf	plusw1,w,c
 11764  005E10  B0D8               	btfsc	status,0,c
 11765  005E12  D00E               	goto	l5443
 11766  005E14                     u2570:
 11767                           
 11768                           ;stkvar	_a @ sp[(0)+-2]
 11769  005E14  0EFE               	movlw	-2
 11770  005E16  006F FF8C  F039    	movff	plusw1,btemp
 11771  005E1C  1E39               	comf	btemp,f,c
 11772  005E1E  0EFF               	movlw	-1
 11773  005E20  006F FF8C  F03A    	movff	plusw1,btemp+1
 11774  005E26  1E3A               	comf	btemp+1,f,c
 11775  005E28  2A39               	incf	btemp,f,c
 11776  005E2A  B4D8               	btfsc	status,2,c
 11777  005E2C  2A3A               	incf	btemp+1,f,c
 11778  005E2E  D008               	goto	l2616
 11779  005E30                     l5443:
 11780                           
 11781                           ;stkvar	_a @ sp[(0)+-2]
 11782  005E30  0EFE               	movlw	-2
 11783  005E32  006F FF8C  F039    	movff	plusw1,btemp
 11784  005E38  0EFF               	movlw	-1
 11785  005E3A  006F FF8C  F03A    	movff	plusw1,btemp+1
 11786  005E40                     l2616:
 11787                           
 11788                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 11789  005E40  52E5               	movf	postdec1,f,c
 11790  005E42  52E5               	movf	postdec1,f,c
 11791  005E44  0012               	return		;funcret
 11792  005E46                     __end_of_abs:
 11793                           	opt callstack 0
 11794                           
 11795 ;; *************** function ___aomod *****************
 11796 ;; Defined at:
 11797 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 11798 ;; Parameters:    Size  Location     Type
 11799 ;;  dividend        8  [STACK] long long 
 11800 ;;  divisor         8  [STACK] long long 
 11801 ;; Auto vars:     Size  Location     Type
 11802 ;;  sign            1  [STACK] unsigned char 
 11803 ;;  counter         1  [STACK] unsigned char 
 11804 ;; Return value:  Size  Location     Type
 11805 ;;                  8  [STACK] long long 
 11806 ;; Registers used:
 11807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 11808 ;; Tracked objects:
 11809 ;;		On entry : 0/1
 11810 ;;		On exit  : 0/0
 11811 ;;		Unchanged: 0/0
 11812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11817 ;;Total ram usage:        0 bytes
 11818 ;; Hardware stack levels used:    1
 11819 ;; Hardware stack levels required when called:    3
 11820 ;; This function calls:
 11821 ;;		Nothing
 11822 ;; This function is called by:
 11823 ;;		_dtoa
 11824 ;; This function uses a reentrant model
 11825 ;;
 11826                           
 11827                           	psect	text48
 11828  00479E                     __ptext48:
 11829                           	opt callstack 0
 11830  00479E                     ___aomod:
 11831                           	opt callstack 0
 11832                           
 11833                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 11834  00479E  52E6               	movf	postinc1,f,c
 11835  0047A0  52E6               	movf	postinc1,f,c
 11836                           
 11837                           ;stkvar	_sign @ sp[(-2)+0]
 11838                           
 11839                           ;incstack = 0
 11840  0047A2  0EFE               	movlw	-2
 11841  0047A4  6AE3               	clrf	plusw1,c
 11842                           
 11843                           ;stkvar	_dividend @ sp[(-2)+-8]
 11844  0047A6  0EFD               	movlw	-3
 11845  0047A8  AEE3               	btfss	plusw1,7,c
 11846  0047AA  D028               	goto	l5499
 11847                           
 11848                           ;stkvar	_dividend @ sp[(-2)+-8]
 11849                           ;stkvar	_dividend @ sp[(-2)+-8]
 11850  0047AC  0EF6               	movlw	-10
 11851  0047AE  6CE3               	negf	plusw1,c
 11852  0047B0  0EF7               	movlw	-9
 11853  0047B2  1EE3               	comf	plusw1,f,c
 11854  0047B4  0EF8               	movlw	-8
 11855  0047B6  1EE3               	comf	plusw1,f,c
 11856  0047B8  0EF9               	movlw	-7
 11857  0047BA  1EE3               	comf	plusw1,f,c
 11858  0047BC  0EFA               	movlw	-6
 11859  0047BE  1EE3               	comf	plusw1,f,c
 11860  0047C0  0EFB               	movlw	-5
 11861  0047C2  1EE3               	comf	plusw1,f,c
 11862  0047C4  0EFC               	movlw	-4
 11863  0047C6  1EE3               	comf	plusw1,f,c
 11864  0047C8  0EFD               	movlw	-3
 11865  0047CA  1EE3               	comf	plusw1,f,c
 11866  0047CC  E314               	bnc	u2710
 11867  0047CE  0EF7               	movlw	-9
 11868  0047D0  2AE3               	incf	plusw1,f,c
 11869  0047D2  E311               	bnc	u2710
 11870  0047D4  0EF8               	movlw	-8
 11871  0047D6  2AE3               	incf	plusw1,f,c
 11872  0047D8  E30E               	bnc	u2710
 11873  0047DA  0EF9               	movlw	-7
 11874  0047DC  2AE3               	incf	plusw1,f,c
 11875  0047DE  E30B               	bnc	u2710
 11876  0047E0  0EFA               	movlw	-6
 11877  0047E2  2AE3               	incf	plusw1,f,c
 11878  0047E4  E308               	bnc	u2710
 11879  0047E6  0EFB               	movlw	-5
 11880  0047E8  2AE3               	incf	plusw1,f,c
 11881  0047EA  E305               	bnc	u2710
 11882  0047EC  0EFC               	movlw	-4
 11883  0047EE  2AE3               	incf	plusw1,f,c
 11884  0047F0  E302               	bnc	u2710
 11885  0047F2  0EFD               	movlw	-3
 11886  0047F4  2AE3               	incf	plusw1,f,c
 11887  0047F6                     u2710:
 11888                           
 11889                           ;stkvar	_sign @ sp[(-2)+0]
 11890  0047F6  0EFE               	movlw	-2
 11891  0047F8  6AE3               	clrf	plusw1,c
 11892  0047FA  2AE3               	incf	plusw1,f,c
 11893  0047FC                     l5499:
 11894                           
 11895                           ;stkvar	_divisor @ sp[(-2)+-16]
 11896  0047FC  0EF5               	movlw	-11
 11897  0047FE  AEE3               	btfss	plusw1,7,c
 11898  004800  D025               	goto	u2730
 11899                           
 11900                           ;stkvar	_divisor @ sp[(-2)+-16]
 11901                           ;stkvar	_divisor @ sp[(-2)+-16]
 11902  004802  0EEE               	movlw	-18
 11903  004804  6CE3               	negf	plusw1,c
 11904  004806  0EEF               	movlw	-17
 11905  004808  1EE3               	comf	plusw1,f,c
 11906  00480A  0EF0               	movlw	-16
 11907  00480C  1EE3               	comf	plusw1,f,c
 11908  00480E  0EF1               	movlw	-15
 11909  004810  1EE3               	comf	plusw1,f,c
 11910  004812  0EF2               	movlw	-14
 11911  004814  1EE3               	comf	plusw1,f,c
 11912  004816  0EF3               	movlw	-13
 11913  004818  1EE3               	comf	plusw1,f,c
 11914  00481A  0EF4               	movlw	-12
 11915  00481C  1EE3               	comf	plusw1,f,c
 11916  00481E  0EF5               	movlw	-11
 11917  004820  1EE3               	comf	plusw1,f,c
 11918  004822  E314               	bnc	u2730
 11919  004824  0EEF               	movlw	-17
 11920  004826  2AE3               	incf	plusw1,f,c
 11921  004828  E311               	bnc	u2730
 11922  00482A  0EF0               	movlw	-16
 11923  00482C  2AE3               	incf	plusw1,f,c
 11924  00482E  E30E               	bnc	u2730
 11925  004830  0EF1               	movlw	-15
 11926  004832  2AE3               	incf	plusw1,f,c
 11927  004834  E30B               	bnc	u2730
 11928  004836  0EF2               	movlw	-14
 11929  004838  2AE3               	incf	plusw1,f,c
 11930  00483A  E308               	bnc	u2730
 11931  00483C  0EF3               	movlw	-13
 11932  00483E  2AE3               	incf	plusw1,f,c
 11933  004840  E305               	bnc	u2730
 11934  004842  0EF4               	movlw	-12
 11935  004844  2AE3               	incf	plusw1,f,c
 11936  004846  E302               	bnc	u2730
 11937  004848  0EF5               	movlw	-11
 11938  00484A  2AE3               	incf	plusw1,f,c
 11939  00484C                     u2730:
 11940                           
 11941                           ;stkvar	_divisor @ sp[(-2)+-16]
 11942  00484C  0EEE               	movlw	-18
 11943  00484E  50E3               	movf	plusw1,w,c
 11944  004850  E116               	bnz	u2740
 11945  004852  0EEF               	movlw	-17
 11946  004854  50E3               	movf	plusw1,w,c
 11947  004856  E113               	bnz	u2740
 11948  004858  0EF0               	movlw	-16
 11949  00485A  50E3               	movf	plusw1,w,c
 11950  00485C  E110               	bnz	u2740
 11951  00485E  0EF1               	movlw	-15
 11952  004860  50E3               	movf	plusw1,w,c
 11953  004862  E10D               	bnz	u2740
 11954  004864  0EF2               	movlw	-14
 11955  004866  50E3               	movf	plusw1,w,c
 11956  004868  E10A               	bnz	u2740
 11957  00486A  0EF3               	movlw	-13
 11958  00486C  50E3               	movf	plusw1,w,c
 11959  00486E  E107               	bnz	u2740
 11960  004870  0EF4               	movlw	-12
 11961  004872  50E3               	movf	plusw1,w,c
 11962  004874  E104               	bnz	u2740
 11963  004876  0EF5               	movlw	-11
 11964  004878  50E3               	movf	plusw1,w,c
 11965  00487A  B4D8               	btfsc	status,2,c
 11966  00487C  D075               	goto	u2770
 11967  00487E                     u2740:
 11968                           
 11969                           ;stkvar	_counter @ sp[(-2)+1]
 11970  00487E  0EFF               	movlw	-1
 11971  004880  6AE3               	clrf	plusw1,c
 11972  004882  D012               	goto	L26
 11973  004884                     l5507:
 11974                           
 11975                           ;stkvar	_divisor @ sp[(-2)+-16]
 11976  004884  90D8               	bcf	status,0,c
 11977  004886  0EEE               	movlw	-18
 11978  004888  36E3               	rlcf	plusw1,f,c
 11979  00488A  0EEF               	movlw	-17
 11980  00488C  36E3               	rlcf	plusw1,f,c
 11981  00488E  0EF0               	movlw	-16
 11982  004890  36E3               	rlcf	plusw1,f,c
 11983  004892  0EF1               	movlw	-15
 11984  004894  36E3               	rlcf	plusw1,f,c
 11985  004896  0EF2               	movlw	-14
 11986  004898  36E3               	rlcf	plusw1,f,c
 11987  00489A  0EF3               	movlw	-13
 11988  00489C  36E3               	rlcf	plusw1,f,c
 11989  00489E  0EF4               	movlw	-12
 11990  0048A0  36E3               	rlcf	plusw1,f,c
 11991  0048A2  0EF5               	movlw	-11
 11992  0048A4  36E3               	rlcf	plusw1,f,c
 11993                           
 11994                           ;stkvar	_counter @ sp[(-2)+1]
 11995  0048A6  0EFF               	movlw	-1
 11996  0048A8                     L26:
 11997  0048A8  2AE3               	incf	plusw1,f,c
 11998                           
 11999                           ;stkvar	_divisor @ sp[(-2)+-16]
 12000  0048AA  0EF5               	movlw	-11
 12001  0048AC  AEE3               	btfss	plusw1,7,c
 12002  0048AE  D7EA               	goto	l5507
 12003  0048B0                     u2750:
 12004                           
 12005                           ;stkvar	_divisor @ sp[(-2)+-16]
 12006                           ;stkvar	_dividend @ sp[(-2)+-8]
 12007  0048B0  50E1               	movf	fsr1l,w,c
 12008  0048B2  0FF6               	addlw	-10
 12009  0048B4  6ED9               	movwf	fsr2l,c
 12010  0048B6  50E2               	movf	fsr1h,w,c
 12011  0048B8  6EDA               	movwf	fsr2h,c
 12012  0048BA  0EFF               	movlw	255
 12013  0048BC  22DA               	addwfc	fsr2h,f,c
 12014  0048BE  0EEE               	movlw	-18
 12015  0048C0  50E3               	movf	plusw1,w,c
 12016  0048C2  5CDE               	subwf	postinc2,w,c
 12017  0048C4  0EEF               	movlw	-17
 12018  0048C6  50E3               	movf	plusw1,w,c
 12019  0048C8  58DE               	subwfb	postinc2,w,c
 12020  0048CA  0EF0               	movlw	-16
 12021  0048CC  50E3               	movf	plusw1,w,c
 12022  0048CE  58DE               	subwfb	postinc2,w,c
 12023  0048D0  0EF1               	movlw	-15
 12024  0048D2  50E3               	movf	plusw1,w,c
 12025  0048D4  58DE               	subwfb	postinc2,w,c
 12026  0048D6  0EF2               	movlw	-14
 12027  0048D8  50E3               	movf	plusw1,w,c
 12028  0048DA  58DE               	subwfb	postinc2,w,c
 12029  0048DC  0EF3               	movlw	-13
 12030  0048DE  50E3               	movf	plusw1,w,c
 12031  0048E0  58DE               	subwfb	postinc2,w,c
 12032  0048E2  0EF4               	movlw	-12
 12033  0048E4  50E3               	movf	plusw1,w,c
 12034  0048E6  58DE               	subwfb	postinc2,w,c
 12035  0048E8  0EF5               	movlw	-11
 12036  0048EA  50E3               	movf	plusw1,w,c
 12037  0048EC  58DE               	subwfb	postinc2,w,c
 12038  0048EE  A0D8               	btfss	status,0,c
 12039  0048F0  D01F               	goto	l5515
 12040                           
 12041                           ;stkvar	_divisor @ sp[(-2)+-16]
 12042                           ;stkvar	_dividend @ sp[(-2)+-8]
 12043  0048F2  50E1               	movf	fsr1l,w,c
 12044  0048F4  0FF6               	addlw	-10
 12045  0048F6  6ED9               	movwf	fsr2l,c
 12046  0048F8  50E2               	movf	fsr1h,w,c
 12047  0048FA  6EDA               	movwf	fsr2h,c
 12048  0048FC  0EFF               	movlw	255
 12049  0048FE  22DA               	addwfc	fsr2h,f,c
 12050  004900  0EEE               	movlw	-18
 12051  004902  50E3               	movf	plusw1,w,c
 12052  004904  5EDE               	subwf	postinc2,f,c
 12053  004906  0EEF               	movlw	-17
 12054  004908  50E3               	movf	plusw1,w,c
 12055  00490A  5ADE               	subwfb	postinc2,f,c
 12056  00490C  0EF0               	movlw	-16
 12057  00490E  50E3               	movf	plusw1,w,c
 12058  004910  5ADE               	subwfb	postinc2,f,c
 12059  004912  0EF1               	movlw	-15
 12060  004914  50E3               	movf	plusw1,w,c
 12061  004916  5ADE               	subwfb	postinc2,f,c
 12062  004918  0EF2               	movlw	-14
 12063  00491A  50E3               	movf	plusw1,w,c
 12064  00491C  5ADE               	subwfb	postinc2,f,c
 12065  00491E  0EF3               	movlw	-13
 12066  004920  50E3               	movf	plusw1,w,c
 12067  004922  5ADE               	subwfb	postinc2,f,c
 12068  004924  0EF4               	movlw	-12
 12069  004926  50E3               	movf	plusw1,w,c
 12070  004928  5ADE               	subwfb	postinc2,f,c
 12071  00492A  0EF5               	movlw	-11
 12072  00492C  50E3               	movf	plusw1,w,c
 12073  00492E  5ADE               	subwfb	postinc2,f,c
 12074  004930                     l5515:
 12075                           
 12076                           ;stkvar	_divisor @ sp[(-2)+-16]
 12077  004930  90D8               	bcf	status,0,c
 12078  004932  0EF5               	movlw	-11
 12079  004934  32E3               	rrcf	plusw1,f,c
 12080  004936  0EF4               	movlw	-12
 12081  004938  32E3               	rrcf	plusw1,f,c
 12082  00493A  0EF3               	movlw	-13
 12083  00493C  32E3               	rrcf	plusw1,f,c
 12084  00493E  0EF2               	movlw	-14
 12085  004940  32E3               	rrcf	plusw1,f,c
 12086  004942  0EF1               	movlw	-15
 12087  004944  32E3               	rrcf	plusw1,f,c
 12088  004946  0EF0               	movlw	-16
 12089  004948  32E3               	rrcf	plusw1,f,c
 12090  00494A  0EEF               	movlw	-17
 12091  00494C  32E3               	rrcf	plusw1,f,c
 12092  00494E  0EEE               	movlw	-18
 12093  004950  32E3               	rrcf	plusw1,f,c
 12094                           
 12095                           ;stkvar	_counter @ sp[(-2)+1]
 12096  004952  0EFF               	movlw	-1
 12097  004954  50E3               	movf	plusw1,w,c
 12098  004956  6E39               	movwf	btemp,c
 12099  004958  0E01               	movlw	1
 12100  00495A  5E39               	subwf	btemp,f,c
 12101  00495C  0EFF               	movlw	-1
 12102  00495E  0060  F0E7  FFE3   	movff	btemp,plusw1
 12103  004964  A4D8               	btfss	status,2,c
 12104  004966  D7A4               	goto	u2750
 12105  004968                     u2770:
 12106                           
 12107                           ;stkvar	_sign @ sp[(-2)+0]
 12108  004968  0EFE               	movlw	-2
 12109  00496A  50E3               	movf	plusw1,w,c
 12110  00496C  B4D8               	btfsc	status,2,c
 12111  00496E  D025               	goto	u2790
 12112                           
 12113                           ;stkvar	_dividend @ sp[(-2)+-8]
 12114                           ;stkvar	_dividend @ sp[(-2)+-8]
 12115  004970  0EF6               	movlw	-10
 12116  004972  6CE3               	negf	plusw1,c
 12117  004974  0EF7               	movlw	-9
 12118  004976  1EE3               	comf	plusw1,f,c
 12119  004978  0EF8               	movlw	-8
 12120  00497A  1EE3               	comf	plusw1,f,c
 12121  00497C  0EF9               	movlw	-7
 12122  00497E  1EE3               	comf	plusw1,f,c
 12123  004980  0EFA               	movlw	-6
 12124  004982  1EE3               	comf	plusw1,f,c
 12125  004984  0EFB               	movlw	-5
 12126  004986  1EE3               	comf	plusw1,f,c
 12127  004988  0EFC               	movlw	-4
 12128  00498A  1EE3               	comf	plusw1,f,c
 12129  00498C  0EFD               	movlw	-3
 12130  00498E  1EE3               	comf	plusw1,f,c
 12131  004990  E314               	bnc	u2790
 12132  004992  0EF7               	movlw	-9
 12133  004994  2AE3               	incf	plusw1,f,c
 12134  004996  E311               	bnc	u2790
 12135  004998  0EF8               	movlw	-8
 12136  00499A  2AE3               	incf	plusw1,f,c
 12137  00499C  E30E               	bnc	u2790
 12138  00499E  0EF9               	movlw	-7
 12139  0049A0  2AE3               	incf	plusw1,f,c
 12140  0049A2  E30B               	bnc	u2790
 12141  0049A4  0EFA               	movlw	-6
 12142  0049A6  2AE3               	incf	plusw1,f,c
 12143  0049A8  E308               	bnc	u2790
 12144  0049AA  0EFB               	movlw	-5
 12145  0049AC  2AE3               	incf	plusw1,f,c
 12146  0049AE  E305               	bnc	u2790
 12147  0049B0  0EFC               	movlw	-4
 12148  0049B2  2AE3               	incf	plusw1,f,c
 12149  0049B4  E302               	bnc	u2790
 12150  0049B6  0EFD               	movlw	-3
 12151  0049B8  2AE3               	incf	plusw1,f,c
 12152  0049BA                     u2790:
 12153                           
 12154                           ;stkvar	_dividend @ sp[(-2)+-8]
 12155  0049BA  0EF6               	movlw	246
 12156  0049BC  24E1               	addwf	fsr1l,w,c
 12157  0049BE  6ED9               	movwf	fsr2l,c
 12158  0049C0  0EFF               	movlw	255
 12159  0049C2  20E2               	addwfc	fsr1h,w,c
 12160  0049C4  6EDA               	movwf	fsr2h,c
 12161                           
 12162                           ;stkvar	?___aomod @ sp[(-2)+-8]
 12163  0049C6  0E08               	movlw	8
 12164  0049C8  6E39               	movwf	btemp,c
 12165  0049CA  0EF6               	movlw	-10
 12166  0049CC                     us280999:
 12167  0049CC  006F FF7B FFE3     	movff	postinc2,plusw1
 12168  0049D2  28E8               	incf	wreg,w,c
 12169  0049D4  2E39               	decfsz	btemp,f,c
 12170  0049D6  D7FA               	bra	us280999
 12171                           
 12172                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 12173  0049D8  52E5               	movf	postdec1,f,c
 12174  0049DA  52E5               	movf	postdec1,f,c
 12175  0049DC  0012               	return		;funcret
 12176  0049DE                     __end_of___aomod:
 12177                           	opt callstack 0
 12178                           
 12179 ;; *************** function ___aodiv *****************
 12180 ;; Defined at:
 12181 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 12182 ;; Parameters:    Size  Location     Type
 12183 ;;  dividend        8  [STACK] long long 
 12184 ;;  divisor         8  [STACK] long long 
 12185 ;; Auto vars:     Size  Location     Type
 12186 ;;  quotient        8  [STACK] long long 
 12187 ;;  sign            1  [STACK] unsigned char 
 12188 ;;  counter         1  [STACK] unsigned char 
 12189 ;; Return value:  Size  Location     Type
 12190 ;;                  8  [STACK] long long 
 12191 ;; Registers used:
 12192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 12193 ;; Tracked objects:
 12194 ;;		On entry : 0/1
 12195 ;;		On exit  : 0/0
 12196 ;;		Unchanged: 0/0
 12197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12202 ;;Total ram usage:        0 bytes
 12203 ;; Hardware stack levels used:    1
 12204 ;; Hardware stack levels required when called:    3
 12205 ;; This function calls:
 12206 ;;		Nothing
 12207 ;; This function is called by:
 12208 ;;		_dtoa
 12209 ;; This function uses a reentrant model
 12210 ;;
 12211                           
 12212                           	psect	text49
 12213  004070                     __ptext49:
 12214                           	opt callstack 0
 12215  004070                     ___aodiv:
 12216                           	opt callstack 0
 12217                           
 12218                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 12219  004070  0E0A               	movlw	10
 12220  004072  26E1               	addwf	fsr1l,f,c
 12221  004074  0E00               	movlw	0
 12222  004076  22E2               	addwfc	fsr1h,f,c
 12223                           
 12224                           ;stkvar	_sign @ sp[(-10)+8]
 12225                           
 12226                           ;incstack = 0
 12227  004078  0EFE               	movlw	-2
 12228  00407A  6AE3               	clrf	plusw1,c
 12229                           
 12230                           ;stkvar	_divisor @ sp[(-10)+-16]
 12231  00407C  0EED               	movlw	-19
 12232  00407E  AEE3               	btfss	plusw1,7,c
 12233  004080  D028               	goto	l5455
 12234                           
 12235                           ;stkvar	_divisor @ sp[(-10)+-16]
 12236                           ;stkvar	_divisor @ sp[(-10)+-16]
 12237  004082  0EE6               	movlw	-26
 12238  004084  6CE3               	negf	plusw1,c
 12239  004086  0EE7               	movlw	-25
 12240  004088  1EE3               	comf	plusw1,f,c
 12241  00408A  0EE8               	movlw	-24
 12242  00408C  1EE3               	comf	plusw1,f,c
 12243  00408E  0EE9               	movlw	-23
 12244  004090  1EE3               	comf	plusw1,f,c
 12245  004092  0EEA               	movlw	-22
 12246  004094  1EE3               	comf	plusw1,f,c
 12247  004096  0EEB               	movlw	-21
 12248  004098  1EE3               	comf	plusw1,f,c
 12249  00409A  0EEC               	movlw	-20
 12250  00409C  1EE3               	comf	plusw1,f,c
 12251  00409E  0EED               	movlw	-19
 12252  0040A0  1EE3               	comf	plusw1,f,c
 12253  0040A2  E314               	bnc	u2590
 12254  0040A4  0EE7               	movlw	-25
 12255  0040A6  2AE3               	incf	plusw1,f,c
 12256  0040A8  E311               	bnc	u2590
 12257  0040AA  0EE8               	movlw	-24
 12258  0040AC  2AE3               	incf	plusw1,f,c
 12259  0040AE  E30E               	bnc	u2590
 12260  0040B0  0EE9               	movlw	-23
 12261  0040B2  2AE3               	incf	plusw1,f,c
 12262  0040B4  E30B               	bnc	u2590
 12263  0040B6  0EEA               	movlw	-22
 12264  0040B8  2AE3               	incf	plusw1,f,c
 12265  0040BA  E308               	bnc	u2590
 12266  0040BC  0EEB               	movlw	-21
 12267  0040BE  2AE3               	incf	plusw1,f,c
 12268  0040C0  E305               	bnc	u2590
 12269  0040C2  0EEC               	movlw	-20
 12270  0040C4  2AE3               	incf	plusw1,f,c
 12271  0040C6  E302               	bnc	u2590
 12272  0040C8  0EED               	movlw	-19
 12273  0040CA  2AE3               	incf	plusw1,f,c
 12274  0040CC                     u2590:
 12275                           
 12276                           ;stkvar	_sign @ sp[(-10)+8]
 12277  0040CC  0EFE               	movlw	-2
 12278  0040CE  6AE3               	clrf	plusw1,c
 12279  0040D0  2AE3               	incf	plusw1,f,c
 12280  0040D2                     l5455:
 12281                           
 12282                           ;stkvar	_dividend @ sp[(-10)+-8]
 12283  0040D2  0EF5               	movlw	-11
 12284  0040D4  AEE3               	btfss	plusw1,7,c
 12285  0040D6  D027               	goto	l5461
 12286                           
 12287                           ;stkvar	_dividend @ sp[(-10)+-8]
 12288                           ;stkvar	_dividend @ sp[(-10)+-8]
 12289  0040D8  0EEE               	movlw	-18
 12290  0040DA  6CE3               	negf	plusw1,c
 12291  0040DC  0EEF               	movlw	-17
 12292  0040DE  1EE3               	comf	plusw1,f,c
 12293  0040E0  0EF0               	movlw	-16
 12294  0040E2  1EE3               	comf	plusw1,f,c
 12295  0040E4  0EF1               	movlw	-15
 12296  0040E6  1EE3               	comf	plusw1,f,c
 12297  0040E8  0EF2               	movlw	-14
 12298  0040EA  1EE3               	comf	plusw1,f,c
 12299  0040EC  0EF3               	movlw	-13
 12300  0040EE  1EE3               	comf	plusw1,f,c
 12301  0040F0  0EF4               	movlw	-12
 12302  0040F2  1EE3               	comf	plusw1,f,c
 12303  0040F4  0EF5               	movlw	-11
 12304  0040F6  1EE3               	comf	plusw1,f,c
 12305  0040F8  E314               	bnc	u2610
 12306  0040FA  0EEF               	movlw	-17
 12307  0040FC  2AE3               	incf	plusw1,f,c
 12308  0040FE  E311               	bnc	u2610
 12309  004100  0EF0               	movlw	-16
 12310  004102  2AE3               	incf	plusw1,f,c
 12311  004104  E30E               	bnc	u2610
 12312  004106  0EF1               	movlw	-15
 12313  004108  2AE3               	incf	plusw1,f,c
 12314  00410A  E30B               	bnc	u2610
 12315  00410C  0EF2               	movlw	-14
 12316  00410E  2AE3               	incf	plusw1,f,c
 12317  004110  E308               	bnc	u2610
 12318  004112  0EF3               	movlw	-13
 12319  004114  2AE3               	incf	plusw1,f,c
 12320  004116  E305               	bnc	u2610
 12321  004118  0EF4               	movlw	-12
 12322  00411A  2AE3               	incf	plusw1,f,c
 12323  00411C  E302               	bnc	u2610
 12324  00411E  0EF5               	movlw	-11
 12325  004120  2AE3               	incf	plusw1,f,c
 12326  004122                     u2610:
 12327                           
 12328                           ;stkvar	_sign @ sp[(-10)+8]
 12329  004122  0EFE               	movlw	-2
 12330  004124  70E3               	btg	plusw1,0,c
 12331  004126                     l5461:
 12332                           
 12333                           ;stkvar	_quotient @ sp[(-10)+0]
 12334  004126  0E07               	movlw	7
 12335  004128  6E39               	movwf	btemp,c
 12336  00412A  0EF6               	movlw	-10
 12337  00412C                     u2621:
 12338  00412C  6AE3               	clrf	plusw1,c
 12339  00412E  2AE8               	incf	wreg,f,c
 12340  004130  0639               	decf	btemp,f,c
 12341  004132  E2FC               	bc	u2621
 12342                           
 12343                           ;stkvar	_divisor @ sp[(-10)+-16]
 12344  004134  0EE6               	movlw	-26
 12345  004136  50E3               	movf	plusw1,w,c
 12346  004138  E116               	bnz	u2630
 12347  00413A  0EE7               	movlw	-25
 12348  00413C  50E3               	movf	plusw1,w,c
 12349  00413E  E113               	bnz	u2630
 12350  004140  0EE8               	movlw	-24
 12351  004142  50E3               	movf	plusw1,w,c
 12352  004144  E110               	bnz	u2630
 12353  004146  0EE9               	movlw	-23
 12354  004148  50E3               	movf	plusw1,w,c
 12355  00414A  E10D               	bnz	u2630
 12356  00414C  0EEA               	movlw	-22
 12357  00414E  50E3               	movf	plusw1,w,c
 12358  004150  E10A               	bnz	u2630
 12359  004152  0EEB               	movlw	-21
 12360  004154  50E3               	movf	plusw1,w,c
 12361  004156  E107               	bnz	u2630
 12362  004158  0EEC               	movlw	-20
 12363  00415A  50E3               	movf	plusw1,w,c
 12364  00415C  E104               	bnz	u2630
 12365  00415E  0EED               	movlw	-19
 12366  004160  50E3               	movf	plusw1,w,c
 12367  004162  B4D8               	btfsc	status,2,c
 12368  004164  D088               	goto	u2660
 12369  004166                     u2630:
 12370                           
 12371                           ;stkvar	_counter @ sp[(-10)+9]
 12372  004166  0EFF               	movlw	-1
 12373  004168  6AE3               	clrf	plusw1,c
 12374  00416A  D012               	goto	L27
 12375  00416C                     l5467:
 12376                           
 12377                           ;stkvar	_divisor @ sp[(-10)+-16]
 12378  00416C  90D8               	bcf	status,0,c
 12379  00416E  0EE6               	movlw	-26
 12380  004170  36E3               	rlcf	plusw1,f,c
 12381  004172  0EE7               	movlw	-25
 12382  004174  36E3               	rlcf	plusw1,f,c
 12383  004176  0EE8               	movlw	-24
 12384  004178  36E3               	rlcf	plusw1,f,c
 12385  00417A  0EE9               	movlw	-23
 12386  00417C  36E3               	rlcf	plusw1,f,c
 12387  00417E  0EEA               	movlw	-22
 12388  004180  36E3               	rlcf	plusw1,f,c
 12389  004182  0EEB               	movlw	-21
 12390  004184  36E3               	rlcf	plusw1,f,c
 12391  004186  0EEC               	movlw	-20
 12392  004188  36E3               	rlcf	plusw1,f,c
 12393  00418A  0EED               	movlw	-19
 12394  00418C  36E3               	rlcf	plusw1,f,c
 12395                           
 12396                           ;stkvar	_counter @ sp[(-10)+9]
 12397  00418E  0EFF               	movlw	-1
 12398  004190                     L27:
 12399  004190  2AE3               	incf	plusw1,f,c
 12400                           
 12401                           ;stkvar	_divisor @ sp[(-10)+-16]
 12402  004192  0EED               	movlw	-19
 12403  004194  AEE3               	btfss	plusw1,7,c
 12404  004196  D7EA               	goto	l5467
 12405  004198                     u2640:
 12406                           
 12407                           ;stkvar	_quotient @ sp[(-10)+0]
 12408  004198  90D8               	bcf	status,0,c
 12409  00419A  0EF6               	movlw	-10
 12410  00419C  36E3               	rlcf	plusw1,f,c
 12411  00419E  0EF7               	movlw	-9
 12412  0041A0  36E3               	rlcf	plusw1,f,c
 12413  0041A2  0EF8               	movlw	-8
 12414  0041A4  36E3               	rlcf	plusw1,f,c
 12415  0041A6  0EF9               	movlw	-7
 12416  0041A8  36E3               	rlcf	plusw1,f,c
 12417  0041AA  0EFA               	movlw	-6
 12418  0041AC  36E3               	rlcf	plusw1,f,c
 12419  0041AE  0EFB               	movlw	-5
 12420  0041B0  36E3               	rlcf	plusw1,f,c
 12421  0041B2  0EFC               	movlw	-4
 12422  0041B4  36E3               	rlcf	plusw1,f,c
 12423  0041B6  0EFD               	movlw	-3
 12424  0041B8  36E3               	rlcf	plusw1,f,c
 12425                           
 12426                           ;stkvar	_divisor @ sp[(-10)+-16]
 12427                           ;stkvar	_dividend @ sp[(-10)+-8]
 12428  0041BA  50E1               	movf	fsr1l,w,c
 12429  0041BC  0FEE               	addlw	-18
 12430  0041BE  6ED9               	movwf	fsr2l,c
 12431  0041C0  50E2               	movf	fsr1h,w,c
 12432  0041C2  6EDA               	movwf	fsr2h,c
 12433  0041C4  0EFF               	movlw	255
 12434  0041C6  22DA               	addwfc	fsr2h,f,c
 12435  0041C8  0EE6               	movlw	-26
 12436  0041CA  50E3               	movf	plusw1,w,c
 12437  0041CC  5CDE               	subwf	postinc2,w,c
 12438  0041CE  0EE7               	movlw	-25
 12439  0041D0  50E3               	movf	plusw1,w,c
 12440  0041D2  58DE               	subwfb	postinc2,w,c
 12441  0041D4  0EE8               	movlw	-24
 12442  0041D6  50E3               	movf	plusw1,w,c
 12443  0041D8  58DE               	subwfb	postinc2,w,c
 12444  0041DA  0EE9               	movlw	-23
 12445  0041DC  50E3               	movf	plusw1,w,c
 12446  0041DE  58DE               	subwfb	postinc2,w,c
 12447  0041E0  0EEA               	movlw	-22
 12448  0041E2  50E3               	movf	plusw1,w,c
 12449  0041E4  58DE               	subwfb	postinc2,w,c
 12450  0041E6  0EEB               	movlw	-21
 12451  0041E8  50E3               	movf	plusw1,w,c
 12452  0041EA  58DE               	subwfb	postinc2,w,c
 12453  0041EC  0EEC               	movlw	-20
 12454  0041EE  50E3               	movf	plusw1,w,c
 12455  0041F0  58DE               	subwfb	postinc2,w,c
 12456  0041F2  0EED               	movlw	-19
 12457  0041F4  50E3               	movf	plusw1,w,c
 12458  0041F6  58DE               	subwfb	postinc2,w,c
 12459  0041F8  A0D8               	btfss	status,0,c
 12460  0041FA  D021               	goto	l5479
 12461                           
 12462                           ;stkvar	_divisor @ sp[(-10)+-16]
 12463                           ;stkvar	_dividend @ sp[(-10)+-8]
 12464  0041FC  50E1               	movf	fsr1l,w,c
 12465  0041FE  0FEE               	addlw	-18
 12466  004200  6ED9               	movwf	fsr2l,c
 12467  004202  50E2               	movf	fsr1h,w,c
 12468  004204  6EDA               	movwf	fsr2h,c
 12469  004206  0EFF               	movlw	255
 12470  004208  22DA               	addwfc	fsr2h,f,c
 12471  00420A  0EE6               	movlw	-26
 12472  00420C  50E3               	movf	plusw1,w,c
 12473  00420E  5EDE               	subwf	postinc2,f,c
 12474  004210  0EE7               	movlw	-25
 12475  004212  50E3               	movf	plusw1,w,c
 12476  004214  5ADE               	subwfb	postinc2,f,c
 12477  004216  0EE8               	movlw	-24
 12478  004218  50E3               	movf	plusw1,w,c
 12479  00421A  5ADE               	subwfb	postinc2,f,c
 12480  00421C  0EE9               	movlw	-23
 12481  00421E  50E3               	movf	plusw1,w,c
 12482  004220  5ADE               	subwfb	postinc2,f,c
 12483  004222  0EEA               	movlw	-22
 12484  004224  50E3               	movf	plusw1,w,c
 12485  004226  5ADE               	subwfb	postinc2,f,c
 12486  004228  0EEB               	movlw	-21
 12487  00422A  50E3               	movf	plusw1,w,c
 12488  00422C  5ADE               	subwfb	postinc2,f,c
 12489  00422E  0EEC               	movlw	-20
 12490  004230  50E3               	movf	plusw1,w,c
 12491  004232  5ADE               	subwfb	postinc2,f,c
 12492  004234  0EED               	movlw	-19
 12493  004236  50E3               	movf	plusw1,w,c
 12494  004238  5ADE               	subwfb	postinc2,f,c
 12495                           
 12496                           ;stkvar	_quotient @ sp[(-10)+0]
 12497  00423A  0EF6               	movlw	-10
 12498  00423C  80E3               	bsf	plusw1,0,c
 12499  00423E                     l5479:
 12500                           
 12501                           ;stkvar	_divisor @ sp[(-10)+-16]
 12502  00423E  90D8               	bcf	status,0,c
 12503  004240  0EED               	movlw	-19
 12504  004242  32E3               	rrcf	plusw1,f,c
 12505  004244  0EEC               	movlw	-20
 12506  004246  32E3               	rrcf	plusw1,f,c
 12507  004248  0EEB               	movlw	-21
 12508  00424A  32E3               	rrcf	plusw1,f,c
 12509  00424C  0EEA               	movlw	-22
 12510  00424E  32E3               	rrcf	plusw1,f,c
 12511  004250  0EE9               	movlw	-23
 12512  004252  32E3               	rrcf	plusw1,f,c
 12513  004254  0EE8               	movlw	-24
 12514  004256  32E3               	rrcf	plusw1,f,c
 12515  004258  0EE7               	movlw	-25
 12516  00425A  32E3               	rrcf	plusw1,f,c
 12517  00425C  0EE6               	movlw	-26
 12518  00425E  32E3               	rrcf	plusw1,f,c
 12519                           
 12520                           ;stkvar	_counter @ sp[(-10)+9]
 12521  004260  0EFF               	movlw	-1
 12522  004262  50E3               	movf	plusw1,w,c
 12523  004264  6E39               	movwf	btemp,c
 12524  004266  0E01               	movlw	1
 12525  004268  5E39               	subwf	btemp,f,c
 12526  00426A  0EFF               	movlw	-1
 12527  00426C  0060  F0E7  FFE3   	movff	btemp,plusw1
 12528  004272  A4D8               	btfss	status,2,c
 12529  004274  D791               	goto	u2640
 12530  004276                     u2660:
 12531                           
 12532                           ;stkvar	_sign @ sp[(-10)+8]
 12533  004276  0EFE               	movlw	-2
 12534  004278  50E3               	movf	plusw1,w,c
 12535  00427A  B4D8               	btfsc	status,2,c
 12536  00427C  D025               	goto	u2680
 12537                           
 12538                           ;stkvar	_quotient @ sp[(-10)+0]
 12539                           ;stkvar	_quotient @ sp[(-10)+0]
 12540  00427E  0EF6               	movlw	-10
 12541  004280  6CE3               	negf	plusw1,c
 12542  004282  0EF7               	movlw	-9
 12543  004284  1EE3               	comf	plusw1,f,c
 12544  004286  0EF8               	movlw	-8
 12545  004288  1EE3               	comf	plusw1,f,c
 12546  00428A  0EF9               	movlw	-7
 12547  00428C  1EE3               	comf	plusw1,f,c
 12548  00428E  0EFA               	movlw	-6
 12549  004290  1EE3               	comf	plusw1,f,c
 12550  004292  0EFB               	movlw	-5
 12551  004294  1EE3               	comf	plusw1,f,c
 12552  004296  0EFC               	movlw	-4
 12553  004298  1EE3               	comf	plusw1,f,c
 12554  00429A  0EFD               	movlw	-3
 12555  00429C  1EE3               	comf	plusw1,f,c
 12556  00429E  E314               	bnc	u2680
 12557  0042A0  0EF7               	movlw	-9
 12558  0042A2  2AE3               	incf	plusw1,f,c
 12559  0042A4  E311               	bnc	u2680
 12560  0042A6  0EF8               	movlw	-8
 12561  0042A8  2AE3               	incf	plusw1,f,c
 12562  0042AA  E30E               	bnc	u2680
 12563  0042AC  0EF9               	movlw	-7
 12564  0042AE  2AE3               	incf	plusw1,f,c
 12565  0042B0  E30B               	bnc	u2680
 12566  0042B2  0EFA               	movlw	-6
 12567  0042B4  2AE3               	incf	plusw1,f,c
 12568  0042B6  E308               	bnc	u2680
 12569  0042B8  0EFB               	movlw	-5
 12570  0042BA  2AE3               	incf	plusw1,f,c
 12571  0042BC  E305               	bnc	u2680
 12572  0042BE  0EFC               	movlw	-4
 12573  0042C0  2AE3               	incf	plusw1,f,c
 12574  0042C2  E302               	bnc	u2680
 12575  0042C4  0EFD               	movlw	-3
 12576  0042C6  2AE3               	incf	plusw1,f,c
 12577  0042C8                     u2680:
 12578                           
 12579                           ;stkvar	_quotient @ sp[(-10)+0]
 12580  0042C8  0EF6               	movlw	246
 12581  0042CA  24E1               	addwf	fsr1l,w,c
 12582  0042CC  6ED9               	movwf	fsr2l,c
 12583  0042CE  0EFF               	movlw	255
 12584  0042D0  20E2               	addwfc	fsr1h,w,c
 12585  0042D2  6EDA               	movwf	fsr2h,c
 12586                           
 12587                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 12588  0042D4  0E08               	movlw	8
 12589  0042D6  6E39               	movwf	btemp,c
 12590  0042D8  0EEE               	movlw	-18
 12591  0042DA                     us269999:
 12592  0042DA  006F FF7B FFE3     	movff	postinc2,plusw1
 12593  0042E0  28E8               	incf	wreg,w,c
 12594  0042E2  2E39               	decfsz	btemp,f,c
 12595  0042E4  D7FA               	bra	us269999
 12596                           
 12597                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 12598  0042E6  0EF6               	movlw	246
 12599  0042E8  26E1               	addwf	fsr1l,f,c
 12600  0042EA  0EFF               	movlw	255
 12601  0042EC  22E2               	addwfc	fsr1h,f,c
 12602  0042EE  0012               	return		;funcret
 12603  0042F0                     __end_of___aodiv:
 12604                           	opt callstack 0
 12605                           
 12606 ;; *************** function _ctoa *****************
 12607 ;; Defined at:
 12608 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 12609 ;; Parameters:    Size  Location     Type
 12610 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12611 ;;		 -> f(5), NULL(0), 
 12612 ;;  c               1  [STACK] unsigned char 
 12613 ;; Auto vars:     Size  Location     Type
 12614 ;;  w               2  [STACK] int 
 12615 ;;  l               2    0        int 
 12616 ;; Return value:  Size  Location     Type
 12617 ;;                  2  [STACK] int 
 12618 ;; Registers used:
 12619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12620 ;; Tracked objects:
 12621 ;;		On entry : 0/0
 12622 ;;		On exit  : 0/0
 12623 ;;		Unchanged: 0/0
 12624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12629 ;;Total ram usage:        0 bytes
 12630 ;; Hardware stack levels used:    1
 12631 ;; Hardware stack levels required when called:    8
 12632 ;; This function calls:
 12633 ;;		_pad
 12634 ;; This function is called by:
 12635 ;;		_vfpfcnvrt
 12636 ;; This function uses a reentrant model
 12637 ;;
 12638                           
 12639                           	psect	text50
 12640  005994                     __ptext50:
 12641                           	opt callstack 0
 12642  005994                     _ctoa:
 12643                           	opt callstack 0
 12644                           
 12645                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12646  005994  52E6               	movf	postinc1,f,c
 12647  005996  52E6               	movf	postinc1,f,c
 12648                           
 12649                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 12650                           
 12651                           ;incstack = 0
 12652  005998  501D               	movf	_width,w,c
 12653  00599A  101E               	iorwf	_width+1,w,c
 12654  00599C  A4D8               	btfss	status,2,c
 12655  00599E  D009               	goto	l8247
 12656                           
 12657                           ;stkvar	_w @ sp[(-2)+0]
 12658  0059A0  0EFE               	movlw	-2
 12659  0059A2  0060  F077  FFE3   	movff	_width,plusw1
 12660  0059A8  0EFF               	movlw	-1
 12661  0059AA  0060  F07B  FFE3   	movff	_width+1,plusw1
 12662  0059B0  D016               	goto	l8249
 12663  0059B2                     l8247:
 12664  0059B2  0EFF               	movlw	255
 12665  0059B4  6E43               	movwf	btemp+10,c
 12666  0059B6  0EFF               	movlw	255
 12667  0059B8  6E44               	movwf	btemp+11,c
 12668  0059BA  0060  F074  F041   	movff	_width,btemp+8
 12669  0059C0  0060  F078  F042   	movff	_width+1,btemp+9
 12670  0059C6  5043               	movf	btemp+10,w,c
 12671  0059C8  2641               	addwf	btemp+8,f,c
 12672  0059CA  5044               	movf	btemp+11,w,c
 12673  0059CC  2242               	addwfc	btemp+9,f,c
 12674                           
 12675                           ;stkvar	_w @ sp[(-2)+0]
 12676  0059CE  0EFE               	movlw	-2
 12677  0059D0  0060  F107  FFE3   	movff	btemp+8,plusw1
 12678  0059D6  0EFF               	movlw	-1
 12679  0059D8  0060  F10B  FFE3   	movff	btemp+9,plusw1
 12680  0059DE                     l8249:
 12681                           
 12682                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 12683                           ;stkvar	_c @ sp[(-2)+-3]
 12684  0059DE  0EFB               	movlw	-5
 12685  0059E0  006F FF8C  F1DD    	movff	plusw1,_dbuf
 12686                           
 12687                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 12688  0059E6  0101               	movlb	1	; () banked
 12689  0059E8  6BDE               	clrf	(_dbuf+1)& (0+255),b
 12690                           
 12691                           ; BSR set to: 1
 12692                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 12693                           ;stkvar	_w @ sp[(-2)+0]
 12694  0059EA  0EFE               	movlw	-2
 12695  0059EC  006F FF8F FFE6     	movff	plusw1,postinc1
 12696  0059F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12697  0059F8  0EDD               	movlw	low _dbuf
 12698  0059FA  6EE6               	movwf	postinc1,c
 12699  0059FC  0E01               	movlw	high _dbuf
 12700  0059FE  6EE6               	movwf	postinc1,c
 12701                           
 12702                           ;stkvar	_fp @ sp[(-6)+-2]
 12703  005A00  0EF8               	movlw	-8
 12704  005A02  006F FF8F FFE6     	movff	plusw1,postinc1
 12705  005A08  006F FF8F FFE6     	movff	plusw1,postinc1
 12706  005A0E  ECF3  F026         	call	_pad	;wreg free
 12707                           
 12708                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 12709  005A12  0EFB               	movlw	251
 12710  005A14  26E1               	addwf	fsr1l,f,c
 12711  005A16  0EFF               	movlw	255
 12712  005A18  22E2               	addwfc	fsr1h,f,c
 12713  005A1A  0012               	return		;funcret
 12714  005A1C                     __end_of_ctoa:
 12715                           	opt callstack 0
 12716                           
 12717 ;; *************** function _pad *****************
 12718 ;; Defined at:
 12719 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 12720 ;; Parameters:    Size  Location     Type
 12721 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12722 ;;		 -> f(5), NULL(0), 
 12723 ;;  buf             2  [STACK] PTR unsigned char 
 12724 ;;		 -> dbuf(32), 
 12725 ;;  p               2  [STACK] int 
 12726 ;; Auto vars:     Size  Location     Type
 12727 ;;  w               2  [STACK] int 
 12728 ;;  i               2  [STACK] int 
 12729 ;; Return value:  Size  Location     Type
 12730 ;;                  2  [STACK] int 
 12731 ;; Registers used:
 12732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12733 ;; Tracked objects:
 12734 ;;		On entry : 0/1
 12735 ;;		On exit  : 0/0
 12736 ;;		Unchanged: 0/0
 12737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12742 ;;Total ram usage:        0 bytes
 12743 ;; Hardware stack levels used:    1
 12744 ;; Hardware stack levels required when called:    7
 12745 ;; This function calls:
 12746 ;;		_fputc
 12747 ;;		_fputs
 12748 ;;		_strlen
 12749 ;; This function is called by:
 12750 ;;		_ctoa
 12751 ;;		_dtoa
 12752 ;; This function uses a reentrant model
 12753 ;;
 12754                           
 12755                           	psect	text51
 12756  004DE6                     __ptext51:
 12757                           	opt callstack 0
 12758  004DE6                     _pad:
 12759                           	opt callstack 0
 12760                           
 12761                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12762  004DE6  52E6               	movf	postinc1,f,c
 12763  004DE8  52E6               	movf	postinc1,f,c
 12764  004DEA  52E6               	movf	postinc1,f,c
 12765  004DEC  52E6               	movf	postinc1,f,c
 12766                           
 12767                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 12768                           
 12769                           ;incstack = 0
 12770  004DEE  A021               	btfss	_flags,0,c
 12771  004DF0  D010               	goto	l8225
 12772                           
 12773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 12774                           ;stkvar	_fp @ sp[(-4)+-2]
 12775  004DF2  0EFA               	movlw	-6
 12776  004DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12777  004DFA  006F FF8F FFE6     	movff	plusw1,postinc1
 12778                           
 12779                           ;stkvar	_buf @ sp[(-6)+-4]
 12780  004E00  0EF6               	movlw	-10
 12781  004E02  006F FF8F FFE6     	movff	plusw1,postinc1
 12782  004E08  006F FF8F FFE6     	movff	plusw1,postinc1
 12783  004E0E  EC35  F02C         	call	_fputs	;wreg free
 12784  004E12                     l8225:
 12785                           
 12786                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 12787                           ;stkvar	_p @ sp[(-4)+-6]
 12788  004E12  0EF7               	movlw	-9
 12789  004E14  BEE3               	btfsc	plusw1,7,c
 12790  004E16  D011               	goto	l8229
 12791                           
 12792                           ;stkvar	_p @ sp[(-4)+-6]
 12793                           ;stkvar	_w @ sp[(-4)+0]
 12794  004E18  0EF6               	movlw	-10
 12795  004E1A  006F FF8C  F039    	movff	plusw1,btemp
 12796  004E20  0EFC               	movlw	-4
 12797  004E22  0060  F0E7  FFE3   	movff	btemp,plusw1
 12798  004E28  0EF7               	movlw	-9
 12799  004E2A  006F FF8C  F039    	movff	plusw1,btemp
 12800  004E30  0EFD               	movlw	-3
 12801  004E32  0060  F0E7  FFE3   	movff	btemp,plusw1
 12802  004E38  D004               	goto	l1855
 12803  004E3A                     l8229:
 12804                           
 12805                           ;stkvar	_w @ sp[(-4)+0]
 12806  004E3A  0EFC               	movlw	-4
 12807  004E3C  6AE3               	clrf	plusw1,c
 12808  004E3E  0EFD               	movlw	-3
 12809  004E40  6AE3               	clrf	plusw1,c
 12810  004E42                     l1855:
 12811                           
 12812                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 12813                           ;stkvar	_i @ sp[(-4)+2]
 12814  004E42  0EFE               	movlw	-2
 12815  004E44  6AE3               	clrf	plusw1,c
 12816  004E46  0EFF               	movlw	-1
 12817  004E48  6AE3               	clrf	plusw1,c
 12818                           
 12819                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 12820  004E4A  D01E               	goto	l8235
 12821  004E4C                     l8231:
 12822                           
 12823                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 12824                           ;stkvar	_fp @ sp[(-4)+-2]
 12825  004E4C  0EFA               	movlw	-6
 12826  004E4E  006F FF8F FFE6     	movff	plusw1,postinc1
 12827  004E54  006F FF8F FFE6     	movff	plusw1,postinc1
 12828  004E5A  0E20               	movlw	32
 12829  004E5C  6EE6               	movwf	postinc1,c
 12830  004E5E  0E00               	movlw	0
 12831  004E60  6EE6               	movwf	postinc1,c
 12832  004E62  EC7D  F027         	call	_fputc	;wreg free
 12833                           
 12834                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 12835                           ;stkvar	_i @ sp[(-4)+2]
 12836  004E66  0EFE               	movlw	-2
 12837  004E68  50E3               	movf	plusw1,w,c
 12838  004E6A  0F01               	addlw	1
 12839  004E6C  6E39               	movwf	btemp,c
 12840  004E6E  0EFE               	movlw	-2
 12841  004E70  0060  F0E7  FFE3   	movff	btemp,plusw1
 12842  004E76  6A39               	clrf	btemp,c
 12843  004E78  0EFF               	movlw	-1
 12844  004E7A  50E3               	movf	plusw1,w,c
 12845  004E7C  2039               	addwfc	btemp,w,c
 12846  004E7E  6E39               	movwf	btemp,c
 12847  004E80  0EFF               	movlw	-1
 12848  004E82  0060  F0E7  FFE3   	movff	btemp,plusw1
 12849  004E88                     l8235:
 12850                           
 12851                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 12852                           ;stkvar	_w @ sp[(-4)+0]
 12853                           ;stkvar	_i @ sp[(-4)+2]
 12854  004E88  50E1               	movf	fsr1l,w,c
 12855  004E8A  0FFE               	addlw	-2
 12856  004E8C  6ED9               	movwf	fsr2l,c
 12857  004E8E  50E2               	movf	fsr1h,w,c
 12858  004E90  6EDA               	movwf	fsr2h,c
 12859  004E92  0EFF               	movlw	255
 12860  004E94  22DA               	addwfc	fsr2h,f,c
 12861  004E96  0EFC               	movlw	-4
 12862  004E98  50E3               	movf	plusw1,w,c
 12863  004E9A  5CDE               	subwf	postinc2,w,c
 12864  004E9C  50DE               	movf	postinc2,w,c
 12865  004E9E  0A80               	xorlw	128
 12866  004EA0  6E39               	movwf	btemp,c
 12867  004EA2  0EFD               	movlw	-3
 12868  004EA4  50E3               	movf	plusw1,w,c
 12869  004EA6  0A80               	xorlw	128
 12870  004EA8  5839               	subwfb	btemp,w,c
 12871  004EAA  A0D8               	btfss	status,0,c
 12872  004EAC  D7CF               	goto	l8231
 12873                           
 12874                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 12875  004EAE  B021               	btfsc	_flags,0,c
 12876  004EB0  D010               	goto	l8239
 12877                           
 12878                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 12879                           ;stkvar	_fp @ sp[(-4)+-2]
 12880  004EB2  0EFA               	movlw	-6
 12881  004EB4  006F FF8F FFE6     	movff	plusw1,postinc1
 12882  004EBA  006F FF8F FFE6     	movff	plusw1,postinc1
 12883                           
 12884                           ;stkvar	_buf @ sp[(-6)+-4]
 12885  004EC0  0EF6               	movlw	-10
 12886  004EC2  006F FF8F FFE6     	movff	plusw1,postinc1
 12887  004EC8  006F FF8F FFE6     	movff	plusw1,postinc1
 12888  004ECE  EC35  F02C         	call	_fputs	;wreg free
 12889  004ED2                     l8239:
 12890                           
 12891                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 12892                           ;stkvar	_w @ sp[(-4)+0]
 12893                           ;stkvar	_buf @ sp[(-4)+-4]
 12894  004ED2  0EF8               	movlw	-8
 12895  004ED4  006F FF8F FFE6     	movff	plusw1,postinc1
 12896  004EDA  006F FF8F FFE6     	movff	plusw1,postinc1
 12897  004EE0  ECF9  F02A         	call	_strlen	;wreg free
 12898  004EE4  0EFC               	movlw	-4
 12899  004EE6  50E3               	movf	plusw1,w,c
 12900  004EE8  2639               	addwf	btemp,f,c
 12901  004EEA  0EFD               	movlw	-3
 12902  004EEC  50E3               	movf	plusw1,w,c
 12903  004EEE  223A               	addwfc	btemp+1,f,c
 12904                           
 12905                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 12906  004EF0  0EF6               	movlw	246
 12907  004EF2  26E1               	addwf	fsr1l,f,c
 12908  004EF4  0EFF               	movlw	255
 12909  004EF6  22E2               	addwfc	fsr1h,f,c
 12910  004EF8  0012               	return		;funcret
 12911  004EFA                     __end_of_pad:
 12912                           	opt callstack 0
 12913                           
 12914 ;; *************** function _strlen *****************
 12915 ;; Defined at:
 12916 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 12917 ;; Parameters:    Size  Location     Type
 12918 ;;  s               2  [STACK] PTR const unsigned char 
 12919 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 12920 ;;		 -> STR_3(6), V(98), 
 12921 ;; Auto vars:     Size  Location     Type
 12922 ;;  a               2  [STACK] PTR const unsigned char 
 12923 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 12924 ;;		 -> STR_3(6), V(98), 
 12925 ;; Return value:  Size  Location     Type
 12926 ;;                  2  [STACK] unsigned int 
 12927 ;; Registers used:
 12928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 12929 ;; Tracked objects:
 12930 ;;		On entry : 0/0
 12931 ;;		On exit  : 0/0
 12932 ;;		Unchanged: 0/0
 12933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12938 ;;Total ram usage:        0 bytes
 12939 ;; Hardware stack levels used:    1
 12940 ;; Hardware stack levels required when called:    3
 12941 ;; This function calls:
 12942 ;;		Nothing
 12943 ;; This function is called by:
 12944 ;;		_eaDogM_WriteString
 12945 ;;		_pad
 12946 ;;		_stoa
 12947 ;; This function uses a reentrant model
 12948 ;;
 12949                           
 12950                           	psect	text52
 12951  0055F2                     __ptext52:
 12952                           	opt callstack 0
 12953  0055F2                     _strlen:
 12954                           	opt callstack 0
 12955                           
 12956                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12957  0055F2  52E6               	movf	postinc1,f,c
 12958  0055F4  52E6               	movf	postinc1,f,c
 12959                           
 12960                           ;stkvar	_s @ sp[(-2)+-2]
 12961                           
 12962                           ;incstack = 0
 12963  0055F6  0EFC               	movlw	-4
 12964  0055F8  006F FF8C  F043    	movff	plusw1,btemp+10
 12965  0055FE  0EFD               	movlw	-3
 12966  005600  006F FF8C  F044    	movff	plusw1,btemp+11
 12967                           
 12968                           ;stkvar	_a @ sp[(-2)+0]
 12969  005606  0EFF               	movlw	-1
 12970  005608  0060  F113  FFE3   	movff	btemp+11,plusw1
 12971  00560E  0EFE               	movlw	-2
 12972  005610  0060  F10F  FFE3   	movff	btemp+10,plusw1
 12973  005616  D011               	goto	l5403
 12974  005618                     l5401:
 12975                           
 12976                           ;stkvar	_s @ sp[(-2)+-2]
 12977  005618  0EFC               	movlw	-4
 12978  00561A  50E3               	movf	plusw1,w,c
 12979  00561C  0F01               	addlw	1
 12980  00561E  6E39               	movwf	btemp,c
 12981  005620  0EFC               	movlw	-4
 12982  005622  0060  F0E7  FFE3   	movff	btemp,plusw1
 12983  005628  6A39               	clrf	btemp,c
 12984  00562A  0EFD               	movlw	-3
 12985  00562C  50E3               	movf	plusw1,w,c
 12986  00562E  2039               	addwfc	btemp,w,c
 12987  005630  6E39               	movwf	btemp,c
 12988  005632  0EFD               	movlw	-3
 12989  005634  0060  F0E7  FFE3   	movff	btemp,plusw1
 12990  00563A                     l5403:
 12991                           
 12992                           ;stkvar	_s @ sp[(-2)+-2]
 12993  00563A  0EFC               	movlw	-4
 12994  00563C  006F FF8F FFF6     	movff	plusw1,tblptrl
 12995  005642  0EFD               	movlw	-3
 12996  005644  006F FF8F FFF7     	movff	plusw1,tblptrh
 12997  00564A  0E00               	movlw	low (__smallconst shr (0+16))
 12998  00564C  6EF8               	movwf	tblptru,c
 12999  00564E  0E1F               	movlw	(high __ramtop+-1)
 13000  005650  64F7               	cpfsgt	tblptrh,c
 13001  005652  D003               	bra	u2507
 13002  005654  0008               	tblrd		*
 13003  005656  50F5               	movf	tablat,w,c
 13004  005658  D007               	bra	u2500
 13005  00565A                     u2507:
 13006  00565A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13007  005660  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13008  005666  50EF               	movf	indf0,w,c
 13009  005668                     u2500:
 13010  005668  0900               	iorlw	0
 13011  00566A  A4D8               	btfss	status,2,c
 13012  00566C  D7D5               	goto	l5401
 13013                           
 13014                           ;stkvar	_a @ sp[(-2)+0]
 13015                           ;stkvar	_s @ sp[(-2)+-2]
 13016  00566E  0EFC               	movlw	-4
 13017  005670  006F FF8C  F039    	movff	plusw1,btemp
 13018  005676  0EFD               	movlw	-3
 13019  005678  006F FF8C  F03A    	movff	plusw1,btemp+1
 13020  00567E  0EFE               	movlw	-2
 13021  005680  50E3               	movf	plusw1,w,c
 13022  005682  5E39               	subwf	btemp,f,c
 13023  005684  0EFF               	movlw	-1
 13024  005686  50E3               	movf	plusw1,w,c
 13025  005688  5A3A               	subwfb	btemp+1,f,c
 13026                           
 13027                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 13028  00568A  52E5               	movf	postdec1,f,c
 13029  00568C  52E5               	movf	postdec1,f,c
 13030  00568E  52E5               	movf	postdec1,f,c
 13031  005690  52E5               	movf	postdec1,f,c
 13032  005692  0012               	return		;funcret
 13033  005694                     __end_of_strlen:
 13034                           	opt callstack 0
 13035                           
 13036 ;; *************** function _fputs *****************
 13037 ;; Defined at:
 13038 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 13039 ;; Parameters:    Size  Location     Type
 13040 ;;  s               2  [STACK] PTR const unsigned char 
 13041 ;;		 -> dbuf(32), 
 13042 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13043 ;;		 -> f(5), NULL(0), 
 13044 ;; Auto vars:     Size  Location     Type
 13045 ;;  i               2  [STACK] int 
 13046 ;;  c               1  [STACK] unsigned char 
 13047 ;; Return value:  Size  Location     Type
 13048 ;;                  2  [STACK] int 
 13049 ;; Registers used:
 13050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 13051 ;; Tracked objects:
 13052 ;;		On entry : 0/1
 13053 ;;		On exit  : 0/0
 13054 ;;		Unchanged: 0/0
 13055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13060 ;;Total ram usage:        0 bytes
 13061 ;; Hardware stack levels used:    1
 13062 ;; Hardware stack levels required when called:    6
 13063 ;; This function calls:
 13064 ;;		_fputc
 13065 ;; This function is called by:
 13066 ;;		_pad
 13067 ;; This function uses a reentrant model
 13068 ;;
 13069                           
 13070                           	psect	text53
 13071  00586A                     __ptext53:
 13072                           	opt callstack 0
 13073  00586A                     _fputs:
 13074                           	opt callstack 0
 13075                           
 13076                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13077  00586A  52E6               	movf	postinc1,f,c
 13078  00586C  52E6               	movf	postinc1,f,c
 13079  00586E  52E6               	movf	postinc1,f,c
 13080                           
 13081                           ;stkvar	_i @ sp[(-3)+0]
 13082                           
 13083                           ;incstack = 0
 13084  005870  0EFD               	movlw	-3
 13085  005872  6AE3               	clrf	plusw1,c
 13086  005874  0EFE               	movlw	-2
 13087  005876  6AE3               	clrf	plusw1,c
 13088  005878  D01F               	goto	l8219
 13089  00587A                     l8215:
 13090                           
 13091                           ;stkvar	_fp @ sp[(-3)+-4]
 13092  00587A  0EF9               	movlw	-7
 13093  00587C  006F FF8F FFE6     	movff	plusw1,postinc1
 13094  005882  006F FF8F FFE6     	movff	plusw1,postinc1
 13095                           
 13096                           ;stkvar	_c @ sp[(-5)+2]
 13097  005888  0EFD               	movlw	-3
 13098  00588A  50E3               	movf	plusw1,w,c
 13099  00588C  6EE6               	movwf	postinc1,c
 13100  00588E  0E00               	movlw	0
 13101  005890  6EE6               	movwf	postinc1,c
 13102  005892  EC7D  F027         	call	_fputc	;wreg free
 13103                           
 13104                           ;stkvar	_i @ sp[(-3)+0]
 13105  005896  0EFD               	movlw	-3
 13106  005898  50E3               	movf	plusw1,w,c
 13107  00589A  0F01               	addlw	1
 13108  00589C  6E39               	movwf	btemp,c
 13109  00589E  0EFD               	movlw	-3
 13110  0058A0  0060  F0E7  FFE3   	movff	btemp,plusw1
 13111  0058A6  6A39               	clrf	btemp,c
 13112  0058A8  0EFE               	movlw	-2
 13113  0058AA  50E3               	movf	plusw1,w,c
 13114  0058AC  2039               	addwfc	btemp,w,c
 13115  0058AE  6E39               	movwf	btemp,c
 13116  0058B0  0EFE               	movlw	-2
 13117  0058B2  0060  F0E7  FFE3   	movff	btemp,plusw1
 13118  0058B8                     l8219:
 13119                           
 13120                           ;stkvar	_i @ sp[(-3)+0]
 13121  0058B8  0EFD               	movlw	-3
 13122  0058BA  006F FF8C  F043    	movff	plusw1,btemp+10
 13123  0058C0  0EFE               	movlw	-2
 13124  0058C2  006F FF8C  F044    	movff	plusw1,btemp+11
 13125                           
 13126                           ;stkvar	_s @ sp[(-3)+-2]
 13127  0058C8  0EFB               	movlw	-5
 13128  0058CA  006F FF8C  F041    	movff	plusw1,btemp+8
 13129  0058D0  0EFC               	movlw	-4
 13130  0058D2  006F FF8C  F042    	movff	plusw1,btemp+9
 13131  0058D8  5043               	movf	btemp+10,w,c
 13132  0058DA  2441               	addwf	btemp+8,w,c
 13133  0058DC  6ED9               	movwf	fsr2l,c
 13134  0058DE  5044               	movf	btemp+11,w,c
 13135  0058E0  2042               	addwfc	btemp+9,w,c
 13136  0058E2  6EDA               	movwf	fsr2h,c
 13137  0058E4  50DF               	movf	indf2,w,c
 13138  0058E6  6E44               	movwf	btemp+11,c
 13139                           
 13140                           ;stkvar	_c @ sp[(-3)+2]
 13141  0058E8  0EFF               	movlw	-1
 13142  0058EA  0060  F113  FFE3   	movff	btemp+11,plusw1
 13143  0058F0  0EFF               	movlw	-1
 13144  0058F2  50E3               	movf	plusw1,w,c
 13145  0058F4  A4D8               	btfss	status,2,c
 13146  0058F6  D7C1               	goto	l8215
 13147                           
 13148                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 13149  0058F8  0EF9               	movlw	249
 13150  0058FA  26E1               	addwf	fsr1l,f,c
 13151  0058FC  0EFF               	movlw	255
 13152  0058FE  22E2               	addwfc	fsr1h,f,c
 13153  005900  0012               	return		;funcret
 13154  005902                     __end_of_fputs:
 13155                           	opt callstack 0
 13156                           
 13157 ;; *************** function _fputc *****************
 13158 ;; Defined at:
 13159 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 13160 ;; Parameters:    Size  Location     Type
 13161 ;;  c               2  [STACK] int 
 13162 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13163 ;;		 -> f(5), NULL(0), 
 13164 ;; Auto vars:     Size  Location     Type
 13165 ;;		None
 13166 ;; Return value:  Size  Location     Type
 13167 ;;                  2  [STACK] int 
 13168 ;; Registers used:
 13169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 13170 ;; Tracked objects:
 13171 ;;		On entry : 0/0
 13172 ;;		On exit  : 0/0
 13173 ;;		Unchanged: 0/0
 13174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13179 ;;Total ram usage:        0 bytes
 13180 ;; Hardware stack levels used:    1
 13181 ;; Hardware stack levels required when called:    5
 13182 ;; This function calls:
 13183 ;;		_putch
 13184 ;; This function is called by:
 13185 ;;		_pad
 13186 ;;		_stoa
 13187 ;;		_vfpfcnvrt
 13188 ;;		_fputs
 13189 ;; This function uses a reentrant model
 13190 ;;
 13191                           
 13192                           	psect	text54
 13193  004EFA                     __ptext54:
 13194                           	opt callstack 0
 13195  004EFA                     _fputc:
 13196                           	opt callstack 21
 13197                           
 13198                           ;stkvar	_fp @ sp[(0)+-4]
 13199                           
 13200                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13201                           ;incstack = 0
 13202  004EFA  0EFC               	movlw	-4
 13203  004EFC  006F FF8C  F039    	movff	plusw1,btemp
 13204  004F02  0EFD               	movlw	-3
 13205  004F04  50E3               	movf	plusw1,w,c
 13206  004F06  1039               	iorwf	btemp,w,c
 13207  004F08  B4D8               	btfsc	status,2,c
 13208  004F0A  D009               	goto	u4830
 13209                           
 13210                           ;stkvar	_fp @ sp[(0)+-4]
 13211  004F0C  0EFC               	movlw	-4
 13212  004F0E  006F FF8C  F039    	movff	plusw1,btemp
 13213  004F14  0EFD               	movlw	-3
 13214  004F16  50E3               	movf	plusw1,w,c
 13215  004F18  1039               	iorwf	btemp,w,c
 13216  004F1A  A4D8               	btfss	status,2,c
 13217  004F1C  D006               	goto	l8205
 13218  004F1E                     u4830:
 13219                           
 13220                           ;stkvar	_c @ sp[(0)+-2]
 13221  004F1E  0EFE               	movlw	-2
 13222  004F20  50E3               	movf	plusw1,w,c
 13223  004F22  6EE6               	movwf	postinc1,c
 13224  004F24  EC77  F033         	call	_putch	;wreg free
 13225  004F28  D069               	goto	l2638
 13226  004F2A                     l8205:
 13227                           
 13228                           ;stkvar	_fp @ sp[(0)+-4]
 13229  004F2A  0EFC               	movlw	-4
 13230  004F2C  006F FF8C  F043    	movff	plusw1,btemp+10
 13231  004F32  0EFD               	movlw	-3
 13232  004F34  006F FF8C  F044    	movff	plusw1,btemp+11
 13233  004F3A  0E03               	movlw	3
 13234  004F3C  2443               	addwf	btemp+10,w,c
 13235  004F3E  6ED9               	movwf	fsr2l,c
 13236  004F40  0E00               	movlw	0
 13237  004F42  2044               	addwfc	btemp+11,w,c
 13238  004F44  6EDA               	movwf	fsr2h,c
 13239  004F46  50DE               	movf	postinc2,w,c
 13240  004F48  10DE               	iorwf	postinc2,w,c
 13241  004F4A  B4D8               	btfsc	status,2,c
 13242  004F4C  D026               	goto	u4850
 13243                           
 13244                           ;stkvar	_fp @ sp[(0)+-4]
 13245  004F4E  0EFC               	movlw	-4
 13246  004F50  006F FF8C  F043    	movff	plusw1,btemp+10
 13247  004F56  0EFD               	movlw	-3
 13248  004F58  006F FF8C  F044    	movff	plusw1,btemp+11
 13249  004F5E  0E03               	movlw	3
 13250  004F60  2443               	addwf	btemp+10,w,c
 13251  004F62  6ED9               	movwf	fsr2l,c
 13252  004F64  0E00               	movlw	0
 13253  004F66  2044               	addwfc	btemp+11,w,c
 13254  004F68  6EDA               	movwf	fsr2h,c
 13255                           
 13256                           ;stkvar	_fp @ sp[(0)+-4]
 13257  004F6A  0EFC               	movlw	-4
 13258  004F6C  006F FF8C  F043    	movff	plusw1,btemp+10
 13259  004F72  0EFD               	movlw	-3
 13260  004F74  006F FF8C  F044    	movff	plusw1,btemp+11
 13261  004F7A  0E01               	movlw	1
 13262  004F7C  2443               	addwf	btemp+10,w,c
 13263  004F7E  6EE9               	movwf	fsr0l,c
 13264  004F80  0E00               	movlw	0
 13265  004F82  2044               	addwfc	btemp+11,w,c
 13266  004F84  6EEA               	movwf	fsr0h,c
 13267  004F86  50DE               	movf	postinc2,w,c
 13268  004F88  5CEE               	subwf	postinc0,w,c
 13269  004F8A  50EE               	movf	postinc0,w,c
 13270  004F8C  0A80               	xorlw	128
 13271  004F8E  6E39               	movwf	btemp,c
 13272  004F90  50DE               	movf	postinc2,w,c
 13273  004F92  0A80               	xorlw	128
 13274  004F94  5839               	subwfb	btemp,w,c
 13275  004F96  B0D8               	btfsc	status,0,c
 13276  004F98  D031               	goto	l2638
 13277  004F9A                     u4850:
 13278                           
 13279                           ;stkvar	_c @ sp[(0)+-2]
 13280                           ;stkvar	_fp @ sp[(0)+-4]
 13281  004F9A  0EFC               	movlw	-4
 13282  004F9C  006F FF8C  F043    	movff	plusw1,btemp+10
 13283  004FA2  0EFD               	movlw	-3
 13284  004FA4  006F FF8C  F044    	movff	plusw1,btemp+11
 13285  004FAA  0E01               	movlw	1
 13286  004FAC  2443               	addwf	btemp+10,w,c
 13287  004FAE  6ED9               	movwf	fsr2l,c
 13288  004FB0  0E00               	movlw	0
 13289  004FB2  2044               	addwfc	btemp+11,w,c
 13290  004FB4  6EDA               	movwf	fsr2h,c
 13291  004FB6  50DF               	movf	indf2,w,c
 13292  004FB8  6E44               	movwf	btemp+11,c
 13293                           
 13294                           ;stkvar	_fp @ sp[(0)+-4]
 13295  004FBA  0EFC               	movlw	-4
 13296  004FBC  006F FF8F FFD9     	movff	plusw1,fsr2l
 13297  004FC2  0EFD               	movlw	-3
 13298  004FC4  006F FF8F FFDA     	movff	plusw1,fsr2h
 13299  004FCA  50DF               	movf	indf2,w,c
 13300  004FCC  2444               	addwf	btemp+11,w,c
 13301  004FCE  6ED9               	movwf	fsr2l,c
 13302  004FD0  6ADA               	clrf	fsr2h,c
 13303  004FD2  0EFE               	movlw	-2
 13304  004FD4  006F FF8F FFDF     	movff	plusw1,indf2
 13305                           
 13306                           ;stkvar	_fp @ sp[(0)+-4]
 13307  004FDA  0EFC               	movlw	-4
 13308  004FDC  006F FF8C  F043    	movff	plusw1,btemp+10
 13309  004FE2  0EFD               	movlw	-3
 13310  004FE4  006F FF8C  F044    	movff	plusw1,btemp+11
 13311  004FEA  0E01               	movlw	1
 13312  004FEC  2443               	addwf	btemp+10,w,c
 13313  004FEE  6ED9               	movwf	fsr2l,c
 13314  004FF0  0E00               	movlw	0
 13315  004FF2  2044               	addwfc	btemp+11,w,c
 13316  004FF4  6EDA               	movwf	fsr2h,c
 13317  004FF6  2ADE               	incf	postinc2,f,c
 13318  004FF8  0E00               	movlw	0
 13319  004FFA  22DD               	addwfc	postdec2,f,c
 13320  004FFC                     l2638:
 13321                           
 13322                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 13323  004FFC  52E5               	movf	postdec1,f,c
 13324  004FFE  52E5               	movf	postdec1,f,c
 13325  005000  52E5               	movf	postdec1,f,c
 13326  005002  52E5               	movf	postdec1,f,c
 13327  005004  0012               	return		;funcret
 13328  005006                     __end_of_fputc:
 13329                           	opt callstack 0
 13330                           
 13331 ;; *************** function _putch *****************
 13332 ;; Defined at:
 13333 ;;		line 138 in file "eadog.c"
 13334 ;; Parameters:    Size  Location     Type
 13335 ;;  c               1  [STACK] unsigned char 
 13336 ;; Auto vars:     Size  Location     Type
 13337 ;;		None
 13338 ;; Return value:  Size  Location     Type
 13339 ;;                  1  [STACK] void 
 13340 ;; Registers used:
 13341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 13342 ;; Tracked objects:
 13343 ;;		On entry : 0/0
 13344 ;;		On exit  : 0/0
 13345 ;;		Unchanged: 0/0
 13346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13351 ;;Total ram usage:        0 bytes
 13352 ;; Hardware stack levels used:    1
 13353 ;; Hardware stack levels required when called:    4
 13354 ;; This function calls:
 13355 ;;		_ringBufS_put_dma
 13356 ;; This function is called by:
 13357 ;;		_fputc
 13358 ;; This function uses a reentrant model
 13359 ;;
 13360                           
 13361                           	psect	text55
 13362  0066EE                     __ptext55:
 13363                           	opt callstack 0
 13364  0066EE                     _putch:
 13365                           	opt callstack 21
 13366                           
 13367                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 13368                           ;stkvar	_c @ sp[(0)+-1]
 13369                           
 13370                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13371                           ;incstack = 0
 13372  0066EE  0EFF               	movlw	-1
 13373  0066F0  50E3               	movf	plusw1,w,c
 13374  0066F2  6EE6               	movwf	postinc1,c
 13375  0066F4  0060  F323  FFE6   	movff	_spi_link+6,postinc1
 13376  0066FA  0060  F327  FFE6   	movff	_spi_link+7,postinc1
 13377  006700  ECA4  F02A         	call	_ringBufS_put_dma	;wreg free
 13378                           
 13379                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 13380  006704  52E5               	movf	postdec1,f,c
 13381  006706  0012               	return		;funcret
 13382  006708                     __end_of_putch:
 13383                           	opt callstack 0
 13384                           
 13385 ;; *************** function _ringBufS_put_dma *****************
 13386 ;; Defined at:
 13387 ;;		line 67 in file "ringbufs.c"
 13388 ;; Parameters:    Size  Location     Type
 13389 ;;  _this           2  [STACK] PTR struct ringBufS_t
 13390 ;;		 -> ring_buf1(67), 
 13391 ;;  c               1  [STACK] const unsigned char 
 13392 ;; Auto vars:     Size  Location     Type
 13393 ;;		None
 13394 ;; Return value:  Size  Location     Type
 13395 ;;                  1  [STACK] void 
 13396 ;; Registers used:
 13397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 13398 ;; Tracked objects:
 13399 ;;		On entry : 0/0
 13400 ;;		On exit  : 0/0
 13401 ;;		Unchanged: 0/0
 13402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13407 ;;Total ram usage:        0 bytes
 13408 ;; Hardware stack levels used:    1
 13409 ;; Hardware stack levels required when called:    3
 13410 ;; This function calls:
 13411 ;;		Nothing
 13412 ;; This function is called by:
 13413 ;;		_putch
 13414 ;; This function uses a reentrant model
 13415 ;;
 13416                           
 13417                           	psect	text56
 13418  005548                     __ptext56:
 13419                           	opt callstack 0
 13420  005548                     _ringBufS_put_dma:
 13421                           	opt callstack 21
 13422                           
 13423                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 13424                           ;stkvar	__this @ sp[(0)+-2]
 13425                           
 13426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13427                           ;incstack = 0
 13428  005548  0EFE               	movlw	-2
 13429  00554A  006F FF8C  F043    	movff	plusw1,btemp+10
 13430  005550  0EFF               	movlw	-1
 13431  005552  006F FF8C  F044    	movff	plusw1,btemp+11
 13432  005558  0E42               	movlw	66
 13433  00555A  2443               	addwf	btemp+10,w,c
 13434  00555C  6ED9               	movwf	fsr2l,c
 13435  00555E  0E00               	movlw	0
 13436  005560  2044               	addwfc	btemp+11,w,c
 13437  005562  6EDA               	movwf	fsr2h,c
 13438  005564  0E40               	movlw	64
 13439  005566  60DF               	cpfslt	indf2,c
 13440  005568  D040               	goto	l1489
 13441                           
 13442                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 13443                           ;stkvar	_c @ sp[(0)+-3]
 13444                           ;stkvar	__this @ sp[(0)+-2]
 13445  00556A  0EFE               	movlw	-2
 13446  00556C  006F FF8C  F043    	movff	plusw1,btemp+10
 13447  005572  0EFF               	movlw	-1
 13448  005574  006F FF8C  F044    	movff	plusw1,btemp+11
 13449  00557A  0E40               	movlw	64
 13450  00557C  2443               	addwf	btemp+10,w,c
 13451  00557E  6ED9               	movwf	fsr2l,c
 13452  005580  0E00               	movlw	0
 13453  005582  2044               	addwfc	btemp+11,w,c
 13454  005584  6EDA               	movwf	fsr2h,c
 13455  005586  50DF               	movf	indf2,w,c
 13456  005588  6E44               	movwf	btemp+11,c
 13457                           
 13458                           ;stkvar	__this @ sp[(0)+-2]
 13459  00558A  0EFE               	movlw	-2
 13460  00558C  006F FF8C  F041    	movff	plusw1,btemp+8
 13461  005592  0EFF               	movlw	-1
 13462  005594  006F FF8C  F042    	movff	plusw1,btemp+9
 13463  00559A  5044               	movf	btemp+11,w,c
 13464  00559C  2441               	addwf	btemp+8,w,c
 13465  00559E  6ED9               	movwf	fsr2l,c
 13466  0055A0  0E00               	movlw	0
 13467  0055A2  2042               	addwfc	btemp+9,w,c
 13468  0055A4  6EDA               	movwf	fsr2h,c
 13469  0055A6  0EFD               	movlw	-3
 13470  0055A8  006F FF8F FFDF     	movff	plusw1,indf2
 13471                           
 13472                           ;ringbufs.c: 71:   ++_this->head;
 13473                           ;stkvar	__this @ sp[(0)+-2]
 13474  0055AE  0EFE               	movlw	-2
 13475  0055B0  006F FF8C  F043    	movff	plusw1,btemp+10
 13476  0055B6  0EFF               	movlw	-1
 13477  0055B8  006F FF8C  F044    	movff	plusw1,btemp+11
 13478  0055BE  0E40               	movlw	64
 13479  0055C0  2443               	addwf	btemp+10,w,c
 13480  0055C2  6ED9               	movwf	fsr2l,c
 13481  0055C4  0E00               	movlw	0
 13482  0055C6  2044               	addwfc	btemp+11,w,c
 13483  0055C8  6EDA               	movwf	fsr2h,c
 13484  0055CA  2ADF               	incf	indf2,f,c
 13485                           
 13486                           ;ringbufs.c: 72:   ++_this->count;
 13487                           ;stkvar	__this @ sp[(0)+-2]
 13488  0055CC  0EFE               	movlw	-2
 13489  0055CE  006F FF8C  F043    	movff	plusw1,btemp+10
 13490  0055D4  0EFF               	movlw	-1
 13491  0055D6  006F FF8C  F044    	movff	plusw1,btemp+11
 13492  0055DC  0E42               	movlw	66
 13493  0055DE  2443               	addwf	btemp+10,w,c
 13494  0055E0  6ED9               	movwf	fsr2l,c
 13495  0055E2  0E00               	movlw	0
 13496  0055E4  2044               	addwfc	btemp+11,w,c
 13497  0055E6  6EDA               	movwf	fsr2h,c
 13498  0055E8  2ADF               	incf	indf2,f,c
 13499  0055EA                     l1489:
 13500                           
 13501                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 13502  0055EA  52E5               	movf	postdec1,f,c
 13503  0055EC  52E5               	movf	postdec1,f,c
 13504  0055EE  52E5               	movf	postdec1,f,c
 13505  0055F0  0012               	return		;funcret
 13506  0055F2                     __end_of_ringBufS_put_dma:
 13507                           	opt callstack 0
 13508                           
 13509 ;; *************** function _SYSTEM_Initialize *****************
 13510 ;; Defined at:
 13511 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13512 ;; Parameters:    Size  Location     Type
 13513 ;;		None
 13514 ;; Auto vars:     Size  Location     Type
 13515 ;;		None
 13516 ;; Return value:  Size  Location     Type
 13517 ;;                  1  [STACK] void 
 13518 ;; Registers used:
 13519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 13520 ;; Tracked objects:
 13521 ;;		On entry : 0/0
 13522 ;;		On exit  : 3F/3C
 13523 ;;		Unchanged: 0/0
 13524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13529 ;;Total ram usage:        0 bytes
 13530 ;; Hardware stack levels used:    1
 13531 ;; Hardware stack levels required when called:    5
 13532 ;; This function calls:
 13533 ;;		_ADCC_Initialize
 13534 ;;		_CLC1_Initialize
 13535 ;;		_CLKREF_Initialize
 13536 ;;		_DMA1_Initialize
 13537 ;;		_DSM_Initialize
 13538 ;;		_EXT_INT_Initialize
 13539 ;;		_INTERRUPT_Initialize
 13540 ;;		_NCO1_Initialize
 13541 ;;		_OSCILLATOR_Initialize
 13542 ;;		_PIN_MANAGER_Initialize
 13543 ;;		_PMD_Initialize
 13544 ;;		_SPI1_Initialize
 13545 ;;		_TMR5_Initialize
 13546 ;;		_TMR6_Initialize
 13547 ;;		_UART1_Initialize
 13548 ;;		_UART2_Initialize
 13549 ;; This function is called by:
 13550 ;;		_main
 13551 ;; This function uses a reentrant model
 13552 ;;
 13553                           
 13554                           	psect	text57
 13555  005ED2                     __ptext57:
 13556                           	opt callstack 0
 13557  005ED2                     _SYSTEM_Initialize:
 13558                           	opt callstack 25
 13559                           
 13560                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 13561                           
 13562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13563                           ;incstack = 0
 13564  005ED2  EC43  F02D         	call	_INTERRUPT_Initialize	;wreg free
 13565                           
 13566                           ; BSR set to: 57
 13567                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 13568  005ED6  ECB4  F033         	call	_PMD_Initialize	;wreg free
 13569                           
 13570                           ; BSR set to: 57
 13571                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 13572  005EDA  EC9A  F02B         	call	_PIN_MANAGER_Initialize	;wreg free
 13573                           
 13574                           ; BSR set to: 58
 13575                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 13576  005EDE  ECA9  F033         	call	_OSCILLATOR_Initialize	;wreg free
 13577                           
 13578                           ; BSR set to: 57
 13579                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 13580  005EE2  ECDB  F02E         	call	_ADCC_Initialize	;wreg free
 13581                           
 13582                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 13583  005EE6  EC5B  F033         	call	_NCO1_Initialize	;wreg free
 13584                           
 13585                           ; BSR set to: 63
 13586                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 13587  005EEA  ECB5  F02E         	call	_EXT_INT_Initialize	;wreg free
 13588                           
 13589                           ; BSR set to: 57
 13590                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 13591  005EEE  ECBA  F031         	call	_TMR6_Initialize	;wreg free
 13592                           
 13593                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 13594  005EF2  ECCB  F032         	call	_CLC1_Initialize	;wreg free
 13595                           
 13596                           ; BSR set to: 60
 13597                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 13598  005EF6  EC23  F02F         	call	_TMR5_Initialize	;wreg free
 13599                           
 13600                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 13601  005EFA  EC69  F033         	call	_DSM_Initialize	;wreg free
 13602                           
 13603                           ; BSR set to: 60
 13604                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 13605  005EFE  EC76  F02D         	call	_UART1_Initialize	;wreg free
 13606                           
 13607                           ; BSR set to: 57
 13608                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 13609  005F02  EC0A  F02E         	call	_UART2_Initialize	;wreg free
 13610                           
 13611                           ; BSR set to: 57
 13612                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 13613  005F06  EC9E  F033         	call	_SPI1_Initialize	;wreg free
 13614                           
 13615                           ; BSR set to: 61
 13616                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 13617  005F0A  EC0E  F02D         	call	_DMA1_Initialize	;wreg free
 13618                           
 13619                           ; BSR set to: 59
 13620                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 13621  005F0E  ECE5  F033         	call	_CLKREF_Initialize	;wreg free
 13622                           
 13623                           ; BSR set to: 60
 13624                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13625  005F12  0012               	return		;funcret
 13626  005F14                     __end_of_SYSTEM_Initialize:
 13627                           	opt callstack 0
 13628                           
 13629 ;; *************** function _UART2_Initialize *****************
 13630 ;; Defined at:
 13631 ;;		line 78 in file "mcc_generated_files/uart2.c"
 13632 ;; Parameters:    Size  Location     Type
 13633 ;;		None
 13634 ;; Auto vars:     Size  Location     Type
 13635 ;;		None
 13636 ;; Return value:  Size  Location     Type
 13637 ;;                  1  [STACK] void 
 13638 ;; Registers used:
 13639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13640 ;; Tracked objects:
 13641 ;;		On entry : 3F/39
 13642 ;;		On exit  : 3F/39
 13643 ;;		Unchanged: 0/0
 13644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13649 ;;Total ram usage:        0 bytes
 13650 ;; Hardware stack levels used:    1
 13651 ;; Hardware stack levels required when called:    4
 13652 ;; This function calls:
 13653 ;;		_UART2_SetRxInterruptHandler
 13654 ;;		_UART2_SetTxInterruptHandler
 13655 ;; This function is called by:
 13656 ;;		_SYSTEM_Initialize
 13657 ;; This function uses a reentrant model
 13658 ;;
 13659                           
 13660                           	psect	text58
 13661  005C14                     __ptext58:
 13662                           	opt callstack 0
 13663  005C14                     _UART2_Initialize:
 13664                           	opt callstack 25
 13665                           
 13666                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 13667                           
 13668                           ; BSR set to: 60
 13669                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13670                           ;incstack = 0
 13671  005C14  0139               	movlb	57	; () banked
 13672  005C16  9596               	bcf	150,2,b	;volatile
 13673                           
 13674                           ; BSR set to: 57
 13675                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 13676  005C18  0E3E               	movlw	low _UART2_Receive_ISR
 13677  005C1A  6EE6               	movwf	postinc1,c
 13678  005C1C  0E66               	movlw	high _UART2_Receive_ISR
 13679  005C1E  6EE6               	movwf	postinc1,c
 13680  005C20  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 13681  005C22  6EE6               	movwf	postinc1,c
 13682  005C24  EC7E  F031         	call	_UART2_SetRxInterruptHandler	;wreg free
 13683                           
 13684                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 13685  005C28  0139               	movlb	57	; () banked
 13686  005C2A  9796               	bcf	150,3,b	;volatile
 13687                           
 13688                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 13689  005C2C  0EDC               	movlw	low _UART2_Transmit_ISR
 13690  005C2E  6EE6               	movwf	postinc1,c
 13691  005C30  0E61               	movlw	high _UART2_Transmit_ISR
 13692  005C32  6EE6               	movwf	postinc1,c
 13693  005C34  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 13694  005C36  6EE6               	movwf	postinc1,c
 13695  005C38  EC6A  F031         	call	_UART2_SetTxInterruptHandler	;wreg free
 13696                           
 13697                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 13698  005C3C  013D               	movlb	61	; () banked
 13699  005C3E  6BD4               	clrf	212,b	;volatile
 13700                           
 13701                           ; BSR set to: 61
 13702                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 13703  005C40  6BD6               	clrf	214,b	;volatile
 13704                           
 13705                           ; BSR set to: 61
 13706                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 13707  005C42  6BD8               	clrf	216,b	;volatile
 13708                           
 13709                           ; BSR set to: 61
 13710                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 13711  005C44  0EB0               	movlw	176
 13712  005C46  6FDA               	movwf	218,b	;volatile
 13713                           
 13714                           ; BSR set to: 61
 13715                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 13716  005C48  0E80               	movlw	128
 13717  005C4A  6FDB               	movwf	219,b	;volatile
 13718                           
 13719                           ; BSR set to: 61
 13720                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 13721  005C4C  6BDC               	clrf	220,b	;volatile
 13722                           
 13723                           ; BSR set to: 61
 13724                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 13725  005C4E  0E82               	movlw	130
 13726  005C50  6FDD               	movwf	221,b	;volatile
 13727                           
 13728                           ; BSR set to: 61
 13729                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 13730  005C52  0E06               	movlw	6
 13731  005C54  6FDE               	movwf	222,b	;volatile
 13732                           
 13733                           ; BSR set to: 61
 13734                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 13735  005C56  6BDF               	clrf	223,b	;volatile
 13736                           
 13737                           ; BSR set to: 61
 13738                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 13739  005C58  6BE0               	clrf	224,b	;volatile
 13740                           
 13741                           ; BSR set to: 61
 13742                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 13743  005C5A  6BE1               	clrf	225,b	;volatile
 13744                           
 13745                           ; BSR set to: 61
 13746                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 13747  005C5C  6BE2               	clrf	226,b	;volatile
 13748                           
 13749                           ; BSR set to: 61
 13750                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 13751  005C5E  6A32               	clrf	_uart2TxHead,c	;volatile
 13752                           
 13753                           ; BSR set to: 61
 13754                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 13755  005C60  6A31               	clrf	_uart2TxTail,c	;volatile
 13756                           
 13757                           ; BSR set to: 61
 13758                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 13759  005C62  0E40               	movlw	64
 13760  005C64  6E30               	movwf	_uart2TxBufferRemaining,c	;volatile
 13761                           
 13762                           ; BSR set to: 61
 13763                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 13764  005C66  6A2F               	clrf	_uart2RxHead,c	;volatile
 13765                           
 13766                           ; BSR set to: 61
 13767                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 13768  005C68  6A2E               	clrf	_uart2RxTail,c	;volatile
 13769                           
 13770                           ; BSR set to: 61
 13771                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 13772  005C6A  6A2D               	clrf	_uart2RxCount,c	;volatile
 13773                           
 13774                           ; BSR set to: 61
 13775                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 13776  005C6C  0139               	movlb	57	; () banked
 13777  005C6E  8596               	bsf	150,2,b	;volatile
 13778                           
 13779                           ; BSR set to: 57
 13780                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 13781  005C70  0012               	return		;funcret
 13782  005C72                     __end_of_UART2_Initialize:
 13783                           	opt callstack 0
 13784                           
 13785 ;; *************** function _UART2_SetTxInterruptHandler *****************
 13786 ;; Defined at:
 13787 ;;		line 252 in file "mcc_generated_files/uart2.c"
 13788 ;; Parameters:    Size  Location     Type
 13789 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13790 ;;		 -> UART2_Transmit_ISR(1), 
 13791 ;; Auto vars:     Size  Location     Type
 13792 ;;		None
 13793 ;; Return value:  Size  Location     Type
 13794 ;;                  1  [STACK] void 
 13795 ;; Registers used:
 13796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13797 ;; Tracked objects:
 13798 ;;		On entry : 3F/39
 13799 ;;		On exit  : 0/0
 13800 ;;		Unchanged: 0/0
 13801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13806 ;;Total ram usage:        0 bytes
 13807 ;; Hardware stack levels used:    1
 13808 ;; Hardware stack levels required when called:    3
 13809 ;; This function calls:
 13810 ;;		Nothing
 13811 ;; This function is called by:
 13812 ;;		_UART2_Initialize
 13813 ;; This function uses a reentrant model
 13814 ;;
 13815                           
 13816                           	psect	text59
 13817  0062D4                     __ptext59:
 13818                           	opt callstack 0
 13819  0062D4                     _UART2_SetTxInterruptHandler:
 13820                           	opt callstack 25
 13821                           
 13822                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 13823                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13824                           
 13825                           ; BSR set to: 57
 13826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13827                           ;incstack = 0
 13828  0062D4  50E1               	movf	fsr1l,w,c
 13829  0062D6  0FFD               	addlw	-3
 13830  0062D8  6ED9               	movwf	fsr2l,c
 13831  0062DA  50E2               	movf	fsr1h,w,c
 13832  0062DC  6EDA               	movwf	fsr2h,c
 13833  0062DE  0EFF               	movlw	255
 13834  0062E0  22DA               	addwfc	fsr2h,f,c
 13835  0062E2  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler
 13836  0062E8  006F FF78  F00F    	movff	postinc2,_UART2_TxInterruptHandler+1
 13837  0062EE  006F FF74  F010    	movff	postdec2,_UART2_TxInterruptHandler+2
 13838                           
 13839                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13840  0062F4  52E5               	movf	postdec1,f,c
 13841  0062F6  52E5               	movf	postdec1,f,c
 13842  0062F8  52E5               	movf	postdec1,f,c
 13843  0062FA  0012               	return		;funcret
 13844  0062FC                     __end_of_UART2_SetTxInterruptHandler:
 13845                           	opt callstack 0
 13846                           
 13847 ;; *************** function _UART2_SetRxInterruptHandler *****************
 13848 ;; Defined at:
 13849 ;;		line 248 in file "mcc_generated_files/uart2.c"
 13850 ;; Parameters:    Size  Location     Type
 13851 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13852 ;;		 -> UART2_Receive_ISR(1), 
 13853 ;; Auto vars:     Size  Location     Type
 13854 ;;		None
 13855 ;; Return value:  Size  Location     Type
 13856 ;;                  1  [STACK] void 
 13857 ;; Registers used:
 13858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13859 ;; Tracked objects:
 13860 ;;		On entry : 3F/39
 13861 ;;		On exit  : 0/0
 13862 ;;		Unchanged: 0/0
 13863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13868 ;;Total ram usage:        0 bytes
 13869 ;; Hardware stack levels used:    1
 13870 ;; Hardware stack levels required when called:    3
 13871 ;; This function calls:
 13872 ;;		Nothing
 13873 ;; This function is called by:
 13874 ;;		_UART2_Initialize
 13875 ;; This function uses a reentrant model
 13876 ;;
 13877                           
 13878                           	psect	text60
 13879  0062FC                     __ptext60:
 13880                           	opt callstack 0
 13881  0062FC                     _UART2_SetRxInterruptHandler:
 13882                           	opt callstack 25
 13883                           
 13884                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 13885                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13886                           
 13887                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13888                           ;incstack = 0
 13889  0062FC  50E1               	movf	fsr1l,w,c
 13890  0062FE  0FFD               	addlw	-3
 13891  006300  6ED9               	movwf	fsr2l,c
 13892  006302  50E2               	movf	fsr1h,w,c
 13893  006304  6EDA               	movwf	fsr2h,c
 13894  006306  0EFF               	movlw	255
 13895  006308  22DA               	addwfc	fsr2h,f,c
 13896  00630A  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler
 13897  006310  006F FF78  F012    	movff	postinc2,_UART2_RxInterruptHandler+1
 13898  006316  006F FF74  F013    	movff	postdec2,_UART2_RxInterruptHandler+2
 13899                           
 13900                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13901  00631C  52E5               	movf	postdec1,f,c
 13902  00631E  52E5               	movf	postdec1,f,c
 13903  006320  52E5               	movf	postdec1,f,c
 13904  006322  0012               	return		;funcret
 13905  006324                     __end_of_UART2_SetRxInterruptHandler:
 13906                           	opt callstack 0
 13907                           
 13908 ;; *************** function _UART1_Initialize *****************
 13909 ;; Defined at:
 13910 ;;		line 78 in file "mcc_generated_files/uart1.c"
 13911 ;; Parameters:    Size  Location     Type
 13912 ;;		None
 13913 ;; Auto vars:     Size  Location     Type
 13914 ;;		None
 13915 ;; Return value:  Size  Location     Type
 13916 ;;                  1  [STACK] void 
 13917 ;; Registers used:
 13918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13919 ;; Tracked objects:
 13920 ;;		On entry : 3F/3C
 13921 ;;		On exit  : 3F/39
 13922 ;;		Unchanged: 0/0
 13923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13928 ;;Total ram usage:        0 bytes
 13929 ;; Hardware stack levels used:    1
 13930 ;; Hardware stack levels required when called:    4
 13931 ;; This function calls:
 13932 ;;		_UART1_SetRxInterruptHandler
 13933 ;;		_UART1_SetTxInterruptHandler
 13934 ;; This function is called by:
 13935 ;;		_SYSTEM_Initialize
 13936 ;; This function uses a reentrant model
 13937 ;;
 13938                           
 13939                           	psect	text61
 13940  005AEC                     __ptext61:
 13941                           	opt callstack 0
 13942  005AEC                     _UART1_Initialize:
 13943                           	opt callstack 25
 13944                           
 13945                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 13946                           
 13947                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13948                           ;incstack = 0
 13949  005AEC  0139               	movlb	57	; () banked
 13950  005AEE  9793               	bcf	147,3,b	;volatile
 13951                           
 13952                           ; BSR set to: 57
 13953                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 13954  005AF0  0E1E               	movlw	low _UART1_Receive_ISR
 13955  005AF2  6EE6               	movwf	postinc1,c
 13956  005AF4  0E66               	movlw	high _UART1_Receive_ISR
 13957  005AF6  6EE6               	movwf	postinc1,c
 13958  005AF8  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 13959  005AFA  6EE6               	movwf	postinc1,c
 13960  005AFC  ECA6  F031         	call	_UART1_SetRxInterruptHandler	;wreg free
 13961                           
 13962                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 13963  005B00  0139               	movlb	57	; () banked
 13964  005B02  9993               	bcf	147,4,b	;volatile
 13965                           
 13966                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 13967  005B04  0EB0               	movlw	low _UART1_Transmit_ISR
 13968  005B06  6EE6               	movwf	postinc1,c
 13969  005B08  0E61               	movlw	high _UART1_Transmit_ISR
 13970  005B0A  6EE6               	movwf	postinc1,c
 13971  005B0C  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 13972  005B0E  6EE6               	movwf	postinc1,c
 13973  005B10  EC92  F031         	call	_UART1_SetTxInterruptHandler	;wreg free
 13974                           
 13975                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 13976  005B14  013D               	movlb	61	; () banked
 13977  005B16  6BEC               	clrf	236,b	;volatile
 13978                           
 13979                           ; BSR set to: 61
 13980                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 13981  005B18  6BED               	clrf	237,b	;volatile
 13982                           
 13983                           ; BSR set to: 61
 13984                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 13985  005B1A  6BEE               	clrf	238,b	;volatile
 13986                           
 13987                           ; BSR set to: 61
 13988                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 13989  005B1C  6BEF               	clrf	239,b	;volatile
 13990                           
 13991                           ; BSR set to: 61
 13992                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 13993  005B1E  6BF0               	clrf	240,b	;volatile
 13994                           
 13995                           ; BSR set to: 61
 13996                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 13997  005B20  6BF1               	clrf	241,b	;volatile
 13998                           
 13999                           ; BSR set to: 61
 14000                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 14001  005B22  0EB0               	movlw	176
 14002  005B24  6FF2               	movwf	242,b	;volatile
 14003                           
 14004                           ; BSR set to: 61
 14005                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 14006  005B26  0E80               	movlw	128
 14007  005B28  6FF3               	movwf	243,b	;volatile
 14008                           
 14009                           ; BSR set to: 61
 14010                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 14011  005B2A  6BF4               	clrf	244,b	;volatile
 14012                           
 14013                           ; BSR set to: 61
 14014                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 14015  005B2C  0E82               	movlw	130
 14016  005B2E  6FF5               	movwf	245,b	;volatile
 14017                           
 14018                           ; BSR set to: 61
 14019                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 14020  005B30  0E06               	movlw	6
 14021  005B32  6FF6               	movwf	246,b	;volatile
 14022                           
 14023                           ; BSR set to: 61
 14024                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 14025  005B34  6BF7               	clrf	247,b	;volatile
 14026                           
 14027                           ; BSR set to: 61
 14028                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 14029  005B36  6BF8               	clrf	248,b	;volatile
 14030                           
 14031                           ; BSR set to: 61
 14032                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 14033  005B38  6BF9               	clrf	249,b	;volatile
 14034                           
 14035                           ; BSR set to: 61
 14036                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 14037  005B3A  6BFA               	clrf	250,b	;volatile
 14038                           
 14039                           ; BSR set to: 61
 14040                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 14041  005B3C  6A38               	clrf	_uart1TxHead,c	;volatile
 14042                           
 14043                           ; BSR set to: 61
 14044                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 14045  005B3E  6A37               	clrf	_uart1TxTail,c	;volatile
 14046                           
 14047                           ; BSR set to: 61
 14048                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 14049  005B40  0E40               	movlw	64
 14050  005B42  6E36               	movwf	_uart1TxBufferRemaining,c	;volatile
 14051                           
 14052                           ; BSR set to: 61
 14053                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 14054  005B44  6A35               	clrf	_uart1RxHead,c	;volatile
 14055                           
 14056                           ; BSR set to: 61
 14057                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 14058  005B46  6A34               	clrf	_uart1RxTail,c	;volatile
 14059                           
 14060                           ; BSR set to: 61
 14061                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 14062  005B48  6A33               	clrf	_uart1RxCount,c	;volatile
 14063                           
 14064                           ; BSR set to: 61
 14065                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 14066  005B4A  0139               	movlb	57	; () banked
 14067  005B4C  8793               	bsf	147,3,b	;volatile
 14068                           
 14069                           ; BSR set to: 57
 14070                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 14071  005B4E  0012               	return		;funcret
 14072  005B50                     __end_of_UART1_Initialize:
 14073                           	opt callstack 0
 14074                           
 14075 ;; *************** function _UART1_SetTxInterruptHandler *****************
 14076 ;; Defined at:
 14077 ;;		line 244 in file "mcc_generated_files/uart1.c"
 14078 ;; Parameters:    Size  Location     Type
 14079 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14080 ;;		 -> UART1_Transmit_ISR(1), 
 14081 ;; Auto vars:     Size  Location     Type
 14082 ;;		None
 14083 ;; Return value:  Size  Location     Type
 14084 ;;                  1  [STACK] void 
 14085 ;; Registers used:
 14086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14087 ;; Tracked objects:
 14088 ;;		On entry : 3F/39
 14089 ;;		On exit  : 0/0
 14090 ;;		Unchanged: 0/0
 14091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14096 ;;Total ram usage:        0 bytes
 14097 ;; Hardware stack levels used:    1
 14098 ;; Hardware stack levels required when called:    3
 14099 ;; This function calls:
 14100 ;;		Nothing
 14101 ;; This function is called by:
 14102 ;;		_UART1_Initialize
 14103 ;; This function uses a reentrant model
 14104 ;;
 14105                           
 14106                           	psect	text62
 14107  006324                     __ptext62:
 14108                           	opt callstack 0
 14109  006324                     _UART1_SetTxInterruptHandler:
 14110                           	opt callstack 25
 14111                           
 14112                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 14113                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14114                           
 14115                           ; BSR set to: 57
 14116                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14117                           ;incstack = 0
 14118  006324  50E1               	movf	fsr1l,w,c
 14119  006326  0FFD               	addlw	-3
 14120  006328  6ED9               	movwf	fsr2l,c
 14121  00632A  50E2               	movf	fsr1h,w,c
 14122  00632C  6EDA               	movwf	fsr2h,c
 14123  00632E  0EFF               	movlw	255
 14124  006330  22DA               	addwfc	fsr2h,f,c
 14125  006332  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler
 14126  006338  006F FF78  F009    	movff	postinc2,_UART1_TxInterruptHandler+1
 14127  00633E  006F FF74  F00A    	movff	postdec2,_UART1_TxInterruptHandler+2
 14128                           
 14129                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14130  006344  52E5               	movf	postdec1,f,c
 14131  006346  52E5               	movf	postdec1,f,c
 14132  006348  52E5               	movf	postdec1,f,c
 14133  00634A  0012               	return		;funcret
 14134  00634C                     __end_of_UART1_SetTxInterruptHandler:
 14135                           	opt callstack 0
 14136                           
 14137 ;; *************** function _UART1_SetRxInterruptHandler *****************
 14138 ;; Defined at:
 14139 ;;		line 239 in file "mcc_generated_files/uart1.c"
 14140 ;; Parameters:    Size  Location     Type
 14141 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14142 ;;		 -> UART1_Receive_ISR(1), 
 14143 ;; Auto vars:     Size  Location     Type
 14144 ;;		None
 14145 ;; Return value:  Size  Location     Type
 14146 ;;                  1  [STACK] void 
 14147 ;; Registers used:
 14148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14149 ;; Tracked objects:
 14150 ;;		On entry : 3F/39
 14151 ;;		On exit  : 0/0
 14152 ;;		Unchanged: 0/0
 14153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14158 ;;Total ram usage:        0 bytes
 14159 ;; Hardware stack levels used:    1
 14160 ;; Hardware stack levels required when called:    3
 14161 ;; This function calls:
 14162 ;;		Nothing
 14163 ;; This function is called by:
 14164 ;;		_UART1_Initialize
 14165 ;; This function uses a reentrant model
 14166 ;;
 14167                           
 14168                           	psect	text63
 14169  00634C                     __ptext63:
 14170                           	opt callstack 0
 14171  00634C                     _UART1_SetRxInterruptHandler:
 14172                           	opt callstack 25
 14173                           
 14174                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 14175                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14176                           
 14177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14178                           ;incstack = 0
 14179  00634C  50E1               	movf	fsr1l,w,c
 14180  00634E  0FFD               	addlw	-3
 14181  006350  6ED9               	movwf	fsr2l,c
 14182  006352  50E2               	movf	fsr1h,w,c
 14183  006354  6EDA               	movwf	fsr2h,c
 14184  006356  0EFF               	movlw	255
 14185  006358  22DA               	addwfc	fsr2h,f,c
 14186  00635A  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler
 14187  006360  006F FF78  F00C    	movff	postinc2,_UART1_RxInterruptHandler+1
 14188  006366  006F FF74  F00D    	movff	postdec2,_UART1_RxInterruptHandler+2
 14189                           
 14190                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14191  00636C  52E5               	movf	postdec1,f,c
 14192  00636E  52E5               	movf	postdec1,f,c
 14193  006370  52E5               	movf	postdec1,f,c
 14194  006372  0012               	return		;funcret
 14195  006374                     __end_of_UART1_SetRxInterruptHandler:
 14196                           	opt callstack 0
 14197                           
 14198 ;; *************** function _TMR6_Initialize *****************
 14199 ;; Defined at:
 14200 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 14201 ;; Parameters:    Size  Location     Type
 14202 ;;		None
 14203 ;; Auto vars:     Size  Location     Type
 14204 ;;		None
 14205 ;; Return value:  Size  Location     Type
 14206 ;;                  1  [STACK] void 
 14207 ;; Registers used:
 14208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 14209 ;; Tracked objects:
 14210 ;;		On entry : 3F/39
 14211 ;;		On exit  : 0/0
 14212 ;;		Unchanged: 0/0
 14213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14218 ;;Total ram usage:        0 bytes
 14219 ;; Hardware stack levels used:    1
 14220 ;; Hardware stack levels required when called:    4
 14221 ;; This function calls:
 14222 ;;		_TMR6_SetInterruptHandler
 14223 ;; This function is called by:
 14224 ;;		_SYSTEM_Initialize
 14225 ;; This function uses a reentrant model
 14226 ;;
 14227                           
 14228                           	psect	text64
 14229  006374                     __ptext64:
 14230                           	opt callstack 0
 14231  006374                     _TMR6_Initialize:
 14232                           	opt callstack 25
 14233                           
 14234                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 14235                           
 14236                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14237                           ;incstack = 0
 14238  006374  0E01               	movlw	1
 14239  006376  6E96               	movwf	16278,c	;volatile
 14240                           
 14241                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 14242  006378  6A95               	clrf	16277,c	;volatile
 14243                           
 14244                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 14245  00637A  6A97               	clrf	16279,c	;volatile
 14246                           
 14247                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 14248  00637C  0E03               	movlw	3
 14249  00637E  6E93               	movwf	16275,c	;volatile
 14250                           
 14251                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 14252  006380  6A92               	clrf	16274,c	;volatile
 14253                           
 14254                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 14255  006382  0139               	movlb	57	; () banked
 14256  006384  91A9               	bcf	169,0,b	;volatile
 14257                           
 14258                           ; BSR set to: 57
 14259                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 14260  006386  8199               	bsf	153,0,b	;volatile
 14261                           
 14262                           ; BSR set to: 57
 14263                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 14264  006388  0E8C               	movlw	low _TMR6_DefaultInterruptHandler
 14265  00638A  6EE6               	movwf	postinc1,c
 14266  00638C  0E5E               	movlw	high _TMR6_DefaultInterruptHandler
 14267  00638E  6EE6               	movwf	postinc1,c
 14268  006390  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 14269  006392  6EE6               	movwf	postinc1,c
 14270  006394  ECCE  F031         	call	_TMR6_SetInterruptHandler	;wreg free
 14271                           
 14272                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 14273  006398  6894               	setf	16276,c	;volatile
 14274                           
 14275                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14276  00639A  0012               	return		;funcret
 14277  00639C                     __end_of_TMR6_Initialize:
 14278                           	opt callstack 0
 14279                           
 14280 ;; *************** function _TMR6_SetInterruptHandler *****************
 14281 ;; Defined at:
 14282 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 14283 ;; Parameters:    Size  Location     Type
 14284 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14285 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 14286 ;; Auto vars:     Size  Location     Type
 14287 ;;		None
 14288 ;; Return value:  Size  Location     Type
 14289 ;;                  1  [STACK] void 
 14290 ;; Registers used:
 14291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14292 ;; Tracked objects:
 14293 ;;		On entry : 3F/39
 14294 ;;		On exit  : 0/0
 14295 ;;		Unchanged: 0/0
 14296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14301 ;;Total ram usage:        0 bytes
 14302 ;; Hardware stack levels used:    1
 14303 ;; Hardware stack levels required when called:    3
 14304 ;; This function calls:
 14305 ;;		Nothing
 14306 ;; This function is called by:
 14307 ;;		_TMR6_Initialize
 14308 ;; This function uses a reentrant model
 14309 ;;
 14310                           
 14311                           	psect	text65
 14312  00639C                     __ptext65:
 14313                           	opt callstack 0
 14314  00639C                     _TMR6_SetInterruptHandler:
 14315                           	opt callstack 25
 14316                           
 14317                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 14318                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14319                           
 14320                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14321                           ;incstack = 0
 14322  00639C  50E1               	movf	fsr1l,w,c
 14323  00639E  0FFD               	addlw	-3
 14324  0063A0  6ED9               	movwf	fsr2l,c
 14325  0063A2  50E2               	movf	fsr1h,w,c
 14326  0063A4  6EDA               	movwf	fsr2h,c
 14327  0063A6  0EFF               	movlw	255
 14328  0063A8  22DA               	addwfc	fsr2h,f,c
 14329  0063AA  006F FF78  F0E8    	movff	postinc2,_TMR6_InterruptHandler
 14330  0063B0  006F FF78  F0E9    	movff	postinc2,_TMR6_InterruptHandler+1
 14331  0063B6  006F FF74  F0EA    	movff	postdec2,_TMR6_InterruptHandler+2
 14332                           
 14333                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14334  0063BC  52E5               	movf	postdec1,f,c
 14335  0063BE  52E5               	movf	postdec1,f,c
 14336  0063C0  52E5               	movf	postdec1,f,c
 14337  0063C2  0012               	return		;funcret
 14338  0063C4                     __end_of_TMR6_SetInterruptHandler:
 14339                           	opt callstack 0
 14340                           
 14341 ;; *************** function _TMR5_Initialize *****************
 14342 ;; Defined at:
 14343 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 14344 ;; Parameters:    Size  Location     Type
 14345 ;;		None
 14346 ;; Auto vars:     Size  Location     Type
 14347 ;;		None
 14348 ;; Return value:  Size  Location     Type
 14349 ;;                  1  [STACK] void 
 14350 ;; Registers used:
 14351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 14352 ;; Tracked objects:
 14353 ;;		On entry : 3F/3C
 14354 ;;		On exit  : 0/0
 14355 ;;		Unchanged: 0/0
 14356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14361 ;;Total ram usage:        0 bytes
 14362 ;; Hardware stack levels used:    1
 14363 ;; Hardware stack levels required when called:    4
 14364 ;; This function calls:
 14365 ;;		_TMR5_SetInterruptHandler
 14366 ;; This function is called by:
 14367 ;;		_SYSTEM_Initialize
 14368 ;; This function uses a reentrant model
 14369 ;;
 14370                           
 14371                           	psect	text66
 14372  005E46                     __ptext66:
 14373                           	opt callstack 0
 14374  005E46                     _TMR5_Initialize:
 14375                           	opt callstack 25
 14376                           
 14377                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 14378                           
 14379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14380                           ;incstack = 0
 14381  005E46  6A9B               	clrf	16283,c	;volatile
 14382                           
 14383                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 14384  005E48  6A9C               	clrf	16284,c	;volatile
 14385                           
 14386                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 14387  005E4A  0E01               	movlw	1
 14388  005E4C  6E9D               	movwf	16285,c	;volatile
 14389                           
 14390                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 14391  005E4E  0E63               	movlw	99
 14392  005E50  6E99               	movwf	16281,c	;volatile
 14393                           
 14394                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 14395  005E52  0EC0               	movlw	192
 14396  005E54  6E98               	movwf	16280,c	;volatile
 14397                           
 14398                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 14399  005E56  5098               	movf	16280,w,c	;volatile
 14400  005E58  006F FE64  F039    	movff	16281,btemp	;volatile
 14401  005E5E  6A3A               	clrf	btemp+1,c
 14402  005E60  0060  F0E4  F03A   	movff	btemp,btemp+1
 14403  005E66  6A39               	clrf	btemp,c
 14404  005E68  1039               	iorwf	btemp,w,c
 14405  005E6A  6E25               	movwf	_timer5ReloadVal,c	;volatile
 14406  005E6C  503A               	movf	btemp+1,w,c
 14407  005E6E  6E26               	movwf	_timer5ReloadVal+1,c	;volatile
 14408                           
 14409                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 14410  005E70  0139               	movlb	57	; () banked
 14411  005E72  9DA8               	bcf	168,6,b	;volatile
 14412                           
 14413                           ; BSR set to: 57
 14414                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 14415  005E74  8D98               	bsf	152,6,b	;volatile
 14416                           
 14417                           ; BSR set to: 57
 14418                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 14419  005E76  0E22               	movlw	low _TMR5_DefaultInterruptHandler
 14420  005E78  6EE6               	movwf	postinc1,c
 14421  005E7A  0E67               	movlw	high _TMR5_DefaultInterruptHandler
 14422  005E7C  6EE6               	movwf	postinc1,c
 14423  005E7E  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 14424  005E80  6EE6               	movwf	postinc1,c
 14425  005E82  ECE2  F031         	call	_TMR5_SetInterruptHandler	;wreg free
 14426                           
 14427                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 14428  005E86  0E31               	movlw	49
 14429  005E88  6E9A               	movwf	16282,c	;volatile
 14430                           
 14431                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14432  005E8A  0012               	return		;funcret
 14433  005E8C                     __end_of_TMR5_Initialize:
 14434                           	opt callstack 0
 14435                           
 14436 ;; *************** function _TMR5_SetInterruptHandler *****************
 14437 ;; Defined at:
 14438 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 14439 ;; Parameters:    Size  Location     Type
 14440 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14441 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 14442 ;; Auto vars:     Size  Location     Type
 14443 ;;		None
 14444 ;; Return value:  Size  Location     Type
 14445 ;;                  1  [STACK] void 
 14446 ;; Registers used:
 14447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14448 ;; Tracked objects:
 14449 ;;		On entry : 3F/39
 14450 ;;		On exit  : 0/0
 14451 ;;		Unchanged: 0/0
 14452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14457 ;;Total ram usage:        0 bytes
 14458 ;; Hardware stack levels used:    1
 14459 ;; Hardware stack levels required when called:    3
 14460 ;; This function calls:
 14461 ;;		Nothing
 14462 ;; This function is called by:
 14463 ;;		_TMR5_Initialize
 14464 ;; This function uses a reentrant model
 14465 ;;
 14466                           
 14467                           	psect	text67
 14468  0063C4                     __ptext67:
 14469                           	opt callstack 0
 14470  0063C4                     _TMR5_SetInterruptHandler:
 14471                           	opt callstack 25
 14472                           
 14473                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 14474                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14475                           
 14476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14477                           ;incstack = 0
 14478  0063C4  50E1               	movf	fsr1l,w,c
 14479  0063C6  0FFD               	addlw	-3
 14480  0063C8  6ED9               	movwf	fsr2l,c
 14481  0063CA  50E2               	movf	fsr1h,w,c
 14482  0063CC  6EDA               	movwf	fsr2h,c
 14483  0063CE  0EFF               	movlw	255
 14484  0063D0  22DA               	addwfc	fsr2h,f,c
 14485  0063D2  006F FF78  F0E5    	movff	postinc2,_TMR5_InterruptHandler
 14486  0063D8  006F FF78  F0E6    	movff	postinc2,_TMR5_InterruptHandler+1
 14487  0063DE  006F FF74  F0E7    	movff	postdec2,_TMR5_InterruptHandler+2
 14488                           
 14489                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14490  0063E4  52E5               	movf	postdec1,f,c
 14491  0063E6  52E5               	movf	postdec1,f,c
 14492  0063E8  52E5               	movf	postdec1,f,c
 14493  0063EA  0012               	return		;funcret
 14494  0063EC                     __end_of_TMR5_SetInterruptHandler:
 14495                           	opt callstack 0
 14496                           
 14497 ;; *************** function _SPI1_Initialize *****************
 14498 ;; Defined at:
 14499 ;;		line 64 in file "mcc_generated_files/spi1.c"
 14500 ;; Parameters:    Size  Location     Type
 14501 ;;		None
 14502 ;; Auto vars:     Size  Location     Type
 14503 ;;		None
 14504 ;; Return value:  Size  Location     Type
 14505 ;;                  1  [STACK] void 
 14506 ;; Registers used:
 14507 ;;		wreg, status,2
 14508 ;; Tracked objects:
 14509 ;;		On entry : 3F/39
 14510 ;;		On exit  : 3F/3D
 14511 ;;		Unchanged: 0/0
 14512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14517 ;;Total ram usage:        0 bytes
 14518 ;; Hardware stack levels used:    1
 14519 ;; Hardware stack levels required when called:    3
 14520 ;; This function calls:
 14521 ;;		Nothing
 14522 ;; This function is called by:
 14523 ;;		_SYSTEM_Initialize
 14524 ;; This function uses a reentrant model
 14525 ;;
 14526                           
 14527                           	psect	text68
 14528  00673C                     __ptext68:
 14529                           	opt callstack 0
 14530  00673C                     _SPI1_Initialize:
 14531                           	opt callstack 26
 14532                           
 14533                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 14534                           
 14535                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14536                           ;incstack = 0
 14537  00673C  0E40               	movlw	64
 14538  00673E  013D               	movlb	61	; () banked
 14539  006740  6F15               	movwf	21,b	;volatile
 14540                           
 14541                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 14542  006742  0E03               	movlw	3
 14543  006744  6F16               	movwf	22,b	;volatile
 14544                           
 14545                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 14546  006746  0E4F               	movlw	79
 14547  006748  6F19               	movwf	25,b	;volatile
 14548                           
 14549                           ; BSR set to: 61
 14550                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 14551  00674A  6B1C               	clrf	28,b	;volatile
 14552                           
 14553                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 14554  00674C  0E83               	movlw	131
 14555  00674E  6F14               	movwf	20,b	;volatile
 14556                           
 14557                           ; BSR set to: 61
 14558                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14559  006750  0012               	return		;funcret
 14560  006752                     __end_of_SPI1_Initialize:
 14561                           	opt callstack 0
 14562                           
 14563 ;; *************** function _PMD_Initialize *****************
 14564 ;; Defined at:
 14565 ;;		line 88 in file "mcc_generated_files/mcc.c"
 14566 ;; Parameters:    Size  Location     Type
 14567 ;;		None
 14568 ;; Auto vars:     Size  Location     Type
 14569 ;;		None
 14570 ;; Return value:  Size  Location     Type
 14571 ;;                  1  [STACK] void 
 14572 ;; Registers used:
 14573 ;;		None
 14574 ;; Tracked objects:
 14575 ;;		On entry : 3F/39
 14576 ;;		On exit  : 3F/39
 14577 ;;		Unchanged: 0/0
 14578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14583 ;;Total ram usage:        0 bytes
 14584 ;; Hardware stack levels used:    1
 14585 ;; Hardware stack levels required when called:    3
 14586 ;; This function calls:
 14587 ;;		Nothing
 14588 ;; This function is called by:
 14589 ;;		_SYSTEM_Initialize
 14590 ;; This function uses a reentrant model
 14591 ;;
 14592                           
 14593                           	psect	text69
 14594  006768                     __ptext69:
 14595                           	opt callstack 0
 14596  006768                     _PMD_Initialize:
 14597                           	opt callstack 26
 14598                           
 14599                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 14600                           
 14601                           ; BSR set to: 61
 14602                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14603                           ;incstack = 0
 14604  006768  0139               	movlb	57	; () banked
 14605  00676A  6BC0               	clrf	192,b	;volatile
 14606                           
 14607                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 14608  00676C  6BC1               	clrf	193,b	;volatile
 14609                           
 14610                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 14611  00676E  6BC2               	clrf	194,b	;volatile
 14612                           
 14613                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 14614  006770  6BC3               	clrf	195,b	;volatile
 14615                           
 14616                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 14617  006772  6BC4               	clrf	196,b	;volatile
 14618                           
 14619                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 14620  006774  6BC5               	clrf	197,b	;volatile
 14621                           
 14622                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 14623  006776  6BC6               	clrf	198,b	;volatile
 14624                           
 14625                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 14626  006778  6BC7               	clrf	199,b	;volatile
 14627                           
 14628                           ; BSR set to: 57
 14629                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 14630  00677A  0012               	return		;funcret
 14631  00677C                     __end_of_PMD_Initialize:
 14632                           	opt callstack 0
 14633                           
 14634 ;; *************** function _PIN_MANAGER_Initialize *****************
 14635 ;; Defined at:
 14636 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 14637 ;; Parameters:    Size  Location     Type
 14638 ;;		None
 14639 ;; Auto vars:     Size  Location     Type
 14640 ;;		None
 14641 ;; Return value:  Size  Location     Type
 14642 ;;                  1  [STACK] void 
 14643 ;; Registers used:
 14644 ;;		wreg, status,2
 14645 ;; Tracked objects:
 14646 ;;		On entry : 3F/39
 14647 ;;		On exit  : 3F/3A
 14648 ;;		Unchanged: 0/0
 14649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14654 ;;Total ram usage:        0 bytes
 14655 ;; Hardware stack levels used:    1
 14656 ;; Hardware stack levels required when called:    3
 14657 ;; This function calls:
 14658 ;;		Nothing
 14659 ;; This function is called by:
 14660 ;;		_SYSTEM_Initialize
 14661 ;; This function uses a reentrant model
 14662 ;;
 14663                           
 14664                           	psect	text70
 14665  005734                     __ptext70:
 14666                           	opt callstack 0
 14667  005734                     _PIN_MANAGER_Initialize:
 14668                           	opt callstack 26
 14669                           
 14670                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 14671                           
 14672                           ; BSR set to: 57
 14673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14674                           ;incstack = 0
 14675  005734  0E07               	movlw	7
 14676  005736  6EBE               	movwf	16318,c	;volatile
 14677                           
 14678                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 14679  005738  6ABD               	clrf	16317,c	;volatile
 14680                           
 14681                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 14682  00573A  6ABA               	clrf	16314,c	;volatile
 14683                           
 14684                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 14685  00573C  6ABF               	clrf	16319,c	;volatile
 14686                           
 14687                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 14688  00573E  6ABB               	clrf	16315,c	;volatile
 14689                           
 14690                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 14691  005740  0E06               	movlw	6
 14692  005742  6EBC               	movwf	16316,c	;volatile
 14693                           
 14694                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 14695  005744  6AC6               	clrf	16326,c	;volatile
 14696                           
 14697                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 14698  005746  68C7               	setf	16327,c	;volatile
 14699                           
 14700                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 14701  005748  0E8F               	movlw	143
 14702  00574A  6EC2               	movwf	16322,c	;volatile
 14703                           
 14704                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 14705  00574C  0EBF               	movlw	191
 14706  00574E  6EC3               	movwf	16323,c	;volatile
 14707                           
 14708                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 14709  005750  0E91               	movlw	145
 14710  005752  6EC4               	movwf	16324,c	;volatile
 14711                           
 14712                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 14713  005754  0E0C               	movlw	12
 14714  005756  6EC5               	movwf	16325,c	;volatile
 14715                           
 14716                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 14717  005758  013A               	movlb	58	; () banked
 14718  00575A  6B70               	clrf	112,b	;volatile
 14719                           
 14720                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 14721  00575C  0E01               	movlw	1
 14722  00575E  6F60               	movwf	96,b	;volatile
 14723                           
 14724                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 14725  005760  0E38               	movlw	56
 14726  005762  6F50               	movwf	80,b	;volatile
 14727                           
 14728                           ; BSR set to: 58
 14729                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 14730  005764  6B80               	clrf	128,b	;volatile
 14731                           
 14732                           ; BSR set to: 58
 14733                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 14734  005766  6990               	setf	144,b	;volatile
 14735                           
 14736                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 14737  005768  0E8F               	movlw	143
 14738  00576A  6F40               	movwf	64,b	;volatile
 14739                           
 14740                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0xFC;
 14741  00576C  0EFC               	movlw	252
 14742  00576E  6F71               	movwf	113,b	;volatile
 14743                           
 14744                           ; BSR set to: 58
 14745                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 14746  005770  6B91               	clrf	145,b	;volatile
 14747                           
 14748                           ; BSR set to: 58
 14749                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 14750  005772  6B81               	clrf	129,b	;volatile
 14751                           
 14752                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 14753  005774  0E87               	movlw	135
 14754  005776  6F51               	movwf	81,b	;volatile
 14755                           
 14756                           ; BSR set to: 58
 14757                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 14758  005778  6B41               	clrf	65,b	;volatile
 14759                           
 14760                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 14761  00577A  0E90               	movlw	144
 14762  00577C  6F61               	movwf	97,b	;volatile
 14763                           
 14764                           ; BSR set to: 58
 14765                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 14766  00577E  6B82               	clrf	130,b	;volatile
 14767                           
 14768                           ; BSR set to: 58
 14769                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 14770  005780  6B92               	clrf	146,b	;volatile
 14771                           
 14772                           ; BSR set to: 58
 14773                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 14774  005782  6B42               	clrf	66,b	;volatile
 14775                           
 14776                           ; BSR set to: 58
 14777                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 14778  005784  6B52               	clrf	82,b	;volatile
 14779                           
 14780                           ; BSR set to: 58
 14781                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 14782  005786  6B62               	clrf	98,b	;volatile
 14783                           
 14784                           ; BSR set to: 58
 14785                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 14786  005788  6B72               	clrf	114,b	;volatile
 14787                           
 14788                           ; BSR set to: 58
 14789                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 14790  00578A  6943               	setf	67,b	;volatile
 14791                           
 14792                           ; BSR set to: 58
 14793                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 14794  00578C  6953               	setf	83,b	;volatile
 14795                           
 14796                           ; BSR set to: 58
 14797                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 14798  00578E  6963               	setf	99,b	;volatile
 14799                           
 14800                           ; BSR set to: 58
 14801                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 14802  005790  6973               	setf	115,b	;volatile
 14803                           
 14804                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 14805  005792  0E07               	movlw	7
 14806  005794  6F83               	movwf	131,b	;volatile
 14807                           
 14808                           ; BSR set to: 58
 14809                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 14810  005796  6993               	setf	147,b	;volatile
 14811                           
 14812                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 14813  005798  0E0F               	movlw	15
 14814  00579A  6FE8               	movwf	232,b	;volatile
 14815                           
 14816                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 14817  00579C  0E16               	movlw	22
 14818  00579E  6F0E               	movwf	14,b	;volatile
 14819                           
 14820                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 14821  0057A0  0E1E               	movlw	30
 14822  0057A2  6F13               	movwf	19,b	;volatile
 14823                           
 14824                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 14825  0057A4  0E08               	movlw	8
 14826  0057A6  6FC0               	movwf	192,b	;volatile
 14827                           
 14828                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 14829  0057A8  0E0A               	movlw	10
 14830  0057AA  6FC2               	movwf	194,b	;volatile
 14831                           
 14832                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 14833  0057AC  0E09               	movlw	9
 14834  0057AE  6FC1               	movwf	193,b	;volatile
 14835                           
 14836                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 14837  0057B0  0E17               	movlw	23
 14838  0057B2  6FE5               	movwf	229,b	;volatile
 14839                           
 14840                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 14841  0057B4  0E13               	movlw	19
 14842  0057B6  6FDE               	movwf	222,b	;volatile
 14843                           
 14844                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 14845  0057B8  0E01               	movlw	1
 14846  0057BA  6F04               	movwf	4,b	;volatile
 14847                           
 14848                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 14849  0057BC  0E26               	movlw	38
 14850  0057BE  6F05               	movwf	5,b	;volatile
 14851                           
 14852                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 14853  0057C0  0E28               	movlw	40
 14854  0057C2  6F06               	movwf	6,b	;volatile
 14855                           
 14856                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 14857  0057C4  0E1F               	movlw	31
 14858  0057C6  6F15               	movwf	21,b	;volatile
 14859                           
 14860                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 14861  0057C8  0E13               	movlw	19
 14862  0057CA  6F16               	movwf	22,b	;volatile
 14863                           
 14864                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 14865  0057CC  0E14               	movlw	20
 14866  0057CE  6FDF               	movwf	223,b	;volatile
 14867                           
 14868                           ; BSR set to: 58
 14869                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 14870  0057D0  0012               	return		;funcret
 14871  0057D2                     __end_of_PIN_MANAGER_Initialize:
 14872                           	opt callstack 0
 14873                           
 14874 ;; *************** function _OSCILLATOR_Initialize *****************
 14875 ;; Defined at:
 14876 ;;		line 70 in file "mcc_generated_files/mcc.c"
 14877 ;; Parameters:    Size  Location     Type
 14878 ;;		None
 14879 ;; Auto vars:     Size  Location     Type
 14880 ;;		None
 14881 ;; Return value:  Size  Location     Type
 14882 ;;                  1  [STACK] void 
 14883 ;; Registers used:
 14884 ;;		wreg, status,2
 14885 ;; Tracked objects:
 14886 ;;		On entry : 3F/3A
 14887 ;;		On exit  : 3F/39
 14888 ;;		Unchanged: 0/0
 14889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14894 ;;Total ram usage:        0 bytes
 14895 ;; Hardware stack levels used:    1
 14896 ;; Hardware stack levels required when called:    3
 14897 ;; This function calls:
 14898 ;;		Nothing
 14899 ;; This function is called by:
 14900 ;;		_SYSTEM_Initialize
 14901 ;; This function uses a reentrant model
 14902 ;;
 14903                           
 14904                           	psect	text71
 14905  006752                     __ptext71:
 14906                           	opt callstack 0
 14907  006752                     _OSCILLATOR_Initialize:
 14908                           	opt callstack 26
 14909                           
 14910                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 14911                           
 14912                           ; BSR set to: 58
 14913                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14914                           ;incstack = 0
 14915  006752  0E20               	movlw	32
 14916  006754  0139               	movlb	57	; () banked
 14917  006756  6FD9               	movwf	217,b	;volatile
 14918                           
 14919                           ; BSR set to: 57
 14920                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 14921  006758  6BDB               	clrf	219,b	;volatile
 14922                           
 14923                           ; BSR set to: 57
 14924                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 14925  00675A  6BDD               	clrf	221,b	;volatile
 14926                           
 14927                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 14928  00675C  0E02               	movlw	2
 14929  00675E  6FDF               	movwf	223,b	;volatile
 14930                           
 14931                           ; BSR set to: 57
 14932                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 14933  006760  6BDE               	clrf	222,b	;volatile
 14934  006762                     l194:
 14935                           
 14936                           ; BSR set to: 57
 14937                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 14938  006762  B1DC               	btfsc	220,0,b	;volatile
 14939  006764  0012               	return	
 14940  006766  D7FD               	goto	l194
 14941  006768                     __end_of_OSCILLATOR_Initialize:
 14942                           	opt callstack 0
 14943                           
 14944 ;; *************** function _NCO1_Initialize *****************
 14945 ;; Defined at:
 14946 ;;		line 58 in file "mcc_generated_files/nco1.c"
 14947 ;; Parameters:    Size  Location     Type
 14948 ;;		None
 14949 ;; Auto vars:     Size  Location     Type
 14950 ;;		None
 14951 ;; Return value:  Size  Location     Type
 14952 ;;                  1  [STACK] void 
 14953 ;; Registers used:
 14954 ;;		wreg, status,2
 14955 ;; Tracked objects:
 14956 ;;		On entry : 0/39
 14957 ;;		On exit  : 3F/3F
 14958 ;;		Unchanged: 0/0
 14959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14964 ;;Total ram usage:        0 bytes
 14965 ;; Hardware stack levels used:    1
 14966 ;; Hardware stack levels required when called:    3
 14967 ;; This function calls:
 14968 ;;		Nothing
 14969 ;; This function is called by:
 14970 ;;		_SYSTEM_Initialize
 14971 ;; This function uses a reentrant model
 14972 ;;
 14973                           
 14974                           	psect	text72
 14975  0066B6                     __ptext72:
 14976                           	opt callstack 0
 14977  0066B6                     _NCO1_Initialize:
 14978                           	opt callstack 26
 14979                           
 14980                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 14981                           
 14982                           ; BSR set to: 57
 14983                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14984                           ;incstack = 0
 14985  0066B6  013F               	movlb	63	; () banked
 14986  0066B8  6B3E               	clrf	62,b	;volatile
 14987                           
 14988                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 14989  0066BA  6B3F               	clrf	63,b	;volatile
 14990                           
 14991                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 14992  0066BC  6B3A               	clrf	58,b	;volatile
 14993                           
 14994                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 14995  0066BE  6B39               	clrf	57,b	;volatile
 14996                           
 14997                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 14998  0066C0  6B38               	clrf	56,b	;volatile
 14999                           
 15000                           ; BSR set to: 63
 15001                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 15002  0066C2  0E06               	movlw	6
 15003  0066C4  6F3D               	movwf	61,b	;volatile
 15004                           
 15005                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 15006  0066C6  0EC7               	movlw	199
 15007  0066C8  6F3C               	movwf	60,b	;volatile
 15008                           
 15009                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 15010  0066CA  0EAE               	movlw	174
 15011  0066CC  6F3B               	movwf	59,b	;volatile
 15012                           
 15013                           ; BSR set to: 63
 15014                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 15015  0066CE  8F3E               	bsf	62,7,b	;volatile
 15016                           
 15017                           ; BSR set to: 63
 15018                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15019  0066D0  0012               	return		;funcret
 15020  0066D2                     __end_of_NCO1_Initialize:
 15021                           	opt callstack 0
 15022                           
 15023 ;; *************** function _INTERRUPT_Initialize *****************
 15024 ;; Defined at:
 15025 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15026 ;; Parameters:    Size  Location     Type
 15027 ;;		None
 15028 ;; Auto vars:     Size  Location     Type
 15029 ;;  state           1  [STACK] _Bool 
 15030 ;; Return value:  Size  Location     Type
 15031 ;;                  1  [STACK] void 
 15032 ;; Registers used:
 15033 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 15034 ;; Tracked objects:
 15035 ;;		On entry : 0/0
 15036 ;;		On exit  : 3F/39
 15037 ;;		Unchanged: 0/0
 15038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15043 ;;Total ram usage:        0 bytes
 15044 ;; Hardware stack levels used:    1
 15045 ;; Hardware stack levels required when called:    3
 15046 ;; This function calls:
 15047 ;;		Nothing
 15048 ;; This function is called by:
 15049 ;;		_SYSTEM_Initialize
 15050 ;; This function uses a reentrant model
 15051 ;;
 15052                           
 15053                           	psect	text73
 15054  005A86                     __ptext73:
 15055                           	opt callstack 0
 15056  005A86                     _INTERRUPT_Initialize:
 15057                           	opt callstack 0
 15058                           
 15059                           ; BSR set to: 63
 15060                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15061  005A86  52E6               	movf	postinc1,f,c
 15062                           
 15063                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 15064                           
 15065                           ;incstack = 0
 15066  005A88  8AD2               	bsf	16338,5,c	;volatile
 15067                           
 15068                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 15069  005A8A  AED2               	btfss	16338,7,c	;volatile
 15070  005A8C  D003               	goto	u3480
 15071  005A8E  6A44               	clrf	btemp+11,c
 15072  005A90  2A44               	incf	btemp+11,f,c
 15073  005A92  D001               	goto	u3498
 15074  005A94                     u3480:
 15075  005A94  6A44               	clrf	btemp+11,c
 15076  005A96                     u3498:
 15077                           
 15078                           ;stkvar	_state @ sp[(-1)+0]
 15079  005A96  0EFF               	movlw	-1
 15080  005A98  0060  F113  FFE3   	movff	btemp+11,plusw1
 15081                           
 15082                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 15083  005A9E  9ED2               	bcf	16338,7,c	;volatile
 15084                           
 15085                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 15086  005AA0  0E55               	movlw	85
 15087  005AA2  6ED4               	movwf	16340,c	;volatile
 15088                           
 15089                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 15090  005AA4  0EAA               	movlw	170
 15091  005AA6  6ED4               	movwf	16340,c	;volatile
 15092                           
 15093                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 15094  005AA8  90D4               	bcf	16340,0,c	;volatile
 15095                           
 15096                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 15097  005AAA  0138               	movlb	56	; () banked
 15098  005AAC  6B9F               	clrf	159,b	;volatile
 15099                           
 15100                           ; BSR set to: 56
 15101                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 15102  005AAE  6B9E               	clrf	158,b	;volatile
 15103                           
 15104                           ; BSR set to: 56
 15105                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 15106  005AB0  0E08               	movlw	8
 15107  005AB2  6F9D               	movwf	157,b	;volatile
 15108                           
 15109                           ; BSR set to: 56
 15110                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 15111  005AB4  0E55               	movlw	85
 15112  005AB6  6ED4               	movwf	16340,c	;volatile
 15113                           
 15114                           ; BSR set to: 56
 15115                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 15116  005AB8  0EAA               	movlw	170
 15117  005ABA  6ED4               	movwf	16340,c	;volatile
 15118                           
 15119                           ; BSR set to: 56
 15120                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 15121  005ABC  80D4               	bsf	16340,0,c	;volatile
 15122                           
 15123                           ; BSR set to: 56
 15124                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 15125                           ;stkvar	_state @ sp[(-1)+0]
 15126  005ABE  0EFF               	movlw	-1
 15127  005AC0  B0E3               	btfsc	plusw1,0,c
 15128  005AC2  D002               	bra	u3505
 15129  005AC4  9ED2               	bcf	16338,7,c	;volatile
 15130  005AC6  D001               	bra	u3506
 15131  005AC8                     u3505:
 15132  005AC8  8ED2               	bsf	16338,7,c	;volatile
 15133  005ACA                     u3506:
 15134                           
 15135                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 15136  005ACA  0139               	movlb	57	; () banked
 15137  005ACC  8782               	bsf	130,3,b	;volatile
 15138                           
 15139                           ; BSR set to: 57
 15140                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 15141  005ACE  8382               	bsf	130,1,b	;volatile
 15142                           
 15143                           ; BSR set to: 57
 15144                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 15145  005AD0  8182               	bsf	130,0,b	;volatile
 15146                           
 15147                           ; BSR set to: 57
 15148                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 15149  005AD2  8582               	bsf	130,2,b	;volatile
 15150                           
 15151                           ; BSR set to: 57
 15152                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 15153  005AD4  8786               	bsf	134,3,b	;volatile
 15154                           
 15155                           ; BSR set to: 57
 15156                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 15157  005AD6  8586               	bsf	134,2,b	;volatile
 15158                           
 15159                           ; BSR set to: 57
 15160                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 15161  005AD8  8983               	bsf	131,4,b	;volatile
 15162                           
 15163                           ; BSR set to: 57
 15164                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 15165  005ADA  8783               	bsf	131,3,b	;volatile
 15166                           
 15167                           ; BSR set to: 57
 15168                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 15169  005ADC  8181               	bsf	129,0,b	;volatile
 15170                           
 15171                           ; BSR set to: 57
 15172                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 15173  005ADE  8185               	bsf	133,0,b	;volatile
 15174                           
 15175                           ; BSR set to: 57
 15176                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 15177  005AE0  8B87               	bsf	135,5,b	;volatile
 15178                           
 15179                           ; BSR set to: 57
 15180                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 15181  005AE2  8189               	bsf	137,0,b	;volatile
 15182                           
 15183                           ; BSR set to: 57
 15184                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 15185  005AE4  8D88               	bsf	136,6,b	;volatile
 15186                           
 15187                           ; BSR set to: 57
 15188                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 15189  005AE6  8581               	bsf	129,2,b	;volatile
 15190                           
 15191                           ; BSR set to: 57
 15192                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 15193  005AE8  52E5               	movf	postdec1,f,c
 15194  005AEA  0012               	return		;funcret
 15195  005AEC                     __end_of_INTERRUPT_Initialize:
 15196                           	opt callstack 0
 15197                           
 15198 ;; *************** function _EXT_INT_Initialize *****************
 15199 ;; Defined at:
 15200 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 15201 ;; Parameters:    Size  Location     Type
 15202 ;;		None
 15203 ;; Auto vars:     Size  Location     Type
 15204 ;;		None
 15205 ;; Return value:  Size  Location     Type
 15206 ;;                  1  [STACK] void 
 15207 ;; Registers used:
 15208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15209 ;; Tracked objects:
 15210 ;;		On entry : 3F/3F
 15211 ;;		On exit  : 3F/39
 15212 ;;		Unchanged: 0/0
 15213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15218 ;;Total ram usage:        0 bytes
 15219 ;; Hardware stack levels used:    1
 15220 ;; Hardware stack levels required when called:    4
 15221 ;; This function calls:
 15222 ;;		_INT0_SetInterruptHandler
 15223 ;;		_INT1_SetInterruptHandler
 15224 ;;		_INT2_SetInterruptHandler
 15225 ;; This function is called by:
 15226 ;;		_SYSTEM_Initialize
 15227 ;; This function uses a reentrant model
 15228 ;;
 15229                           
 15230                           	psect	text74
 15231  005D6A                     __ptext74:
 15232                           	opt callstack 0
 15233  005D6A                     _EXT_INT_Initialize:
 15234                           	opt callstack 25
 15235                           
 15236                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 15237                           
 15238                           ; BSR set to: 57
 15239                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15240                           ;incstack = 0
 15241  005D6A  0139               	movlb	57	; () banked
 15242  005D6C  91A1               	bcf	161,0,b	;volatile
 15243                           
 15244                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 15245  005D6E  90D2               	bcf	16338,0,c	;volatile
 15246                           
 15247                           ; BSR set to: 57
 15248                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 15249  005D70  0E2A               	movlw	low _INT0_DefaultInterruptHandler
 15250  005D72  6EE6               	movwf	postinc1,c
 15251  005D74  0E68               	movlw	high _INT0_DefaultInterruptHandler
 15252  005D76  6EE6               	movwf	postinc1,c
 15253  005D78  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 15254  005D7A  6EE6               	movwf	postinc1,c
 15255  005D7C  EC1E  F032         	call	_INT0_SetInterruptHandler	;wreg free
 15256                           
 15257                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 15258  005D80  0139               	movlb	57	; () banked
 15259  005D82  8191               	bsf	145,0,b	;volatile
 15260                           
 15261                           ; BSR set to: 57
 15262                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 15263  005D84  91A5               	bcf	165,0,b	;volatile
 15264                           
 15265                           ; BSR set to: 57
 15266                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 15267  005D86  92D2               	bcf	16338,1,c	;volatile
 15268                           
 15269                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 15270  005D88  0E2C               	movlw	low _INT1_DefaultInterruptHandler
 15271  005D8A  6EE6               	movwf	postinc1,c
 15272  005D8C  0E68               	movlw	high _INT1_DefaultInterruptHandler
 15273  005D8E  6EE6               	movwf	postinc1,c
 15274  005D90  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 15275  005D92  6EE6               	movwf	postinc1,c
 15276  005D94  EC0A  F032         	call	_INT1_SetInterruptHandler	;wreg free
 15277                           
 15278                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 15279  005D98  0139               	movlb	57	; () banked
 15280  005D9A  8195               	bsf	149,0,b	;volatile
 15281                           
 15282                           ; BSR set to: 57
 15283                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 15284  005D9C  9BA7               	bcf	167,5,b	;volatile
 15285                           
 15286                           ; BSR set to: 57
 15287                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 15288  005D9E  94D2               	bcf	16338,2,c	;volatile
 15289                           
 15290                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 15291  005DA0  0E2E               	movlw	low _INT2_DefaultInterruptHandler
 15292  005DA2  6EE6               	movwf	postinc1,c
 15293  005DA4  0E68               	movlw	high _INT2_DefaultInterruptHandler
 15294  005DA6  6EE6               	movwf	postinc1,c
 15295  005DA8  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 15296  005DAA  6EE6               	movwf	postinc1,c
 15297  005DAC  ECF6  F031         	call	_INT2_SetInterruptHandler	;wreg free
 15298                           
 15299                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 15300  005DB0  0139               	movlb	57	; () banked
 15301  005DB2  8B97               	bsf	151,5,b	;volatile
 15302                           
 15303                           ; BSR set to: 57
 15304                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 15305  005DB4  0012               	return		;funcret
 15306  005DB6                     __end_of_EXT_INT_Initialize:
 15307                           	opt callstack 0
 15308                           
 15309 ;; *************** function _INT2_SetInterruptHandler *****************
 15310 ;; Defined at:
 15311 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 15312 ;; Parameters:    Size  Location     Type
 15313 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15314 ;;		 -> INT2_DefaultInterruptHandler(1), 
 15315 ;; Auto vars:     Size  Location     Type
 15316 ;;		None
 15317 ;; Return value:  Size  Location     Type
 15318 ;;                  1  [STACK] void 
 15319 ;; Registers used:
 15320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15321 ;; Tracked objects:
 15322 ;;		On entry : 3F/39
 15323 ;;		On exit  : 0/0
 15324 ;;		Unchanged: 0/0
 15325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15330 ;;Total ram usage:        0 bytes
 15331 ;; Hardware stack levels used:    1
 15332 ;; Hardware stack levels required when called:    3
 15333 ;; This function calls:
 15334 ;;		Nothing
 15335 ;; This function is called by:
 15336 ;;		_EXT_INT_Initialize
 15337 ;; This function uses a reentrant model
 15338 ;;
 15339                           
 15340                           	psect	text75
 15341  0063EC                     __ptext75:
 15342                           	opt callstack 0
 15343  0063EC                     _INT2_SetInterruptHandler:
 15344                           	opt callstack 25
 15345                           
 15346                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 15347                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15348                           
 15349                           ; BSR set to: 57
 15350                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15351                           ;incstack = 0
 15352  0063EC  50E1               	movf	fsr1l,w,c
 15353  0063EE  0FFD               	addlw	-3
 15354  0063F0  6ED9               	movwf	fsr2l,c
 15355  0063F2  50E2               	movf	fsr1h,w,c
 15356  0063F4  6EDA               	movwf	fsr2h,c
 15357  0063F6  0EFF               	movlw	255
 15358  0063F8  22DA               	addwfc	fsr2h,f,c
 15359  0063FA  006F FF78  F014    	movff	postinc2,_INT2_InterruptHandler
 15360  006400  006F FF78  F015    	movff	postinc2,_INT2_InterruptHandler+1
 15361  006406  006F FF74  F016    	movff	postdec2,_INT2_InterruptHandler+2
 15362                           
 15363                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 15364  00640C  52E5               	movf	postdec1,f,c
 15365  00640E  52E5               	movf	postdec1,f,c
 15366  006410  52E5               	movf	postdec1,f,c
 15367  006412  0012               	return		;funcret
 15368  006414                     __end_of_INT2_SetInterruptHandler:
 15369                           	opt callstack 0
 15370                           
 15371 ;; *************** function _INT1_SetInterruptHandler *****************
 15372 ;; Defined at:
 15373 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 15374 ;; Parameters:    Size  Location     Type
 15375 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15376 ;;		 -> INT1_DefaultInterruptHandler(1), 
 15377 ;; Auto vars:     Size  Location     Type
 15378 ;;		None
 15379 ;; Return value:  Size  Location     Type
 15380 ;;                  1  [STACK] void 
 15381 ;; Registers used:
 15382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15383 ;; Tracked objects:
 15384 ;;		On entry : 3F/39
 15385 ;;		On exit  : 0/0
 15386 ;;		Unchanged: 0/0
 15387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15392 ;;Total ram usage:        0 bytes
 15393 ;; Hardware stack levels used:    1
 15394 ;; Hardware stack levels required when called:    3
 15395 ;; This function calls:
 15396 ;;		Nothing
 15397 ;; This function is called by:
 15398 ;;		_EXT_INT_Initialize
 15399 ;; This function uses a reentrant model
 15400 ;;
 15401                           
 15402                           	psect	text76
 15403  006414                     __ptext76:
 15404                           	opt callstack 0
 15405  006414                     _INT1_SetInterruptHandler:
 15406                           	opt callstack 25
 15407                           
 15408                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 15409                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15410                           
 15411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15412                           ;incstack = 0
 15413  006414  50E1               	movf	fsr1l,w,c
 15414  006416  0FFD               	addlw	-3
 15415  006418  6ED9               	movwf	fsr2l,c
 15416  00641A  50E2               	movf	fsr1h,w,c
 15417  00641C  6EDA               	movwf	fsr2h,c
 15418  00641E  0EFF               	movlw	255
 15419  006420  22DA               	addwfc	fsr2h,f,c
 15420  006422  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler
 15421  006428  006F FF78  F018    	movff	postinc2,_INT1_InterruptHandler+1
 15422  00642E  006F FF74  F019    	movff	postdec2,_INT1_InterruptHandler+2
 15423                           
 15424                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 15425  006434  52E5               	movf	postdec1,f,c
 15426  006436  52E5               	movf	postdec1,f,c
 15427  006438  52E5               	movf	postdec1,f,c
 15428  00643A  0012               	return		;funcret
 15429  00643C                     __end_of_INT1_SetInterruptHandler:
 15430                           	opt callstack 0
 15431                           
 15432 ;; *************** function _INT0_SetInterruptHandler *****************
 15433 ;; Defined at:
 15434 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 15435 ;; Parameters:    Size  Location     Type
 15436 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15437 ;;		 -> INT0_DefaultInterruptHandler(1), 
 15438 ;; Auto vars:     Size  Location     Type
 15439 ;;		None
 15440 ;; Return value:  Size  Location     Type
 15441 ;;                  1  [STACK] void 
 15442 ;; Registers used:
 15443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15444 ;; Tracked objects:
 15445 ;;		On entry : 3F/39
 15446 ;;		On exit  : 0/0
 15447 ;;		Unchanged: 0/0
 15448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15453 ;;Total ram usage:        0 bytes
 15454 ;; Hardware stack levels used:    1
 15455 ;; Hardware stack levels required when called:    3
 15456 ;; This function calls:
 15457 ;;		Nothing
 15458 ;; This function is called by:
 15459 ;;		_EXT_INT_Initialize
 15460 ;; This function uses a reentrant model
 15461 ;;
 15462                           
 15463                           	psect	text77
 15464  00643C                     __ptext77:
 15465                           	opt callstack 0
 15466  00643C                     _INT0_SetInterruptHandler:
 15467                           	opt callstack 25
 15468                           
 15469                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 15470                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15471                           
 15472                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15473                           ;incstack = 0
 15474  00643C  50E1               	movf	fsr1l,w,c
 15475  00643E  0FFD               	addlw	-3
 15476  006440  6ED9               	movwf	fsr2l,c
 15477  006442  50E2               	movf	fsr1h,w,c
 15478  006444  6EDA               	movwf	fsr2h,c
 15479  006446  0EFF               	movlw	255
 15480  006448  22DA               	addwfc	fsr2h,f,c
 15481  00644A  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler
 15482  006450  006F FF78  F01B    	movff	postinc2,_INT0_InterruptHandler+1
 15483  006456  006F FF74  F01C    	movff	postdec2,_INT0_InterruptHandler+2
 15484                           
 15485                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 15486  00645C  52E5               	movf	postdec1,f,c
 15487  00645E  52E5               	movf	postdec1,f,c
 15488  006460  52E5               	movf	postdec1,f,c
 15489  006462  0012               	return		;funcret
 15490  006464                     __end_of_INT0_SetInterruptHandler:
 15491                           	opt callstack 0
 15492                           
 15493 ;; *************** function _DSM_Initialize *****************
 15494 ;; Defined at:
 15495 ;;		line 58 in file "mcc_generated_files/dsm.c"
 15496 ;; Parameters:    Size  Location     Type
 15497 ;;		None
 15498 ;; Auto vars:     Size  Location     Type
 15499 ;;		None
 15500 ;; Return value:  Size  Location     Type
 15501 ;;                  1  [STACK] void 
 15502 ;; Registers used:
 15503 ;;		wreg, status,2
 15504 ;; Tracked objects:
 15505 ;;		On entry : 0/3C
 15506 ;;		On exit  : 3F/3C
 15507 ;;		Unchanged: 0/0
 15508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15513 ;;Total ram usage:        0 bytes
 15514 ;; Hardware stack levels used:    1
 15515 ;; Hardware stack levels required when called:    3
 15516 ;; This function calls:
 15517 ;;		Nothing
 15518 ;; This function is called by:
 15519 ;;		_SYSTEM_Initialize
 15520 ;; This function uses a reentrant model
 15521 ;;
 15522                           
 15523                           	psect	text78
 15524  0066D2                     __ptext78:
 15525                           	opt callstack 0
 15526  0066D2                     _DSM_Initialize:
 15527                           	opt callstack 26
 15528                           
 15529                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 15530                           
 15531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15532                           ;incstack = 0
 15533  0066D2  013C               	movlb	60	; () banked
 15534  0066D4  99FA               	bcf	250,4,b	;volatile
 15535                           
 15536                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 15537  0066D6  81FB               	bsf	251,0,b	;volatile
 15538                           
 15539                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 15540  0066D8  93FB               	bcf	251,1,b	;volatile
 15541                           
 15542                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 15543  0066DA  89FB               	bsf	251,4,b	;volatile
 15544                           
 15545                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 15546  0066DC  9BFB               	bcf	251,5,b	;volatile
 15547                           
 15548                           ; BSR set to: 60
 15549                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 15550  0066DE  0E13               	movlw	19
 15551  0066E0  6FFC               	movwf	252,b	;volatile
 15552                           
 15553                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 15554  0066E2  0E0E               	movlw	14
 15555  0066E4  6FFE               	movwf	254,b	;volatile
 15556                           
 15557                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 15558  0066E6  0E04               	movlw	4
 15559  0066E8  6FFD               	movwf	253,b	;volatile
 15560                           
 15561                           ; BSR set to: 60
 15562                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 15563  0066EA  8FFA               	bsf	250,7,b	;volatile
 15564                           
 15565                           ; BSR set to: 60
 15566                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 15567  0066EC  0012               	return		;funcret
 15568  0066EE                     __end_of_DSM_Initialize:
 15569                           	opt callstack 0
 15570                           
 15571 ;; *************** function _DMA1_Initialize *****************
 15572 ;; Defined at:
 15573 ;;		line 86 in file "mcc_generated_files/dma1.c"
 15574 ;; Parameters:    Size  Location     Type
 15575 ;;		None
 15576 ;; Auto vars:     Size  Location     Type
 15577 ;;		None
 15578 ;; Return value:  Size  Location     Type
 15579 ;;                  1  [STACK] void 
 15580 ;; Registers used:
 15581 ;;		wreg, status,2
 15582 ;; Tracked objects:
 15583 ;;		On entry : 3F/3D
 15584 ;;		On exit  : 3F/3B
 15585 ;;		Unchanged: 0/0
 15586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15591 ;;Total ram usage:        0 bytes
 15592 ;; Hardware stack levels used:    1
 15593 ;; Hardware stack levels required when called:    3
 15594 ;; This function calls:
 15595 ;;		Nothing
 15596 ;; This function is called by:
 15597 ;;		_SYSTEM_Initialize
 15598 ;; This function uses a reentrant model
 15599 ;;
 15600                           
 15601                           	psect	text79
 15602  005A1C                     __ptext79:
 15603                           	opt callstack 0
 15604  005A1C                     _DMA1_Initialize:
 15605                           	opt callstack 26
 15606                           
 15607                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 15608                           
 15609                           ; BSR set to: 60
 15610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15611                           ;incstack = 0
 15612  005A1C  0E00               	movlw	0
 15613  005A1E  013B               	movlb	59	; () banked
 15614  005A20  6FF9               	movwf	249,b	;volatile
 15615  005A22  0E10               	movlw	16
 15616  005A24  6FFA               	movwf	250,b	;volatile
 15617  005A26  0E00               	movlw	0
 15618  005A28  6FFB               	movwf	251,b	;volatile
 15619                           
 15620                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 15621  005A2A  0E3D               	movlw	61
 15622  005A2C  6FF1               	movwf	241,b	;volatile
 15623  005A2E  0E11               	movlw	17
 15624  005A30  6FF0               	movwf	240,b	;volatile
 15625                           
 15626                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 15627  005A32  0E03               	movlw	3
 15628  005A34  6FFD               	movwf	253,b	;volatile
 15629                           
 15630                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 15631  005A36  0E00               	movlw	0
 15632  005A38  6FF8               	movwf	248,b	;volatile
 15633  005A3A  0E01               	movlw	1
 15634  005A3C  6FF7               	movwf	247,b	;volatile
 15635                           
 15636                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 15637  005A3E  0E00               	movlw	0
 15638  005A40  6FEF               	movwf	239,b	;volatile
 15639  005A42  0E01               	movlw	1
 15640  005A44  6FEE               	movwf	238,b	;volatile
 15641                           
 15642                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 15643  005A46  0E15               	movlw	21
 15644  005A48  6FFF               	movwf	255,b	;volatile
 15645                           
 15646                           ; BSR set to: 59
 15647                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 15648  005A4A  6BFE               	clrf	254,b	;volatile
 15649                           
 15650                           ; BSR set to: 59
 15651                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 15652  005A4C  0139               	movlb	57	; () banked
 15653  005A4E  93A2               	bcf	162,1,b	;volatile
 15654                           
 15655                           ; BSR set to: 57
 15656                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 15657  005A50  91A2               	bcf	162,0,b	;volatile
 15658                           
 15659                           ; BSR set to: 57
 15660                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 15661  005A52  97A2               	bcf	162,3,b	;volatile
 15662                           
 15663                           ; BSR set to: 57
 15664                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 15665  005A54  95A2               	bcf	162,2,b	;volatile
 15666                           
 15667                           ; BSR set to: 57
 15668                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 15669  005A56  8392               	bsf	146,1,b	;volatile
 15670                           
 15671                           ; BSR set to: 57
 15672                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 15673  005A58  8192               	bsf	146,0,b	;volatile
 15674                           
 15675                           ; BSR set to: 57
 15676                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 15677  005A5A  8792               	bsf	146,3,b	;volatile
 15678                           
 15679                           ; BSR set to: 57
 15680                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 15681  005A5C  8592               	bsf	146,2,b	;volatile
 15682                           
 15683                           ; BSR set to: 57
 15684                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 15685  005A5E  6BF1               	clrf	241,b	;volatile
 15686                           
 15687                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 15688  005A60  0E01               	movlw	1
 15689  005A62  6FF2               	movwf	242,b	;volatile
 15690                           
 15691                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 15692  005A64  0E04               	movlw	4
 15693  005A66  6FF3               	movwf	243,b	;volatile
 15694                           
 15695                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 15696  005A68  0E02               	movlw	2
 15697  005A6A  6FF4               	movwf	244,b	;volatile
 15698                           
 15699                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 15700  005A6C  0E03               	movlw	3
 15701  005A6E  6FF7               	movwf	247,b	;volatile
 15702  005A70  9ED2               	bcf	16338,7,c	;# 
 15703  005A72  0139               	banksel	14831	;# 
 15704  005A74  0E55               	movlw	85	;# 
 15705  005A76  6FEF               	movwf	14831,b	;# 
 15706  005A78  0EAA               	movlw	170	;# 
 15707  005A7A  6FEF               	movwf	14831,b	;# 
 15708  005A7C  81EF               	bsf	14831,0,b	;# 
 15709  005A7E  8ED2               	bsf	16338,7,c	;# 
 15710                           
 15711                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 15712  005A80  013B               	movlb	59	; () banked
 15713  005A82  6BFC               	clrf	252,b	;volatile
 15714                           
 15715                           ; BSR set to: 59
 15716                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15717  005A84  0012               	return		;funcret
 15718  005A86                     __end_of_DMA1_Initialize:
 15719                           	opt callstack 0
 15720                           
 15721 ;; *************** function _CLKREF_Initialize *****************
 15722 ;; Defined at:
 15723 ;;		line 58 in file "mcc_generated_files/clkref.c"
 15724 ;; Parameters:    Size  Location     Type
 15725 ;;		None
 15726 ;; Auto vars:     Size  Location     Type
 15727 ;;		None
 15728 ;; Return value:  Size  Location     Type
 15729 ;;                  1  [STACK] void 
 15730 ;; Registers used:
 15731 ;;		wreg, status,2
 15732 ;; Tracked objects:
 15733 ;;		On entry : 3F/3B
 15734 ;;		On exit  : 3F/3C
 15735 ;;		Unchanged: 0/0
 15736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15741 ;;Total ram usage:        0 bytes
 15742 ;; Hardware stack levels used:    1
 15743 ;; Hardware stack levels required when called:    3
 15744 ;; This function calls:
 15745 ;;		Nothing
 15746 ;; This function is called by:
 15747 ;;		_SYSTEM_Initialize
 15748 ;; This function uses a reentrant model
 15749 ;;
 15750                           
 15751                           	psect	text80
 15752  0067CA                     __ptext80:
 15753                           	opt callstack 0
 15754  0067CA                     _CLKREF_Initialize:
 15755                           	opt callstack 26
 15756                           
 15757                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 15758                           
 15759                           ; BSR set to: 59
 15760                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15761                           ;incstack = 0
 15762  0067CA  013C               	movlb	60	; () banked
 15763  0067CC  6BE6               	clrf	230,b	;volatile
 15764                           
 15765                           ; BSR set to: 60
 15766                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 15767  0067CE  0E94               	movlw	148
 15768  0067D0  6FE5               	movwf	229,b	;volatile
 15769                           
 15770                           ; BSR set to: 60
 15771                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15772  0067D2  0012               	return		;funcret
 15773  0067D4                     __end_of_CLKREF_Initialize:
 15774                           	opt callstack 0
 15775                           
 15776 ;; *************** function _CLC1_Initialize *****************
 15777 ;; Defined at:
 15778 ;;		line 58 in file "mcc_generated_files/clc1.c"
 15779 ;; Parameters:    Size  Location     Type
 15780 ;;		None
 15781 ;; Auto vars:     Size  Location     Type
 15782 ;;		None
 15783 ;; Return value:  Size  Location     Type
 15784 ;;                  1  [STACK] void 
 15785 ;; Registers used:
 15786 ;;		wreg, status,2
 15787 ;; Tracked objects:
 15788 ;;		On entry : 0/39
 15789 ;;		On exit  : 3F/3C
 15790 ;;		Unchanged: 0/0
 15791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15796 ;;Total ram usage:        0 bytes
 15797 ;; Hardware stack levels used:    1
 15798 ;; Hardware stack levels required when called:    3
 15799 ;; This function calls:
 15800 ;;		Nothing
 15801 ;; This function is called by:
 15802 ;;		_SYSTEM_Initialize
 15803 ;; This function uses a reentrant model
 15804 ;;
 15805                           
 15806                           	psect	text81
 15807  006596                     __ptext81:
 15808                           	opt callstack 0
 15809  006596                     _CLC1_Initialize:
 15810                           	opt callstack 26
 15811                           
 15812                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 15813                           
 15814                           ; BSR set to: 60
 15815                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15816                           ;incstack = 0
 15817  006596  013C               	movlb	60	; () banked
 15818  006598  6B75               	clrf	117,b	;volatile
 15819                           
 15820                           ; BSR set to: 60
 15821                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 15822  00659A  0E04               	movlw	4
 15823  00659C  6F76               	movwf	118,b	;volatile
 15824                           
 15825                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 15826  00659E  0E04               	movlw	4
 15827  0065A0  6F77               	movwf	119,b	;volatile
 15828                           
 15829                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 15830  0065A2  0E04               	movlw	4
 15831  0065A4  6F78               	movwf	120,b	;volatile
 15832                           
 15833                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 15834  0065A6  0E04               	movlw	4
 15835  0065A8  6F79               	movwf	121,b	;volatile
 15836                           
 15837                           ; BSR set to: 60
 15838                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 15839  0065AA  6B7A               	clrf	122,b	;volatile
 15840                           
 15841                           ; BSR set to: 60
 15842                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 15843  0065AC  6B7B               	clrf	123,b	;volatile
 15844                           
 15845                           ; BSR set to: 60
 15846                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 15847  0065AE  6B7C               	clrf	124,b	;volatile
 15848                           
 15849                           ; BSR set to: 60
 15850                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 15851  0065B0  6B7D               	clrf	125,b	;volatile
 15852                           
 15853                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 15854  0065B2  0E81               	movlw	129
 15855  0065B4  6F74               	movwf	116,b	;volatile
 15856                           
 15857                           ; BSR set to: 60
 15858                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15859  0065B6  0012               	return		;funcret
 15860  0065B8                     __end_of_CLC1_Initialize:
 15861                           	opt callstack 0
 15862                           
 15863 ;; *************** function _ADCC_Initialize *****************
 15864 ;; Defined at:
 15865 ;;		line 64 in file "mcc_generated_files/adcc.c"
 15866 ;; Parameters:    Size  Location     Type
 15867 ;;		None
 15868 ;; Auto vars:     Size  Location     Type
 15869 ;;		None
 15870 ;; Return value:  Size  Location     Type
 15871 ;;                  1  [STACK] void 
 15872 ;; Registers used:
 15873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 15874 ;; Tracked objects:
 15875 ;;		On entry : 3F/39
 15876 ;;		On exit  : 0/0
 15877 ;;		Unchanged: 0/0
 15878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15883 ;;Total ram usage:        0 bytes
 15884 ;; Hardware stack levels used:    1
 15885 ;; Hardware stack levels required when called:    4
 15886 ;; This function calls:
 15887 ;;		_ADCC_SetADIInterruptHandler
 15888 ;; This function is called by:
 15889 ;;		_SYSTEM_Initialize
 15890 ;; This function uses a reentrant model
 15891 ;;
 15892                           
 15893                           	psect	text82
 15894  005DB6                     __ptext82:
 15895                           	opt callstack 0
 15896  005DB6                     _ADCC_Initialize:
 15897                           	opt callstack 25
 15898                           
 15899                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 15900                           
 15901                           ; BSR set to: 60
 15902                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15903                           ;incstack = 0
 15904  005DB6  013E               	movlb	62	; () banked
 15905  005DB8  6BDE               	clrf	222,b	;volatile
 15906                           
 15907                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 15908  005DBA  6BDF               	clrf	223,b	;volatile
 15909                           
 15910                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 15911  005DBC  6BE0               	clrf	224,b	;volatile
 15912                           
 15913                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 15914  005DBE  6BE1               	clrf	225,b	;volatile
 15915                           
 15916                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 15917  005DC0  6BE4               	clrf	228,b	;volatile
 15918                           
 15919                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 15920  005DC2  6BE5               	clrf	229,b	;volatile
 15921                           
 15922                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 15923  005DC4  6BEA               	clrf	234,b	;volatile
 15924                           
 15925                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 15926  005DC6  6BEC               	clrf	236,b	;volatile
 15927                           
 15928                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 15929  005DC8  6BF1               	clrf	241,b	;volatile
 15930                           
 15931                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 15932  005DCA  6BF3               	clrf	243,b	;volatile
 15933                           
 15934                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 15935  005DCC  6BF4               	clrf	244,b	;volatile
 15936                           
 15937                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 15938  005DCE  6BF5               	clrf	245,b	;volatile
 15939                           
 15940                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 15941  005DD0  6BF6               	clrf	246,b	;volatile
 15942                           
 15943                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 15944  005DD2  6BF7               	clrf	247,b	;volatile
 15945                           
 15946                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 15947  005DD4  6BF9               	clrf	249,b	;volatile
 15948                           
 15949                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 15950  005DD6  6BFA               	clrf	250,b	;volatile
 15951                           
 15952                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 15953  005DD8  6BFB               	clrf	251,b	;volatile
 15954                           
 15955                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 15956  005DDA  6BFC               	clrf	252,b	;volatile
 15957                           
 15958                           ; BSR set to: 62
 15959                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 15960  005DDC  0E02               	movlw	2
 15961  005DDE  6FFD               	movwf	253,b	;volatile
 15962                           
 15963                           ; BSR set to: 62
 15964                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 15965  005DE0  6BFE               	clrf	254,b	;volatile
 15966                           
 15967                           ; BSR set to: 62
 15968                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 15969  005DE2  6BFF               	clrf	255,b	;volatile
 15970                           
 15971                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 15972  005DE4  0E94               	movlw	148
 15973  005DE6  6FF8               	movwf	248,b	;volatile
 15974                           
 15975                           ; BSR set to: 62
 15976                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 15977  005DE8  0139               	movlb	57	; () banked
 15978  005DEA  95A1               	bcf	161,2,b	;volatile
 15979                           
 15980                           ; BSR set to: 57
 15981                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 15982  005DEC  8591               	bsf	145,2,b	;volatile
 15983                           
 15984                           ; BSR set to: 57
 15985                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 15986  005DEE  0E30               	movlw	low _ADCC_DefaultInterruptHandler
 15987  005DF0  6EE6               	movwf	postinc1,c
 15988  005DF2  0E68               	movlw	high _ADCC_DefaultInterruptHandler
 15989  005DF4  6EE6               	movwf	postinc1,c
 15990  005DF6  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 15991  005DF8  6EE6               	movwf	postinc1,c
 15992  005DFA  EC32  F032         	call	_ADCC_SetADIInterruptHandler	;wreg free
 15993                           
 15994                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15995  005DFE  0012               	return		;funcret
 15996  005E00                     __end_of_ADCC_Initialize:
 15997                           	opt callstack 0
 15998                           
 15999 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 16000 ;; Defined at:
 16001 ;;		line 316 in file "mcc_generated_files/adcc.c"
 16002 ;; Parameters:    Size  Location     Type
 16003 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 16004 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 16005 ;; Auto vars:     Size  Location     Type
 16006 ;;		None
 16007 ;; Return value:  Size  Location     Type
 16008 ;;                  1  [STACK] void 
 16009 ;; Registers used:
 16010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16011 ;; Tracked objects:
 16012 ;;		On entry : 3F/39
 16013 ;;		On exit  : 0/0
 16014 ;;		Unchanged: 0/0
 16015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16020 ;;Total ram usage:        0 bytes
 16021 ;; Hardware stack levels used:    1
 16022 ;; Hardware stack levels required when called:    3
 16023 ;; This function calls:
 16024 ;;		Nothing
 16025 ;; This function is called by:
 16026 ;;		_ADCC_Initialize
 16027 ;; This function uses a reentrant model
 16028 ;;
 16029                           
 16030                           	psect	text83
 16031  006464                     __ptext83:
 16032                           	opt callstack 0
 16033  006464                     _ADCC_SetADIInterruptHandler:
 16034                           	opt callstack 25
 16035                           
 16036                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 16037                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 16038                           
 16039                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16040                           ;incstack = 0
 16041  006464  50E1               	movf	fsr1l,w,c
 16042  006466  0FFD               	addlw	-3
 16043  006468  6ED9               	movwf	fsr2l,c
 16044  00646A  50E2               	movf	fsr1h,w,c
 16045  00646C  6EDA               	movwf	fsr2h,c
 16046  00646E  0EFF               	movlw	255
 16047  006470  22DA               	addwfc	fsr2h,f,c
 16048  006472  006F FF78  F0EB    	movff	postinc2,_ADCC_ADI_InterruptHandler
 16049  006478  006F FF78  F0EC    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 16050  00647E  006F FF74  F0ED    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 16051                           
 16052                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 16053  006484  52E5               	movf	postdec1,f,c
 16054  006486  52E5               	movf	postdec1,f,c
 16055  006488  52E5               	movf	postdec1,f,c
 16056  00648A  0012               	return		;funcret
 16057  00648C                     __end_of_ADCC_SetADIInterruptHandler:
 16058                           	opt callstack 0
 16059                           
 16060 ;; *************** function _INT0_ISR *****************
 16061 ;; Defined at:
 16062 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 16063 ;; Parameters:    Size  Location     Type
 16064 ;;		None
 16065 ;; Auto vars:     Size  Location     Type
 16066 ;;		None
 16067 ;; Return value:  Size  Location     Type
 16068 ;;                  1    wreg      void 
 16069 ;; Registers used:
 16070 ;;		wreg, status,2, status,0, pclath, tosl
 16071 ;; Tracked objects:
 16072 ;;		On entry : 0/0
 16073 ;;		On exit  : 0/0
 16074 ;;		Unchanged: 0/0
 16075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16080 ;;Total ram usage:        0 bytes
 16081 ;; Hardware stack levels used:    1
 16082 ;; Hardware stack levels required when called:    2
 16083 ;; This function calls:
 16084 ;;		_INT0_CallBack
 16085 ;; This function is called by:
 16086 ;;		Interrupt level 2
 16087 ;; This function uses a non-reentrant model
 16088 ;;
 16089                           
 16090                           	psect	text84
 16091  00678C                     __ptext84:
 16092                           	opt callstack 0
 16093  00678C                     _INT0_ISR:
 16094                           	opt callstack 17
 16095                           
 16096                           ;incstack = 0
 16097  00678C  EE13  F154         	lfsr	1,___inthi_sp
 16098                           
 16099                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 16100  006790  0139               	movlb	57	; () banked
 16101  006792  91A1               	bcf	161,0,b	;volatile
 16102                           
 16103                           ; BSR set to: 57
 16104                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 16105  006794  ECDC  F032         	call	_INT0_CallBack	;wreg free
 16106  006798  0011               	retfie		f
 16107  00679A                     __end_of_INT0_ISR:
 16108                           	opt callstack 0
 16109                           
 16110 ;; *************** function _INT0_CallBack *****************
 16111 ;; Defined at:
 16112 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 16113 ;; Parameters:    Size  Location     Type
 16114 ;;		None
 16115 ;; Auto vars:     Size  Location     Type
 16116 ;;		None
 16117 ;; Return value:  Size  Location     Type
 16118 ;;                  1  [STACK] void 
 16119 ;; Registers used:
 16120 ;;		wreg, status,2, status,0, pclath, tosl
 16121 ;; Tracked objects:
 16122 ;;		On entry : 3F/39
 16123 ;;		On exit  : 0/0
 16124 ;;		Unchanged: 0/0
 16125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16130 ;;Total ram usage:        0 bytes
 16131 ;; Hardware stack levels used:    1
 16132 ;; Hardware stack levels required when called:    1
 16133 ;; This function calls:
 16134 ;;		Absolute function
 16135 ;;		_INT0_DefaultInterruptHandler
 16136 ;; This function is called by:
 16137 ;;		_INT0_ISR
 16138 ;; This function uses a reentrant model
 16139 ;;
 16140                           
 16141                           	psect	text85
 16142  0065B8                     __ptext85:
 16143                           	opt callstack 0
 16144  0065B8                     _INT0_CallBack:
 16145                           	opt callstack 17
 16146                           
 16147                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 16148                           
 16149                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16150                           ;incstack = 0
 16151  0065B8  501A               	movf	_INT0_InterruptHandler,w,c
 16152  0065BA  101B               	iorwf	_INT0_InterruptHandler+1,w,c
 16153  0065BC  101C               	iorwf	_INT0_InterruptHandler+2,w,c
 16154  0065BE  B4D8               	btfsc	status,2,c
 16155  0065C0  0012               	return	
 16156                           
 16157                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 16158  0065C2  D801               	call	u131_48
 16159  0065C4  0012               	return	
 16160  0065C6                     u131_48:
 16161  0065C6  0005               	push	
 16162  0065C8  6EFA               	movwf	pclath,c
 16163  0065CA  501A               	movf	_INT0_InterruptHandler,w,c
 16164  0065CC  6EFD               	movwf	tosl,c
 16165  0065CE  501B               	movf	_INT0_InterruptHandler+1,w,c
 16166  0065D0  6EFE               	movwf	tosh,c
 16167  0065D2  501C               	movf	_INT0_InterruptHandler+2,w,c
 16168  0065D4  6EFF               	movwf	tosu,c
 16169  0065D6  50FA               	movf	pclath,w,c
 16170  0065D8  0012               	return		;indir
 16171  0065DA                     __end_of_INT0_CallBack:
 16172                           	opt callstack 0
 16173                           
 16174 ;; *************** function _INT0_DefaultInterruptHandler *****************
 16175 ;; Defined at:
 16176 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 16177 ;; Parameters:    Size  Location     Type
 16178 ;;		None
 16179 ;; Auto vars:     Size  Location     Type
 16180 ;;		None
 16181 ;; Return value:  Size  Location     Type
 16182 ;;                  1  [STACK] void 
 16183 ;; Registers used:
 16184 ;;		None
 16185 ;; Tracked objects:
 16186 ;;		On entry : 0/39
 16187 ;;		On exit  : 0/0
 16188 ;;		Unchanged: 0/0
 16189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16194 ;;Total ram usage:        0 bytes
 16195 ;; Hardware stack levels used:    1
 16196 ;; This function calls:
 16197 ;;		Nothing
 16198 ;; This function is called by:
 16199 ;;		_EXT_INT_Initialize
 16200 ;;		_INT0_CallBack
 16201 ;; This function uses a reentrant model
 16202 ;;
 16203                           
 16204                           	psect	text86
 16205  00682A                     __ptext86:
 16206                           	opt callstack 0
 16207  00682A                     _INT0_DefaultInterruptHandler:
 16208                           	opt callstack 17
 16209                           
 16210                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16211                           
 16212                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16213                           ;incstack = 0
 16214  00682A  0012               	return		;funcret
 16215  00682C                     __end_of_INT0_DefaultInterruptHandler:
 16216                           	opt callstack 0
 16217                           
 16218 ;; *************** function _INT1_ISR *****************
 16219 ;; Defined at:
 16220 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 16221 ;; Parameters:    Size  Location     Type
 16222 ;;		None
 16223 ;; Auto vars:     Size  Location     Type
 16224 ;;		None
 16225 ;; Return value:  Size  Location     Type
 16226 ;;                  1    wreg      void 
 16227 ;; Registers used:
 16228 ;;		wreg, status,2, status,0, pclath, tosl
 16229 ;; Tracked objects:
 16230 ;;		On entry : 0/0
 16231 ;;		On exit  : 0/0
 16232 ;;		Unchanged: 0/0
 16233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16238 ;;Total ram usage:        0 bytes
 16239 ;; Hardware stack levels used:    1
 16240 ;; Hardware stack levels required when called:    2
 16241 ;; This function calls:
 16242 ;;		_INT1_CallBack
 16243 ;; This function is called by:
 16244 ;;		Interrupt level 2
 16245 ;; This function uses a non-reentrant model
 16246 ;;
 16247                           
 16248                           	psect	text87
 16249  00679C                     __ptext87:
 16250                           	opt callstack 0
 16251  00679C                     _INT1_ISR:
 16252                           	opt callstack 17
 16253                           
 16254                           ;incstack = 0
 16255  00679C  EE13  F154         	lfsr	1,___inthi_sp
 16256                           
 16257                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 16258  0067A0  0139               	movlb	57	; () banked
 16259  0067A2  91A5               	bcf	165,0,b	;volatile
 16260                           
 16261                           ; BSR set to: 57
 16262                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 16263  0067A4  ECED  F032         	call	_INT1_CallBack	;wreg free
 16264  0067A8  0011               	retfie		f
 16265  0067AA                     __end_of_INT1_ISR:
 16266                           	opt callstack 0
 16267                           
 16268 ;; *************** function _INT1_CallBack *****************
 16269 ;; Defined at:
 16270 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 16271 ;; Parameters:    Size  Location     Type
 16272 ;;		None
 16273 ;; Auto vars:     Size  Location     Type
 16274 ;;		None
 16275 ;; Return value:  Size  Location     Type
 16276 ;;                  1  [STACK] void 
 16277 ;; Registers used:
 16278 ;;		wreg, status,2, status,0, pclath, tosl
 16279 ;; Tracked objects:
 16280 ;;		On entry : 3F/39
 16281 ;;		On exit  : 0/0
 16282 ;;		Unchanged: 0/0
 16283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16288 ;;Total ram usage:        0 bytes
 16289 ;; Hardware stack levels used:    1
 16290 ;; Hardware stack levels required when called:    1
 16291 ;; This function calls:
 16292 ;;		Absolute function
 16293 ;;		_INT1_DefaultInterruptHandler
 16294 ;; This function is called by:
 16295 ;;		_INT1_ISR
 16296 ;; This function uses a reentrant model
 16297 ;;
 16298                           
 16299                           	psect	text88
 16300  0065DA                     __ptext88:
 16301                           	opt callstack 0
 16302  0065DA                     _INT1_CallBack:
 16303                           	opt callstack 17
 16304                           
 16305                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 16306                           
 16307                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16308                           ;incstack = 0
 16309  0065DA  5017               	movf	_INT1_InterruptHandler,w,c
 16310  0065DC  1018               	iorwf	_INT1_InterruptHandler+1,w,c
 16311  0065DE  1019               	iorwf	_INT1_InterruptHandler+2,w,c
 16312  0065E0  B4D8               	btfsc	status,2,c
 16313  0065E2  0012               	return	
 16314                           
 16315                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 16316  0065E4  D801               	call	u133_48
 16317  0065E6  0012               	return	
 16318  0065E8                     u133_48:
 16319  0065E8  0005               	push	
 16320  0065EA  6EFA               	movwf	pclath,c
 16321  0065EC  5017               	movf	_INT1_InterruptHandler,w,c
 16322  0065EE  6EFD               	movwf	tosl,c
 16323  0065F0  5018               	movf	_INT1_InterruptHandler+1,w,c
 16324  0065F2  6EFE               	movwf	tosh,c
 16325  0065F4  5019               	movf	_INT1_InterruptHandler+2,w,c
 16326  0065F6  6EFF               	movwf	tosu,c
 16327  0065F8  50FA               	movf	pclath,w,c
 16328  0065FA  0012               	return		;indir
 16329  0065FC                     __end_of_INT1_CallBack:
 16330                           	opt callstack 0
 16331                           
 16332 ;; *************** function _INT1_DefaultInterruptHandler *****************
 16333 ;; Defined at:
 16334 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 16335 ;; Parameters:    Size  Location     Type
 16336 ;;		None
 16337 ;; Auto vars:     Size  Location     Type
 16338 ;;		None
 16339 ;; Return value:  Size  Location     Type
 16340 ;;                  1  [STACK] void 
 16341 ;; Registers used:
 16342 ;;		None
 16343 ;; Tracked objects:
 16344 ;;		On entry : 0/39
 16345 ;;		On exit  : 0/0
 16346 ;;		Unchanged: 0/0
 16347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16352 ;;Total ram usage:        0 bytes
 16353 ;; Hardware stack levels used:    1
 16354 ;; This function calls:
 16355 ;;		Nothing
 16356 ;; This function is called by:
 16357 ;;		_EXT_INT_Initialize
 16358 ;;		_INT1_CallBack
 16359 ;; This function uses a reentrant model
 16360 ;;
 16361                           
 16362                           	psect	text89
 16363  00682C                     __ptext89:
 16364                           	opt callstack 0
 16365  00682C                     _INT1_DefaultInterruptHandler:
 16366                           	opt callstack 17
 16367                           
 16368                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16369                           
 16370                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16371                           ;incstack = 0
 16372  00682C  0012               	return		;funcret
 16373  00682E                     __end_of_INT1_DefaultInterruptHandler:
 16374                           	opt callstack 0
 16375                           
 16376 ;; *************** function _INT2_ISR *****************
 16377 ;; Defined at:
 16378 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 16379 ;; Parameters:    Size  Location     Type
 16380 ;;		None
 16381 ;; Auto vars:     Size  Location     Type
 16382 ;;		None
 16383 ;; Return value:  Size  Location     Type
 16384 ;;                  1    wreg      void 
 16385 ;; Registers used:
 16386 ;;		wreg, status,2, status,0, pclath, tosl
 16387 ;; Tracked objects:
 16388 ;;		On entry : 0/0
 16389 ;;		On exit  : 0/0
 16390 ;;		Unchanged: 0/0
 16391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16396 ;;Total ram usage:        0 bytes
 16397 ;; Hardware stack levels used:    1
 16398 ;; Hardware stack levels required when called:    2
 16399 ;; This function calls:
 16400 ;;		_INT2_CallBack
 16401 ;; This function is called by:
 16402 ;;		Interrupt level 2
 16403 ;; This function uses a non-reentrant model
 16404 ;;
 16405                           
 16406                           	psect	text90
 16407  0067AC                     __ptext90:
 16408                           	opt callstack 0
 16409  0067AC                     _INT2_ISR:
 16410                           	opt callstack 17
 16411                           
 16412                           ;incstack = 0
 16413  0067AC  EE13  F154         	lfsr	1,___inthi_sp
 16414                           
 16415                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 16416  0067B0  0139               	movlb	57	; () banked
 16417  0067B2  9BA7               	bcf	167,5,b	;volatile
 16418                           
 16419                           ; BSR set to: 57
 16420                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 16421  0067B4  ECFE  F032         	call	_INT2_CallBack	;wreg free
 16422  0067B8  0011               	retfie		f
 16423  0067BA                     __end_of_INT2_ISR:
 16424                           	opt callstack 0
 16425                           
 16426 ;; *************** function _INT2_CallBack *****************
 16427 ;; Defined at:
 16428 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 16429 ;; Parameters:    Size  Location     Type
 16430 ;;		None
 16431 ;; Auto vars:     Size  Location     Type
 16432 ;;		None
 16433 ;; Return value:  Size  Location     Type
 16434 ;;                  1  [STACK] void 
 16435 ;; Registers used:
 16436 ;;		wreg, status,2, status,0, pclath, tosl
 16437 ;; Tracked objects:
 16438 ;;		On entry : 3F/39
 16439 ;;		On exit  : 0/0
 16440 ;;		Unchanged: 0/0
 16441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16446 ;;Total ram usage:        0 bytes
 16447 ;; Hardware stack levels used:    1
 16448 ;; Hardware stack levels required when called:    1
 16449 ;; This function calls:
 16450 ;;		Absolute function
 16451 ;;		_INT2_DefaultInterruptHandler
 16452 ;; This function is called by:
 16453 ;;		_INT2_ISR
 16454 ;; This function uses a reentrant model
 16455 ;;
 16456                           
 16457                           	psect	text91
 16458  0065FC                     __ptext91:
 16459                           	opt callstack 0
 16460  0065FC                     _INT2_CallBack:
 16461                           	opt callstack 17
 16462                           
 16463                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 16464                           
 16465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16466                           ;incstack = 0
 16467  0065FC  5014               	movf	_INT2_InterruptHandler,w,c
 16468  0065FE  1015               	iorwf	_INT2_InterruptHandler+1,w,c
 16469  006600  1016               	iorwf	_INT2_InterruptHandler+2,w,c
 16470  006602  B4D8               	btfsc	status,2,c
 16471  006604  0012               	return	
 16472                           
 16473                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 16474  006606  D801               	call	u135_48
 16475  006608  0012               	return	
 16476  00660A                     u135_48:
 16477  00660A  0005               	push	
 16478  00660C  6EFA               	movwf	pclath,c
 16479  00660E  5014               	movf	_INT2_InterruptHandler,w,c
 16480  006610  6EFD               	movwf	tosl,c
 16481  006612  5015               	movf	_INT2_InterruptHandler+1,w,c
 16482  006614  6EFE               	movwf	tosh,c
 16483  006616  5016               	movf	_INT2_InterruptHandler+2,w,c
 16484  006618  6EFF               	movwf	tosu,c
 16485  00661A  50FA               	movf	pclath,w,c
 16486  00661C  0012               	return		;indir
 16487  00661E                     __end_of_INT2_CallBack:
 16488                           	opt callstack 0
 16489                           
 16490 ;; *************** function _INT2_DefaultInterruptHandler *****************
 16491 ;; Defined at:
 16492 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 16493 ;; Parameters:    Size  Location     Type
 16494 ;;		None
 16495 ;; Auto vars:     Size  Location     Type
 16496 ;;		None
 16497 ;; Return value:  Size  Location     Type
 16498 ;;                  1  [STACK] void 
 16499 ;; Registers used:
 16500 ;;		None
 16501 ;; Tracked objects:
 16502 ;;		On entry : 0/39
 16503 ;;		On exit  : 0/0
 16504 ;;		Unchanged: 0/0
 16505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16510 ;;Total ram usage:        0 bytes
 16511 ;; Hardware stack levels used:    1
 16512 ;; This function calls:
 16513 ;;		Nothing
 16514 ;; This function is called by:
 16515 ;;		_EXT_INT_Initialize
 16516 ;;		_INT2_CallBack
 16517 ;; This function uses a reentrant model
 16518 ;;
 16519                           
 16520                           	psect	text92
 16521  00682E                     __ptext92:
 16522                           	opt callstack 0
 16523  00682E                     _INT2_DefaultInterruptHandler:
 16524                           	opt callstack 17
 16525                           
 16526                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16527                           
 16528                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16529                           ;incstack = 0
 16530  00682E  0012               	return		;funcret
 16531  006830                     __end_of_INT2_DefaultInterruptHandler:
 16532                           	opt callstack 0
 16533                           
 16534 ;; *************** function _Default_ISR *****************
 16535 ;; Defined at:
 16536 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 16537 ;; Parameters:    Size  Location     Type
 16538 ;;		None
 16539 ;; Auto vars:     Size  Location     Type
 16540 ;;		None
 16541 ;; Return value:  Size  Location     Type
 16542 ;;                  1    wreg      void 
 16543 ;; Registers used:
 16544 ;;		None
 16545 ;; Tracked objects:
 16546 ;;		On entry : 0/0
 16547 ;;		On exit  : 0/0
 16548 ;;		Unchanged: 0/0
 16549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16554 ;;Total ram usage:        0 bytes
 16555 ;; Hardware stack levels used:    1
 16556 ;; This function calls:
 16557 ;;		Nothing
 16558 ;; This function is called by:
 16559 ;;		Interrupt level 2
 16560 ;; This function uses a non-reentrant model
 16561 ;;
 16562                           
 16563                           	psect	text93
 16564  006824                     __ptext93:
 16565                           	opt callstack 0
 16566  006824                     _Default_ISR:
 16567                           	opt callstack 19
 16568                           
 16569                           ;incstack = 0
 16570  006824  EE13  F154         	lfsr	1,___inthi_sp
 16571  006828  0011               	retfie		f
 16572  00682A                     __end_of_Default_ISR:
 16573                           	opt callstack 0
 16574                           
 16575 ;; *************** function _ADCC_ISR *****************
 16576 ;; Defined at:
 16577 ;;		line 307 in file "mcc_generated_files/adcc.c"
 16578 ;; Parameters:    Size  Location     Type
 16579 ;;		None
 16580 ;; Auto vars:     Size  Location     Type
 16581 ;;		None
 16582 ;; Return value:  Size  Location     Type
 16583 ;;                  1    wreg      void 
 16584 ;; Registers used:
 16585 ;;		wreg, status,2, status,0, pclath, tosl
 16586 ;; Tracked objects:
 16587 ;;		On entry : 0/0
 16588 ;;		On exit  : 0/0
 16589 ;;		Unchanged: 0/0
 16590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16595 ;;Total ram usage:        0 bytes
 16596 ;; Hardware stack levels used:    1
 16597 ;; Hardware stack levels required when called:    1
 16598 ;; This function calls:
 16599 ;;		Absolute function
 16600 ;;		_ADCC_DefaultInterruptHandler
 16601 ;; This function is called by:
 16602 ;;		Interrupt level 2
 16603 ;; This function uses a non-reentrant model
 16604 ;;
 16605                           
 16606                           	psect	text94
 16607  006184                     __ptext94:
 16608                           	opt callstack 0
 16609  006184                     _ADCC_ISR:
 16610                           	opt callstack 18
 16611                           
 16612                           ;incstack = 0
 16613  006184  EE13  F154         	lfsr	1,___inthi_sp
 16614                           
 16615                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 16616  006188  0139               	movlb	57	; () banked
 16617  00618A  95A1               	bcf	161,2,b	;volatile
 16618                           
 16619                           ; BSR set to: 57
 16620                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 16621  00618C  0100               	movlb	0	; () banked
 16622  00618E  51EB               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 16623  006190  11EC               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 16624  006192  11ED               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 16625  006194  B4D8               	btfsc	status,2,c
 16626  006196  0011               	retfie		f
 16627                           
 16628                           ; BSR set to: 0
 16629                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 16630  006198  D801               	call	i2u637_48
 16631  00619A  0011               	retfie		f
 16632  00619C                     i2u637_48:
 16633  00619C  0005               	push	
 16634  00619E  6EFA               	movwf	pclath,c
 16635  0061A0  51EB               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 16636  0061A2  6EFD               	movwf	tosl,c
 16637  0061A4  51EC               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 16638  0061A6  6EFE               	movwf	tosh,c
 16639  0061A8  51ED               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 16640  0061AA  6EFF               	movwf	tosu,c
 16641  0061AC  50FA               	movf	pclath,w,c
 16642  0061AE  0012               	return		;indir
 16643  0061B0                     __end_of_ADCC_ISR:
 16644                           	opt callstack 0
 16645                           
 16646 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 16647 ;; Defined at:
 16648 ;;		line 320 in file "mcc_generated_files/adcc.c"
 16649 ;; Parameters:    Size  Location     Type
 16650 ;;		None
 16651 ;; Auto vars:     Size  Location     Type
 16652 ;;		None
 16653 ;; Return value:  Size  Location     Type
 16654 ;;                  1  [STACK] void 
 16655 ;; Registers used:
 16656 ;;		None
 16657 ;; Tracked objects:
 16658 ;;		On entry : 3F/0
 16659 ;;		On exit  : 0/0
 16660 ;;		Unchanged: 0/0
 16661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16666 ;;Total ram usage:        0 bytes
 16667 ;; Hardware stack levels used:    1
 16668 ;; This function calls:
 16669 ;;		Nothing
 16670 ;; This function is called by:
 16671 ;;		_ADCC_Initialize
 16672 ;;		_ADCC_ISR
 16673 ;; This function uses a reentrant model
 16674 ;;
 16675                           
 16676                           	psect	text95
 16677  006830                     __ptext95:
 16678                           	opt callstack 0
 16679  006830                     _ADCC_DefaultInterruptHandler:
 16680                           	opt callstack 18
 16681                           
 16682                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16683                           
 16684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16685                           ;incstack = 0
 16686  006830  0012               	return		;funcret
 16687  006832                     __end_of_ADCC_DefaultInterruptHandler:
 16688                           	opt callstack 0
 16689                           
 16690 ;; *************** function _UART1_tx_vect_isr *****************
 16691 ;; Defined at:
 16692 ;;		line 197 in file "mcc_generated_files/uart1.c"
 16693 ;; Parameters:    Size  Location     Type
 16694 ;;		None
 16695 ;; Auto vars:     Size  Location     Type
 16696 ;;		None
 16697 ;; Return value:  Size  Location     Type
 16698 ;;                  1    wreg      void 
 16699 ;; Registers used:
 16700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16701 ;; Tracked objects:
 16702 ;;		On entry : 0/0
 16703 ;;		On exit  : 0/0
 16704 ;;		Unchanged: 0/0
 16705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16710 ;;Total ram usage:        0 bytes
 16711 ;; Hardware stack levels used:    1
 16712 ;; Hardware stack levels required when called:    1
 16713 ;; This function calls:
 16714 ;;		Absolute function
 16715 ;;		_UART1_Transmit_ISR
 16716 ;; This function is called by:
 16717 ;;		Interrupt level 2
 16718 ;; This function uses a non-reentrant model
 16719 ;;
 16720                           
 16721                           	psect	text96
 16722  00648C                     __ptext96:
 16723                           	opt callstack 0
 16724  00648C                     _UART1_tx_vect_isr:
 16725                           	opt callstack 18
 16726                           
 16727                           ;incstack = 0
 16728  00648C  EE13  F154         	lfsr	1,___inthi_sp
 16729                           
 16730                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 16731  006490  5008               	movf	_UART1_TxInterruptHandler,w,c
 16732  006492  1009               	iorwf	_UART1_TxInterruptHandler+1,w,c
 16733  006494  100A               	iorwf	_UART1_TxInterruptHandler+2,w,c
 16734  006496  B4D8               	btfsc	status,2,c
 16735  006498  0011               	retfie		f
 16736                           
 16737                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 16738  00649A  D801               	call	i2u454_48
 16739  00649C  0011               	retfie		f
 16740  00649E                     i2u454_48:
 16741  00649E  0005               	push	
 16742  0064A0  6EFA               	movwf	pclath,c
 16743  0064A2  5008               	movf	_UART1_TxInterruptHandler,w,c
 16744  0064A4  6EFD               	movwf	tosl,c
 16745  0064A6  5009               	movf	_UART1_TxInterruptHandler+1,w,c
 16746  0064A8  6EFE               	movwf	tosh,c
 16747  0064AA  500A               	movf	_UART1_TxInterruptHandler+2,w,c
 16748  0064AC  6EFF               	movwf	tosu,c
 16749  0064AE  50FA               	movf	pclath,w,c
 16750  0064B0  0012               	return		;indir
 16751  0064B2                     __end_of_UART1_tx_vect_isr:
 16752                           	opt callstack 0
 16753                           
 16754 ;; *************** function _UART1_Transmit_ISR *****************
 16755 ;; Defined at:
 16756 ;;		line 211 in file "mcc_generated_files/uart1.c"
 16757 ;; Parameters:    Size  Location     Type
 16758 ;;		None
 16759 ;; Auto vars:     Size  Location     Type
 16760 ;;		None
 16761 ;; Return value:  Size  Location     Type
 16762 ;;                  1  [STACK] void 
 16763 ;; Registers used:
 16764 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16765 ;; Tracked objects:
 16766 ;;		On entry : 0/0
 16767 ;;		On exit  : 3B/39
 16768 ;;		Unchanged: 0/0
 16769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16774 ;;Total ram usage:        0 bytes
 16775 ;; Hardware stack levels used:    1
 16776 ;; This function calls:
 16777 ;;		Nothing
 16778 ;; This function is called by:
 16779 ;;		_UART1_Initialize
 16780 ;;		_UART1_tx_vect_isr
 16781 ;; This function uses a reentrant model
 16782 ;;
 16783                           
 16784                           	psect	text97
 16785  0061B0                     __ptext97:
 16786                           	opt callstack 0
 16787  0061B0                     _UART1_Transmit_ISR:
 16788                           	opt callstack 18
 16789                           
 16790                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 16791                           
 16792                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16793                           ;incstack = 0
 16794  0061B0  0E40               	movlw	64
 16795  0061B2  6036               	cpfslt	_uart1TxBufferRemaining,c
 16796  0061B4  D010               	goto	l597
 16797                           
 16798                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 16799  0061B6  0E80               	movlw	low _uart1TxBuffer
 16800  0061B8  2437               	addwf	_uart1TxTail,w,c	;volatile
 16801  0061BA  6ED9               	movwf	fsr2l,c
 16802  0061BC  6ADA               	clrf	fsr2h,c
 16803  0061BE  0E02               	movlw	high _uart1TxBuffer
 16804  0061C0  22DA               	addwfc	fsr2h,f,c
 16805  0061C2  50DF               	movf	indf2,w,c
 16806  0061C4  013D               	movlb	61	; () banked
 16807  0061C6  6FEA               	movwf	234,b	;volatile
 16808                           
 16809                           ; BSR set to: 61
 16810  0061C8  2A37               	incf	_uart1TxTail,f,c	;volatile
 16811                           
 16812                           ; BSR set to: 61
 16813                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 16814  0061CA  0E3F               	movlw	63
 16815  0061CC  6437               	cpfsgt	_uart1TxTail,c
 16816  0061CE  D001               	goto	l6807
 16817                           
 16818                           ; BSR set to: 61
 16819                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 16820  0061D0  6A37               	clrf	_uart1TxTail,c	;volatile
 16821  0061D2                     l6807:
 16822                           
 16823                           ; BSR set to: 61
 16824                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 16825  0061D2  2A36               	incf	_uart1TxBufferRemaining,f,c	;volatile
 16826                           
 16827                           ;mcc_generated_files/uart1.c: 220:  } else {
 16828  0061D4  0012               	return	
 16829  0061D6                     l597:
 16830                           
 16831                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 16832  0061D6  0139               	movlb	57	; () banked
 16833  0061D8  9993               	bcf	147,4,b	;volatile
 16834                           
 16835                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 16836  0061DA  0012               	return		;funcret
 16837  0061DC                     __end_of_UART1_Transmit_ISR:
 16838                           	opt callstack 0
 16839                           
 16840 ;; *************** function _UART1_rx_vect_isr *****************
 16841 ;; Defined at:
 16842 ;;		line 204 in file "mcc_generated_files/uart1.c"
 16843 ;; Parameters:    Size  Location     Type
 16844 ;;		None
 16845 ;; Auto vars:     Size  Location     Type
 16846 ;;		None
 16847 ;; Return value:  Size  Location     Type
 16848 ;;                  1    wreg      void 
 16849 ;; Registers used:
 16850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16851 ;; Tracked objects:
 16852 ;;		On entry : 0/0
 16853 ;;		On exit  : 0/0
 16854 ;;		Unchanged: 0/0
 16855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16860 ;;Total ram usage:        0 bytes
 16861 ;; Hardware stack levels used:    1
 16862 ;; Hardware stack levels required when called:    1
 16863 ;; This function calls:
 16864 ;;		Absolute function
 16865 ;;		_UART1_Receive_ISR
 16866 ;; This function is called by:
 16867 ;;		Interrupt level 2
 16868 ;; This function uses a non-reentrant model
 16869 ;;
 16870                           
 16871                           	psect	text98
 16872  0064B4                     __ptext98:
 16873                           	opt callstack 0
 16874  0064B4                     _UART1_rx_vect_isr:
 16875                           	opt callstack 18
 16876                           
 16877                           ;incstack = 0
 16878  0064B4  EE13  F154         	lfsr	1,___inthi_sp
 16879                           
 16880                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 16881  0064B8  500B               	movf	_UART1_RxInterruptHandler,w,c
 16882  0064BA  100C               	iorwf	_UART1_RxInterruptHandler+1,w,c
 16883  0064BC  100D               	iorwf	_UART1_RxInterruptHandler+2,w,c
 16884  0064BE  B4D8               	btfsc	status,2,c
 16885  0064C0  0011               	retfie		f
 16886                           
 16887                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 16888  0064C2  D801               	call	i2u456_48
 16889  0064C4  0011               	retfie		f
 16890  0064C6                     i2u456_48:
 16891  0064C6  0005               	push	
 16892  0064C8  6EFA               	movwf	pclath,c
 16893  0064CA  500B               	movf	_UART1_RxInterruptHandler,w,c
 16894  0064CC  6EFD               	movwf	tosl,c
 16895  0064CE  500C               	movf	_UART1_RxInterruptHandler+1,w,c
 16896  0064D0  6EFE               	movwf	tosh,c
 16897  0064D2  500D               	movf	_UART1_RxInterruptHandler+2,w,c
 16898  0064D4  6EFF               	movwf	tosu,c
 16899  0064D6  50FA               	movf	pclath,w,c
 16900  0064D8  0012               	return		;indir
 16901  0064DA                     __end_of_UART1_rx_vect_isr:
 16902                           	opt callstack 0
 16903                           
 16904 ;; *************** function _UART1_Receive_ISR *****************
 16905 ;; Defined at:
 16906 ;;		line 227 in file "mcc_generated_files/uart1.c"
 16907 ;; Parameters:    Size  Location     Type
 16908 ;;		None
 16909 ;; Auto vars:     Size  Location     Type
 16910 ;;		None
 16911 ;; Return value:  Size  Location     Type
 16912 ;;                  1  [STACK] void 
 16913 ;; Registers used:
 16914 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16915 ;; Tracked objects:
 16916 ;;		On entry : 0/0
 16917 ;;		On exit  : 0/0
 16918 ;;		Unchanged: 0/0
 16919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16924 ;;Total ram usage:        0 bytes
 16925 ;; Hardware stack levels used:    1
 16926 ;; This function calls:
 16927 ;;		Nothing
 16928 ;; This function is called by:
 16929 ;;		_UART1_Initialize
 16930 ;;		_UART1_rx_vect_isr
 16931 ;; This function uses a reentrant model
 16932 ;;
 16933                           
 16934                           	psect	text99
 16935  00661E                     __ptext99:
 16936                           	opt callstack 0
 16937  00661E                     _UART1_Receive_ISR:
 16938                           	opt callstack 18
 16939                           
 16940                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 16941                           
 16942                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16943                           ;incstack = 0
 16944  00661E  0E40               	movlw	low _uart1RxBuffer
 16945  006620  2435               	addwf	_uart1RxHead,w,c	;volatile
 16946  006622  6ED9               	movwf	fsr2l,c
 16947  006624  6ADA               	clrf	fsr2h,c
 16948  006626  0E02               	movlw	high _uart1RxBuffer
 16949  006628  22DA               	addwfc	fsr2h,f,c
 16950  00662A  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 16951  006630  2A35               	incf	_uart1RxHead,f,c	;volatile
 16952                           
 16953                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 16954  006632  0E3F               	movlw	63
 16955  006634  6435               	cpfsgt	_uart1RxHead,c
 16956  006636  D001               	goto	l6817
 16957                           
 16958                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 16959  006638  6A35               	clrf	_uart1RxHead,c	;volatile
 16960  00663A                     l6817:
 16961                           
 16962                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 16963  00663A  2A33               	incf	_uart1RxCount,f,c	;volatile
 16964                           
 16965                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16966  00663C  0012               	return		;funcret
 16967  00663E                     __end_of_UART1_Receive_ISR:
 16968                           	opt callstack 0
 16969                           
 16970 ;; *************** function _UART2_tx_vect_isr *****************
 16971 ;; Defined at:
 16972 ;;		line 195 in file "mcc_generated_files/uart2.c"
 16973 ;; Parameters:    Size  Location     Type
 16974 ;;		None
 16975 ;; Auto vars:     Size  Location     Type
 16976 ;;		None
 16977 ;; Return value:  Size  Location     Type
 16978 ;;                  1    wreg      void 
 16979 ;; Registers used:
 16980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16981 ;; Tracked objects:
 16982 ;;		On entry : 0/0
 16983 ;;		On exit  : 0/0
 16984 ;;		Unchanged: 0/0
 16985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16990 ;;Total ram usage:        0 bytes
 16991 ;; Hardware stack levels used:    1
 16992 ;; Hardware stack levels required when called:    1
 16993 ;; This function calls:
 16994 ;;		Absolute function
 16995 ;;		_UART2_Transmit_ISR
 16996 ;; This function is called by:
 16997 ;;		Interrupt level 2
 16998 ;; This function uses a non-reentrant model
 16999 ;;
 17000                           
 17001                           	psect	text100
 17002  0064DC                     __ptext100:
 17003                           	opt callstack 0
 17004  0064DC                     _UART2_tx_vect_isr:
 17005                           	opt callstack 18
 17006                           
 17007                           ;incstack = 0
 17008  0064DC  EE13  F154         	lfsr	1,___inthi_sp
 17009                           
 17010                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 17011  0064E0  500E               	movf	_UART2_TxInterruptHandler,w,c
 17012  0064E2  100F               	iorwf	_UART2_TxInterruptHandler+1,w,c
 17013  0064E4  1010               	iorwf	_UART2_TxInterruptHandler+2,w,c
 17014  0064E6  B4D8               	btfsc	status,2,c
 17015  0064E8  0011               	retfie		f
 17016                           
 17017                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 17018  0064EA  D801               	call	i2u458_48
 17019  0064EC  0011               	retfie		f
 17020  0064EE                     i2u458_48:
 17021  0064EE  0005               	push	
 17022  0064F0  6EFA               	movwf	pclath,c
 17023  0064F2  500E               	movf	_UART2_TxInterruptHandler,w,c
 17024  0064F4  6EFD               	movwf	tosl,c
 17025  0064F6  500F               	movf	_UART2_TxInterruptHandler+1,w,c
 17026  0064F8  6EFE               	movwf	tosh,c
 17027  0064FA  5010               	movf	_UART2_TxInterruptHandler+2,w,c
 17028  0064FC  6EFF               	movwf	tosu,c
 17029  0064FE  50FA               	movf	pclath,w,c
 17030  006500  0012               	return		;indir
 17031  006502                     __end_of_UART2_tx_vect_isr:
 17032                           	opt callstack 0
 17033                           
 17034 ;; *************** function _UART2_Transmit_ISR *****************
 17035 ;; Defined at:
 17036 ;;		line 213 in file "mcc_generated_files/uart2.c"
 17037 ;; Parameters:    Size  Location     Type
 17038 ;;		None
 17039 ;; Auto vars:     Size  Location     Type
 17040 ;;		None
 17041 ;; Return value:  Size  Location     Type
 17042 ;;                  1  [STACK] void 
 17043 ;; Registers used:
 17044 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17045 ;; Tracked objects:
 17046 ;;		On entry : 0/0
 17047 ;;		On exit  : 3B/39
 17048 ;;		Unchanged: 0/0
 17049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17054 ;;Total ram usage:        0 bytes
 17055 ;; Hardware stack levels used:    1
 17056 ;; This function calls:
 17057 ;;		Nothing
 17058 ;; This function is called by:
 17059 ;;		_UART2_Initialize
 17060 ;;		_UART2_tx_vect_isr
 17061 ;; This function uses a reentrant model
 17062 ;;
 17063                           
 17064                           	psect	text101
 17065  0061DC                     __ptext101:
 17066                           	opt callstack 0
 17067  0061DC                     _UART2_Transmit_ISR:
 17068                           	opt callstack 18
 17069                           
 17070                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 17071                           
 17072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17073                           ;incstack = 0
 17074  0061DC  0E40               	movlw	64
 17075  0061DE  6030               	cpfslt	_uart2TxBufferRemaining,c
 17076  0061E0  D010               	goto	l717
 17077                           
 17078                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 17079  0061E2  0E00               	movlw	low _uart2TxBuffer
 17080  0061E4  2431               	addwf	_uart2TxTail,w,c	;volatile
 17081  0061E6  6ED9               	movwf	fsr2l,c
 17082  0061E8  6ADA               	clrf	fsr2h,c
 17083  0061EA  0E03               	movlw	high _uart2TxBuffer
 17084  0061EC  22DA               	addwfc	fsr2h,f,c
 17085  0061EE  50DF               	movf	indf2,w,c
 17086  0061F0  013D               	movlb	61	; () banked
 17087  0061F2  6FD2               	movwf	210,b	;volatile
 17088                           
 17089                           ; BSR set to: 61
 17090  0061F4  2A31               	incf	_uart2TxTail,f,c	;volatile
 17091                           
 17092                           ; BSR set to: 61
 17093                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 17094  0061F6  0E3F               	movlw	63
 17095  0061F8  6431               	cpfsgt	_uart2TxTail,c
 17096  0061FA  D001               	goto	l6829
 17097                           
 17098                           ; BSR set to: 61
 17099                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 17100  0061FC  6A31               	clrf	_uart2TxTail,c	;volatile
 17101  0061FE                     l6829:
 17102                           
 17103                           ; BSR set to: 61
 17104                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 17105  0061FE  2A30               	incf	_uart2TxBufferRemaining,f,c	;volatile
 17106                           
 17107                           ;mcc_generated_files/uart2.c: 224:     }
 17108  006200  0012               	return	
 17109  006202                     l717:
 17110                           
 17111                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 17112  006202  0139               	movlb	57	; () banked
 17113  006204  9796               	bcf	150,3,b	;volatile
 17114                           
 17115                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 17116  006206  0012               	return		;funcret
 17117  006208                     __end_of_UART2_Transmit_ISR:
 17118                           	opt callstack 0
 17119                           
 17120 ;; *************** function _UART2_rx_vect_isr *****************
 17121 ;; Defined at:
 17122 ;;		line 203 in file "mcc_generated_files/uart2.c"
 17123 ;; Parameters:    Size  Location     Type
 17124 ;;		None
 17125 ;; Auto vars:     Size  Location     Type
 17126 ;;		None
 17127 ;; Return value:  Size  Location     Type
 17128 ;;                  1    wreg      void 
 17129 ;; Registers used:
 17130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 17131 ;; Tracked objects:
 17132 ;;		On entry : 0/0
 17133 ;;		On exit  : 0/0
 17134 ;;		Unchanged: 0/0
 17135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17140 ;;Total ram usage:        0 bytes
 17141 ;; Hardware stack levels used:    1
 17142 ;; Hardware stack levels required when called:    1
 17143 ;; This function calls:
 17144 ;;		Absolute function
 17145 ;;		_UART2_Receive_ISR
 17146 ;; This function is called by:
 17147 ;;		Interrupt level 2
 17148 ;; This function uses a non-reentrant model
 17149 ;;
 17150                           
 17151                           	psect	text102
 17152  006504                     __ptext102:
 17153                           	opt callstack 0
 17154  006504                     _UART2_rx_vect_isr:
 17155                           	opt callstack 18
 17156                           
 17157                           ;incstack = 0
 17158  006504  EE13  F154         	lfsr	1,___inthi_sp
 17159                           
 17160                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 17161  006508  5011               	movf	_UART2_RxInterruptHandler,w,c
 17162  00650A  1012               	iorwf	_UART2_RxInterruptHandler+1,w,c
 17163  00650C  1013               	iorwf	_UART2_RxInterruptHandler+2,w,c
 17164  00650E  B4D8               	btfsc	status,2,c
 17165  006510  0011               	retfie		f
 17166                           
 17167                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 17168  006512  D801               	call	i2u460_48
 17169  006514  0011               	retfie		f
 17170  006516                     i2u460_48:
 17171  006516  0005               	push	
 17172  006518  6EFA               	movwf	pclath,c
 17173  00651A  5011               	movf	_UART2_RxInterruptHandler,w,c
 17174  00651C  6EFD               	movwf	tosl,c
 17175  00651E  5012               	movf	_UART2_RxInterruptHandler+1,w,c
 17176  006520  6EFE               	movwf	tosh,c
 17177  006522  5013               	movf	_UART2_RxInterruptHandler+2,w,c
 17178  006524  6EFF               	movwf	tosu,c
 17179  006526  50FA               	movf	pclath,w,c
 17180  006528  0012               	return		;indir
 17181  00652A                     __end_of_UART2_rx_vect_isr:
 17182                           	opt callstack 0
 17183                           
 17184 ;; *************** function _UART2_Receive_ISR *****************
 17185 ;; Defined at:
 17186 ;;		line 233 in file "mcc_generated_files/uart2.c"
 17187 ;; Parameters:    Size  Location     Type
 17188 ;;		None
 17189 ;; Auto vars:     Size  Location     Type
 17190 ;;		None
 17191 ;; Return value:  Size  Location     Type
 17192 ;;                  1  [STACK] void 
 17193 ;; Registers used:
 17194 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17195 ;; Tracked objects:
 17196 ;;		On entry : 0/0
 17197 ;;		On exit  : 0/0
 17198 ;;		Unchanged: 0/0
 17199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17204 ;;Total ram usage:        0 bytes
 17205 ;; Hardware stack levels used:    1
 17206 ;; This function calls:
 17207 ;;		Nothing
 17208 ;; This function is called by:
 17209 ;;		_UART2_Initialize
 17210 ;;		_UART2_rx_vect_isr
 17211 ;; This function uses a reentrant model
 17212 ;;
 17213                           
 17214                           	psect	text103
 17215  00663E                     __ptext103:
 17216                           	opt callstack 0
 17217  00663E                     _UART2_Receive_ISR:
 17218                           	opt callstack 18
 17219                           
 17220                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 17221                           
 17222                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17223                           ;incstack = 0
 17224  00663E  0E00               	movlw	low _uart2RxBuffer
 17225  006640  242F               	addwf	_uart2RxHead,w,c	;volatile
 17226  006642  6ED9               	movwf	fsr2l,c
 17227  006644  6ADA               	clrf	fsr2h,c
 17228  006646  0E02               	movlw	high _uart2RxBuffer
 17229  006648  22DA               	addwfc	fsr2h,f,c
 17230  00664A  006F F743 FFDF     	movff	15824,indf2	;volatile
 17231  006650  2A2F               	incf	_uart2RxHead,f,c	;volatile
 17232                           
 17233                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 17234  006652  0E3F               	movlw	63
 17235  006654  642F               	cpfsgt	_uart2RxHead,c
 17236  006656  D001               	goto	l6839
 17237                           
 17238                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 17239  006658  6A2F               	clrf	_uart2RxHead,c	;volatile
 17240  00665A                     l6839:
 17241                           
 17242                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 17243  00665A  2A2D               	incf	_uart2RxCount,f,c	;volatile
 17244                           
 17245                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 17246  00665C  0012               	return		;funcret
 17247  00665E                     __end_of_UART2_Receive_ISR:
 17248                           	opt callstack 0
 17249                           
 17250 ;; *************** function _TMR6_ISR *****************
 17251 ;; Defined at:
 17252 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 17253 ;; Parameters:    Size  Location     Type
 17254 ;;		None
 17255 ;; Auto vars:     Size  Location     Type
 17256 ;;		None
 17257 ;; Return value:  Size  Location     Type
 17258 ;;                  1    wreg      void 
 17259 ;; Registers used:
 17260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 17261 ;; Tracked objects:
 17262 ;;		On entry : 0/0
 17263 ;;		On exit  : 0/0
 17264 ;;		Unchanged: 0/0
 17265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17268 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17269 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17270 ;;Total ram usage:        1 bytes
 17271 ;; Hardware stack levels used:    1
 17272 ;; Hardware stack levels required when called:    2
 17273 ;; This function calls:
 17274 ;;		_TMR6_CallBack
 17275 ;; This function is called by:
 17276 ;;		Interrupt level 2
 17277 ;; This function uses a non-reentrant model
 17278 ;;
 17279                           
 17280                           	psect	text104
 17281  006708                     __ptext104:
 17282                           	opt callstack 0
 17283  006708                     _TMR6_ISR:
 17284                           	opt callstack 17
 17285                           
 17286                           ;incstack = 0
 17287  006708  0060  F0E4  F059   	movff	btemp,??_TMR6_ISR
 17288  00670E  EE13  F154         	lfsr	1,___inthi_sp
 17289                           
 17290                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 17291  006712  0139               	movlb	57	; () banked
 17292  006714  91A9               	bcf	169,0,b	;volatile
 17293                           
 17294                           ; BSR set to: 57
 17295                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 17296  006716  ECA7  F032         	call	_TMR6_CallBack	;wreg free
 17297  00671A  0060  F164  F039   	movff	??_TMR6_ISR,btemp
 17298  006720  0011               	retfie		f
 17299  006722                     __end_of_TMR6_ISR:
 17300                           	opt callstack 0
 17301                           
 17302 ;; *************** function _TMR6_CallBack *****************
 17303 ;; Defined at:
 17304 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 17305 ;; Parameters:    Size  Location     Type
 17306 ;;		None
 17307 ;; Auto vars:     Size  Location     Type
 17308 ;;		None
 17309 ;; Return value:  Size  Location     Type
 17310 ;;                  1  [STACK] void 
 17311 ;; Registers used:
 17312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 17313 ;; Tracked objects:
 17314 ;;		On entry : 3F/39
 17315 ;;		On exit  : 0/0
 17316 ;;		Unchanged: 0/0
 17317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17322 ;;Total ram usage:        0 bytes
 17323 ;; Hardware stack levels used:    1
 17324 ;; Hardware stack levels required when called:    1
 17325 ;; This function calls:
 17326 ;;		Absolute function
 17327 ;;		_TMR6_DefaultInterruptHandler
 17328 ;; This function is called by:
 17329 ;;		_TMR6_ISR
 17330 ;; This function uses a reentrant model
 17331 ;;
 17332                           
 17333                           	psect	text105
 17334  00654E                     __ptext105:
 17335                           	opt callstack 0
 17336  00654E                     _TMR6_CallBack:
 17337                           	opt callstack 17
 17338                           
 17339                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 17340                           
 17341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17342                           ;incstack = 0
 17343  00654E  0100               	movlb	0	; () banked
 17344  006550  51E8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 17345  006552  11E9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 17346  006554  11EA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 17347  006556  B4D8               	btfsc	status,2,c
 17348  006558  0012               	return	
 17349                           
 17350                           ; BSR set to: 0
 17351                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 17352  00655A  D801               	call	u381_48
 17353  00655C  0012               	return	
 17354  00655E                     u381_48:
 17355  00655E  0005               	push	
 17356  006560  6EFA               	movwf	pclath,c
 17357  006562  51E8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 17358  006564  6EFD               	movwf	tosl,c
 17359  006566  51E9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 17360  006568  6EFE               	movwf	tosh,c
 17361  00656A  51EA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 17362  00656C  6EFF               	movwf	tosu,c
 17363  00656E  50FA               	movf	pclath,w,c
 17364  006570  0012               	return		;indir
 17365  006572                     __end_of_TMR6_CallBack:
 17366                           	opt callstack 0
 17367                           
 17368 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 17369 ;; Defined at:
 17370 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 17371 ;; Parameters:    Size  Location     Type
 17372 ;;		None
 17373 ;; Auto vars:     Size  Location     Type
 17374 ;;  i               1  [STACK] unsigned char 
 17375 ;; Return value:  Size  Location     Type
 17376 ;;                  1  [STACK] void 
 17377 ;; Registers used:
 17378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 17379 ;; Tracked objects:
 17380 ;;		On entry : 3F/0
 17381 ;;		On exit  : 0/0
 17382 ;;		Unchanged: 0/0
 17383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17388 ;;Total ram usage:        0 bytes
 17389 ;; Hardware stack levels used:    1
 17390 ;; This function calls:
 17391 ;;		Nothing
 17392 ;; This function is called by:
 17393 ;;		_TMR6_Initialize
 17394 ;;		_TMR6_CallBack
 17395 ;; This function uses a reentrant model
 17396 ;;
 17397                           
 17398                           	psect	text106
 17399  005E8C                     __ptext106:
 17400                           	opt callstack 0
 17401  005E8C                     _TMR6_DefaultInterruptHandler:
 17402                           	opt callstack 0
 17403                           
 17404                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17405  005E8C  52E6               	movf	postinc1,f,c
 17406                           
 17407                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 17408                           ;stkvar	_i @ sp[(-1)+0]
 17409                           
 17410                           ;incstack = 0
 17411  005E8E  0EFF               	movlw	-1
 17412  005E90  6AE3               	clrf	plusw1,c
 17413  005E92                     l6367:
 17414                           
 17415                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 17416                           ;stkvar	_i @ sp[(-1)+0]
 17417  005E92  0EFF               	movlw	-1
 17418  005E94  50E3               	movf	plusw1,w,c
 17419  005E96  0D02               	mullw	2
 17420  005E98  50F3               	movf	prodl,w,c
 17421  005E9A  0FCE               	addlw	low _tickCount
 17422  005E9C  6ED9               	movwf	fsr2l,c
 17423  005E9E  6ADA               	clrf	fsr2h,c
 17424  005EA0  50DE               	movf	postinc2,w,c
 17425  005EA2  10DE               	iorwf	postinc2,w,c
 17426  005EA4  B4D8               	btfsc	status,2,c
 17427  005EA6  D00A               	goto	l6371
 17428                           
 17429                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 17430                           ;stkvar	_i @ sp[(-1)+0]
 17431  005EA8  0EFF               	movlw	-1
 17432  005EAA  50E3               	movf	plusw1,w,c
 17433  005EAC  0D02               	mullw	2
 17434  005EAE  50F3               	movf	prodl,w,c
 17435  005EB0  0FCE               	addlw	low _tickCount
 17436  005EB2  6ED9               	movwf	fsr2l,c
 17437  005EB4  6ADA               	clrf	fsr2h,c
 17438  005EB6  06DE               	decf	postinc2,f,c
 17439  005EB8  0E00               	movlw	0
 17440  005EBA  5ADD               	subwfb	postdec2,f,c
 17441  005EBC                     l6371:
 17442                           
 17443                           ;mcc_generated_files/tmr6.c: 207:  }
 17444                           ;stkvar	_i @ sp[(-1)+0]
 17445  005EBC  0EFF               	movlw	-1
 17446  005EBE  2AE3               	incf	plusw1,f,c
 17447                           
 17448                           ;stkvar	_i @ sp[(-1)+0]
 17449  005EC0  0EFF               	movlw	-1
 17450  005EC2  006F FF8C  F039    	movff	plusw1,btemp
 17451  005EC8  0E05               	movlw	5
 17452  005ECA  6439               	cpfsgt	btemp,c
 17453  005ECC  D7E2               	goto	l6367
 17454                           
 17455                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17456  005ECE  52E5               	movf	postdec1,f,c
 17457  005ED0  0012               	return		;funcret
 17458  005ED2                     __end_of_TMR6_DefaultInterruptHandler:
 17459                           	opt callstack 0
 17460                           
 17461 ;; *************** function _DMA1_DMASCNT_ISR *****************
 17462 ;; Defined at:
 17463 ;;		line 126 in file "mcc_generated_files/dma1.c"
 17464 ;; Parameters:    Size  Location     Type
 17465 ;;		None
 17466 ;; Auto vars:     Size  Location     Type
 17467 ;;		None
 17468 ;; Return value:  Size  Location     Type
 17469 ;;                  1    wreg      void 
 17470 ;; Registers used:
 17471 ;;		None
 17472 ;; Tracked objects:
 17473 ;;		On entry : 0/0
 17474 ;;		On exit  : 3F/0
 17475 ;;		Unchanged: 0/0
 17476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17481 ;;Total ram usage:        0 bytes
 17482 ;; Hardware stack levels used:    1
 17483 ;; This function calls:
 17484 ;;		Nothing
 17485 ;; This function is called by:
 17486 ;;		Interrupt level 2
 17487 ;; This function uses a non-reentrant model
 17488 ;;
 17489                           
 17490                           	psect	text107
 17491  0067BC                     __ptext107:
 17492                           	opt callstack 0
 17493  0067BC                     _DMA1_DMASCNT_ISR:
 17494                           	opt callstack 19
 17495                           
 17496                           ;incstack = 0
 17497  0067BC  EE13  F154         	lfsr	1,___inthi_sp
 17498                           
 17499                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 17500  0067C0  0139               	movlb	57	; () banked
 17501  0067C2  91A2               	bcf	162,0,b	;volatile
 17502                           
 17503                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 17504  0067C4  0100               	movlb	0	; () banked
 17505  0067C6  97C2               	bcf	_spi_link& (0+255),3,b	;volatile
 17506                           
 17507                           ; BSR set to: 0
 17508  0067C8  0011               	retfie		f
 17509  0067CA                     __end_of_DMA1_DMASCNT_ISR:
 17510                           	opt callstack 0
 17511                           
 17512 ;; *************** function _DMA1_DMADCNT_ISR *****************
 17513 ;; Defined at:
 17514 ;;		line 133 in file "mcc_generated_files/dma1.c"
 17515 ;; Parameters:    Size  Location     Type
 17516 ;;		None
 17517 ;; Auto vars:     Size  Location     Type
 17518 ;;		None
 17519 ;; Return value:  Size  Location     Type
 17520 ;;                  1    wreg      void 
 17521 ;; Registers used:
 17522 ;;		None
 17523 ;; Tracked objects:
 17524 ;;		On entry : 0/0
 17525 ;;		On exit  : 3F/39
 17526 ;;		Unchanged: 0/0
 17527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17532 ;;Total ram usage:        0 bytes
 17533 ;; Hardware stack levels used:    1
 17534 ;; This function calls:
 17535 ;;		Nothing
 17536 ;; This function is called by:
 17537 ;;		Interrupt level 2
 17538 ;; This function uses a non-reentrant model
 17539 ;;
 17540                           
 17541                           	psect	text108
 17542  0067D4                     __ptext108:
 17543                           	opt callstack 0
 17544  0067D4                     _DMA1_DMADCNT_ISR:
 17545                           	opt callstack 19
 17546                           
 17547                           ; BSR set to: 0
 17548                           ;incstack = 0
 17549  0067D4  EE13  F154         	lfsr	1,___inthi_sp
 17550                           
 17551                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 17552  0067D8  0139               	movlb	57	; () banked
 17553  0067DA  93A2               	bcf	162,1,b	;volatile
 17554                           
 17555                           ; BSR set to: 57
 17556  0067DC  0011               	retfie		f
 17557  0067DE                     __end_of_DMA1_DMADCNT_ISR:
 17558                           	opt callstack 0
 17559                           
 17560 ;; *************** function _DMA1_DMAA_ISR *****************
 17561 ;; Defined at:
 17562 ;;		line 143 in file "mcc_generated_files/dma1.c"
 17563 ;; Parameters:    Size  Location     Type
 17564 ;;		None
 17565 ;; Auto vars:     Size  Location     Type
 17566 ;;		None
 17567 ;; Return value:  Size  Location     Type
 17568 ;;                  1    wreg      void 
 17569 ;; Registers used:
 17570 ;;		None
 17571 ;; Tracked objects:
 17572 ;;		On entry : 0/0
 17573 ;;		On exit  : 3F/39
 17574 ;;		Unchanged: 0/0
 17575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17580 ;;Total ram usage:        0 bytes
 17581 ;; Hardware stack levels used:    1
 17582 ;; This function calls:
 17583 ;;		Nothing
 17584 ;; This function is called by:
 17585 ;;		Interrupt level 2
 17586 ;; This function uses a non-reentrant model
 17587 ;;
 17588                           
 17589                           	psect	text109
 17590  0067E0                     __ptext109:
 17591                           	opt callstack 0
 17592  0067E0                     _DMA1_DMAA_ISR:
 17593                           	opt callstack 19
 17594                           
 17595                           ; BSR set to: 57
 17596                           ;incstack = 0
 17597  0067E0  EE13  F154         	lfsr	1,___inthi_sp
 17598                           
 17599                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 17600  0067E4  0139               	movlb	57	; () banked
 17601  0067E6  97A2               	bcf	162,3,b	;volatile
 17602                           
 17603                           ; BSR set to: 57
 17604  0067E8  0011               	retfie		f
 17605  0067EA                     __end_of_DMA1_DMAA_ISR:
 17606                           	opt callstack 0
 17607                           
 17608 ;; *************** function _DMA1_DMAOR_ISR *****************
 17609 ;; Defined at:
 17610 ;;		line 154 in file "mcc_generated_files/dma1.c"
 17611 ;; Parameters:    Size  Location     Type
 17612 ;;		None
 17613 ;; Auto vars:     Size  Location     Type
 17614 ;;		None
 17615 ;; Return value:  Size  Location     Type
 17616 ;;                  1    wreg      void 
 17617 ;; Registers used:
 17618 ;;		None
 17619 ;; Tracked objects:
 17620 ;;		On entry : 0/0
 17621 ;;		On exit  : 3F/39
 17622 ;;		Unchanged: 0/0
 17623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17628 ;;Total ram usage:        0 bytes
 17629 ;; Hardware stack levels used:    1
 17630 ;; This function calls:
 17631 ;;		Nothing
 17632 ;; This function is called by:
 17633 ;;		Interrupt level 2
 17634 ;; This function uses a non-reentrant model
 17635 ;;
 17636                           
 17637                           	psect	text110
 17638  0067EC                     __ptext110:
 17639                           	opt callstack 0
 17640  0067EC                     _DMA1_DMAOR_ISR:
 17641                           	opt callstack 19
 17642                           
 17643                           ; BSR set to: 57
 17644                           ;incstack = 0
 17645  0067EC  EE13  F154         	lfsr	1,___inthi_sp
 17646                           
 17647                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 17648  0067F0  0139               	movlb	57	; () banked
 17649  0067F2  95A2               	bcf	162,2,b	;volatile
 17650                           
 17651                           ; BSR set to: 57
 17652  0067F4  0011               	retfie		f
 17653  0067F6                     __end_of_DMA1_DMAOR_ISR:
 17654                           	opt callstack 0
 17655                           
 17656 ;; *************** function _TMR5_ISR *****************
 17657 ;; Defined at:
 17658 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 17659 ;; Parameters:    Size  Location     Type
 17660 ;;		None
 17661 ;; Auto vars:     Size  Location     Type
 17662 ;;		None
 17663 ;; Return value:  Size  Location     Type
 17664 ;;                  1    wreg      void 
 17665 ;; Registers used:
 17666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 17667 ;; Tracked objects:
 17668 ;;		On entry : 0/0
 17669 ;;		On exit  : 0/0
 17670 ;;		Unchanged: 0/0
 17671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17674 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17675 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17676 ;;Total ram usage:        3 bytes
 17677 ;; Hardware stack levels used:    1
 17678 ;; Hardware stack levels required when called:    2
 17679 ;; This function calls:
 17680 ;;		_TMR5_CallBack
 17681 ;;		_TMR5_WriteTimer
 17682 ;; This function is called by:
 17683 ;;		Interrupt level 2
 17684 ;; This function uses a non-reentrant model
 17685 ;;
 17686                           
 17687                           	psect	text111
 17688  005D1C                     __ptext111:
 17689                           	opt callstack 0
 17690  005D1C                     _TMR5_ISR:
 17691                           	opt callstack 17
 17692                           
 17693                           ; BSR set to: 57
 17694                           ;incstack = 0
 17695  005D1C  0060  F110  F05C   	movff	btemp+11,??_TMR5_ISR+2
 17696  005D22  EE13  F154         	lfsr	1,___inthi_sp
 17697                           
 17698                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 17699  005D26  0139               	movlb	57	; () banked
 17700  005D28  9DA8               	bcf	168,6,b	;volatile
 17701                           
 17702                           ; BSR set to: 57
 17703                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 17704  005D2A  0060  F097  FFE6   	movff	_timer5ReloadVal,postinc1
 17705  005D30  0060  F09B  FFE6   	movff	_timer5ReloadVal+1,postinc1
 17706  005D36  EC8A  F02F         	call	_TMR5_WriteTimer	;wreg free
 17707                           
 17708                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 17709  005D3A  0100               	movlb	0	; () banked
 17710  005D3C  51C1               	movf	(_V+97)& (0+255),w,b	;volatile
 17711  005D3E  6E5A               	movwf	??_TMR5_ISR& (0+255),c
 17712  005D40  6A5B               	clrf	(??_TMR5_ISR+1)& (0+255),c
 17713  005D42  0E05               	movlw	5
 17714  005D44  265A               	addwf	??_TMR5_ISR,f,c
 17715  005D46  0E00               	movlw	0
 17716  005D48  225B               	addwfc	??_TMR5_ISR+1,f,c
 17717  005D4A  4A23               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 17718  005D4C  2A24               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 17719  005D4E  505A               	movf	??_TMR5_ISR,w,c
 17720  005D50  5C23               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 17721  005D52  505B               	movf	??_TMR5_ISR+1,w,c
 17722  005D54  5824               	subwfb	TMR5_ISR@CountCallBack+1,w,c	;volatile
 17723  005D56  A0D8               	btfss	status,0,c
 17724  005D58  D004               	goto	i2l1141
 17725                           
 17726                           ; BSR set to: 0
 17727                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 17728  005D5A  ECB9  F032         	call	_TMR5_CallBack	;wreg free
 17729                           
 17730                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 17731  005D5E  6A23               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 17732  005D60  6A24               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 17733  005D62                     i2l1141:
 17734  005D62  0060  F170  F044   	movff	??_TMR5_ISR+2,btemp+11
 17735  005D68  0011               	retfie		f
 17736  005D6A                     __end_of_TMR5_ISR:
 17737                           	opt callstack 0
 17738                           
 17739 ;; *************** function _TMR5_WriteTimer *****************
 17740 ;; Defined at:
 17741 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 17742 ;; Parameters:    Size  Location     Type
 17743 ;;  timerVal        2  [STACK] unsigned short 
 17744 ;; Auto vars:     Size  Location     Type
 17745 ;;		None
 17746 ;; Return value:  Size  Location     Type
 17747 ;;                  1  [STACK] void 
 17748 ;; Registers used:
 17749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17750 ;; Tracked objects:
 17751 ;;		On entry : 3F/39
 17752 ;;		On exit  : 0/0
 17753 ;;		Unchanged: 0/0
 17754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17759 ;;Total ram usage:        0 bytes
 17760 ;; Hardware stack levels used:    1
 17761 ;; This function calls:
 17762 ;;		Nothing
 17763 ;; This function is called by:
 17764 ;;		_TMR5_ISR
 17765 ;; This function uses a reentrant model
 17766 ;;
 17767                           
 17768                           	psect	text112
 17769  005F14                     __ptext112:
 17770                           	opt callstack 0
 17771  005F14                     _TMR5_WriteTimer:
 17772                           	opt callstack 18
 17773                           
 17774                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 17775                           
 17776                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17777                           ;incstack = 0
 17778  005F14  A49A               	btfss	16282,2,c	;volatile
 17779  005F16  D00F               	goto	l6855
 17780                           
 17781                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 17782  005F18  909A               	bcf	16282,0,c	;volatile
 17783                           
 17784                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 17785                           ;stkvar	_timerVal @ sp[(0)+-2]
 17786  005F1A  0EFF               	movlw	255
 17787  005F1C  24E1               	addwf	fsr1l,w,c
 17788  005F1E  6ED9               	movwf	fsr2l,c
 17789  005F20  0EFF               	movlw	255
 17790  005F22  20E2               	addwfc	fsr1h,w,c
 17791  005F24  6EDA               	movwf	fsr2h,c
 17792  005F26  50DF               	movf	indf2,w,c
 17793  005F28  6E99               	movwf	16281,c	;volatile
 17794                           
 17795                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 17796                           ;stkvar	_timerVal @ sp[(0)+-2]
 17797  005F2A  0EFE               	movlw	-2
 17798  005F2C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 17799                           
 17800                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 17801  005F32  809A               	bsf	16282,0,c	;volatile
 17802                           
 17803                           ;mcc_generated_files/tmr5.c: 142:  } else {
 17804  005F34  D00C               	goto	l1124
 17805  005F36                     l6855:
 17806                           
 17807                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 17808                           ;stkvar	_timerVal @ sp[(0)+-2]
 17809  005F36  0EFF               	movlw	255
 17810  005F38  24E1               	addwf	fsr1l,w,c
 17811  005F3A  6ED9               	movwf	fsr2l,c
 17812  005F3C  0EFF               	movlw	255
 17813  005F3E  20E2               	addwfc	fsr1h,w,c
 17814  005F40  6EDA               	movwf	fsr2h,c
 17815  005F42  50DF               	movf	indf2,w,c
 17816  005F44  6E99               	movwf	16281,c	;volatile
 17817                           
 17818                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 17819                           ;stkvar	_timerVal @ sp[(0)+-2]
 17820  005F46  0EFE               	movlw	-2
 17821  005F48  006F FF8F FF98     	movff	plusw1,16280	;volatile
 17822  005F4E                     l1124:
 17823                           
 17824                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 17825  005F4E  52E5               	movf	postdec1,f,c
 17826  005F50  52E5               	movf	postdec1,f,c
 17827  005F52  0012               	return		;funcret
 17828  005F54                     __end_of_TMR5_WriteTimer:
 17829                           	opt callstack 0
 17830                           
 17831 ;; *************** function _TMR5_CallBack *****************
 17832 ;; Defined at:
 17833 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 17834 ;; Parameters:    Size  Location     Type
 17835 ;;		None
 17836 ;; Auto vars:     Size  Location     Type
 17837 ;;		None
 17838 ;; Return value:  Size  Location     Type
 17839 ;;                  1  [STACK] void 
 17840 ;; Registers used:
 17841 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 17842 ;; Tracked objects:
 17843 ;;		On entry : 3F/0
 17844 ;;		On exit  : 0/0
 17845 ;;		Unchanged: 0/0
 17846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17851 ;;Total ram usage:        0 bytes
 17852 ;; Hardware stack levels used:    1
 17853 ;; Hardware stack levels required when called:    1
 17854 ;; This function calls:
 17855 ;;		Absolute function
 17856 ;;		_TMR5_DefaultInterruptHandler
 17857 ;; This function is called by:
 17858 ;;		_TMR5_ISR
 17859 ;; This function uses a reentrant model
 17860 ;;
 17861                           
 17862                           	psect	text113
 17863  006572                     __ptext113:
 17864                           	opt callstack 0
 17865  006572                     _TMR5_CallBack:
 17866                           	opt callstack 17
 17867                           
 17868                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 17869                           
 17870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17871                           ;incstack = 0
 17872  006572  0100               	movlb	0	; () banked
 17873  006574  51E5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17874  006576  11E6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17875  006578  11E7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17876  00657A  B4D8               	btfsc	status,2,c
 17877  00657C  0012               	return	
 17878                           
 17879                           ; BSR set to: 0
 17880                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 17881  00657E  D801               	call	u384_48
 17882  006580  0012               	return	
 17883  006582                     u384_48:
 17884  006582  0005               	push	
 17885  006584  6EFA               	movwf	pclath,c
 17886  006586  51E5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17887  006588  6EFD               	movwf	tosl,c
 17888  00658A  51E6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17889  00658C  6EFE               	movwf	tosh,c
 17890  00658E  51E7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17891  006590  6EFF               	movwf	tosu,c
 17892  006592  50FA               	movf	pclath,w,c
 17893  006594  0012               	return		;indir
 17894  006596                     __end_of_TMR5_CallBack:
 17895                           	opt callstack 0
 17896                           
 17897 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 17898 ;; Defined at:
 17899 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 17900 ;; Parameters:    Size  Location     Type
 17901 ;;		None
 17902 ;; Auto vars:     Size  Location     Type
 17903 ;;		None
 17904 ;; Return value:  Size  Location     Type
 17905 ;;                  1  [STACK] void 
 17906 ;; Registers used:
 17907 ;;		wreg, status,2, status,0, btemp+11
 17908 ;; Tracked objects:
 17909 ;;		On entry : 3F/0
 17910 ;;		On exit  : 0/0
 17911 ;;		Unchanged: 0/0
 17912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17917 ;;Total ram usage:        0 bytes
 17918 ;; Hardware stack levels used:    1
 17919 ;; This function calls:
 17920 ;;		Nothing
 17921 ;; This function is called by:
 17922 ;;		_TMR5_Initialize
 17923 ;;		_TMR5_CallBack
 17924 ;; This function uses a reentrant model
 17925 ;;
 17926                           
 17927                           	psect	text114
 17928  006722                     __ptext114:
 17929                           	opt callstack 0
 17930  006722                     _TMR5_DefaultInterruptHandler:
 17931                           	opt callstack 17
 17932                           
 17933                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 17934                           
 17935                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17936                           ;incstack = 0
 17937  006722  A0BE               	btfss	16318,0,c	;volatile
 17938  006724  D002               	goto	u358_40
 17939  006726  0E01               	movlw	1
 17940  006728  D001               	goto	u358_46
 17941  00672A                     u358_40:
 17942  00672A  0E00               	movlw	0
 17943  00672C                     u358_46:
 17944  00672C  0AFF               	xorlw	255
 17945  00672E  6E44               	movwf	btemp+11,c
 17946  006730  50BE               	movf	16318,w,c	;volatile
 17947  006732  1844               	xorwf	btemp+11,w,c
 17948  006734  0BFE               	andlw	-2
 17949  006736  1844               	xorwf	btemp+11,w,c
 17950  006738  6EBE               	movwf	16318,c	;volatile
 17951                           
 17952                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17953  00673A  0012               	return		;funcret
 17954  00673C                     __end_of_TMR5_DefaultInterruptHandler:
 17955                           	opt callstack 0
 17956                           
 17957                           ;
 17958                           ; Interrupt Vector Table @ 0x8
 17959                           ;
 17960                           
 17961                           	psect	ivt0x8
 17962  000008                     __pivt0x8:
 17963                           	opt callstack 0
 17964  000008                     ivt0x8_base:
 17965                           	opt callstack 0
 17966                           
 17967                           ; Vector 0 : SWINT
 17968  000008  1A09               	dw	_Default_ISR shr (0+2)
 17969                           
 17970                           ; Vector 1 : HLVD
 17971  00000A  1A09               	dw	_Default_ISR shr (0+2)
 17972                           
 17973                           ; Vector 2 : OSF
 17974  00000C  1A09               	dw	_Default_ISR shr (0+2)
 17975                           
 17976                           ; Vector 3 : CSW
 17977  00000E  1A09               	dw	_Default_ISR shr (0+2)
 17978                           
 17979                           ; Vector 4 : NVM
 17980  000010  1A09               	dw	_Default_ISR shr (0+2)
 17981                           
 17982                           ; Vector 5 : SCAN
 17983  000012  1A09               	dw	_Default_ISR shr (0+2)
 17984                           
 17985                           ; Vector 6 : CRC
 17986  000014  1A09               	dw	_Default_ISR shr (0+2)
 17987                           
 17988                           ; Vector 7 : IOC
 17989  000016  1A09               	dw	_Default_ISR shr (0+2)
 17990                           
 17991                           ; Vector 8 : INT0
 17992  000018  19E3               	dw	_INT0_ISR shr (0+2)
 17993                           
 17994                           ; Vector 9 : ZCD
 17995  00001A  1A09               	dw	_Default_ISR shr (0+2)
 17996                           
 17997                           ; Vector 10 : AD
 17998  00001C  1861               	dw	_ADCC_ISR shr (0+2)
 17999                           
 18000                           ; Vector 11 : ADT
 18001  00001E  1A09               	dw	_Default_ISR shr (0+2)
 18002                           
 18003                           ; Vector 12 : CMP1
 18004  000020  1A09               	dw	_Default_ISR shr (0+2)
 18005                           
 18006                           ; Vector 13 : SMT1
 18007  000022  1A09               	dw	_Default_ISR shr (0+2)
 18008                           
 18009                           ; Vector 14 : SMT1PRA
 18010  000024  1A09               	dw	_Default_ISR shr (0+2)
 18011                           
 18012                           ; Vector 15 : SMT1PRW
 18013  000026  1A09               	dw	_Default_ISR shr (0+2)
 18014                           
 18015                           ; Vector 16 : DMA1SCNT
 18016  000028  19EF               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 18017                           
 18018                           ; Vector 17 : DMA1DCNT
 18019  00002A  19F5               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 18020                           
 18021                           ; Vector 18 : DMA1OR
 18022  00002C  19FB               	dw	_DMA1_DMAOR_ISR shr (0+2)
 18023                           
 18024                           ; Vector 19 : DMA1A
 18025  00002E  19F8               	dw	_DMA1_DMAA_ISR shr (0+2)
 18026                           
 18027                           ; Vector 20 : SPI1RX
 18028  000030  1A09               	dw	_Default_ISR shr (0+2)
 18029                           
 18030                           ; Vector 21 : SPI1TX
 18031  000032  1A09               	dw	_Default_ISR shr (0+2)
 18032                           
 18033                           ; Vector 22 : SPI1
 18034  000034  1A09               	dw	_Default_ISR shr (0+2)
 18035                           
 18036                           ; Vector 23 : I2C1RX
 18037  000036  1A09               	dw	_Default_ISR shr (0+2)
 18038                           
 18039                           ; Vector 24 : I2C1TX
 18040  000038  1A09               	dw	_Default_ISR shr (0+2)
 18041                           
 18042                           ; Vector 25 : I2C1
 18043  00003A  1A09               	dw	_Default_ISR shr (0+2)
 18044                           
 18045                           ; Vector 26 : I2C1E
 18046  00003C  1A09               	dw	_Default_ISR shr (0+2)
 18047                           
 18048                           ; Vector 27 : U1RX
 18049  00003E  192D               	dw	_UART1_rx_vect_isr shr (0+2)
 18050                           
 18051                           ; Vector 28 : U1TX
 18052  000040  1923               	dw	_UART1_tx_vect_isr shr (0+2)
 18053                           
 18054                           ; Vector 29 : U1E
 18055  000042  1A09               	dw	_Default_ISR shr (0+2)
 18056                           
 18057                           ; Vector 30 : U1
 18058  000044  1A09               	dw	_Default_ISR shr (0+2)
 18059                           
 18060                           ; Vector 31 : TMR0
 18061  000046  1A09               	dw	_Default_ISR shr (0+2)
 18062                           
 18063                           ; Vector 32 : TMR1
 18064  000048  1A09               	dw	_Default_ISR shr (0+2)
 18065                           
 18066                           ; Vector 33 : TMR1G
 18067  00004A  1A09               	dw	_Default_ISR shr (0+2)
 18068                           
 18069                           ; Vector 34 : TMR2
 18070  00004C  1A09               	dw	_Default_ISR shr (0+2)
 18071                           
 18072                           ; Vector 35 : CCP1
 18073  00004E  1A09               	dw	_Default_ISR shr (0+2)
 18074                           
 18075                           ; Vector 36 : Undefined
 18076  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 18077                           
 18078                           ; Vector 37 : NCO1
 18079  000052  1A09               	dw	_Default_ISR shr (0+2)
 18080                           
 18081                           ; Vector 38 : CWG1
 18082  000054  1A09               	dw	_Default_ISR shr (0+2)
 18083                           
 18084                           ; Vector 39 : CLC1
 18085  000056  1A09               	dw	_Default_ISR shr (0+2)
 18086                           
 18087                           ; Vector 40 : INT1
 18088  000058  19E7               	dw	_INT1_ISR shr (0+2)
 18089                           
 18090                           ; Vector 41 : CMP2
 18091  00005A  1A09               	dw	_Default_ISR shr (0+2)
 18092                           
 18093                           ; Vector 42 : DMA2SCNT
 18094  00005C  1A09               	dw	_Default_ISR shr (0+2)
 18095                           
 18096                           ; Vector 43 : DMA2DCNT
 18097  00005E  1A09               	dw	_Default_ISR shr (0+2)
 18098                           
 18099                           ; Vector 44 : DMA2OR
 18100  000060  1A09               	dw	_Default_ISR shr (0+2)
 18101                           
 18102                           ; Vector 45 : DMA2A
 18103  000062  1A09               	dw	_Default_ISR shr (0+2)
 18104                           
 18105                           ; Vector 46 : I2C2RX
 18106  000064  1A09               	dw	_Default_ISR shr (0+2)
 18107                           
 18108                           ; Vector 47 : I2C2TX
 18109  000066  1A09               	dw	_Default_ISR shr (0+2)
 18110                           
 18111                           ; Vector 48 : I2C2
 18112  000068  1A09               	dw	_Default_ISR shr (0+2)
 18113                           
 18114                           ; Vector 49 : I2C2E
 18115  00006A  1A09               	dw	_Default_ISR shr (0+2)
 18116                           
 18117                           ; Vector 50 : U2RX
 18118  00006C  1941               	dw	_UART2_rx_vect_isr shr (0+2)
 18119                           
 18120                           ; Vector 51 : U2TX
 18121  00006E  1937               	dw	_UART2_tx_vect_isr shr (0+2)
 18122                           
 18123                           ; Vector 52 : U2E
 18124  000070  1A09               	dw	_Default_ISR shr (0+2)
 18125                           
 18126                           ; Vector 53 : U2
 18127  000072  1A09               	dw	_Default_ISR shr (0+2)
 18128                           
 18129                           ; Vector 54 : TMR3
 18130  000074  1A09               	dw	_Default_ISR shr (0+2)
 18131                           
 18132                           ; Vector 55 : TMR3G
 18133  000076  1A09               	dw	_Default_ISR shr (0+2)
 18134                           
 18135                           ; Vector 56 : TMR4
 18136  000078  1A09               	dw	_Default_ISR shr (0+2)
 18137                           
 18138                           ; Vector 57 : CCP2
 18139  00007A  1A09               	dw	_Default_ISR shr (0+2)
 18140                           
 18141                           ; Vector 58 : Undefined
 18142  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 18143                           
 18144                           ; Vector 59 : CWG2
 18145  00007E  1A09               	dw	_Default_ISR shr (0+2)
 18146                           
 18147                           ; Vector 60 : CLC2
 18148  000080  1A09               	dw	_Default_ISR shr (0+2)
 18149                           
 18150                           ; Vector 61 : INT2
 18151  000082  19EB               	dw	_INT2_ISR shr (0+2)
 18152                           
 18153                           ; Vector 62 : Undefined
 18154  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 18155                           
 18156                           ; Vector 63 : Undefined
 18157  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 18158                           
 18159                           ; Vector 64 : Undefined
 18160  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 18161                           
 18162                           ; Vector 65 : Undefined
 18163  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 18164                           
 18165                           ; Vector 66 : Undefined
 18166  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 18167                           
 18168                           ; Vector 67 : Undefined
 18169  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 18170                           
 18171                           ; Vector 68 : Undefined
 18172  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 18173                           
 18174                           ; Vector 69 : Undefined
 18175  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 18176                           
 18177                           ; Vector 70 : TMR5
 18178  000094  1747               	dw	_TMR5_ISR shr (0+2)
 18179                           
 18180                           ; Vector 71 : TMR5G
 18181  000096  1A09               	dw	_Default_ISR shr (0+2)
 18182                           
 18183                           ; Vector 72 : TMR6
 18184  000098  19C2               	dw	_TMR6_ISR shr (0+2)
 18185                           
 18186                           ; Vector 73 : CCP3
 18187  00009A  1A09               	dw	_Default_ISR shr (0+2)
 18188                           
 18189                           ; Vector 74 : CWG3
 18190  00009C  1A09               	dw	_Default_ISR shr (0+2)
 18191                           
 18192                           ; Vector 75 : CLC3
 18193  00009E  1A09               	dw	_Default_ISR shr (0+2)
 18194                           
 18195                           ; Vector 76 : Undefined
 18196  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 18197                           
 18198                           ; Vector 77 : Undefined
 18199  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 18200                           
 18201                           ; Vector 78 : Undefined
 18202  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 18203                           
 18204                           ; Vector 79 : Undefined
 18205  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 18206                           
 18207                           ; Vector 80 : CCP4
 18208  0000A8  1A09               	dw	_Default_ISR shr (0+2)
 18209                           
 18210                           ; Vector 81 : CLC4
 18211  0000AA  1A09               	dw	_Default_ISR shr (0+2)
 18212  0000AC                     ivt0x8_undefint:
 18213                           	opt callstack 0
 18214  0000AC  00FF               	reset	
 18215                           
 18216                           	psect	text115
 18217  000000                     __ptext115:
 18218                           	opt callstack 0
 18219                           
 18220                           	psect	rparam
 18221  0000                     
 18222                           	psect	temp
 18223  000039                     btemp:
 18224                           	opt callstack 0
 18225  000039                     	ds	32
 18226  0000                     wtemp0	set	btemp
 18227  0000                     wtemp1	set	btemp+2
 18228  0000                     wtemp2	set	btemp+4
 18229  0000                     wtemp3	set	btemp+6
 18230  0000                     wtemp4	set	btemp+8
 18231  0000                     wtemp5	set	btemp+10
 18232  0000                     wtemp8	set	btemp+1
 18233  0000                     ttemp0	set	btemp
 18234  0000                     ttemp1	set	btemp+3
 18235  0000                     ttemp2	set	btemp+6
 18236  0000                     ttemp3	set	btemp+9
 18237  0000                     ttemp5	set	btemp+1
 18238  0000                     ttemp6	set	btemp+4
 18239  0000                     ttemp7	set	btemp+8
 18240  0000                     ltemp0	set	btemp
 18241  0000                     ltemp1	set	btemp+4
 18242  0000                     ltemp2	set	btemp+8
 18243  0000                     lltemp0	set	btemp
 18244  0000                     lltemp1	set	btemp+8
 18245  0000                     lltemp2	set	btemp+16
 18246  0000                     lltemp3	set	btemp+24
 18247                           tosu	equ	0x3FFF
 18248                           tosh	equ	0x3FFE
 18249                           tosl	equ	0x3FFD
 18250                           stkptr	equ	0x3FFC
 18251                           pclatu	equ	0x3FFB
 18252                           pclath	equ	0x3FFA
 18253                           pcl	equ	0x3FF9
 18254                           tblptru	equ	0x3FF8
 18255                           tblptrh	equ	0x3FF7
 18256                           tblptrl	equ	0x3FF6
 18257                           tablat	equ	0x3FF5
 18258                           prodh	equ	0x3FF4
 18259                           prodl	equ	0x3FF3
 18260                           indf0	equ	0x3FEF
 18261                           postinc0	equ	0x3FEE
 18262                           postdec0	equ	0x3FED
 18263                           preinc0	equ	0x3FEC
 18264                           plusw0	equ	0x3FEB
 18265                           fsr0h	equ	0x3FEA
 18266                           fsr0l	equ	0x3FE9
 18267                           wreg	equ	0x3FE8
 18268                           indf1	equ	0x3FE7
 18269                           postinc1	equ	0x3FE6
 18270                           postdec1	equ	0x3FE5
 18271                           preinc1	equ	0x3FE4
 18272                           plusw1	equ	0x3FE3
 18273                           fsr1h	equ	0x3FE2
 18274                           fsr1l	equ	0x3FE1
 18275                           bsr	equ	0x3FE0
 18276                           indf2	equ	0x3FDF
 18277                           postinc2	equ	0x3FDE
 18278                           postdec2	equ	0x3FDD
 18279                           preinc2	equ	0x3FDC
 18280                           plusw2	equ	0x3FDB
 18281                           fsr2h	equ	0x3FDA
 18282                           fsr2l	equ	0x3FD9
 18283                           status	equ	0x3FD8


Data Sizes:
    Strings     195
    Constant    0
    Data        393
    BSS         547
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      4      61
    BANK0           160      0     154
    BANK1           256      0     253
    BANK2           256      0     222
    BANK3           256      0     254
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 98
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[98]), 

    a	PTR const unsigned char  size(2) Largest target is 98
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[98]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_15(CODE[26]), STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4451_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[98]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[98]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[6]), 
		 -> V(BANK0[98]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16639.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    F16639.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    byte_block	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H27(BANK2[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[91]), 

    k	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H27(BANK2[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[91]), 

    t_link	PTR enum E16173 size(1) Largest target is 98
		 -> V(BANK0[98]), 

    S3771response_type$reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    F16627.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    S3771response_type$header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    F16627.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    r_link	PTR enum E16173 size(1) Largest target is 98
		 -> V(BANK0[98]), 

    m_link	PTR enum E16173 size(1) Largest target is 98
		 -> V(BANK0[98]), 

    byte_block	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H27(BANK2[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[91]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    strPtr	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1986spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1986spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   45989
                  _SYSTEM_Initialize
                   _UART1_put_buffer
                   _UART2_put_buffer
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _m_protocol
                         _r_protocol
                            _sprintf
                              _srand
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           2     1      1    2498
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                             _WaitMs
                               _rand
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     132
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21     9     12    8312
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1    2450
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                     _secs_gem_state
                          _secs_send
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           2     1      1    2725
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                               _rand
                       _run_checksum
                     _secs_gem_state
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5    1381
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     306
                               _rand
 ---------------------------------------------------------------------------------
 (4) _rand                                                 0     0      0     136
                             ___omul
 ---------------------------------------------------------------------------------
 (5) ___omul                                              24     8     16     136
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      31
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      62
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      31
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      62
 ---------------------------------------------------------------------------------
 (2) _secs_gem_state                                       2     0      2      62
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      62
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2     124
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (3) _TimerDone                                            1     0      1      31
 ---------------------------------------------------------------------------------
 (3) _StartTimer                                           3     0      3      62
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      37
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      37
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   18878
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9473
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9343
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9312
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8087
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    7988
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7749
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     252
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      31
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            3     3      0      90
                                              1 COMRAM     3     3      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _UART1_put_buffer
   _UART2_put_buffer
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _rand
       ___omul
     _run_checksum
     _secs_gem_state
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
         _rand
           ___omul
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_gem_state
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
         _rand
           ___omul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _srand
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _WaitMs
       _StartTimer
       _TimerDone
     _rand
       ___omul
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
         _rand
           ___omul
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FE      11       99.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      DE       9       86.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      4      3D       1       96.8%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3B0      58        0.0%
DATA                 0      0     3B0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Mar 22 01:01:43 2019

                    _SPI1_Exchange8bit 667C                                      _V 0060  
     __end_of_TMR5_SetInterruptHandler 63EC              __end_of_UART2_is_rx_ready 680E  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
            __end_of_UART2_is_tx_ready 67FE                            __CFG_LVP$ON 000000  
                                  _H10 0107                                    _H12 0162  
                                  _H13 01C0                                    _H14 01AF  
                                  _H24 0180                                    _H17 019B  
                                  _H27 02C0                                    _H53 03C6  
                                  l194 6762                                    l572 6038  
                                  l717 6202                                    l851 668A  
                                  l579 5FA8                                    l692 5FFA  
                                  l597 61D6                                    l699 5F6A  
                                  _GIE 01FE97                                    _abs 5E00  
                                  _pad 4DE6                __size_of_PMD_Initialize 0014  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 65B8                           _run_checksum 612A  
                   _UART1_Transmit_ISR 61B0                          __CFG_BBEN$OFF 000000  
                        _INT1_CallBack 65DA                           __CFG_ZCD$OFF 000000  
                                 l1124 5F4E                                   l1230 2102  
                                 l1240 21BE                                   l1251 22D6  
                                 l1260 241A                                   l1254 2324  
                                 l1272 25A2                                   l1256 2328  
                                 l1273 25CE                                   l1282 25EE  
                                 l1355 5C7E                                   l1292 2606  
                                 l1268 2534                                   l1641 34F8  
                                 l1493 598C                                   l1717 4550  
                                 l1902 3E9C                                   l2616 5E40  
                                 l1824 60D8                                   l1584 2728  
                                 l1489 55EA                                   l1921 3032  
                                 l2638 4FFC                                   l1855 4E42  
                                 l1695 3C76                                   l5401 5618  
                                 l5403 563A                                   l1875 311A  
                                 l2678 4B64                                   l5515 4930  
                                 l5507 4884                                   l5443 5E30  
                                 l5461 4126                                   l5455 40D2  
                                 l6371 5EBC                                   l5467 416C  
                                 l9011 34C0                                   l8205 4F2A  
                                 l6613 4604                                   l6367 5E92  
                                 l8215 587A                                   l8231 4E4C  
                                 l5479 423E                                   l5671 4A72  
                                 l6623 4626                                   l6711 4754  
                                 l8225 4E12                                   l8401 2D50  
                                 l9033 3554                                   l6625 464C  
                                 l6713 4786                                   l9201 3C0C  
                                 l8219 58B8                                   l8235 4E88  
                                 l5499 47FC                                   l8315 3436  
                                 l8331 3E1E                                   l5667 4A42  
                                 l9131 379A                                   l9107 3708  
                                 l9043 3588                                   l6643 4670  
                                 l8229 4E3A                                   l8405 2DA2  
                                 l9133 379E                                   l9061 35E6  
                                 l9045 3594                                   l6661 46A8  
                                 l6645 468A                                   l6807 61D2  
                                 l8239 4ED2                                   l8247 59B2  
                                 l8319 3472                                   l8351 3F0E  
                                 l9127 3784                                   l9143 37B2  
                                 l9223 3CAE                                   l6817 663A  
                                 l8249 59DE                                   l8281 3154  
                                 l8273 310A                                   l8361 3FC8  
                                 l8433 2FC4                                   l8417 2EC8  
                                 l5777 5C90                                   l9401 2974  
                                 l9137 37AA                                   l9081 3666  
                                 l9073 3616                                   l9065 35F6  
                                 l9057 35C8                                   l9145 37F4  
                                 l6673 46C2                                   l6593 45AC  
                                 l9233 3CE0                                   l9209 3C48  
                                 l8355 3F3E                                   l8347 3ED2  
                                 l8427 2F70                                   l8443 2FE4  
                                 l9323 27A0                                   l6675 4700  
                                 l6579 456E                                   l9243 3D00  
                                 l9219 3C96                                   l9227 3CB6  
                                 l6829 61FE                                   l8285 3172  
                                 l8365 3FF4                                   l8437 2FC8  
                                 l8517 57EC                                   l8453 4B84  
                                 l8613 5020                                   l9413 29E2  
                                 l9405 2992                                   l9317 276A  
                                 l9093 36DC                                   l9085 3692  
                                 l9077 363A                                   l9069 3606  
                                 l9261 3D50                                   l9253 3D2E  
                                 l9181 3B80                                   l9157 3AF6  
                                 l6855 5F36                                   l6839 665A  
                                 l8295 3384                                   l8519 582E  
                                 l8623 50F4                                   l9351 2824  
                                 l9095 36E0                                   l6599 45CA  
                                 l9255 3D3C                                   l9191 3BC2  
                                 l9511 2108                                   l8369 4030  
                                 l8393 2C6C                                   l8705 60E2  
                                 l8545 5FC8                                   l8457 4C2A  
                                 l8617 5092                                   l9425 2A58  
                                 l9417 2A0E                                   l9409 29B6  
                                 l9329 27C4                                   l9257 3D40  
                                 l9169 3B3A                                   l9265 3D5E  
                                 l9601 230C                                   l8491 39C6  
                                 l8547 5FCA                                   l8811 4502  
                                 l8803 44C8                                   l9427 2A5C  
                                 l9363 2892                                   l9355 2842  
                                 l9339 27F0                                   l6699 473A  
                                 l9259 3D48                                   l9195 3BDA  
                                 l9179 3B6E                                   l9267 3DA0  
                                 l9507 20EC                                   l8485 395C  
                                 l8637 6546                                   l8581 5F8A  
                                 l8813 452A                                   l9461 2B0E  
                                 l9197 3BE6                                   l9509 20F4  
                                 l8479 389E                                   l8831 53BE  
                                 l8559 6254                                   l8583 5F8C  
                                 l9471 2B2C                                   l9463 2B12  
                                 l9439 2A84                                   l9375 2908  
                                 l9367 28BE                                   l9359 2866  
                                 l9295 26DA                                   l9279 2680  
                                 l9703 2678                                   l8841 53CE  
                                 l8833 53C6                                   l9465 2B1A  
                                 l9377 290C                                   l9625 2400  
                                 l9617 238A                                   l8499 3A74  
                                 l8739 56E2                                   l8659 6010  
                                 l8683 5FD2                                   l8755 6138  
                                 l8827 53B4                                   l8595 622A  
                                 l8819 4530                                   l9467 2B1E  
                                 l9459 2B00                                   l9475 2B3A  
                                 l9619 23BC                                   l9555 2220  
                                 l8837 53CA                                   l8781 442C  
                                 l8773 437C                                   l9469 2B26  
                                 l9389 2940                                   l9477 2B7C  
                                 l9645 2480                                   l8847 53D6  
                                 l8871 544E                                   l9663 2506  
                                 l9647 248A                                   l9583 22AE  
                                 l9559 2236                                   l8865 543C  
                                 l8857 542C                                   l8849 541A  
                                 l8873 5474                                   l8793 4480  
                                 l8785 4446                                   l9673 2538  
                                 l9577 22A2                                   l8795 44A8  
                                 l9691 25F2                                   l9659 24F6  
                                 l9675 2564                                   l9587 22C6  
                                 l9579 22A6                                   l9693 260A  
                                 l9597 22F6                                   l9685 25A6  
                                 l8799 44AE                                   STR_1 206F  
                                 STR_2 209D                                   STR_3 20B5  
                                 STR_4 2080                                   STR_5 2035  
                                 STR_6 208F                                   STR_7 20AF  
                                 STR_8 20A9                                   STR_9 205D  
                                 _LATA 003FBA                                   _LATB 003FBB  
                                 _LATC 003FBC                                   _LATD 003FBD  
                                 _LATE 003FBE                                   u3130 4B1A  
                                 _LATF 003FBF                                   u2500 5668  
                                 u5000 3140                                   u2610 4122  
                                 u5010 3398                                   u2507 565A  
                                 u2621 412C                                   u5021 33C8  
                                 u2630 4166                                   u2710 47F6  
                                 u5030 33DE                                   u5031 33DC  
                                 u2640 4198                                   u5040 33F2  
                                 u3505 5AC8                                   u3506 5ACA  
                                 u2730 484C                                   u2570 5E14  
                                 u5050 33F6                                   u2660 4276  
                                 u2740 487E                                   u5140 3F34  
                                 u5220 2CBC                                   u2590 40CC  
                                 u2750 48B0                                   u5070 340C  
                                 u5150 3F7A                                   u6110 2788  
                                 u3480 5A94                                   u2680 42C8  
                                 u5240 2DFA                                   u2770 4968  
                                 _T6PR 003F93                                   u5180 4056  
                                 _PMD0 0039C0                                   u5157 3F6C  
                                 _PMD1 0039C1                                   u2790 49BA  
                                 u5350 3AE8                                   _PMD2 0039C2  
                                 u5271 4B7C                                   _PMD3 0039C3  
                                 u5360 4DE0                                   _PMD4 0039C4  
                                 _PMD5 0039C5                                   u3498 5A96  
                                 u6090 2752                                   _PMD6 0039C6  
                                 u5291 4C9E                                   u6315 2ABA  
                                 _PMD7 0039C7                                   u5365 4DCE  
                                 u6325 2ACA                                   u6317 2ABE  
                                 u4830 4F1E                                   u5550 56D2  
                                 u6335 2ADA                                   u6327 2ACE  
                                 u6337 2ADE                                   u4850 4F9A  
                                 u4930 306C                                   u5650 5428  
                                 u5570 4376                                   u4940 306E  
                                 u4960 30DE                                   u4980 30F0  
                                 u5845 3732                                   u5941 3C00  
                                 u5855 3742                                   u5847 3736  
                                 u5865 3752                                   u5857 3746  
                                 u5867 3756                                   u5990 3CD6  
                                 _PLLR 01CEE0                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                          _INT2_CallBack 65FC  
                     __end_of_ADCC_ISR 61B0                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01DD                                   _ctoa 5994  
                                 _main 20C6                                   _dtoa 303C  
                                 _rand 4CC8                                   _seed 00F2  
                                 _prec 001F                                   _nout 00EE  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 3DB2  
                                 btemp 0039      __size_of_INT2_SetInterruptHandler 0028  
                                 prodl 003FF3                                   start 00AE  
                      _timer5ReloadVal 0025              __end_of_SPI1_Exchange8bit 669A  
                        __CFG_CSWEN$ON 000000                      _UART1_rx_vect_isr 64B4  
                         ___param_bank 000000             __size_of_UART1_is_rx_ready 0008  
                   ?_UART1_rx_vect_isr 0059             __size_of_UART1_is_tx_ready 0008  
                     __end_of_INT0_ISR 679A                       __end_of_INT1_ISR 67AA  
                     __end_of_INT2_ISR 67BA         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 55F2          __end_of_OSCILLATOR_Initialize 6768  
                                PRLOCK 0039EF                        __end_of___aodiv 42F0  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                                _ADCLK 003EFF                        __end_of___aomod 49DE  
                                _ADPCH 003EF1                                  _ADREF 003EFD  
                                STR_10 2035                                  STR_11 2001  
                                STR_12 204A                                  STR_13 20A9  
                                STR_21 20BB                                  STR_14 2001  
                                STR_23 20BE                                  STR_15 201B  
                                STR_16 20A6                                  STR_25 20BE  
                                STR_17 20C1                          __CFG_WDTE$OFF 000000  
                                STR_19 20BB                                  _ADRPT 003EEC  
                                _U1P1H 003DED                                  _U1P2H 003DEF  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T5CON 003F9A                                  _T6CON 003F94  
                       __CFG_DEBUG$OFF 000000                                  _T6HLT 003F95  
                                _U1UIR 003DF8                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 0059                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 6824  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 648C  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 5D6A  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 6722  
                         _DMA1CON1bits 003BFD                     r_protocol@rxData_l 002A  
                                _flags 0021                                  _fputc 4EFA  
           __size_of_send_lcd_cmd_long 0028                                  _fputs 586A  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 0059  
                                _srand 60F6                                  _width 001D  
                                _putch 66EE               _INT1_SetInterruptHandler 6414  
                                pclath 003FFA                                  tablat 003FF5  
              __size_of_DSM_Initialize 001C                                  ltemp0 0039  
                                ltemp1 003D                                  ltemp2 0041  
             __size_of_DMA1_Initialize 006A                                  plusw1 003FE3  
                                plusw2 003FDB                                  ttemp0 0039  
                                ttemp1 003C                                  ttemp2 003F  
                                ttemp3 0042                                  ttemp5 003A  
                                ttemp6 003D                                  ttemp7 0041  
                       _secs_gem_state 53B2                                  status 003FD8  
  __end_of_UART1_SetRxInterruptHandler 6374            _UART1_SetRxInterruptHandler 634C  
                                wtemp0 0039                                  wtemp1 003B  
                                wtemp2 003D                                  wtemp3 003F  
                                wtemp4 0041                                  wtemp5 0043  
                                wtemp8 003A                        __end_of_sprintf 5548  
                      __end_of_strncmp 4B6E                    ??_UART1_tx_vect_isr 0059  
            __size_of_DMA1_DMADCNT_ISR 000A              __end_of_UART1_rx_vect_isr 64DA  
             __size_of_SPI1_Initialize 0016                        _TMR5_Initialize 5E46  
                __end_of_ringBufS_init 62D4                        __initialization 510E  
                    _UART2_rx_vect_isr 6504                           __end_of_ctoa 5A1C  
                         __end_of_main 267C                           __end_of_dtoa 34BC  
                         __end_of_rand 4DE6                           __end_of_stoa 4070  
           __size_of_UART2_is_rx_ready 0008                         __CFG_SAFEN$OFF 000000  
                   ?_UART2_rx_vect_isr 0059             __size_of_UART2_is_tx_ready 0008  
             _TMR5_SetInterruptHandler 63C4                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 0059              __end_of_UART1_tx_vect_isr 64B2  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 6374  
                     _UART1_Initialize 5AEC                      _UART2_tx_vect_isr 64DC  
                   _UART2_Transmit_ISR 61DC                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 0059  
                               _MD1SRC 003CFC                 __end_of_secs_gem_state 5480  
                               _U1CON0 003DF2                                 _U1CON1 003DF3  
                               _U1CON2 003DF4                    __size_of_UART1_Read 003E  
                               _U1BRGH 003DF6                                 _U1FIFO 003DF7  
                               _U2CON0 003DDA                                 _U2CON1 003DDB  
                               _U1BRGL 003DF5                                 _U2CON2 003DDC  
                               _U2BRGH 003DDE                                 _U2FIFO 003DDF  
                               _U2BRGL 003DDD                                 _T5GATE 003F9C  
                  __size_of_UART2_Read 003E                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RA4PPS 003A04  
                               _RA5PPS 003A05                                 _RA6PPS 003A06  
                               _RC3PPS 003A13                                 _RB6PPS 003A0E  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                               i2l1141 5D62                         __CFG_WDTCCS$SC 000000  
                               u131_48 65C6                                 u133_48 65E8  
                               u135_48 660A                                 _SCANPR 0039F7  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               _IVTADU 00389F                                 u358_40 672A  
                               u381_48 655E                                 u358_46 672C  
         __size_of_eaDogM_WriteCommand 000E                                 u384_48 6582  
                               _OSCFRQ 0039DF               __end_of_send_lcd_cmd_dma 5D1C  
                  ??_UART2_tx_vect_isr 0059              __end_of_UART2_rx_vect_isr 652A  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 67CA  
                     _UART2_Initialize 5C14                                 _WaitMs 60C0  
 __size_of_ADCC_SetADIInterruptHandler 0028                                 ___omul 4B6E  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 5902  
                               _memset 3806                                 clear_0 51B0  
                               clear_1 51BC                                 clear_2 51C8  
                               clear_3 51D4                                 clear_4 51E0  
                               _printf 5BB2                     _eaDogM_WriteString 5694  
                            ?_ADCC_ISR 0059                                 _strlen 55F2  
                   __size_of_TimerDone 0024                        _ADCC_Initialize 5DB6  
                       _PMD_Initialize 6768   __end_of_INT2_DefaultInterruptHandler 6830  
__size_of_INT2_DefaultInterruptHandler 0002           _INT2_DefaultInterruptHandler 682E  
                         __pdataCOMRAM 005D              __end_of_UART2_tx_vect_isr 6502  
                               lltemp0 0039                                 lltemp1 0041  
                               lltemp2 0049                                 lltemp3 0051  
                         __mediumconst 0000                                 tblptrh 003FF7  
                               tblptrl 003FF6                                 tblptru 003FF8  
                     __end_of_wdtdelay 5CCE                       __end_of_vfprintf 586A  
                           _StartTimer 604C                        _CLC1_Initialize 6596  
        __size_of_INTERRUPT_Initialize 0066                __end_of_TMR5_Initialize 5E8C  
                    _SYSTEM_Initialize 5ED2                             __accesstop 0060  
              __end_of__initialization 51F2                              ?_INT0_ISR 0059  
                            ?_INT1_ISR 0059                              ?_INT2_ISR 0059  
            __end_of_CLKREF_Initialize 67D4                          ___rparam_used 000001  
           __size_of_UART1_rx_vect_isr 0026                        _TMR5_WriteTimer 5F14  
               __end_of_ringBufS_flush 5994                         __pcstackCOMRAM 0059  
                           ___inthi_sp 0D54                           __pidataBANK0 5B50  
                         __pidataBANK1 52E2                           __pidataBANK2 665E  
                         __pidataBANK3 6088                              ?_TMR5_ISR 0059  
                            ?_TMR6_ISR 0059                         ivt0x8_undefint 00AC  
                        __end_of_fputc 5006                          __end_of_fputs 5902  
                        __end_of_srand 612A                  __end_of_TMR5_CallBack 6596  
                        __end_of_putch 6708                __end_of_TMR6_Initialize 639C  
               __end_of_PMD_Initialize 677C                __size_of_block_checksum 0108  
                           ??_ADCC_ISR 0059                  __end_of_TMR6_CallBack 6572  
          __size_of_EXT_INT_Initialize 004C             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 67E0       __end_of_INT2_SetInterruptHandler 6414  
             _UART2_RxInterruptHandler 0011              __end_of_SYSTEM_Initialize 5F14  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                       _DSM_Initialize 66D2                             __pbssBANK0 00C2  
                           __pbssBANK1 01D0                             __pbssBANK2 0200  
                           __pbssBANK3 0300                  _INT0_InterruptHandler 001A  
                           ??_INT0_ISR 0059                             ??_INT1_ISR 0059  
                           ??_INT2_ISR 0059                      __end_of_TimerDone 654E  
                     _DMA1_DMADCNT_ISR 67D4              __size_of_UART1_put_buffer 002A  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                __end_of_wait_lcd_done 66B6                        __CFG_PPS1WAY$ON 000000  
     __end_of_TMR6_SetInterruptHandler 63C4                __end_of_ADCC_Initialize 5E00  
                           ??_TMR5_ISR 005A                             ??_TMR6_ISR 0059  
                   __size_of_secs_send 026A                                _CLC1CON 003C74  
                              _CLC1POL 003C75                                _DMA1DSA 003BF0  
                              _DMA1DSZ 003BEE                                _DMA1SSA 003BF9  
                              _DMA1SSZ 003BF7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                                _MD1CARH 003CFE  
                              _MD1CARL 003CFD                      _UART1_Receive_ISR 661E  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
                              _NCO1CLK 003F3F                         ?_DMA1_DMAA_ISR 0059  
                     _DMA1_DMASCNT_ISR 67BC                                _NCO1CON 003F3E  
                              _U1ERRIE 003DFA                                _U1ERRIR 003DF9  
              __end_of_CLC1_Initialize 65B8                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                              _INT2PPS 003AC2                           ?_Default_ISR 0059  
                 __size_of_UART1_Write 003E              __size_of_UART2_put_buffer 002A  
           __size_of_UART2_tx_vect_isr 0026                   __size_of_UART2_Write 003E  
                              _U1RXPPS 003AE5                                _U2RXPPS 003AE8  
                              _OSCCON1 0039D9                                _OSCCON3 0039DB  
                              _IVTLOCK 003FD4                     __size_of_vfpfcnvrt 04AE  
                              _SPI1CLK 003D1C                                _SPI1RXB 003D10  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
               __end_of_DSM_Initialize 66EE                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
              __end_of_TMR5_WriteTimer 5F54                     __end_of_UART1_Read 604C  
                   __end_of_UART2_Read 600E      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000A  
                              __Hparam 0000                                __Lparam 0000  
             __end_of_UART1_Initialize 5B50                        __size_of_WaitMs 0036  
                              ___aodiv 4070                                ___aomod 479E  
                      __size_of___omul 015A                             _m_protocol 267C  
            __end_of_UART1_Receive_ISR 663E                           __psmallconst 2000  
                 __end_of_init_display 52E2                                __pcinit 510E  
                      __size_of_memset 02EC                    _eaDogM_WriteCommand 677C  
                              __ramtop 2000            __size_of_UART1_Transmit_ISR 002C  
             __size_of_NCO1_Initialize 001C                                __ptext0 20C6  
                              __ptext1 3AF2                                __ptext2 455A  
                              __ptext3 60F6                                __ptext4 5480  
                              __ptext5 34BC                                __ptext6 267C  
                              __ptext7 42F0                                __ptext8 5006  
                              __ptext9 4CC8                      _UART2_Receive_ISR 663E  
                      __size_of_printf 0062                        __CFG_WRTAPP$OFF 000000  
                      __size_of_strlen 00A2                                us280999 49CC  
                              us530999 4CB2                  _OSCILLATOR_Initialize 6752  
                              us269999 42DA                                us509999 3DC4  
                              us373999 4790                           __size_of_abs 0046  
                              _r_block 01D0                                us492999 3056  
                         __size_of_pad 0114                                _mode_sw 002C  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 5C72                     m_protocol@rxData_l 002B  
           __size_of_SYSTEM_Initialize 0042                                _sprintf 5480  
                              _strncmp 49DE                   end_of_initialization 51F2  
                    __end_of_secs_send 455A               _INT2_SetInterruptHandler 63EC  
             __size_of_secs_II_message 0244                             _r_protocol 34BC  
  __end_of_UART1_SetTxInterruptHandler 634C            _UART1_SetTxInterruptHandler 6324  
  __end_of_UART2_SetRxInterruptHandler 6324            _UART2_SetRxInterruptHandler 62FC  
                           _t_protocol 3AF2                      __end_of_vfpfcnvrt 303C  
                            _SPI1TCNTL 003D12                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 6822  
            __end_of_UART2_Receive_ISR 665E                         wdtdelay@dcount 00E1  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 005A  
                       _block_checksum 5006                  _INT1_InterruptHandler 0017  
                            _PORTBbits 003FCB               _TMR6_SetInterruptHandler 639C  
                _TMR5_InterruptHandler 00E5   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 002C    __end_of_ADCC_SetADIInterruptHandler 648C  
          _ADCC_SetADIInterruptHandler 6464                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 5A1C  
                      _SPI1_Initialize 673C                       _UART1_put_buffer 6232  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                    __size_of_INT2_ISR 000E                         __end_of_WaitMs 60F6  
         __end_of_INTERRUPT_Initialize 5AEC                 __end_of_block_checksum 510E  
 __end_of_INT0_DefaultInterruptHandler 682C  __size_of_INT0_DefaultInterruptHandler 0002  
         _INT0_DefaultInterruptHandler 682A             __size_of_UART1_Receive_ISR 0020  
                       __end_of___omul 4CC8                          __pidataCOMRAM 6832  
                    __size_of_TMR5_ISR 004E                      __size_of_TMR6_ISR 001A  
          __size_of_UART2_Transmit_ISR 002C                         __end_of_memset 3AF2  
                       __end_of_printf 5C14               __end_of_DMA1_DMADCNT_ISR 67DE  
                     _UART2_put_buffer 6208                  __end_of_INT0_CallBack 65DA  
                       __end_of_strlen 5694                    start_initialization 510E  
 __end_of_TMR5_DefaultInterruptHandler 673C  __size_of_TMR5_DefaultInterruptHandler 001A  
         _TMR5_DefaultInterruptHandler 6722        __size_of_PIN_MANAGER_Initialize 009E  
                          __end_of_abs 5E46                  __end_of_INT1_CallBack 65FC  
                          __end_of_pad 4EFA                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 62AC                             ivt0x8_base 0008  
                __end_of_INT2_CallBack 661E                   secs_II_message@block 0001  
                        _uart1RxBuffer 0240                          _uart1TxBuffer 0280  
                        _uart2RxBuffer 0200               __end_of_DMA1_DMASCNT_ISR 67CA  
                        _uart2TxBuffer 0300                         _DMA1_DMAOR_ISR 67EC  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 00A0                              _TimerDone 652A  
                        _ringBufS_init 62AC                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 0060  
                          __pdataBANK1 0100                            __pdataBANK2 02C0  
                          __pdataBANK3 03C6             __size_of_UART2_Receive_ISR 0020  
           __end_of_EXT_INT_Initialize 5DB6                        run_checksum@sum 00F0  
      __end_of_eaDogM_WriteStringAtPos 6182                __end_of_DMA1_Initialize 5A86  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 6464  
              __end_of_SPI1_Initialize 6752               _UART1_RxInterruptHandler 000B  
             _UART2_TxInterruptHandler 000E                    __size_of_m_protocol 0512  
            __size_of_ringBufS_put_dma 00AA                           _init_display 51F8  
               __end_of_DMA1_DMAOR_ISR 67F6                 __size_of_TMR5_CallBack 0024  
                _INT2_InterruptHandler 0014                  _TMR6_InterruptHandler 00E8  
               __size_of_TMR6_CallBack 0024                 _PIN_MANAGER_Initialize 5734  
                 __end_of_wait_lcd_set 681C                              __ptext100 64DC  
                            __ptext101 61DC                              __ptext110 67EC  
                            __ptext102 6504                              __ptext111 5D1C  
                            __ptext103 663E                              __ptext112 5F14  
                            __ptext104 6708                              __ptext113 6572  
                            __ptext105 654E                              __ptext114 6722  
                            __ptext106 5E8C                              __ptext115 0000  
                            __ptext107 67BC                              __ptext108 67D4  
                            __ptext109 67E0                     __end_of_StartTimer 6088  
                    __size_of_wdtdelay 005C                      __size_of_vfprintf 0098  
                             _ADCC_ISR 6184                    __size_of_r_protocol 034A  
               __CFG_BBSIZE$BBSIZE_512 000000                            __smallconst 2000  
                             _CLC1GLS0 003C7A                               _CLC1GLS1 003C7B  
                             _CLC1GLS2 003C7C                               _CLC1GLS3 003C7D  
                             _CLC1SEL0 003C76                               _CLC1SEL1 003C77  
                             _CLC1SEL2 003C78                               _CLC1SEL3 003C79  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA1SIRQ 003BFF  
                          _NCO1CONbits 003F3E                    __size_of_t_protocol 02C0  
               __size_of_wait_lcd_done 001C                         __size_of_fputc 010C  
                       __size_of_fputs 0098                         __size_of_srand 0034  
                             _NCO1ACCH 003F39                         __size_of_putch 001A  
                             _NCO1ACCL 003F38                               _NCO1ACCU 003F3A  
                 _INTERRUPT_Initialize 5A86                               _T6CLKCON 003F96  
                             _NCO1INCH 003F3C                               _NCO1INCL 003F3B  
                             _NCO1INCU 003F3D                        ?_DMA1_DMAOR_ISR 0059  
                             _INT0_ISR 678C                               _INT1_ISR 679C  
                             _INT2_ISR 67AC                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                              _secs_send 42F0  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 00CE  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR7bits 003987                               _IPR8bits 003988  
                             _PIE6bits 003996                               _PIE7bits 003997  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
                            _ring_buf1 0383                              _ring_buf2 0340  
                             _PIR1bits 0039A1                               _PIR2bits 0039A2  
                             _SPI1BAUD 003D19                               i2u460_48 6516  
                             i2u454_48 649E                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             i2u456_48 64C6                               _PIR5bits 0039A5  
                             i2u458_48 64EE                               _PIR7bits 0039A7  
                             i2u637_48 619C                               _PIR8bits 0039A8  
                             _PIR9bits 0039A9               __size_of_TMR5_Initialize 0046  
           __end_of_UART1_Transmit_ISR 61DC                               _TMR5_ISR 5D1C  
                             _TMR6_ISR 6708                              _vfpfcnvrt 2B8E  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 6572  
                            _start_lcd 681C              __size_of_send_lcd_cmd_dma 004E  
                        _TMR6_CallBack 654E               __end_of_UART1_put_buffer 625C  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                  __end_of_UART1_Write 5FD0                    __end_of_UART2_Write 5F92  
             __size_of_TMR6_Initialize 0028                            _INTCON0bits 003FD2  
                            copy_data0 5122                              copy_data1 5144  
                            copy_data2 5166                              copy_data3 5188  
             _INT0_SetInterruptHandler 643C                 _uart1TxBufferRemaining 0036  
  __end_of_UART2_SetTxInterruptHandler 62FC            _UART2_SetTxInterruptHandler 62D4  
                         _uart1RxCount 0033               __end_of_UART2_put_buffer 6232  
                         _uart2RxCount 002D                               __Hrparam 0000  
     __size_of_eaDogM_WriteStringAtPos 002C                __CFG_RSTOSC$EXTOSC_4PLL 000000  
                 __end_of_run_checksum 6156                               __Lrparam 0000  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 669A  
                         _send_lcd_cmd 6284                       __size_of___aodiv 0280  
                     __size_of___aomod 0240                        _NCO1_Initialize 66B6  
                __end_of_DMA1_DMAA_ISR 67EA   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 0059               __size_of_ADCC_Initialize 004A  
          __end_of_eaDogM_WriteCommand 678A                               __pivt0x8 0008  
                   ??_DMA1_DMADCNT_ISR 005A                               __ptext10 4B6E  
                             __ptext11 6208                               __ptext20 652A  
                             __ptext12 67F6                               __ptext21 604C  
                             __ptext13 5F54                               __ptext30 62AC  
                             __ptext22 6806                               __ptext14 6232  
                             __ptext31 6156                               __ptext23 5FD0  
                             __ptext15 67FE                               __ptext40 3806  
                             __ptext32 5694                               __ptext24 680E  
                             __ptext16 5F92                               __ptext41 5BB2  
                             __ptext33 677C                               __ptext25 600E  
                             __ptext17 53B2                               __ptext50 5994  
                             __ptext42 57D2                               __ptext34 5CCE  
                             __ptext26 51F8                               __ptext18 612A  
                             __ptext51 4DE6                               __ptext43 2B8E  
                             __ptext35 6816                               __ptext27 625C  
                             __ptext19 60C0                               __ptext60 62FC  
                             __ptext52 55F2                               __ptext44 49DE  
                             __ptext36 669A                               __ptext28 6284  
                             __ptext61 5AEC                               __ptext53 586A  
                             __ptext45 3DB2                               __ptext37 5C72  
                             __ptext29 667C                               __ptext70 5734  
                             __ptext62 6324                               __ptext54 4EFA  
                             __ptext46 303C                               __ptext38 681C  
                             __ptext71 6752                               __ptext63 634C  
                             __ptext55 66EE                               __ptext47 5E00  
                             __ptext39 5902                               __ptext80 67CA  
                             __ptext72 66B6                               __ptext64 6374  
                             __ptext56 5548                               __ptext48 479E  
                             __ptext81 6596                               __ptext73 5A86  
                             __ptext65 639C                               __ptext57 5ED2  
                             __ptext49 4070                               __ptext90 67AC  
                             __ptext82 5DB6                               __ptext74 5D6A  
                             __ptext66 5E46                               __ptext58 5C14  
                             __ptext91 65FC                               __ptext83 6464  
                             __ptext75 63EC                               __ptext67 63C4  
                             __ptext59 62D4                               __ptext92 682E  
                             __ptext84 678C                               __ptext76 6414  
                             __ptext68 673C                               __ptext93 6824  
                             __ptext85 65B8                               __ptext77 643C  
                             __ptext69 6768                               __ptext94 6184  
                             __ptext86 682A                               __ptext78 66D2  
                             __ptext95 6830                               __ptext87 679C  
                             __ptext79 5A1C                               __ptext96 648C  
                             __ptext88 65DA                               __ptext97 61B0  
                             __ptext89 682C                               __ptext98 64B4  
                             __ptext99 661E                        _secs_II_message 455A  
             __size_of_CLC1_Initialize 0022                       __size_of_sprintf 00C8  
                     __size_of_strncmp 0190                       _ringBufS_put_dma 5548  
                   __end_of_m_protocol 2B8E                          __size_of_ctoa 0088  
                        __size_of_main 05B6                          __size_of_dtoa 0480  
                        __size_of_rand 011E                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02BE                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 0059                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 00EB  
                            stoa@F1144 0100                     ??_DMA1_DMASCNT_ISR 005A  
                             _spi_link 00C2                               _wdtdelay 5C72  
           __end_of_UART2_Transmit_ISR 6208                               _vfprintf 57D2  
                  secs_gem_state@block 0027                      _UART1_is_rx_ready 680E  
                          _UART1_Write 5F92   __end_of_INT1_DefaultInterruptHandler 682E  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 682C  
                          _UART2_Write 5F54                      _UART1_is_tx_ready 67FE  
                      r_protocol@retry 005D                      t_protocol@requeue 0028  
                        ??_Default_ISR 0059                     __end_of_r_protocol 3806  
                          _uart1RxHead 0035                            _uart1TxHead 0038  
                          _uart2RxHead 002F                            _uart1RxTail 0034  
                          _uart2TxHead 0032                            _uart1TxTail 0037  
                          _uart2RxTail 002E                            _uart2TxTail 0031  
                         _wait_lcd_set 6816                     _EXT_INT_Initialize 5D6A  
 __end_of_TMR6_DefaultInterruptHandler 5ED2  __size_of_TMR6_DefaultInterruptHandler 0046  
         _TMR6_DefaultInterruptHandler 5E8C                     __end_of_t_protocol 3DB2  
 __end_of_ADCC_DefaultInterruptHandler 6832  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 6830                               intlevel2 0000  
                    _send_lcd_cmd_long 625C                __size_of_secs_gem_state 00CE  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 5734  
              __end_of_NCO1_Initialize 66D2                 __size_of_INT0_CallBack 0022  
                           _SPI1SCKPPS 003ADE                             _SPI1SDIPPS 003ADF  
            __end_of_UART1_is_rx_ready 6816                             _UART1_Read 600E  
               __size_of_INT1_CallBack 0022                             _UART2_Read 5FD0  
            __end_of_UART1_is_tx_ready 6806                 __size_of_INT2_CallBack 0022  
                    _UART2_is_rx_ready 6806                 _uart2TxBufferRemaining 0030  
                    _UART2_is_tx_ready 67F6                       _send_lcd_cmd_dma 5CCE  
                TMR5_ISR@CountCallBack 0023                __end_of_secs_II_message 479E  
     __end_of_INT1_SetInterruptHandler 643C              __size_of_UART1_Initialize 0064  
                      t_protocol@block 00DA                       ??_DMA1_DMAOR_ISR 005A  
             _UART1_TxInterruptHandler 0008                        t_protocol@retry 0029  
            __end_of_send_lcd_cmd_long 6284                    __end_of_Default_ISR 682A  
       __end_of_PIN_MANAGER_Initialize 57D2                  __size_of_run_checksum 002C  
              _eaDogM_WriteStringAtPos 6156              __size_of_UART2_Initialize 005E  
