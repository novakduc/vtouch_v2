

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec  9 01:52:25 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=4,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=4,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=4,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=4,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=4,class=CODE,delta=1
   170                           	psect	text145,global,reloc=4,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=4,class=CODE,delta=1
   175                           	psect	text150,global,reloc=4,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=4,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=4,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=4,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=4,class=CODE,delta=1
   185                           	psect	text160,global,reloc=4,class=CODE,delta=1
   186                           	psect	text161,global,reloc=4,class=CODE,delta=1
   187                           	psect	text162,global,reloc=4,class=CODE,delta=1
   188                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   189                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   190                           	psect	text163,global,reloc=4,class=CODE,delta=1
   191                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   192                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   193  0000                     
   194                           ; Version 2.10
   195                           ; Generated 31/07/2019 GMT
   196                           ; 
   197                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   198                           ; All rights reserved.
   199                           ; 
   200                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   201                           ; 
   202                           ; Redistribution and use in source and binary forms, with or without modification, are
   203                           ; permitted provided that the following conditions are met:
   204                           ; 
   205                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   206                           ;        conditions and the following disclaimer.
   207                           ; 
   208                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   209                           ;        of conditions and the following disclaimer in the documentation and/or other
   210                           ;        materials provided with the distribution.
   211                           ; 
   212                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   213                           ;        software without specific prior written permission.
   214                           ; 
   215                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   216                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   217                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   218                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   219                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   220                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   221                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   222                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   223                           ; 
   224                           ; 
   225                           ; Code-generator required, PIC18F57K42 Definitions
   226                           ; 
   227                           ; SFR Addresses
   228  0000                     
   229 ;;_k	offset	0
   230 ;;_j	offset	1
   231 ;;_i	offset	2
   232 ;;_inp_index	offset	3
   233 ;;_mode	offset	4
   234 ;;_channel	offset=-1 (param)
   235 ;;_s	offset=-2 (param)
   236 ;;_cmd	offset=-1 (param)
   237 ;;_cmd	offset=-1 (param)
   238 ;;_data	offset=-1 (param)
   239 ;;__this	offset=-2 (param)
   240 ;;_cvoltage	offset=-4 (param)
   241 ;;_h	offset=-1 (param)
   242 ;;_h	offset=-1 (param)
   243 ;;_i	offset=-1 (param)
   244 ;;_cmd	offset=-1 (param)
   245 ;;_i	offset	0
   246 ;;_chan	offset=-1 (param)
   247 ;;_to_what	offset=-2 (param)
   248 ;;_u	offset	0
   249 ;;_s	offset=-2 (param)
   250 ;;_index	offset=-1 (param)
   251 ;;_arg	offset	0
   252 ;;_exp	offset	4
   253 ;;_sign	offset=-1 (param)
   254 ;;_val	offset=-5 (param)
   255 ;;_h	offset=-1 (param)
   256 ;;_flipper	offset=-1 (param)
   257 ;;_f	offset	0
   258 ;;_ap	offset	6
   259 ;;_s	offset=-3 (param)
   260 ;;_fmt	offset=-5 (param)
   261 ;;_line	offset=-1 (param)
   262 ;;_vterm	offset=-2 (param)
   263 ;;_numMilliseconds	offset=-2 (param)
   264 ;;_vterm	offset=-1 (param)
   265 ;;_r	offset=-1 (param)
   266 ;;_c	offset=-2 (param)
   267 ;;_strPtr	offset=-4 (param)
   268 ;;_strPtr	offset=-1 (param)
   269 ;;_delay	offset=-4 (param)
   270 ;;_strPtr	offset=-2 (param)
   271 ;;__this	offset=-2 (param)
   272 ;;_clearBuffer	offset=-3 (param)
   273 ;;_s	offset	0
   274 ;;_k	offset	2
   275 ;;_dest	offset=-2 (param)
   276 ;;_c	offset=-4 (param)
   277 ;;_n	offset=-6 (param)
   278 ;;_ap	offset	0
   279 ;;_fmt	offset=-3 (param)
   280 ;;_cfmt	offset	0
   281 ;;_fp	offset=-2 (param)
   282 ;;_fmt	offset=-4 (param)
   283 ;;_ap	offset=-6 (param)
   284 ;;_vfpfcnvrt$5205	offset	0
   285 ;;_vfpfcnvrt$5211	offset	2
   286 ;;_vfpfcnvrt$5204	offset	4
   287 ;;_llu	offset	6
   288 ;;_ll	offset	14
   289 ;;_f	offset	22
   290 ;;_ct	offset	26
   291 ;;_cp	offset	29
   292 ;;_c	offset	31
   293 ;;_fp	offset=-2 (param)
   294 ;;_fmt	offset=-4 (param)
   295 ;;_ap	offset=-6 (param)
   296 ;;_xtoa$5190	offset	0
   297 ;;_xtoa$5189	offset	2
   298 ;;_n	offset	4
   299 ;;_c	offset	12
   300 ;;_i	offset	14
   301 ;;_w	offset	16
   302 ;;_p	offset	18
   303 ;;_fp	offset=-2 (param)
   304 ;;_d	offset=-10 (param)
   305 ;;_x	offset=-11 (param)
   306 ;;_toupper$5965	offset	0
   307 ;;_c	offset=-2 (param)
   308 ;;_c	offset=-2 (param)
   309 ;;_c	offset=-2 (param)
   310 ;;_r	offset	0
   311 ;;_l	offset	2
   312 ;;__l	offset=-2 (param)
   313 ;;__r	offset=-4 (param)
   314 ;;_n	offset=-6 (param)
   315 ;;_nuls	offset	0
   316 ;;_l	offset	7
   317 ;;_p	offset	9
   318 ;;_cp	offset	11
   319 ;;_w	offset	13
   320 ;;_i	offset	15
   321 ;;_fp	offset=-2 (param)
   322 ;;_s	offset=-4 (param)
   323 ;;_efgtoa$5169	offset	0
   324 ;;_efgtoa$5168	offset	2
   325 ;;_efgtoa$5167	offset	4
   326 ;;_efgtoa$5163	offset	6
   327 ;;_efgtoa$5159	offset	8
   328 ;;_efgtoa$5158	offset	10
   329 ;;_u	offset	12
   330 ;;_g	offset	16
   331 ;;_l	offset	20
   332 ;;_h	offset	24
   333 ;;_ou	offset	28
   334 ;;_n	offset	32
   335 ;;_e	offset	34
   336 ;;_i	offset	36
   337 ;;_w	offset	38
   338 ;;_p	offset	40
   339 ;;_sign	offset	42
   340 ;;_d	offset	44
   341 ;;_ne	offset	46
   342 ;;_m	offset	48
   343 ;;_pp	offset	50
   344 ;;_t	offset	52
   345 ;;_mode	offset	54
   346 ;;_nmode	offset	55
   347 ;;_fp	offset=-2 (param)
   348 ;;_f	offset=-6 (param)
   349 ;;_c	offset=-7 (param)
   350 ;;_tolower$5950	offset	0
   351 ;;_c	offset=-2 (param)
   352 ;;_c	offset=-2 (param)
   353 ;;_d	offset	0
   354 ;;_s	offset	2
   355 ;;_dest	offset=-2 (param)
   356 ;;_src	offset=-4 (param)
   357 ;;_u	offset	0
   358 ;;_m	offset	4
   359 ;;_e	offset	8
   360 ;;_x	offset=-4 (param)
   361 ;;_u	offset	0
   362 ;;_e	offset	4
   363 ;;_x	offset=-4 (param)
   364 ;;_exp1	offset	0
   365 ;;_sign1	offset	1
   366 ;;_f1	offset=-4 (param)
   367 ;;_f1	offset=-4 (param)
   368 ;;_ff1	offset=-4 (param)
   369 ;;_ff2	offset=-8 (param)
   370 ;;_ff1	offset=-4 (param)
   371 ;;_ff2	offset=-8 (param)
   372 ;;_grs	offset	0
   373 ;;_rem	offset	4
   374 ;;_new_exp	offset	8
   375 ;;_aexp	offset	10
   376 ;;_bexp	offset	11
   377 ;;_sign	offset	12
   378 ;;_b	offset=-4 (param)
   379 ;;_a	offset=-8 (param)
   380 ;;_sign	offset	0
   381 ;;_counter	offset	1
   382 ;;_dividend	offset=-2 (param)
   383 ;;_divisor	offset=-4 (param)
   384 ;;_quotient	offset	0
   385 ;;_sign	offset	2
   386 ;;_counter	offset	3
   387 ;;_dividend	offset=-2 (param)
   388 ;;_divisor	offset=-4 (param)
   389 ;;_dtoa$5135	offset	0
   390 ;;_n	offset	2
   391 ;;_i	offset	10
   392 ;;_s	offset	12
   393 ;;_w	offset	14
   394 ;;_p	offset	16
   395 ;;_fp	offset=-2 (param)
   396 ;;_d	offset=-10 (param)
   397 ;;_a	offset=-2 (param)
   398 ;;_sign	offset	0
   399 ;;_counter	offset	1
   400 ;;_dividend	offset=-8 (param)
   401 ;;_divisor	offset=-16 (param)
   402 ;;_quotient	offset	0
   403 ;;_sign	offset	8
   404 ;;_counter	offset	9
   405 ;;_dividend	offset=-8 (param)
   406 ;;_divisor	offset=-16 (param)
   407 ;;_w	offset	0
   408 ;;_fp	offset=-2 (param)
   409 ;;_c	offset=-3 (param)
   410 ;;_w	offset	0
   411 ;;_i	offset	2
   412 ;;_fp	offset=-2 (param)
   413 ;;_buf	offset=-4 (param)
   414 ;;_p	offset=-6 (param)
   415 ;;_a	offset	0
   416 ;;_s	offset=-2 (param)
   417 ;;_i	offset	0
   418 ;;_c	offset	2
   419 ;;_s	offset=-2 (param)
   420 ;;_fp	offset=-4 (param)
   421 ;;_c	offset=-2 (param)
   422 ;;_fp	offset=-4 (param)
   423 ;;_c	offset=-1 (param)
   424 ;;__this	offset=-2 (param)
   425 ;;_c	offset=-3 (param)
   426 ;;_atoi$5688	offset	0
   427 ;;_atoi$5686	offset	2
   428 ;;_atoi$5687	offset	4
   429 ;;_n	offset	5
   430 ;;_neg	offset	7
   431 ;;_s	offset=-2 (param)
   432 ;;_isspace$5726	offset	0
   433 ;;_c	offset=-2 (param)
   434 ;;_c	offset=-2 (param)
   435 ;;_vterm	offset=-1 (param)
   436 ;;_new_response_info	offset=-1 (param)
   437 ;;_new_response_info	offset=-1 (param)
   438 ;;_level	offset=-2 (param)
   439 ;;_dutyValue	offset=-2 (param)
   440 ;;_timer	offset=-1 (param)
   441 ;;_timer	offset=-1 (param)
   442 ;;_count	offset=-3 (param)
   443 ;;_h	offset=-1 (param)
   444 ;;_lp_speed	offset	0
   445 ;;_new	offset=-4 (param)
   446 ;;_bn	offset=-5 (param)
   447 ;;_slow	offset=-6 (param)
   448 ;;_b	offset=-4 (param)
   449 ;;_a	offset=-8 (param)
   450 ;;_grs	offset	0
   451 ;;_bexp	offset	1
   452 ;;_aexp	offset	2
   453 ;;_signs	offset	3
   454 ;;_b	offset=-4 (param)
   455 ;;_a	offset=-8 (param)
   456 ;;_prod	offset	0
   457 ;;_grs	offset	4
   458 ;;_temp	offset	8
   459 ;;_bexp	offset	10
   460 ;;_aexp	offset	11
   461 ;;_sign	offset	12
   462 ;;_b	offset=-4 (param)
   463 ;;_a	offset=-8 (param)
   464 ;;_InterruptHandler	offset=-3 (param)
   465 ;;_InterruptHandler	offset=-3 (param)
   466 ;;_InterruptHandler	offset=-3 (param)
   467 ;;_InterruptHandler	offset=-3 (param)
   468 ;;_InterruptHandler	offset=-3 (param)
   469 ;;_InterruptHandler	offset=-3 (param)
   470 ;;_state	offset	0
   471 ;;_InterruptHandler	offset=-3 (param)
   472 ;;_InterruptHandler	offset=-3 (param)
   473 ;;_InterruptHandler	offset=-3 (param)
   474 ;;_InterruptHandler	offset=-3 (param)
   475 ;;_i	offset	0
   476 ;;_sw_value	offset	1
   477 ;;_timerVal	offset=-2 (param)
   478 ;;_timerVal	offset=-2 (param)
   479 ;;_log_ptr	offset	0
   480 ;;_temp	offset	2
   481 ;;_f	offset	0
   482 ;;_ap	offset	6
   483 ;;_s	offset=-3 (param)
   484 ;;_fmt	offset=-5 (param)
   485 ;;_cfmt	offset	0
   486 ;;_fp	offset=-2 (param)
   487 ;;_fmt	offset=-4 (param)
   488 ;;_ap	offset=-6 (param)
   489 ;;_vfpfcnvrt$5205	offset	0
   490 ;;_vfpfcnvrt$5211	offset	2
   491 ;;_vfpfcnvrt$5204	offset	4
   492 ;;_llu	offset	6
   493 ;;_ll	offset	14
   494 ;;_f	offset	22
   495 ;;_ct	offset	26
   496 ;;_cp	offset	29
   497 ;;_c	offset	31
   498 ;;_fp	offset=-2 (param)
   499 ;;_fmt	offset=-4 (param)
   500 ;;_ap	offset=-6 (param)
   501 ;;_xtoa$5190	offset	0
   502 ;;_xtoa$5189	offset	2
   503 ;;_n	offset	4
   504 ;;_c	offset	12
   505 ;;_i	offset	14
   506 ;;_w	offset	16
   507 ;;_p	offset	18
   508 ;;_fp	offset=-2 (param)
   509 ;;_d	offset=-10 (param)
   510 ;;_x	offset=-11 (param)
   511 ;;_toupper$5965	offset	0
   512 ;;_c	offset=-2 (param)
   513 ;;_c	offset=-2 (param)
   514 ;;_c	offset=-2 (param)
   515 ;;_r	offset	0
   516 ;;_l	offset	2
   517 ;;__l	offset=-2 (param)
   518 ;;__r	offset=-4 (param)
   519 ;;_n	offset=-6 (param)
   520 ;;_nuls	offset	0
   521 ;;_l	offset	7
   522 ;;_p	offset	9
   523 ;;_cp	offset	11
   524 ;;_w	offset	13
   525 ;;_i	offset	15
   526 ;;_fp	offset=-2 (param)
   527 ;;_s	offset=-4 (param)
   528 ;;_efgtoa$5169	offset	0
   529 ;;_efgtoa$5168	offset	2
   530 ;;_efgtoa$5167	offset	4
   531 ;;_efgtoa$5163	offset	6
   532 ;;_efgtoa$5159	offset	8
   533 ;;_efgtoa$5158	offset	10
   534 ;;_u	offset	12
   535 ;;_g	offset	16
   536 ;;_l	offset	20
   537 ;;_h	offset	24
   538 ;;_ou	offset	28
   539 ;;_n	offset	32
   540 ;;_e	offset	34
   541 ;;_i	offset	36
   542 ;;_w	offset	38
   543 ;;_p	offset	40
   544 ;;_sign	offset	42
   545 ;;_d	offset	44
   546 ;;_ne	offset	46
   547 ;;_m	offset	48
   548 ;;_pp	offset	50
   549 ;;_t	offset	52
   550 ;;_mode	offset	54
   551 ;;_nmode	offset	55
   552 ;;_fp	offset=-2 (param)
   553 ;;_f	offset=-6 (param)
   554 ;;_c	offset=-7 (param)
   555 ;;_tolower$5950	offset	0
   556 ;;_c	offset=-2 (param)
   557 ;;_c	offset=-2 (param)
   558 ;;_d	offset	0
   559 ;;_s	offset	2
   560 ;;_dest	offset=-2 (param)
   561 ;;_src	offset=-4 (param)
   562 ;;_u	offset	0
   563 ;;_m	offset	4
   564 ;;_e	offset	8
   565 ;;_x	offset=-4 (param)
   566 ;;_u	offset	0
   567 ;;_e	offset	4
   568 ;;_x	offset=-4 (param)
   569 ;;_exp1	offset	0
   570 ;;_sign1	offset	1
   571 ;;_f1	offset=-4 (param)
   572 ;;_b	offset=-4 (param)
   573 ;;_a	offset=-8 (param)
   574 ;;_grs	offset	0
   575 ;;_bexp	offset	1
   576 ;;_aexp	offset	2
   577 ;;_signs	offset	3
   578 ;;_b	offset=-4 (param)
   579 ;;_a	offset=-8 (param)
   580 ;;_f1	offset=-4 (param)
   581 ;;_prod	offset	0
   582 ;;_grs	offset	4
   583 ;;_temp	offset	8
   584 ;;_bexp	offset	10
   585 ;;_aexp	offset	11
   586 ;;_sign	offset	12
   587 ;;_b	offset=-4 (param)
   588 ;;_a	offset=-8 (param)
   589 ;;_ff1	offset=-4 (param)
   590 ;;_ff2	offset=-8 (param)
   591 ;;_ff1	offset=-4 (param)
   592 ;;_ff2	offset=-8 (param)
   593 ;;_grs	offset	0
   594 ;;_rem	offset	4
   595 ;;_new_exp	offset	8
   596 ;;_aexp	offset	10
   597 ;;_bexp	offset	11
   598 ;;_sign	offset	12
   599 ;;_b	offset=-4 (param)
   600 ;;_a	offset=-8 (param)
   601 ;;_sign	offset	0
   602 ;;_counter	offset	1
   603 ;;_dividend	offset=-2 (param)
   604 ;;_divisor	offset=-4 (param)
   605 ;;_quotient	offset	0
   606 ;;_sign	offset	2
   607 ;;_counter	offset	3
   608 ;;_dividend	offset=-2 (param)
   609 ;;_divisor	offset=-4 (param)
   610 ;;_dtoa$5135	offset	0
   611 ;;_n	offset	2
   612 ;;_i	offset	10
   613 ;;_s	offset	12
   614 ;;_w	offset	14
   615 ;;_p	offset	16
   616 ;;_fp	offset=-2 (param)
   617 ;;_d	offset=-10 (param)
   618 ;;_a	offset=-2 (param)
   619 ;;_sign	offset	0
   620 ;;_counter	offset	1
   621 ;;_dividend	offset=-8 (param)
   622 ;;_divisor	offset=-16 (param)
   623 ;;_quotient	offset	0
   624 ;;_sign	offset	8
   625 ;;_counter	offset	9
   626 ;;_dividend	offset=-8 (param)
   627 ;;_divisor	offset=-16 (param)
   628 ;;_w	offset	0
   629 ;;_fp	offset=-2 (param)
   630 ;;_c	offset=-3 (param)
   631 ;;_w	offset	0
   632 ;;_i	offset	2
   633 ;;_fp	offset=-2 (param)
   634 ;;_buf	offset=-4 (param)
   635 ;;_p	offset=-6 (param)
   636 ;;_a	offset	0
   637 ;;_s	offset=-2 (param)
   638 ;;_i	offset	0
   639 ;;_c	offset	2
   640 ;;_s	offset=-2 (param)
   641 ;;_fp	offset=-4 (param)
   642 ;;_c	offset=-2 (param)
   643 ;;_fp	offset=-4 (param)
   644 ;;_c	offset=-1 (param)
   645 ;;__this	offset=-2 (param)
   646 ;;_c	offset=-3 (param)
   647 ;;_atoi$5688	offset	0
   648 ;;_atoi$5686	offset	2
   649 ;;_atoi$5687	offset	4
   650 ;;_n	offset	5
   651 ;;_neg	offset	7
   652 ;;_s	offset=-2 (param)
   653 ;;_isspace$5726	offset	0
   654 ;;_c	offset=-2 (param)
   655 ;;_c	offset=-2 (param)
   656 ;;_dsize	offset=-2 (param)
   657 ;;_arg	offset	0
   658 ;;_exp	offset	4
   659 ;;_sign	offset=-1 (param)
   660 ;;_val	offset=-5 (param)
   661 ;;_cvoltage	offset=-4 (param)
   662 ;;_timer	offset=-1 (param)
   663 ;;_count	offset=-3 (param)
   664 ;;_channel	offset=-1 (param)
   665 ;;_i	offset	0
   666                           
   667                           	psect	idataBIGRAM
   668  0166FC                     __pidataBIGRAM:
   669                           	opt callstack 0
   670                           
   671                           ;initializer for _port_data
   672  0166FC  FF                 	db	255
   673  0166FD  00                 	db	0
   674  0166FE  FF                 	db	255
   675  0166FF  00                 	db	0
   676  016700  FF                 	db	255
   677  016701  00                 	db	0
   678  016702  FF                 	db	255
   679  016703  00                 	db	0
   680  016704  FF                 	db	255
   681  016705  00                 	db	0
   682  016706  FF                 	db	255
   683  016707  00                 	db	0
   684  016708  FF                 	db	255
   685  016709  00                 	db	0
   686  01670A  FF                 	db	255
   687  01670B  00                 	db	0
   688  01670C  00                 	db	0
   689  01670D  00                 	db	0
   690  01670E  00                 	db	0
   691  01670F  00                 	db	0
   692  016710  00                 	db	0
   693  016711  00                 	db	0
   694  016712  00                 	db	0
   695  016713  00                 	db	0
   696  016714  00                 	db	0
   697  016715  00                 	db	0
   698  016716  00                 	db	0
   699  016717  00                 	db	0
   700  016718  00                 	db	0
   701  016719  00                 	db	0
   702  01671A  00                 	db	0
   703  01671B  00                 	db	0
   704  01671C  00                 	db	0
   705  01671D  00                 	db	0
   706  01671E  00                 	db	0
   707  01671F  00                 	db	0
   708  016720  00                 	db	0
   709  016721  00                 	db	0
   710  016722  00                 	db	0
   711  016723  00                 	db	0
   712  016724  00                 	db	0
   713  016725  00                 	db	0
   714  016726  00                 	db	0
   715  016727  00                 	db	0
   716  016728  00                 	db	0
   717  016729  00                 	db	0
   718  01672A  00                 	db	0
   719  01672B  00                 	db	0
   720  01672C  00                 	db	0
   721  01672D  00                 	db	0
   722  01672E  00                 	db	0
   723  01672F  00                 	db	0
   724  016730  00                 	db	0
   725  016731  00                 	db	0
   726  016732  00                 	db	0
   727  016733  00                 	db	0
   728  016734  00                 	db	0
   729  016735  00                 	db	0
   730  016736  00                 	db	0
   731  016737  00                 	db	0
   732  016738  00                 	db	0
   733  016739  00                 	db	0
   734  01673A  00                 	db	0
   735  01673B  00                 	db	0
   736  01673C  00                 	db	0
   737  01673D  00                 	db	0
   738  01673E  00                 	db	0
   739  01673F  00                 	db	0
   740  016740  00                 	db	0
   741  016741  00                 	db	0
   742  016742  00                 	db	0
   743  016743  00                 	db	0
   744  016744  00                 	db	0
   745  016745  00                 	db	0
   746  016746  00                 	db	0
   747  016747  00                 	db	0
   748  016748  00                 	db	0
   749  016749  00                 	db	0
   750  01674A  00                 	db	0
   751  01674B  00                 	db	0
   752  01674C  00                 	db	0
   753  01674D  00                 	db	0
   754  01674E  00                 	db	0
   755  01674F  00                 	db	0
   756  016750  00                 	db	0
   757  016751  00                 	db	0
   758  016752  00                 	db	0
   759  016753  00                 	db	0
   760  016754  00                 	db	0
   761  016755  00                 	db	0
   762  016756  00                 	db	0
   763  016757  00                 	db	0
   764  016758  00                 	db	0
   765  016759  00                 	db	0
   766  01675A  00                 	db	0
   767  01675B  00                 	db	0
   768  01675C  00                 	db	0
   769  01675D  00                 	db	0
   770  01675E  00                 	db	0
   771  01675F  00                 	db	0
   772  016760  00                 	db	0
   773  016761  00                 	db	0
   774  016762  00                 	db	0
   775  016763  00                 	db	0
   776  016764  00                 	db	0
   777  016765  00                 	db	0
   778  016766  00                 	db	0
   779  016767  00                 	db	0
   780  016768  00                 	db	0
   781  016769  00                 	db	0
   782  01676A  00                 	db	0
   783  01676B  00                 	db	0
   784  01676C  00                 	db	0
   785  01676D  00                 	db	0
   786  01676E  00                 	db	0
   787  01676F  00                 	db	0
   788  016770  00                 	db	0
   789  016771  00                 	db	0
   790  016772  00                 	db	0
   791  016773  00                 	db	0
   792  016774  00                 	db	0
   793  016775  00                 	db	0
   794  016776  00                 	db	0
   795  016777  00                 	db	0
   796  016778  00                 	db	0
   797  016779  00                 	db	0
   798  01677A  00                 	db	0
   799  01677B  00                 	db	0
   800  01677C  00                 	db	0
   801  01677D  00                 	db	0
   802  01677E  00                 	db	0
   803  01677F  00                 	db	0
   804  016780  00                 	db	0
   805  016781  00                 	db	0
   806  016782  00                 	db	0
   807  016783  00                 	db	0
   808  016784  00                 	db	0
   809  016785  00                 	db	0
   810  016786  00                 	db	0
   811  016787  00                 	db	0
   812  016788  00                 	db	0
   813  016789  00                 	db	0
   814  01678A  00                 	db	0
   815  01678B  00                 	db	0
   816  01678C  00                 	db	0
   817  01678D  00                 	db	0
   818  01678E  00                 	db	0
   819  01678F  00                 	db	0
   820  016790  00                 	db	0
   821  016791  00                 	db	0
   822  016792  00                 	db	0
   823  016793  00                 	db	0
   824  016794  00                 	db	0
   825  016795  00                 	db	0
   826  016796  00                 	db	0
   827  016797  00                 	db	0
   828  016798  00                 	db	0
   829  016799  00                 	db	0
   830  01679A  00                 	db	0
   831  01679B  00                 	db	0
   832  01679C  00                 	db	0
   833  01679D  00                 	db	0
   834  01679E  00                 	db	0
   835  01679F  00                 	db	0
   836  0167A0  00                 	db	0
   837  0167A1  00                 	db	0
   838  0167A2  00                 	db	0
   839  0167A3  00                 	db	0
   840  0167A4  00                 	db	0
   841  0167A5  00                 	db	0
   842  0167A6  00                 	db	0
   843  0167A7  00                 	db	0
   844  0167A8  00                 	db	0
   845  0167A9  00                 	db	0
   846  0167AA  00                 	db	0
   847  0167AB  00                 	db	0
   848  0167AC  00                 	db	0
   849  0167AD  00                 	db	0
   850  0167AE  00                 	db	0
   851  0167AF  00                 	db	0
   852  0167B0  00                 	db	0
   853  0167B1  00                 	db	0
   854  0167B2  00                 	db	0
   855  0167B3  00                 	db	0
   856  0167B4  00                 	db	0
   857  0167B5  00                 	db	0
   858  0167B6  00                 	db	0
   859  0167B7  00                 	db	0
   860  0167B8  00                 	db	0
   861  0167B9  00                 	db	0
   862  0167BA  00                 	db	0
   863  0167BB  00                 	db	0
   864  0167BC  00                 	db	0
   865  0167BD  00                 	db	0
   866  0167BE  00                 	db	0
   867  0167BF  00                 	db	0
   868  0167C0  00                 	db	0
   869  0167C1  00                 	db	0
   870  0167C2  00                 	db	0
   871  0167C3  00                 	db	0
   872  0167C4  00                 	db	0
   873  0167C5  00                 	db	0
   874  0167C6  00                 	db	0
   875  0167C7  00                 	db	0
   876  0167C8  00                 	db	0
   877  0167C9  00                 	db	0
   878  0167CA  00                 	db	0
   879  0167CB  00                 	db	0
   880  0167CC  00                 	db	0
   881  0167CD  00                 	db	0
   882  0167CE  00                 	db	0
   883  0167CF  00                 	db	0
   884  0167D0  00                 	db	0
   885  0167D1  00                 	db	0
   886  0167D2  00                 	db	0
   887  0167D3  00                 	db	0
   888  0167D4  00                 	db	0
   889  0167D5  00                 	db	0
   890  0167D6  00                 	db	0
   891  0167D7  00                 	db	0
   892  0167D8  00                 	db	0
   893  0167D9  00                 	db	0
   894  0167DA  00                 	db	0
   895  0167DB  00                 	db	0
   896  0167DC  00                 	db	0
   897  0167DD  00                 	db	0
   898  0167DE  00                 	db	0
   899  0167DF  00                 	db	0
   900  0167E0  00                 	db	0
   901  0167E1  00                 	db	0
   902  0167E2  00                 	db	0
   903  0167E3  00                 	db	0
   904  0167E4  00                 	db	0
   905  0167E5  00                 	db	0
   906  0167E6  00                 	db	0
   907  0167E7  00                 	db	0
   908  0167E8  00                 	db	0
   909  0167E9  00                 	db	0
   910  0167EA  00                 	db	0
   911  0167EB  00                 	db	0
   912  0167EC  00                 	db	0
   913  0167ED  00                 	db	0
   914  0167EE  00                 	db	0
   915  0167EF  00                 	db	0
   916  0167F0  00                 	db	0
   917  0167F1  00                 	db	0
   918  0167F2  00                 	db	0
   919  0167F3  00                 	db	0
   920  0167F4  00                 	db	0
   921  0167F5  00                 	db	0
   922  0167F6  00                 	db	0
   923  0167F7  00                 	db	0
   924  0167F8  00                 	db	0
   925  0167F9  00                 	db	0
   926  0167FA  00                 	db	0
   927  0167FB  00                 	db	0
   928  0167FC  00                 	db	0
   929  0167FD  00                 	db	0
   930  0167FE  00                 	db	0
   931  0167FF  00                 	db	0
   932  016800  00                 	db	0
   933  016801  00                 	db	0
   934  016802  00                 	db	0
   935  016803  00                 	db	0
   936  016804  00                 	db	0
   937  016805  00                 	db	0
   938  016806  00                 	db	0
   939  016807  00                 	db	0
   940  016808  00                 	db	0
   941  016809  00                 	db	0
   942  01680A  00                 	db	0
   943  01680B  00                 	db	0
   944  01680C  00                 	db	0
   945  01680D  00                 	db	0
   946  01680E  00                 	db	0
   947  01680F  00                 	db	0
   948  016810  00                 	db	0
   949  016811  00                 	db	0
   950  016812  00                 	db	0
   951  016813  00                 	db	0
   952  016814  00                 	db	0
   953  016815  00                 	db	0
   954  016816  00                 	db	0
   955  016817  00                 	db	0
   956  016818  00                 	db	0
   957  016819  00                 	db	0
   958  01681A  00                 	db	0
   959  01681B  00                 	db	0
   960  01681C  00                 	db	0
   961  01681D  00                 	db	0
   962  01681E  00                 	db	0
   963  01681F  00                 	db	0
   964  016820  00                 	db	0
   965  016821  00                 	db	0
   966  016822  00                 	db	0
   967  016823  00                 	db	0
   968  016824  00                 	db	0
   969  016825  00                 	db	0
   970  016826  00                 	db	0
   971  016827  00                 	db	0
   972  016828  00                 	db	0
   973  016829  00                 	db	0
   974  01682A  00                 	db	0
   975  01682B  00                 	db	0
   976  01682C  00                 	db	0
   977  01682D  00                 	db	0
   978  01682E  00                 	db	0
   979  01682F  00                 	db	0
   980  016830  00                 	db	0
   981  016831  00                 	db	0
   982  016832  00                 	db	0
   983  016833  00                 	db	0
   984  016834  00                 	db	0
   985  016835  00                 	db	0
   986  016836  00                 	db	0
   987  016837  00                 	db	0
   988  016838  00                 	db	0
   989  016839  00                 	db	0
   990  01683A  00                 	db	0
   991  01683B  00                 	db	0
   992  01683C  00                 	db	0
   993  01683D  00                 	db	0
   994  01683E  00                 	db	0
   995  01683F  00                 	db	0
   996  016840  00                 	db	0
   997  016841  00                 	db	0
   998  016842  00                 	db	0
   999  016843  00                 	db	0
  1000  016844  00                 	db	0
  1001  016845  00                 	db	0
  1002  016846  00                 	db	0
  1003  016847  00                 	db	0
  1004  016848  00                 	db	0
  1005  016849  00                 	db	0
  1006  01684A  00                 	db	0
  1007  01684B  00                 	db	0
  1008  01684C  00                 	db	0
  1009  01684D  00                 	db	0
  1010  01684E  00                 	db	0
  1011  01684F  00                 	db	0
  1012  016850  00                 	db	0
  1013  016851  00                 	db	0
  1014  016852  00                 	db	0
  1015  016853  00                 	db	0
  1016  016854  00                 	db	0
  1017  016855  00                 	db	0
  1018  016856  00                 	db	0
  1019  016857  00                 	db	0
  1020  016858  00                 	db	0
  1021  016859  00                 	db	0
  1022  01685A  00                 	db	0
  1023  01685B  00                 	db	0
  1024  01685C  00                 	db	0
  1025  01685D  00                 	db	0
  1026  01685E  00                 	db	0
  1027  01685F  00                 	db	0
  1028  016860  00                 	db	0
  1029  016861  00                 	db	0
  1030  016862  00                 	db	0
  1031  016863  00                 	db	0
  1032  016864  00                 	db	0
  1033  016865  00                 	db	0
  1034  016866  00                 	db	0
  1035  016867  00                 	db	0
  1036  016868  00                 	db	0
  1037  016869  00                 	db	0
  1038  01686A  00                 	db	0
  1039  01686B  00                 	db	0
  1040  01686C  00                 	db	0
  1041  01686D  00                 	db	0
  1042  01686E  00                 	db	0
  1043  01686F  00                 	db	0
  1044  016870  00                 	db	0
  1045  016871  00                 	db	0
  1046  016872  00                 	db	0
  1047  016873  00                 	db	0
  1048  016874  00                 	db	0
  1049  016875  00                 	db	0
  1050  016876  00                 	db	0
  1051  016877  00                 	db	0
  1052  016878  00                 	db	0
  1053  016879  00                 	db	0
  1054  01687A  00                 	db	0
  1055  01687B  00                 	db	0
  1056  01687C  00                 	db	0
  1057  01687D  00                 	db	0
  1058  01687E  00                 	db	0
  1059  01687F  00                 	db	0
  1060  016880  00                 	db	0
  1061  016881  00                 	db	0
  1062  016882  00                 	db	0
  1063  016883  00                 	db	0
  1064  016884  00                 	db	0
  1065  016885  00                 	db	0
  1066  016886  00                 	db	0
  1067  016887  00                 	db	0
  1068  016888  00                 	db	0
  1069  016889  00                 	db	0
  1070  01688A  00                 	db	0
  1071  01688B  00                 	db	0
  1072  01688C  00                 	db	0
  1073  01688D  00                 	db	0
  1074  01688E  00                 	db	0
  1075  01688F  00                 	db	0
  1076  016890  00                 	db	0
  1077  016891  00                 	db	0
  1078  016892  00                 	db	0
  1079  016893  00                 	db	0
  1080  016894  00                 	db	0
  1081  016895  00                 	db	0
  1082  016896  00                 	db	0
  1083  016897  00                 	db	0
  1084  016898  00                 	db	0
  1085  016899  00                 	db	0
  1086  01689A  00                 	db	0
  1087  01689B  00                 	db	0
  1088  01689C  00                 	db	0
  1089  01689D  00                 	db	0
  1090  01689E  00                 	db	0
  1091  01689F  00                 	db	0
  1092  0168A0  00                 	db	0
  1093  0168A1  00                 	db	0
  1094  0168A2  00                 	db	0
  1095  0168A3  00                 	db	0
  1096  0168A4  00                 	db	0
  1097  0168A5  00                 	db	0
  1098  0168A6  00                 	db	0
  1099  0168A7  00                 	db	0
  1100  0168A8  00                 	db	0
  1101  0168A9  00                 	db	0
  1102  0168AA  00                 	db	0
  1103  0168AB  00                 	db	0
  1104  0168AC  00                 	db	0
  1105  0168AD  00                 	db	0
  1106  0168AE  00                 	db	0
  1107  0168AF  00                 	db	0
  1108  0168B0  00                 	db	0
  1109  0168B1  00                 	db	0
  1110  0168B2  00                 	db	0
  1111  0168B3  00                 	db	0
  1112  0168B4  00                 	db	0
  1113  0168B5  00                 	db	0
  1114  0168B6  00                 	db	0
  1115  0168B7  00                 	db	0
  1116  0168B8  00                 	db	0
  1117  0168B9  00                 	db	0
  1118  0168BA  00                 	db	0
  1119  0168BB  00                 	db	0
  1120  0168BC  00                 	db	0
  1121  0168BD  00                 	db	0
  1122  0168BE  00                 	db	0
  1123  0168BF  00                 	db	0
  1124  0168C0  00                 	db	0
  1125  0168C1  00                 	db	0
  1126  0168C2  00                 	db	0
  1127  0168C3  00                 	db	0
  1128  0168C4  00                 	db	0
  1129  0168C5  00                 	db	0
  1130  0168C6  00                 	db	0
  1131  0168C7  00                 	db	0
  1132  0168C8  00                 	db	0
  1133  0168C9  00                 	db	0
  1134  0168CA  00                 	db	0
  1135  0168CB  00                 	db	0
  1136  0168CC  00                 	db	0
  1137  0168CD  00                 	db	0
  1138  0168CE  00                 	db	0
  1139  0168CF  00                 	db	0
  1140  0168D0  00                 	db	0
  1141  0168D1  00                 	db	0
  1142  0168D2  00                 	db	0
  1143  0168D3  00                 	db	0
  1144  0168D4  00                 	db	0
  1145  0168D5  00                 	db	0
  1146  0168D6  00                 	db	0
  1147  0168D7  00                 	db	0
  1148  0168D8  00                 	db	0
  1149  0168D9  00                 	db	0
  1150  0168DA  00                 	db	0
  1151  0168DB  00                 	db	0
  1152  0168DC  00                 	db	0
  1153  0168DD  00                 	db	0
  1154  0168DE  00                 	db	0
  1155  0168DF  00                 	db	0
  1156  0168E0  00                 	db	0
  1157  0168E1  00                 	db	0
  1158  0168E2  00                 	db	0
  1159  0168E3  00                 	db	0
  1160  0168E4  00                 	db	0
  1161  0168E5  00                 	db	0
  1162  0168E6  00                 	db	0
  1163  0168E7  00                 	db	0
  1164  0168E8  00                 	db	0
  1165  0168E9  00                 	db	0
  1166  0168EA  00                 	db	0
  1167  0168EB  00                 	db	0
  1168  0168EC  00                 	db	0
  1169  0168ED  00                 	db	0
  1170  0168EE  00                 	db	0
  1171  0168EF  00                 	db	0
  1172  0168F0  00                 	db	0
  1173  0168F1  00                 	db	0
  1174  0168F2  00                 	db	0
  1175  0168F3  00                 	db	0
  1176  0168F4  00                 	db	0
  1177  0168F5  00                 	db	0
  1178  0168F6  00                 	db	0
  1179  0168F7  00                 	db	0
  1180  0168F8  00                 	db	0
  1181  0168F9  00                 	db	0
  1182  0168FA  00                 	db	0
  1183  0168FB  00                 	db	0
  1184                           
  1185                           	psect	idataBANK0
  1186  01963E                     __pidataBANK0:
  1187                           	opt callstack 0
  1188                           
  1189                           ;initializer for _R
  1190  01963E  0000               	dw	0
  1191  019640  0000               	dw	0
  1192  019642  0000               	dw	0
  1193  019644  0000               	dw	0
  1194  019646  0000               	dw	0
  1195  019648  0000               	dw	0
  1196  01964A  0000               	dw	0
  1197  01964C  0000               	dw	0
  1198  01964E  0000               	dw	0
  1199  019650  0000               	dw	0
  1200  019652  0000               	dw	0
  1201  019654  0000               	dw	0
  1202  019656  0000               	dw	0
  1203  019658  0000               	dw	0
  1204  01965A  0000               	dw	0
  1205  01965C  0000               	dw	0
  1206  01965E  0F67               	dw	3943
  1207  019660  0F8F               	dw	3983
  1208  019662  00                 	db	0
  1209  019663  0000               	dw	0
  1210  019665  00                 	db	0
  1211                           
  1212                           ;initializer for _H
  1213  019666  00                 	db	0
  1214  019667  00                 	db	0
  1215  019668  01                 	db	1
  1216  019669  00                 	db	0
  1217  01966A  01                 	db	1
  1218  01966B  00                 	db	0
  1219  01966C  00                 	db	0
  1220                           
  1221                           	psect	idataBANK1
  1222  017FCA                     __pidataBANK1:
  1223                           	opt callstack 0
  1224                           
  1225                           ;initializer for _C
  1226  017FCA  0000               	dw	0
  1227  017FCC  0000               	dw	0
  1228  017FCE  0000               	dw	0
  1229  017FD0  0000               	dw	0
  1230  017FD2  0000               	dw	0
  1231  017FD4  0000               	dw	0
  1232  017FD6  0000               	dw	0
  1233  017FD8  0000               	dw	0
  1234  017FDA  0000               	dw	0
  1235  017FDC  0000               	dw	0
  1236  017FDE  0000               	dw	0
  1237  017FE0  0000               	dw	0
  1238  017FE2  0000               	dw	0
  1239  017FE4  0000               	dw	0
  1240  017FE6  0000               	dw	0
  1241  017FE8  0000               	dw	0
  1242  017FEA  0000               	dw	0
  1243  017FEC  0000               	dw	0
  1244  017FEE  0000               	dw	0
  1245  017FF0  0000               	dw	0
  1246  017FF2  0000               	dw	0
  1247  017FF4  0000               	dw	0
  1248  017FF6  0000               	dw	0
  1249  017FF8  0000               	dw	0
  1250  017FFA  0000               	dw	0
  1251  017FFC  0000               	dw	0
  1252  017FFE  0000               	dw	0
  1253  018000  0000               	dw	0
  1254  018002  0000               	dw	0
  1255  018004  0000               	dw	0
  1256  018006  0000               	dw	0
  1257  018008  0000               	dw	0
  1258  01800A  0000               	dw	0
  1259  01800C  0000               	dw	0
  1260  01800E  0000               	dw	0
  1261  018010  0000               	dw	0
  1262  018012  0000               	dw	0
  1263  018014  0000               	dw	0
  1264  018016  0000               	dw	0
  1265  018018  0000               	dw	0
  1266  01801A  0000               	dw	0
  1267  01801C  0000               	dw	0
  1268  01801E  0000               	dw	0
  1269  018020  0000               	dw	0
  1270  018022  0000               	dw	0
  1271  018024  0000               	dw	0
  1272  018026  0000               	dw	0
  1273  018028  0000               	dw	0
  1274  01802A  0000               	dw	0
  1275  01802C  0000               	dw	0
  1276  01802E  0000               	dw	0
  1277  018030  0000               	dw	0
  1278  018032  0000               	dw	0
  1279  018034  0000               	dw	0
  1280  018036  0000               	dw	0
  1281  018038  0000               	dw	0
  1282  01803A  0000               	dw	0
  1283  01803C  0000               	dw	0
  1284  01803E  0000               	dw	0
  1285  018040  0000               	dw	0
  1286  018042  0000               	dw	0
  1287  018044  0000               	dw	0
  1288  018046  0000               	dw	0
  1289  018048  42FA               	dw	17146
  1290  01804A  00                 	db	0
  1291  01804B  00                 	db	0
  1292  01804C  00                 	db	0
  1293  01804D  00                 	db	0
  1294  01804E  00                 	db	0
  1295  01804F  00                 	db	0
  1296  018050  00                 	db	0
  1297  018051  00                 	db	0
  1298  018052  00                 	db	0
  1299  018053  00                 	db	0
  1300  018054  00                 	db	0
  1301  018055  00                 	db	0
  1302  018056  00                 	db	0
  1303  018057  00                 	db	0
  1304  018058  00                 	db	0
  1305  018059  00                 	db	0
  1306  01805A  00                 	db	0
  1307  01805B  00                 	db	0
  1308  01805C  00                 	db	0
  1309  01805D  00                 	db	0
  1310  01805E  00                 	db	0
  1311  01805F  00                 	db	0
  1312  018060  00                 	db	0
  1313  018061  00                 	db	0
  1314  018062  00                 	db	0
  1315  018063  00                 	db	0
  1316  018064  00                 	db	0
  1317  018065  00                 	db	0
  1318  018066  00                 	db	0
  1319  018067  00                 	db	0
  1320  018068  00                 	db	0
  1321  018069  00                 	db	0
  1322  01806A  00                 	db	0
  1323  01806B  00                 	db	0
  1324  01806C  00                 	db	0
  1325  01806D  00                 	db	0
  1326  01806E  00                 	db	0
  1327  01806F  00                 	db	0
  1328  018070  00                 	db	0
  1329  018071  00                 	db	0
  1330  018072  00                 	db	0
  1331  018073  00                 	db	0
  1332  018074  00                 	db	0
  1333  018075  00                 	db	0
  1334  018076  00                 	db	0
  1335  018077  00                 	db	0
  1336  018078  00                 	db	0
  1337  018079  00                 	db	0
  1338  01807A  00                 	db	0
  1339  01807B  00                 	db	0
  1340  01807C  00                 	db	0
  1341  01807D  00                 	db	0
  1342  01807E  00                 	db	0
  1343  01807F  00                 	db	0
  1344  018080  00                 	db	0
  1345  018081  00                 	db	0
  1346  018082  00                 	db	0
  1347  018083  00                 	db	0
  1348  018084  00                 	db	0
  1349  018085  00                 	db	0
  1350  018086  00                 	db	0
  1351  018087  00                 	db	0
  1352  018088  00                 	db	0
  1353  018089  00                 	db	0
  1354  01808A  00                 	db	0
  1355  01808B  00                 	db	0
  1356  01808C  00                 	db	0
  1357  01808D  00                 	db	0
  1358  01808E  00                 	db	0
  1359  01808F  00                 	db	0
  1360  018090  00                 	db	0
  1361  018091  00                 	db	0
  1362  018092  00                 	db	0
  1363  018093  00                 	db	0
  1364  018094  00                 	db	0
  1365  018095  00                 	db	0
  1366  018096  00                 	db	0
  1367  018097  00                 	db	0
  1368  018098  00                 	db	0
  1369  018099  00                 	db	0
  1370  01809A  00                 	db	0
  1371  01809B  00                 	db	0
  1372  01809C  00                 	db	0
  1373                           
  1374                           ;initializer for stoa@F1166
  1375  01809D  28                 	db	40
  1376  01809E  6E                 	db	110
  1377  01809F  75                 	db	117
  1378  0180A0  6C                 	db	108
  1379  0180A1  6C                 	db	108
  1380  0180A2  29                 	db	41
  1381  0180A3  00                 	db	0
  1382                           
  1383                           	psect	idataBANK2
  1384  01823C                     __pidataBANK2:
  1385                           	opt callstack 0
  1386                           
  1387                           ;initializer for _V
  1388  01823C  00                 	db	0
  1389  01823D  00                 	db	0
  1390  01823E  00                 	db	0
  1391  01823F  00                 	db	0
  1392  018240  00                 	db	0
  1393  018241  00                 	db	0
  1394  018242  00                 	db	0
  1395  018243  00                 	db	0
  1396  018244  00                 	db	0
  1397  018245  00                 	db	0
  1398  018246  00                 	db	0
  1399  018247  00                 	db	0
  1400  018248  00                 	db	0
  1401  018249  00                 	db	0
  1402  01824A  00                 	db	0
  1403  01824B  00                 	db	0
  1404  01824C  00                 	db	0
  1405  01824D  00                 	db	0
  1406  01824E  00                 	db	0
  1407  01824F  00                 	db	0
  1408  018250  00                 	db	0
  1409  018251  00                 	db	0
  1410  018252  00                 	db	0
  1411  018253  00                 	db	0
  1412  018254  00                 	db	0
  1413  018255  00                 	db	0
  1414  018256  00                 	db	0
  1415  018257  00                 	db	0
  1416  018258  00                 	db	0
  1417  018259  00                 	db	0
  1418  01825A  00                 	db	0
  1419  01825B  00                 	db	0
  1420  01825C  00                 	db	0
  1421  01825D  00                 	db	0
  1422  01825E  00                 	db	0
  1423  01825F  00                 	db	0
  1424  018260  00                 	db	0
  1425  018261  00                 	db	0
  1426  018262  00                 	db	0
  1427  018263  00                 	db	0
  1428  018264  00                 	db	0
  1429  018265  00                 	db	0
  1430  018266  00                 	db	0
  1431  018267  00                 	db	0
  1432  018268  00                 	db	0
  1433  018269  00                 	db	0
  1434  01826A  00                 	db	0
  1435  01826B  00                 	db	0
  1436  01826C  00                 	db	0
  1437  01826D  00                 	db	0
  1438  01826E  00                 	db	0
  1439  01826F  00                 	db	0
  1440  018270  00                 	db	0
  1441  018271  00                 	db	0
  1442  018272  00                 	db	0
  1443  018273  00                 	db	0
  1444  018274  00                 	db	0
  1445  018275  00                 	db	0
  1446  018276  00                 	db	0
  1447  018277  00                 	db	0
  1448  018278  00                 	db	0
  1449  018279  00                 	db	0
  1450  01827A  00                 	db	0
  1451  01827B  00                 	db	0
  1452  01827C  00                 	db	0
  1453  01827D  00                 	db	0
  1454  01827E  00                 	db	0
  1455  01827F  00                 	db	0
  1456  018280  00                 	db	0
  1457  018281  00                 	db	0
  1458  018282  00                 	db	0
  1459  018283  00                 	db	0
  1460  018284  00                 	db	0
  1461  018285  00                 	db	0
  1462  018286  00                 	db	0
  1463  018287  00                 	db	0
  1464  018288  00                 	db	0
  1465  018289  00                 	db	0
  1466  01828A  00                 	db	0
  1467  01828B  00                 	db	0
  1468  01828C  00                 	db	0
  1469  01828D  00                 	db	0
  1470  01828E  00                 	db	0
  1471  01828F  00                 	db	0
  1472  018290  00                 	db	0
  1473  018291  00                 	db	0
  1474  018292  00                 	db	0
  1475  018293  00                 	db	0
  1476  018294  00                 	db	0
  1477  018295  00                 	db	0
  1478  018296  00                 	db	0
  1479  018297  00                 	db	0
  1480  018298  00                 	db	0
  1481  018299  00                 	db	0
  1482  01829A  00                 	db	0
  1483  01829B  00                 	db	0
  1484  01829C  00                 	db	0
  1485  01829D  00                 	db	0
  1486  01829E  00                 	db	0
  1487  01829F  00                 	db	0
  1488  0182A0  00                 	db	0
  1489  0182A1  00                 	db	0
  1490  0182A2  00                 	db	0
  1491  0182A3  00                 	db	0
  1492  0182A4  00                 	db	0
  1493  0182A5  00                 	db	0
  1494  0182A6  00                 	db	0
  1495  0182A7  00                 	db	0
  1496  0182A8  00                 	db	0
  1497  0182A9  00                 	db	0
  1498  0182AA  00                 	db	0
  1499  0182AB  00                 	db	0
  1500  0182AC  00                 	db	0
  1501  0182AD  00                 	db	0
  1502  0182AE  00                 	db	0
  1503  0182AF  00                 	db	0
  1504  0182B0  00                 	db	0
  1505  0182B1  00                 	db	0
  1506  0182B2  00                 	db	0
  1507  0182B3  00                 	db	0
  1508  0182B4  00                 	db	0
  1509  0182B5  00                 	db	0
  1510  0182B6  00                 	db	0
  1511  0182B7  00                 	db	0
  1512  0182B8  00                 	db	0
  1513  0182B9  00                 	db	0
  1514  0182BA  00                 	db	0
  1515  0182BB  00                 	db	0
  1516  0182BC  00                 	db	0
  1517  0182BD  0000               	dw	0
  1518  0182BF  0000               	dw	0
  1519  0182C1  0000               	dw	0
  1520  0182C3  0000               	dw	0
  1521  0182C5  00                 	db	0
  1522  0182C6  00                 	db	0
  1523  0182C7  00                 	db	0
  1524  0182C8  00                 	db	0
  1525  0182C9  00                 	db	0
  1526  0182CA  00                 	db	0
  1527  0182CB  0000               	dw	0
  1528  0182CD  0000               	dw	0
  1529  0182CF  0000               	dw	0
  1530  0182D1  0000               	dw	0
  1531  0182D3  0000               	dw	0
  1532  0182D5  0000               	dw	0
  1533  0182D7  00                 	db	0
  1534  0182D8  00                 	db	0
  1535  0182D9  00                 	db	0
  1536  0182DA  00                 	db	0
  1537  0182DB  00                 	db	0
  1538  0182DC  00                 	db	0
  1539  0182DD  00                 	db	0
  1540  0182DE  00                 	db	0
  1541  0182DF  00                 	db	0
  1542  0182E0  00                 	db	0
  1543  0182E1  0000               	dw	0
  1544  0182E3  0000               	dw	0
  1545  0182E5  2D                 	db	45
  1546  0182E6  00                 	db	0
  1547  0182E7  00                 	db	0
  1548  0182E8  0000               	dw	0
  1549  0182EA  0000               	dw	0
  1550  0182EC  0000               	dw	0
  1551  0182EE  0000               	dw	0
  1552  0182F0  0000               	dw	0
  1553  0182F2  0000               	dw	0
  1554  0182F4  0000               	dw	0
  1555  0182F6  0000               	dw	0
  1556                           
  1557                           	psect	mediumconst
  1558  00FC80                     __pmediumconst:
  1559                           	opt callstack 0
  1560  00FC80  00                 	db	0
  1561  00FC81                     _BVSOC_TABLE:
  1562                           	opt callstack 0
  1563  00FC81  59D8               	dw	23000
  1564  00FC83  0000               	dw	0
  1565  00FC85  0005               	dw	5
  1566  00FC87  0000               	dw	0
  1567  00FC89  5B68               	dw	23400
  1568  00FC8B  0000               	dw	0
  1569  00FC8D  000A               	dw	10
  1570  00FC8F  0000               	dw	0
  1571  00FC91  5C30               	dw	23600
  1572  00FC93  0000               	dw	0
  1573  00FC95  0014               	dw	20
  1574  00FC97  0000               	dw	0
  1575  00FC99  5E38               	dw	24120
  1576  00FC9B  0000               	dw	0
  1577  00FC9D  0019               	dw	25
  1578  00FC9F  0000               	dw	0
  1579  00FCA1  5E88               	dw	24200
  1580  00FCA3  0000               	dw	0
  1581  00FCA5  001E               	dw	30
  1582  00FCA7  0000               	dw	0
  1583  00FCA9  5F78               	dw	24440
  1584  00FCAB  0000               	dw	0
  1585  00FCAD  0028               	dw	40
  1586  00FCAF  0000               	dw	0
  1587  00FCB1  5FDC               	dw	24540
  1588  00FCB3  0000               	dw	0
  1589  00FCB5  002D               	dw	45
  1590  00FCB7  0000               	dw	0
  1591  00FCB9  6018               	dw	24600
  1592  00FCBB  0000               	dw	0
  1593  00FCBD  0032               	dw	50
  1594  00FCBF  0000               	dw	0
  1595  00FCC1  6046               	dw	24646
  1596  00FCC3  0000               	dw	0
  1597  00FCC5  0035               	dw	53
  1598  00FCC7  0000               	dw	0
  1599  00FCC9  607C               	dw	24700
  1600  00FCCB  0000               	dw	0
  1601  00FCCD  0037               	dw	55
  1602  00FCCF  0000               	dw	0
  1603  00FCD1  60AE               	dw	24750
  1604  00FCD3  0000               	dw	0
  1605  00FCD5  0039               	dw	57
  1606  00FCD7  0000               	dw	0
  1607  00FCD9  60E0               	dw	24800
  1608  00FCDB  0000               	dw	0
  1609  00FCDD  003C               	dw	60
  1610  00FCDF  0000               	dw	0
  1611  00FCE1  6112               	dw	24850
  1612  00FCE3  0000               	dw	0
  1613  00FCE5  003F               	dw	63
  1614  00FCE7  0000               	dw	0
  1615  00FCE9  6176               	dw	24950
  1616  00FCEB  0000               	dw	0
  1617  00FCED  0043               	dw	67
  1618  00FCEF  0000               	dw	0
  1619  00FCF1  61A8               	dw	25000
  1620  00FCF3  0000               	dw	0
  1621  00FCF5  0046               	dw	70
  1622  00FCF7  0000               	dw	0
  1623  00FCF9  61BC               	dw	25020
  1624  00FCFB  0000               	dw	0
  1625  00FCFD  0048               	dw	72
  1626  00FCFF  0000               	dw	0
  1627  00FD01  61D0               	dw	25040
  1628  00FD03  0000               	dw	0
  1629  00FD05  004B               	dw	75
  1630  00FD07  0000               	dw	0
  1631  00FD09  61DA               	dw	25050
  1632  00FD0B  0000               	dw	0
  1633  00FD0D  0050               	dw	80
  1634  00FD0F  0000               	dw	0
  1635  00FD11  61E4               	dw	25060
  1636  00FD13  0000               	dw	0
  1637  00FD15  0055               	dw	85
  1638  00FD17  0000               	dw	0
  1639  00FD19  61F8               	dw	25080
  1640  00FD1B  0000               	dw	0
  1641  00FD1D  005A               	dw	90
  1642  00FD1F  0000               	dw	0
  1643  00FD21  6208               	dw	25096
  1644  00FD23  0000               	dw	0
  1645  00FD25  005C               	dw	92
  1646  00FD27  0000               	dw	0
  1647  00FD29  6222               	dw	25122
  1648  00FD2B  0000               	dw	0
  1649  00FD2D  005D               	dw	93
  1650  00FD2F  0000               	dw	0
  1651  00FD31  6234               	dw	25140
  1652  00FD33  0000               	dw	0
  1653  00FD35  005F               	dw	95
  1654  00FD37  0000               	dw	0
  1655  00FD39  6248               	dw	25160
  1656  00FD3B  0000               	dw	0
  1657  00FD3D  0061               	dw	97
  1658  00FD3F  0000               	dw	0
  1659  00FD41  625C               	dw	25180
  1660  00FD43  0000               	dw	0
  1661  00FD45  0064               	dw	100
  1662  00FD47  0000               	dw	0
  1663  00FD49  6658               	dw	26200
  1664  00FD4B  0000               	dw	0
  1665  00FD4D  005A               	dw	90
  1666  00FD4F  0000               	dw	0
  1667  00FD51                     __end_of_BVSOC_TABLE:
  1668                           	opt callstack 0
  1669  00FD51                     _T:
  1670                           	opt callstack 0
  1671  00FD51  63                 	db	99
  1672  00FD52  6F                 	db	111
  1673  00FD53  6D                 	db	109
  1674  00FD54  6D                 	db	109
  1675  00FD55  61                 	db	97
  1676  00FD56  6E                 	db	110
  1677  00FD57  64                 	db	100
  1678  00FD58  73                 	db	115
  1679  00FD59  20                 	db	32
  1680  00FD5A  31                 	db	49
  1681  00FD5B  00                 	db	0
  1682  00FD5C  00                 	db	0
  1683  00FD5D  00                 	db	0
  1684  00FD5E  00                 	db	0
  1685  00FD5F  00                 	db	0
  1686  00FD60  00                 	db	0
  1687  00FD61  00                 	db	0
  1688  00FD62  00                 	db	0
  1689  00FD63  64                 	db	100
  1690  00FD64  69                 	db	105
  1691  00FD65  73                 	db	115
  1692  00FD66  70                 	db	112
  1693  00FD67  6C                 	db	108
  1694  00FD68  61                 	db	97
  1695  00FD69  79                 	db	121
  1696  00FD6A  73                 	db	115
  1697  00FD6B  20                 	db	32
  1698  00FD6C  31                 	db	49
  1699  00FD6D  00                 	db	0
  1700  00FD6E  00                 	db	0
  1701  00FD6F  00                 	db	0
  1702  00FD70  00                 	db	0
  1703  00FD71  00                 	db	0
  1704  00FD72  00                 	db	0
  1705  00FD73  00                 	db	0
  1706  00FD74  00                 	db	0
  1707  00FD75  63                 	db	99
  1708  00FD76  6F                 	db	111
  1709  00FD77  6D                 	db	109
  1710  00FD78  6D                 	db	109
  1711  00FD79  61                 	db	97
  1712  00FD7A  6E                 	db	110
  1713  00FD7B  64                 	db	100
  1714  00FD7C  73                 	db	115
  1715  00FD7D  20                 	db	32
  1716  00FD7E  32                 	db	50
  1717  00FD7F  00                 	db	0
  1718  00FD80  00                 	db	0
  1719  00FD81  00                 	db	0
  1720  00FD82  00                 	db	0
  1721  00FD83  00                 	db	0
  1722  00FD84  00                 	db	0
  1723  00FD85  00                 	db	0
  1724  00FD86  00                 	db	0
  1725  00FD87  64                 	db	100
  1726  00FD88  69                 	db	105
  1727  00FD89  73                 	db	115
  1728  00FD8A  70                 	db	112
  1729  00FD8B  6C                 	db	108
  1730  00FD8C  61                 	db	97
  1731  00FD8D  79                 	db	121
  1732  00FD8E  73                 	db	115
  1733  00FD8F  20                 	db	32
  1734  00FD90  32                 	db	50
  1735  00FD91  00                 	db	0
  1736  00FD92  00                 	db	0
  1737  00FD93  00                 	db	0
  1738  00FD94  00                 	db	0
  1739  00FD95  00                 	db	0
  1740  00FD96  00                 	db	0
  1741  00FD97  00                 	db	0
  1742  00FD98  00                 	db	0
  1743  00FD99  63                 	db	99
  1744  00FD9A  6F                 	db	111
  1745  00FD9B  6D                 	db	109
  1746  00FD9C  6D                 	db	109
  1747  00FD9D  61                 	db	97
  1748  00FD9E  6E                 	db	110
  1749  00FD9F  64                 	db	100
  1750  00FDA0  73                 	db	115
  1751  00FDA1  20                 	db	32
  1752  00FDA2  33                 	db	51
  1753  00FDA3  00                 	db	0
  1754  00FDA4  00                 	db	0
  1755  00FDA5  00                 	db	0
  1756  00FDA6  00                 	db	0
  1757  00FDA7  00                 	db	0
  1758  00FDA8  00                 	db	0
  1759  00FDA9  00                 	db	0
  1760  00FDAA  00                 	db	0
  1761  00FDAB  64                 	db	100
  1762  00FDAC  69                 	db	105
  1763  00FDAD  73                 	db	115
  1764  00FDAE  70                 	db	112
  1765  00FDAF  6C                 	db	108
  1766  00FDB0  61                 	db	97
  1767  00FDB1  79                 	db	121
  1768  00FDB2  73                 	db	115
  1769  00FDB3  20                 	db	32
  1770  00FDB4  33                 	db	51
  1771  00FDB5  00                 	db	0
  1772  00FDB6  00                 	db	0
  1773  00FDB7  00                 	db	0
  1774  00FDB8  00                 	db	0
  1775  00FDB9  00                 	db	0
  1776  00FDBA  00                 	db	0
  1777  00FDBB  00                 	db	0
  1778  00FDBC  00                 	db	0
  1779  00FDBD  63                 	db	99
  1780  00FDBE  6F                 	db	111
  1781  00FDBF  6D                 	db	109
  1782  00FDC0  6D                 	db	109
  1783  00FDC1  61                 	db	97
  1784  00FDC2  6E                 	db	110
  1785  00FDC3  64                 	db	100
  1786  00FDC4  73                 	db	115
  1787  00FDC5  20                 	db	32
  1788  00FDC6  34                 	db	52
  1789  00FDC7  00                 	db	0
  1790  00FDC8  00                 	db	0
  1791  00FDC9  00                 	db	0
  1792  00FDCA  00                 	db	0
  1793  00FDCB  00                 	db	0
  1794  00FDCC  00                 	db	0
  1795  00FDCD  00                 	db	0
  1796  00FDCE  00                 	db	0
  1797  00FDCF  64                 	db	100
  1798  00FDD0  69                 	db	105
  1799  00FDD1  73                 	db	115
  1800  00FDD2  70                 	db	112
  1801  00FDD3  6C                 	db	108
  1802  00FDD4  61                 	db	97
  1803  00FDD5  79                 	db	121
  1804  00FDD6  73                 	db	115
  1805  00FDD7  20                 	db	32
  1806  00FDD8  34                 	db	52
  1807  00FDD9  00                 	db	0
  1808  00FDDA  00                 	db	0
  1809  00FDDB  00                 	db	0
  1810  00FDDC  00                 	db	0
  1811  00FDDD  00                 	db	0
  1812  00FDDE  00                 	db	0
  1813  00FDDF  00                 	db	0
  1814  00FDE0  00                 	db	0
  1815  00FDE1                     __end_of_T:
  1816                           	opt callstack 0
  1817  00FDE1  0000               	dw	0
  1818  00FDE3  3F80               	dw	16256
  1819  00FDE5  0000               	dw	0
  1820  00FDE7  3FC0               	dw	16320
  1821  00FDE9                     __end_of_bp:
  1822                           	opt callstack 0
  1823  00FDE9  AA00               	dw	43520
  1824  00FDEB  3FB8               	dw	16312
  1825  00FDED                     __end_of_ivln2_h:
  1826                           	opt callstack 0
  1827  00FDED  23C6               	dw	9158
  1828  00FDEF  B8F6               	dw	47350
  1829  00FDF1                     __end_of_cp_l:
  1830                           	opt callstack 0
  1831  00FDF1  4000               	dw	16384
  1832  00FDF3  3F76               	dw	16246
  1833  00FDF5                     __end_of_cp_h:
  1834                           	opt callstack 0
  1835  0000                     _IVTADL	set	14493
  1836  0000                     _IVTADH	set	14494
  1837  0000                     _IVTADU	set	14495
  1838  0000                     _PIR6bits	set	14758
  1839  0000                     _PIR4bits	set	14756
  1840  0000                     _PIE8bits	set	14744
  1841  0000                     _PIR8bits	set	14760
  1842  0000                     _SCANPR	set	14839
  1843  0000                     _DMA2PR	set	14836
  1844  0000                     _DMA1PR	set	14835
  1845  0000                     _MAINPR	set	14834
  1846  0000                     _ISRPR	set	14833
  1847  0000                     _PIE2bits	set	14738
  1848  0000                     _PIR2bits	set	14754
  1849  0000                     _PIE9bits	set	14745
  1850  0000                     _PIR9bits	set	14761
  1851  0000                     _PIE6bits	set	14742
  1852  0000                     _PIE3bits	set	14739
  1853  0000                     _PMD7	set	14791
  1854  0000                     _PMD6	set	14790
  1855  0000                     _PMD5	set	14789
  1856  0000                     _PMD4	set	14788
  1857  0000                     _PMD3	set	14787
  1858  0000                     _PMD2	set	14786
  1859  0000                     _PMD1	set	14785
  1860  0000                     _PMD0	set	14784
  1861  0000                     _OSCTUNE	set	14814
  1862  0000                     _OSCFRQ	set	14815
  1863  0000                     _OSCEN	set	14813
  1864  0000                     _OSCCON3	set	14811
  1865  0000                     _OSCCON1	set	14809
  1866  0000                     _IPR8bits	set	14728
  1867  0000                     _IPR9bits	set	14729
  1868  0000                     _IPR5bits	set	14725
  1869  0000                     _IPR1bits	set	14721
  1870  0000                     _IPR3bits	set	14723
  1871  0000                     _IPR6bits	set	14726
  1872  0000                     _IPR2bits	set	14722
  1873  0000                     _PIE5bits	set	14741
  1874  0000                     _PIE1bits	set	14737
  1875  0000                     _PIR5bits	set	14757
  1876  0000                     _PIR1bits	set	14753
  1877  0000                     _PLLR	set	118496
  1878  0000                     _SPI1SDIPPS	set	15071
  1879  0000                     _U1RXPPS	set	15077
  1880  0000                     _RC6PPS	set	14870
  1881  0000                     _RC5PPS	set	14869
  1882  0000                     _INT1PPS	set	15041
  1883  0000                     _RD1PPS	set	14873
  1884  0000                     _INT0PPS	set	15040
  1885  0000                     _RC3PPS	set	14867
  1886  0000                     _RB6PPS	set	14862
  1887  0000                     _SPI1SCKPPS	set	15070
  1888  0000                     _U2RXPPS	set	15080
  1889  0000                     _SLRCONF	set	14995
  1890  0000                     _SLRCONE	set	14979
  1891  0000                     _SLRCOND	set	14963
  1892  0000                     _SLRCONC	set	14947
  1893  0000                     _SLRCONB	set	14931
  1894  0000                     _SLRCONA	set	14915
  1895  0000                     _ODCOND	set	14962
  1896  0000                     _ODCONC	set	14946
  1897  0000                     _ODCONB	set	14930
  1898  0000                     _ODCONA	set	14914
  1899  0000                     _ODCONF	set	14994
  1900  0000                     _ODCONE	set	14978
  1901  0000                     _WPUC	set	14945
  1902  0000                     _WPUA	set	14913
  1903  0000                     _WPUB	set	14929
  1904  0000                     _WPUE	set	14977
  1905  0000                     _WPUF	set	14993
  1906  0000                     _WPUD	set	14961
  1907  0000                     _ANSELA	set	14912
  1908  0000                     _ANSELF	set	14992
  1909  0000                     _ANSELE	set	14976
  1910  0000                     _ANSELB	set	14928
  1911  0000                     _ANSELC	set	14944
  1912  0000                     _ANSELD	set	14960
  1913  0000                     _DMA2SSA	set	15321
  1914  0000                     _DMA1SSA	set	15353
  1915  0000                     _DMA2DSZ	set	15310
  1916  0000                     _DMA2SSZ	set	15319
  1917  0000                     _DMA2DSA	set	15312
  1918  0000                     _DMA1DSZ	set	15342
  1919  0000                     _DMA1SSZ	set	15351
  1920  0000                     _DMA1DSA	set	15344
  1921  0000                     _DMA2CON0bits	set	15324
  1922  0000                     _DMA2CON1bits	set	15325
  1923  0000                     _DMA1CON0bits	set	15356
  1924  0000                     _DMA1CON1bits	set	15357
  1925  0000                     _DMA2CON0	set	15324
  1926  0000                     _DMA2AIRQ	set	15326
  1927  0000                     _DMA2SIRQ	set	15327
  1928  0000                     _DMA2CON1	set	15325
  1929  0000                     _DMA1CON0	set	15356
  1930  0000                     _DMA1AIRQ	set	15358
  1931  0000                     _DMA1SIRQ	set	15359
  1932  0000                     _DMA1CON1	set	15357
  1933  0000                     _CLKRCON	set	15589
  1934  0000                     _CLKRCLK	set	15590
  1935  0000                     _SPI1INTFbits	set	15642
  1936  0000                     _SPI1RXB	set	15632
  1937  0000                     _SPI1TXB	set	15633
  1938  0000                     _SPI1TCNTL	set	15634
  1939  0000                     _SPI1CON0	set	15636
  1940  0000                     _SPI1CLK	set	15644
  1941  0000                     _SPI1BAUD	set	15641
  1942  0000                     _SPI1CON2	set	15638
  1943  0000                     _SPI1CON1	set	15637
  1944  0000                     _U2RXB	set	15824
  1945  0000                     _U2TXB	set	15826
  1946  0000                     _U2ERRIE	set	15842
  1947  0000                     _U2ERRIR	set	15841
  1948  0000                     _U2UIR	set	15840
  1949  0000                     _U2FIFO	set	15839
  1950  0000                     _U2BRGH	set	15838
  1951  0000                     _U2BRGL	set	15837
  1952  0000                     _U2CON2	set	15836
  1953  0000                     _U2CON1	set	15835
  1954  0000                     _U2CON0	set	15834
  1955  0000                     _U2P3L	set	15832
  1956  0000                     _U2P2L	set	15830
  1957  0000                     _U2P1L	set	15828
  1958  0000                     _U1RXB	set	15848
  1959  0000                     _U1ERRIE	set	15866
  1960  0000                     _U1ERRIR	set	15865
  1961  0000                     _U1UIR	set	15864
  1962  0000                     _U1FIFO	set	15863
  1963  0000                     _U1BRGH	set	15862
  1964  0000                     _U1BRGL	set	15861
  1965  0000                     _U1CON2	set	15860
  1966  0000                     _U1CON1	set	15859
  1967  0000                     _U1CON0	set	15858
  1968  0000                     _U1P3H	set	15857
  1969  0000                     _U1P3L	set	15856
  1970  0000                     _U1P2H	set	15855
  1971  0000                     _U1P2L	set	15854
  1972  0000                     _U1P1H	set	15853
  1973  0000                     _U1P1L	set	15852
  1974  0000                     _FVRCON	set	16065
  1975  0000                     _ADFLTRL	set	16102
  1976  0000                     _ADFLTRH	set	16103
  1977  0000                     _ADCON0bits	set	16120
  1978  0000                     _ADCON0	set	16120
  1979  0000                     _ADCLK	set	16127
  1980  0000                     _ADACT	set	16126
  1981  0000                     _ADREF	set	16125
  1982  0000                     _ADSTAT	set	16124
  1983  0000                     _ADCON3	set	16123
  1984  0000                     _ADCON2	set	16122
  1985  0000                     _ADCON1	set	16121
  1986  0000                     _ADPREH	set	16119
  1987  0000                     _ADPREL	set	16118
  1988  0000                     _ADCAP	set	16117
  1989  0000                     _ADACQH	set	16116
  1990  0000                     _ADACQL	set	16115
  1991  0000                     _ADPCH	set	16113
  1992  0000                     _ADRPT	set	16108
  1993  0000                     _ADACCU	set	16106
  1994  0000                     _ADSTPTH	set	16101
  1995  0000                     _ADSTPTL	set	16100
  1996  0000                     _ADUTHH	set	16097
  1997  0000                     _ADUTHL	set	16096
  1998  0000                     _ADLTHH	set	16095
  1999  0000                     _ADLTHL	set	16094
  2000  0000                     _CCPTMRS1bits	set	16223
  2001  0000                     _PORTFbits	set	16335
  2002  0000                     _LATCbits	set	16316
  2003  0000                     _LATDbits	set	16317
  2004  0000                     _PORTBbits	set	16331
  2005  0000                     _T3CONbits	set	16294
  2006  0000                     _T3CON	set	16294
  2007  0000                     _TMR3L	set	16292
  2008  0000                     _TMR3H	set	16293
  2009  0000                     _T3CLK	set	16297
  2010  0000                     _T3GATE	set	16296
  2011  0000                     _T3GCON	set	16295
  2012  0000                     _T2CON	set	16300
  2013  0000                     _T2TMR	set	16298
  2014  0000                     _T2PR	set	16299
  2015  0000                     _T2RST	set	16303
  2016  0000                     _T2HLT	set	16301
  2017  0000                     _T2CLKCON	set	16302
  2018  0000                     _PWM8DCL	set	16224
  2019  0000                     _PWM8DCH	set	16225
  2020  0000                     _PWM8CON	set	16226
  2021  0000                     _LATEbits	set	16318
  2022  0000                     _T5CONbits	set	16282
  2023  0000                     _T5CON	set	16282
  2024  0000                     _TMR5L	set	16280
  2025  0000                     _TMR5H	set	16281
  2026  0000                     _T5CLK	set	16285
  2027  0000                     _T5GATE	set	16284
  2028  0000                     _T5GCON	set	16283
  2029  0000                     _T6CON	set	16276
  2030  0000                     _T6TMR	set	16274
  2031  0000                     _T6PR	set	16275
  2032  0000                     _T6RST	set	16279
  2033  0000                     _T6HLT	set	16277
  2034  0000                     _T6CLKCON	set	16278
  2035  0000                     _TRISD	set	16325
  2036  0000                     _TRISC	set	16324
  2037  0000                     _TRISB	set	16323
  2038  0000                     _TRISA	set	16322
  2039  0000                     _TRISF	set	16327
  2040  0000                     _TRISE	set	16326
  2041  0000                     _LATC	set	16316
  2042  0000                     _LATB	set	16315
  2043  0000                     _LATF	set	16319
  2044  0000                     _LATA	set	16314
  2045  0000                     _LATD	set	16317
  2046  0000                     _LATE	set	16318
  2047  0000                     _IVTLOCKbits	set	16340
  2048  0000                     _IVTLOCK	set	16340
  2049  0000                     _INTCON0bits	set	16338
  2050  0000                     _GIE	set	130711
  2051  00FDF5                     STR_46:
  2052                           
  2053                           ; BSR set to: 57
  2054  00FDF5  20                 	db	32
  2055  00FDF6  25                 	db	37
  2056  00FDF7  34                 	db	52	;'4'
  2057  00FDF8  2E                 	db	46
  2058  00FDF9  33                 	db	51	;'3'
  2059  00FDFA  66                 	db	102	;'f'
  2060  00FDFB  2C                 	db	44
  2061  00FDFC  25                 	db	37
  2062  00FDFD  34                 	db	52	;'4'
  2063  00FDFE  2E                 	db	46
  2064  00FDFF  33                 	db	51	;'3'
  2065  00FE00  66                 	db	102	;'f'
  2066  00FE01  2C                 	db	44
  2067  00FE02  25                 	db	37
  2068  00FE03  34                 	db	52	;'4'
  2069  00FE04  2E                 	db	46
  2070  00FE05  33                 	db	51	;'3'
  2071  00FE06  66                 	db	102	;'f'
  2072  00FE07  2C                 	db	44
  2073  00FE08  25                 	db	37
  2074  00FE09  34                 	db	52	;'4'
  2075  00FE0A  2E                 	db	46
  2076  00FE0B  33                 	db	51	;'3'
  2077  00FE0C  66                 	db	102	;'f'
  2078  00FE0D  2C                 	db	44
  2079  00FE0E  25                 	db	37
  2080  00FE0F  34                 	db	52	;'4'
  2081  00FE10  2E                 	db	46
  2082  00FE11  33                 	db	51	;'3'
  2083  00FE12  66                 	db	102	;'f'
  2084  00FE13  2C                 	db	44
  2085  00FE14  25                 	db	37
  2086  00FE15  34                 	db	52	;'4'
  2087  00FE16  2E                 	db	46
  2088  00FE17  33                 	db	51	;'3'
  2089  00FE18  66                 	db	102	;'f'
  2090  00FE19  2C                 	db	44
  2091  00FE1A  25                 	db	37
  2092  00FE1B  34                 	db	52	;'4'
  2093  00FE1C  2E                 	db	46
  2094  00FE1D  33                 	db	51	;'3'
  2095  00FE1E  66                 	db	102	;'f'
  2096  00FE1F  2C                 	db	44
  2097  00FE20  25                 	db	37
  2098  00FE21  34                 	db	52	;'4'
  2099  00FE22  2E                 	db	46
  2100  00FE23  33                 	db	51	;'3'
  2101  00FE24  66                 	db	102	;'f'
  2102  00FE25  2C                 	db	44
  2103  00FE26  25                 	db	37
  2104  00FE27  34                 	db	52	;'4'
  2105  00FE28  2E                 	db	46
  2106  00FE29  33                 	db	51	;'3'
  2107  00FE2A  66                 	db	102	;'f'
  2108  00FE2B  2C                 	db	44
  2109  00FE2C  25                 	db	37
  2110  00FE2D  34                 	db	52	;'4'
  2111  00FE2E  2E                 	db	46
  2112  00FE2F  33                 	db	51	;'3'
  2113  00FE30  66                 	db	102	;'f'
  2114  00FE31  2C                 	db	44
  2115  00FE32  25                 	db	37
  2116  00FE33  34                 	db	52	;'4'
  2117  00FE34  2E                 	db	46
  2118  00FE35  33                 	db	51	;'3'
  2119  00FE36  64                 	db	100	;'d'
  2120  00FE37  2C                 	db	44
  2121  00FE38  25                 	db	37
  2122  00FE39  34                 	db	52	;'4'
  2123  00FE3A  2E                 	db	46
  2124  00FE3B  33                 	db	51	;'3'
  2125  00FE3C  64                 	db	100	;'d'
  2126  00FE3D  0D                 	db	13
  2127  00FE3E  0A                 	db	10
  2128  00FE3F  00                 	db	0
  2129  00FE40                     
  2130                           ; BSR set to: 57
  2131  00FE40  20                 	db	32
  2132  00FE41  4D                 	db	77	;'M'
  2133  00FE42  65                 	db	101	;'e'
  2134  00FE43  73                 	db	115	;'s'
  2135  00FE44  67                 	db	103	;'g'
  2136  00FE45  20                 	db	32
  2137  00FE46  25                 	db	37
  2138  00FE47  64                 	db	100	;'d'
  2139  00FE48  20                 	db	32
  2140  00FE49  53                 	db	83	;'S'
  2141  00FE4A  74                 	db	116	;'t'
  2142  00FE4B  61                 	db	97	;'a'
  2143  00FE4C  63                 	db	99	;'c'
  2144  00FE4D  6B                 	db	107	;'k'
  2145  00FE4E  20                 	db	32
  2146  00FE4F  25                 	db	37
  2147  00FE50  64                 	db	100	;'d'
  2148  00FE51  20                 	db	32
  2149  00FE52  20                 	db	32
  2150  00FE53  20                 	db	32
  2151  00FE54  20                 	db	32
  2152  00FE55  20                 	db	32
  2153  00FE56  20                 	db	32
  2154  00FE57  00                 	db	0
  2155  00FE58                     STR_19:
  2156                           
  2157                           ; BSR set to: 57
  2158  00FE58  42                 	db	66	;'B'
  2159  00FE59  41                 	db	65	;'A'
  2160  00FE5A  48                 	db	72	;'H'
  2161  00FE5B  20                 	db	32
  2162  00FE5C  25                 	db	37
  2163  00FE5D  33                 	db	51	;'3'
  2164  00FE5E  2E                 	db	46
  2165  00FE5F  32                 	db	50	;'2'
  2166  00FE60  66                 	db	102	;'f'
  2167  00FE61  20                 	db	32
  2168  00FE62  50                 	db	80	;'P'
  2169  00FE63  25                 	db	37
  2170  00FE64  33                 	db	51	;'3'
  2171  00FE65  2E                 	db	46
  2172  00FE66  32                 	db	50	;'2'
  2173  00FE67  66                 	db	102	;'f'
  2174  00FE68  20                 	db	32
  2175  00FE69  20                 	db	32
  2176  00FE6A  20                 	db	32
  2177  00FE6B  00                 	db	0
  2178  00FE6C                     STR_39:
  2179                           
  2180                           ; BSR set to: 57
  2181  00FE6C  20                 	db	32
  2182  00FE6D  20                 	db	32
  2183  00FE6E  20                 	db	32
  2184  00FE6F  20                 	db	32
  2185  00FE70  20                 	db	32
  2186  00FE71  20                 	db	32
  2187  00FE72  20                 	db	32
  2188  00FE73  20                 	db	32
  2189  00FE74  20                 	db	32
  2190  00FE75  20                 	db	32
  2191  00FE76  20                 	db	32
  2192  00FE77  20                 	db	32
  2193  00FE78  20                 	db	32
  2194  00FE79  20                 	db	32
  2195  00FE7A  20                 	db	32
  2196  00FE7B  20                 	db	32
  2197  00FE7C  20                 	db	32
  2198  00FE7D  20                 	db	32
  2199  00FE7E  00                 	db	0
  2200  00FE7F                     STR_29:
  2201                           
  2202                           ; BSR set to: 57
  2203  00FE7F  48                 	db	72	;'H'
  2204  00FE80  45                 	db	69	;'E'
  2205  00FE81  4C                 	db	76	;'L'
  2206  00FE82  50                 	db	80	;'P'
  2207  00FE83  20                 	db	32
  2208  00FE84  25                 	db	37
  2209  00FE85  73                 	db	115	;'s'
  2210  00FE86  20                 	db	32
  2211  00FE87  20                 	db	32
  2212  00FE88  20                 	db	32
  2213  00FE89  20                 	db	32
  2214  00FE8A  20                 	db	32
  2215  00FE8B  20                 	db	32
  2216  00FE8C  20                 	db	32
  2217  00FE8D  20                 	db	32
  2218  00FE8E  20                 	db	32
  2219  00FE8F  20                 	db	32
  2220  00FE90  20                 	db	32
  2221  00FE91  00                 	db	0
  2222  00FE92                     
  2223                           ; BSR set to: 57
  2224  00FE92  44                 	db	68	;'D'
  2225  00FE93  49                 	db	73	;'I'
  2226  00FE94  53                 	db	83	;'S'
  2227  00FE95  50                 	db	80	;'P'
  2228  00FE96  4C                 	db	76	;'L'
  2229  00FE97  41                 	db	65	;'A'
  2230  00FE98  59                 	db	89	;'Y'
  2231  00FE99  20                 	db	32
  2232  00FE9A  25                 	db	37
  2233  00FE9B  73                 	db	115	;'s'
  2234  00FE9C  20                 	db	32
  2235  00FE9D  20                 	db	32
  2236  00FE9E  20                 	db	32
  2237  00FE9F  20                 	db	32
  2238  00FEA0  20                 	db	32
  2239  00FEA1  20                 	db	32
  2240  00FEA2  20                 	db	32
  2241  00FEA3  20                 	db	32
  2242  00FEA4  00                 	db	0
  2243  00FEA5                     STR_20:
  2244                           
  2245                           ; BSR set to: 57
  2246  00FEA5  53                 	db	83	;'S'
  2247  00FEA6  4F                 	db	79	;'O'
  2248  00FEA7  43                 	db	67	;'C'
  2249  00FEA8  20                 	db	32
  2250  00FEA9  25                 	db	37
  2251  00FEAA  64                 	db	100	;'d'
  2252  00FEAB  20                 	db	32
  2253  00FEAC  52                 	db	82	;'R'
  2254  00FEAD  55                 	db	85	;'U'
  2255  00FEAE  4E                 	db	78	;'N'
  2256  00FEAF  20                 	db	32
  2257  00FEB0  25                 	db	37
  2258  00FEB1  64                 	db	100	;'d'
  2259  00FEB2  20                 	db	32
  2260  00FEB3  20                 	db	32
  2261  00FEB4  20                 	db	32
  2262  00FEB5  20                 	db	32
  2263  00FEB6  20                 	db	32
  2264  00FEB7  00                 	db	0
  2265  00FEB8                     STR_12:
  2266                           
  2267                           ; BSR set to: 57
  2268  00FEB8  50                 	db	80	;'P'
  2269  00FEB9  56                 	db	86	;'V'
  2270  00FEBA  20                 	db	32
  2271  00FEBB  20                 	db	32
  2272  00FEBC  20                 	db	32
  2273  00FEBD  50                 	db	80	;'P'
  2274  00FEBE  57                 	db	87	;'W'
  2275  00FEBF  52                 	db	82	;'R'
  2276  00FEC0  20                 	db	32
  2277  00FEC1  25                 	db	37
  2278  00FEC2  33                 	db	51	;'3'
  2279  00FEC3  2E                 	db	46
  2280  00FEC4  32                 	db	50	;'2'
  2281  00FEC5  66                 	db	102	;'f'
  2282  00FEC6  20                 	db	32
  2283  00FEC7  20                 	db	32
  2284  00FEC8  20                 	db	32
  2285  00FEC9  20                 	db	32
  2286  00FECA  00                 	db	0
  2287  00FECB                     STR_14:
  2288                           
  2289                           ; BSR set to: 57
  2290  00FECB  49                 	db	73	;'I'
  2291  00FECC  4E                 	db	78	;'N'
  2292  00FECD  56                 	db	86	;'V'
  2293  00FECE  20                 	db	32
  2294  00FECF  20                 	db	32
  2295  00FED0  50                 	db	80	;'P'
  2296  00FED1  57                 	db	87	;'W'
  2297  00FED2  52                 	db	82	;'R'
  2298  00FED3  20                 	db	32
  2299  00FED4  25                 	db	37
  2300  00FED5  33                 	db	51	;'3'
  2301  00FED6  2E                 	db	46
  2302  00FED7  32                 	db	50	;'2'
  2303  00FED8  66                 	db	102	;'f'
  2304  00FED9  20                 	db	32
  2305  00FEDA  20                 	db	32
  2306  00FEDB  20                 	db	32
  2307  00FEDC  20                 	db	32
  2308  00FEDD  00                 	db	0
  2309  00FEDE                     STR_13:
  2310                           
  2311                           ; BSR set to: 57
  2312  00FEDE  4C                 	db	76	;'L'
  2313  00FEDF  4F                 	db	79	;'O'
  2314  00FEE0  41                 	db	65	;'A'
  2315  00FEE1  44                 	db	68	;'D'
  2316  00FEE2  20                 	db	32
  2317  00FEE3  50                 	db	80	;'P'
  2318  00FEE4  57                 	db	87	;'W'
  2319  00FEE5  52                 	db	82	;'R'
  2320  00FEE6  20                 	db	32
  2321  00FEE7  25                 	db	37
  2322  00FEE8  33                 	db	51	;'3'
  2323  00FEE9  2E                 	db	46
  2324  00FEEA  32                 	db	50	;'2'
  2325  00FEEB  66                 	db	102	;'f'
  2326  00FEEC  20                 	db	32
  2327  00FEED  20                 	db	32
  2328  00FEEE  20                 	db	32
  2329  00FEEF  20                 	db	32
  2330  00FEF0  00                 	db	0
  2331  00FEF1                     STR_18:
  2332                           
  2333                           ; BSR set to: 57
  2334  00FEF1  42                 	db	66	;'B'
  2335  00FEF2  41                 	db	65	;'A'
  2336  00FEF3  54                 	db	84	;'T'
  2337  00FEF4  54                 	db	84	;'T'
  2338  00FEF5  20                 	db	32
  2339  00FEF6  50                 	db	80	;'P'
  2340  00FEF7  57                 	db	87	;'W'
  2341  00FEF8  52                 	db	82	;'R'
  2342  00FEF9  20                 	db	32
  2343  00FEFA  25                 	db	37
  2344  00FEFB  33                 	db	51	;'3'
  2345  00FEFC  2E                 	db	46
  2346  00FEFD  32                 	db	50	;'2'
  2347  00FEFE  66                 	db	102	;'f'
  2348  00FEFF  20                 	db	32
  2349  00FF00  20                 	db	32
  2350  00FF01  20                 	db	32
  2351  00FF02  20                 	db	32
  2352  00FF03  00                 	db	0
  2353  00FF04                     STR_16:
  2354                           
  2355                           ; BSR set to: 57
  2356  00FF04  42                 	db	66	;'B'
  2357  00FF05  56                 	db	86	;'V'
  2358  00FF06  20                 	db	32
  2359  00FF07  25                 	db	37
  2360  00FF08  32                 	db	50	;'2'
  2361  00FF09  2E                 	db	46
  2362  00FF0A  32                 	db	50	;'2'
  2363  00FF0B  66                 	db	102	;'f'
  2364  00FF0C  20                 	db	32
  2365  00FF0D  42                 	db	66	;'B'
  2366  00FF0E  41                 	db	65	;'A'
  2367  00FF0F  20                 	db	32
  2368  00FF10  25                 	db	37
  2369  00FF11  32                 	db	50	;'2'
  2370  00FF12  2E                 	db	46
  2371  00FF13  32                 	db	50	;'2'
  2372  00FF14  66                 	db	102	;'f'
  2373  00FF15  20                 	db	32
  2374  00FF16  00                 	db	0
  2375  00FF17                     STR_17:
  2376                           
  2377                           ; BSR set to: 57
  2378  00FF17  43                 	db	67	;'C'
  2379  00FF18  56                 	db	86	;'V'
  2380  00FF19  20                 	db	32
  2381  00FF1A  25                 	db	37
  2382  00FF1B  32                 	db	50	;'2'
  2383  00FF1C  2E                 	db	46
  2384  00FF1D  32                 	db	50	;'2'
  2385  00FF1E  66                 	db	102	;'f'
  2386  00FF1F  20                 	db	32
  2387  00FF20  4C                 	db	76	;'L'
  2388  00FF21  41                 	db	65	;'A'
  2389  00FF22  20                 	db	32
  2390  00FF23  25                 	db	37
  2391  00FF24  32                 	db	50	;'2'
  2392  00FF25  2E                 	db	46
  2393  00FF26  32                 	db	50	;'2'
  2394  00FF27  66                 	db	102	;'f'
  2395  00FF28  20                 	db	32
  2396  00FF29  00                 	db	0
  2397  00FF2A                     STR_15:
  2398                           
  2399                           ; BSR set to: 57
  2400  00FF2A  50                 	db	80	;'P'
  2401  00FF2B  56                 	db	86	;'V'
  2402  00FF2C  20                 	db	32
  2403  00FF2D  25                 	db	37
  2404  00FF2E  32                 	db	50	;'2'
  2405  00FF2F  2E                 	db	46
  2406  00FF30  32                 	db	50	;'2'
  2407  00FF31  66                 	db	102	;'f'
  2408  00FF32  20                 	db	32
  2409  00FF33  50                 	db	80	;'P'
  2410  00FF34  41                 	db	65	;'A'
  2411  00FF35  20                 	db	32
  2412  00FF36  25                 	db	37
  2413  00FF37  32                 	db	50	;'2'
  2414  00FF38  2E                 	db	46
  2415  00FF39  32                 	db	50	;'2'
  2416  00FF3A  66                 	db	102	;'f'
  2417  00FF3B  20                 	db	32
  2418  00FF3C  00                 	db	0
  2419  00FF3D                     STR_8:
  2420                           
  2421                           ; BSR set to: 57
  2422  00FF3D  20                 	db	32
  2423  00FF3E  56                 	db	86	;'V'
  2424  00FF3F  54                 	db	84	;'T'
  2425  00FF40  45                 	db	69	;'E'
  2426  00FF41  52                 	db	82	;'R'
  2427  00FF42  4D                 	db	77	;'M'
  2428  00FF43  20                 	db	32
  2429  00FF44  23                 	db	35
  2430  00FF45  32                 	db	50	;'2'
  2431  00FF46  20                 	db	32
  2432  00FF47  20                 	db	32
  2433  00FF48  20                 	db	32
  2434  00FF49  20                 	db	32
  2435  00FF4A  20                 	db	32
  2436  00FF4B  20                 	db	32
  2437  00FF4C  20                 	db	32
  2438  00FF4D  00                 	db	0
  2439  00FF4E                     STR_4:
  2440                           
  2441                           ; BSR set to: 57
  2442  00FF4E  20                 	db	32
  2443  00FF4F  4E                 	db	78	;'N'
  2444  00FF50  53                 	db	83	;'S'
  2445  00FF51  41                 	db	65	;'A'
  2446  00FF52  53                 	db	83	;'S'
  2447  00FF53  50                 	db	80	;'P'
  2448  00FF54  4F                 	db	79	;'O'
  2449  00FF55  4F                 	db	79	;'O'
  2450  00FF56  4B                 	db	75	;'K'
  2451  00FF57  20                 	db	32
  2452  00FF58  20                 	db	32
  2453  00FF59  20                 	db	32
  2454  00FF5A  20                 	db	32
  2455  00FF5B  20                 	db	32
  2456  00FF5C  20                 	db	32
  2457  00FF5D  20                 	db	32
  2458  00FF5E  00                 	db	0
  2459  00FF5F                     STR_1:
  2460                           
  2461                           ; BSR set to: 57
  2462  00FF5F  20                 	db	32
  2463  00FF60  4D                 	db	77	;'M'
  2464  00FF61  42                 	db	66	;'B'
  2465  00FF62  4D                 	db	77	;'M'
  2466  00FF63  43                 	db	67	;'C'
  2467  00FF64  20                 	db	32
  2468  00FF65  53                 	db	83	;'S'
  2469  00FF66  4F                 	db	79	;'O'
  2470  00FF67  4C                 	db	76	;'L'
  2471  00FF68  41                 	db	65	;'A'
  2472  00FF69  52                 	db	82	;'R'
  2473  00FF6A  4D                 	db	77	;'M'
  2474  00FF6B  4F                 	db	79	;'O'
  2475  00FF6C  4E                 	db	78	;'N'
  2476  00FF6D  20                 	db	32
  2477  00FF6E  20                 	db	32
  2478  00FF6F  00                 	db	0
  2479  00FF70                     STR_5:
  2480                           
  2481                           ; BSR set to: 57
  2482  00FF70  20                 	db	32
  2483  00FF71  53                 	db	83	;'S'
  2484  00FF72  45                 	db	69	;'E'
  2485  00FF73  51                 	db	81	;'Q'
  2486  00FF74  55                 	db	85	;'U'
  2487  00FF75  45                 	db	69	;'E'
  2488  00FF76  4E                 	db	78	;'N'
  2489  00FF77  43                 	db	67	;'C'
  2490  00FF78  45                 	db	69	;'E'
  2491  00FF79  20                 	db	32
  2492  00FF7A  54                 	db	84	;'T'
  2493  00FF7B  45                 	db	69	;'E'
  2494  00FF7C  53                 	db	83	;'S'
  2495  00FF7D  54                 	db	84	;'T'
  2496  00FF7E  20                 	db	32
  2497  00FF7F  20                 	db	32
  2498  00FF80  00                 	db	0
  2499  00FF81                     STR_11:
  2500                           
  2501                           ; BSR set to: 57
  2502  00FF81  25                 	db	37
  2503  00FF82  64                 	db	100	;'d'
  2504  00FF83  20                 	db	32
  2505  00FF84  25                 	db	37
  2506  00FF85  32                 	db	50	;'2'
  2507  00FF86  2E                 	db	46
  2508  00FF87  34                 	db	52	;'4'
  2509  00FF88  66                 	db	102	;'f'
  2510  00FF89  2C                 	db	44
  2511  00FF8A  20                 	db	32
  2512  00FF8B  25                 	db	37
  2513  00FF8C  64                 	db	100	;'d'
  2514  00FF8D  20                 	db	32
  2515  00FF8E  20                 	db	32
  2516  00FF8F  20                 	db	32
  2517  00FF90  23                 	db	35
  2518  00FF91  00                 	db	0
  2519  00FF92                     STR_9:
  2520                           
  2521                           ; BSR set to: 57
  2522  00FF92  25                 	db	37
  2523  00FF93  64                 	db	100	;'d'
  2524  00FF94  20                 	db	32
  2525  00FF95  25                 	db	37
  2526  00FF96  32                 	db	50	;'2'
  2527  00FF97  2E                 	db	46
  2528  00FF98  34                 	db	52	;'4'
  2529  00FF99  66                 	db	102	;'f'
  2530  00FF9A  20                 	db	32
  2531  00FF9B  20                 	db	32
  2532  00FF9C  20                 	db	32
  2533  00FF9D  25                 	db	37
  2534  00FF9E  64                 	db	100	;'d'
  2535  00FF9F  20                 	db	32
  2536  00FFA0  20                 	db	32
  2537  00FFA1  00                 	db	0
  2538  00FFA2                     STR_33:
  2539                           
  2540                           ; BSR set to: 57
  2541  00FFA2  76                 	db	118	;'v'
  2542  00FFA3  74                 	db	116	;'t'
  2543  00FFA4  65                 	db	101	;'e'
  2544  00FFA5  72                 	db	114	;'r'
  2545  00FFA6  6D                 	db	109	;'m'
  2546  00FFA7  20                 	db	32
  2547  00FFA8  25                 	db	37
  2548  00FFA9  78                 	db	120	;'x'
  2549  00FFAA  3A                 	db	58	;':'
  2550  00FFAB  25                 	db	37
  2551  00FFAC  78                 	db	120	;'x'
  2552  00FFAD  20                 	db	32
  2553  00FFAE  20                 	db	32
  2554  00FFAF  20                 	db	32
  2555  00FFB0  00                 	db	0
  2556  00FFB1                     STR_2:
  2557                           
  2558                           ; BSR set to: 57
  2559  00FFB1  20                 	db	32
  2560  00FFB2  56                 	db	86	;'V'
  2561  00FFB3  65                 	db	101	;'e'
  2562  00FFB4  72                 	db	114	;'r'
  2563  00FFB5  73                 	db	115	;'s'
  2564  00FFB6  69                 	db	105	;'i'
  2565  00FFB7  6F                 	db	111	;'o'
  2566  00FFB8  6E                 	db	110	;'n'
  2567  00FFB9  20                 	db	32
  2568  00FFBA  25                 	db	37
  2569  00FFBB  73                 	db	115	;'s'
  2570  00FFBC  20                 	db	32
  2571  00FFBD  20                 	db	32
  2572  00FFBE  20                 	db	32
  2573  00FFBF  00                 	db	0
  2574  00FFC0                     STR_27:
  2575                           
  2576                           ; BSR set to: 57
  2577  00FFC0  44                 	db	68	;'D'
  2578  00FFC1  65                 	db	101	;'e'
  2579  00FFC2  63                 	db	99	;'c'
  2580  00FFC3  20                 	db	32
  2581  00FFC4  20                 	db	32
  2582  00FFC5  38                 	db	56	;'8'
  2583  00FFC6  20                 	db	32
  2584  00FFC7  32                 	db	50	;'2'
  2585  00FFC8  30                 	db	48	;'0'
  2586  00FFC9  31                 	db	49	;'1'
  2587  00FFCA  39                 	db	57	;'9'
  2588  00FFCB  00                 	db	0
  2589  00FFCC                     STR_31:
  2590                           
  2591                           ; BSR set to: 57
  2592  00FFCC  25                 	db	37
  2593  00FFCD  73                 	db	115	;'s'
  2594  00FFCE  20                 	db	32
  2595  00FFCF  20                 	db	32
  2596  00FFD0  20                 	db	32
  2597  00FFD1  20                 	db	32
  2598  00FFD2  20                 	db	32
  2599  00FFD3  20                 	db	32
  2600  00FFD4  20                 	db	32
  2601  00FFD5  00                 	db	0
  2602  00FFD6                     STR_28:
  2603                           
  2604                           ; BSR set to: 57
  2605  00FFD6  31                 	db	49	;'1'
  2606  00FFD7  37                 	db	55	;'7'
  2607  00FFD8  3A                 	db	58	;':'
  2608  00FFD9  35                 	db	53	;'5'
  2609  00FFDA  31                 	db	49	;'1'
  2610  00FFDB  3A                 	db	58	;':'
  2611  00FFDC  33                 	db	51	;'3'
  2612  00FFDD  30                 	db	48	;'0'
  2613  00FFDE  00                 	db	0
  2614  00FFDF                     STR_3:
  2615                           
  2616                           ; BSR set to: 57
  2617  00FFDF  30                 	db	48	;'0'
  2618  00FFE0  2E                 	db	46
  2619  00FFE1  39                 	db	57	;'9'
  2620  00FFE2  39                 	db	57	;'9'
  2621  00FFE3  39                 	db	57	;'9'
  2622  00FFE4  00                 	db	0
  2623  00FFE5                     STR_47:
  2624                           
  2625                           ; BSR set to: 57
  2626  00FFE5  49                 	db	73	;'I'
  2627  00FFE6  4E                 	db	78	;'N'
  2628  00FFE7  46                 	db	70	;'F'
  2629  00FFE8  00                 	db	0
  2630  00FFE9                     STR_51:
  2631                           
  2632                           ; BSR set to: 57
  2633  00FFE9  4E                 	db	78	;'N'
  2634  00FFEA  41                 	db	65	;'A'
  2635  00FFEB  4E                 	db	78	;'N'
  2636  00FFEC  00                 	db	0
  2637  00FFED                     STR_48:
  2638                           
  2639                           ; BSR set to: 57
  2640  00FFED  69                 	db	105	;'i'
  2641  00FFEE  6E                 	db	110	;'n'
  2642  00FFEF  66                 	db	102	;'f'
  2643  00FFF0  00                 	db	0
  2644  00FFF1                     STR_52:
  2645                           
  2646                           ; BSR set to: 57
  2647  00FFF1  6E                 	db	110	;'n'
  2648  00FFF2  61                 	db	97	;'a'
  2649  00FFF3  6E                 	db	110	;'n'
  2650  00FFF4  00                 	db	0
  2651  00FFF5                     STR_55:
  2652                           
  2653                           ; BSR set to: 57
  2654  00FFF5  6C                 	db	108	;'l'
  2655  00FFF6  66                 	db	102	;'f'
  2656  00FFF7  00                 	db	0
  2657  00FFF8                     STR_25:
  2658                           
  2659                           ; BSR set to: 57
  2660  00FFF8  25                 	db	37
  2661  00FFF9  63                 	db	99	;'c'
  2662  00FFFA  00                 	db	0
  2663  00FFFB                     STR_24:
  2664                           
  2665                           ; BSR set to: 57
  2666  00FFFB  25                 	db	37
  2667  00FFFC  73                 	db	115	;'s'
  2668  00FFFD  00                 	db	0
  2669  0000                     
  2670                           ; #config settings
  2671  00FFFE  00                 	db	0	; dummy byte at the end
  2672  0000                     
  2673                           	psect	cinit
  2674  017BC6                     __pcinit:
  2675                           	opt callstack 0
  2676  017BC6                     start_initialization:
  2677                           	opt callstack 0
  2678  017BC6                     __initialization:
  2679                           	opt callstack 0
  2680                           
  2681                           ; Initialize objects allocated to BIGRAM (512 bytes)
  2682                           ; load TBLPTR registers with __pidataBIGRAM
  2683  017BC6  0EFC               	movlw	low __pidataBIGRAM
  2684  017BC8  6EF6               	movwf	tblptrl,c
  2685  017BCA  0E66               	movlw	high __pidataBIGRAM
  2686  017BCC  6EF7               	movwf	tblptrh,c
  2687  017BCE  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  2688  017BD0  6EF8               	movwf	tblptru,c
  2689  017BD2  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  2690  017BD6  EE20 F200          	lfsr	2,512
  2691  017BDA                     copy_data0:
  2692  017BDA  0009               	tblrd		*+
  2693  017BDC  006F FFD7 FFEE     	movff	tablat,postinc0
  2694  017BE2  50DD               	movf	postdec2,w,c
  2695  017BE4  50D9               	movf	fsr2l,w,c
  2696  017BE6  E1F9               	bnz	copy_data0
  2697  017BE8  50DA               	movf	fsr2h,w,c
  2698  017BEA  E1F7               	bnz	copy_data0
  2699                           
  2700                           ; Initialize objects allocated to BANK2 (188 bytes)
  2701                           ; load TBLPTR registers with __pidataBANK2
  2702  017BEC  0E3C               	movlw	low __pidataBANK2
  2703  017BEE  6EF6               	movwf	tblptrl,c
  2704  017BF0  0E82               	movlw	high __pidataBANK2
  2705  017BF2  6EF7               	movwf	tblptrh,c
  2706  017BF4  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  2707  017BF6  6EF8               	movwf	tblptru,c
  2708  017BF8  EE00  F200         	lfsr	0,__pdataBANK2
  2709  017BFC  EE20 F0BC          	lfsr	2,188
  2710  017C00                     copy_data1:
  2711  017C00  0009               	tblrd		*+
  2712  017C02  006F FFD7 FFEE     	movff	tablat,postinc0
  2713  017C08  50DD               	movf	postdec2,w,c
  2714  017C0A  50D9               	movf	fsr2l,w,c
  2715  017C0C  E1F9               	bnz	copy_data1
  2716                           
  2717                           ; Initialize objects allocated to BANK1 (218 bytes)
  2718                           ; load TBLPTR registers with __pidataBANK1
  2719  017C0E  0ECA               	movlw	low __pidataBANK1
  2720  017C10  6EF6               	movwf	tblptrl,c
  2721  017C12  0E7F               	movlw	high __pidataBANK1
  2722  017C14  6EF7               	movwf	tblptrh,c
  2723  017C16  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  2724  017C18  6EF8               	movwf	tblptru,c
  2725  017C1A  EE00  F100         	lfsr	0,__pdataBANK1
  2726  017C1E  EE20 F0DA          	lfsr	2,218
  2727  017C22                     copy_data2:
  2728  017C22  0009               	tblrd		*+
  2729  017C24  006F FFD7 FFEE     	movff	tablat,postinc0
  2730  017C2A  50DD               	movf	postdec2,w,c
  2731  017C2C  50D9               	movf	fsr2l,w,c
  2732  017C2E  E1F9               	bnz	copy_data2
  2733                           
  2734                           ; Initialize objects allocated to BANK0 (47 bytes)
  2735                           ; load TBLPTR registers with __pidataBANK0
  2736  017C30  0E3E               	movlw	low __pidataBANK0
  2737  017C32  6EF6               	movwf	tblptrl,c
  2738  017C34  0E96               	movlw	high __pidataBANK0
  2739  017C36  6EF7               	movwf	tblptrh,c
  2740  017C38  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  2741  017C3A  6EF8               	movwf	tblptru,c
  2742  017C3C  EE00  F0CB         	lfsr	0,__pdataBANK0
  2743  017C40  EE20 F02F          	lfsr	2,47
  2744  017C44                     copy_data3:
  2745  017C44  0009               	tblrd		*+
  2746  017C46  006F FFD7 FFEE     	movff	tablat,postinc0
  2747  017C4C  50DD               	movf	postdec2,w,c
  2748  017C4E  50D9               	movf	fsr2l,w,c
  2749  017C50  E1F9               	bnz	copy_data3
  2750                           
  2751                           ; Clear objects allocated to BIGRAM (290 bytes)
  2752  017C52  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  2753  017C56  EE20 F122          	lfsr	2,290
  2754  017C5A                     clear_0:
  2755  017C5A  6AEE               	clrf	postinc0,c
  2756  017C5C  50DD               	movf	postdec2,w,c
  2757  017C5E  50D9               	movf	fsr2l,w,c
  2758  017C60  E1FC               	bnz	clear_0
  2759  017C62  50DA               	movf	fsr2h,w,c
  2760  017C64  E1FA               	bnz	clear_0
  2761                           
  2762                           ; Clear objects allocated to BANK5 (255 bytes)
  2763  017C66  EE01  F100         	lfsr	0,__pbssBANK5
  2764  017C6A  EE20 F0FF          	lfsr	2,255
  2765  017C6E                     clear_1:
  2766  017C6E  6AEE               	clrf	postinc0,c
  2767  017C70  50DD               	movf	postdec2,w,c
  2768  017C72  50D9               	movf	fsr2l,w,c
  2769  017C74  E1FC               	bnz	clear_1
  2770  017C76  50DA               	movf	fsr2h,w,c
  2771  017C78  E1FA               	bnz	clear_1
  2772                           
  2773                           ; Clear objects allocated to BANK4 (134 bytes)
  2774  017C7A  EE01  F000         	lfsr	0,__pbssBANK4
  2775  017C7E  0E86               	movlw	134
  2776  017C80                     clear_2:
  2777  017C80  6AEE               	clrf	postinc0,c
  2778  017C82  06E8               	decf	wreg,f,c
  2779  017C84  E1FD               	bnz	clear_2
  2780                           
  2781                           ; Clear objects allocated to BANK3 (228 bytes)
  2782  017C86  EE00  F300         	lfsr	0,__pbssBANK3
  2783  017C8A  0EE4               	movlw	228
  2784  017C8C                     clear_3:
  2785  017C8C  6AEE               	clrf	postinc0,c
  2786  017C8E  06E8               	decf	wreg,f,c
  2787  017C90  E1FD               	bnz	clear_3
  2788                           
  2789                           ; Clear objects allocated to BANK2 (8 bytes)
  2790  017C92  EE00  F2D5         	lfsr	0,__pbssBANK2
  2791  017C96  0E08               	movlw	8
  2792  017C98                     clear_4:
  2793  017C98  6AEE               	clrf	postinc0,c
  2794  017C9A  06E8               	decf	wreg,f,c
  2795  017C9C  E1FD               	bnz	clear_4
  2796                           
  2797                           ; Clear objects allocated to BANK1 (32 bytes)
  2798  017C9E  EE00  F1DA         	lfsr	0,__pbssBANK1
  2799  017CA2  0E20               	movlw	32
  2800  017CA4                     clear_5:
  2801  017CA4  6AEE               	clrf	postinc0,c
  2802  017CA6  06E8               	decf	wreg,f,c
  2803  017CA8  E1FD               	bnz	clear_5
  2804                           
  2805                           ; Clear objects allocated to BANK0 (107 bytes)
  2806  017CAA  EE00  F060         	lfsr	0,__pbssBANK0
  2807  017CAE  0E6B               	movlw	107
  2808  017CB0                     clear_6:
  2809  017CB0  6AEE               	clrf	postinc0,c
  2810  017CB2  06E8               	decf	wreg,f,c
  2811  017CB4  E1FD               	bnz	clear_6
  2812                           
  2813                           ; Clear objects allocated to COMRAM (23 bytes)
  2814  017CB6  EE00  F021         	lfsr	0,__pbssCOMRAM
  2815  017CBA  0E17               	movlw	23
  2816  017CBC                     clear_7:
  2817  017CBC  6AEE               	clrf	postinc0,c
  2818  017CBE  06E8               	decf	wreg,f,c
  2819  017CC0  E1FD               	bnz	clear_7
  2820                           
  2821                           ;
  2822                           ; Setup IVTBASE
  2823                           ;
  2824  017CC2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2825  017CC4  6ED5               	movwf	213,c
  2826  017CC6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2827  017CC8  6ED6               	movwf	214,c
  2828  017CCA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2829  017CCC  6ED7               	movwf	215,c
  2830  017CCE                     end_of_initialization:
  2831                           	opt callstack 0
  2832  017CCE                     __end_of__initialization:
  2833                           	opt callstack 0
  2834  017CCE  0100               	movlb	0
  2835  017CD0  EFC1  F08E         	goto	_main	;jump to C main() function
  2836                           
  2837                           	psect	bssCOMRAM
  2838  000021                     __pbssCOMRAM:
  2839                           	opt callstack 0
  2840  000021                     _width:
  2841                           	opt callstack 0
  2842  000021                     	ds	2
  2843  000023                     _prec:
  2844                           	opt callstack 0
  2845  000023                     	ds	2
  2846  000025                     _flags:
  2847                           	opt callstack 0
  2848  000025                     	ds	2
  2849  000027                     _timer3ReloadVal:
  2850                           	opt callstack 0
  2851  000027                     	ds	2
  2852  000029                     TMR5_ISR@CountCallBack:
  2853                           	opt callstack 0
  2854  000029                     	ds	2
  2855  00002B                     _timer5ReloadVal:
  2856                           	opt callstack 0
  2857  00002B                     	ds	2
  2858  00002D                     Volts_to_SOC@slot:
  2859                           	opt callstack 0
  2860  00002D                     	ds	1
  2861  00002E                     _mode_sw:
  2862                           	opt callstack 0
  2863  00002E                     	ds	1
  2864  00002F                     _uart2RxCount:
  2865                           	opt callstack 0
  2866  00002F                     	ds	1
  2867  000030                     _uart2RxTail:
  2868                           	opt callstack 0
  2869  000030                     	ds	1
  2870  000031                     _uart2RxHead:
  2871                           	opt callstack 0
  2872  000031                     	ds	1
  2873  000032                     _uart2TxBufferRemaining:
  2874                           	opt callstack 0
  2875  000032                     	ds	1
  2876  000033                     _uart2TxTail:
  2877                           	opt callstack 0
  2878  000033                     	ds	1
  2879  000034                     _uart2TxHead:
  2880                           	opt callstack 0
  2881  000034                     	ds	1
  2882  000035                     _uart1RxCount:
  2883                           	opt callstack 0
  2884  000035                     	ds	1
  2885  000036                     _uart1RxTail:
  2886                           	opt callstack 0
  2887  000036                     	ds	1
  2888  000037                     _uart1RxHead:
  2889                           	opt callstack 0
  2890  000037                     	ds	1
  2891                           
  2892                           	psect	bssBANK0
  2893  000060                     __pbssBANK0:
  2894                           	opt callstack 0
  2895  000060                     _S:
  2896                           	opt callstack 0
  2897  000060                     	ds	41
  2898  000089                     _spi_link:
  2899                           	opt callstack 0
  2900  000089                     	ds	12
  2901  000095                     floorf@F524:
  2902                           	opt callstack 0
  2903  000095                     	ds	4
  2904  000099                     ___fpclassifyf@F463:
  2905                           	opt callstack 0
  2906  000099                     	ds	4
  2907  00009D                     _utctime:
  2908                           	opt callstack 0
  2909  00009D                     	ds	4
  2910  0000A1                     wdtdelay@dcount:
  2911                           	opt callstack 0
  2912  0000A1                     	ds	4
  2913  0000A5                     _P:
  2914                           	opt callstack 0
  2915  0000A5                     	ds	4
  2916  0000A9                     _TMR3_InterruptHandler:
  2917                           	opt callstack 0
  2918  0000A9                     	ds	3
  2919  0000AC                     _TMR5_InterruptHandler:
  2920                           	opt callstack 0
  2921  0000AC                     	ds	3
  2922  0000AF                     _TMR6_InterruptHandler:
  2923                           	opt callstack 0
  2924  0000AF                     	ds	3
  2925  0000B2                     _ADCC_ADTI_InterruptHandler:
  2926                           	opt callstack 0
  2927  0000B2                     	ds	3
  2928  0000B5                     _ADCC_ADI_InterruptHandler:
  2929                           	opt callstack 0
  2930  0000B5                     	ds	3
  2931  0000B8                     _UART1_RxInterruptHandler:
  2932                           	opt callstack 0
  2933  0000B8                     	ds	3
  2934  0000BB                     _UART2_TxInterruptHandler:
  2935                           	opt callstack 0
  2936  0000BB                     	ds	3
  2937  0000BE                     _UART2_RxInterruptHandler:
  2938                           	opt callstack 0
  2939  0000BE                     	ds	3
  2940  0000C1                     _INT1_InterruptHandler:
  2941                           	opt callstack 0
  2942  0000C1                     	ds	3
  2943  0000C4                     _INT0_InterruptHandler:
  2944                           	opt callstack 0
  2945  0000C4                     	ds	3
  2946  0000C7                     _nout:
  2947                           	opt callstack 0
  2948  0000C7                     	ds	2
  2949  0000C9                     TMR3_ISR@CountCallBack:
  2950                           	opt callstack 0
  2951  0000C9                     	ds	2
  2952                           
  2953                           	psect	dataBANK0
  2954  0000CB                     __pdataBANK0:
  2955                           	opt callstack 0
  2956  0000CB                     _R:
  2957                           	opt callstack 0
  2958  0000CB                     	ds	40
  2959  0000F3                     _H:
  2960                           	opt callstack 0
  2961  0000F3                     	ds	7
  2962                           
  2963                           	psect	bssBANK1
  2964  0001DA                     __pbssBANK1:
  2965                           	opt callstack 0
  2966  0001DA                     _tickCount:
  2967                           	opt callstack 0
  2968  0001DA                     	ds	24
  2969  0001F2                     _uart1RxBuffer:
  2970                           	opt callstack 0
  2971  0001F2                     	ds	8
  2972                           
  2973                           	psect	dataBANK1
  2974  000100                     __pdataBANK1:
  2975                           	opt callstack 0
  2976  000100                     _C:
  2977                           	opt callstack 0
  2978  000100                     	ds	211
  2979  0001D3                     stoa@F1166:
  2980                           	opt callstack 0
  2981  0001D3                     	ds	7
  2982                           
  2983                           	psect	bssBANK2
  2984  0002D5                     __pbssBANK2:
  2985                           	opt callstack 0
  2986  0002D5                     _seed:
  2987                           	opt callstack 0
  2988  0002D5                     	ds	8
  2989                           
  2990                           	psect	dataBANK2
  2991  000200                     __pdataBANK2:
  2992                           	opt callstack 0
  2993  000200                     _V:
  2994                           	opt callstack 0
  2995  000200                     	ds	188
  2996                           
  2997                           	psect	bssBANK3
  2998  000300                     __pbssBANK3:
  2999                           	opt callstack 0
  3000  000300                     lp_filter@smooth:
  3001                           	opt callstack 0
  3002  000300                     	ds	84
  3003  000354                     _uart2TxBuffer:
  3004                           	opt callstack 0
  3005  000354                     	ds	64
  3006  000394                     _dbuf:
  3007                           	opt callstack 0
  3008  000394                     	ds	80
  3009                           
  3010                           	psect	bssBANK4
  3011  000400                     __pbssBANK4:
  3012                           	opt callstack 0
  3013  000400                     _ring_buf2:
  3014                           	opt callstack 0
  3015  000400                     	ds	67
  3016  000443                     _ring_buf1:
  3017                           	opt callstack 0
  3018  000443                     	ds	67
  3019                           
  3020                           	psect	bssBANK5
  3021  000500                     __pbssBANK5:
  3022                           	opt callstack 0
  3023  000500                     _uart2RxBuffer:
  3024                           	opt callstack 0
  3025  000500                     	ds	255
  3026                           
  3027                           	psect	bssBIGRAM
  3028  0007FF                     __pbssBIGRAM:
  3029                           	opt callstack 0
  3030  0007FF                     _D:
  3031                           	opt callstack 0
  3032  0007FF                     	ds	290
  3033                           
  3034                           	psect	dataBIGRAM
  3035  0005FF                     __pdataBIGRAM:
  3036                           	opt callstack 0
  3037  0005FF                     _port_data:
  3038                           	opt callstack 0
  3039  0005FF                     	ds	512
  3040                           
  3041                           	psect	cstackBANK2
  3042  0002BC                     __pcstackBANK2:
  3043                           	opt callstack 0
  3044  0002BC                     ??_TMR3_ISR:
  3045                           
  3046                           ; 1 bytes @ 0x0
  3047  0002BC                     	ds	25
  3048                           
  3049                           	psect	cstackCOMRAM
  3050  000038                     __pcstackCOMRAM:
  3051                           	opt callstack 0
  3052  000038                     ??_ADCC_ThresholdISR:
  3053  000038                     
  3054                           ; 1 bytes @ 0x0
  3055  000038                     	ds	5
  3056  00003D                     ??_TMR6_ISR:
  3057                           
  3058                           ; 1 bytes @ 0x5
  3059  00003D                     	ds	1
  3060  00003E                     ??_INT1_ISR:
  3061  00003E                     
  3062                           ; 1 bytes @ 0x6
  3063  00003E                     	ds	4
  3064  000042                     ??_TMR5_ISR:
  3065                           
  3066                           ; 1 bytes @ 0xA
  3067  000042                     	ds	4
  3068                           
  3069 ;;
  3070 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  3071 ;;
  3072 ;; *************** function _main *****************
  3073 ;; Defined at:
  3074 ;;		line 174 in file "main.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;		None
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  k               1  [STACK] unsigned char 
  3079 ;;  j               1  [STACK] unsigned char 
  3080 ;;  i               1  [STACK] unsigned char 
  3081 ;;  inp_index       1  [STACK] unsigned char 
  3082 ;;  mode            1  [STACK] enum E17013
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1  [STACK] void 
  3085 ;; Registers used:
  3086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3096 ;;Total ram usage:        0 bytes
  3097 ;; Hardware stack levels required when called:   28
  3098 ;; This function calls:
  3099 ;;		_SYSTEM_Initialize
  3100 ;;		_StartTimer
  3101 ;;		_TimerDone
  3102 ;;		_WaitMs
  3103 ;;		_calc_model_data
  3104 ;;		_check_adc_scan
  3105 ;;		_check_enter_button
  3106 ;;		_check_help
  3107 ;;		_clear_adc_scan
  3108 ;;		_clear_hid_pflags
  3109 ;;		_convert_adc_data
  3110 ;;		_eaDogM_WriteCommand
  3111 ;;		_get_raw_result
  3112 ;;		_get_switch
  3113 ;;		_get_vterm_ptr
  3114 ;;		_hid_display
  3115 ;;		_init_bsoc
  3116 ;;		_init_display
  3117 ;;		_init_port_dma
  3118 ;;		_lp_filter
  3119 ;;		_mode_lamp_dim
  3120 ;;		_set_display_info
  3121 ;;		_set_vterm
  3122 ;;		_sprintf
  3123 ;;		_srand
  3124 ;;		_start_adc_scan
  3125 ;;		_start_switch_handler
  3126 ;;		_static_soc
  3127 ;;		_update_lcd
  3128 ;; This function is called by:
  3129 ;;		Startup code after reset
  3130 ;; This function uses a reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text0
  3134  011D82                     __ptext0:
  3135                           	opt callstack 0
  3136  011D82                     _main:
  3137                           	opt callstack 0
  3138                           
  3139                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3140  011D82  0E05               	movlw	5
  3141  011D84  26E1               	addwf	fsr1l,f,c
  3142  011D86  0E00               	movlw	0
  3143  011D88  22E2               	addwfc	fsr1h,f,c
  3144                           
  3145                           ;main.c: 176:  UI_STATES mode;;main.c: 177:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  3146                           ;stkvar	_inp_index @ sp[(-5)+3]
  3147                           
  3148                           ;incstack = 0
  3149  011D8A  0EFE               	movlw	-2
  3150  011D8C  6AE3               	clrf	plusw1,c
  3151                           
  3152                           ;stkvar	_i @ sp[(-5)+2]
  3153  011D8E  0EFD               	movlw	-3
  3154  011D90  6AE3               	clrf	plusw1,c
  3155                           
  3156                           ;stkvar	_j @ sp[(-5)+1]
  3157  011D92  0EFC               	movlw	-4
  3158  011D94  6AE3               	clrf	plusw1,c
  3159  011D96  2AE3               	incf	plusw1,f,c
  3160                           
  3161                           ;stkvar	_k @ sp[(-5)+0]
  3162  011D98  0EFB               	movlw	-5
  3163  011D9A  6AE3               	clrf	plusw1,c
  3164  011D9C  82E3               	bsf	plusw1,1,c
  3165                           
  3166                           ;main.c: 180:  SYSTEM_Initialize();
  3167  011D9E  EC5F  F0C8         	call	_SYSTEM_Initialize	;wreg free
  3168                           
  3169                           ; BSR set to: 60
  3170                           ;main.c: 183:  (INTCON0bits.GIEH = 1);
  3171  011DA2  8ED2               	bsf	210,7,c	;volatile
  3172                           
  3173                           ; BSR set to: 60
  3174                           ;main.c: 186:  (INTCON0bits.GIEL = 1);
  3175  011DA4  8CD2               	bsf	210,6,c	;volatile
  3176                           
  3177                           ; BSR set to: 60
  3178                           ;main.c: 188:  V.ui_state = UI_STATE_INIT;
  3179  011DA6  0102               	movlb	2	; () banked
  3180  011DA8  6B00               	clrf	_V& (0+255),b	;volatile
  3181                           
  3182                           ; BSR set to: 2
  3183                           ;main.c: 193:  WaitMs(300);
  3184  011DAA  0E2C               	movlw	44
  3185  011DAC  6EE6               	movwf	postinc1,c
  3186  011DAE  0E01               	movlw	1
  3187  011DB0  6EE6               	movwf	postinc1,c
  3188  011DB2  EC55  F0CA         	call	_WaitMs	;wreg free
  3189                           
  3190                           ;main.c: 194:  if (PORTBbits.RB0) {
  3191  011DB6  A0CB               	btfss	203,0,c	;volatile
  3192  011DB8  D004               	goto	l11728
  3193                           
  3194                           ;main.c: 195:   mode = UI_STATE_HOST;
  3195                           ;stkvar	_mode @ sp[(-5)+4]
  3196  011DBA  0EFF               	movlw	-1
  3197  011DBC  6AE3               	clrf	plusw1,c
  3198  011DBE  2AE3               	incf	plusw1,f,c
  3199                           
  3200                           ;main.c: 196:  } else {
  3201  011DC0  D004               	goto	l11730
  3202  011DC2                     l11728:
  3203                           
  3204                           ;main.c: 197:   mode = UI_STATE_LOG;
  3205                           ;stkvar	_mode @ sp[(-5)+4]
  3206  011DC2  0EFF               	movlw	-1
  3207  011DC4  6AE3               	clrf	plusw1,c
  3208  011DC6  80E3               	bsf	plusw1,0,c
  3209  011DC8  82E3               	bsf	plusw1,1,c	;indir
  3210  011DCA                     l11730:
  3211                           
  3212                           ;main.c: 200:  if (mode == UI_STATE_HOST) {
  3213                           ;stkvar	_mode @ sp[(-5)+4]
  3214  011DCA  0EFF               	movlw	-1
  3215  011DCC  04E3               	decf	plusw1,w,c
  3216  011DCE  A4D8               	btfss	status,2,c
  3217  011DD0  D007               	goto	l1308
  3218                           
  3219                           ;main.c: 201:   do { LATDbits.LATD0 = 1; } while(0);
  3220  011DD2  80BD               	bsf	189,0,c	;volatile
  3221                           
  3222                           ;main.c: 202:   V.mode_pwm = 70;
  3223  011DD4  0E00               	movlw	0
  3224  011DD6  0102               	movlb	2	; () banked
  3225  011DD8  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3226  011DDA  0E46               	movlw	70
  3227  011DDC  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3228                           
  3229                           ;main.c: 203:  } else {
  3230  011DDE  D004               	goto	l11734
  3231  011DE0                     l1308:
  3232  011DE0  90BD               	bcf	189,0,c	;volatile
  3233                           
  3234                           ;main.c: 205:   V.mode_pwm = 0;
  3235  011DE2  0102               	movlb	2	; () banked
  3236  011DE4  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3237  011DE6  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3238  011DE8                     l11734:
  3239                           
  3240                           ; BSR set to: 2
  3241                           ;main.c: 207:  mode_lamp_dim(V.mode_pwm);
  3242  011DE8  0060  FA57  FFE6   	movff	_V+149,postinc1
  3243  011DEE  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3244  011DF4  EC2F  F0CE         	call	_mode_lamp_dim	;wreg free
  3245  011DF8  D0DC               	goto	l11786
  3246  011DFA                     l11736:
  3247                           
  3248                           ; BSR set to: 2
  3249                           ;main.c: 215:    init_port_dma();
  3250  011DFA  ECBF  F0CA         	call	_init_port_dma	;wreg free
  3251                           
  3252                           ; BSR set to: 59
  3253                           ;main.c: 217:    init_display();
  3254  011DFE  EC70  F0BF         	call	_init_display	;wreg free
  3255                           
  3256                           ; BSR set to: 61
  3257                           ;main.c: 218:    eaDogM_WriteCommand(0b00001100);
  3258  011E02  0E0C               	movlw	12
  3259  011E04  6EE6               	movwf	postinc1,c
  3260  011E06  EC83  F0CE         	call	_eaDogM_WriteCommand	;wreg free
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;main.c: 220:    V.ui_state = mode;
  3264                           ;stkvar	_mode @ sp[(-5)+4]
  3265  011E0A  0EFF               	movlw	-1
  3266  011E0C  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;main.c: 221:    srand(1957);
  3270  011E12  0EA5               	movlw	165
  3271  011E14  6EE6               	movwf	postinc1,c
  3272  011E16  0E07               	movlw	7
  3273  011E18  6EE6               	movwf	postinc1,c
  3274  011E1A  EC8B  F0CA         	call	_srand	;wreg free
  3275                           
  3276                           ; BSR set to: 2
  3277                           ;main.c: 222:    set_vterm(0);
  3278  011E1E  0E00               	movlw	0
  3279  011E20  6EE6               	movwf	postinc1,c
  3280  011E22  ECD9  F0CD         	call	_set_vterm	;wreg free
  3281                           
  3282                           ;main.c: 223:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3283  011E26  0E5F               	movlw	low STR_1
  3284  011E28  6EE6               	movwf	postinc1,c
  3285  011E2A  0EFF               	movlw	high STR_1
  3286  011E2C  6EE6               	movwf	postinc1,c
  3287  011E2E  0E00               	movlw	0
  3288  011E30  6EE6               	movwf	postinc1,c
  3289  011E32  0E00               	movlw	0
  3290  011E34  6EE6               	movwf	postinc1,c
  3291  011E36  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  3292  011E3A  0060  F007  FFE6   	movff	btemp,postinc1
  3293  011E40  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3294  011E46  0E04               	movlw	4
  3295  011E48  6EE6               	movwf	postinc1,c
  3296  011E4A  EC6A  F0BE         	call	_sprintf	;wreg free
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;main.c: 224:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.999");
  3300  011E4E  0EDF               	movlw	low STR_3
  3301  011E50  6EE6               	movwf	postinc1,c
  3302  011E52  0EFF               	movlw	high STR_3
  3303  011E54  6EE6               	movwf	postinc1,c
  3304  011E56  0EB1               	movlw	low STR_2
  3305  011E58  6EE6               	movwf	postinc1,c
  3306  011E5A  0EFF               	movlw	high STR_2
  3307  011E5C  6EE6               	movwf	postinc1,c
  3308  011E5E  0E00               	movlw	0
  3309  011E60  6EE6               	movwf	postinc1,c
  3310  011E62  0E01               	movlw	1
  3311  011E64  6EE6               	movwf	postinc1,c
  3312  011E66  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  3313  011E6A  0060  F007  FFE6   	movff	btemp,postinc1
  3314  011E70  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3315  011E76  0E06               	movlw	6
  3316  011E78  6EE6               	movwf	postinc1,c
  3317  011E7A  EC6A  F0BE         	call	_sprintf	;wreg free
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;main.c: 225:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  3321  011E7E  0E4E               	movlw	low STR_4
  3322  011E80  6EE6               	movwf	postinc1,c
  3323  011E82  0EFF               	movlw	high STR_4
  3324  011E84  6EE6               	movwf	postinc1,c
  3325  011E86  0E00               	movlw	0
  3326  011E88  6EE6               	movwf	postinc1,c
  3327  011E8A  0E02               	movlw	2
  3328  011E8C  6EE6               	movwf	postinc1,c
  3329  011E8E  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  3330  011E92  0060  F007  FFE6   	movff	btemp,postinc1
  3331  011E98  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3332  011E9E  0E04               	movlw	4
  3333  011EA0  6EE6               	movwf	postinc1,c
  3334  011EA2  EC6A  F0BE         	call	_sprintf	;wreg free
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;main.c: 226:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  3338  011EA6  0E70               	movlw	low STR_5
  3339  011EA8  6EE6               	movwf	postinc1,c
  3340  011EAA  0EFF               	movlw	high STR_5
  3341  011EAC  6EE6               	movwf	postinc1,c
  3342  011EAE  0E02               	movlw	2
  3343  011EB0  6EE6               	movwf	postinc1,c
  3344  011EB2  0E00               	movlw	0
  3345  011EB4  6EE6               	movwf	postinc1,c
  3346  011EB6  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  3347  011EBA  0060  F007  FFE6   	movff	btemp,postinc1
  3348  011EC0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3349  011EC6  0E04               	movlw	4
  3350  011EC8  6EE6               	movwf	postinc1,c
  3351  011ECA  EC6A  F0BE         	call	_sprintf	;wreg free
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;main.c: 227:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.999");
  3355  011ECE  0EDF               	movlw	low STR_3
  3356  011ED0  6EE6               	movwf	postinc1,c
  3357  011ED2  0EFF               	movlw	high STR_3
  3358  011ED4  6EE6               	movwf	postinc1,c
  3359  011ED6  0EB1               	movlw	low STR_2
  3360  011ED8  6EE6               	movwf	postinc1,c
  3361  011EDA  0EFF               	movlw	high STR_2
  3362  011EDC  6EE6               	movwf	postinc1,c
  3363  011EDE  0E02               	movlw	2
  3364  011EE0  6EE6               	movwf	postinc1,c
  3365  011EE2  0E01               	movlw	1
  3366  011EE4  6EE6               	movwf	postinc1,c
  3367  011EE6  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  3368  011EEA  0060  F007  FFE6   	movff	btemp,postinc1
  3369  011EF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3370  011EF6  0E06               	movlw	6
  3371  011EF8  6EE6               	movwf	postinc1,c
  3372  011EFA  EC6A  F0BE         	call	_sprintf	;wreg free
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;main.c: 228:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  3376  011EFE  0E3D               	movlw	low STR_8
  3377  011F00  6EE6               	movwf	postinc1,c
  3378  011F02  0EFF               	movlw	high STR_8
  3379  011F04  6EE6               	movwf	postinc1,c
  3380  011F06  0E02               	movlw	2
  3381  011F08  6EE6               	movwf	postinc1,c
  3382  011F0A  0E02               	movlw	2
  3383  011F0C  6EE6               	movwf	postinc1,c
  3384  011F0E  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  3385  011F12  0060  F007  FFE6   	movff	btemp,postinc1
  3386  011F18  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3387  011F1E  0E04               	movlw	4
  3388  011F20  6EE6               	movwf	postinc1,c
  3389  011F22  EC6A  F0BE         	call	_sprintf	;wreg free
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;main.c: 229:    update_lcd(0);
  3393  011F26  0E00               	movlw	0
  3394  011F28  6EE6               	movwf	postinc1,c
  3395  011F2A  EC5B  F0BD         	call	_update_lcd	;wreg free
  3396                           
  3397                           ;main.c: 230:    WaitMs(3000);
  3398  011F2E  0EB8               	movlw	184
  3399  011F30  6EE6               	movwf	postinc1,c
  3400  011F32  0E0B               	movlw	11
  3401  011F34  6EE6               	movwf	postinc1,c
  3402  011F36  EC55  F0CA         	call	_WaitMs	;wreg free
  3403                           
  3404                           ;main.c: 231:    StartTimer(TMR_DISPLAY, 250);
  3405  011F3A  0EFA               	movlw	250
  3406  011F3C  6EE6               	movwf	postinc1,c
  3407  011F3E  0E00               	movlw	0
  3408  011F40  6EE6               	movwf	postinc1,c
  3409  011F42  0E0A               	movlw	10
  3410  011F44  6EE6               	movwf	postinc1,c
  3411  011F46  EC9A  F0C9         	call	_StartTimer	;wreg free
  3412                           
  3413                           ;main.c: 232:    StartTimer(TMR_ADC, 200);
  3414  011F4A  0EC8               	movlw	200
  3415  011F4C  6EE6               	movwf	postinc1,c
  3416  011F4E  0E00               	movlw	0
  3417  011F50  6EE6               	movwf	postinc1,c
  3418  011F52  0E01               	movlw	1
  3419  011F54  6EE6               	movwf	postinc1,c
  3420  011F56  EC9A  F0C9         	call	_StartTimer	;wreg free
  3421                           
  3422                           ;main.c: 233:    StartTimer(TMR_INFO, 3000);
  3423  011F5A  0EB8               	movlw	184
  3424  011F5C  6EE6               	movwf	postinc1,c
  3425  011F5E  0E0B               	movlw	11
  3426  011F60  6EE6               	movwf	postinc1,c
  3427  011F62  0E07               	movlw	7
  3428  011F64  6EE6               	movwf	postinc1,c
  3429  011F66  EC9A  F0C9         	call	_StartTimer	;wreg free
  3430                           
  3431                           ;main.c: 234:    StartTimer(TMR_FLIPPER, 1500);
  3432  011F6A  0EDC               	movlw	220
  3433  011F6C  6EE6               	movwf	postinc1,c
  3434  011F6E  0E05               	movlw	5
  3435  011F70  6EE6               	movwf	postinc1,c
  3436  011F72  0E0B               	movlw	11
  3437  011F74  6EE6               	movwf	postinc1,c
  3438  011F76  EC9A  F0C9         	call	_StartTimer	;wreg free
  3439                           
  3440                           ;main.c: 235:    StartTimer(TMR_HELPDIS, 3000);
  3441  011F7A  0EB8               	movlw	184
  3442  011F7C  6EE6               	movwf	postinc1,c
  3443  011F7E  0E0B               	movlw	11
  3444  011F80  6EE6               	movwf	postinc1,c
  3445  011F82  0E09               	movlw	9
  3446  011F84  6EE6               	movwf	postinc1,c
  3447  011F86  EC9A  F0C9         	call	_StartTimer	;wreg free
  3448                           
  3449                           ;main.c: 237:    start_adc_scan();
  3450  011F8A  EC72  F0C6         	call	_start_adc_scan	;wreg free
  3451                           
  3452                           ;main.c: 238:    start_switch_handler();
  3453  011F8E  EC9B  F0CD         	call	_start_switch_handler	;wreg free
  3454                           
  3455                           ; BSR set to: 57
  3456                           ;main.c: 239:    WaitMs(1000);
  3457  011F92  0EE8               	movlw	232
  3458  011F94  6EE6               	movwf	postinc1,c
  3459  011F96  0E03               	movlw	3
  3460  011F98  6EE6               	movwf	postinc1,c
  3461  011F9A  EC55  F0CA         	call	_WaitMs	;wreg free
  3462                           
  3463                           ;main.c: 240:    static_soc();
  3464  011F9E  EC0C  F0CD         	call	_static_soc	;wreg free
  3465                           
  3466                           ; BSR set to: 1
  3467                           ;main.c: 241:    init_bsoc();
  3468  011FA2  ECC6  F0B7         	call	_init_bsoc	;wreg free
  3469                           
  3470                           ;main.c: 243:    break;
  3471  011FA6  D01C               	goto	l11788
  3472  011FA8                     l1316:
  3473                           
  3474                           ; BSR set to: 2
  3475                           ;main.c: 249:    P.SYSTEM_STABLE = 1;
  3476  011FA8  0100               	movlb	0	; () banked
  3477  011FAA  81A6               	bsf	(_P+1)& (0+255),0,b	;volatile
  3478                           
  3479                           ;main.c: 250:    break;
  3480  011FAC  D019               	goto	l11788
  3481  011FAE                     l1318:
  3482                           
  3483                           ; BSR set to: 2
  3484                           ;main.c: 253:    V.ui_state = UI_STATE_INIT;
  3485  011FAE  6B00               	clrf	_V& (0+255),b	;volatile
  3486                           
  3487                           ;main.c: 254:    break;
  3488  011FB0  D017               	goto	l11788
  3489  011FB2                     l11786:
  3490  011FB2  0102               	movlb	2	; () banked
  3491  011FB4  5100               	movf	_V& (0+255),w,b	;volatile
  3492  011FB6  6E0B               	movwf	(btemp+10)^0,c
  3493  011FB8  6A0C               	clrf	(btemp+11)^0,c
  3494                           
  3495                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3496                           ; Switch size 1, requested type "simple"
  3497                           ; Number of cases is 1, Range of values is 0 to 0
  3498                           ; switch strategies available:
  3499                           ; Name         Instructions Cycles
  3500                           ; simple_byte            4     3 (average)
  3501                           ;	Chosen strategy is simple_byte
  3502  011FBA  500C               	movf	(btemp+11)^0,w,c
  3503  011FBC  0A00               	xorlw	0	; case 0
  3504  011FBE  A4D8               	btfss	status,2,c
  3505  011FC0  D7F6               	goto	l1318
  3506                           
  3507                           ; BSR set to: 2
  3508                           ; Switch size 1, requested type "simple"
  3509                           ; Number of cases is 5, Range of values is 0 to 5
  3510                           ; switch strategies available:
  3511                           ; Name         Instructions Cycles
  3512                           ; simple_byte           16     9 (average)
  3513                           ;	Chosen strategy is simple_byte
  3514  011FC2  500B               	movf	(btemp+10)^0,w,c
  3515  011FC4  0A00               	xorlw	0	; case 0
  3516  011FC6  B4D8               	btfsc	status,2,c
  3517  011FC8  D718               	goto	l11736
  3518  011FCA  0A01               	xorlw	1	; case 1
  3519  011FCC  B4D8               	btfsc	status,2,c
  3520  011FCE  D008               	goto	l11788
  3521  011FD0  0A02               	xorlw	2	; case 3
  3522  011FD2  B4D8               	btfsc	status,2,c
  3523  011FD4  D005               	goto	l11788
  3524  011FD6  0A07               	xorlw	7	; case 4
  3525  011FD8  B4D8               	btfsc	status,2,c
  3526  011FDA  D7E6               	goto	l1316
  3527  011FDC  0A01               	xorlw	1	; case 5
  3528  011FDE  D7E7               	goto	l1318
  3529  011FE0                     l11788:
  3530                           
  3531                           ;main.c: 257:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  3532  011FE0  0E01               	movlw	1
  3533  011FE2  6EE6               	movwf	postinc1,c
  3534  011FE4  ECDF  F0CB         	call	_TimerDone	;wreg free
  3535  011FE8  5001               	movf	btemp^0,w,c
  3536  011FEA  B4D8               	btfsc	status,2,c
  3537  011FEC  D013               	goto	l11800
  3538  011FEE  ECC9  F0CE         	call	_check_adc_scan	;wreg free
  3539  011FF2  5001               	movf	btemp^0,w,c
  3540  011FF4  B4D8               	btfsc	status,2,c
  3541  011FF6  D00E               	goto	l11800
  3542                           
  3543                           ;main.c: 261:    convert_adc_data();
  3544  011FF8  EC7C  F0C1         	call	_convert_adc_data	;wreg free
  3545                           
  3546                           ;main.c: 265:    clear_adc_scan();
  3547  011FFC  ECD1  F0CE         	call	_clear_adc_scan	;wreg free
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;main.c: 266:    start_adc_scan();
  3551  012000  EC72  F0C6         	call	_start_adc_scan	;wreg free
  3552                           
  3553                           ;main.c: 267:    StartTimer(TMR_ADC, 200);
  3554  012004  0EC8               	movlw	200
  3555  012006  6EE6               	movwf	postinc1,c
  3556  012008  0E00               	movlw	0
  3557  01200A  6EE6               	movwf	postinc1,c
  3558  01200C  0E01               	movlw	1
  3559  01200E  6EE6               	movwf	postinc1,c
  3560  012010  EC9A  F0C9         	call	_StartTimer	;wreg free
  3561  012014                     l11800:
  3562                           
  3563                           ;main.c: 274:   if (TimerDone(TMR_DISPLAY)) {
  3564                           
  3565                           ;main.c: 270:   if (V.ticks) {
  3566  012014  0E0A               	movlw	10
  3567  012016  6EE6               	movwf	postinc1,c
  3568  012018  ECDF  F0CB         	call	_TimerDone	;wreg free
  3569  01201C  5001               	movf	btemp^0,w,c
  3570  01201E  B4D8               	btfsc	status,2,c
  3571  012020  D27F               	goto	l11842
  3572                           
  3573                           ;main.c: 275:    if (TimerDone(TMR_HELPDIS)) {
  3574  012022  0E09               	movlw	9
  3575  012024  6EE6               	movwf	postinc1,c
  3576  012026  ECDF  F0CB         	call	_TimerDone	;wreg free
  3577  01202A  5001               	movf	btemp^0,w,c
  3578  01202C  B4D8               	btfsc	status,2,c
  3579  01202E  D004               	goto	l11808
  3580                           
  3581                           ;main.c: 276:     set_display_info(DIS_STR);
  3582  012030  0E00               	movlw	0
  3583  012032  6EE6               	movwf	postinc1,c
  3584  012034  ECE8  F0CD         	call	_set_display_info	;wreg free
  3585  012038                     l11808:
  3586                           
  3587                           ;main.c: 278:    calc_model_data();
  3588  012038  EC0D  F0AB         	call	_calc_model_data	;wreg free
  3589                           
  3590                           ; BSR set to: 1
  3591                           ;main.c: 285:     hid_display(&H);
  3592                           
  3593                           ;main.c: 280:    if (0) {
  3594  01203C  0EF3               	movlw	_H& (0+255)
  3595  01203E  6EE6               	movwf	postinc1,c
  3596  012040  ECEF  F0BE         	call	_hid_display	;wreg free
  3597                           
  3598                           ;main.c: 286:     switch (H.hid_display) {
  3599  012044  D248               	goto	l11834
  3600  012046                     l1326:
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;main.c: 288:      V.calib = 0;
  3604  012046  0102               	movlb	2	; () banked
  3605  012048  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3606                           
  3607                           ; BSR set to: 2
  3608                           ;main.c: 289:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  3609  01204A  0060  F5C3  FFE6   	movff	_C+112,postinc1
  3610  012050  0060  F5C7  FFE6   	movff	_C+113,postinc1
  3611  012056  0060  F5CB  FFE6   	movff	_C+114,postinc1
  3612  01205C  0060  F5CF  FFE6   	movff	_C+115,postinc1
  3613  012062  0EB8               	movlw	low STR_12
  3614  012064  6EE6               	movwf	postinc1,c
  3615  012066  0EFE               	movlw	high STR_12
  3616  012068  6EE6               	movwf	postinc1,c
  3617  01206A  0E00               	movlw	0
  3618  01206C  6EE6               	movwf	postinc1,c
  3619  01206E  0E00               	movlw	0
  3620  012070  6EE6               	movwf	postinc1,c
  3621  012072  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  3622  012076  0060  F007  FFE6   	movff	btemp,postinc1
  3623  01207C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3624  012082  0E08               	movlw	8
  3625  012084  6EE6               	movwf	postinc1,c
  3626  012086  EC6A  F0BE         	call	_sprintf	;wreg free
  3627                           
  3628                           ;main.c: 290:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  3629  01208A  0060  F5A3  FFE6   	movff	_C+104,postinc1
  3630  012090  0060  F5A7  FFE6   	movff	_C+105,postinc1
  3631  012096  0060  F5AB  FFE6   	movff	_C+106,postinc1
  3632  01209C  0060  F5AF  FFE6   	movff	_C+107,postinc1
  3633  0120A2  0EDE               	movlw	low STR_13
  3634  0120A4  6EE6               	movwf	postinc1,c
  3635  0120A6  0EFE               	movlw	high STR_13
  3636  0120A8  6EE6               	movwf	postinc1,c
  3637  0120AA  0E00               	movlw	0
  3638  0120AC  6EE6               	movwf	postinc1,c
  3639  0120AE  0E01               	movlw	1
  3640  0120B0  6EE6               	movwf	postinc1,c
  3641  0120B2  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  3642  0120B6  0060  F007  FFE6   	movff	btemp,postinc1
  3643  0120BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3644  0120C2  0E08               	movlw	8
  3645  0120C4  6EE6               	movwf	postinc1,c
  3646  0120C6  EC6A  F0BE         	call	_sprintf	;wreg free
  3647                           
  3648                           ;main.c: 291:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  3649  0120CA  0060  F5B3  FFE6   	movff	_C+108,postinc1
  3650  0120D0  0060  F5B7  FFE6   	movff	_C+109,postinc1
  3651  0120D6  0060  F5BB  FFE6   	movff	_C+110,postinc1
  3652  0120DC  0060  F5BF  FFE6   	movff	_C+111,postinc1
  3653  0120E2  0ECB               	movlw	low STR_14
  3654  0120E4  6EE6               	movwf	postinc1,c
  3655  0120E6  0EFE               	movlw	high STR_14
  3656  0120E8  6EE6               	movwf	postinc1,c
  3657  0120EA  0E00               	movlw	0
  3658  0120EC  6EE6               	movwf	postinc1,c
  3659  0120EE  0E02               	movlw	2
  3660  0120F0  6EE6               	movwf	postinc1,c
  3661  0120F2  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  3662  0120F6  0060  F007  FFE6   	movff	btemp,postinc1
  3663  0120FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3664  012102  0E08               	movlw	8
  3665  012104  6EE6               	movwf	postinc1,c
  3666  012106  EC6A  F0BE         	call	_sprintf	;wreg free
  3667                           
  3668                           ;main.c: 292:      break;
  3669  01210A  D1FA               	goto	l11836
  3670  01210C                     l1328:
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;main.c: 294:      V.calib = 0;
  3674  01210C  0102               	movlb	2	; () banked
  3675  01210E  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3676                           
  3677                           ; BSR set to: 2
  3678                           ;main.c: 295:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  3679  012110  0060  F413  FFE6   	movff	_C+4,postinc1
  3680  012116  0060  F417  FFE6   	movff	_C+5,postinc1
  3681  01211C  0060  F41B  FFE6   	movff	_C+6,postinc1
  3682  012122  0060  F41F  FFE6   	movff	_C+7,postinc1
  3683  012128  0060  F453  FFE6   	movff	_C+20,postinc1
  3684  01212E  0060  F457  FFE6   	movff	_C+21,postinc1
  3685  012134  0060  F45B  FFE6   	movff	_C+22,postinc1
  3686  01213A  0060  F45F  FFE6   	movff	_C+23,postinc1
  3687  012140  0E2A               	movlw	low STR_15
  3688  012142  6EE6               	movwf	postinc1,c
  3689  012144  0EFF               	movlw	high STR_15
  3690  012146  6EE6               	movwf	postinc1,c
  3691  012148  0E00               	movlw	0
  3692  01214A  6EE6               	movwf	postinc1,c
  3693  01214C  0E00               	movlw	0
  3694  01214E  6EE6               	movwf	postinc1,c
  3695  012150  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  3696  012154  0060  F007  FFE6   	movff	btemp,postinc1
  3697  01215A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3698  012160  0E0C               	movlw	12
  3699  012162  6EE6               	movwf	postinc1,c
  3700  012164  EC6A  F0BE         	call	_sprintf	;wreg free
  3701                           
  3702                           ;main.c: 296:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  3703  012168  0060  F403  FFE6   	movff	_C,postinc1
  3704  01216E  0060  F407  FFE6   	movff	_C+1,postinc1
  3705  012174  0060  F40B  FFE6   	movff	_C+2,postinc1
  3706  01217A  0060  F40F  FFE6   	movff	_C+3,postinc1
  3707  012180  0060  F443  FFE6   	movff	_C+16,postinc1
  3708  012186  0060  F447  FFE6   	movff	_C+17,postinc1
  3709  01218C  0060  F44B  FFE6   	movff	_C+18,postinc1
  3710  012192  0060  F44F  FFE6   	movff	_C+19,postinc1
  3711  012198  0E04               	movlw	low STR_16
  3712  01219A  6EE6               	movwf	postinc1,c
  3713  01219C  0EFF               	movlw	high STR_16
  3714  01219E  6EE6               	movwf	postinc1,c
  3715  0121A0  0E00               	movlw	0
  3716  0121A2  6EE6               	movwf	postinc1,c
  3717  0121A4  0E01               	movlw	1
  3718  0121A6  6EE6               	movwf	postinc1,c
  3719  0121A8  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  3720  0121AC  0060  F007  FFE6   	movff	btemp,postinc1
  3721  0121B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3722  0121B8  0E0C               	movlw	12
  3723  0121BA  6EE6               	movwf	postinc1,c
  3724  0121BC  EC6A  F0BE         	call	_sprintf	;wreg free
  3725                           
  3726                           ;main.c: 297:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  3727  0121C0  0060  F503  FFE6   	movff	_C+64,postinc1
  3728  0121C6  0060  F507  FFE6   	movff	_C+65,postinc1
  3729  0121CC  0060  F50B  FFE6   	movff	_C+66,postinc1
  3730  0121D2  0060  F50F  FFE6   	movff	_C+67,postinc1
  3731  0121D8  0060  F423  FFE6   	movff	_C+8,postinc1
  3732  0121DE  0060  F427  FFE6   	movff	_C+9,postinc1
  3733  0121E4  0060  F42B  FFE6   	movff	_C+10,postinc1
  3734  0121EA  0060  F42F  FFE6   	movff	_C+11,postinc1
  3735  0121F0  0E17               	movlw	low STR_17
  3736  0121F2  6EE6               	movwf	postinc1,c
  3737  0121F4  0EFF               	movlw	high STR_17
  3738  0121F6  6EE6               	movwf	postinc1,c
  3739  0121F8  0E00               	movlw	0
  3740  0121FA  6EE6               	movwf	postinc1,c
  3741  0121FC  0E02               	movlw	2
  3742  0121FE  6EE6               	movwf	postinc1,c
  3743  012200  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  3744  012204  0060  F007  FFE6   	movff	btemp,postinc1
  3745  01220A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3746  012210  0E0C               	movlw	12
  3747  012212  6EE6               	movwf	postinc1,c
  3748  012214  EC6A  F0BE         	call	_sprintf	;wreg free
  3749                           
  3750                           ;main.c: 298:      break;
  3751  012218  D173               	goto	l11836
  3752  01221A                     l1329:
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;main.c: 300:      V.calib = 0;
  3756  01221A  0102               	movlb	2	; () banked
  3757  01221C  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3758                           
  3759                           ; BSR set to: 2
  3760                           ;main.c: 301:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  3761  01221E  0060  F5D3  FFE6   	movff	_C+116,postinc1
  3762  012224  0060  F5D7  FFE6   	movff	_C+117,postinc1
  3763  01222A  0060  F5DB  FFE6   	movff	_C+118,postinc1
  3764  012230  0060  F5DF  FFE6   	movff	_C+119,postinc1
  3765  012236  0EF1               	movlw	low STR_18
  3766  012238  6EE6               	movwf	postinc1,c
  3767  01223A  0EFE               	movlw	high STR_18
  3768  01223C  6EE6               	movwf	postinc1,c
  3769  01223E  0E00               	movlw	0
  3770  012240  6EE6               	movwf	postinc1,c
  3771  012242  0E00               	movlw	0
  3772  012244  6EE6               	movwf	postinc1,c
  3773  012246  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  3774  01224A  0060  F007  FFE6   	movff	btemp,postinc1
  3775  012250  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3776  012256  0E08               	movlw	8
  3777  012258  6EE6               	movwf	postinc1,c
  3778  01225A  EC6A  F0BE         	call	_sprintf	;wreg free
  3779                           
  3780                           ;main.c: 302:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  3781  01225E  0060  F613  FFE6   	movff	_C+132,postinc1
  3782  012264  0060  F617  FFE6   	movff	_C+133,postinc1
  3783  01226A  0060  F61B  FFE6   	movff	_C+134,postinc1
  3784  012270  0060  F61F  FFE6   	movff	_C+135,postinc1
  3785  012276  0060  F603  FFE6   	movff	_C+128,postinc1
  3786  01227C  0060  F607  FFE6   	movff	_C+129,postinc1
  3787  012282  0060  F60B  FFE6   	movff	_C+130,postinc1
  3788  012288  0060  F60F  FFE6   	movff	_C+131,postinc1
  3789  01228E  0E58               	movlw	low STR_19
  3790  012290  6EE6               	movwf	postinc1,c
  3791  012292  0EFE               	movlw	high STR_19
  3792  012294  6EE6               	movwf	postinc1,c
  3793  012296  0E00               	movlw	0
  3794  012298  6EE6               	movwf	postinc1,c
  3795  01229A  0E01               	movlw	1
  3796  01229C  6EE6               	movwf	postinc1,c
  3797  01229E  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  3798  0122A2  0060  F007  FFE6   	movff	btemp,postinc1
  3799  0122A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3800  0122AE  0E0C               	movlw	12
  3801  0122B0  6EE6               	movwf	postinc1,c
  3802  0122B2  EC6A  F0BE         	call	_sprintf	;wreg free
  3803                           
  3804                           ;main.c: 303:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  3805  0122B6  0060  F673  FFE6   	movff	_C+156,postinc1
  3806  0122BC  0060  F677  FFE6   	movff	_C+157,postinc1
  3807  0122C2  0060  F67B  FFE6   	movff	_C+158,postinc1
  3808  0122C8  0060  F67F  FFE6   	movff	_C+159,postinc1
  3809  0122CE  0EA5               	movlw	low STR_20
  3810  0122D0  6EE6               	movwf	postinc1,c
  3811  0122D2  0EFE               	movlw	high STR_20
  3812  0122D4  6EE6               	movwf	postinc1,c
  3813  0122D6  0E00               	movlw	0
  3814  0122D8  6EE6               	movwf	postinc1,c
  3815  0122DA  0E02               	movlw	2
  3816  0122DC  6EE6               	movwf	postinc1,c
  3817  0122DE  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  3818  0122E2  0060  F007  FFE6   	movff	btemp,postinc1
  3819  0122E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3820  0122EE  0E08               	movlw	8
  3821  0122F0  6EE6               	movwf	postinc1,c
  3822  0122F2  EC6A  F0BE         	call	_sprintf	;wreg free
  3823                           
  3824                           ;main.c: 304:      break;
  3825  0122F6  D104               	goto	l11836
  3826  0122F8                     l11820:
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;main.c: 306:      if (!V.calib) {
  3830  0122F8  0102               	movlb	2	; () banked
  3831  0122FA  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  3832  0122FC  A4D8               	btfss	status,2,c
  3833  0122FE  D02D               	goto	l11824
  3834                           
  3835                           ; BSR set to: 2
  3836                           ;main.c: 307:       lp_filter(0.0, i, -1);
  3837  012300  0EFF               	movlw	255
  3838  012302  6EE6               	movwf	postinc1,c
  3839                           
  3840                           ;stkvar	_i @ sp[(-6)+2]
  3841  012304  0EFC               	movlw	-4
  3842  012306  50E3               	movf	plusw1,w,c
  3843  012308  6EE6               	movwf	postinc1,c
  3844  01230A  0E00               	movlw	0
  3845  01230C  6EE6               	movwf	postinc1,c
  3846  01230E  0E00               	movlw	0
  3847  012310  6EE6               	movwf	postinc1,c
  3848  012312  0E00               	movlw	0
  3849  012314  6EE6               	movwf	postinc1,c
  3850  012316  0E00               	movlw	0
  3851  012318  6EE6               	movwf	postinc1,c
  3852  01231A  EC62  F0B5         	call	_lp_filter	;wreg free
  3853                           
  3854                           ;main.c: 308:       lp_filter(0.0, j, -1);
  3855  01231E  0EFF               	movlw	255
  3856  012320  6EE6               	movwf	postinc1,c
  3857                           
  3858                           ;stkvar	_j @ sp[(-6)+1]
  3859  012322  0EFB               	movlw	-5
  3860  012324  50E3               	movf	plusw1,w,c
  3861  012326  6EE6               	movwf	postinc1,c
  3862  012328  0E00               	movlw	0
  3863  01232A  6EE6               	movwf	postinc1,c
  3864  01232C  0E00               	movlw	0
  3865  01232E  6EE6               	movwf	postinc1,c
  3866  012330  0E00               	movlw	0
  3867  012332  6EE6               	movwf	postinc1,c
  3868  012334  0E00               	movlw	0
  3869  012336  6EE6               	movwf	postinc1,c
  3870  012338  EC62  F0B5         	call	_lp_filter	;wreg free
  3871                           
  3872                           ;main.c: 309:       lp_filter(0.0, k, -1);
  3873  01233C  0EFF               	movlw	255
  3874  01233E  6EE6               	movwf	postinc1,c
  3875                           
  3876                           ;stkvar	_k @ sp[(-6)+0]
  3877  012340  0EFA               	movlw	-6
  3878  012342  50E3               	movf	plusw1,w,c
  3879  012344  6EE6               	movwf	postinc1,c
  3880  012346  0E00               	movlw	0
  3881  012348  6EE6               	movwf	postinc1,c
  3882  01234A  0E00               	movlw	0
  3883  01234C  6EE6               	movwf	postinc1,c
  3884  01234E  0E00               	movlw	0
  3885  012350  6EE6               	movwf	postinc1,c
  3886  012352  0E00               	movlw	0
  3887  012354  6EE6               	movwf	postinc1,c
  3888  012356  EC62  F0B5         	call	_lp_filter	;wreg free
  3889  01235A                     l11824:
  3890                           
  3891                           ;main.c: 311:      V.calib = 1;
  3892  01235A  0E01               	movlw	1
  3893  01235C  0102               	movlb	2	; () banked
  3894  01235E  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  3895                           
  3896                           ; BSR set to: 2
  3897                           ;main.c: 312:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  3898  012360  0E02               	movlw	2
  3899  012362  6EE6               	movwf	postinc1,c
  3900  012364  ECCB  F0CB         	call	_get_switch	;wreg free
  3901  012368  5001               	movf	btemp^0,w,c
  3902  01236A  6EE6               	movwf	postinc1,c
  3903  01236C  0E00               	movlw	0
  3904  01236E  6EE6               	movwf	postinc1,c
  3905                           
  3906                           ;stkvar	_i @ sp[(-7)+2]
  3907  012370  0EFB               	movlw	-5
  3908  012372  50E3               	movf	plusw1,w,c
  3909  012374  0D04               	mullw	4
  3910  012376  0E00               	movlw	low _C
  3911  012378  24F3               	addwf	243,w,c
  3912  01237A  6ED9               	movwf	fsr2l,c
  3913  01237C  0E01               	movlw	high _C
  3914  01237E  20F4               	addwfc	prodh,w,c
  3915  012380  6EDA               	movwf	fsr2h,c
  3916  012382  006F FF7B FFE6     	movff	postinc2,postinc1
  3917  012388  006F FF7B FFE6     	movff	postinc2,postinc1
  3918  01238E  006F FF7B FFE6     	movff	postinc2,postinc1
  3919  012394  006F FF7B FFE6     	movff	postinc2,postinc1
  3920                           
  3921                           ;stkvar	_i @ sp[(-11)+2]
  3922  01239A  0EF7               	movlw	-9
  3923  01239C  50E3               	movf	plusw1,w,c
  3924  01239E  6EE6               	movwf	postinc1,c
  3925  0123A0  ECCA  F0CD         	call	_get_raw_result	;wreg free
  3926  0123A4  0060  F007  FFE6   	movff	btemp,postinc1
  3927  0123AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3928  0123B0  0E92               	movlw	low STR_9
  3929  0123B2  6EE6               	movwf	postinc1,c
  3930  0123B4  0EFF               	movlw	high STR_9
  3931  0123B6  6EE6               	movwf	postinc1,c
  3932  0123B8  0E00               	movlw	0
  3933  0123BA  6EE6               	movwf	postinc1,c
  3934  0123BC  0E00               	movlw	0
  3935  0123BE  6EE6               	movwf	postinc1,c
  3936  0123C0  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  3937  0123C4  0060  F007  FFE6   	movff	btemp,postinc1
  3938  0123CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3939  0123D0  0E0C               	movlw	12
  3940  0123D2  6EE6               	movwf	postinc1,c
  3941  0123D4  EC6A  F0BE         	call	_sprintf	;wreg free
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;main.c: 313:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  3945  0123D8  0E03               	movlw	3
  3946  0123DA  6EE6               	movwf	postinc1,c
  3947  0123DC  ECCB  F0CB         	call	_get_switch	;wreg free
  3948  0123E0  5001               	movf	btemp^0,w,c
  3949  0123E2  6EE6               	movwf	postinc1,c
  3950  0123E4  0E00               	movlw	0
  3951  0123E6  6EE6               	movwf	postinc1,c
  3952                           
  3953                           ;stkvar	_j @ sp[(-7)+1]
  3954  0123E8  0EFA               	movlw	-6
  3955  0123EA  50E3               	movf	plusw1,w,c
  3956  0123EC  0D04               	mullw	4
  3957  0123EE  0E00               	movlw	low _C
  3958  0123F0  24F3               	addwf	243,w,c
  3959  0123F2  6ED9               	movwf	fsr2l,c
  3960  0123F4  0E01               	movlw	high _C
  3961  0123F6  20F4               	addwfc	prodh,w,c
  3962  0123F8  6EDA               	movwf	fsr2h,c
  3963  0123FA  006F FF7B FFE6     	movff	postinc2,postinc1
  3964  012400  006F FF7B FFE6     	movff	postinc2,postinc1
  3965  012406  006F FF7B FFE6     	movff	postinc2,postinc1
  3966  01240C  006F FF7B FFE6     	movff	postinc2,postinc1
  3967                           
  3968                           ;stkvar	_j @ sp[(-11)+1]
  3969  012412  0EF6               	movlw	-10
  3970  012414  50E3               	movf	plusw1,w,c
  3971  012416  6EE6               	movwf	postinc1,c
  3972  012418  ECCA  F0CD         	call	_get_raw_result	;wreg free
  3973  01241C  0060  F007  FFE6   	movff	btemp,postinc1
  3974  012422  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3975  012428  0E92               	movlw	low STR_9
  3976  01242A  6EE6               	movwf	postinc1,c
  3977  01242C  0EFF               	movlw	high STR_9
  3978  01242E  6EE6               	movwf	postinc1,c
  3979  012430  0E00               	movlw	0
  3980  012432  6EE6               	movwf	postinc1,c
  3981  012434  0E01               	movlw	1
  3982  012436  6EE6               	movwf	postinc1,c
  3983  012438  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  3984  01243C  0060  F007  FFE6   	movff	btemp,postinc1
  3985  012442  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3986  012448  0E0C               	movlw	12
  3987  01244A  6EE6               	movwf	postinc1,c
  3988  01244C  EC6A  F0BE         	call	_sprintf	;wreg free
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;main.c: 314:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  3992                           ;stkvar	_inp_index @ sp[(-5)+3]
  3993  012450  0EFE               	movlw	-2
  3994  012452  50E3               	movf	plusw1,w,c
  3995  012454  6E0B               	movwf	(btemp+10)^0,c
  3996  012456  6A0C               	clrf	(btemp+11)^0,c
  3997  012458  0E01               	movlw	1
  3998  01245A  260B               	addwf	(btemp+10)^0,f,c
  3999  01245C  0E00               	movlw	0
  4000  01245E  220C               	addwfc	(btemp+11)^0,f,c
  4001  012460  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4002  012466  0060  F033  FFE6   	movff	btemp+11,postinc1
  4003                           
  4004                           ;stkvar	_k @ sp[(-7)+0]
  4005  01246C  0EF9               	movlw	-7
  4006  01246E  50E3               	movf	plusw1,w,c
  4007  012470  0D04               	mullw	4
  4008  012472  0E00               	movlw	low _C
  4009  012474  24F3               	addwf	243,w,c
  4010  012476  6ED9               	movwf	fsr2l,c
  4011  012478  0E01               	movlw	high _C
  4012  01247A  20F4               	addwfc	prodh,w,c
  4013  01247C  6EDA               	movwf	fsr2h,c
  4014  01247E  006F FF7B FFE6     	movff	postinc2,postinc1
  4015  012484  006F FF7B FFE6     	movff	postinc2,postinc1
  4016  01248A  006F FF7B FFE6     	movff	postinc2,postinc1
  4017  012490  006F FF7B FFE6     	movff	postinc2,postinc1
  4018                           
  4019                           ;stkvar	_k @ sp[(-11)+0]
  4020  012496  0EF5               	movlw	-11
  4021  012498  50E3               	movf	plusw1,w,c
  4022  01249A  6EE6               	movwf	postinc1,c
  4023  01249C  ECCA  F0CD         	call	_get_raw_result	;wreg free
  4024  0124A0  0060  F007  FFE6   	movff	btemp,postinc1
  4025  0124A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4026  0124AC  0E81               	movlw	low STR_11
  4027  0124AE  6EE6               	movwf	postinc1,c
  4028  0124B0  0EFF               	movlw	high STR_11
  4029  0124B2  6EE6               	movwf	postinc1,c
  4030  0124B4  0E00               	movlw	0
  4031  0124B6  6EE6               	movwf	postinc1,c
  4032  0124B8  0E02               	movlw	2
  4033  0124BA  6EE6               	movwf	postinc1,c
  4034  0124BC  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  4035  0124C0  0060  F007  FFE6   	movff	btemp,postinc1
  4036  0124C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4037  0124CC  0E0C               	movlw	12
  4038  0124CE  6EE6               	movwf	postinc1,c
  4039  0124D0  EC6A  F0BE         	call	_sprintf	;wreg free
  4040                           
  4041                           ;main.c: 315:      break;
  4042  0124D4  D015               	goto	l11836
  4043  0124D6                     l11834:
  4044  0124D6  0100               	movlb	0	; () banked
  4045  0124D8  51F3               	movf	_H& (0+255),w,b
  4046  0124DA  6E0B               	movwf	(btemp+10)^0,c
  4047  0124DC  6A0C               	clrf	(btemp+11)^0,c
  4048                           
  4049                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4050                           ; Switch size 1, requested type "simple"
  4051                           ; Number of cases is 1, Range of values is 0 to 0
  4052                           ; switch strategies available:
  4053                           ; Name         Instructions Cycles
  4054                           ; simple_byte            4     3 (average)
  4055                           ;	Chosen strategy is simple_byte
  4056  0124DE  500C               	movf	(btemp+11)^0,w,c
  4057  0124E0  0A00               	xorlw	0	; case 0
  4058  0124E2  A4D8               	btfss	status,2,c
  4059  0124E4  D00D               	goto	l11836
  4060                           
  4061                           ; BSR set to: 0
  4062                           ; Switch size 1, requested type "simple"
  4063                           ; Number of cases is 4, Range of values is 0 to 3
  4064                           ; switch strategies available:
  4065                           ; Name         Instructions Cycles
  4066                           ; simple_byte           13     7 (average)
  4067                           ;	Chosen strategy is simple_byte
  4068  0124E6  500B               	movf	(btemp+10)^0,w,c
  4069  0124E8  0A00               	xorlw	0	; case 0
  4070  0124EA  B4D8               	btfsc	status,2,c
  4071  0124EC  D60F               	goto	l1328
  4072  0124EE  0A01               	xorlw	1	; case 1
  4073  0124F0  B4D8               	btfsc	status,2,c
  4074  0124F2  D5A9               	goto	l1326
  4075  0124F4  0A03               	xorlw	3	; case 2
  4076  0124F6  B4D8               	btfsc	status,2,c
  4077  0124F8  D690               	goto	l1329
  4078  0124FA  0A01               	xorlw	1	; case 3
  4079  0124FC  B4D8               	btfsc	status,2,c
  4080  0124FE  D6FC               	goto	l11820
  4081  012500                     l11836:
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;main.c: 319:     clear_hid_pflags(&H);
  4085  012500  0EF3               	movlw	_H& (0+255)
  4086  012502  6EE6               	movwf	postinc1,c
  4087  012504  EC1E  F0CD         	call	_clear_hid_pflags	;wreg free
  4088                           
  4089                           ;main.c: 321:    StartTimer(TMR_DISPLAY, 250);
  4090  012508  0EFA               	movlw	250
  4091  01250A  6EE6               	movwf	postinc1,c
  4092  01250C  0E00               	movlw	0
  4093  01250E  6EE6               	movwf	postinc1,c
  4094  012510  0E0A               	movlw	10
  4095  012512  6EE6               	movwf	postinc1,c
  4096  012514  EC9A  F0C9         	call	_StartTimer	;wreg free
  4097                           
  4098                           ;main.c: 322:    update_lcd(0);
  4099  012518  0E00               	movlw	0
  4100  01251A  6EE6               	movwf	postinc1,c
  4101  01251C  EC5B  F0BD         	call	_update_lcd	;wreg free
  4102  012520                     l11842:
  4103                           
  4104                           ;main.c: 328:   check_help(V.flipper);
  4105  012520  0102               	movlb	2	; () banked
  4106  012522  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  4107  012524  6EE6               	movwf	postinc1,c
  4108  012526  EC73  F0B1         	call	_check_help	;wreg free
  4109                           
  4110                           ;main.c: 330:   if (check_enter_button(&H)) {
  4111  01252A  0EF3               	movlw	_H& (0+255)
  4112  01252C  6EE6               	movwf	postinc1,c
  4113  01252E  ECBA  F0C9         	call	_check_enter_button	;wreg free
  4114  012532  5001               	movf	btemp^0,w,c
  4115  012534  B4D8               	btfsc	status,2,c
  4116  012536  D062               	goto	l1333
  4117                           
  4118                           ;main.c: 331:    V.calib = 0;
  4119  012538  0102               	movlb	2	; () banked
  4120  01253A  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4121                           
  4122                           ; BSR set to: 2
  4123                           ;main.c: 332:    inp_index += 3;
  4124                           ;stkvar	_inp_index @ sp[(-5)+3]
  4125  01253C  0EFE               	movlw	-2
  4126  01253E  006F FF8C  F001    	movff	plusw1,btemp
  4127  012544  0E03               	movlw	3
  4128  012546  2601               	addwf	btemp^0,f,c
  4129  012548  0EFE               	movlw	-2
  4130  01254A  0060  F007  FFE3   	movff	btemp,plusw1
  4131                           
  4132                           ;main.c: 333:    if (inp_index > 9)
  4133                           ;stkvar	_inp_index @ sp[(-5)+3]
  4134  012550  0EFE               	movlw	-2
  4135  012552  006F FF8C  F001    	movff	plusw1,btemp
  4136  012558  0E09               	movlw	9
  4137  01255A  6401               	cpfsgt	btemp^0,c
  4138  01255C  D03A               	goto	l11870
  4139                           
  4140                           ; BSR set to: 2
  4141                           ;main.c: 334:     inp_index = 0;
  4142                           ;stkvar	_inp_index @ sp[(-5)+3]
  4143  01255E  0EFE               	movlw	-2
  4144  012560  6AE3               	clrf	plusw1,c
  4145  012562  D037               	goto	l11870
  4146  012564                     l11852:
  4147                           
  4148                           ; BSR set to: 2
  4149                           ;main.c: 337:     i = C_BATT;
  4150                           ;stkvar	_i @ sp[(-5)+2]
  4151  012564  0EFD               	movlw	-3
  4152  012566  6AE3               	clrf	plusw1,c
  4153                           
  4154                           ; BSR set to: 2
  4155                           ;main.c: 338:     j = C_PV;
  4156                           ;stkvar	_j @ sp[(-5)+1]
  4157  012568  0EFC               	movlw	-4
  4158  01256A  6AE3               	clrf	plusw1,c
  4159  01256C  2AE3               	incf	plusw1,f,c
  4160                           
  4161                           ; BSR set to: 2
  4162                           ;main.c: 339:     k = V_CC;
  4163                           ;stkvar	_k @ sp[(-5)+0]
  4164  01256E  0EFB               	movlw	-5
  4165  012570  6AE3               	clrf	plusw1,c
  4166  012572  82E3               	bsf	plusw1,1,c
  4167                           
  4168                           ;main.c: 340:     break;
  4169  012574  D043               	goto	l1333
  4170  012576                     l11858:
  4171                           
  4172                           ; BSR set to: 2
  4173                           ;main.c: 342:     i = V_BAT;
  4174                           ;stkvar	_i @ sp[(-5)+2]
  4175  012576  0EFD               	movlw	-3
  4176  012578  6AE3               	clrf	plusw1,c
  4177  01257A  84E3               	bsf	plusw1,2,c
  4178                           
  4179                           ;main.c: 343:     j = V_PV;
  4180                           ;stkvar	_j @ sp[(-5)+1]
  4181  01257C  0EFC               	movlw	-4
  4182  01257E  6AE3               	clrf	plusw1,c
  4183  012580  80E3               	bsf	plusw1,0,c
  4184  012582  84E3               	bsf	plusw1,2,c	;indir
  4185                           
  4186                           ;main.c: 344:     k = V_CBUS;
  4187                           ;stkvar	_k @ sp[(-5)+0]
  4188  012584  0EFB               	movlw	-5
  4189  012586  6AE3               	clrf	plusw1,c
  4190  012588  82E3               	bsf	plusw1,1,c
  4191  01258A  84E3               	bsf	plusw1,2,c	;indir
  4192                           
  4193                           ;main.c: 345:     break;
  4194  01258C  D037               	goto	l1333
  4195  01258E                     l11860:
  4196                           
  4197                           ; BSR set to: 2
  4198                           ;main.c: 347:     i = V_BBAT;
  4199                           ;stkvar	_i @ sp[(-5)+2]
  4200  01258E  0EFD               	movlw	-3
  4201  012590  6AE3               	clrf	plusw1,c
  4202  012592  82E3               	bsf	plusw1,1,c
  4203  012594  86E3               	bsf	plusw1,3,c	;indir
  4204                           
  4205                           ; BSR set to: 2
  4206                           ;main.c: 348:     j = V_TEMP;
  4207  012596  0E0B               	movlw	11
  4208  012598  6E0C               	movwf	(btemp+11)^0,c
  4209                           
  4210                           ;stkvar	_j @ sp[(-5)+1]
  4211  01259A  0EFC               	movlw	-4
  4212  01259C  0060  F033  FFE3   	movff	btemp+11,plusw1
  4213                           
  4214                           ; BSR set to: 2
  4215                           ;main.c: 349:     k = V_INVERTER;
  4216                           ;stkvar	_k @ sp[(-5)+0]
  4217  0125A2  0EFB               	movlw	-5
  4218  0125A4  6AE3               	clrf	plusw1,c
  4219  0125A6  84E3               	bsf	plusw1,2,c
  4220  0125A8  86E3               	bsf	plusw1,3,c	;indir
  4221                           
  4222                           ;main.c: 350:     break;
  4223  0125AA  D028               	goto	l1333
  4224  0125AC                     l11866:
  4225                           
  4226                           ; BSR set to: 2
  4227                           ;main.c: 352:     i = channel_ANB5;
  4228  0125AC  0E0D               	movlw	13
  4229  0125AE  6E0C               	movwf	(btemp+11)^0,c
  4230                           
  4231                           ;stkvar	_i @ sp[(-5)+2]
  4232  0125B0  0EFD               	movlw	-3
  4233  0125B2  0060  F033  FFE3   	movff	btemp+11,plusw1
  4234                           
  4235                           ;main.c: 353:     j = channel_ANB5;
  4236  0125B8  0E0D               	movlw	13
  4237  0125BA  6E0C               	movwf	(btemp+11)^0,c
  4238                           
  4239                           ;stkvar	_j @ sp[(-5)+1]
  4240  0125BC  0EFC               	movlw	-4
  4241  0125BE  0060  F033  FFE3   	movff	btemp+11,plusw1
  4242                           
  4243                           ;main.c: 354:     k = channel_ANB5;
  4244  0125C4  0E0D               	movlw	13
  4245  0125C6  6E0C               	movwf	(btemp+11)^0,c
  4246                           
  4247                           ;stkvar	_k @ sp[(-5)+0]
  4248  0125C8  0EFB               	movlw	-5
  4249  0125CA  0060  F033  FFE3   	movff	btemp+11,plusw1
  4250                           
  4251                           ;main.c: 355:     break;
  4252  0125D0  D015               	goto	l1333
  4253  0125D2                     l11870:
  4254                           
  4255                           ; BSR set to: 2
  4256                           ;stkvar	_inp_index @ sp[(-5)+3]
  4257  0125D2  0EFE               	movlw	-2
  4258  0125D4  50E3               	movf	plusw1,w,c
  4259  0125D6  6E0B               	movwf	(btemp+10)^0,c
  4260  0125D8  6A0C               	clrf	(btemp+11)^0,c
  4261                           
  4262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4263                           ; Switch size 1, requested type "simple"
  4264                           ; Number of cases is 1, Range of values is 0 to 0
  4265                           ; switch strategies available:
  4266                           ; Name         Instructions Cycles
  4267                           ; simple_byte            4     3 (average)
  4268                           ;	Chosen strategy is simple_byte
  4269  0125DA  500C               	movf	(btemp+11)^0,w,c
  4270  0125DC  0A00               	xorlw	0	; case 0
  4271  0125DE  A4D8               	btfss	status,2,c
  4272  0125E0  D00D               	goto	l1333
  4273                           
  4274                           ; BSR set to: 2
  4275                           ; Switch size 1, requested type "simple"
  4276                           ; Number of cases is 4, Range of values is 0 to 9
  4277                           ; switch strategies available:
  4278                           ; Name         Instructions Cycles
  4279                           ; simple_byte           13     7 (average)
  4280                           ;	Chosen strategy is simple_byte
  4281  0125E2  500B               	movf	(btemp+10)^0,w,c
  4282  0125E4  0A00               	xorlw	0	; case 0
  4283  0125E6  B4D8               	btfsc	status,2,c
  4284  0125E8  D7BD               	goto	l11852
  4285  0125EA  0A03               	xorlw	3	; case 3
  4286  0125EC  B4D8               	btfsc	status,2,c
  4287  0125EE  D7C3               	goto	l11858
  4288  0125F0  0A05               	xorlw	5	; case 6
  4289  0125F2  B4D8               	btfsc	status,2,c
  4290  0125F4  D7CC               	goto	l11860
  4291  0125F6  0A0F               	xorlw	15	; case 9
  4292  0125F8  B4D8               	btfsc	status,2,c
  4293  0125FA  D7D8               	goto	l11866
  4294  0125FC                     l1333:
  4295                           
  4296                           ;main.c: 364:   if (V.set_sequ) {
  4297  0125FC  0102               	movlb	2	; () banked
  4298  0125FE  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  4299  012600  D4D8               	goto	l11786
  4300                           
  4301                           ; BSR set to: 2
  4302                           ;main.c: 365:    if (TimerDone(TMR_INFO)) {
  4303  012602  0E07               	movlw	7
  4304  012604  6EE6               	movwf	postinc1,c
  4305  012606  ECDF  F0CB         	call	_TimerDone	;wreg free
  4306  01260A  5001               	movf	btemp^0,w,c
  4307  01260C  B4D8               	btfsc	status,2,c
  4308  01260E  D00B               	goto	l11880
  4309                           
  4310                           ;main.c: 366:     V.set_sequ = 0;
  4311  012610  0102               	movlb	2	; () banked
  4312  012612  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  4313                           
  4314                           ; BSR set to: 2
  4315                           ;main.c: 367:     set_vterm(0);
  4316  012614  0E00               	movlw	0
  4317  012616  6EE6               	movwf	postinc1,c
  4318  012618  ECD9  F0CD         	call	_set_vterm	;wreg free
  4319                           
  4320                           ;main.c: 368:     update_lcd(0);
  4321  01261C  0E00               	movlw	0
  4322  01261E  6EE6               	movwf	postinc1,c
  4323  012620  EC5B  F0BD         	call	_update_lcd	;wreg free
  4324                           
  4325                           ;main.c: 369:    } else {
  4326  012624  D4C6               	goto	l11786
  4327  012626                     l11880:
  4328                           
  4329                           ;main.c: 370:     set_vterm(2);
  4330  012626  0E02               	movlw	2
  4331  012628  6EE6               	movwf	postinc1,c
  4332  01262A  ECD9  F0CD         	call	_set_vterm	;wreg free
  4333                           
  4334                           ;main.c: 371:     update_lcd(2);
  4335  01262E  0E02               	movlw	2
  4336  012630  6EE6               	movwf	postinc1,c
  4337  012632  EC5B  F0BD         	call	_update_lcd	;wreg free
  4338  012636  D4BD               	goto	l11786
  4339  012638                     __end_of_main:
  4340                           	opt callstack 0
  4341                           
  4342 ;; *************** function _static_soc *****************
  4343 ;; Defined at:
  4344 ;;		line 84 in file "mbmc.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;		None
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;		None
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1  [STACK] void 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/39
  4355 ;;		On exit  : 3F/1
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4362 ;;Total ram usage:        0 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:   15
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_main
  4369 ;; This function uses a reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text1
  4373  019A18                     __ptext1:
  4374                           	opt callstack 0
  4375  019A18                     _static_soc:
  4376                           	opt callstack 15
  4377                           
  4378                           ;mbmc.c: 86:  C.runtime = 120;
  4379                           
  4380                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4381                           ;incstack = 0
  4382  019A18  0E00               	movlw	0
  4383  019A1A  0101               	movlb	1	; () banked
  4384  019A1C  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
  4385  019A1E  0E78               	movlw	120
  4386  019A20  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
  4387                           
  4388                           ;mbmc.c: 87:  C.soc = 100;
  4389  019A22  0E00               	movlw	0
  4390  019A24  6F9F               	movwf	(_C+159)& (0+255),b	;volatile
  4391  019A26  0E64               	movlw	100
  4392  019A28  6F9E               	movwf	(_C+158)& (0+255),b	;volatile
  4393                           
  4394                           ; BSR set to: 1
  4395                           ;mbmc.c: 88:  C.dynamic_ah = C.bank_ah;
  4396  019A2A  C17C  F180         	movff	_C+124,_C+128	;volatile
  4397  019A2E  C17D  F181         	movff	_C+125,_C+129	;volatile
  4398  019A32  C17E  F182         	movff	_C+126,_C+130	;volatile
  4399  019A36  C17F  F183         	movff	_C+127,_C+131	;volatile
  4400                           
  4401                           ; BSR set to: 1
  4402                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4403  019A3A  0012               	return		;funcret
  4404  019A3C                     __end_of_static_soc:
  4405                           	opt callstack 0
  4406                           
  4407 ;; *************** function _start_switch_handler *****************
  4408 ;; Defined at:
  4409 ;;		line 119 in file "dio.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;		None
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1  [STACK] void 
  4416 ;; Registers used:
  4417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  4418 ;; Tracked objects:
  4419 ;;		On entry : 1/0
  4420 ;;		On exit  : 3F/39
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4427 ;;Total ram usage:        0 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:   16
  4430 ;; This function calls:
  4431 ;;		_INT1_SetInterruptHandler
  4432 ;; This function is called by:
  4433 ;;		_main
  4434 ;; This function uses a reentrant model
  4435 ;;
  4436                           
  4437                           	psect	text2
  4438  019B36                     __ptext2:
  4439                           	opt callstack 0
  4440  019B36                     _start_switch_handler:
  4441                           	opt callstack 14
  4442                           
  4443                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  4444                           
  4445                           ; BSR set to: 1
  4446                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4447                           ;incstack = 0
  4448  019B36  0139               	movlb	57	; () banked
  4449  019B38  9195               	bcf	149,0,b	;volatile
  4450                           
  4451                           ; BSR set to: 57
  4452                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  4453  019B3A  0E3E               	movlw	low _switch_handler
  4454  019B3C  6EE6               	movwf	postinc1,c
  4455  019B3E  0E76               	movlw	high _switch_handler
  4456  019B40  6EE6               	movwf	postinc1,c
  4457  019B42  0E01               	movlw	low (_switch_handler shr (0+16))
  4458  019B44  6EE6               	movwf	postinc1,c
  4459  019B46  EC6B  F0CC         	call	_INT1_SetInterruptHandler	;wreg free
  4460                           
  4461                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  4462  019B4A  0E02               	movlw	2
  4463  019B4C  0100               	movlb	0	; () banked
  4464  019B4E  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  4468  019B50  0139               	movlb	57	; () banked
  4469  019B52  8195               	bsf	149,0,b	;volatile
  4470                           
  4471                           ; BSR set to: 57
  4472                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  4473  019B54  0012               	return		;funcret
  4474  019B56                     __end_of_start_switch_handler:
  4475                           	opt callstack 0
  4476                           
  4477 ;; *************** function _start_adc_scan *****************
  4478 ;; Defined at:
  4479 ;;		line 33 in file "daq.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;		None
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;		None
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  1  [STACK] _Bool 
  4486 ;; Registers used:
  4487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 1/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4497 ;;Total ram usage:        0 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:   16
  4500 ;; This function calls:
  4501 ;;		_ADCC_DischargeSampleCapacitor
  4502 ;;		_ADCC_SetADIInterruptHandler
  4503 ;;		_ADCC_SetADTIInterruptHandler
  4504 ;;		_ADCC_StartConversion
  4505 ;; This function is called by:
  4506 ;;		_main
  4507 ;; This function uses a reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text3
  4511  018CE4                     __ptext3:
  4512                           	opt callstack 0
  4513  018CE4                     _start_adc_scan:
  4514                           	opt callstack 14
  4515                           
  4516                           ;daq.c: 35:  if (R.done)
  4517                           
  4518                           ; BSR set to: 57
  4519                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4520                           ;incstack = 0
  4521  018CE4  0100               	movlb	0	; () banked
  4522  018CE6  51F2               	movf	(_R+39)& (0+255),w,b	;volatile
  4523  018CE8  A4D8               	btfss	status,2,c
  4524  018CEA  0012               	return	
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;daq.c: 38:  R.scan_index = 0;
  4528  018CEC  6BEF               	clrf	(_R+36)& (0+255),b	;volatile
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  4532  018CEE  013A               	movlb	58	; () banked
  4533  018CF0  5140               	movf	64,w,b	;volatile
  4534  018CF2  006E F940  F001    	movff	14928,btemp	;volatile
  4535  018CF8  6A02               	clrf	(btemp+1)^0,c
  4536  018CFA  0060  F004  F002   	movff	btemp,btemp+1
  4537  018D00  6A01               	clrf	btemp^0,c
  4538  018D02  2601               	addwf	btemp^0,f,c
  4539  018D04  0E00               	movlw	0
  4540  018D06  2202               	addwfc	(btemp+1)^0,f,c
  4541  018D08  0E77               	movlw	119
  4542  018D0A  1401               	andwf	btemp^0,w,c
  4543  018D0C  0100               	movlb	0	; () banked
  4544  018D0E  6FF0               	movwf	(_R+37)& (0+255),b	;volatile
  4545  018D10  0E3C               	movlw	60
  4546  018D12  1402               	andwf	(btemp+1)^0,w,c
  4547  018D14  6FF1               	movwf	(_R+38)& (0+255),b	;volatile
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  4551  018D16  0ECA               	movlw	low _adc_int_handler
  4552  018D18  6EE6               	movwf	postinc1,c
  4553  018D1A  0E9D               	movlw	high _adc_int_handler
  4554  018D1C  6EE6               	movwf	postinc1,c
  4555  018D1E  0E01               	movlw	low (_adc_int_handler shr (0+16))
  4556  018D20  6EE6               	movwf	postinc1,c
  4557  018D22  ECA7  F0CC         	call	_ADCC_SetADIInterruptHandler	;wreg free
  4558                           
  4559                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  4560  018D26  0EC0               	movlw	low _adc_int_t_handler
  4561  018D28  6EE6               	movwf	postinc1,c
  4562  018D2A  0E8A               	movlw	high _adc_int_t_handler
  4563  018D2C  6EE6               	movwf	postinc1,c
  4564  018D2E  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  4565  018D30  6EE6               	movwf	postinc1,c
  4566  018D32  EC93  F0CC         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  4567                           
  4568                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  4569  018D36  ECBD  F0CE         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  4570                           
  4571                           ; BSR set to: 62
  4572                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  4573  018D3A  0100               	movlb	0	; () banked
  4574  018D3C  51EF               	movf	(_R+36)& (0+255),w,b	;volatile
  4575  018D3E  0B0F               	andlw	15
  4576  018D40  6EE6               	movwf	postinc1,c
  4577  018D42  EC72  F0CE         	call	_ADCC_StartConversion	;wreg free
  4578                           
  4579                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4580  018D46  0012               	return		;funcret
  4581  018D48                     __end_of_start_adc_scan:
  4582                           	opt callstack 0
  4583                           
  4584 ;; *************** function _ADCC_StartConversion *****************
  4585 ;; Defined at:
  4586 ;;		line 128 in file "mcc_generated_files/adcc.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;  channel         1  [STACK] enum E16136
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;		None
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  1  [STACK] void 
  4593 ;; Registers used:
  4594 ;;		fsr1l, fsr1h
  4595 ;; Tracked objects:
  4596 ;;		On entry : 3F/0
  4597 ;;		On exit  : 3F/3E
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4604 ;;Total ram usage:        0 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; Hardware stack levels required when called:   15
  4607 ;; This function calls:
  4608 ;;		Nothing
  4609 ;; This function is called by:
  4610 ;;		_start_adc_scan
  4611 ;;		_adc_int_t_handler
  4612 ;; This function uses a reentrant model
  4613 ;;
  4614                           
  4615                           	psect	text4
  4616  019CE4                     __ptext4:
  4617                           	opt callstack 0
  4618  019CE4                     _ADCC_StartConversion:
  4619                           	opt callstack 0
  4620                           
  4621                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  4622                           ;stkvar	_channel @ sp[(0)+-1]
  4623                           
  4624                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4625                           ;incstack = 0
  4626 ;; hardware stack exceeded
  4627  019CE4  0EFF               	movlw	-1
  4628  019CE6  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  4629                           
  4630                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  4631  019CEC  013E               	movlb	62	; () banked
  4632  019CEE  8FF8               	bsf	248,7,b	;volatile
  4633                           
  4634                           ; BSR set to: 62
  4635                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  4636  019CF0  81F8               	bsf	248,0,b	;volatile
  4637                           
  4638                           ; BSR set to: 62
  4639                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  4640  019CF2  52E5               	movf	postdec1,f,c
  4641  019CF4  0012               	return		;funcret
  4642  019CF6                     __end_of_ADCC_StartConversion:
  4643                           	opt callstack 0
  4644                           
  4645 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  4646 ;; Defined at:
  4647 ;;		line 189 in file "mcc_generated_files/adcc.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;		None
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;		None
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  1  [STACK] void 
  4654 ;; Registers used:
  4655 ;;		wreg, status,2
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 3F/3E
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4665 ;;Total ram usage:        0 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:   15
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_start_adc_scan
  4672 ;;		_adc_int_t_handler
  4673 ;; This function uses a reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text5
  4677  019D7A                     __ptext5:
  4678                           	opt callstack 0
  4679  019D7A                     _ADCC_DischargeSampleCapacitor:
  4680                           	opt callstack 0
  4681                           
  4682                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  4683                           
  4684                           ; BSR set to: 62
  4685                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4686                           ;incstack = 0
  4687 ;; hardware stack exceeded
  4688  019D7A  0E3B               	movlw	59
  4689  019D7C  013E               	movlb	62	; () banked
  4690  019D7E  6FF1               	movwf	241,b	;volatile
  4691                           
  4692                           ; BSR set to: 62
  4693                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  4694  019D80  0012               	return		;funcret
  4695  019D82                     __end_of_ADCC_DischargeSampleCapacitor:
  4696                           	opt callstack 0
  4697                           
  4698 ;; *************** function _srand *****************
  4699 ;; Defined at:
  4700 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  s               2  [STACK] unsigned int 
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;		None
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1  [STACK] void 
  4707 ;; Registers used:
  4708 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  4709 ;; Tracked objects:
  4710 ;;		On entry : 3F/0
  4711 ;;		On exit  : 3F/2
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4718 ;;Total ram usage:        0 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:   15
  4721 ;; This function calls:
  4722 ;;		Nothing
  4723 ;; This function is called by:
  4724 ;;		_main
  4725 ;; This function uses a reentrant model
  4726 ;;
  4727                           
  4728                           	psect	text6
  4729  019516                     __ptext6:
  4730                           	opt callstack 0
  4731  019516                     _srand:
  4732                           	opt callstack 15
  4733                           
  4734                           ;stkvar	_s @ sp[(0)+-2]
  4735                           
  4736                           ; BSR set to: 62
  4737                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4738                           ;incstack = 0
  4739  019516  0EFE               	movlw	-2
  4740  019518  50E3               	movf	plusw1,w,c
  4741  01951A  0FFF               	addlw	255
  4742  01951C  6E0B               	movwf	(btemp+10)^0,c
  4743  01951E  0EFF               	movlw	-1
  4744  019520  006F FF8C  F00C    	movff	plusw1,btemp+11
  4745  019526  0EFF               	movlw	255
  4746  019528  220C               	addwfc	(btemp+11)^0,f,c
  4747  01952A  0060  F02C  F2D5   	movff	btemp+10,_seed
  4748  019530  0060  F030  F2D6   	movff	btemp+11,_seed+1
  4749  019536  0102               	movlb	2	; () banked
  4750  019538  6BD7               	clrf	(_seed+2)& (0+255),b
  4751  01953A  6BD8               	clrf	(_seed+3)& (0+255),b
  4752  01953C  6BD9               	clrf	(_seed+4)& (0+255),b
  4753  01953E  6BDA               	clrf	(_seed+5)& (0+255),b
  4754  019540  6BDB               	clrf	(_seed+6)& (0+255),b
  4755  019542  6BDC               	clrf	(_seed+7)& (0+255),b
  4756                           
  4757                           ; BSR set to: 2
  4758                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  4759  019544  52E5               	movf	postdec1,f,c
  4760  019546  52E5               	movf	postdec1,f,c
  4761  019548  0012               	return		;funcret
  4762  01954A                     __end_of_srand:
  4763                           	opt callstack 0
  4764                           
  4765 ;; *************** function _init_port_dma *****************
  4766 ;; Defined at:
  4767 ;;		line 90 in file "eadog.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;		None
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;		None
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  1  [STACK] void 
  4774 ;; Registers used:
  4775 ;;		wreg, status,2
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/2
  4778 ;;		On exit  : 3F/3B
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4785 ;;Total ram usage:        0 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:   15
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_main
  4792 ;; This function uses a reentrant model
  4793 ;;
  4794                           
  4795                           	psect	text7
  4796  01957E                     __ptext7:
  4797                           	opt callstack 0
  4798  01957E                     _init_port_dma:
  4799                           	opt callstack 15
  4800                           
  4801                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  4802                           
  4803                           ; BSR set to: 2
  4804                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4805                           ;incstack = 0
  4806  01957E  0E3F               	movlw	-193
  4807  019580  013B               	movlb	59	; () banked
  4808  019582  17DD               	andwf	221,f,b	;volatile
  4809                           
  4810                           ; BSR set to: 59
  4811                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  4812  019584  9BDD               	bcf	221,5,b	;volatile
  4813                           
  4814                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  4815  019586  51DD               	movf	221,w,b	;volatile
  4816  019588  0BF9               	andlw	-7
  4817  01958A  0902               	iorlw	2
  4818  01958C  6FDD               	movwf	221,b	;volatile
  4819                           
  4820                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  4821  01958E  0EE7               	movlw	-25
  4822  019590  17DD               	andwf	221,f,b	;volatile
  4823                           
  4824                           ; BSR set to: 59
  4825                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  4826  019592  81DD               	bsf	221,0,b	;volatile
  4827                           
  4828                           ; BSR set to: 59
  4829                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  4830  019594  9DDC               	bcf	220,6,b	;volatile
  4831                           
  4832                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  4833  019596  0E3D               	movlw	61
  4834  019598  6FD1               	movwf	209,b	;volatile
  4835  01959A  0EEA               	movlw	234
  4836  01959C  6FD0               	movwf	208,b	;volatile
  4837                           
  4838                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  4839  01959E  0EFF               	movlw	low _port_data
  4840  0195A0  6FD9               	movwf	217,b	;volatile
  4841  0195A2  0E05               	movlw	high _port_data
  4842  0195A4  6FDA               	movwf	218,b	;volatile
  4843  0195A6  0E00               	movlw	low (_port_data shr (0+16))
  4844  0195A8  6FDB               	movwf	219,b	;volatile
  4845                           
  4846                           ; BSR set to: 59
  4847                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  4848  0195AA  9BDC               	bcf	220,5,b	;volatile
  4849                           
  4850                           ; BSR set to: 59
  4851                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  4852  0195AC  0012               	return		;funcret
  4853  0195AE                     __end_of_init_port_dma:
  4854                           	opt callstack 0
  4855                           
  4856 ;; *************** function _init_display *****************
  4857 ;; Defined at:
  4858 ;;		line 38 in file "eadog.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;		None
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;		None
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  1  [STACK] void 
  4865 ;; Registers used:
  4866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4867 ;; Tracked objects:
  4868 ;;		On entry : 3F/3B
  4869 ;;		On exit  : 3F/3D
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4876 ;;Total ram usage:        0 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:   17
  4879 ;; This function calls:
  4880 ;;		_ringBufS_init
  4881 ;;		_send_lcd_cmd
  4882 ;;		_send_lcd_cmd_long
  4883 ;;		_wdtdelay
  4884 ;; This function is called by:
  4885 ;;		_main
  4886 ;; This function uses a reentrant model
  4887 ;;
  4888                           
  4889                           	psect	text8
  4890  017EE0                     __ptext8:
  4891                           	opt callstack 0
  4892  017EE0                     _init_display:
  4893                           	opt callstack 13
  4894                           
  4895                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  4896                           
  4897                           ; BSR set to: 59
  4898                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4899                           ;incstack = 0
  4900  017EE0  0E43               	movlw	low _ring_buf1
  4901  017EE2  0100               	movlb	0	; () banked
  4902  017EE4  6F8F               	movwf	(_spi_link+6)& (0+255),b	;volatile
  4903  017EE6  0E04               	movlw	high _ring_buf1
  4904  017EE8  6F90               	movwf	(_spi_link+7)& (0+255),b	;volatile
  4905                           
  4906                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  4907  017EEA  0E00               	movlw	low _ring_buf2
  4908  017EEC  6F8D               	movwf	(_spi_link+4)& (0+255),b	;volatile
  4909  017EEE  0E04               	movlw	high _ring_buf2
  4910  017EF0  6F8E               	movwf	(_spi_link+5)& (0+255),b	;volatile
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  4914  017EF2  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  4915  017EF8  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  4916  017EFE  ECB7  F0CB         	call	_ringBufS_init	;wreg free
  4917                           
  4918                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  4919  017F02  0060  F237  FFE6   	movff	_spi_link+4,postinc1
  4920  017F08  0060  F23B  FFE6   	movff	_spi_link+5,postinc1
  4921  017F0E  ECB7  F0CB         	call	_ringBufS_init	;wreg free
  4922                           
  4923                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  4924  017F12  84BE               	bsf	190,2,c	;volatile
  4925  017F14  84BC               	bsf	188,2,c	;volatile
  4926                           
  4927                           ;eadog.c: 59:  wdtdelay(350000);
  4928  017F16  0E30               	movlw	48
  4929  017F18  6EE6               	movwf	postinc1,c
  4930  017F1A  0E57               	movlw	87
  4931  017F1C  6EE6               	movwf	postinc1,c
  4932  017F1E  0E05               	movlw	5
  4933  017F20  6EE6               	movwf	postinc1,c
  4934  017F22  0E00               	movlw	0
  4935  017F24  6EE6               	movwf	postinc1,c
  4936  017F26  EC35  F0C7         	call	_wdtdelay	;wreg free
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  4940  017F2A  0E39               	movlw	57
  4941  017F2C  6EE6               	movwf	postinc1,c
  4942  017F2E  ECA3  F0CB         	call	_send_lcd_cmd	;wreg free
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  4946  017F32  0E1D               	movlw	29
  4947  017F34  6EE6               	movwf	postinc1,c
  4948  017F36  ECA3  F0CB         	call	_send_lcd_cmd	;wreg free
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  4952  017F3A  0E50               	movlw	80
  4953  017F3C  6EE6               	movwf	postinc1,c
  4954  017F3E  ECA3  F0CB         	call	_send_lcd_cmd	;wreg free
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  4958  017F42  0E6C               	movlw	108
  4959  017F44  6EE6               	movwf	postinc1,c
  4960  017F46  ECA3  F0CB         	call	_send_lcd_cmd	;wreg free
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  4964  017F4A  0E76               	movlw	118
  4965  017F4C  6EE6               	movwf	postinc1,c
  4966  017F4E  ECA3  F0CB         	call	_send_lcd_cmd	;wreg free
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  4970  017F52  0E38               	movlw	56
  4971  017F54  6EE6               	movwf	postinc1,c
  4972  017F56  EC8F  F0CB         	call	_send_lcd_cmd_long	;wreg free
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  4976  017F5A  0E0F               	movlw	15
  4977  017F5C  6EE6               	movwf	postinc1,c
  4978  017F5E  ECA3  F0CB         	call	_send_lcd_cmd	;wreg free
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  4982  017F62  0E01               	movlw	1
  4983  017F64  6EE6               	movwf	postinc1,c
  4984  017F66  EC8F  F0CB         	call	_send_lcd_cmd_long	;wreg free
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  4988  017F6A  0E02               	movlw	2
  4989  017F6C  6EE6               	movwf	postinc1,c
  4990  017F6E  ECA3  F0CB         	call	_send_lcd_cmd	;wreg free
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  4994  017F72  0E06               	movlw	6
  4995  017F74  6EE6               	movwf	postinc1,c
  4996  017F76  ECA3  F0CB         	call	_send_lcd_cmd	;wreg free
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;eadog.c: 70:  wdtdelay(30);
  5000  017F7A  0E1E               	movlw	30
  5001  017F7C  6EE6               	movwf	postinc1,c
  5002  017F7E  0E00               	movlw	0
  5003  017F80  6EE6               	movwf	postinc1,c
  5004  017F82  0E00               	movlw	0
  5005  017F84  6EE6               	movwf	postinc1,c
  5006  017F86  0E00               	movlw	0
  5007  017F88  6EE6               	movwf	postinc1,c
  5008  017F8A  EC35  F0C7         	call	_wdtdelay	;wreg free
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  5012  017F8E  0E02               	movlw	2
  5013  017F90  013D               	movlb	61	; () banked
  5014  017F92  6F16               	movwf	22,b	;volatile
  5015                           
  5016                           ; BSR set to: 61
  5017                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  5018  017F94  0E40               	movlw	64
  5019  017F96  6F15               	movwf	21,b	;volatile
  5020                           
  5021                           ; BSR set to: 61
  5022                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  5023  017F98  0E83               	movlw	131
  5024  017F9A  6F14               	movwf	20,b	;volatile
  5025                           
  5026                           ; BSR set to: 61
  5027                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  5028  017F9C  931A               	bcf	26,1,b	;volatile
  5029                           
  5030                           ; BSR set to: 61
  5031                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  5032  017F9E  0E3F               	movlw	-193
  5033  017FA0  013B               	movlb	59	; () banked
  5034  017FA2  17FD               	andwf	253,f,b	;volatile
  5035                           
  5036                           ; BSR set to: 59
  5037                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  5038  017FA4  9BFD               	bcf	253,5,b	;volatile
  5039                           
  5040                           ; BSR set to: 59
  5041                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  5042  017FA6  51FD               	movf	253,w,b	;volatile
  5043  017FA8  0BF9               	andlw	-7
  5044  017FAA  0902               	iorlw	2
  5045  017FAC  6FFD               	movwf	253,b	;volatile
  5046                           
  5047                           ; BSR set to: 59
  5048                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  5049  017FAE  0EE7               	movlw	-25
  5050  017FB0  17FD               	andwf	253,f,b	;volatile
  5051                           
  5052                           ; BSR set to: 59
  5053                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  5054  017FB2  81FD               	bsf	253,0,b	;volatile
  5055                           
  5056                           ; BSR set to: 59
  5057                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  5058  017FB4  0E43               	movlw	low _ring_buf1
  5059  017FB6  6FF9               	movwf	249,b	;volatile
  5060  017FB8  0E04               	movlw	high _ring_buf1
  5061  017FBA  6FFA               	movwf	250,b	;volatile
  5062  017FBC  0E00               	movlw	low (_ring_buf1 shr (0+16))
  5063  017FBE  6FFB               	movwf	251,b	;volatile
  5064                           
  5065                           ; BSR set to: 59
  5066                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  5067  017FC0  9BFC               	bcf	252,5,b	;volatile
  5068                           
  5069                           ; BSR set to: 59
  5070                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  5071  017FC2  013D               	movlb	61	; () banked
  5072  017FC4  831A               	bsf	26,1,b	;volatile
  5073                           
  5074                           ; BSR set to: 61
  5075                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  5076  017FC6  94BE               	bcf	190,2,c	;volatile
  5077                           
  5078                           ; BSR set to: 61
  5079                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5080  017FC8  0012               	return		;funcret
  5081  017FCA                     __end_of_init_display:
  5082                           	opt callstack 0
  5083                           
  5084 ;; *************** function _send_lcd_cmd_long *****************
  5085 ;; Defined at:
  5086 ;;		line 129 in file "eadog.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;  cmd             1  [STACK] const unsigned char 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;		None
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1  [STACK] void 
  5093 ;; Registers used:
  5094 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5095 ;; Tracked objects:
  5096 ;;		On entry : 3F/0
  5097 ;;		On exit  : 3F/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5104 ;;Total ram usage:        0 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; Hardware stack levels required when called:   16
  5107 ;; This function calls:
  5108 ;;		_SPI1_Exchange8bit
  5109 ;;		_wdtdelay
  5110 ;; This function is called by:
  5111 ;;		_init_display
  5112 ;; This function uses a reentrant model
  5113 ;;
  5114                           
  5115                           	psect	text9
  5116  01971E                     __ptext9:
  5117                           	opt callstack 0
  5118  01971E                     _send_lcd_cmd_long:
  5119                           	opt callstack 13
  5120                           
  5121                           ; BSR set to: 61
  5122                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5123                           ;incstack = 0
  5124                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  5125  01971E  92BC               	bcf	188,1,c	;volatile
  5126                           
  5127                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  5128  019720  94BC               	bcf	188,2,c	;volatile
  5129                           
  5130                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  5131                           ;stkvar	_cmd @ sp[(0)+-1]
  5132  019722  0EFF               	movlw	-1
  5133  019724  50E3               	movf	plusw1,w,c
  5134  019726  6EE6               	movwf	postinc1,c
  5135  019728  ECBB  F0CD         	call	_SPI1_Exchange8bit	;wreg free
  5136                           
  5137                           ; BSR set to: 57
  5138                           ;eadog.c: 134:  wdtdelay(800);
  5139  01972C  0E20               	movlw	32
  5140  01972E  6EE6               	movwf	postinc1,c
  5141  019730  0E03               	movlw	3
  5142  019732  6EE6               	movwf	postinc1,c
  5143  019734  0E00               	movlw	0
  5144  019736  6EE6               	movwf	postinc1,c
  5145  019738  0E00               	movlw	0
  5146  01973A  6EE6               	movwf	postinc1,c
  5147  01973C  EC35  F0C7         	call	_wdtdelay	;wreg free
  5148                           
  5149                           ; BSR set to: 0
  5150  019740  82BC               	bsf	188,1,c	;volatile
  5151                           
  5152                           ; BSR set to: 0
  5153                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5154  019742  52E5               	movf	postdec1,f,c
  5155  019744  0012               	return		;funcret
  5156  019746                     __end_of_send_lcd_cmd_long:
  5157                           	opt callstack 0
  5158                           
  5159 ;; *************** function _send_lcd_cmd *****************
  5160 ;; Defined at:
  5161 ;;		line 117 in file "eadog.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;  cmd             1  [STACK] const unsigned char 
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;		None
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  1  [STACK] void 
  5168 ;; Registers used:
  5169 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5170 ;; Tracked objects:
  5171 ;;		On entry : 3F/0
  5172 ;;		On exit  : 3F/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5179 ;;Total ram usage:        0 bytes
  5180 ;; Hardware stack levels used:    1
  5181 ;; Hardware stack levels required when called:   16
  5182 ;; This function calls:
  5183 ;;		_SPI1_Exchange8bit
  5184 ;;		_wdtdelay
  5185 ;; This function is called by:
  5186 ;;		_init_display
  5187 ;; This function uses a reentrant model
  5188 ;;
  5189                           
  5190                           	psect	text10
  5191  019746                     __ptext10:
  5192                           	opt callstack 0
  5193  019746                     _send_lcd_cmd:
  5194                           	opt callstack 13
  5195                           
  5196                           ; BSR set to: 0
  5197                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5198                           ;incstack = 0
  5199                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  5200  019746  92BC               	bcf	188,1,c	;volatile
  5201                           
  5202                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  5203  019748  94BC               	bcf	188,2,c	;volatile
  5204                           
  5205                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  5206                           ;stkvar	_cmd @ sp[(0)+-1]
  5207  01974A  0EFF               	movlw	-1
  5208  01974C  50E3               	movf	plusw1,w,c
  5209  01974E  6EE6               	movwf	postinc1,c
  5210  019750  ECBB  F0CD         	call	_SPI1_Exchange8bit	;wreg free
  5211                           
  5212                           ; BSR set to: 57
  5213                           ;eadog.c: 122:  wdtdelay(30);
  5214  019754  0E1E               	movlw	30
  5215  019756  6EE6               	movwf	postinc1,c
  5216  019758  0E00               	movlw	0
  5217  01975A  6EE6               	movwf	postinc1,c
  5218  01975C  0E00               	movlw	0
  5219  01975E  6EE6               	movwf	postinc1,c
  5220  019760  0E00               	movlw	0
  5221  019762  6EE6               	movwf	postinc1,c
  5222  019764  EC35  F0C7         	call	_wdtdelay	;wreg free
  5223                           
  5224                           ; BSR set to: 0
  5225  019768  82BC               	bsf	188,1,c	;volatile
  5226                           
  5227                           ; BSR set to: 0
  5228                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  5229  01976A  52E5               	movf	postdec1,f,c
  5230  01976C  0012               	return		;funcret
  5231  01976E                     __end_of_send_lcd_cmd:
  5232                           	opt callstack 0
  5233                           
  5234 ;; *************** function _SPI1_Exchange8bit *****************
  5235 ;; Defined at:
  5236 ;;		line 79 in file "mcc_generated_files/spi1.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;  data            1  [STACK] unsigned char 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;		None
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  1  [STACK] unsigned char 
  5243 ;; Registers used:
  5244 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 3F/39
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5254 ;;Total ram usage:        0 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:   15
  5257 ;; This function calls:
  5258 ;;		Nothing
  5259 ;; This function is called by:
  5260 ;;		_send_lcd_cmd
  5261 ;;		_send_lcd_cmd_long
  5262 ;; This function uses a reentrant model
  5263 ;;
  5264                           
  5265                           	psect	text11
  5266  019B76                     __ptext11:
  5267                           	opt callstack 0
  5268  019B76                     _SPI1_Exchange8bit:
  5269                           	opt callstack 13
  5270                           
  5271                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  5272                           
  5273                           ; BSR set to: 0
  5274                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5275                           ;incstack = 0
  5276  019B76  0E01               	movlw	1
  5277  019B78  013D               	movlb	61	; () banked
  5278  019B7A  6F12               	movwf	18,b	;volatile
  5279                           
  5280                           ; BSR set to: 61
  5281                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  5282                           ;stkvar	_data @ sp[(0)+-1]
  5283  019B7C  0EFF               	movlw	-1
  5284  019B7E  006F FF8F FD11     	movff	plusw1,15633	;volatile
  5285  019B84                     l807:
  5286                           
  5287                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  5288  019B84  0139               	movlb	57	; () banked
  5289  019B86  A9A2               	btfss	162,4,b	;volatile
  5290  019B88  D7FD               	goto	l807
  5291                           
  5292                           ; BSR set to: 57
  5293                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  5294  019B8A  006F F440  F001    	movff	15632,btemp	;volatile
  5295                           
  5296                           ; BSR set to: 57
  5297                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5298  019B90  52E5               	movf	postdec1,f,c
  5299  019B92  0012               	return		;funcret
  5300  019B94                     __end_of_SPI1_Exchange8bit:
  5301                           	opt callstack 0
  5302                           
  5303 ;; *************** function _ringBufS_init *****************
  5304 ;; Defined at:
  5305 ;;		line 22 in file "ringbufs.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  _this           2  [STACK] PTR volatile struct ring
  5308 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;		None
  5311 ;; Return value:  Size  Location     Type
  5312 ;;                  1  [STACK] void 
  5313 ;; Registers used:
  5314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5315 ;; Tracked objects:
  5316 ;;		On entry : 0/0
  5317 ;;		On exit  : 0/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5324 ;;Total ram usage:        0 bytes
  5325 ;; Hardware stack levels used:    1
  5326 ;; Hardware stack levels required when called:   16
  5327 ;; This function calls:
  5328 ;;		_memset
  5329 ;; This function is called by:
  5330 ;;		_init_display
  5331 ;; This function uses a reentrant model
  5332 ;;
  5333                           
  5334                           	psect	text12
  5335  01976E                     __ptext12:
  5336                           	opt callstack 0
  5337  01976E                     _ringBufS_init:
  5338                           	opt callstack 13
  5339                           
  5340                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  5341                           
  5342                           ; BSR set to: 57
  5343                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5344                           ;incstack = 0
  5345  01976E  0E43               	movlw	67
  5346  019770  6EE6               	movwf	postinc1,c
  5347  019772  0E00               	movlw	0
  5348  019774  6EE6               	movwf	postinc1,c
  5349  019776  0E00               	movlw	0
  5350  019778  6EE6               	movwf	postinc1,c
  5351  01977A  0E00               	movlw	0
  5352  01977C  6EE6               	movwf	postinc1,c
  5353                           
  5354                           ;stkvar	__this @ sp[(-4)+-2]
  5355  01977E  0EFA               	movlw	-6
  5356  019780  006F FF8F FFE6     	movff	plusw1,postinc1
  5357  019786  006F FF8F FFE6     	movff	plusw1,postinc1
  5358  01978C  EC97  F0A9         	call	_memset	;wreg free
  5359                           
  5360                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5361  019790  52E5               	movf	postdec1,f,c
  5362  019792  52E5               	movf	postdec1,f,c
  5363  019794  0012               	return		;funcret
  5364  019796                     __end_of_ringBufS_init:
  5365                           	opt callstack 0
  5366                           
  5367 ;; *************** function _init_bsoc *****************
  5368 ;; Defined at:
  5369 ;;		line 87 in file "bsoc.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;		None
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;		None
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1  [STACK] void 
  5376 ;; Registers used:
  5377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  5378 ;; Tracked objects:
  5379 ;;		On entry : 3F/1
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5387 ;;Total ram usage:        0 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:   18
  5390 ;; This function calls:
  5391 ;;		_TMR3_SetInterruptHandler
  5392 ;;		_Volts_to_SOC
  5393 ;;		___fldiv
  5394 ;;		___flmul
  5395 ;;		___fltol
  5396 ;;		___xxtofl
  5397 ;;		_conv_raw_result
  5398 ;; This function is called by:
  5399 ;;		_main
  5400 ;; This function uses a reentrant model
  5401 ;;
  5402                           
  5403                           	psect	text13
  5404  016F8C                     __ptext13:
  5405                           	opt callstack 0
  5406  016F8C                     _init_bsoc:
  5407                           	opt callstack 12
  5408                           
  5409                           ;bsoc.c: 92:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  5410                           
  5411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5412                           ;incstack = 0
  5413  016F8C  0E00               	movlw	0
  5414  016F8E  6EE6               	movwf	postinc1,c
  5415  016F90  0E00               	movlw	0
  5416  016F92  6EE6               	movwf	postinc1,c
  5417  016F94  0E7A               	movlw	122
  5418  016F96  6EE6               	movwf	postinc1,c
  5419  016F98  0E44               	movlw	68
  5420  016F9A  6EE6               	movwf	postinc1,c
  5421  016F9C  0E00               	movlw	0
  5422  016F9E  6EE6               	movwf	postinc1,c
  5423  016FA0  0E04               	movlw	4
  5424  016FA2  6EE6               	movwf	postinc1,c
  5425  016FA4  EC6E  F0A1         	call	_conv_raw_result	;wreg free
  5426  016FA8  0060  F007  FFE6   	movff	btemp,postinc1
  5427  016FAE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5428  016FB4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5429  016FBA  0060  F013  FFE6   	movff	btemp+3,postinc1
  5430  016FC0  EC0D  F0B7         	call	___fltol	;wreg free
  5431  016FC4  0060  F007  FFE6   	movff	btemp,postinc1
  5432  016FCA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5433  016FD0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5434  016FD6  0060  F013  FFE6   	movff	btemp+3,postinc1
  5435  016FDC  0E00               	movlw	0
  5436  016FDE  6EE6               	movwf	postinc1,c
  5437  016FE0  EC7C  F0B2         	call	___xxtofl	;wreg free
  5438  016FE4  0060  F007  FFE6   	movff	btemp,postinc1
  5439  016FEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5440  016FF0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5441  016FF6  0060  F013  FFE6   	movff	btemp+3,postinc1
  5442  016FFC  EC1C  F093         	call	___flmul	;wreg free
  5443  017000  0060  F007  FFE6   	movff	btemp,postinc1
  5444  017006  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5445  01700C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5446  017012  0060  F013  FFE6   	movff	btemp+3,postinc1
  5447  017018  EC0D  F0B7         	call	___fltol	;wreg free
  5448  01701C  0060  F007  FFE6   	movff	btemp,postinc1
  5449  017022  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5450  017028  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5451  01702E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5452  017034  EC73  F0C3         	call	_Volts_to_SOC	;wreg free
  5453  017038  0060  F004  F19E   	movff	btemp,_C+158	;volatile
  5454  01703E  0060  F008  F19F   	movff	btemp+1,_C+159	;volatile
  5455                           
  5456                           ;bsoc.c: 93:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  5457  017044  0060  F5F3  FFE6   	movff	_C+124,postinc1
  5458  01704A  0060  F5F7  FFE6   	movff	_C+125,postinc1
  5459  017050  0060  F5FB  FFE6   	movff	_C+126,postinc1
  5460  017056  0060  F5FF  FFE6   	movff	_C+127,postinc1
  5461  01705C  0E00               	movlw	0
  5462  01705E  6EE6               	movwf	postinc1,c
  5463  017060  0E00               	movlw	0
  5464  017062  6EE6               	movwf	postinc1,c
  5465  017064  0EC8               	movlw	200
  5466  017066  6EE6               	movwf	postinc1,c
  5467  017068  0E42               	movlw	66
  5468  01706A  6EE6               	movwf	postinc1,c
  5469  01706C  0101               	movlb	1	; () banked
  5470  01706E  519E               	movf	(_C+158)& (0+255),w,b	;volatile
  5471  017070  6E09               	movwf	(btemp+8)^0,c
  5472  017072  519F               	movf	(_C+159)& (0+255),w,b	;volatile
  5473  017074  6E0A               	movwf	(btemp+9)^0,c
  5474  017076  6A0B               	clrf	(btemp+10)^0,c
  5475  017078  6A0C               	clrf	(btemp+11)^0,c
  5476  01707A  0060  F027  FFE6   	movff	btemp+8,postinc1
  5477  017080  0060  F02B  FFE6   	movff	btemp+9,postinc1
  5478  017086  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5479  01708C  0060  F033  FFE6   	movff	btemp+11,postinc1
  5480  017092  0E00               	movlw	0
  5481  017094  6EE6               	movwf	postinc1,c
  5482  017096  EC7C  F0B2         	call	___xxtofl	;wreg free
  5483  01709A  0060  F007  FFE6   	movff	btemp,postinc1
  5484  0170A0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5485  0170A6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5486  0170AC  0060  F013  FFE6   	movff	btemp+3,postinc1
  5487  0170B2  ECB1  F09E         	call	___fldiv	;wreg free
  5488  0170B6  0060  F007  FFE6   	movff	btemp,postinc1
  5489  0170BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5490  0170C2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5491  0170C8  0060  F013  FFE6   	movff	btemp+3,postinc1
  5492  0170CE  EC1C  F093         	call	___flmul	;wreg free
  5493  0170D2  0060  F004  F180   	movff	btemp,_C+128	;volatile
  5494  0170D8  0060  F008  F181   	movff	btemp+1,_C+129	;volatile
  5495  0170DE  0060  F00C  F182   	movff	btemp+2,_C+130	;volatile
  5496  0170E4  0060  F010  F183   	movff	btemp+3,_C+131	;volatile
  5497                           
  5498                           ;bsoc.c: 94:  TMR3_SetInterruptHandler(calc_bsoc);
  5499  0170EA  0E1E               	movlw	low _calc_bsoc
  5500  0170EC  6EE6               	movwf	postinc1,c
  5501  0170EE  0E36               	movlw	high _calc_bsoc
  5502  0170F0  6EE6               	movwf	postinc1,c
  5503  0170F2  0E01               	movlw	low (_calc_bsoc shr (0+16))
  5504  0170F4  6EE6               	movwf	postinc1,c
  5505  0170F6  EC57  F0CC         	call	_TMR3_SetInterruptHandler	;wreg free
  5506                           
  5507                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5508  0170FA  0012               	return		;funcret
  5509  0170FC                     __end_of_init_bsoc:
  5510                           	opt callstack 0
  5511                           
  5512 ;; *************** function _Volts_to_SOC *****************
  5513 ;; Defined at:
  5514 ;;		line 151 in file "bsoc.c"
  5515 ;; Parameters:    Size  Location     Type
  5516 ;;  cvoltage        4  [STACK] unsigned long 
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;		None
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  2  [STACK] unsigned short 
  5521 ;; Registers used:
  5522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/1
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5532 ;;Total ram usage:        0 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; Hardware stack levels required when called:   15
  5535 ;; This function calls:
  5536 ;;		Nothing
  5537 ;; This function is called by:
  5538 ;;		_calc_bsoc
  5539 ;;		_init_bsoc
  5540 ;; This function uses a reentrant model
  5541 ;;
  5542                           
  5543                           	psect	text14
  5544  0186E6                     __ptext14:
  5545                           	opt callstack 0
  5546  0186E6                     _Volts_to_SOC:
  5547                           	opt callstack 0
  5548                           
  5549                           ;bsoc.c: 151: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 152: {;bsoc.c: 153:  stat
      +                          ic uint8_t slot;;bsoc.c: 155:  C.soc = 0;
  5550                           
  5551                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5552                           ;incstack = 0
  5553 ;; hardware stack exceeded
  5554  0186E6  0101               	movlb	1	; () banked
  5555  0186E8  6B9E               	clrf	(_C+158)& (0+255),b	;volatile
  5556  0186EA  6B9F               	clrf	(_C+159)& (0+255),b	;volatile
  5557                           
  5558                           ;bsoc.c: 156:  for (slot = 0; slot < 26; slot++) {
  5559  0186EC  6A2D               	clrf	Volts_to_SOC@slot^0,c
  5560  0186EE                     l8852:
  5561  0186EE  0E19               	movlw	25
  5562  0186F0  642D               	cpfsgt	Volts_to_SOC@slot^0,c
  5563  0186F2  D001               	goto	l8856
  5564  0186F4  D036               	goto	l8864
  5565  0186F6                     l8856:
  5566                           
  5567                           ;bsoc.c: 157:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  5568                           ;stkvar	_cvoltage @ sp[(0)+-4]
  5569  0186F6  502D               	movf	Volts_to_SOC@slot^0,w,c
  5570  0186F8  0D08               	mullw	8
  5571  0186FA  0E81               	movlw	low _BVSOC_TABLE
  5572  0186FC  24F3               	addwf	243,w,c
  5573  0186FE  6EF6               	movwf	tblptrl,c
  5574  018700  0EFC               	movlw	high _BVSOC_TABLE
  5575  018702  20F4               	addwfc	244,w,c
  5576  018704  6EF7               	movwf	tblptrh,c
  5577  018706                     	if	1	;There are 3 active tblptr bytes
  5578  018706  6AF8               	clrf	tblptru,c
  5579  018708  0E00               	movlw	low (__mediumconst shr (0+16))
  5580  01870A  22F8               	addwfc	tblptru,f,c
  5581  01870C                     	endif
  5582  01870C  0EFC               	movlw	-4
  5583  01870E  50E3               	movf	plusw1,w,c
  5584  018710  0009               	tblrd		*+
  5585  018712  5CF5               	subwf	tablat,w,c
  5586  018714  0EFD               	movlw	-3
  5587  018716  50E3               	movf	plusw1,w,c
  5588  018718  0009               	tblrd		*+
  5589  01871A  58F5               	subwfb	tablat,w,c
  5590  01871C  0EFE               	movlw	-2
  5591  01871E  50E3               	movf	plusw1,w,c
  5592  018720  0009               	tblrd		*+
  5593  018722  58F5               	subwfb	tablat,w,c
  5594  018724  0EFF               	movlw	-1
  5595  018726  50E3               	movf	plusw1,w,c
  5596  018728  0009               	tblrd		*+
  5597  01872A  58F5               	subwfb	tablat,w,c
  5598  01872C  B0D8               	btfsc	status,0,c
  5599  01872E  D017               	goto	l8860
  5600                           
  5601                           ;bsoc.c: 158:    C.soc = BVSOC_TABLE[slot][1];
  5602  018730  502D               	movf	Volts_to_SOC@slot^0,w,c
  5603  018732  0D08               	mullw	8
  5604  018734  0E04               	movlw	4
  5605  018736  26F3               	addwf	243,f,c
  5606  018738  0E00               	movlw	0
  5607  01873A  22F4               	addwfc	244,f,c
  5608  01873C  0E81               	movlw	low _BVSOC_TABLE
  5609  01873E  24F3               	addwf	243,w,c
  5610  018740  6EF6               	movwf	tblptrl,c
  5611  018742  0EFC               	movlw	high _BVSOC_TABLE
  5612  018744  20F4               	addwfc	244,w,c
  5613  018746  6EF7               	movwf	tblptrh,c
  5614  018748                     	if	1	;There are 3 active tblptr bytes
  5615  018748  6AF8               	clrf	tblptru,c
  5616  01874A  0E00               	movlw	low (__mediumconst shr (0+16))
  5617  01874C  22F8               	addwfc	tblptru,f,c
  5618  01874E                     	endif
  5619  01874E  0009               	tblrd		*+
  5620  018750  006F FFD4  F19E    	movff	tablat,_C+158	;volatile
  5621  018756  000A               	tblrd		*-
  5622  018758  006F FFD4  F19F    	movff	tablat,_C+159	;volatile
  5623  01875E                     l8860:
  5624                           
  5625                           ;bsoc.c: 160:  }
  5626  01875E  2A2D               	incf	Volts_to_SOC@slot^0,f,c
  5627  018760  D7C6               	goto	l8852
  5628  018762                     l8864:
  5629                           
  5630                           ;bsoc.c: 162:  return C.soc;
  5631  018762  EE20  F19E         	lfsr	2,_C+158	;volatile
  5632  018766  006F FF78  F001    	movff	postinc2,btemp
  5633  01876C  006F FF74  F002    	movff	postdec2,btemp+1
  5634                           
  5635                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  5636  018772  52E5               	movf	postdec1,f,c
  5637  018774  52E5               	movf	postdec1,f,c
  5638  018776  52E5               	movf	postdec1,f,c
  5639  018778  52E5               	movf	postdec1,f,c
  5640  01877A  0012               	return		;funcret
  5641  01877C                     __end_of_Volts_to_SOC:
  5642                           	opt callstack 0
  5643                           
  5644 ;; *************** function _hid_display *****************
  5645 ;; Defined at:
  5646 ;;		line 17 in file "hid.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  h               1  [STACK] PTR struct H_data
  5649 ;;		 -> H(7), 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;		None
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  1  [STACK] PTR struct H_data
  5654 ;; Registers used:
  5655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  5656 ;; Tracked objects:
  5657 ;;		On entry : 3F/1
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5665 ;;Total ram usage:        0 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:   17
  5668 ;; This function calls:
  5669 ;;		_hid_input
  5670 ;; This function is called by:
  5671 ;;		_main
  5672 ;; This function uses a reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text15
  5676  017DDE                     __ptext15:
  5677                           	opt callstack 0
  5678  017DDE                     _hid_display:
  5679                           	opt callstack 13
  5680                           
  5681                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  5682                           ;stkvar	_h @ sp[(0)+-1]
  5683                           
  5684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5685                           ;incstack = 0
  5686  017DDE  0EFF               	movlw	-1
  5687  017DE0  50E3               	movf	plusw1,w,c
  5688  017DE2  6EE6               	movwf	postinc1,c
  5689  017DE4  EC50  F0C4         	call	_hid_input	;wreg free
  5690                           
  5691                           ;hid.c: 21:  switch (h->h_state) {
  5692  017DE8  D066               	goto	l9890
  5693  017DEA                     l9868:
  5694                           
  5695                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  5696                           ;stkvar	_h @ sp[(0)+-1]
  5697  017DEA  0EFF               	movlw	-1
  5698  017DEC  50E3               	movf	plusw1,w,c
  5699  017DEE  6ED9               	movwf	fsr2l,c
  5700  017DF0  6ADA               	clrf	fsr2h,c
  5701  017DF2  0E01               	movlw	1
  5702  017DF4  26D9               	addwf	fsr2l,f,c
  5703  017DF6  0E01               	movlw	1
  5704  017DF8  6EDF               	movwf	indf2,c
  5705                           
  5706                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  5707                           ;stkvar	_h @ sp[(0)+-1]
  5708  017DFA  0EFF               	movlw	-1
  5709  017DFC  50E3               	movf	plusw1,w,c
  5710  017DFE  6ED9               	movwf	fsr2l,c
  5711  017E00  6ADA               	clrf	fsr2h,c
  5712  017E02  0E00               	movlw	0
  5713  017E04  6EDF               	movwf	indf2,c
  5714                           
  5715                           ;hid.c: 25:   h->wait_enter = 1;
  5716                           ;stkvar	_h @ sp[(0)+-1]
  5717  017E06  0EFF               	movlw	-1
  5718  017E08  50E3               	movf	plusw1,w,c
  5719  017E0A  6ED9               	movwf	fsr2l,c
  5720  017E0C  6ADA               	clrf	fsr2h,c
  5721  017E0E  0E04               	movlw	4
  5722  017E10  26D9               	addwf	fsr2l,f,c
  5723  017E12  0E01               	movlw	1
  5724  017E14  6EDF               	movwf	indf2,c
  5725                           
  5726                           ;hid.c: 26:   h->wait_select = 1;
  5727                           ;stkvar	_h @ sp[(0)+-1]
  5728  017E16  0EFF               	movlw	-1
  5729  017E18  50E3               	movf	plusw1,w,c
  5730  017E1A  6ED9               	movwf	fsr2l,c
  5731  017E1C  6ADA               	clrf	fsr2h,c
  5732  017E1E  0E02               	movlw	2
  5733  017E20  26D9               	addwf	fsr2l,f,c
  5734  017E22  0E01               	movlw	1
  5735  017E24  6EDF               	movwf	indf2,c
  5736                           
  5737                           ;hid.c: 27:   h->select_p = SW_OFF;
  5738                           ;stkvar	_h @ sp[(0)+-1]
  5739  017E26  0EFF               	movlw	-1
  5740  017E28  50E3               	movf	plusw1,w,c
  5741  017E2A  6ED9               	movwf	fsr2l,c
  5742  017E2C  6ADA               	clrf	fsr2h,c
  5743  017E2E  0E03               	movlw	3
  5744  017E30  26D9               	addwf	fsr2l,f,c
  5745  017E32  0E00               	movlw	0
  5746  017E34  6EDF               	movwf	indf2,c
  5747                           
  5748                           ;hid.c: 28:   h->enter_p = SW_OFF;
  5749                           ;stkvar	_h @ sp[(0)+-1]
  5750  017E36  0EFF               	movlw	-1
  5751  017E38  50E3               	movf	plusw1,w,c
  5752  017E3A  6ED9               	movwf	fsr2l,c
  5753  017E3C  6ADA               	clrf	fsr2h,c
  5754  017E3E  0E05               	movlw	5
  5755  017E40  26D9               	addwf	fsr2l,f,c
  5756  017E42  0E00               	movlw	0
  5757  017E44  D036               	goto	L1
  5758  017E46                     l9880:
  5759                           
  5760                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  5761                           ;stkvar	_h @ sp[(0)+-1]
  5762  017E46  0EFF               	movlw	-1
  5763  017E48  50E3               	movf	plusw1,w,c
  5764  017E4A  6ED9               	movwf	fsr2l,c
  5765  017E4C  6ADA               	clrf	fsr2h,c
  5766  017E4E  0E02               	movlw	2
  5767  017E50  26D9               	addwf	fsr2l,f,c
  5768  017E52  50DF               	movf	indf2,w,c
  5769  017E54  A4D8               	btfss	status,2,c
  5770  017E56  D042               	goto	l1866
  5771                           
  5772                           ;stkvar	_h @ sp[(0)+-1]
  5773  017E58  0EFF               	movlw	-1
  5774  017E5A  50E3               	movf	plusw1,w,c
  5775  017E5C  6ED9               	movwf	fsr2l,c
  5776  017E5E  6ADA               	clrf	fsr2h,c
  5777  017E60  0E03               	movlw	3
  5778  017E62  26D9               	addwf	fsr2l,f,c
  5779  017E64  50DF               	movf	indf2,w,c
  5780  017E66  A4D8               	btfss	status,2,c
  5781  017E68  D039               	goto	l1866
  5782                           
  5783                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  5784                           ;stkvar	_h @ sp[(0)+-1]
  5785  017E6A  0EFF               	movlw	-1
  5786  017E6C  50E3               	movf	plusw1,w,c
  5787  017E6E  6ED9               	movwf	fsr2l,c
  5788  017E70  6ADA               	clrf	fsr2h,c
  5789  017E72  0E06               	movlw	6
  5790  017E74  26D9               	addwf	fsr2l,f,c
  5791                           
  5792                           ;stkvar	_h @ sp[(0)+-1]
  5793  017E76  0EFF               	movlw	-1
  5794  017E78  50E3               	movf	plusw1,w,c
  5795  017E7A  6EE9               	movwf	fsr0l,c
  5796  017E7C  6AEA               	clrf	fsr0h,c
  5797  017E7E  0E06               	movlw	6
  5798  017E80  26E9               	addwf	fsr0l,f,c
  5799  017E82  2AEF               	incf	indf0,f,c
  5800  017E84  50EF               	movf	indf0,w,c
  5801  017E86  0B03               	andlw	3
  5802  017E88  6EDF               	movwf	indf2,c
  5803                           
  5804                           ;hid.c: 34:    h->hid_display = h->sequence;
  5805                           ;stkvar	_h @ sp[(0)+-1]
  5806  017E8A  0EFF               	movlw	-1
  5807  017E8C  50E3               	movf	plusw1,w,c
  5808  017E8E  6ED9               	movwf	fsr2l,c
  5809  017E90  6ADA               	clrf	fsr2h,c
  5810  017E92  0E06               	movlw	6
  5811  017E94  26D9               	addwf	fsr2l,f,c
  5812                           
  5813                           ;stkvar	_h @ sp[(0)+-1]
  5814  017E96  0EFF               	movlw	-1
  5815  017E98  50E3               	movf	plusw1,w,c
  5816  017E9A  6EE9               	movwf	fsr0l,c
  5817  017E9C  6AEA               	clrf	fsr0h,c
  5818  017E9E  006F FF7F FFEF     	movff	indf2,indf0
  5819                           
  5820                           ;hid.c: 35:    h->wait_select = 1;
  5821                           ;stkvar	_h @ sp[(0)+-1]
  5822  017EA4  0EFF               	movlw	-1
  5823  017EA6  50E3               	movf	plusw1,w,c
  5824  017EA8  6ED9               	movwf	fsr2l,c
  5825  017EAA  6ADA               	clrf	fsr2h,c
  5826  017EAC  0E02               	movlw	2
  5827  017EAE  26D9               	addwf	fsr2l,f,c
  5828  017EB0  0E01               	movlw	1
  5829  017EB2                     L1:
  5830  017EB2  6EDF               	movwf	indf2,c
  5831  017EB4  D013               	goto	l1866
  5832  017EB6                     l9890:
  5833                           
  5834                           ;stkvar	_h @ sp[(0)+-1]
  5835  017EB6  0EFF               	movlw	-1
  5836  017EB8  50E3               	movf	plusw1,w,c
  5837  017EBA  6ED9               	movwf	fsr2l,c
  5838  017EBC  6ADA               	clrf	fsr2h,c
  5839  017EBE  0E01               	movlw	1
  5840  017EC0  26D9               	addwf	fsr2l,f,c
  5841  017EC2  50DF               	movf	indf2,w,c
  5842  017EC4  6E0B               	movwf	(btemp+10)^0,c
  5843  017EC6  6A0C               	clrf	(btemp+11)^0,c
  5844                           
  5845                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5846                           ; Switch size 1, requested type "simple"
  5847                           ; Number of cases is 1, Range of values is 0 to 0
  5848                           ; switch strategies available:
  5849                           ; Name         Instructions Cycles
  5850                           ; simple_byte            4     3 (average)
  5851                           ;	Chosen strategy is simple_byte
  5852  017EC8  500C               	movf	(btemp+11)^0,w,c
  5853  017ECA  0A00               	xorlw	0	; case 0
  5854  017ECC  A4D8               	btfss	status,2,c
  5855  017ECE  D7BB               	goto	l9880
  5856                           
  5857                           ; Switch size 1, requested type "simple"
  5858                           ; Number of cases is 2, Range of values is 0 to 1
  5859                           ; switch strategies available:
  5860                           ; Name         Instructions Cycles
  5861                           ; simple_byte            7     4 (average)
  5862                           ;	Chosen strategy is simple_byte
  5863  017ED0  500B               	movf	(btemp+10)^0,w,c
  5864  017ED2  0A00               	xorlw	0	; case 0
  5865  017ED4  B4D8               	btfsc	status,2,c
  5866  017ED6  D789               	goto	l9868
  5867  017ED8  0A01               	xorlw	1	; case 1
  5868  017EDA  D7B5               	goto	l9880
  5869  017EDC                     l1866:
  5870                           
  5871                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  5872  017EDC  52E5               	movf	postdec1,f,c
  5873  017EDE  0012               	return		;funcret
  5874  017EE0                     __end_of_hid_display:
  5875                           	opt callstack 0
  5876                           
  5877 ;; *************** function _hid_input *****************
  5878 ;; Defined at:
  5879 ;;		line 3 in file "hid.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;  h               1  [STACK] PTR struct H_data
  5882 ;;		 -> H(7), 
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;		None
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  1  [STACK] PTR struct H_data
  5887 ;; Registers used:
  5888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/1
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5898 ;;Total ram usage:        0 bytes
  5899 ;; Hardware stack levels used:    1
  5900 ;; Hardware stack levels required when called:   16
  5901 ;; This function calls:
  5902 ;;		_get_switch
  5903 ;; This function is called by:
  5904 ;;		_hid_display
  5905 ;; This function uses a reentrant model
  5906 ;;
  5907                           
  5908                           	psect	text16
  5909  0188A0                     __ptext16:
  5910                           	opt callstack 0
  5911  0188A0                     _hid_input:
  5912                           	opt callstack 13
  5913                           
  5914                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  5915                           
  5916                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5917                           ;incstack = 0
  5918  0188A0  0E02               	movlw	2
  5919  0188A2  6EE6               	movwf	postinc1,c
  5920  0188A4  ECCB  F0CB         	call	_get_switch	;wreg free
  5921  0188A8  5001               	movf	btemp^0,w,c
  5922  0188AA  B4D8               	btfsc	status,2,c
  5923  0188AC  D01C               	goto	l9546
  5924                           
  5925                           ;hid.c: 6:   h->wait_select = 0;
  5926                           ;stkvar	_h @ sp[(0)+-1]
  5927  0188AE  0EFF               	movlw	-1
  5928  0188B0  50E3               	movf	plusw1,w,c
  5929  0188B2  6ED9               	movwf	fsr2l,c
  5930  0188B4  6ADA               	clrf	fsr2h,c
  5931  0188B6  0E02               	movlw	2
  5932  0188B8  26D9               	addwf	fsr2l,f,c
  5933  0188BA  0E00               	movlw	0
  5934  0188BC  6EDF               	movwf	indf2,c
  5935                           
  5936                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  5937  0188BE  0E02               	movlw	2
  5938  0188C0  6EE6               	movwf	postinc1,c
  5939  0188C2  ECCB  F0CB         	call	_get_switch	;wreg free
  5940  0188C6  5001               	movf	btemp^0,w,c
  5941  0188C8  B4D8               	btfsc	status,2,c
  5942  0188CA  D003               	goto	u8600
  5943  0188CC  6A0C               	clrf	(btemp+11)^0,c
  5944  0188CE  2A0C               	incf	(btemp+11)^0,f,c
  5945  0188D0  D001               	goto	u8618
  5946  0188D2                     u8600:
  5947  0188D2  6A0C               	clrf	(btemp+11)^0,c
  5948  0188D4                     u8618:
  5949                           
  5950                           ;stkvar	_h @ sp[(0)+-1]
  5951  0188D4  0EFF               	movlw	-1
  5952  0188D6  50E3               	movf	plusw1,w,c
  5953  0188D8  6ED9               	movwf	fsr2l,c
  5954  0188DA  6ADA               	clrf	fsr2h,c
  5955  0188DC  0E03               	movlw	3
  5956  0188DE  26D9               	addwf	fsr2l,f,c
  5957  0188E0  0060  F033  FFDF   	movff	btemp+11,indf2
  5958  0188E6                     l9546:
  5959                           
  5960                           ;hid.c: 10:  if (get_switch(SENTER)) {
  5961  0188E6  0E03               	movlw	3
  5962  0188E8  6EE6               	movwf	postinc1,c
  5963  0188EA  ECCB  F0CB         	call	_get_switch	;wreg free
  5964  0188EE  5001               	movf	btemp^0,w,c
  5965  0188F0  B4D8               	btfsc	status,2,c
  5966  0188F2  D01C               	goto	l1857
  5967                           
  5968                           ;hid.c: 11:   h->wait_enter = 0;
  5969                           ;stkvar	_h @ sp[(0)+-1]
  5970  0188F4  0EFF               	movlw	-1
  5971  0188F6  50E3               	movf	plusw1,w,c
  5972  0188F8  6ED9               	movwf	fsr2l,c
  5973  0188FA  6ADA               	clrf	fsr2h,c
  5974  0188FC  0E04               	movlw	4
  5975  0188FE  26D9               	addwf	fsr2l,f,c
  5976  018900  0E00               	movlw	0
  5977  018902  6EDF               	movwf	indf2,c
  5978                           
  5979                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  5980  018904  0E03               	movlw	3
  5981  018906  6EE6               	movwf	postinc1,c
  5982  018908  ECCB  F0CB         	call	_get_switch	;wreg free
  5983  01890C  5001               	movf	btemp^0,w,c
  5984  01890E  B4D8               	btfsc	status,2,c
  5985  018910  D003               	goto	u8630
  5986  018912  6A0C               	clrf	(btemp+11)^0,c
  5987  018914  2A0C               	incf	(btemp+11)^0,f,c
  5988  018916  D001               	goto	u8648
  5989  018918                     u8630:
  5990  018918  6A0C               	clrf	(btemp+11)^0,c
  5991  01891A                     u8648:
  5992                           
  5993                           ;stkvar	_h @ sp[(0)+-1]
  5994  01891A  0EFF               	movlw	-1
  5995  01891C  50E3               	movf	plusw1,w,c
  5996  01891E  6ED9               	movwf	fsr2l,c
  5997  018920  6ADA               	clrf	fsr2h,c
  5998  018922  0E05               	movlw	5
  5999  018924  26D9               	addwf	fsr2l,f,c
  6000  018926  0060  F033  FFDF   	movff	btemp+11,indf2
  6001  01892C                     l1857:
  6002                           
  6003                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6004  01892C  52E5               	movf	postdec1,f,c
  6005  01892E  0012               	return		;funcret
  6006  018930                     __end_of_hid_input:
  6007                           	opt callstack 0
  6008                           
  6009 ;; *************** function _get_switch *****************
  6010 ;; Defined at:
  6011 ;;		line 18 in file "dio.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;  i               1  [STACK] unsigned char 
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;		None
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  1  [STACK] enum E17021
  6018 ;; Registers used:
  6019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/2
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6029 ;;Total ram usage:        0 bytes
  6030 ;; Hardware stack levels used:    1
  6031 ;; Hardware stack levels required when called:   15
  6032 ;; This function calls:
  6033 ;;		Nothing
  6034 ;; This function is called by:
  6035 ;;		_main
  6036 ;;		_hid_input
  6037 ;; This function uses a reentrant model
  6038 ;;
  6039                           
  6040                           	psect	text17
  6041  019796                     __ptext17:
  6042                           	opt callstack 0
  6043  019796                     _get_switch:
  6044                           	opt callstack 13
  6045                           
  6046                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  6047                           ;stkvar	_i @ sp[(0)+-1]
  6048                           
  6049                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6050                           ;incstack = 0
  6051  019796  0EFF               	movlw	-1
  6052  019798  006F FF8C  F001    	movff	plusw1,btemp
  6053  01979E  0E03               	movlw	3
  6054  0197A0  6401               	cpfsgt	btemp^0,c
  6055  0197A2  D002               	goto	l8820
  6056                           
  6057                           ;dio.c: 21:   return SW_OFF;
  6058  0197A4  0E00               	movlw	0
  6059  0197A6  D008               	goto	L2
  6060  0197A8                     l8820:
  6061                           
  6062                           ;dio.c: 23:  return S.button[i].sw;
  6063                           ;stkvar	_i @ sp[(0)+-1]
  6064  0197A8  0EFF               	movlw	-1
  6065  0197AA  50E3               	movf	plusw1,w,c
  6066  0197AC  0D05               	mullw	5
  6067  0197AE  50F3               	movf	243,w,c
  6068  0197B0  0F60               	addlw	low _S
  6069  0197B2  6ED9               	movwf	fsr2l,c
  6070  0197B4  6ADA               	clrf	fsr2h,c
  6071  0197B6  50DF               	movf	indf2,w,c
  6072  0197B8                     L2:
  6073  0197B8  6E01               	movwf	btemp^0,c
  6074                           
  6075                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6076  0197BA  52E5               	movf	postdec1,f,c
  6077  0197BC  0012               	return		;funcret
  6078  0197BE                     __end_of_get_switch:
  6079                           	opt callstack 0
  6080                           
  6081 ;; *************** function _eaDogM_WriteCommand *****************
  6082 ;; Defined at:
  6083 ;;		line 175 in file "eadog.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;  cmd             1  [STACK] const unsigned char 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;		None
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  1  [STACK] void 
  6090 ;; Registers used:
  6091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6092 ;; Tracked objects:
  6093 ;;		On entry : 3F/3D
  6094 ;;		On exit  : 3F/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6101 ;;Total ram usage:        0 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; Hardware stack levels required when called:   25
  6104 ;; This function calls:
  6105 ;;		_send_lcd_cmd_dma
  6106 ;; This function is called by:
  6107 ;;		_main
  6108 ;; This function uses a reentrant model
  6109 ;;
  6110                           
  6111                           	psect	text18
  6112  019D06                     __ptext18:
  6113                           	opt callstack 0
  6114  019D06                     _eaDogM_WriteCommand:
  6115                           	opt callstack 5
  6116                           
  6117                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  6118                           ;stkvar	_cmd @ sp[(0)+-1]
  6119                           
  6120                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6121                           ;incstack = 0
  6122  019D06  0EFF               	movlw	-1
  6123  019D08  50E3               	movf	plusw1,w,c
  6124  019D0A  6EE6               	movwf	postinc1,c
  6125  019D0C  ECBD  F0C7         	call	_send_lcd_cmd_dma	;wreg free
  6126                           
  6127                           ; BSR set to: 0
  6128                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  6129  019D10  52E5               	movf	postdec1,f,c
  6130  019D12  0012               	return		;funcret
  6131  019D14                     __end_of_eaDogM_WriteCommand:
  6132                           	opt callstack 0
  6133                           
  6134 ;; *************** function _convert_adc_data *****************
  6135 ;; Defined at:
  6136 ;;		line 40 in file "mbmc.c"
  6137 ;; Parameters:    Size  Location     Type
  6138 ;;		None
  6139 ;; Auto vars:     Size  Location     Type
  6140 ;;  i               1  [STACK] unsigned char 
  6141 ;; Return value:  Size  Location     Type
  6142 ;;                  1  [STACK] void 
  6143 ;; Registers used:
  6144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6145 ;; Tracked objects:
  6146 ;;		On entry : 0/1
  6147 ;;		On exit  : 0/0
  6148 ;;		Unchanged: 0/0
  6149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6154 ;;Total ram usage:        0 bytes
  6155 ;; Hardware stack levels used:    1
  6156 ;; Hardware stack levels required when called:   18
  6157 ;; This function calls:
  6158 ;;		_conv_raw_result
  6159 ;;		_lp_filter
  6160 ;; This function is called by:
  6161 ;;		_main
  6162 ;; This function uses a reentrant model
  6163 ;;
  6164                           
  6165                           	psect	text19
  6166  0182F8                     __ptext19:
  6167                           	opt callstack 0
  6168  0182F8                     _convert_adc_data:
  6169                           	opt callstack 0
  6170                           
  6171                           ; BSR set to: 0
  6172                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6173  0182F8  52E6               	movf	postinc1,f,c
  6174                           
  6175                           ;mbmc.c: 42:  uint8_t i = 0;
  6176                           ;stkvar	_i @ sp[(-1)+0]
  6177                           
  6178                           ;incstack = 0
  6179  0182FA  0EFF               	movlw	-1
  6180  0182FC  6AE3               	clrf	plusw1,c
  6181  0182FE                     l9840:
  6182                           
  6183                           ;mbmc.c: 45:   if (V.calib) {
  6184  0182FE  0102               	movlb	2	; () banked
  6185  018300  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  6186  018302  B4D8               	btfsc	status,2,c
  6187  018304  D01B               	goto	l9844
  6188                           
  6189                           ; BSR set to: 2
  6190                           ;mbmc.c: 46:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  6191  018306  0E01               	movlw	1
  6192  018308  6EE6               	movwf	postinc1,c
  6193                           
  6194                           ;stkvar	_i @ sp[(-2)+0]
  6195  01830A  0EFE               	movlw	-2
  6196  01830C  50E3               	movf	plusw1,w,c
  6197  01830E  6EE6               	movwf	postinc1,c
  6198  018310  0E01               	movlw	1
  6199  018312  6EE6               	movwf	postinc1,c
  6200                           
  6201                           ;stkvar	_i @ sp[(-4)+0]
  6202  018314  0EFC               	movlw	-4
  6203  018316  50E3               	movf	plusw1,w,c
  6204  018318  6EE6               	movwf	postinc1,c
  6205  01831A  EC6E  F0A1         	call	_conv_raw_result	;wreg free
  6206  01831E  0060  F007  FFE6   	movff	btemp,postinc1
  6207  018324  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6208  01832A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6209  018330  0060  F013  FFE6   	movff	btemp+3,postinc1
  6210  018336  EC62  F0B5         	call	_lp_filter	;wreg free
  6211  01833A  D01A               	goto	L3
  6212  01833C                     l9844:
  6213                           
  6214                           ; BSR set to: 2
  6215                           ;mbmc.c: 48:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  6216  01833C  0E00               	movlw	0
  6217  01833E  6EE6               	movwf	postinc1,c
  6218                           
  6219                           ;stkvar	_i @ sp[(-2)+0]
  6220  018340  0EFE               	movlw	-2
  6221  018342  50E3               	movf	plusw1,w,c
  6222  018344  6EE6               	movwf	postinc1,c
  6223  018346  0E00               	movlw	0
  6224  018348  6EE6               	movwf	postinc1,c
  6225                           
  6226                           ;stkvar	_i @ sp[(-4)+0]
  6227  01834A  0EFC               	movlw	-4
  6228  01834C  50E3               	movf	plusw1,w,c
  6229  01834E  6EE6               	movwf	postinc1,c
  6230  018350  EC6E  F0A1         	call	_conv_raw_result	;wreg free
  6231  018354  0060  F007  FFE6   	movff	btemp,postinc1
  6232  01835A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6233  018360  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6234  018366  0060  F013  FFE6   	movff	btemp+3,postinc1
  6235  01836C  EC62  F0B5         	call	_lp_filter	;wreg free
  6236  018370                     L3:
  6237                           
  6238                           ;stkvar	_i @ sp[(-1)+0]
  6239  018370  0EFF               	movlw	-1
  6240  018372  50E3               	movf	plusw1,w,c
  6241  018374  0D04               	mullw	4
  6242  018376  0E00               	movlw	low _C
  6243  018378  24F3               	addwf	243,w,c
  6244  01837A  6ED9               	movwf	fsr2l,c
  6245  01837C  0E01               	movlw	high _C
  6246  01837E  20F4               	addwfc	prodh,w,c
  6247  018380  6EDA               	movwf	fsr2h,c
  6248  018382  0060  F007  FFDE   	movff	btemp,postinc2
  6249  018388  0060  F00B  FFDE   	movff	btemp+1,postinc2
  6250  01838E  0060  F00F  FFDE   	movff	btemp+2,postinc2
  6251  018394  0060  F013  FFDE   	movff	btemp+3,postinc2
  6252                           
  6253                           ;mbmc.c: 50:  } while (++i < 16);
  6254                           ;stkvar	_i @ sp[(-1)+0]
  6255  01839A  0EFF               	movlw	-1
  6256  01839C  2AE3               	incf	plusw1,f,c
  6257  01839E  0EFF               	movlw	-1
  6258  0183A0  006F FF8C  F001    	movff	plusw1,btemp
  6259  0183A6  0E0F               	movlw	15
  6260  0183A8  6401               	cpfsgt	btemp^0,c
  6261  0183AA  D7A9               	goto	l9840
  6262                           
  6263                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  6264  0183AC  52E5               	movf	postdec1,f,c
  6265  0183AE  0012               	return		;funcret
  6266  0183B0                     __end_of_convert_adc_data:
  6267                           	opt callstack 0
  6268                           
  6269 ;; *************** function _conv_raw_result *****************
  6270 ;; Defined at:
  6271 ;;		line 80 in file "daq.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  chan            1  [STACK] const enum E16136
  6274 ;;  to_what         1  [STACK] const enum E16198
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;		None
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  4  [STACK] float 
  6279 ;; Registers used:
  6280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/1
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6290 ;;Total ram usage:        0 bytes
  6291 ;; Hardware stack levels used:    1
  6292 ;; Hardware stack levels required when called:   17
  6293 ;; This function calls:
  6294 ;;		___fldiv
  6295 ;;		___flmul
  6296 ;;		___flsub
  6297 ;;		___xxtofl
  6298 ;;		_get_raw_result
  6299 ;;		_nanf
  6300 ;; This function is called by:
  6301 ;;		_convert_adc_data
  6302 ;;		_init_bsoc
  6303 ;; This function uses a reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text20
  6307  0142DC                     __ptext20:
  6308                           	opt callstack 0
  6309  0142DC                     _conv_raw_result:
  6310                           	opt callstack 12
  6311                           
  6312                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  6313                           
  6314                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6315                           ;incstack = 0
  6316  0142DC  D242               	goto	l9480
  6317  0142DE                     l9426:
  6318                           
  6319                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  6320                           ;stkvar	_chan @ sp[(0)+-1]
  6321  0142DE  0EFF               	movlw	-1
  6322  0142E0  006F FF8C  F00C    	movff	plusw1,btemp+11
  6323  0142E6  0E77               	movlw	119
  6324  0142E8  6E09               	movwf	(btemp+8)^0,c
  6325  0142EA  0E3C               	movlw	60
  6326  0142EC  6E0A               	movwf	(btemp+9)^0,c
  6327  0142EE  2A0C               	incf	(btemp+11)^0,f,c
  6328  0142F0  D003               	goto	u8374
  6329  0142F2                     u8375:
  6330  0142F2  340A               	rlcf	(btemp+9)^0,w,c
  6331  0142F4  320A               	rrcf	(btemp+9)^0,f,c
  6332  0142F6  3209               	rrcf	(btemp+8)^0,f,c
  6333  0142F8                     u8374:
  6334  0142F8  2E0C               	decfsz	(btemp+11)^0,f,c
  6335  0142FA  D7FB               	goto	u8375
  6336  0142FC  B009               	btfsc	(btemp+8)^0,0,c
  6337  0142FE  D007               	goto	l9432
  6338                           
  6339                           ;daq.c: 86:    return nanf("");
  6340  014300  0E3F               	movlw	low (STR_46+74)
  6341  014302  6EE6               	movwf	postinc1,c
  6342  014304  0EFE               	movlw	high (STR_46+74)
  6343  014306  6EE6               	movwf	postinc1,c
  6344  014308  ECA4  F0C6         	call	_nanf	;wreg free
  6345  01430C  D23A               	goto	l1737
  6346  01430E                     l9432:
  6347                           
  6348                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  6349                           ;stkvar	_chan @ sp[(0)+-1]
  6350  01430E  0EFF               	movlw	-1
  6351  014310  006F FF8C  F00C    	movff	plusw1,btemp+11
  6352  014316  0E03               	movlw	3
  6353  014318  6E09               	movwf	(btemp+8)^0,c
  6354  01431A  0E00               	movlw	0
  6355  01431C  6E0A               	movwf	(btemp+9)^0,c
  6356  01431E  2A0C               	incf	(btemp+11)^0,f,c
  6357  014320  D003               	goto	u8394
  6358  014322                     u8395:
  6359  014322  340A               	rlcf	(btemp+9)^0,w,c
  6360  014324  320A               	rrcf	(btemp+9)^0,f,c
  6361  014326  3209               	rrcf	(btemp+8)^0,f,c
  6362  014328                     u8394:
  6363  014328  2E0C               	decfsz	(btemp+11)^0,f,c
  6364  01432A  D7FB               	goto	u8395
  6365  01432C  A009               	btfss	(btemp+8)^0,0,c
  6366  01432E  D0EB               	goto	l9446
  6367                           
  6368                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  6369                           ;stkvar	_chan @ sp[(0)+-1]
  6370  014330  0EFF               	movlw	-1
  6371  014332  006F FF8C  F00C    	movff	plusw1,btemp+11
  6372  014338  0E01               	movlw	1
  6373  01433A  6E09               	movwf	(btemp+8)^0,c
  6374  01433C  0E00               	movlw	0
  6375  01433E  6E0A               	movwf	(btemp+9)^0,c
  6376  014340  2A0C               	incf	(btemp+11)^0,f,c
  6377  014342  D003               	goto	u8414
  6378  014344                     u8415:
  6379  014344  340A               	rlcf	(btemp+9)^0,w,c
  6380  014346  320A               	rrcf	(btemp+9)^0,f,c
  6381  014348  3209               	rrcf	(btemp+8)^0,f,c
  6382  01434A                     u8414:
  6383  01434A  2E0C               	decfsz	(btemp+11)^0,f,c
  6384  01434C  D7FB               	goto	u8415
  6385  01434E  A009               	btfss	(btemp+8)^0,0,c
  6386  014350  D06D               	goto	l9442
  6387                           
  6388                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  6389  014352  0E7B               	movlw	123
  6390  014354  6EE6               	movwf	postinc1,c
  6391  014356  0E14               	movlw	20
  6392  014358  6EE6               	movwf	postinc1,c
  6393  01435A  0EAE               	movlw	174
  6394  01435C  6EE6               	movwf	postinc1,c
  6395  01435E  0E3D               	movlw	61
  6396  014360  6EE6               	movwf	postinc1,c
  6397  014362  0060  F3AC  F009   	movff	_R+32,btemp+8	;volatile
  6398  014368  0060  F3B0  F00A   	movff	_R+33,btemp+9	;volatile
  6399  01436E  0E00               	movlw	0
  6400  014370  BE0A               	btfsc	(btemp+9)^0,7,c
  6401  014372  0EFF               	movlw	255
  6402  014374  6E0B               	movwf	(btemp+10)^0,c
  6403  014376  6E0C               	movwf	(btemp+11)^0,c
  6404  014378  0060  F027  FFE6   	movff	btemp+8,postinc1
  6405  01437E  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6406  014384  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6407  01438A  0060  F033  FFE6   	movff	btemp+11,postinc1
  6408  014390  0E01               	movlw	1
  6409  014392  6EE6               	movwf	postinc1,c
  6410  014394  EC7C  F0B2         	call	___xxtofl	;wreg free
  6411  014398  0060  F007  FFE6   	movff	btemp,postinc1
  6412  01439E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6413  0143A4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6414  0143AA  0060  F013  FFE6   	movff	btemp+3,postinc1
  6415                           
  6416                           ;stkvar	_chan @ sp[(-8)+-1]
  6417  0143B0  0EF7               	movlw	-9
  6418  0143B2  50E3               	movf	plusw1,w,c
  6419  0143B4  6EE6               	movwf	postinc1,c
  6420  0143B6  ECCA  F0CD         	call	_get_raw_result	;wreg free
  6421  0143BA  0060  F004  F00B   	movff	btemp,btemp+10
  6422  0143C0  0060  F008  F00C   	movff	btemp+1,btemp+11
  6423  0143C6  500B               	movf	(btemp+10)^0,w,c
  6424  0143C8  6E05               	movwf	(btemp+4)^0,c
  6425  0143CA  500C               	movf	(btemp+11)^0,w,c
  6426  0143CC  6E06               	movwf	(btemp+5)^0,c
  6427  0143CE  6A07               	clrf	(btemp+6)^0,c
  6428  0143D0  6A08               	clrf	(btemp+7)^0,c
  6429  0143D2  0060  F017  FFE6   	movff	btemp+4,postinc1
  6430  0143D8  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6431  0143DE  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6432  0143E4  0060  F023  FFE6   	movff	btemp+7,postinc1
  6433  0143EA  0E00               	movlw	0
  6434  0143EC  6EE6               	movwf	postinc1,c
  6435  0143EE  EC7C  F0B2         	call	___xxtofl	;wreg free
  6436  0143F2  0060  F007  FFE6   	movff	btemp,postinc1
  6437  0143F8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6438  0143FE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6439  014404  0060  F013  FFE6   	movff	btemp+3,postinc1
  6440  01440A  ECCB  F0C8         	call	___flsub	;wreg free
  6441  01440E  0060  F007  FFE6   	movff	btemp,postinc1
  6442  014414  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6443  01441A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6444  014420  0060  F013  FFE6   	movff	btemp+3,postinc1
  6445  014426  EC1C  F093         	call	___flmul	;wreg free
  6446  01442A  D1AB               	goto	l1737
  6447  01442C                     l9442:
  6448                           
  6449                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  6450  01442C  0E29               	movlw	41
  6451  01442E  6EE6               	movwf	postinc1,c
  6452  014430  0E5C               	movlw	92
  6453  014432  6EE6               	movwf	postinc1,c
  6454  014434  0E0F               	movlw	15
  6455  014436  6EE6               	movwf	postinc1,c
  6456  014438  0E3D               	movlw	61
  6457  01443A  6EE6               	movwf	postinc1,c
  6458  01443C  0060  F3B4  F009   	movff	_R+34,btemp+8	;volatile
  6459  014442  0060  F3B8  F00A   	movff	_R+35,btemp+9	;volatile
  6460  014448  0E00               	movlw	0
  6461  01444A  BE0A               	btfsc	(btemp+9)^0,7,c
  6462  01444C  0EFF               	movlw	255
  6463  01444E  6E0B               	movwf	(btemp+10)^0,c
  6464  014450  6E0C               	movwf	(btemp+11)^0,c
  6465  014452  0060  F027  FFE6   	movff	btemp+8,postinc1
  6466  014458  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6467  01445E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6468  014464  0060  F033  FFE6   	movff	btemp+11,postinc1
  6469  01446A  0E01               	movlw	1
  6470  01446C  6EE6               	movwf	postinc1,c
  6471  01446E  EC7C  F0B2         	call	___xxtofl	;wreg free
  6472  014472  0060  F007  FFE6   	movff	btemp,postinc1
  6473  014478  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6474  01447E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6475  014484  0060  F013  FFE6   	movff	btemp+3,postinc1
  6476                           
  6477                           ;stkvar	_chan @ sp[(-8)+-1]
  6478  01448A  0EF7               	movlw	-9
  6479  01448C  50E3               	movf	plusw1,w,c
  6480  01448E  6EE6               	movwf	postinc1,c
  6481  014490  ECCA  F0CD         	call	_get_raw_result	;wreg free
  6482  014494  0060  F004  F00B   	movff	btemp,btemp+10
  6483  01449A  0060  F008  F00C   	movff	btemp+1,btemp+11
  6484  0144A0  500B               	movf	(btemp+10)^0,w,c
  6485  0144A2  6E05               	movwf	(btemp+4)^0,c
  6486  0144A4  500C               	movf	(btemp+11)^0,w,c
  6487  0144A6  6E06               	movwf	(btemp+5)^0,c
  6488  0144A8  6A07               	clrf	(btemp+6)^0,c
  6489  0144AA  6A08               	clrf	(btemp+7)^0,c
  6490  0144AC  0060  F017  FFE6   	movff	btemp+4,postinc1
  6491  0144B2  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6492  0144B8  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6493  0144BE  0060  F023  FFE6   	movff	btemp+7,postinc1
  6494  0144C4  0E00               	movlw	0
  6495  0144C6  6EE6               	movwf	postinc1,c
  6496  0144C8  EC7C  F0B2         	call	___xxtofl	;wreg free
  6497  0144CC  0060  F007  FFE6   	movff	btemp,postinc1
  6498  0144D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6499  0144D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6500  0144DE  0060  F013  FFE6   	movff	btemp+3,postinc1
  6501  0144E4  ECCB  F0C8         	call	___flsub	;wreg free
  6502  0144E8  0060  F007  FFE6   	movff	btemp,postinc1
  6503  0144EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6504  0144F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6505  0144FA  0060  F013  FFE6   	movff	btemp+3,postinc1
  6506  014500  EC1C  F093         	call	___flmul	;wreg free
  6507  014504  D13E               	goto	l1737
  6508  014506                     l9446:
  6509                           
  6510                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  6511                           ;stkvar	_chan @ sp[(0)+-1]
  6512  014506  0EFF               	movlw	-1
  6513  014508  006F FF8C  F00C    	movff	plusw1,btemp+11
  6514  01450E  0E00               	movlw	0
  6515  014510  6E09               	movwf	(btemp+8)^0,c
  6516  014512  0E08               	movlw	8
  6517  014514  6E0A               	movwf	(btemp+9)^0,c
  6518  014516  2A0C               	incf	(btemp+11)^0,f,c
  6519  014518  D003               	goto	u8434
  6520  01451A                     u8435:
  6521  01451A  340A               	rlcf	(btemp+9)^0,w,c
  6522  01451C  320A               	rrcf	(btemp+9)^0,f,c
  6523  01451E  3209               	rrcf	(btemp+8)^0,f,c
  6524  014520                     u8434:
  6525  014520  2E0C               	decfsz	(btemp+11)^0,f,c
  6526  014522  D7FB               	goto	u8435
  6527  014524  A009               	btfss	(btemp+8)^0,0,c
  6528  014526  D008               	goto	l9454
  6529                           
  6530                           ;daq.c: 96:     return 25.0;
  6531  014528  0E00               	movlw	0
  6532  01452A  6E01               	movwf	btemp^0,c
  6533  01452C  0E00               	movlw	0
  6534  01452E  6E02               	movwf	(btemp+1)^0,c
  6535  014530  0EC8               	movlw	200
  6536  014532  6E03               	movwf	(btemp+2)^0,c
  6537  014534  0E41               	movlw	65
  6538  014536  D113               	goto	L4
  6539  014538                     l9454:
  6540                           
  6541                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  6542  014538  0E00               	movlw	0
  6543  01453A  6EE6               	movwf	postinc1,c
  6544  01453C  0E00               	movlw	0
  6545  01453E  6EE6               	movwf	postinc1,c
  6546  014540  0E7A               	movlw	122
  6547  014542  6EE6               	movwf	postinc1,c
  6548  014544  0E44               	movlw	68
  6549  014546  6EE6               	movwf	postinc1,c
  6550  014548  0E61               	movlw	97
  6551  01454A  6EE6               	movwf	postinc1,c
  6552  01454C  0E03               	movlw	3
  6553  01454E  6EE6               	movwf	postinc1,c
  6554  014550  0E84               	movlw	132
  6555  014552  6EE6               	movwf	postinc1,c
  6556  014554  0E40               	movlw	64
  6557  014556  6EE6               	movwf	postinc1,c
  6558                           
  6559                           ;stkvar	_chan @ sp[(-8)+-1]
  6560  014558  0EF7               	movlw	-9
  6561  01455A  50E3               	movf	plusw1,w,c
  6562  01455C  6EE6               	movwf	postinc1,c
  6563  01455E  ECCA  F0CD         	call	_get_raw_result	;wreg free
  6564  014562  0060  F004  F00B   	movff	btemp,btemp+10
  6565  014568  0060  F008  F00C   	movff	btemp+1,btemp+11
  6566  01456E  500B               	movf	(btemp+10)^0,w,c
  6567  014570  6E05               	movwf	(btemp+4)^0,c
  6568  014572  500C               	movf	(btemp+11)^0,w,c
  6569  014574  6E06               	movwf	(btemp+5)^0,c
  6570  014576  6A07               	clrf	(btemp+6)^0,c
  6571  014578  6A08               	clrf	(btemp+7)^0,c
  6572  01457A  0060  F017  FFE6   	movff	btemp+4,postinc1
  6573  014580  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6574  014586  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6575  01458C  0060  F023  FFE6   	movff	btemp+7,postinc1
  6576  014592  0E00               	movlw	0
  6577  014594  6EE6               	movwf	postinc1,c
  6578  014596  EC7C  F0B2         	call	___xxtofl	;wreg free
  6579  01459A  0060  F007  FFE6   	movff	btemp,postinc1
  6580  0145A0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6581  0145A6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6582  0145AC  0060  F013  FFE6   	movff	btemp+3,postinc1
  6583  0145B2  EC1C  F093         	call	___flmul	;wreg free
  6584  0145B6  0060  F007  FFE6   	movff	btemp,postinc1
  6585  0145BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6586  0145C2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6587  0145C8  0060  F013  FFE6   	movff	btemp+3,postinc1
  6588  0145CE  ECB1  F09E         	call	___fldiv	;wreg free
  6589  0145D2  D0D7               	goto	l1737
  6590  0145D4                     l9458:
  6591                           
  6592                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  6593                           ;stkvar	_chan @ sp[(0)+-1]
  6594  0145D4  0EFF               	movlw	-1
  6595  0145D6  006F FF8C  F00C    	movff	plusw1,btemp+11
  6596  0145DC  0E03               	movlw	3
  6597  0145DE  6E09               	movwf	(btemp+8)^0,c
  6598  0145E0  0E00               	movlw	0
  6599  0145E2  6E0A               	movwf	(btemp+9)^0,c
  6600  0145E4  2A0C               	incf	(btemp+11)^0,f,c
  6601  0145E6  D003               	goto	u8454
  6602  0145E8                     u8455:
  6603  0145E8  340A               	rlcf	(btemp+9)^0,w,c
  6604  0145EA  320A               	rrcf	(btemp+9)^0,f,c
  6605  0145EC  3209               	rrcf	(btemp+8)^0,f,c
  6606  0145EE                     u8454:
  6607  0145EE  2E0C               	decfsz	(btemp+11)^0,f,c
  6608  0145F0  D7FB               	goto	u8455
  6609  0145F2  B009               	btfsc	(btemp+8)^0,0,c
  6610  0145F4  D011               	goto	u8480
  6611                           
  6612                           ;stkvar	_chan @ sp[(0)+-1]
  6613  0145F6  0EFF               	movlw	-1
  6614  0145F8  006F FF8C  F00C    	movff	plusw1,btemp+11
  6615  0145FE  0E00               	movlw	0
  6616  014600  6E09               	movwf	(btemp+8)^0,c
  6617  014602  0E08               	movlw	8
  6618  014604  6E0A               	movwf	(btemp+9)^0,c
  6619  014606  2A0C               	incf	(btemp+11)^0,f,c
  6620  014608  D003               	goto	u8474
  6621  01460A                     u8475:
  6622  01460A  340A               	rlcf	(btemp+9)^0,w,c
  6623  01460C  320A               	rrcf	(btemp+9)^0,f,c
  6624  01460E  3209               	rrcf	(btemp+8)^0,f,c
  6625  014610                     u8474:
  6626  014610  2E0C               	decfsz	(btemp+11)^0,f,c
  6627  014612  D7FB               	goto	u8475
  6628  014614  A009               	btfss	(btemp+8)^0,0,c
  6629  014616  D04E               	goto	l9466
  6630  014618                     u8480:
  6631                           
  6632                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  6633  014618  0E00               	movlw	0
  6634  01461A  6EE6               	movwf	postinc1,c
  6635  01461C  0E00               	movlw	0
  6636  01461E  6EE6               	movwf	postinc1,c
  6637  014620  0E7A               	movlw	122
  6638  014622  6EE6               	movwf	postinc1,c
  6639  014624  0E44               	movlw	68
  6640  014626  6EE6               	movwf	postinc1,c
  6641  014628  0E00               	movlw	0
  6642  01462A  6EE6               	movwf	postinc1,c
  6643  01462C  0E00               	movlw	0
  6644  01462E  6EE6               	movwf	postinc1,c
  6645  014630  0E20               	movlw	32
  6646  014632  6EE6               	movwf	postinc1,c
  6647  014634  0E3F               	movlw	63
  6648  014636  6EE6               	movwf	postinc1,c
  6649                           
  6650                           ;stkvar	_chan @ sp[(-8)+-1]
  6651  014638  0EF7               	movlw	-9
  6652  01463A  50E3               	movf	plusw1,w,c
  6653  01463C  6EE6               	movwf	postinc1,c
  6654  01463E  ECCA  F0CD         	call	_get_raw_result	;wreg free
  6655  014642  0060  F004  F00B   	movff	btemp,btemp+10
  6656  014648  0060  F008  F00C   	movff	btemp+1,btemp+11
  6657  01464E  500B               	movf	(btemp+10)^0,w,c
  6658  014650  6E05               	movwf	(btemp+4)^0,c
  6659  014652  500C               	movf	(btemp+11)^0,w,c
  6660  014654  6E06               	movwf	(btemp+5)^0,c
  6661  014656  6A07               	clrf	(btemp+6)^0,c
  6662  014658  6A08               	clrf	(btemp+7)^0,c
  6663  01465A  0060  F017  FFE6   	movff	btemp+4,postinc1
  6664  014660  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6665  014666  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6666  01466C  0060  F023  FFE6   	movff	btemp+7,postinc1
  6667  014672  0E00               	movlw	0
  6668  014674  6EE6               	movwf	postinc1,c
  6669  014676  EC7C  F0B2         	call	___xxtofl	;wreg free
  6670  01467A  0060  F007  FFE6   	movff	btemp,postinc1
  6671  014680  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6672  014686  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6673  01468C  0060  F013  FFE6   	movff	btemp+3,postinc1
  6674  014692  EC1C  F093         	call	___flmul	;wreg free
  6675  014696  0060  F007  FFE6   	movff	btemp,postinc1
  6676  01469C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6677  0146A2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6678  0146A8  0060  F013  FFE6   	movff	btemp+3,postinc1
  6679  0146AE  ECB1  F09E         	call	___fldiv	;wreg free
  6680  0146B2  D067               	goto	l1737
  6681  0146B4                     l9466:
  6682                           
  6683                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  6684  0146B4  0E00               	movlw	0
  6685  0146B6  6EE6               	movwf	postinc1,c
  6686  0146B8  0E00               	movlw	0
  6687  0146BA  6EE6               	movwf	postinc1,c
  6688  0146BC  0E7A               	movlw	122
  6689  0146BE  6EE6               	movwf	postinc1,c
  6690  0146C0  0E44               	movlw	68
  6691  0146C2  6EE6               	movwf	postinc1,c
  6692  0146C4  0E61               	movlw	97
  6693  0146C6  6EE6               	movwf	postinc1,c
  6694  0146C8  0E03               	movlw	3
  6695  0146CA  6EE6               	movwf	postinc1,c
  6696  0146CC  0E84               	movlw	132
  6697  0146CE  6EE6               	movwf	postinc1,c
  6698  0146D0  0E40               	movlw	64
  6699  0146D2  6EE6               	movwf	postinc1,c
  6700                           
  6701                           ;stkvar	_chan @ sp[(-8)+-1]
  6702  0146D4  0EF7               	movlw	-9
  6703  0146D6  50E3               	movf	plusw1,w,c
  6704  0146D8  6EE6               	movwf	postinc1,c
  6705  0146DA  ECCA  F0CD         	call	_get_raw_result	;wreg free
  6706  0146DE  0060  F004  F00B   	movff	btemp,btemp+10
  6707  0146E4  0060  F008  F00C   	movff	btemp+1,btemp+11
  6708  0146EA  500B               	movf	(btemp+10)^0,w,c
  6709  0146EC  6E05               	movwf	(btemp+4)^0,c
  6710  0146EE  500C               	movf	(btemp+11)^0,w,c
  6711  0146F0  6E06               	movwf	(btemp+5)^0,c
  6712  0146F2  6A07               	clrf	(btemp+6)^0,c
  6713  0146F4  6A08               	clrf	(btemp+7)^0,c
  6714  0146F6  0060  F017  FFE6   	movff	btemp+4,postinc1
  6715  0146FC  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6716  014702  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6717  014708  0060  F023  FFE6   	movff	btemp+7,postinc1
  6718  01470E  0E00               	movlw	0
  6719  014710  6EE6               	movwf	postinc1,c
  6720  014712  EC7C  F0B2         	call	___xxtofl	;wreg free
  6721  014716  0060  F007  FFE6   	movff	btemp,postinc1
  6722  01471C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6723  014722  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6724  014728  0060  F013  FFE6   	movff	btemp+3,postinc1
  6725  01472E  EC1C  F093         	call	___flmul	;wreg free
  6726  014732  0060  F007  FFE6   	movff	btemp,postinc1
  6727  014738  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6728  01473E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6729  014744  0060  F013  FFE6   	movff	btemp+3,postinc1
  6730  01474A  ECB1  F09E         	call	___fldiv	;wreg free
  6731  01474E  D019               	goto	l1737
  6732  014750                     l9472:
  6733                           
  6734                           ;daq.c: 109:   return 0.0;
  6735  014750  0E00               	movlw	0
  6736  014752  6E01               	movwf	btemp^0,c
  6737  014754  0E00               	movlw	0
  6738  014756  6E02               	movwf	(btemp+1)^0,c
  6739  014758  0E00               	movlw	0
  6740  01475A  6E03               	movwf	(btemp+2)^0,c
  6741  01475C  0E00               	movlw	0
  6742  01475E                     L4:
  6743  01475E  6E04               	movwf	(btemp+3)^0,c
  6744  014760  D010               	goto	l1737
  6745  014762                     l9480:
  6746                           
  6747                           ;stkvar	_to_what @ sp[(0)+-2]
  6748  014762  0EFE               	movlw	-2
  6749  014764  50E3               	movf	plusw1,w,c
  6750  014766  6E0B               	movwf	(btemp+10)^0,c
  6751  014768  6A0C               	clrf	(btemp+11)^0,c
  6752                           
  6753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6754                           ; Switch size 1, requested type "simple"
  6755                           ; Number of cases is 1, Range of values is 0 to 0
  6756                           ; switch strategies available:
  6757                           ; Name         Instructions Cycles
  6758                           ; simple_byte            4     3 (average)
  6759                           ;	Chosen strategy is simple_byte
  6760  01476A  500C               	movf	(btemp+11)^0,w,c
  6761  01476C  0A00               	xorlw	0	; case 0
  6762  01476E  A4D8               	btfss	status,2,c
  6763  014770  D7EF               	goto	l9472
  6764                           
  6765                           ; Switch size 1, requested type "simple"
  6766                           ; Number of cases is 2, Range of values is 0 to 1
  6767                           ; switch strategies available:
  6768                           ; Name         Instructions Cycles
  6769                           ; simple_byte            7     4 (average)
  6770                           ;	Chosen strategy is simple_byte
  6771  014772  500B               	movf	(btemp+10)^0,w,c
  6772  014774  0A00               	xorlw	0	; case 0
  6773  014776  B4D8               	btfsc	status,2,c
  6774  014778  D5B2               	goto	l9426
  6775  01477A  0A01               	xorlw	1	; case 1
  6776  01477C  B4D8               	btfsc	status,2,c
  6777  01477E  D72A               	goto	l9458
  6778  014780  D7E7               	goto	l9472
  6779  014782                     l1737:
  6780                           
  6781                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  6782  014782  52E5               	movf	postdec1,f,c
  6783  014784  52E5               	movf	postdec1,f,c
  6784  014786  0012               	return		;funcret
  6785  014788                     __end_of_conv_raw_result:
  6786                           	opt callstack 0
  6787                           
  6788 ;; *************** function _nanf *****************
  6789 ;; Defined at:
  6790 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;  s               2  [STACK] PTR const unsigned char 
  6793 ;;		 -> STR_60(1), STR_45(1), 
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;  u               4  [STACK] struct .
  6796 ;; Return value:  Size  Location     Type
  6797 ;;                  4  [STACK] float 
  6798 ;; Registers used:
  6799 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/1
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6809 ;;Total ram usage:        0 bytes
  6810 ;; Hardware stack levels used:    1
  6811 ;; Hardware stack levels required when called:   15
  6812 ;; This function calls:
  6813 ;;		Nothing
  6814 ;; This function is called by:
  6815 ;;		_conv_raw_result
  6816 ;; This function uses a reentrant model
  6817 ;;
  6818                           
  6819                           	psect	text21
  6820  018D48                     __ptext21:
  6821                           	opt callstack 0
  6822  018D48                     _nanf:
  6823                           	opt callstack 0
  6824                           
  6825                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6826  018D48  52E6               	movf	postinc1,f,c
  6827  018D4A  52E6               	movf	postinc1,f,c
  6828  018D4C  52E6               	movf	postinc1,f,c
  6829  018D4E  52E6               	movf	postinc1,f,c
  6830                           
  6831                           ;incstack = 0
  6832  018D50  0EFF               	movlw	255
  6833  018D52  6E09               	movwf	(btemp+8)^0,c
  6834  018D54  0EFF               	movlw	255
  6835  018D56  6E0A               	movwf	(btemp+9)^0,c
  6836  018D58  0EFF               	movlw	255
  6837  018D5A  6E0B               	movwf	(btemp+10)^0,c
  6838  018D5C  0E7F               	movlw	127
  6839  018D5E  6E0C               	movwf	(btemp+11)^0,c
  6840                           
  6841                           ;stkvar	_u @ sp[(-4)+0]
  6842  018D60  0EFC               	movlw	-4
  6843  018D62  0060  F027  FFE3   	movff	btemp+8,plusw1
  6844  018D68  0EFD               	movlw	-3
  6845  018D6A  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6846  018D70  0EFE               	movlw	-2
  6847  018D72  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6848  018D78  0EFF               	movlw	-1
  6849  018D7A  0060  F033  FFE3   	movff	btemp+11,plusw1
  6850                           
  6851                           ;stkvar	_u @ sp[(-4)+0]
  6852  018D80  0EFC               	movlw	-4
  6853  018D82  006F FF8C  F001    	movff	plusw1,btemp
  6854  018D88  0EFD               	movlw	-3
  6855  018D8A  006F FF8C  F002    	movff	plusw1,btemp+1
  6856  018D90  0EFE               	movlw	-2
  6857  018D92  006F FF8C  F003    	movff	plusw1,btemp+2
  6858  018D98  0EFF               	movlw	-1
  6859  018D9A  006F FF8C  F004    	movff	plusw1,btemp+3
  6860                           
  6861                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  6862  018DA0  0EFA               	movlw	250
  6863  018DA2  26E1               	addwf	fsr1l,f,c
  6864  018DA4  0EFF               	movlw	255
  6865  018DA6  22E2               	addwfc	fsr1h,f,c
  6866  018DA8  0012               	return		;funcret
  6867  018DAA                     __end_of_nanf:
  6868                           	opt callstack 0
  6869                           
  6870 ;; *************** function _get_raw_result *****************
  6871 ;; Defined at:
  6872 ;;		line 72 in file "daq.c"
  6873 ;; Parameters:    Size  Location     Type
  6874 ;;  index           1  [STACK] const enum E16136
  6875 ;; Auto vars:     Size  Location     Type
  6876 ;;		None
  6877 ;; Return value:  Size  Location     Type
  6878 ;;                  2  [STACK] unsigned short 
  6879 ;; Registers used:
  6880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6881 ;; Tracked objects:
  6882 ;;		On entry : 0/2
  6883 ;;		On exit  : 0/0
  6884 ;;		Unchanged: 0/0
  6885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6890 ;;Total ram usage:        0 bytes
  6891 ;; Hardware stack levels used:    1
  6892 ;; Hardware stack levels required when called:   15
  6893 ;; This function calls:
  6894 ;;		Nothing
  6895 ;; This function is called by:
  6896 ;;		_main
  6897 ;;		_conv_raw_result
  6898 ;; This function uses a reentrant model
  6899 ;;
  6900                           
  6901                           	psect	text22
  6902  019B94                     __ptext22:
  6903                           	opt callstack 0
  6904  019B94                     _get_raw_result:
  6905                           	opt callstack 13
  6906                           
  6907                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  6908                           ;stkvar	_index @ sp[(0)+-1]
  6909                           
  6910                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6911                           ;incstack = 0
  6912  019B94  0EFF               	movlw	-1
  6913  019B96  50E3               	movf	plusw1,w,c
  6914  019B98  0D02               	mullw	2
  6915  019B9A  50F3               	movf	243,w,c
  6916  019B9C  0FCB               	addlw	low _R
  6917  019B9E  6ED9               	movwf	fsr2l,c
  6918  019BA0  6ADA               	clrf	fsr2h,c
  6919  019BA2  006F FF78  F001    	movff	postinc2,btemp
  6920  019BA8  006F FF74  F002    	movff	postdec2,btemp+1
  6921                           
  6922                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  6923  019BAE  52E5               	movf	postdec1,f,c
  6924  019BB0  0012               	return		;funcret
  6925  019BB2                     __end_of_get_raw_result:
  6926                           	opt callstack 0
  6927                           
  6928 ;; *************** function ___xxtofl *****************
  6929 ;; Defined at:
  6930 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  6931 ;; Parameters:    Size  Location     Type
  6932 ;;  sign            1  [STACK] unsigned char 
  6933 ;;  val             4  [STACK] long 
  6934 ;; Auto vars:     Size  Location     Type
  6935 ;;  arg             4  [STACK] unsigned long 
  6936 ;;  exp             1  [STACK] unsigned char 
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  4  [STACK] unsigned char 
  6939 ;; Registers used:
  6940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/1
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6950 ;;Total ram usage:        0 bytes
  6951 ;; Hardware stack levels used:    1
  6952 ;; Hardware stack levels required when called:   15
  6953 ;; This function calls:
  6954 ;;		Nothing
  6955 ;; This function is called by:
  6956 ;;		_conv_raw_result
  6957 ;;		_calc_bsoc
  6958 ;;		_init_bsoc
  6959 ;; This function uses a reentrant model
  6960 ;;
  6961                           
  6962                           	psect	text23
  6963  0164F8                     __ptext23:
  6964                           	opt callstack 0
  6965  0164F8                     ___xxtofl:
  6966                           	opt callstack 0
  6967                           
  6968                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6969  0164F8  0E05               	movlw	5
  6970  0164FA  26E1               	addwf	fsr1l,f,c
  6971  0164FC  0E00               	movlw	0
  6972  0164FE  22E2               	addwfc	fsr1h,f,c
  6973                           
  6974                           ;stkvar	_sign @ sp[(-5)+-1]
  6975                           
  6976                           ;incstack = 0
  6977 ;; hardware stack exceeded
  6978  016500  0EFA               	movlw	-6
  6979  016502  50E3               	movf	plusw1,w,c
  6980  016504  B4D8               	btfsc	status,2,c
  6981  016506  D01D               	goto	l8874
  6982                           
  6983                           ;stkvar	_val @ sp[(-5)+-5]
  6984  016508  0EF9               	movlw	-7
  6985  01650A  AEE3               	btfss	plusw1,7,c
  6986  01650C  D01A               	goto	l8874
  6987                           
  6988                           ;stkvar	_val @ sp[(-5)+-5]
  6989  01650E  0EF6               	movlw	-10
  6990  016510  006F FF8C  F009    	movff	plusw1,btemp+8
  6991  016516  0EF7               	movlw	-9
  6992  016518  006F FF8C  F00A    	movff	plusw1,btemp+9
  6993  01651E  0EF8               	movlw	-8
  6994  016520  006F FF8C  F00B    	movff	plusw1,btemp+10
  6995  016526  0EF9               	movlw	-7
  6996  016528  006F FF8C  F00C    	movff	plusw1,btemp+11
  6997  01652E  1E09               	comf	(btemp+8)^0,f,c
  6998  016530  1E0A               	comf	(btemp+9)^0,f,c
  6999  016532  1E0B               	comf	(btemp+10)^0,f,c
  7000  016534  1E0C               	comf	(btemp+11)^0,f,c
  7001  016536  2A09               	incf	(btemp+8)^0,f,c
  7002  016538  0E00               	movlw	0
  7003  01653A  220A               	addwfc	(btemp+9)^0,f,c
  7004  01653C  220B               	addwfc	(btemp+10)^0,f,c
  7005  01653E  220C               	addwfc	(btemp+11)^0,f,c
  7006  016540  D010               	goto	L5
  7007  016542                     l8874:
  7008                           
  7009                           ;stkvar	_val @ sp[(-5)+-5]
  7010  016542  0EF6               	movlw	-10
  7011  016544  006F FF8C  F009    	movff	plusw1,btemp+8
  7012  01654A  0EF7               	movlw	-9
  7013  01654C  006F FF8C  F00A    	movff	plusw1,btemp+9
  7014  016552  0EF8               	movlw	-8
  7015  016554  006F FF8C  F00B    	movff	plusw1,btemp+10
  7016  01655A  0EF9               	movlw	-7
  7017  01655C  006F FF8C  F00C    	movff	plusw1,btemp+11
  7018  016562                     L5:
  7019                           
  7020                           ;stkvar	_arg @ sp[(-5)+0]
  7021  016562  0EFB               	movlw	-5
  7022  016564  0060  F027  FFE3   	movff	btemp+8,plusw1
  7023  01656A  0EFC               	movlw	-4
  7024  01656C  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7025  016572  0EFD               	movlw	-3
  7026  016574  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7027  01657A  0EFE               	movlw	-2
  7028  01657C  0060  F033  FFE3   	movff	btemp+11,plusw1
  7029                           
  7030                           ;stkvar	_val @ sp[(-5)+-5]
  7031  016582  0EF6               	movlw	-10
  7032  016584  50E3               	movf	plusw1,w,c
  7033  016586  E113               	bnz	l8882
  7034  016588  0EF7               	movlw	-9
  7035  01658A  50E3               	movf	plusw1,w,c
  7036  01658C  E110               	bnz	l8882
  7037  01658E  0EF8               	movlw	-8
  7038  016590  50E3               	movf	plusw1,w,c
  7039  016592  E10D               	bnz	l8882
  7040  016594  0EF9               	movlw	-7
  7041  016596  50E3               	movf	plusw1,w,c
  7042  016598  A4D8               	btfss	status,2,c
  7043  01659A  D009               	goto	l8882
  7044  01659C  0E00               	movlw	0
  7045  01659E  6E01               	movwf	btemp^0,c
  7046  0165A0  0E00               	movlw	0
  7047  0165A2  6E02               	movwf	(btemp+1)^0,c
  7048  0165A4  0E00               	movlw	0
  7049  0165A6  6E03               	movwf	(btemp+2)^0,c
  7050  0165A8  0E00               	movlw	0
  7051  0165AA  6E04               	movwf	(btemp+3)^0,c
  7052  0165AC  D0A2               	goto	l2893
  7053  0165AE                     l8882:
  7054  0165AE  0E96               	movlw	150
  7055  0165B0  6E0C               	movwf	(btemp+11)^0,c
  7056                           
  7057                           ;stkvar	_exp @ sp[(-5)+4]
  7058  0165B2  0EFF               	movlw	-1
  7059  0165B4  0060  F033  FFE3   	movff	btemp+11,plusw1
  7060  0165BA  D00B               	goto	l8886
  7061  0165BC                     l8884:
  7062                           
  7063                           ;stkvar	_exp @ sp[(-5)+4]
  7064  0165BC  0EFF               	movlw	-1
  7065  0165BE  2AE3               	incf	plusw1,f,c
  7066                           
  7067                           ;stkvar	_arg @ sp[(-5)+0]
  7068  0165C0  90D8               	bcf	status,0,c
  7069  0165C2  0EFE               	movlw	-2
  7070  0165C4  32E3               	rrcf	plusw1,f,c
  7071  0165C6  0EFD               	movlw	-3
  7072  0165C8  32E3               	rrcf	plusw1,f,c
  7073  0165CA  0EFC               	movlw	-4
  7074  0165CC  32E3               	rrcf	plusw1,f,c
  7075  0165CE  0EFB               	movlw	-5
  7076  0165D0  32E3               	rrcf	plusw1,f,c
  7077  0165D2                     l8886:
  7078                           
  7079                           ;stkvar	_arg @ sp[(-5)+0]
  7080  0165D2  50E1               	movf	fsr1l,w,c
  7081  0165D4  0FFB               	addlw	-5
  7082  0165D6  6ED9               	movwf	fsr2l,c
  7083  0165D8  50E2               	movf	fsr1h,w,c
  7084  0165DA  6EDA               	movwf	fsr2h,c
  7085  0165DC  0EFF               	movlw	255
  7086  0165DE  22DA               	addwfc	fsr2h,f,c
  7087  0165E0  52DE               	movf	postinc2,f,c
  7088  0165E2  52DE               	movf	postinc2,f,c
  7089  0165E4  52DE               	movf	postinc2,f,c
  7090  0165E6  0EFE               	movlw	254
  7091  0165E8  14DD               	andwf	postdec2,w,c
  7092  0165EA  B4D8               	btfsc	status,2,c
  7093  0165EC  D018               	goto	l8894
  7094  0165EE  D7E6               	goto	l8884
  7095  0165F0                     l8888:
  7096                           
  7097                           ;stkvar	_exp @ sp[(-5)+4]
  7098  0165F0  0EFF               	movlw	-1
  7099  0165F2  2AE3               	incf	plusw1,f,c
  7100                           
  7101                           ;stkvar	_arg @ sp[(-5)+0]
  7102  0165F4  50E1               	movf	fsr1l,w,c
  7103  0165F6  0FFB               	addlw	-5
  7104  0165F8  6ED9               	movwf	fsr2l,c
  7105  0165FA  50E2               	movf	fsr1h,w,c
  7106  0165FC  6EDA               	movwf	fsr2h,c
  7107  0165FE  0EFF               	movlw	255
  7108  016600  22DA               	addwfc	fsr2h,f,c
  7109  016602  2ADE               	incf	postinc2,f,c
  7110  016604  0E00               	movlw	0
  7111  016606  22DE               	addwfc	postinc2,f,c
  7112  016608  22DE               	addwfc	postinc2,f,c
  7113  01660A  22DE               	addwfc	postinc2,f,c
  7114                           
  7115                           ;stkvar	_arg @ sp[(-5)+0]
  7116  01660C  90D8               	bcf	status,0,c
  7117  01660E  0EFE               	movlw	-2
  7118  016610  32E3               	rrcf	plusw1,f,c
  7119  016612  0EFD               	movlw	-3
  7120  016614  32E3               	rrcf	plusw1,f,c
  7121  016616  0EFC               	movlw	-4
  7122  016618  32E3               	rrcf	plusw1,f,c
  7123  01661A  0EFB               	movlw	-5
  7124  01661C  32E3               	rrcf	plusw1,f,c
  7125  01661E                     l8894:
  7126                           
  7127                           ;stkvar	_arg @ sp[(-5)+0]
  7128  01661E  50E1               	movf	fsr1l,w,c
  7129  016620  0FFB               	addlw	-5
  7130  016622  6ED9               	movwf	fsr2l,c
  7131  016624  50E2               	movf	fsr1h,w,c
  7132  016626  6EDA               	movwf	fsr2h,c
  7133  016628  0EFF               	movlw	255
  7134  01662A  22DA               	addwfc	fsr2h,f,c
  7135  01662C  52DE               	movf	postinc2,f,c
  7136  01662E  52DE               	movf	postinc2,f,c
  7137  016630  52DE               	movf	postinc2,f,c
  7138  016632  0EFF               	movlw	255
  7139  016634  14DD               	andwf	postdec2,w,c
  7140  016636  B4D8               	btfsc	status,2,c
  7141  016638  D00C               	goto	l8898
  7142  01663A  D7DA               	goto	l8888
  7143  01663C                     l8896:
  7144                           
  7145                           ;stkvar	_exp @ sp[(-5)+4]
  7146  01663C  0EFF               	movlw	-1
  7147  01663E  06E3               	decf	plusw1,f,c
  7148                           
  7149                           ;stkvar	_arg @ sp[(-5)+0]
  7150  016640  90D8               	bcf	status,0,c
  7151  016642  0EFB               	movlw	-5
  7152  016644  36E3               	rlcf	plusw1,f,c
  7153  016646  0EFC               	movlw	-4
  7154  016648  36E3               	rlcf	plusw1,f,c
  7155  01664A  0EFD               	movlw	-3
  7156  01664C  36E3               	rlcf	plusw1,f,c
  7157  01664E  0EFE               	movlw	-2
  7158  016650  36E3               	rlcf	plusw1,f,c
  7159  016652                     l8898:
  7160                           
  7161                           ;stkvar	_arg @ sp[(-5)+0]
  7162  016652  0EFD               	movlw	-3
  7163  016654  BEE3               	btfsc	plusw1,7,c
  7164  016656  D007               	goto	u8170
  7165                           
  7166                           ;stkvar	_exp @ sp[(-5)+4]
  7167  016658  0EFF               	movlw	-1
  7168  01665A  006F FF8C  F001    	movff	plusw1,btemp
  7169  016660  0E02               	movlw	2
  7170  016662  6001               	cpfslt	btemp^0,c
  7171  016664  D7EB               	goto	l8896
  7172  016666                     u8170:
  7173                           
  7174                           ;stkvar	_exp @ sp[(-5)+4]
  7175  016666  0EFF               	movlw	-1
  7176  016668  B0E3               	btfsc	plusw1,0,c
  7177  01666A  D002               	goto	l8906
  7178                           
  7179                           ;stkvar	_arg @ sp[(-5)+0]
  7180  01666C  0EFD               	movlw	-3
  7181  01666E  9EE3               	bcf	plusw1,7,c
  7182  016670                     l8906:
  7183                           
  7184                           ;stkvar	_exp @ sp[(-5)+4]
  7185  016670  50E1               	movf	fsr1l,w,c
  7186  016672  0FFF               	addlw	-1
  7187  016674  6ED9               	movwf	fsr2l,c
  7188  016676  50E2               	movf	fsr1h,w,c
  7189  016678  6EDA               	movwf	fsr2h,c
  7190  01667A  0EFF               	movlw	255
  7191  01667C  22DA               	addwfc	fsr2h,f,c
  7192  01667E  90D8               	bcf	status,0,c
  7193  016680  32DF               	rrcf	indf2,f,c
  7194                           
  7195                           ;stkvar	_exp @ sp[(-5)+4]
  7196  016682  0EFF               	movlw	-1
  7197  016684  006F FF8C  F00C    	movff	plusw1,btemp+11
  7198  01668A  0060  F030  F005   	movff	btemp+11,btemp+4
  7199  016690  6A06               	clrf	(btemp+5)^0,c
  7200  016692  6A07               	clrf	(btemp+6)^0,c
  7201  016694  6A08               	clrf	(btemp+7)^0,c
  7202  016696  0060  F014  F008   	movff	btemp+4,btemp+7
  7203  01669C  6A07               	clrf	(btemp+6)^0,c
  7204  01669E  6A06               	clrf	(btemp+5)^0,c
  7205  0166A0  6A05               	clrf	(btemp+4)^0,c
  7206                           
  7207                           ;stkvar	_arg @ sp[(-5)+0]
  7208  0166A2  50E1               	movf	fsr1l,w,c
  7209  0166A4  0FFB               	addlw	-5
  7210  0166A6  6ED9               	movwf	fsr2l,c
  7211  0166A8  50E2               	movf	fsr1h,w,c
  7212  0166AA  6EDA               	movwf	fsr2h,c
  7213  0166AC  0EFF               	movlw	255
  7214  0166AE  22DA               	addwfc	fsr2h,f,c
  7215  0166B0  5005               	movf	(btemp+4)^0,w,c
  7216  0166B2  12DE               	iorwf	postinc2,f,c
  7217  0166B4  5006               	movf	(btemp+5)^0,w,c
  7218  0166B6  12DE               	iorwf	postinc2,f,c
  7219  0166B8  5007               	movf	(btemp+6)^0,w,c
  7220  0166BA  12DE               	iorwf	postinc2,f,c
  7221  0166BC  5008               	movf	(btemp+7)^0,w,c
  7222  0166BE  12DE               	iorwf	postinc2,f,c
  7223                           
  7224                           ;stkvar	_sign @ sp[(-5)+-1]
  7225  0166C0  0EFA               	movlw	-6
  7226  0166C2  50E3               	movf	plusw1,w,c
  7227  0166C4  B4D8               	btfsc	status,2,c
  7228  0166C6  D005               	goto	l8916
  7229                           
  7230                           ;stkvar	_val @ sp[(-5)+-5]
  7231  0166C8  0EF9               	movlw	-7
  7232  0166CA  AEE3               	btfss	plusw1,7,c
  7233  0166CC  D002               	goto	l8916
  7234                           
  7235                           ;stkvar	_arg @ sp[(-5)+0]
  7236  0166CE  0EFE               	movlw	-2
  7237  0166D0  8EE3               	bsf	plusw1,7,c
  7238  0166D2                     l8916:
  7239                           
  7240                           ;stkvar	_arg @ sp[(-5)+0]
  7241  0166D2  0EFB               	movlw	-5
  7242  0166D4  006F FF8C  F001    	movff	plusw1,btemp
  7243  0166DA  0EFC               	movlw	-4
  7244  0166DC  006F FF8C  F002    	movff	plusw1,btemp+1
  7245  0166E2  0EFD               	movlw	-3
  7246  0166E4  006F FF8C  F003    	movff	plusw1,btemp+2
  7247  0166EA  0EFE               	movlw	-2
  7248  0166EC  006F FF8C  F004    	movff	plusw1,btemp+3
  7249  0166F2                     l2893:
  7250                           
  7251                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  7252  0166F2  0EF6               	movlw	246
  7253  0166F4  26E1               	addwf	fsr1l,f,c
  7254  0166F6  0EFF               	movlw	255
  7255  0166F8  22E2               	addwfc	fsr1h,f,c
  7256  0166FA  0012               	return		;funcret
  7257  0166FC                     __end_of___xxtofl:
  7258                           	opt callstack 0
  7259                           
  7260 ;; *************** function _clear_hid_pflags *****************
  7261 ;; Defined at:
  7262 ;;		line 51 in file "hid.c"
  7263 ;; Parameters:    Size  Location     Type
  7264 ;;  h               1  [STACK] PTR struct H_data
  7265 ;;		 -> H(7), 
  7266 ;; Auto vars:     Size  Location     Type
  7267 ;;		None
  7268 ;; Return value:  Size  Location     Type
  7269 ;;                  1  [STACK] void 
  7270 ;; Registers used:
  7271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7272 ;; Tracked objects:
  7273 ;;		On entry : 3F/0
  7274 ;;		On exit  : 0/0
  7275 ;;		Unchanged: 0/0
  7276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7281 ;;Total ram usage:        0 bytes
  7282 ;; Hardware stack levels used:    1
  7283 ;; Hardware stack levels required when called:   15
  7284 ;; This function calls:
  7285 ;;		Nothing
  7286 ;; This function is called by:
  7287 ;;		_main
  7288 ;; This function uses a reentrant model
  7289 ;;
  7290                           
  7291                           	psect	text24
  7292  019A3C                     __ptext24:
  7293                           	opt callstack 0
  7294  019A3C                     _clear_hid_pflags:
  7295                           	opt callstack 15
  7296                           
  7297                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  7298                           ;stkvar	_h @ sp[(0)+-1]
  7299                           
  7300                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7301                           ;incstack = 0
  7302  019A3C  0EFF               	movlw	-1
  7303  019A3E  50E3               	movf	plusw1,w,c
  7304  019A40  6ED9               	movwf	fsr2l,c
  7305  019A42  6ADA               	clrf	fsr2h,c
  7306  019A44  0E03               	movlw	3
  7307  019A46  26D9               	addwf	fsr2l,f,c
  7308  019A48  0E00               	movlw	0
  7309  019A4A  6EDF               	movwf	indf2,c
  7310                           
  7311                           ;hid.c: 54:  h->enter_p = SW_OFF;
  7312                           ;stkvar	_h @ sp[(0)+-1]
  7313  019A4C  0EFF               	movlw	-1
  7314  019A4E  50E3               	movf	plusw1,w,c
  7315  019A50  6ED9               	movwf	fsr2l,c
  7316  019A52  6ADA               	clrf	fsr2h,c
  7317  019A54  0E05               	movlw	5
  7318  019A56  26D9               	addwf	fsr2l,f,c
  7319  019A58  0E00               	movlw	0
  7320  019A5A  6EDF               	movwf	indf2,c
  7321                           
  7322                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7323  019A5C  52E5               	movf	postdec1,f,c
  7324  019A5E  0012               	return		;funcret
  7325  019A60                     __end_of_clear_hid_pflags:
  7326                           	opt callstack 0
  7327                           
  7328 ;; *************** function _clear_adc_scan *****************
  7329 ;; Defined at:
  7330 ;;		line 64 in file "daq.c"
  7331 ;; Parameters:    Size  Location     Type
  7332 ;;		None
  7333 ;; Auto vars:     Size  Location     Type
  7334 ;;		None
  7335 ;; Return value:  Size  Location     Type
  7336 ;;                  1  [STACK] void 
  7337 ;; Registers used:
  7338 ;;		None
  7339 ;; Tracked objects:
  7340 ;;		On entry : 0/1
  7341 ;;		On exit  : 3F/0
  7342 ;;		Unchanged: 0/0
  7343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7348 ;;Total ram usage:        0 bytes
  7349 ;; Hardware stack levels used:    1
  7350 ;; Hardware stack levels required when called:   15
  7351 ;; This function calls:
  7352 ;;		Nothing
  7353 ;; This function is called by:
  7354 ;;		_main
  7355 ;; This function uses a reentrant model
  7356 ;;
  7357                           
  7358                           	psect	text25
  7359  019DA2                     __ptext25:
  7360                           	opt callstack 0
  7361  019DA2                     _clear_adc_scan:
  7362                           	opt callstack 15
  7363                           
  7364                           ;daq.c: 66:  R.done = 0;
  7365                           
  7366                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7367                           ;incstack = 0
  7368  019DA2  0100               	movlb	0	; () banked
  7369  019DA4  6BF2               	clrf	(_R+39)& (0+255),b	;volatile
  7370                           
  7371                           ; BSR set to: 0
  7372                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7373  019DA6  0012               	return		;funcret
  7374  019DA8                     __end_of_clear_adc_scan:
  7375                           	opt callstack 0
  7376                           
  7377 ;; *************** function _check_help *****************
  7378 ;; Defined at:
  7379 ;;		line 40 in file "mconfig.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  flipper         1  [STACK] const _Bool 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;  estatus         1    0        _Bool 
  7384 ;; Return value:  Size  Location     Type
  7385 ;;                  1  [STACK] _Bool 
  7386 ;; Registers used:
  7387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7388 ;; Tracked objects:
  7389 ;;		On entry : 3F/2
  7390 ;;		On exit  : 0/0
  7391 ;;		Unchanged: 0/0
  7392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7397 ;;Total ram usage:        0 bytes
  7398 ;; Hardware stack levels used:    1
  7399 ;; Hardware stack levels required when called:   27
  7400 ;; This function calls:
  7401 ;;		_StartTimer
  7402 ;;		_TimerDone
  7403 ;;		_display_help
  7404 ;;		_display_info
  7405 ;;		_get_vterm_ptr
  7406 ;;		_help_button
  7407 ;;		_mode_lamp_bright
  7408 ;;		_mode_lamp_dim
  7409 ;;		_set_display_info
  7410 ;;		_set_temp_display_help
  7411 ;;		_set_vterm
  7412 ;;		_sprintf
  7413 ;;		_update_lcd
  7414 ;;		_vterm_dump
  7415 ;; This function is called by:
  7416 ;;		_main
  7417 ;; This function uses a reentrant model
  7418 ;;
  7419                           
  7420                           	psect	text26
  7421  0162E6                     __ptext26:
  7422                           	opt callstack 0
  7423  0162E6                     _check_help:
  7424                           	opt callstack 3
  7425                           
  7426                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  7427                           
  7428                           ; BSR set to: 0
  7429                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7430                           ;incstack = 0
  7431  0162E6  EC39  F0CA         	call	_help_button	;wreg free
  7432  0162EA  5001               	movf	btemp^0,w,c
  7433  0162EC  B4D8               	btfsc	status,2,c
  7434  0162EE  D0D0               	goto	l11672
  7435  0162F0  ECC1  F0CE         	call	_display_info	;wreg free
  7436  0162F4  0401               	decf	btemp^0,w,c
  7437  0162F6  B4D8               	btfsc	status,2,c
  7438  0162F8  D0CB               	goto	l11672
  7439                           
  7440                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  7441  0162FA  0EDC               	movlw	220
  7442  0162FC  6EE6               	movwf	postinc1,c
  7443  0162FE  0E05               	movlw	5
  7444  016300  6EE6               	movwf	postinc1,c
  7445  016302  0E0B               	movlw	11
  7446  016304  6EE6               	movwf	postinc1,c
  7447  016306  EC9A  F0C9         	call	_StartTimer	;wreg free
  7448                           
  7449                           ;mconfig.c: 48:   if (V.debug)
  7450  01630A  0102               	movlb	2	; () banked
  7451  01630C  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  7452                           
  7453                           ; BSR set to: 2
  7454                           ;mconfig.c: 49:    vterm_dump();
  7455  01630E  EC88  F0BA         	call	_vterm_dump	;wreg free
  7456                           
  7457                           ;mconfig.c: 51:   set_vterm(1);
  7458  016312  0E01               	movlw	1
  7459  016314  6EE6               	movwf	postinc1,c
  7460  016316  ECD9  F0CD         	call	_set_vterm	;wreg free
  7461                           
  7462                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  7463  01631A  ECC1  F0CE         	call	_display_info	;wreg free
  7464  01631E  5001               	movf	btemp^0,w,c
  7465  016320  6EE6               	movwf	postinc1,c
  7466  016322  EC7B  F0CE         	call	_set_temp_display_help	;wreg free
  7467                           
  7468                           ; BSR set to: 2
  7469                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  7470  016326  0E01               	movlw	1
  7471  016328  6EE6               	movwf	postinc1,c
  7472  01632A  ECE8  F0CD         	call	_set_display_info	;wreg free
  7473                           
  7474                           ;mconfig.c: 54:   if (flipper) {
  7475                           ;stkvar	_flipper @ sp[(0)+-1]
  7476  01632E  0EFF               	movlw	-1
  7477  016330  50E3               	movf	plusw1,w,c
  7478  016332  B4D8               	btfsc	status,2,c
  7479  016334  D019               	goto	l11658
  7480                           
  7481                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  7482  016336  0EC0               	movlw	low STR_27
  7483  016338  6EE6               	movwf	postinc1,c
  7484  01633A  0EFF               	movlw	high STR_27
  7485  01633C  6EE6               	movwf	postinc1,c
  7486  01633E  0E7F               	movlw	low STR_29
  7487  016340  6EE6               	movwf	postinc1,c
  7488  016342  0EFE               	movlw	high STR_29
  7489  016344  6EE6               	movwf	postinc1,c
  7490  016346  0E01               	movlw	1
  7491  016348  6EE6               	movwf	postinc1,c
  7492  01634A  0E00               	movlw	0
  7493  01634C  6EE6               	movwf	postinc1,c
  7494  01634E  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  7495  016352  0060  F007  FFE6   	movff	btemp,postinc1
  7496  016358  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7497  01635E  0E06               	movlw	6
  7498  016360  6EE6               	movwf	postinc1,c
  7499  016362  EC6A  F0BE         	call	_sprintf	;wreg free
  7500                           
  7501                           ;mconfig.c: 56:   } else {
  7502  016366  D018               	goto	l1641
  7503  016368                     l11658:
  7504                           
  7505                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  7506  016368  0ED6               	movlw	low STR_28
  7507  01636A  6EE6               	movwf	postinc1,c
  7508  01636C  0EFF               	movlw	high STR_28
  7509  01636E  6EE6               	movwf	postinc1,c
  7510  016370  0E7F               	movlw	low STR_29
  7511  016372  6EE6               	movwf	postinc1,c
  7512  016374  0EFE               	movlw	high STR_29
  7513  016376  6EE6               	movwf	postinc1,c
  7514  016378  0E01               	movlw	1
  7515  01637A  6EE6               	movwf	postinc1,c
  7516  01637C  0E00               	movlw	0
  7517  01637E  6EE6               	movwf	postinc1,c
  7518  016380  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  7519  016384  0060  F007  FFE6   	movff	btemp,postinc1
  7520  01638A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7521  016390  0E06               	movlw	6
  7522  016392  6EE6               	movwf	postinc1,c
  7523  016394  EC6A  F0BE         	call	_sprintf	;wreg free
  7524  016398                     l1641:
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  7528  016398  0102               	movlb	2	; () banked
  7529  01639A  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  7530  01639C  32E8               	rrcf	wreg,f,c
  7531  01639E  32E8               	rrcf	wreg,f,c
  7532  0163A0  0B03               	andlw	3
  7533  0163A2  0D24               	mullw	36
  7534  0163A4  0E12               	movlw	18
  7535  0163A6  26F3               	addwf	243,f,c
  7536  0163A8  0E00               	movlw	0
  7537  0163AA  22F4               	addwfc	244,f,c
  7538  0163AC  0E51               	movlw	low _T
  7539  0163AE  6E0B               	movwf	(btemp+10)^0,c
  7540  0163B0  0EFD               	movlw	high _T
  7541  0163B2  6E0C               	movwf	(btemp+11)^0,c
  7542  0163B4  50F3               	movf	243,w,c
  7543  0163B6  260B               	addwf	(btemp+10)^0,f,c
  7544  0163B8  50F4               	movf	244,w,c
  7545  0163BA  220C               	addwfc	(btemp+11)^0,f,c
  7546  0163BC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7547  0163C2  0060  F033  FFE6   	movff	btemp+11,postinc1
  7548  0163C8  0ECC               	movlw	low STR_31
  7549  0163CA  6EE6               	movwf	postinc1,c
  7550  0163CC  0EFF               	movlw	high STR_31
  7551  0163CE  6EE6               	movwf	postinc1,c
  7552  0163D0  0E01               	movlw	1
  7553  0163D2  6EE6               	movwf	postinc1,c
  7554  0163D4  0E01               	movlw	1
  7555  0163D6  6EE6               	movwf	postinc1,c
  7556  0163D8  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  7557  0163DC  0060  F007  FFE6   	movff	btemp,postinc1
  7558  0163E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7559  0163E8  0E06               	movlw	6
  7560  0163EA  6EE6               	movwf	postinc1,c
  7561  0163EC  EC6A  F0BE         	call	_sprintf	;wreg free
  7562                           
  7563                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  7564  0163F0  0102               	movlb	2	; () banked
  7565  0163F2  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  7566  0163F4  32E8               	rrcf	wreg,f,c
  7567  0163F6  32E8               	rrcf	wreg,f,c
  7568  0163F8  0B03               	andlw	3
  7569  0163FA  0D24               	mullw	36
  7570  0163FC  0E51               	movlw	low _T
  7571  0163FE  6E0B               	movwf	(btemp+10)^0,c
  7572  016400  0EFD               	movlw	high _T
  7573  016402  6E0C               	movwf	(btemp+11)^0,c
  7574  016404  50F3               	movf	243,w,c
  7575  016406  260B               	addwf	(btemp+10)^0,f,c
  7576  016408  50F4               	movf	244,w,c
  7577  01640A  220C               	addwfc	(btemp+11)^0,f,c
  7578  01640C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7579  016412  0060  F033  FFE6   	movff	btemp+11,postinc1
  7580  016418  0ECC               	movlw	low STR_31
  7581  01641A  6EE6               	movwf	postinc1,c
  7582  01641C  0EFF               	movlw	high STR_31
  7583  01641E  6EE6               	movwf	postinc1,c
  7584  016420  0E01               	movlw	1
  7585  016422  6EE6               	movwf	postinc1,c
  7586  016424  0E02               	movlw	2
  7587  016426  6EE6               	movwf	postinc1,c
  7588  016428  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  7589  01642C  0060  F007  FFE6   	movff	btemp,postinc1
  7590  016432  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7591  016438  0E06               	movlw	6
  7592  01643A  6EE6               	movwf	postinc1,c
  7593  01643C  EC6A  F0BE         	call	_sprintf	;wreg free
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;mconfig.c: 61:   V.help_id++;
  7597  016440  EE20  F29B         	lfsr	2,_V+155	;volatile
  7598  016444  38DF               	swapf	223,w,c
  7599  016446  6E0C               	movwf	(btemp+11)^0,c
  7600  016448  320C               	rrcf	(btemp+11)^0,f,c
  7601  01644A  300C               	rrcf	(btemp+11)^0,w,c
  7602  01644C  0B03               	andlw	3
  7603  01644E  6E0C               	movwf	(btemp+11)^0,c
  7604  016450  2A0C               	incf	(btemp+11)^0,f,c
  7605  016452  3A0C               	swapf	(btemp+11)^0,f,c
  7606  016454  360C               	rlcf	(btemp+11)^0,f,c
  7607  016456  360C               	rlcf	(btemp+11)^0,f,c
  7608  016458  50DF               	movf	223,w,c
  7609  01645A  180C               	xorwf	(btemp+11)^0,w,c
  7610  01645C  0B3F               	andlw	-193
  7611  01645E  180C               	xorwf	(btemp+11)^0,w,c
  7612  016460  6EDF               	movwf	223,c
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  7616  016462  0EB8               	movlw	184
  7617  016464  6EE6               	movwf	postinc1,c
  7618  016466  0E0B               	movlw	11
  7619  016468  6EE6               	movwf	postinc1,c
  7620  01646A  0E09               	movlw	9
  7621  01646C  6EE6               	movwf	postinc1,c
  7622  01646E  EC9A  F0C9         	call	_StartTimer	;wreg free
  7623                           
  7624                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  7625  016472  0EB8               	movlw	184
  7626  016474  6EE6               	movwf	postinc1,c
  7627  016476  0E0B               	movlw	11
  7628  016478  6EE6               	movwf	postinc1,c
  7629  01647A  0E07               	movlw	7
  7630  01647C  6EE6               	movwf	postinc1,c
  7631  01647E  EC9A  F0C9         	call	_StartTimer	;wreg free
  7632                           
  7633                           ;mconfig.c: 64:   mode_lamp_bright();
  7634  016482  EC8A  F0CE         	call	_mode_lamp_bright	;wreg free
  7635                           
  7636                           ;mconfig.c: 65:   update_lcd(1);
  7637  016486  0E01               	movlw	1
  7638  016488  6EE6               	movwf	postinc1,c
  7639  01648A  EC5B  F0BD         	call	_update_lcd	;wreg free
  7640                           
  7641                           ;mconfig.c: 67:  } else {
  7642  01648E  D032               	goto	l1642
  7643  016490                     l11672:
  7644                           
  7645                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  7646  016490  0E09               	movlw	9
  7647  016492  6EE6               	movwf	postinc1,c
  7648  016494  ECDF  F0CB         	call	_TimerDone	;wreg free
  7649  016498  5001               	movf	btemp^0,w,c
  7650  01649A  B4D8               	btfsc	status,2,c
  7651  01649C  D02B               	goto	l1642
  7652                           
  7653                           ;mconfig.c: 69:    set_vterm(0);
  7654  01649E  0E00               	movlw	0
  7655  0164A0  6EE6               	movwf	postinc1,c
  7656  0164A2  ECD9  F0CD         	call	_set_vterm	;wreg free
  7657                           
  7658                           ;mconfig.c: 70:    V.help = 0;
  7659  0164A6  0102               	movlb	2	; () banked
  7660  0164A8  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  7661                           
  7662                           ; BSR set to: 2
  7663                           ;mconfig.c: 71:    set_display_info(display_help());
  7664  0164AA  ECC5  F0CE         	call	_display_help	;wreg free
  7665  0164AE  5001               	movf	btemp^0,w,c
  7666  0164B0  6EE6               	movwf	postinc1,c
  7667  0164B2  ECE8  F0CD         	call	_set_display_info	;wreg free
  7668                           
  7669                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  7670  0164B6  0060  FA57  FFE6   	movff	_V+149,postinc1
  7671  0164BC  0060  FA5B  FFE6   	movff	_V+150,postinc1
  7672  0164C2  EC2F  F0CE         	call	_mode_lamp_dim	;wreg free
  7673                           
  7674                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  7675  0164C6  0E0B               	movlw	11
  7676  0164C8  6EE6               	movwf	postinc1,c
  7677  0164CA  ECDF  F0CB         	call	_TimerDone	;wreg free
  7678  0164CE  5001               	movf	btemp^0,w,c
  7679  0164D0  B4D8               	btfsc	status,2,c
  7680  0164D2  D010               	goto	l1642
  7681                           
  7682                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  7683  0164D4  0102               	movlb	2	; () banked
  7684  0164D6  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  7685  0164D8  A4D8               	btfss	status,2,c
  7686  0164DA  D002               	goto	u10970
  7687  0164DC  0E01               	movlw	1
  7688  0164DE  D001               	goto	u10980
  7689  0164E0                     u10970:
  7690  0164E0  0E00               	movlw	0
  7691  0164E2                     u10980:
  7692  0164E2  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  7693                           
  7694                           ; BSR set to: 2
  7695                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  7696  0164E4  0EDC               	movlw	220
  7697  0164E6  6EE6               	movwf	postinc1,c
  7698  0164E8  0E05               	movlw	5
  7699  0164EA  6EE6               	movwf	postinc1,c
  7700  0164EC  0E0B               	movlw	11
  7701  0164EE  6EE6               	movwf	postinc1,c
  7702  0164F0  EC9A  F0C9         	call	_StartTimer	;wreg free
  7703  0164F4                     l1642:
  7704                           
  7705                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7706  0164F4  52E5               	movf	postdec1,f,c
  7707  0164F6  0012               	return		;funcret
  7708  0164F8                     __end_of_check_help:
  7709                           	opt callstack 0
  7710                           
  7711 ;; *************** function _vterm_dump *****************
  7712 ;; Defined at:
  7713 ;;		line 121 in file "mconfig.c"
  7714 ;; Parameters:    Size  Location     Type
  7715 ;;		None
  7716 ;; Auto vars:     Size  Location     Type
  7717 ;;		None
  7718 ;; Return value:  Size  Location     Type
  7719 ;;                  1  [STACK] void 
  7720 ;; Registers used:
  7721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7722 ;; Tracked objects:
  7723 ;;		On entry : 3F/2
  7724 ;;		On exit  : 0/0
  7725 ;;		Unchanged: 0/0
  7726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7731 ;;Total ram usage:        0 bytes
  7732 ;; Hardware stack levels used:    1
  7733 ;; Hardware stack levels required when called:   26
  7734 ;; This function calls:
  7735 ;;		_WaitMs
  7736 ;;		_eaDogM_WriteStringAtPos
  7737 ;;		_get_vterm_ptr
  7738 ;;		_sprintf
  7739 ;;		_wait_lcd_done
  7740 ;; This function is called by:
  7741 ;;		_check_help
  7742 ;; This function uses a reentrant model
  7743 ;;
  7744                           
  7745                           	psect	text27
  7746  017510                     __ptext27:
  7747                           	opt callstack 0
  7748  017510                     _vterm_dump:
  7749                           	opt callstack 3
  7750                           
  7751                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  7752                           
  7753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7754                           ;incstack = 0
  7755  017510  0E01               	movlw	1
  7756  017512  6EE6               	movwf	postinc1,c
  7757  017514  0E00               	movlw	0
  7758  017516  6EE6               	movwf	postinc1,c
  7759  017518  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  7760  01751C  0060  F007  FFE6   	movff	btemp,postinc1
  7761  017522  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7762  017528  0E00               	movlw	0
  7763  01752A  6EE6               	movwf	postinc1,c
  7764  01752C  0E00               	movlw	0
  7765  01752E  6EE6               	movwf	postinc1,c
  7766  017530  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  7767  017534  0060  F007  FFE6   	movff	btemp,postinc1
  7768  01753A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7769  017540  0EA2               	movlw	low STR_33
  7770  017542  6EE6               	movwf	postinc1,c
  7771  017544  0EFF               	movlw	high STR_33
  7772  017546  6EE6               	movwf	postinc1,c
  7773  017548  0E01               	movlw	low (_V+1)
  7774  01754A  6EE6               	movwf	postinc1,c
  7775  01754C  0E02               	movlw	high (_V+1)
  7776  01754E  6EE6               	movwf	postinc1,c
  7777  017550  0E08               	movlw	8
  7778  017552  6EE6               	movwf	postinc1,c
  7779  017554  EC6A  F0BE         	call	_sprintf	;wreg free
  7780                           
  7781                           ; BSR set to: 0
  7782                           ;mconfig.c: 124:  wait_lcd_done();
  7783  017558  EC06  F0CE         	call	_wait_lcd_done	;wreg free
  7784                           
  7785                           ; BSR set to: 0
  7786                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  7787  01755C  0E01               	movlw	low (_V+1)
  7788  01755E  6EE6               	movwf	postinc1,c
  7789  017560  0E02               	movlw	high (_V+1)
  7790  017562  6EE6               	movwf	postinc1,c
  7791  017564  0E00               	movlw	0
  7792  017566  6EE6               	movwf	postinc1,c
  7793  017568  0E00               	movlw	0
  7794  01756A  6EE6               	movwf	postinc1,c
  7795  01756C  EC70  F0CA         	call	_eaDogM_WriteStringAtPos	;wreg free
  7796                           
  7797                           ; BSR set to: 59
  7798                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  7799  017570  0E01               	movlw	1
  7800  017572  6EE6               	movwf	postinc1,c
  7801  017574  0E01               	movlw	1
  7802  017576  6EE6               	movwf	postinc1,c
  7803  017578  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  7804  01757C  0060  F007  FFE6   	movff	btemp,postinc1
  7805  017582  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7806  017588  0E00               	movlw	0
  7807  01758A  6EE6               	movwf	postinc1,c
  7808  01758C  0E01               	movlw	1
  7809  01758E  6EE6               	movwf	postinc1,c
  7810  017590  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  7811  017594  0060  F007  FFE6   	movff	btemp,postinc1
  7812  01759A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7813  0175A0  0EA2               	movlw	low STR_33
  7814  0175A2  6EE6               	movwf	postinc1,c
  7815  0175A4  0EFF               	movlw	high STR_33
  7816  0175A6  6EE6               	movwf	postinc1,c
  7817  0175A8  0E01               	movlw	low (_V+1)
  7818  0175AA  6EE6               	movwf	postinc1,c
  7819  0175AC  0E02               	movlw	high (_V+1)
  7820  0175AE  6EE6               	movwf	postinc1,c
  7821  0175B0  0E08               	movlw	8
  7822  0175B2  6EE6               	movwf	postinc1,c
  7823  0175B4  EC6A  F0BE         	call	_sprintf	;wreg free
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;mconfig.c: 127:  wait_lcd_done();
  7827  0175B8  EC06  F0CE         	call	_wait_lcd_done	;wreg free
  7828                           
  7829                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  7830  0175BC  0E01               	movlw	low (_V+1)
  7831  0175BE  6EE6               	movwf	postinc1,c
  7832  0175C0  0E02               	movlw	high (_V+1)
  7833  0175C2  6EE6               	movwf	postinc1,c
  7834  0175C4  0E00               	movlw	0
  7835  0175C6  6EE6               	movwf	postinc1,c
  7836  0175C8  0E01               	movlw	1
  7837  0175CA  6EE6               	movwf	postinc1,c
  7838  0175CC  EC70  F0CA         	call	_eaDogM_WriteStringAtPos	;wreg free
  7839                           
  7840                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  7841  0175D0  0E01               	movlw	1
  7842  0175D2  6EE6               	movwf	postinc1,c
  7843  0175D4  0E02               	movlw	2
  7844  0175D6  6EE6               	movwf	postinc1,c
  7845  0175D8  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  7846  0175DC  0060  F007  FFE6   	movff	btemp,postinc1
  7847  0175E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7848  0175E8  0E00               	movlw	0
  7849  0175EA  6EE6               	movwf	postinc1,c
  7850  0175EC  0E02               	movlw	2
  7851  0175EE  6EE6               	movwf	postinc1,c
  7852  0175F0  EC37  F0CB         	call	_get_vterm_ptr	;wreg free
  7853  0175F4  0060  F007  FFE6   	movff	btemp,postinc1
  7854  0175FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7855  017600  0EA2               	movlw	low STR_33
  7856  017602  6EE6               	movwf	postinc1,c
  7857  017604  0EFF               	movlw	high STR_33
  7858  017606  6EE6               	movwf	postinc1,c
  7859  017608  0E01               	movlw	low (_V+1)
  7860  01760A  6EE6               	movwf	postinc1,c
  7861  01760C  0E02               	movlw	high (_V+1)
  7862  01760E  6EE6               	movwf	postinc1,c
  7863  017610  0E08               	movlw	8
  7864  017612  6EE6               	movwf	postinc1,c
  7865  017614  EC6A  F0BE         	call	_sprintf	;wreg free
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;mconfig.c: 130:  wait_lcd_done();
  7869  017618  EC06  F0CE         	call	_wait_lcd_done	;wreg free
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  7873  01761C  0E01               	movlw	low (_V+1)
  7874  01761E  6EE6               	movwf	postinc1,c
  7875  017620  0E02               	movlw	high (_V+1)
  7876  017622  6EE6               	movwf	postinc1,c
  7877  017624  0E00               	movlw	0
  7878  017626  6EE6               	movwf	postinc1,c
  7879  017628  0E02               	movlw	2
  7880  01762A  6EE6               	movwf	postinc1,c
  7881  01762C  EC70  F0CA         	call	_eaDogM_WriteStringAtPos	;wreg free
  7882                           
  7883                           ; BSR set to: 59
  7884                           ;mconfig.c: 132:  WaitMs(3000);
  7885  017630  0EB8               	movlw	184
  7886  017632  6EE6               	movwf	postinc1,c
  7887  017634  0E0B               	movlw	11
  7888  017636  6EE6               	movwf	postinc1,c
  7889  017638  EC55  F0CA         	call	_WaitMs	;wreg free
  7890                           
  7891                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7892  01763C  0012               	return		;funcret
  7893  01763E                     __end_of_vterm_dump:
  7894                           	opt callstack 0
  7895                           
  7896 ;; *************** function _sprintf *****************
  7897 ;; Defined at:
  7898 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  7899 ;; Parameters:    Size  Location     Type
  7900 ;;  s               2  [STACK] PTR unsigned char 
  7901 ;;		 -> D.lcd(288), D(290), port_data(512), V(188), 
  7902 ;;  fmt             2  [STACK] PTR const unsigned char 
  7903 ;;		 -> STR_46(75), STR_44(3), STR_43(3), STR_42(19), 
  7904 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
  7905 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
  7906 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
  7907 ;;		 -> STR_29(19), STR_23(17), STR_22(16), STR_21(16), 
  7908 ;;		 -> STR_20(19), STR_19(20), STR_18(19), STR_17(19), 
  7909 ;;		 -> STR_16(19), STR_15(19), STR_14(19), STR_13(19), 
  7910 ;;		 -> STR_12(19), STR_11(17), STR_10(16), STR_9(16), 
  7911 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
  7912 ;;		 -> STR_2(15), STR_1(17), 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  f               6  [STACK] struct _IO_FILE
  7915 ;;  ap              2  [STACK] PTR void [1]
  7916 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7917 ;;  ret             2    0        int 
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  2  [STACK] int 
  7920 ;; Registers used:
  7921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/2
  7924 ;;		On exit  : 3F/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7931 ;;Total ram usage:        0 bytes
  7932 ;; Hardware stack levels used:    1
  7933 ;; Hardware stack levels required when called:   23
  7934 ;; This function calls:
  7935 ;;		_vfprintf
  7936 ;; This function is called by:
  7937 ;;		_main
  7938 ;;		_check_help
  7939 ;;		_vterm_dump
  7940 ;;		_calc_bsoc
  7941 ;; This function uses a reentrant model
  7942 ;;
  7943                           
  7944                           	psect	text28
  7945  017CD4                     __ptext28:
  7946                           	opt callstack 0
  7947  017CD4                     _sprintf:
  7948                           	opt callstack 0
  7949                           
  7950                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 48, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7951  017CD4  0E08               	movlw	8
  7952  017CD6  26E1               	addwf	fsr1l,f,c
  7953  017CD8  0E00               	movlw	0
  7954  017CDA  22E2               	addwfc	fsr1h,f,c
  7955                           
  7956                           ;incstack = 0
  7957 ;; hardware stack exceeded
  7958  017CDC  0EFE               	movlw	254
  7959  017CDE  6E0B               	movwf	(btemp+10)^0,c
  7960  017CE0  0EFF               	movlw	255
  7961  017CE2  6E0C               	movwf	(btemp+11)^0,c
  7962                           
  7963                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  7964  017CE4  0EF5               	movlw	245
  7965  017CE6  24E1               	addwf	fsr1l,w,c
  7966  017CE8  6E09               	movwf	(btemp+8)^0,c
  7967  017CEA  0EFF               	movlw	255
  7968  017CEC  20E2               	addwfc	fsr1h,w,c
  7969  017CEE  6E0A               	movwf	(btemp+9)^0,c
  7970  017CF0  500B               	movf	(btemp+10)^0,w,c
  7971  017CF2  2609               	addwf	(btemp+8)^0,f,c
  7972  017CF4  500C               	movf	(btemp+11)^0,w,c
  7973  017CF6  220A               	addwfc	(btemp+9)^0,f,c
  7974                           
  7975                           ;stkvar	_ap @ sp[(-8)+6]
  7976  017CF8  0EFF               	movlw	-1
  7977  017CFA  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7978  017D00  0EFE               	movlw	-2
  7979  017D02  0060  F027  FFE3   	movff	btemp+8,plusw1
  7980                           
  7981                           ;stkvar	_s @ sp[(-8)+-3]
  7982  017D08  0EF5               	movlw	-11
  7983  017D0A  006F FF8C  F00B    	movff	plusw1,btemp+10
  7984  017D10  0EF6               	movlw	-10
  7985  017D12  006F FF8C  F00C    	movff	plusw1,btemp+11
  7986                           
  7987                           ;stkvar	_f @ sp[(-8)+0]
  7988  017D18  0EF9               	movlw	-7
  7989  017D1A  0060  F033  FFE3   	movff	btemp+11,plusw1
  7990  017D20  0EF8               	movlw	-8
  7991  017D22  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7992                           
  7993                           ;stkvar	_f @ sp[(-8)+0]
  7994  017D28  0EFA               	movlw	250
  7995  017D2A  24E1               	addwf	fsr1l,w,c
  7996  017D2C  6ED9               	movwf	fsr2l,c
  7997  017D2E  0EFF               	movlw	255
  7998  017D30  20E2               	addwfc	fsr1h,w,c
  7999  017D32  6EDA               	movwf	fsr2h,c
  8000  017D34  0E00               	movlw	0
  8001  017D36  6EDE               	movwf	postinc2,c
  8002  017D38  0E00               	movlw	0
  8003  017D3A  6EDD               	movwf	postdec2,c
  8004                           
  8005                           ;stkvar	_f @ sp[(-8)+0]
  8006  017D3C  0EFC               	movlw	252
  8007  017D3E  24E1               	addwf	fsr1l,w,c
  8008  017D40  6ED9               	movwf	fsr2l,c
  8009  017D42  0EFF               	movlw	255
  8010  017D44  20E2               	addwfc	fsr1h,w,c
  8011  017D46  6EDA               	movwf	fsr2h,c
  8012  017D48  0E00               	movlw	0
  8013  017D4A  6EDE               	movwf	postinc2,c
  8014  017D4C  0E00               	movlw	0
  8015  017D4E  6EDD               	movwf	postdec2,c
  8016                           
  8017                           ;stkvar	_ap @ sp[(-8)+6]
  8018  017D50  0EFE               	movlw	254
  8019  017D52  24E1               	addwf	fsr1l,w,c
  8020  017D54  6E01               	movwf	btemp^0,c
  8021  017D56  0EFF               	movlw	255
  8022  017D58  20E2               	addwfc	fsr1h,w,c
  8023  017D5A  6E02               	movwf	(btemp+1)^0,c
  8024  017D5C  0060  F007  FFE6   	movff	btemp,postinc1
  8025  017D62  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8026                           
  8027                           ;stkvar	_fmt @ sp[(-10)+-5]
  8028  017D68  0EF1               	movlw	-15
  8029  017D6A  006F FF8F FFE6     	movff	plusw1,postinc1
  8030  017D70  006F FF8F FFE6     	movff	plusw1,postinc1
  8031                           
  8032                           ;stkvar	_f @ sp[(-12)+0]
  8033  017D76  0EF4               	movlw	244
  8034  017D78  24E1               	addwf	fsr1l,w,c
  8035  017D7A  6E01               	movwf	btemp^0,c
  8036  017D7C  0EFF               	movlw	255
  8037  017D7E  20E2               	addwfc	fsr1h,w,c
  8038  017D80  6E02               	movwf	(btemp+1)^0,c
  8039  017D82  0060  F007  FFE6   	movff	btemp,postinc1
  8040  017D88  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8041  017D8E  ECD8  F0C1         	call	_vfprintf	;wreg free
  8042                           
  8043                           ; BSR set to: 0
  8044                           ;stkvar	_f @ sp[(-8)+0]
  8045  017D92  0EFA               	movlw	250
  8046  017D94  24E1               	addwf	fsr1l,w,c
  8047  017D96  6ED9               	movwf	fsr2l,c
  8048  017D98  0EFF               	movlw	255
  8049  017D9A  20E2               	addwfc	fsr1h,w,c
  8050  017D9C  6EDA               	movwf	fsr2h,c
  8051  017D9E  006F FF78  F00B    	movff	postinc2,btemp+10
  8052  017DA4  006F FF74  F00C    	movff	postdec2,btemp+11
  8053                           
  8054                           ;stkvar	_s @ sp[(-8)+-3]
  8055  017DAA  0EF5               	movlw	-11
  8056  017DAC  006F FF8C  F009    	movff	plusw1,btemp+8
  8057  017DB2  0EF6               	movlw	-10
  8058  017DB4  006F FF8C  F00A    	movff	plusw1,btemp+9
  8059  017DBA  500B               	movf	(btemp+10)^0,w,c
  8060  017DBC  2409               	addwf	(btemp+8)^0,w,c
  8061  017DBE  6ED9               	movwf	fsr2l,c
  8062  017DC0  500C               	movf	(btemp+11)^0,w,c
  8063  017DC2  200A               	addwfc	(btemp+9)^0,w,c
  8064  017DC4  6EDA               	movwf	fsr2h,c
  8065  017DC6  0E00               	movlw	0
  8066  017DC8  6EDF               	movwf	indf2,c
  8067                           
  8068                           ; BSR set to: 0
  8069                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 48, args
      +                          ize = 4, vargsize = 0
  8070  017DCA  0EF8               	movlw	248
  8071  017DCC  26E1               	addwf	fsr1l,f,c
  8072  017DCE  0EFF               	movlw	255
  8073  017DD0  22E2               	addwfc	fsr1h,f,c
  8074  017DD2  52E5               	movf	postdec1,f,c
  8075  017DD4  50E7               	movf	indf1,w,c
  8076  017DD6  5EE1               	subwf	fsr1l,f,c
  8077  017DD8  0E00               	movlw	0
  8078  017DDA  5AE2               	subwfb	fsr1h,f,c
  8079  017DDC  0012               	return		;funcret
  8080  017DDE                     __end_of_sprintf:
  8081                           	opt callstack 0
  8082                           
  8083 ;; *************** function _get_vterm_ptr *****************
  8084 ;; Defined at:
  8085 ;;		line 116 in file "mconfig.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  line            1  [STACK] const unsigned char 
  8088 ;;  vterm           1  [STACK] const unsigned char 
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;		None
  8091 ;; Return value:  Size  Location     Type
  8092 ;;                  2  [STACK] PTR unsigned char 
  8093 ;; Registers used:
  8094 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/2
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8104 ;;Total ram usage:        0 bytes
  8105 ;; Hardware stack levels used:    1
  8106 ;; Hardware stack levels required when called:   15
  8107 ;; This function calls:
  8108 ;;		Nothing
  8109 ;; This function is called by:
  8110 ;;		_main
  8111 ;;		_check_help
  8112 ;;		_vterm_dump
  8113 ;; This function uses a reentrant model
  8114 ;;
  8115                           
  8116                           	psect	text29
  8117  01966E                     __ptext29:
  8118                           	opt callstack 0
  8119  01966E                     _get_vterm_ptr:
  8120                           	opt callstack 15
  8121                           
  8122                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  8123                           ;stkvar	_vterm @ sp[(0)+-2]
  8124                           
  8125                           ; BSR set to: 0
  8126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8127                           ;incstack = 0
  8128  01966E  0EFE               	movlw	-2
  8129  019670  50E3               	movf	plusw1,w,c
  8130  019672  0B03               	andlw	3
  8131  019674  0D48               	mullw	72
  8132  019676  0EFF               	movlw	low _D
  8133  019678  6E01               	movwf	btemp^0,c
  8134  01967A  0E07               	movlw	high _D
  8135  01967C  6E02               	movwf	(btemp+1)^0,c
  8136  01967E  50F3               	movf	243,w,c
  8137  019680  2601               	addwf	btemp^0,f,c
  8138  019682  50F4               	movf	244,w,c
  8139  019684  2202               	addwfc	(btemp+1)^0,f,c
  8140                           
  8141                           ;stkvar	_line @ sp[(0)+-1]
  8142  019686  0EFF               	movlw	-1
  8143  019688  50E3               	movf	plusw1,w,c
  8144  01968A  0B03               	andlw	3
  8145  01968C  0D18               	mullw	24
  8146  01968E  50F3               	movf	243,w,c
  8147  019690  2601               	addwf	btemp^0,f,c
  8148  019692  50F4               	movf	244,w,c
  8149  019694  2202               	addwfc	(btemp+1)^0,f,c
  8150                           
  8151                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8152  019696  52E5               	movf	postdec1,f,c
  8153  019698  52E5               	movf	postdec1,f,c
  8154  01969A  0012               	return		;funcret
  8155  01969C                     __end_of_get_vterm_ptr:
  8156                           	opt callstack 0
  8157                           
  8158 ;; *************** function _WaitMs *****************
  8159 ;; Defined at:
  8160 ;;		line 32 in file "timers.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;  numMilliseco    2  [STACK] const unsigned short 
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;		None
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  1  [STACK] void 
  8167 ;; Registers used:
  8168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8169 ;; Tracked objects:
  8170 ;;		On entry : 0/2
  8171 ;;		On exit  : 0/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8178 ;;Total ram usage:        0 bytes
  8179 ;; Hardware stack levels used:    1
  8180 ;; Hardware stack levels required when called:   16
  8181 ;; This function calls:
  8182 ;;		_StartTimer
  8183 ;;		_TimerDone
  8184 ;; This function is called by:
  8185 ;;		_main
  8186 ;;		_vterm_dump
  8187 ;; This function uses a reentrant model
  8188 ;;
  8189                           
  8190                           	psect	text30
  8191  0194AA                     __ptext30:
  8192                           	opt callstack 0
  8193  0194AA                     _WaitMs:
  8194                           	opt callstack 12
  8195                           
  8196                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  8197                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  8198                           
  8199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8200                           ;incstack = 0
  8201  0194AA  0EFE               	movlw	-2
  8202  0194AC  006F FF8F FFE6     	movff	plusw1,postinc1
  8203  0194B2  006F FF8F FFE6     	movff	plusw1,postinc1
  8204  0194B8  0E00               	movlw	0
  8205  0194BA  6EE6               	movwf	postinc1,c
  8206  0194BC  EC9A  F0C9         	call	_StartTimer	;wreg free
  8207                           
  8208                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8209  0194C0  D005               	goto	l8788
  8210  0194C2                     l1573:
  8211                           
  8212                           ;timers.c: 36:   __nop();
  8213  0194C2  F000               	nop	
  8214                           
  8215                           ;timers.c: 37:   __nop();
  8216  0194C4  F000               	nop	
  8217                           
  8218                           ;timers.c: 38:   __nop();
  8219  0194C6  F000               	nop	
  8220                           
  8221                           ;timers.c: 39:   __nop();
  8222  0194C8  F000               	nop	
  8223  0194CA  0004               	clrwdt		;# 
  8224  0194CC                     l8788:
  8225                           
  8226                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8227  0194CC  0E00               	movlw	0
  8228  0194CE  6EE6               	movwf	postinc1,c
  8229  0194D0  ECDF  F0CB         	call	_TimerDone	;wreg free
  8230  0194D4  5001               	movf	btemp^0,w,c
  8231  0194D6  B4D8               	btfsc	status,2,c
  8232  0194D8  D7F4               	goto	l1573
  8233                           
  8234                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  8235  0194DA  52E5               	movf	postdec1,f,c
  8236  0194DC  52E5               	movf	postdec1,f,c
  8237  0194DE  0012               	return		;funcret
  8238  0194E0                     __end_of_WaitMs:
  8239                           	opt callstack 0
  8240                           
  8241 ;; *************** function _update_lcd *****************
  8242 ;; Defined at:
  8243 ;;		line 85 in file "mconfig.c"
  8244 ;; Parameters:    Size  Location     Type
  8245 ;;  vterm           1  [STACK] unsigned char 
  8246 ;; Auto vars:     Size  Location     Type
  8247 ;;		None
  8248 ;; Return value:  Size  Location     Type
  8249 ;;                  1  [STACK] unsigned char 
  8250 ;; Registers used:
  8251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8252 ;; Tracked objects:
  8253 ;;		On entry : 0/0
  8254 ;;		On exit  : 0/0
  8255 ;;		Unchanged: 0/0
  8256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8261 ;;Total ram usage:        0 bytes
  8262 ;; Hardware stack levels used:    1
  8263 ;; Hardware stack levels required when called:   26
  8264 ;; This function calls:
  8265 ;;		_eaDogM_WriteStringAtPos
  8266 ;;		_wait_lcd_done
  8267 ;; This function is called by:
  8268 ;;		_main
  8269 ;;		_check_help
  8270 ;; This function uses a reentrant model
  8271 ;;
  8272                           
  8273                           	psect	text31
  8274  017AB6                     __ptext31:
  8275                           	opt callstack 0
  8276  017AB6                     _update_lcd:
  8277                           	opt callstack 4
  8278                           
  8279                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  8280                           ;stkvar	_vterm @ sp[(0)+-1]
  8281                           
  8282                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8283                           ;incstack = 0
  8284  017AB6  0EFF               	movlw	-1
  8285  017AB8  006F FF8C  F001    	movff	plusw1,btemp
  8286  017ABE  0E03               	movlw	3
  8287  017AC0  1601               	andwf	btemp^0,f,c
  8288  017AC2  0EFF               	movlw	-1
  8289  017AC4  0060  F007  FFE3   	movff	btemp,plusw1
  8290                           
  8291                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  8292  017ACA  EE22  F11F         	lfsr	2,_D+288
  8293  017ACE  A0DF               	btfss	indf2,0,c
  8294  017AD0  D004               	goto	l11402
  8295                           
  8296                           ;stkvar	_vterm @ sp[(0)+-1]
  8297  017AD2  0EFF               	movlw	-1
  8298  017AD4  50E3               	movf	plusw1,w,c
  8299  017AD6  B4D8               	btfsc	status,2,c
  8300  017AD8  D074               	goto	l1649
  8301  017ADA                     l11402:
  8302                           
  8303                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  8304                           ;stkvar	_vterm @ sp[(0)+-1]
  8305  017ADA  0EFF               	movlw	-1
  8306  017ADC  50E3               	movf	plusw1,w,c
  8307  017ADE  0D48               	mullw	72
  8308  017AE0  0E0F               	movlw	low (_D+16)
  8309  017AE2  24F3               	addwf	243,w,c
  8310  017AE4  6ED9               	movwf	fsr2l,c
  8311  017AE6  0E08               	movlw	high (_D+16)
  8312  017AE8  20F4               	addwfc	prodh,w,c
  8313  017AEA  6EDA               	movwf	fsr2h,c
  8314  017AEC  0E00               	movlw	0
  8315  017AEE  6EDF               	movwf	indf2,c
  8316                           
  8317                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  8318                           ;stkvar	_vterm @ sp[(0)+-1]
  8319  017AF0  0EFF               	movlw	-1
  8320  017AF2  50E3               	movf	plusw1,w,c
  8321  017AF4  0D48               	mullw	72
  8322  017AF6  0E27               	movlw	low (_D+40)
  8323  017AF8  24F3               	addwf	243,w,c
  8324  017AFA  6ED9               	movwf	fsr2l,c
  8325  017AFC  0E08               	movlw	high (_D+40)
  8326  017AFE  20F4               	addwfc	prodh,w,c
  8327  017B00  6EDA               	movwf	fsr2h,c
  8328  017B02  0E00               	movlw	0
  8329  017B04  6EDF               	movwf	indf2,c
  8330                           
  8331                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  8332                           ;stkvar	_vterm @ sp[(0)+-1]
  8333  017B06  0EFF               	movlw	-1
  8334  017B08  50E3               	movf	plusw1,w,c
  8335  017B0A  0D48               	mullw	72
  8336  017B0C  0E3F               	movlw	low (_D+64)
  8337  017B0E  24F3               	addwf	243,w,c
  8338  017B10  6ED9               	movwf	fsr2l,c
  8339  017B12  0E08               	movlw	high (_D+64)
  8340  017B14  20F4               	addwfc	prodh,w,c
  8341  017B16  6EDA               	movwf	fsr2h,c
  8342  017B18  0E00               	movlw	0
  8343  017B1A  6EDF               	movwf	indf2,c
  8344                           
  8345                           ;mconfig.c: 95:  wait_lcd_done();
  8346  017B1C  EC06  F0CE         	call	_wait_lcd_done	;wreg free
  8347                           
  8348                           ; BSR set to: 0
  8349                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  8350                           ;stkvar	_vterm @ sp[(0)+-1]
  8351  017B20  0EFF               	movlw	-1
  8352  017B22  50E3               	movf	plusw1,w,c
  8353  017B24  0D48               	mullw	72
  8354  017B26  0EFF               	movlw	low _D
  8355  017B28  6E0B               	movwf	(btemp+10)^0,c
  8356  017B2A  0E07               	movlw	high _D
  8357  017B2C  6E0C               	movwf	(btemp+11)^0,c
  8358  017B2E  50F3               	movf	243,w,c
  8359  017B30  260B               	addwf	(btemp+10)^0,f,c
  8360  017B32  50F4               	movf	244,w,c
  8361  017B34  220C               	addwfc	(btemp+11)^0,f,c
  8362  017B36  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8363  017B3C  0060  F033  FFE6   	movff	btemp+11,postinc1
  8364  017B42  0E00               	movlw	0
  8365  017B44  6EE6               	movwf	postinc1,c
  8366  017B46  0E00               	movlw	0
  8367  017B48  6EE6               	movwf	postinc1,c
  8368  017B4A  EC70  F0CA         	call	_eaDogM_WriteStringAtPos	;wreg free
  8369                           
  8370                           ; BSR set to: 59
  8371                           ;mconfig.c: 97:  wait_lcd_done();
  8372  017B4E  EC06  F0CE         	call	_wait_lcd_done	;wreg free
  8373                           
  8374                           ; BSR set to: 0
  8375                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  8376                           ;stkvar	_vterm @ sp[(0)+-1]
  8377  017B52  0EFF               	movlw	-1
  8378  017B54  50E3               	movf	plusw1,w,c
  8379  017B56  0D48               	mullw	72
  8380  017B58  0EFF               	movlw	low _D
  8381  017B5A  6E0B               	movwf	(btemp+10)^0,c
  8382  017B5C  0E07               	movlw	high _D
  8383  017B5E  6E0C               	movwf	(btemp+11)^0,c
  8384  017B60  0E18               	movlw	24
  8385  017B62  260B               	addwf	(btemp+10)^0,f,c
  8386  017B64  0E00               	movlw	0
  8387  017B66  220C               	addwfc	(btemp+11)^0,f,c
  8388  017B68  50F3               	movf	243,w,c
  8389  017B6A  260B               	addwf	(btemp+10)^0,f,c
  8390  017B6C  50F4               	movf	244,w,c
  8391  017B6E  220C               	addwfc	(btemp+11)^0,f,c
  8392  017B70  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8393  017B76  0060  F033  FFE6   	movff	btemp+11,postinc1
  8394  017B7C  0E00               	movlw	0
  8395  017B7E  6EE6               	movwf	postinc1,c
  8396  017B80  0E01               	movlw	1
  8397  017B82  6EE6               	movwf	postinc1,c
  8398  017B84  EC70  F0CA         	call	_eaDogM_WriteStringAtPos	;wreg free
  8399                           
  8400                           ; BSR set to: 59
  8401                           ;mconfig.c: 99:  wait_lcd_done();
  8402  017B88  EC06  F0CE         	call	_wait_lcd_done	;wreg free
  8403                           
  8404                           ; BSR set to: 0
  8405                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  8406                           ;stkvar	_vterm @ sp[(0)+-1]
  8407  017B8C  0EFF               	movlw	-1
  8408  017B8E  50E3               	movf	plusw1,w,c
  8409  017B90  0D48               	mullw	72
  8410  017B92  0EFF               	movlw	low _D
  8411  017B94  6E0B               	movwf	(btemp+10)^0,c
  8412  017B96  0E07               	movlw	high _D
  8413  017B98  6E0C               	movwf	(btemp+11)^0,c
  8414  017B9A  0E30               	movlw	48
  8415  017B9C  260B               	addwf	(btemp+10)^0,f,c
  8416  017B9E  0E00               	movlw	0
  8417  017BA0  220C               	addwfc	(btemp+11)^0,f,c
  8418  017BA2  50F3               	movf	243,w,c
  8419  017BA4  260B               	addwf	(btemp+10)^0,f,c
  8420  017BA6  50F4               	movf	244,w,c
  8421  017BA8  220C               	addwfc	(btemp+11)^0,f,c
  8422  017BAA  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8423  017BB0  0060  F033  FFE6   	movff	btemp+11,postinc1
  8424  017BB6  0E00               	movlw	0
  8425  017BB8  6EE6               	movwf	postinc1,c
  8426  017BBA  0E02               	movlw	2
  8427  017BBC  6EE6               	movwf	postinc1,c
  8428  017BBE  EC70  F0CA         	call	_eaDogM_WriteStringAtPos	;wreg free
  8429  017BC2                     l1649:
  8430                           
  8431                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8432  017BC2  52E5               	movf	postdec1,f,c
  8433  017BC4  0012               	return		;funcret
  8434  017BC6                     __end_of_update_lcd:
  8435                           	opt callstack 0
  8436                           
  8437 ;; *************** function _eaDogM_WriteStringAtPos *****************
  8438 ;; Defined at:
  8439 ;;		line 278 in file "eadog.c"
  8440 ;; Parameters:    Size  Location     Type
  8441 ;;  r               1  [STACK] const unsigned char 
  8442 ;;  c               1  [STACK] const unsigned char 
  8443 ;;  strPtr          2  [STACK] PTR unsigned char 
  8444 ;;		 -> D.lcd(288), D(290), V(188), 
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;		None
  8447 ;; Return value:  Size  Location     Type
  8448 ;;                  1  [STACK] void 
  8449 ;; Registers used:
  8450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8451 ;; Tracked objects:
  8452 ;;		On entry : 3F/0
  8453 ;;		On exit  : 3F/3B
  8454 ;;		Unchanged: 0/0
  8455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8460 ;;Total ram usage:        0 bytes
  8461 ;; Hardware stack levels used:    1
  8462 ;; Hardware stack levels required when called:   25
  8463 ;; This function calls:
  8464 ;;		_eaDogM_WriteString
  8465 ;;		_send_lcd_cmd_dma
  8466 ;; This function is called by:
  8467 ;;		_update_lcd
  8468 ;;		_vterm_dump
  8469 ;; This function uses a reentrant model
  8470 ;;
  8471                           
  8472                           	psect	text32
  8473  0194E0                     __ptext32:
  8474                           	opt callstack 0
  8475  0194E0                     _eaDogM_WriteStringAtPos:
  8476                           	opt callstack 4
  8477                           
  8478                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  8479                           ;stkvar	_c @ sp[(0)+-2]
  8480                           
  8481                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8482                           ;incstack = 0
  8483  0194E0  0EFE               	movlw	-2
  8484  0194E2  006F FF8C  F00C    	movff	plusw1,btemp+11
  8485                           
  8486                           ;stkvar	_r @ sp[(0)+-1]
  8487  0194E8  0EFF               	movlw	-1
  8488  0194EA  50E3               	movf	plusw1,w,c
  8489  0194EC  0D10               	mullw	16
  8490  0194EE  50F3               	movf	243,w,c
  8491  0194F0  240C               	addwf	(btemp+11)^0,w,c
  8492  0194F2  0F80               	addlw	128
  8493  0194F4  6EE6               	movwf	postinc1,c
  8494  0194F6  ECBD  F0C7         	call	_send_lcd_cmd_dma	;wreg free
  8495                           
  8496                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  8497                           ;stkvar	_strPtr @ sp[(0)+-4]
  8498  0194FA  0EFC               	movlw	-4
  8499  0194FC  006F FF8F FFE6     	movff	plusw1,postinc1
  8500  019502  006F FF8F FFE6     	movff	plusw1,postinc1
  8501  019508  EC83  F0C2         	call	_eaDogM_WriteString	;wreg free
  8502                           
  8503                           ; BSR set to: 59
  8504                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  8505  01950C  52E5               	movf	postdec1,f,c
  8506  01950E  52E5               	movf	postdec1,f,c
  8507  019510  52E5               	movf	postdec1,f,c
  8508  019512  52E5               	movf	postdec1,f,c
  8509  019514  0012               	return		;funcret
  8510  019516                     __end_of_eaDogM_WriteStringAtPos:
  8511                           	opt callstack 0
  8512                           
  8513 ;; *************** function _send_lcd_cmd_dma *****************
  8514 ;; Defined at:
  8515 ;;		line 220 in file "eadog.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;  strPtr          1  [STACK] unsigned char 
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;		None
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  1  [STACK] void 
  8522 ;; Registers used:
  8523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/3D
  8526 ;;		On exit  : 3F/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8533 ;;Total ram usage:        0 bytes
  8534 ;; Hardware stack levels used:    1
  8535 ;; Hardware stack levels required when called:   24
  8536 ;; This function calls:
  8537 ;;		_printf
  8538 ;;		_ringBufS_flush
  8539 ;;		_start_lcd
  8540 ;;		_wait_lcd_done
  8541 ;;		_wait_lcd_set
  8542 ;; This function is called by:
  8543 ;;		_eaDogM_WriteCommand
  8544 ;;		_eaDogM_WriteStringAtPos
  8545 ;; This function uses a reentrant model
  8546 ;;
  8547                           
  8548                           	psect	text33
  8549  018F7A                     __ptext33:
  8550                           	opt callstack 0
  8551  018F7A                     _send_lcd_cmd_dma:
  8552                           	opt callstack 4
  8553                           
  8554                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  8555                           
  8556                           ; BSR set to: 59
  8557                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8558                           ;incstack = 0
  8559  018F7A  ECD4  F0CE         	call	_wait_lcd_set	;wreg free
  8560                           
  8561                           ; BSR set to: 0
  8562                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  8563  018F7E  0E00               	movlw	0
  8564  018F80  6EE6               	movwf	postinc1,c
  8565  018F82  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  8566  018F88  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  8567  018F8E  ECBE  F0C3         	call	_ringBufS_flush	;wreg free
  8568  018F92  92BC               	bcf	188,1,c	;volatile
  8569  018F94  94BC               	bcf	188,2,c	;volatile
  8570                           
  8571                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  8572  018F96  013B               	movlb	59	; () banked
  8573  018F98  9FFC               	bcf	252,7,b	;volatile
  8574                           
  8575                           ; BSR set to: 59
  8576                           ;eadog.c: 229:  DMA1SSZ = 1;
  8577  018F9A  0E00               	movlw	0
  8578  018F9C  6FF8               	movwf	248,b	;volatile
  8579  018F9E  0E01               	movlw	1
  8580  018FA0  6FF7               	movwf	247,b	;volatile
  8581                           
  8582                           ; BSR set to: 59
  8583                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  8584  018FA2  8FFC               	bsf	252,7,b	;volatile
  8585                           
  8586                           ; BSR set to: 59
  8587                           ;eadog.c: 231:  printf("%c", strPtr);
  8588                           ;stkvar	_strPtr @ sp[(0)+-1]
  8589  018FA4  0EFF               	movlw	-1
  8590  018FA6  50E3               	movf	plusw1,w,c
  8591  018FA8  6EE6               	movwf	postinc1,c
  8592  018FAA  0E00               	movlw	0
  8593  018FAC  6EE6               	movwf	postinc1,c
  8594  018FAE  0EF8               	movlw	low STR_25
  8595  018FB0  6EE6               	movwf	postinc1,c
  8596  018FB2  0EFF               	movlw	high STR_25
  8597  018FB4  6EE6               	movwf	postinc1,c
  8598  018FB6  0E04               	movlw	4
  8599  018FB8  6EE6               	movwf	postinc1,c
  8600  018FBA  ECD5  F0C6         	call	_printf	;wreg free
  8601                           
  8602                           ; BSR set to: 0
  8603                           ;eadog.c: 232:  start_lcd();
  8604  018FBE  ECD7  F0CE         	call	_start_lcd	;wreg free
  8605                           
  8606                           ; BSR set to: 59
  8607                           ;eadog.c: 233:  wait_lcd_done();
  8608  018FC2  EC06  F0CE         	call	_wait_lcd_done	;wreg free
  8609                           
  8610                           ; BSR set to: 0
  8611  018FC6  82BC               	bsf	188,1,c	;volatile
  8612                           
  8613                           ; BSR set to: 0
  8614                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8615  018FC8  52E5               	movf	postdec1,f,c
  8616  018FCA  0012               	return		;funcret
  8617  018FCC                     __end_of_send_lcd_cmd_dma:
  8618                           	opt callstack 0
  8619                           
  8620 ;; *************** function _wait_lcd_done *****************
  8621 ;; Defined at:
  8622 ;;		line 156 in file "eadog.c"
  8623 ;; Parameters:    Size  Location     Type
  8624 ;;		None
  8625 ;; Auto vars:     Size  Location     Type
  8626 ;;		None
  8627 ;; Return value:  Size  Location     Type
  8628 ;;                  1  [STACK] void 
  8629 ;; Registers used:
  8630 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8631 ;; Tracked objects:
  8632 ;;		On entry : 0/0
  8633 ;;		On exit  : 3F/0
  8634 ;;		Unchanged: 0/0
  8635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8640 ;;Total ram usage:        0 bytes
  8641 ;; Hardware stack levels used:    1
  8642 ;; Hardware stack levels required when called:   16
  8643 ;; This function calls:
  8644 ;;		_wdtdelay
  8645 ;; This function is called by:
  8646 ;;		_send_lcd_cmd_dma
  8647 ;;		_update_lcd
  8648 ;;		_vterm_dump
  8649 ;; This function uses a reentrant model
  8650 ;;
  8651                           
  8652                           	psect	text34
  8653  019C0C                     __ptext34:
  8654                           	opt callstack 0
  8655  019C0C                     _wait_lcd_done:
  8656                           	opt callstack 13
  8657                           
  8658                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  8659                           
  8660                           ; BSR set to: 0
  8661                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8662                           ;incstack = 0
  8663  019C0C  0100               	movlb	0	; () banked
  8664  019C0E  B789               	btfsc	_spi_link& (0+255),3,b	;volatile
  8665  019C10  D7FD               	goto	_wait_lcd_done
  8666                           
  8667                           ; BSR set to: 0
  8668                           ;eadog.c: 159:  wdtdelay(50);
  8669  019C12  0E32               	movlw	50
  8670  019C14  6EE6               	movwf	postinc1,c
  8671  019C16  0E00               	movlw	0
  8672  019C18  6EE6               	movwf	postinc1,c
  8673  019C1A  0E00               	movlw	0
  8674  019C1C  6EE6               	movwf	postinc1,c
  8675  019C1E  0E00               	movlw	0
  8676  019C20  6EE6               	movwf	postinc1,c
  8677  019C22  EC35  F0C7         	call	_wdtdelay	;wreg free
  8678                           
  8679                           ; BSR set to: 0
  8680                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8681  019C26  0012               	return		;funcret
  8682  019C28                     __end_of_wait_lcd_done:
  8683                           	opt callstack 0
  8684                           
  8685 ;; *************** function _wdtdelay *****************
  8686 ;; Defined at:
  8687 ;;		line 23 in file "eadog.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;  delay           4  [STACK] const unsigned long 
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;		None
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  1  [STACK] void 
  8694 ;; Registers used:
  8695 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 3F/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8705 ;;Total ram usage:        0 bytes
  8706 ;; Hardware stack levels used:    1
  8707 ;; Hardware stack levels required when called:   15
  8708 ;; This function calls:
  8709 ;;		Nothing
  8710 ;; This function is called by:
  8711 ;;		_init_display
  8712 ;;		_send_lcd_cmd
  8713 ;;		_send_lcd_cmd_long
  8714 ;;		_wait_lcd_done
  8715 ;; This function uses a reentrant model
  8716 ;;
  8717                           
  8718                           	psect	text35
  8719  018E6A                     __ptext35:
  8720                           	opt callstack 0
  8721  018E6A                     _wdtdelay:
  8722                           	opt callstack 13
  8723                           
  8724                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  8725                           
  8726                           ; BSR set to: 0
  8727                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8728                           ;incstack = 0
  8729  018E6A  0100               	movlb	0	; () banked
  8730  018E6C  6BA1               	clrf	wdtdelay@dcount& (0+255),b
  8731  018E6E  6BA2               	clrf	(wdtdelay@dcount+1)& (0+255),b
  8732  018E70  6BA3               	clrf	(wdtdelay@dcount+2)& (0+255),b
  8733  018E72  6BA4               	clrf	(wdtdelay@dcount+3)& (0+255),b
  8734  018E74                     l1414:
  8735                           
  8736                           ; BSR set to: 0
  8737                           ;eadog.c: 28:   __nop();
  8738  018E74  F000               	nop	
  8739  018E76  0004               	clrwdt		;# 
  8740                           
  8741                           ;eadog.c: 30:  };
  8742  018E78  0E01               	movlw	1
  8743  018E7A  0100               	movlb	0	; () banked
  8744  018E7C  27A1               	addwf	wdtdelay@dcount& (0+255),f,b
  8745  018E7E  0E00               	movlw	0
  8746  018E80  23A2               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  8747  018E82  23A3               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  8748  018E84  23A4               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  8749                           
  8750                           ; BSR set to: 0
  8751                           ;stkvar	_delay @ sp[(0)+-4]
  8752  018E86  0EFC               	movlw	-4
  8753  018E88  006F FF8C  F001    	movff	plusw1,btemp
  8754  018E8E  51A1               	movf	wdtdelay@dcount& (0+255),w,b
  8755  018E90  5C01               	subwf	btemp^0,w,c
  8756  018E92  0EFD               	movlw	-3
  8757  018E94  006F FF8C  F001    	movff	plusw1,btemp
  8758  018E9A  51A2               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  8759  018E9C  5801               	subwfb	btemp^0,w,c
  8760  018E9E  0EFE               	movlw	-2
  8761  018EA0  006F FF8C  F001    	movff	plusw1,btemp
  8762  018EA6  51A3               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  8763  018EA8  5801               	subwfb	btemp^0,w,c
  8764  018EAA  0EFF               	movlw	-1
  8765  018EAC  006F FF8C  F001    	movff	plusw1,btemp
  8766  018EB2  51A4               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  8767  018EB4  5801               	subwfb	btemp^0,w,c
  8768  018EB6  B0D8               	btfsc	status,0,c
  8769  018EB8  D7DD               	goto	l1414
  8770                           
  8771                           ; BSR set to: 0
  8772                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  8773  018EBA  52E5               	movf	postdec1,f,c
  8774  018EBC  52E5               	movf	postdec1,f,c
  8775  018EBE  52E5               	movf	postdec1,f,c
  8776  018EC0  52E5               	movf	postdec1,f,c
  8777  018EC2  0012               	return		;funcret
  8778  018EC4                     __end_of_wdtdelay:
  8779                           	opt callstack 0
  8780                           
  8781 ;; *************** function _eaDogM_WriteString *****************
  8782 ;; Defined at:
  8783 ;;		line 199 in file "eadog.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;  strPtr          2  [STACK] PTR unsigned char 
  8786 ;;		 -> D.lcd(288), D(290), V(188), 
  8787 ;; Auto vars:     Size  Location     Type
  8788 ;;		None
  8789 ;; Return value:  Size  Location     Type
  8790 ;;                  1  [STACK] void 
  8791 ;; Registers used:
  8792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8793 ;; Tracked objects:
  8794 ;;		On entry : 3F/0
  8795 ;;		On exit  : 3F/3B
  8796 ;;		Unchanged: 0/0
  8797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8802 ;;Total ram usage:        0 bytes
  8803 ;; Hardware stack levels used:    1
  8804 ;; Hardware stack levels required when called:   24
  8805 ;; This function calls:
  8806 ;;		_printf
  8807 ;;		_ringBufS_flush
  8808 ;;		_start_lcd
  8809 ;;		_strlen
  8810 ;;		_wait_lcd_set
  8811 ;; This function is called by:
  8812 ;;		_eaDogM_WriteStringAtPos
  8813 ;; This function uses a reentrant model
  8814 ;;
  8815                           
  8816                           	psect	text36
  8817  018506                     __ptext36:
  8818                           	opt callstack 0
  8819  018506                     _eaDogM_WriteString:
  8820                           	opt callstack 4
  8821                           
  8822                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
  8823                           
  8824                           ; BSR set to: 0
  8825                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8826                           ;incstack = 0
  8827  018506  ECD4  F0CE         	call	_wait_lcd_set	;wreg free
  8828                           
  8829                           ; BSR set to: 0
  8830                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
  8831  01850A  0E00               	movlw	0
  8832  01850C  6EE6               	movwf	postinc1,c
  8833  01850E  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  8834  018514  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  8835  01851A  ECBE  F0C3         	call	_ringBufS_flush	;wreg free
  8836  01851E  94BC               	bcf	188,2,c	;volatile
  8837                           
  8838                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  8839                           ;stkvar	_strPtr @ sp[(0)+-2]
  8840  018520  0EFE               	movlw	-2
  8841  018522  006F FF8F FFE6     	movff	plusw1,postinc1
  8842  018528  006F FF8F FFE6     	movff	plusw1,postinc1
  8843  01852E  ECD6  F0C2         	call	_strlen	;wreg free
  8844  018532  5002               	movf	(btemp+1)^0,w,c
  8845  018534  E104               	bnz	u10740
  8846  018536  0E41               	movlw	65
  8847  018538  5C01               	subwf	btemp^0,w,c
  8848  01853A  A0D8               	btfss	status,0,c
  8849  01853C  D010               	goto	l11262
  8850  01853E                     u10740:
  8851                           
  8852                           ;stkvar	_strPtr @ sp[(0)+-2]
  8853  01853E  0EFE               	movlw	-2
  8854  018540  006F FF8C  F00B    	movff	plusw1,btemp+10
  8855  018546  0EFF               	movlw	-1
  8856  018548  006F FF8C  F00C    	movff	plusw1,btemp+11
  8857  01854E  0E40               	movlw	64
  8858  018550  240B               	addwf	(btemp+10)^0,w,c
  8859  018552  6ED9               	movwf	fsr2l,c
  8860  018554  0E00               	movlw	0
  8861  018556  200C               	addwfc	(btemp+11)^0,w,c
  8862  018558  6EDA               	movwf	fsr2h,c
  8863  01855A  0E00               	movlw	0
  8864  01855C  6EDF               	movwf	indf2,c
  8865  01855E                     l11262:
  8866                           
  8867                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
  8868  01855E  013B               	movlb	59	; () banked
  8869  018560  9FFC               	bcf	252,7,b	;volatile
  8870                           
  8871                           ; BSR set to: 59
  8872                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
  8873                           ;stkvar	_strPtr @ sp[(0)+-2]
  8874  018562  0EFE               	movlw	-2
  8875  018564  006F FF8F FFE6     	movff	plusw1,postinc1
  8876  01856A  006F FF8F FFE6     	movff	plusw1,postinc1
  8877  018570  ECD6  F0C2         	call	_strlen	;wreg free
  8878  018574  0060  F007  FBF7   	movff	btemp,15351	;volatile
  8879  01857A  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
  8880                           
  8881                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
  8882  018580  013B               	movlb	59	; () banked
  8883  018582  8FFC               	bsf	252,7,b	;volatile
  8884                           
  8885                           ; BSR set to: 59
  8886                           ;eadog.c: 210:  printf("%s", strPtr);
  8887                           ;stkvar	_strPtr @ sp[(0)+-2]
  8888  018584  0EFE               	movlw	-2
  8889  018586  006F FF8F FFE6     	movff	plusw1,postinc1
  8890  01858C  006F FF8F FFE6     	movff	plusw1,postinc1
  8891  018592  0EFB               	movlw	low STR_24
  8892  018594  6EE6               	movwf	postinc1,c
  8893  018596  0EFF               	movlw	high STR_24
  8894  018598  6EE6               	movwf	postinc1,c
  8895  01859A  0E04               	movlw	4
  8896  01859C  6EE6               	movwf	postinc1,c
  8897  01859E  ECD5  F0C6         	call	_printf	;wreg free
  8898                           
  8899                           ; BSR set to: 0
  8900                           ;eadog.c: 211:  start_lcd();
  8901  0185A2  ECD7  F0CE         	call	_start_lcd	;wreg free
  8902                           
  8903                           ; BSR set to: 59
  8904                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  8905  0185A6  52E5               	movf	postdec1,f,c
  8906  0185A8  52E5               	movf	postdec1,f,c
  8907  0185AA  0012               	return		;funcret
  8908  0185AC                     __end_of_eaDogM_WriteString:
  8909                           	opt callstack 0
  8910                           
  8911 ;; *************** function _wait_lcd_set *****************
  8912 ;; Defined at:
  8913 ;;		line 146 in file "eadog.c"
  8914 ;; Parameters:    Size  Location     Type
  8915 ;;		None
  8916 ;; Auto vars:     Size  Location     Type
  8917 ;;		None
  8918 ;; Return value:  Size  Location     Type
  8919 ;;                  1  [STACK] void 
  8920 ;; Registers used:
  8921 ;;		None
  8922 ;; Tracked objects:
  8923 ;;		On entry : 0/3D
  8924 ;;		On exit  : 3F/0
  8925 ;;		Unchanged: 0/0
  8926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8931 ;;Total ram usage:        0 bytes
  8932 ;; Hardware stack levels used:    1
  8933 ;; Hardware stack levels required when called:   15
  8934 ;; This function calls:
  8935 ;;		Nothing
  8936 ;; This function is called by:
  8937 ;;		_eaDogM_WriteString
  8938 ;;		_send_lcd_cmd_dma
  8939 ;; This function uses a reentrant model
  8940 ;;
  8941                           
  8942                           	psect	text37
  8943  019DA8                     __ptext37:
  8944                           	opt callstack 0
  8945  019DA8                     _wait_lcd_set:
  8946                           	opt callstack 12
  8947                           
  8948                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
  8949                           
  8950                           ; BSR set to: 59
  8951                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8952                           ;incstack = 0
  8953  019DA8  0100               	movlb	0	; () banked
  8954  019DAA  8789               	bsf	_spi_link& (0+255),3,b	;volatile
  8955                           
  8956                           ; BSR set to: 0
  8957                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8958  019DAC  0012               	return		;funcret
  8959  019DAE                     __end_of_wait_lcd_set:
  8960                           	opt callstack 0
  8961                           
  8962 ;; *************** function _start_lcd *****************
  8963 ;; Defined at:
  8964 ;;		line 141 in file "eadog.c"
  8965 ;; Parameters:    Size  Location     Type
  8966 ;;		None
  8967 ;; Auto vars:     Size  Location     Type
  8968 ;;		None
  8969 ;; Return value:  Size  Location     Type
  8970 ;;                  1  [STACK] void 
  8971 ;; Registers used:
  8972 ;;		None
  8973 ;; Tracked objects:
  8974 ;;		On entry : 3F/0
  8975 ;;		On exit  : 3F/3B
  8976 ;;		Unchanged: 0/0
  8977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8982 ;;Total ram usage:        0 bytes
  8983 ;; Hardware stack levels used:    1
  8984 ;; Hardware stack levels required when called:   15
  8985 ;; This function calls:
  8986 ;;		Nothing
  8987 ;; This function is called by:
  8988 ;;		_eaDogM_WriteString
  8989 ;;		_send_lcd_cmd_dma
  8990 ;; This function uses a reentrant model
  8991 ;;
  8992                           
  8993                           	psect	text38
  8994  019DAE                     __ptext38:
  8995                           	opt callstack 0
  8996  019DAE                     _start_lcd:
  8997                           	opt callstack 12
  8998                           
  8999                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
  9000                           
  9001                           ; BSR set to: 0
  9002                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9003                           ;incstack = 0
  9004  019DAE  013B               	movlb	59	; () banked
  9005  019DB0  8DFC               	bsf	252,6,b	;volatile
  9006                           
  9007                           ; BSR set to: 59
  9008                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9009  019DB2  0012               	return		;funcret
  9010  019DB4                     __end_of_start_lcd:
  9011                           	opt callstack 0
  9012                           
  9013 ;; *************** function _ringBufS_flush *****************
  9014 ;; Defined at:
  9015 ;;		line 76 in file "ringbufs.c"
  9016 ;; Parameters:    Size  Location     Type
  9017 ;;  _this           2  [STACK] PTR struct ringBufS_t
  9018 ;;		 -> ring_buf1(67), 
  9019 ;;  clearBuffer     1  [STACK] const char 
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;		None
  9022 ;; Return value:  Size  Location     Type
  9023 ;;                  1  [STACK] void 
  9024 ;; Registers used:
  9025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9026 ;; Tracked objects:
  9027 ;;		On entry : 3F/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9035 ;;Total ram usage:        0 bytes
  9036 ;; Hardware stack levels used:    1
  9037 ;; Hardware stack levels required when called:   16
  9038 ;; This function calls:
  9039 ;;		_memset
  9040 ;; This function is called by:
  9041 ;;		_eaDogM_WriteString
  9042 ;;		_send_lcd_cmd_dma
  9043 ;; This function uses a reentrant model
  9044 ;;
  9045                           
  9046                           	psect	text39
  9047  01877C                     __ptext39:
  9048                           	opt callstack 0
  9049  01877C                     _ringBufS_flush:
  9050                           	opt callstack 11
  9051                           
  9052                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  9053                           ;stkvar	__this @ sp[(0)+-2]
  9054                           
  9055                           ; BSR set to: 59
  9056                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9057                           ;incstack = 0
  9058  01877C  0EFE               	movlw	-2
  9059  01877E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9060  018784  0EFF               	movlw	-1
  9061  018786  006F FF8C  F00C    	movff	plusw1,btemp+11
  9062  01878C  0E42               	movlw	66
  9063  01878E  240B               	addwf	(btemp+10)^0,w,c
  9064  018790  6ED9               	movwf	fsr2l,c
  9065  018792  0E00               	movlw	0
  9066  018794  200C               	addwfc	(btemp+11)^0,w,c
  9067  018796  6EDA               	movwf	fsr2h,c
  9068  018798  0E00               	movlw	0
  9069  01879A  6EDF               	movwf	indf2,c
  9070                           
  9071                           ;ringbufs.c: 79:  _this->head = 0;
  9072                           ;stkvar	__this @ sp[(0)+-2]
  9073  01879C  0EFE               	movlw	-2
  9074  01879E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9075  0187A4  0EFF               	movlw	-1
  9076  0187A6  006F FF8C  F00C    	movff	plusw1,btemp+11
  9077  0187AC  0E40               	movlw	64
  9078  0187AE  240B               	addwf	(btemp+10)^0,w,c
  9079  0187B0  6ED9               	movwf	fsr2l,c
  9080  0187B2  0E00               	movlw	0
  9081  0187B4  200C               	addwfc	(btemp+11)^0,w,c
  9082  0187B6  6EDA               	movwf	fsr2h,c
  9083  0187B8  0E00               	movlw	0
  9084  0187BA  6EDF               	movwf	indf2,c
  9085                           
  9086                           ;ringbufs.c: 80:  _this->tail = 0;
  9087                           ;stkvar	__this @ sp[(0)+-2]
  9088  0187BC  0EFE               	movlw	-2
  9089  0187BE  006F FF8C  F00B    	movff	plusw1,btemp+10
  9090  0187C4  0EFF               	movlw	-1
  9091  0187C6  006F FF8C  F00C    	movff	plusw1,btemp+11
  9092  0187CC  0E41               	movlw	65
  9093  0187CE  240B               	addwf	(btemp+10)^0,w,c
  9094  0187D0  6ED9               	movwf	fsr2l,c
  9095  0187D2  0E00               	movlw	0
  9096  0187D4  200C               	addwfc	(btemp+11)^0,w,c
  9097  0187D6  6EDA               	movwf	fsr2h,c
  9098  0187D8  0E00               	movlw	0
  9099  0187DA  6EDF               	movwf	indf2,c
  9100                           
  9101                           ;ringbufs.c: 81:  if (clearBuffer) {
  9102                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  9103  0187DC  0EFD               	movlw	-3
  9104  0187DE  50E3               	movf	plusw1,w,c
  9105  0187E0  B4D8               	btfsc	status,2,c
  9106  0187E2  D011               	goto	l1558
  9107                           
  9108                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  9109  0187E4  0E40               	movlw	64
  9110  0187E6  6EE6               	movwf	postinc1,c
  9111  0187E8  0E00               	movlw	0
  9112  0187EA  6EE6               	movwf	postinc1,c
  9113  0187EC  0E00               	movlw	0
  9114  0187EE  6EE6               	movwf	postinc1,c
  9115  0187F0  0E00               	movlw	0
  9116  0187F2  6EE6               	movwf	postinc1,c
  9117                           
  9118                           ;stkvar	__this @ sp[(-4)+-2]
  9119  0187F4  0EFA               	movlw	-6
  9120  0187F6  006F FF8F FFE6     	movff	plusw1,postinc1
  9121  0187FC  006F FF8F FFE6     	movff	plusw1,postinc1
  9122  018802  EC97  F0A9         	call	_memset	;wreg free
  9123  018806                     l1558:
  9124                           
  9125                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  9126  018806  52E5               	movf	postdec1,f,c
  9127  018808  52E5               	movf	postdec1,f,c
  9128  01880A  52E5               	movf	postdec1,f,c
  9129  01880C  0012               	return		;funcret
  9130  01880E                     __end_of_ringBufS_flush:
  9131                           	opt callstack 0
  9132                           
  9133 ;; *************** function _memset *****************
  9134 ;; Defined at:
  9135 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  9136 ;; Parameters:    Size  Location     Type
  9137 ;;  dest            2  [STACK] PTR void 
  9138 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9139 ;;  c               2  [STACK] int 
  9140 ;;  n               2  [STACK] unsigned int 
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;  s               2  [STACK] PTR unsigned char 
  9143 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9144 ;;  k               2  [STACK] unsigned int 
  9145 ;; Return value:  Size  Location     Type
  9146 ;;                  2  [STACK] PTR void 
  9147 ;; Registers used:
  9148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9149 ;; Tracked objects:
  9150 ;;		On entry : 0/0
  9151 ;;		On exit  : 0/0
  9152 ;;		Unchanged: 0/0
  9153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9158 ;;Total ram usage:        0 bytes
  9159 ;; Hardware stack levels used:    1
  9160 ;; Hardware stack levels required when called:   15
  9161 ;; This function calls:
  9162 ;;		Nothing
  9163 ;; This function is called by:
  9164 ;;		_ringBufS_init
  9165 ;;		_ringBufS_flush
  9166 ;; This function uses a reentrant model
  9167 ;;
  9168                           
  9169                           	psect	text40
  9170  01532E                     __ptext40:
  9171                           	opt callstack 0
  9172  01532E                     _memset:
  9173                           	opt callstack 0
  9174                           
  9175                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9176  01532E  52E6               	movf	postinc1,f,c
  9177  015330  52E6               	movf	postinc1,f,c
  9178  015332  52E6               	movf	postinc1,f,c
  9179  015334  52E6               	movf	postinc1,f,c
  9180                           
  9181                           ;stkvar	_dest @ sp[(-4)+-2]
  9182                           
  9183                           ;incstack = 0
  9184  015336  0EFA               	movlw	-6
  9185  015338  006F FF8C  F00B    	movff	plusw1,btemp+10
  9186  01533E  0EFB               	movlw	-5
  9187  015340  006F FF8C  F00C    	movff	plusw1,btemp+11
  9188                           
  9189                           ;stkvar	_s @ sp[(-4)+0]
  9190  015346  0EFD               	movlw	-3
  9191  015348  0060  F033  FFE3   	movff	btemp+11,plusw1
  9192  01534E  0EFC               	movlw	-4
  9193  015350  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9194                           
  9195                           ;stkvar	_n @ sp[(-4)+-6]
  9196  015356  0EF6               	movlw	-10
  9197  015358  006F FF8C  F001    	movff	plusw1,btemp
  9198  01535E  0EF7               	movlw	-9
  9199  015360  50E3               	movf	plusw1,w,c
  9200  015362  1001               	iorwf	btemp^0,w,c
  9201  015364  B4D8               	btfsc	status,2,c
  9202  015366  D154               	goto	u9480
  9203                           
  9204                           ;stkvar	_c @ sp[(-4)+-4]
  9205                           ;stkvar	_s @ sp[(-4)+0]
  9206  015368  0EFC               	movlw	-4
  9207  01536A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9208  015370  0EFD               	movlw	-3
  9209  015372  006F FF8F FFDA     	movff	plusw1,fsr2h
  9210  015378  0EF8               	movlw	-8
  9211  01537A  006F FF8F FFDF     	movff	plusw1,indf2
  9212                           
  9213                           ;stkvar	_c @ sp[(-4)+-4]
  9214                           ;stkvar	_n @ sp[(-4)+-6]
  9215                           ;stkvar	_s @ sp[(-4)+0]
  9216  015380  0EFC               	movlw	-4
  9217  015382  006F FF8C  F00B    	movff	plusw1,btemp+10
  9218  015388  0EFD               	movlw	-3
  9219  01538A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9220  015390  0EF6               	movlw	-10
  9221  015392  50E3               	movf	plusw1,w,c
  9222  015394  260B               	addwf	(btemp+10)^0,f,c
  9223  015396  0EF7               	movlw	-9
  9224  015398  50E3               	movf	plusw1,w,c
  9225  01539A  220C               	addwfc	(btemp+11)^0,f,c
  9226  01539C  0EFF               	movlw	255
  9227  01539E  240B               	addwf	(btemp+10)^0,w,c
  9228  0153A0  6ED9               	movwf	fsr2l,c
  9229  0153A2  0EFF               	movlw	255
  9230  0153A4  200C               	addwfc	(btemp+11)^0,w,c
  9231  0153A6  6EDA               	movwf	fsr2h,c
  9232  0153A8  0EF8               	movlw	-8
  9233  0153AA  006F FF8F FFDF     	movff	plusw1,indf2
  9234                           
  9235                           ;stkvar	_n @ sp[(-4)+-6]
  9236  0153B0  0EF7               	movlw	-9
  9237  0153B2  50E3               	movf	plusw1,w,c
  9238  0153B4  E108               	bnz	l10516
  9239  0153B6  0EF6               	movlw	-10
  9240  0153B8  006F FF8C  F001    	movff	plusw1,btemp
  9241  0153BE  0E03               	movlw	3
  9242  0153C0  5E01               	subwf	btemp^0,f,c
  9243  0153C2  A0D8               	btfss	status,0,c
  9244  0153C4  D125               	goto	u9480
  9245  0153C6                     l10516:
  9246                           
  9247                           ;stkvar	_c @ sp[(-4)+-4]
  9248                           ;stkvar	_s @ sp[(-4)+0]
  9249  0153C6  0EFC               	movlw	-4
  9250  0153C8  006F FF8C  F00B    	movff	plusw1,btemp+10
  9251  0153CE  0EFD               	movlw	-3
  9252  0153D0  006F FF8C  F00C    	movff	plusw1,btemp+11
  9253  0153D6  0E01               	movlw	1
  9254  0153D8  240B               	addwf	(btemp+10)^0,w,c
  9255  0153DA  6ED9               	movwf	fsr2l,c
  9256  0153DC  0E00               	movlw	0
  9257  0153DE  200C               	addwfc	(btemp+11)^0,w,c
  9258  0153E0  6EDA               	movwf	fsr2h,c
  9259  0153E2  0EF8               	movlw	-8
  9260  0153E4  006F FF8F FFDF     	movff	plusw1,indf2
  9261                           
  9262                           ;stkvar	_c @ sp[(-4)+-4]
  9263                           ;stkvar	_s @ sp[(-4)+0]
  9264  0153EA  0EFC               	movlw	-4
  9265  0153EC  006F FF8C  F00B    	movff	plusw1,btemp+10
  9266  0153F2  0EFD               	movlw	-3
  9267  0153F4  006F FF8C  F00C    	movff	plusw1,btemp+11
  9268  0153FA  0E02               	movlw	2
  9269  0153FC  240B               	addwf	(btemp+10)^0,w,c
  9270  0153FE  6ED9               	movwf	fsr2l,c
  9271  015400  0E00               	movlw	0
  9272  015402  200C               	addwfc	(btemp+11)^0,w,c
  9273  015404  6EDA               	movwf	fsr2h,c
  9274  015406  0EF8               	movlw	-8
  9275  015408  006F FF8F FFDF     	movff	plusw1,indf2
  9276                           
  9277                           ;stkvar	_c @ sp[(-4)+-4]
  9278                           ;stkvar	_n @ sp[(-4)+-6]
  9279                           ;stkvar	_s @ sp[(-4)+0]
  9280  01540E  0EFC               	movlw	-4
  9281  015410  006F FF8C  F00B    	movff	plusw1,btemp+10
  9282  015416  0EFD               	movlw	-3
  9283  015418  006F FF8C  F00C    	movff	plusw1,btemp+11
  9284  01541E  0EF6               	movlw	-10
  9285  015420  50E3               	movf	plusw1,w,c
  9286  015422  260B               	addwf	(btemp+10)^0,f,c
  9287  015424  0EF7               	movlw	-9
  9288  015426  50E3               	movf	plusw1,w,c
  9289  015428  220C               	addwfc	(btemp+11)^0,f,c
  9290  01542A  0EFE               	movlw	254
  9291  01542C  240B               	addwf	(btemp+10)^0,w,c
  9292  01542E  6ED9               	movwf	fsr2l,c
  9293  015430  0EFF               	movlw	255
  9294  015432  200C               	addwfc	(btemp+11)^0,w,c
  9295  015434  6EDA               	movwf	fsr2h,c
  9296  015436  0EF8               	movlw	-8
  9297  015438  006F FF8F FFDF     	movff	plusw1,indf2
  9298                           
  9299                           ;stkvar	_c @ sp[(-4)+-4]
  9300                           ;stkvar	_n @ sp[(-4)+-6]
  9301                           ;stkvar	_s @ sp[(-4)+0]
  9302  01543E  0EFC               	movlw	-4
  9303  015440  006F FF8C  F00B    	movff	plusw1,btemp+10
  9304  015446  0EFD               	movlw	-3
  9305  015448  006F FF8C  F00C    	movff	plusw1,btemp+11
  9306  01544E  0EF6               	movlw	-10
  9307  015450  50E3               	movf	plusw1,w,c
  9308  015452  260B               	addwf	(btemp+10)^0,f,c
  9309  015454  0EF7               	movlw	-9
  9310  015456  50E3               	movf	plusw1,w,c
  9311  015458  220C               	addwfc	(btemp+11)^0,f,c
  9312  01545A  0EFD               	movlw	253
  9313  01545C  240B               	addwf	(btemp+10)^0,w,c
  9314  01545E  6ED9               	movwf	fsr2l,c
  9315  015460  0EFF               	movlw	255
  9316  015462  200C               	addwfc	(btemp+11)^0,w,c
  9317  015464  6EDA               	movwf	fsr2h,c
  9318  015466  0EF8               	movlw	-8
  9319  015468  006F FF8F FFDF     	movff	plusw1,indf2
  9320                           
  9321                           ;stkvar	_n @ sp[(-4)+-6]
  9322  01546E  0EF7               	movlw	-9
  9323  015470  50E3               	movf	plusw1,w,c
  9324  015472  E108               	bnz	l10522
  9325  015474  0EF6               	movlw	-10
  9326  015476  006F FF8C  F001    	movff	plusw1,btemp
  9327  01547C  0E07               	movlw	7
  9328  01547E  5E01               	subwf	btemp^0,f,c
  9329  015480  A0D8               	btfss	status,0,c
  9330  015482  D0C6               	goto	u9480
  9331  015484                     l10522:
  9332                           
  9333                           ;stkvar	_c @ sp[(-4)+-4]
  9334                           ;stkvar	_s @ sp[(-4)+0]
  9335  015484  0EFC               	movlw	-4
  9336  015486  006F FF8C  F00B    	movff	plusw1,btemp+10
  9337  01548C  0EFD               	movlw	-3
  9338  01548E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9339  015494  0E03               	movlw	3
  9340  015496  240B               	addwf	(btemp+10)^0,w,c
  9341  015498  6ED9               	movwf	fsr2l,c
  9342  01549A  0E00               	movlw	0
  9343  01549C  200C               	addwfc	(btemp+11)^0,w,c
  9344  01549E  6EDA               	movwf	fsr2h,c
  9345  0154A0  0EF8               	movlw	-8
  9346  0154A2  006F FF8F FFDF     	movff	plusw1,indf2
  9347                           
  9348                           ;stkvar	_c @ sp[(-4)+-4]
  9349                           ;stkvar	_n @ sp[(-4)+-6]
  9350                           ;stkvar	_s @ sp[(-4)+0]
  9351  0154A8  0EFC               	movlw	-4
  9352  0154AA  006F FF8C  F00B    	movff	plusw1,btemp+10
  9353  0154B0  0EFD               	movlw	-3
  9354  0154B2  006F FF8C  F00C    	movff	plusw1,btemp+11
  9355  0154B8  0EF6               	movlw	-10
  9356  0154BA  50E3               	movf	plusw1,w,c
  9357  0154BC  260B               	addwf	(btemp+10)^0,f,c
  9358  0154BE  0EF7               	movlw	-9
  9359  0154C0  50E3               	movf	plusw1,w,c
  9360  0154C2  220C               	addwfc	(btemp+11)^0,f,c
  9361  0154C4  0EFC               	movlw	252
  9362  0154C6  240B               	addwf	(btemp+10)^0,w,c
  9363  0154C8  6ED9               	movwf	fsr2l,c
  9364  0154CA  0EFF               	movlw	255
  9365  0154CC  200C               	addwfc	(btemp+11)^0,w,c
  9366  0154CE  6EDA               	movwf	fsr2h,c
  9367  0154D0  0EF8               	movlw	-8
  9368  0154D2  006F FF8F FFDF     	movff	plusw1,indf2
  9369                           
  9370                           ;stkvar	_n @ sp[(-4)+-6]
  9371  0154D8  0EF7               	movlw	-9
  9372  0154DA  50E3               	movf	plusw1,w,c
  9373  0154DC  E108               	bnz	l10528
  9374  0154DE  0EF6               	movlw	-10
  9375  0154E0  006F FF8C  F001    	movff	plusw1,btemp
  9376  0154E6  0E09               	movlw	9
  9377  0154E8  5E01               	subwf	btemp^0,f,c
  9378  0154EA  A0D8               	btfss	status,0,c
  9379  0154EC  D091               	goto	u9480
  9380  0154EE                     l10528:
  9381                           
  9382                           ;stkvar	_s @ sp[(-4)+0]
  9383  0154EE  0EFC               	movlw	-4
  9384  0154F0  006F FF8C  F00B    	movff	plusw1,btemp+10
  9385  0154F6  1E0B               	comf	(btemp+10)^0,f,c
  9386  0154F8  0EFD               	movlw	-3
  9387  0154FA  006F FF8C  F00C    	movff	plusw1,btemp+11
  9388  015500  1E0C               	comf	(btemp+11)^0,f,c
  9389  015502  2A0B               	incf	(btemp+10)^0,f,c
  9390  015504  B4D8               	btfsc	status,2,c
  9391  015506  2A0C               	incf	(btemp+11)^0,f,c
  9392  015508  0E03               	movlw	3
  9393  01550A  160B               	andwf	(btemp+10)^0,f,c
  9394  01550C  0E00               	movlw	0
  9395  01550E  160C               	andwf	(btemp+11)^0,f,c
  9396                           
  9397                           ;stkvar	_k @ sp[(-4)+2]
  9398  015510  0EFE               	movlw	-2
  9399  015512  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9400  015518  0EFF               	movlw	-1
  9401  01551A  0060  F033  FFE3   	movff	btemp+11,plusw1
  9402                           
  9403                           ;stkvar	_k @ sp[(-4)+2]
  9404                           ;stkvar	_s @ sp[(-4)+0]
  9405  015520  0EFC               	movlw	-4
  9406  015522  50E3               	movf	plusw1,w,c
  9407  015524  6E01               	movwf	btemp^0,c
  9408  015526  0EFE               	movlw	-2
  9409  015528  50E3               	movf	plusw1,w,c
  9410  01552A  2601               	addwf	btemp^0,f,c
  9411  01552C  0EFC               	movlw	-4
  9412  01552E  0060  F007  FFE3   	movff	btemp,plusw1
  9413  015534  0EFD               	movlw	-3
  9414  015536  50E3               	movf	plusw1,w,c
  9415  015538  6E01               	movwf	btemp^0,c
  9416  01553A  0EFF               	movlw	-1
  9417  01553C  50E3               	movf	plusw1,w,c
  9418  01553E  2201               	addwfc	btemp^0,f,c
  9419  015540  0EFD               	movlw	-3
  9420  015542  0060  F007  FFE3   	movff	btemp,plusw1
  9421                           
  9422                           ;stkvar	_k @ sp[(-4)+2]
  9423                           ;stkvar	_n @ sp[(-4)+-6]
  9424  015548  0EF6               	movlw	-10
  9425  01554A  50E3               	movf	plusw1,w,c
  9426  01554C  6E01               	movwf	btemp^0,c
  9427  01554E  0EFE               	movlw	-2
  9428  015550  50E3               	movf	plusw1,w,c
  9429  015552  5E01               	subwf	btemp^0,f,c
  9430  015554  0EF6               	movlw	-10
  9431  015556  0060  F007  FFE3   	movff	btemp,plusw1
  9432  01555C  0EF7               	movlw	-9
  9433  01555E  50E3               	movf	plusw1,w,c
  9434  015560  6E01               	movwf	btemp^0,c
  9435  015562  0EFF               	movlw	-1
  9436  015564  50E3               	movf	plusw1,w,c
  9437  015566  5A01               	subwfb	btemp^0,f,c
  9438  015568  0EF7               	movlw	-9
  9439  01556A  0060  F007  FFE3   	movff	btemp,plusw1
  9440  015570  0EFC               	movlw	252
  9441  015572  6E0B               	movwf	(btemp+10)^0,c
  9442  015574  0EFF               	movlw	255
  9443  015576  6E0C               	movwf	(btemp+11)^0,c
  9444                           
  9445                           ;stkvar	_n @ sp[(-4)+-6]
  9446  015578  0EF6               	movlw	-10
  9447  01557A  006F FF8C  F001    	movff	plusw1,btemp
  9448  015580  500B               	movf	(btemp+10)^0,w,c
  9449  015582  1601               	andwf	btemp^0,f,c
  9450  015584  0EF6               	movlw	-10
  9451  015586  0060  F007  FFE3   	movff	btemp,plusw1
  9452  01558C  0EF7               	movlw	-9
  9453  01558E  006F FF8C  F001    	movff	plusw1,btemp
  9454  015594  500C               	movf	(btemp+11)^0,w,c
  9455  015596  1601               	andwf	btemp^0,f,c
  9456  015598  0EF7               	movlw	-9
  9457  01559A  D02E               	goto	L6
  9458  01559C                     l10536:
  9459                           
  9460                           ;stkvar	_c @ sp[(-4)+-4]
  9461                           ;stkvar	_s @ sp[(-4)+0]
  9462  01559C  0EFC               	movlw	-4
  9463  01559E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9464  0155A4  0EFD               	movlw	-3
  9465  0155A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9466  0155AC  0EF8               	movlw	-8
  9467  0155AE  006F FF8F FFDF     	movff	plusw1,indf2
  9468                           
  9469                           ;stkvar	_n @ sp[(-4)+-6]
  9470  0155B4  0EF6               	movlw	-10
  9471  0155B6  006F FF8C  F001    	movff	plusw1,btemp
  9472  0155BC  0E01               	movlw	1
  9473  0155BE  5E01               	subwf	btemp^0,f,c
  9474  0155C0  0EF6               	movlw	-10
  9475  0155C2  0060  F007  FFE3   	movff	btemp,plusw1
  9476  0155C8  0EF7               	movlw	-9
  9477  0155CA  006F FF8C  F001    	movff	plusw1,btemp
  9478  0155D0  0E00               	movlw	0
  9479  0155D2  5A01               	subwfb	btemp^0,f,c
  9480  0155D4  0EF7               	movlw	-9
  9481  0155D6  0060  F007  FFE3   	movff	btemp,plusw1
  9482                           
  9483                           ;stkvar	_s @ sp[(-4)+0]
  9484  0155DC  0EFC               	movlw	-4
  9485  0155DE  50E3               	movf	plusw1,w,c
  9486  0155E0  0F01               	addlw	1
  9487  0155E2  6E01               	movwf	btemp^0,c
  9488  0155E4  0EFC               	movlw	-4
  9489  0155E6  0060  F007  FFE3   	movff	btemp,plusw1
  9490  0155EC  6A01               	clrf	btemp^0,c
  9491  0155EE  0EFD               	movlw	-3
  9492  0155F0  50E3               	movf	plusw1,w,c
  9493  0155F2  2001               	addwfc	btemp^0,w,c
  9494  0155F4  6E01               	movwf	btemp^0,c
  9495  0155F6  0EFD               	movlw	-3
  9496  0155F8                     L6:
  9497  0155F8  0060  F007  FFE3   	movff	btemp,plusw1
  9498                           
  9499                           ;stkvar	_n @ sp[(-4)+-6]
  9500  0155FE  0EF6               	movlw	-10
  9501  015600  006F FF8C  F001    	movff	plusw1,btemp
  9502  015606  0EF7               	movlw	-9
  9503  015608  50E3               	movf	plusw1,w,c
  9504  01560A  1001               	iorwf	btemp^0,w,c
  9505  01560C  A4D8               	btfss	status,2,c
  9506  01560E  D7C6               	goto	l10536
  9507  015610                     u9480:
  9508                           
  9509                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  9510  015610  0EF6               	movlw	246
  9511  015612  26E1               	addwf	fsr1l,f,c
  9512  015614  0EFF               	movlw	255
  9513  015616  22E2               	addwfc	fsr1h,f,c
  9514  015618  0012               	return		;funcret
  9515  01561A                     __end_of_memset:
  9516                           	opt callstack 0
  9517                           
  9518 ;; *************** function _printf *****************
  9519 ;; Defined at:
  9520 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  9521 ;; Parameters:    Size  Location     Type
  9522 ;;  fmt             2  [STACK] PTR const unsigned char 
  9523 ;;		 -> STR_26(3), STR_25(3), STR_24(3), 
  9524 ;; Auto vars:     Size  Location     Type
  9525 ;;  ap              2  [STACK] PTR void [1]
  9526 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9527 ;;  ret             2    0        int 
  9528 ;; Return value:  Size  Location     Type
  9529 ;;                  2  [STACK] int 
  9530 ;; Registers used:
  9531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9532 ;; Tracked objects:
  9533 ;;		On entry : 3F/3B
  9534 ;;		On exit  : 3F/0
  9535 ;;		Unchanged: 0/0
  9536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9541 ;;Total ram usage:        0 bytes
  9542 ;; Hardware stack levels used:    1
  9543 ;; Hardware stack levels required when called:   23
  9544 ;; This function calls:
  9545 ;;		_vfprintf
  9546 ;; This function is called by:
  9547 ;;		_eaDogM_WriteString
  9548 ;;		_send_lcd_cmd_dma
  9549 ;; This function uses a reentrant model
  9550 ;;
  9551                           
  9552                           	psect	text41
  9553  018DAA                     __ptext41:
  9554                           	opt callstack 0
  9555  018DAA                     _printf:
  9556                           	opt callstack 0
  9557                           
  9558                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9559  018DAA  52E6               	movf	postinc1,f,c
  9560  018DAC  52E6               	movf	postinc1,f,c
  9561                           
  9562                           ;stkvar	?_printf @ sp[(-2)+-3]
  9563                           
  9564                           ;incstack = 0
  9565  018DAE  0EFB               	movlw	251
  9566  018DB0  24E1               	addwf	fsr1l,w,c
  9567  018DB2  6E0B               	movwf	(btemp+10)^0,c
  9568  018DB4  0EFF               	movlw	255
  9569  018DB6  20E2               	addwfc	fsr1h,w,c
  9570  018DB8  6E0C               	movwf	(btemp+11)^0,c
  9571                           
  9572                           ;stkvar	_ap @ sp[(-2)+0]
  9573  018DBA  0EFF               	movlw	-1
  9574  018DBC  0060  F033  FFE3   	movff	btemp+11,plusw1
  9575  018DC2  0EFE               	movlw	-2
  9576  018DC4  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9577                           
  9578                           ;stkvar	_ap @ sp[(-2)+0]
  9579  018DCA  0EFE               	movlw	254
  9580  018DCC  24E1               	addwf	fsr1l,w,c
  9581  018DCE  6E01               	movwf	btemp^0,c
  9582  018DD0  0EFF               	movlw	255
  9583  018DD2  20E2               	addwfc	fsr1h,w,c
  9584  018DD4  6E02               	movwf	(btemp+1)^0,c
  9585  018DD6  0060  F007  FFE6   	movff	btemp,postinc1
  9586  018DDC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9587                           
  9588                           ;stkvar	_fmt @ sp[(-4)+-3]
  9589  018DE2  0EF9               	movlw	-7
  9590  018DE4  006F FF8F FFE6     	movff	plusw1,postinc1
  9591  018DEA  006F FF8F FFE6     	movff	plusw1,postinc1
  9592  018DF0  0E00               	movlw	0
  9593  018DF2  6EE6               	movwf	postinc1,c
  9594  018DF4  0E00               	movlw	0
  9595  018DF6  6EE6               	movwf	postinc1,c
  9596  018DF8  ECD8  F0C1         	call	_vfprintf	;wreg free
  9597                           
  9598                           ; BSR set to: 0
  9599                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  9600  018DFC  52E5               	movf	postdec1,f,c
  9601  018DFE  52E5               	movf	postdec1,f,c
  9602  018E00  52E5               	movf	postdec1,f,c
  9603  018E02  50E7               	movf	indf1,w,c
  9604  018E04  5EE1               	subwf	fsr1l,f,c
  9605  018E06  0E00               	movlw	0
  9606  018E08  5AE2               	subwfb	fsr1h,f,c
  9607  018E0A  0012               	return		;funcret
  9608  018E0C                     __end_of_printf:
  9609                           	opt callstack 0
  9610                           
  9611 ;; *************** function _vfprintf *****************
  9612 ;; Defined at:
  9613 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9614 ;; Parameters:    Size  Location     Type
  9615 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9616 ;;		 -> f(6), NULL(0), 
  9617 ;;  fmt             2  [STACK] PTR const unsigned char 
  9618 ;;		 -> STR_46(75), STR_44(3), STR_43(3), STR_42(19), 
  9619 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
  9620 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
  9621 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
  9622 ;;		 -> STR_29(19), STR_26(3), STR_25(3), STR_24(3), 
  9623 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  9624 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
  9625 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  9626 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  9627 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  9628 ;;		 -> STR_1(17), 
  9629 ;;  ap              2  [STACK] PTR PTR void 
  9630 ;;		 -> ap(2), ap(2), 
  9631 ;; Auto vars:     Size  Location     Type
  9632 ;;  cfmt            2  [STACK] PTR unsigned char 
  9633 ;;		 -> STR_46(75), STR_44(3), STR_43(3), STR_42(19), 
  9634 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
  9635 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
  9636 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
  9637 ;;		 -> STR_29(19), STR_26(3), STR_25(3), STR_24(3), 
  9638 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  9639 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
  9640 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  9641 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  9642 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  9643 ;;		 -> STR_1(17), 
  9644 ;; Return value:  Size  Location     Type
  9645 ;;                  2  [STACK] int 
  9646 ;; Registers used:
  9647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9648 ;; Tracked objects:
  9649 ;;		On entry : 0/2
  9650 ;;		On exit  : 3F/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9657 ;;Total ram usage:        0 bytes
  9658 ;; Hardware stack levels used:    1
  9659 ;; Hardware stack levels required when called:   22
  9660 ;; This function calls:
  9661 ;;		_vfpfcnvrt
  9662 ;; This function is called by:
  9663 ;;		_sprintf
  9664 ;;		_printf
  9665 ;; This function uses a reentrant model
  9666 ;;
  9667                           
  9668                           	psect	text42
  9669  0183B0                     __ptext42:
  9670                           	opt callstack 0
  9671  0183B0                     _vfprintf:
  9672                           	opt callstack 0
  9673                           
  9674                           ; BSR set to: 0
  9675                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9676  0183B0  52E6               	movf	postinc1,f,c
  9677  0183B2  52E6               	movf	postinc1,f,c
  9678                           
  9679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  9680                           ;stkvar	_fmt @ sp[(-2)+-4]
  9681                           
  9682                           ;incstack = 0
  9683 ;; hardware stack exceeded
  9684  0183B4  0EFA               	movlw	-6
  9685  0183B6  006F FF8C  F00B    	movff	plusw1,btemp+10
  9686  0183BC  0EFB               	movlw	-5
  9687  0183BE  006F FF8C  F00C    	movff	plusw1,btemp+11
  9688                           
  9689                           ;stkvar	_cfmt @ sp[(-2)+0]
  9690  0183C4  0EFF               	movlw	-1
  9691  0183C6  0060  F033  FFE3   	movff	btemp+11,plusw1
  9692  0183CC  0EFE               	movlw	-2
  9693  0183CE  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9694                           
  9695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  9696  0183D4  0100               	movlb	0	; () banked
  9697  0183D6  6BC7               	clrf	_nout& (0+255),b
  9698  0183D8  6BC8               	clrf	(_nout+1)& (0+255),b
  9699                           
  9700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9701  0183DA  D021               	goto	l11278
  9702  0183DC                     l11276:
  9703                           
  9704                           ; BSR set to: 0
  9705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  9706                           ;stkvar	_ap @ sp[(-2)+-6]
  9707  0183DC  0EF8               	movlw	-8
  9708  0183DE  006F FF8F FFE6     	movff	plusw1,postinc1
  9709  0183E4  006F FF8F FFE6     	movff	plusw1,postinc1
  9710                           
  9711                           ;stkvar	_cfmt @ sp[(-4)+0]
  9712  0183EA  0EFC               	movlw	252
  9713  0183EC  24E1               	addwf	fsr1l,w,c
  9714  0183EE  6E01               	movwf	btemp^0,c
  9715  0183F0  0EFF               	movlw	255
  9716  0183F2  20E2               	addwfc	fsr1h,w,c
  9717  0183F4  6E02               	movwf	(btemp+1)^0,c
  9718  0183F6  0060  F007  FFE6   	movff	btemp,postinc1
  9719  0183FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9720                           
  9721                           ;stkvar	_fp @ sp[(-6)+-2]
  9722  018402  0EF8               	movlw	-8
  9723  018404  006F FF8F FFE6     	movff	plusw1,postinc1
  9724  01840A  006F FF8F FFE6     	movff	plusw1,postinc1
  9725  018410  EC22  F089         	call	_vfpfcnvrt	;wreg free
  9726  018414  5001               	movf	btemp^0,w,c
  9727  018416  0100               	movlb	0	; () banked
  9728  018418  27C7               	addwf	_nout& (0+255),f,b
  9729  01841A  5002               	movf	(btemp+1)^0,w,c
  9730  01841C  23C8               	addwfc	(_nout+1)& (0+255),f,b
  9731  01841E                     l11278:
  9732                           
  9733                           ; BSR set to: 0
  9734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9735                           ;stkvar	_cfmt @ sp[(-2)+0]
  9736  01841E  50E1               	movf	fsr1l,w,c
  9737  018420  0FFE               	addlw	-2
  9738  018422  6ED9               	movwf	fsr2l,c
  9739  018424  50E2               	movf	fsr1h,w,c
  9740  018426  6EDA               	movwf	fsr2h,c
  9741  018428  0EFF               	movlw	255
  9742  01842A  22DA               	addwfc	fsr2h,f,c
  9743  01842C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9744  018432  006F FF77 FFF7     	movff	postdec2,tblptrh
  9745  018438                     	if	0	;tblptru may be non-zero
  9746  018438                     	endif
  9747  018438                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9748  018438  0E00               	movlw	low (__mediumconst shr (0+16))
  9749  01843A  6EF8               	movwf	tblptru,c
  9750  01843C                     	endif
  9751  01843C  0008               	tblrd		*
  9752  01843E  50F5               	movf	tablat,w,c
  9753  018440  0900               	iorlw	0
  9754  018442  A4D8               	btfss	status,2,c
  9755  018444  D7CB               	goto	l11276
  9756                           
  9757                           ; BSR set to: 0
  9758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  9759  018446  0060  F31C  F001   	movff	_nout,btemp
  9760  01844C  0060  F320  F002   	movff	_nout+1,btemp+1
  9761                           
  9762                           ; BSR set to: 0
  9763                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  9764  018452  0EF8               	movlw	248
  9765  018454  26E1               	addwf	fsr1l,f,c
  9766  018456  0EFF               	movlw	255
  9767  018458  22E2               	addwfc	fsr1h,f,c
  9768  01845A  0012               	return		;funcret
  9769  01845C                     __end_of_vfprintf:
  9770                           	opt callstack 0
  9771                           
  9772 ;; *************** function _vfpfcnvrt *****************
  9773 ;; Defined at:
  9774 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9777 ;;		 -> f(6), NULL(0), 
  9778 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  9779 ;;		 -> cfmt(2), 
  9780 ;;  ap              2  [STACK] PTR PTR void 
  9781 ;;		 -> ap(2), ap(2), 
  9782 ;; Auto vars:     Size  Location     Type
  9783 ;;  llu             8  [STACK] unsigned long long 
  9784 ;;  ll              8  [STACK] long long 
  9785 ;;  f               4  [STACK] long long 
  9786 ;;  ct              3  [STACK] unsigned char [3]
  9787 ;;  vp              3    0        PTR void 
  9788 ;;  cp              2  [STACK] PTR unsigned char 
  9789 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
  9790 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
  9791 ;;		 -> STR_3(6), V(188), 
  9792 ;;  i               2    0        int 
  9793 ;;  done            2    0        int 
  9794 ;;  c               1  [STACK] unsigned char 
  9795 ;; Return value:  Size  Location     Type
  9796 ;;                  2  [STACK] int 
  9797 ;; Registers used:
  9798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9799 ;; Tracked objects:
  9800 ;;		On entry : 0/0
  9801 ;;		On exit  : 0/0
  9802 ;;		Unchanged: 0/0
  9803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9808 ;;Total ram usage:        0 bytes
  9809 ;; Hardware stack levels used:    1
  9810 ;; Hardware stack levels required when called:   21
  9811 ;; This function calls:
  9812 ;;		_atoi
  9813 ;;		_ctoa
  9814 ;;		_dtoa
  9815 ;;		_efgtoa
  9816 ;;		_fputc
  9817 ;;		_isdigit
  9818 ;;		_isupper
  9819 ;;		_stoa
  9820 ;;		_strncmp
  9821 ;;		_tolower
  9822 ;;		_xtoa
  9823 ;; This function is called by:
  9824 ;;		_vfprintf
  9825 ;; This function uses a reentrant model
  9826 ;;
  9827                           
  9828                           	psect	text43
  9829  011244                     __ptext43:
  9830                           	opt callstack 0
  9831  011244                     _vfpfcnvrt:
  9832                           	opt callstack 0
  9833                           
  9834                           ; BSR set to: 0
  9835                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9836  011244  0E20               	movlw	32
  9837  011246  26E1               	addwf	fsr1l,f,c
  9838  011248  0E00               	movlw	0
  9839  01124A  22E2               	addwfc	fsr1h,f,c
  9840                           
  9841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  9842                           ;stkvar	_fmt @ sp[(-32)+-4]
  9843                           
  9844                           ;incstack = 0
  9845 ;; hardware stack exceeded
  9846  01124C  0EDC               	movlw	-36
  9847  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9848  011254  0EDD               	movlw	-35
  9849  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  9850  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9851  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  9852  011268                     	if	0	;tblptru may be non-zero
  9853  011268                     	endif
  9854  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9855  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  9856  01126A  6EF8               	movwf	tblptru,c
  9857  01126C                     	endif
  9858  01126C  0008               	tblrd		*
  9859  01126E  50F5               	movf	tablat,w,c
  9860  011270  0A25               	xorlw	37
  9861  011272  A4D8               	btfss	status,2,c
  9862  011274  EF92  F08E         	goto	l11222
  9863                           
  9864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  9865                           ;stkvar	_fmt @ sp[(-32)+-4]
  9866  011278  0EDC               	movlw	-36
  9867  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9868  011280  0EDD               	movlw	-35
  9869  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  9870  011288  2ADE               	incf	postinc2,f,c
  9871  01128A  0E00               	movlw	0
  9872  01128C  22DD               	addwfc	postdec2,f,c
  9873                           
  9874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  9875  01128E  6A21               	clrf	_width^0,c
  9876  011290  6A22               	clrf	(_width+1)^0,c
  9877  011292  6A25               	clrf	_flags^0,c
  9878  011294  6A26               	clrf	(_flags+1)^0,c
  9879                           
  9880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  9881  011296  6823               	setf	_prec^0,c
  9882  011298  6824               	setf	(_prec+1)^0,c
  9883                           
  9884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  9885                           ;stkvar	_fmt @ sp[(-32)+-4]
  9886  01129A  0EDC               	movlw	-36
  9887  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9888  0112A2  0EDD               	movlw	-35
  9889  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9890  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  9891  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  9892  0112B6                     	if	0	;tblptru may be non-zero
  9893  0112B6                     	endif
  9894  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9895  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  9896  0112B8  6EF8               	movwf	tblptru,c
  9897  0112BA                     	endif
  9898  0112BA  0008               	tblrd		*
  9899  0112BC  50F5               	movf	tablat,w,c
  9900  0112BE  0A2A               	xorlw	42
  9901  0112C0  A4D8               	btfss	status,2,c
  9902  0112C2  D031               	goto	l11086
  9903                           
  9904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  9905                           ;stkvar	_fmt @ sp[(-32)+-4]
  9906  0112C4  0EDC               	movlw	-36
  9907  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  9908  0112CC  0EDD               	movlw	-35
  9909  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  9910  0112D4  2ADE               	incf	postinc2,f,c
  9911  0112D6  0E00               	movlw	0
  9912  0112D8  22DD               	addwfc	postdec2,f,c
  9913                           
  9914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  9915                           ;stkvar	_ap @ sp[(-32)+-6]
  9916  0112DA  0EDA               	movlw	-38
  9917  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9918  0112E2  0EDB               	movlw	-37
  9919  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9920  0112EA  0E02               	movlw	2
  9921  0112EC  5EDE               	subwf	postinc2,f,c
  9922  0112EE  0E00               	movlw	0
  9923  0112F0  5ADD               	subwfb	postdec2,f,c
  9924  0112F2  006F FF78  F00B    	movff	postinc2,btemp+10
  9925  0112F8  006F FF74  F00C    	movff	postdec2,btemp+11
  9926  0112FE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9927  011304  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9928  01130A  006F FF78  F021    	movff	postinc2,_width
  9929  011310  006F FF74  F022    	movff	postdec2,_width+1
  9930                           
  9931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  9932  011316  AE22               	btfss	(_width+1)^0,7,c
  9933  011318  D066               	goto	u10540
  9934                           
  9935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  9936  01131A  8025               	bsf	_flags^0,0,c
  9937                           
  9938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  9939  01131C  6C21               	negf	_width^0,c
  9940  01131E  1E22               	comf	(_width+1)^0,f,c
  9941  011320  B0D8               	btfsc	status,0,c
  9942  011322  2A22               	incf	(_width+1)^0,f,c
  9943  011324  D060               	goto	u10540
  9944  011326                     l11086:
  9945                           
  9946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  9947                           ;stkvar	_fmt @ sp[(-32)+-4]
  9948  011326  0EDC               	movlw	-36
  9949  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  9950  01132E  0EDD               	movlw	-35
  9951  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  9952  011336  006F FF78  F00B    	movff	postinc2,btemp+10
  9953  01133C  006F FF74  F00C    	movff	postdec2,btemp+11
  9954  011342  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9955  011348  0060  F033  FFE6   	movff	btemp+11,postinc1
  9956  01134E  EC19  F0AF         	call	_atoi	;wreg free
  9957  011352  0060  F004  F021   	movff	btemp,_width
  9958  011358  0060  F008  F022   	movff	btemp+1,_width+1
  9959                           
  9960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9961  01135E  D00B               	goto	l11090
  9962  011360                     l11088:
  9963                           
  9964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  9965                           ;stkvar	_fmt @ sp[(-32)+-4]
  9966  011360  0EDC               	movlw	-36
  9967  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  9968  011368  0EDD               	movlw	-35
  9969  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9970  011370  2ADE               	incf	postinc2,f,c
  9971  011372  0E00               	movlw	0
  9972  011374  22DD               	addwfc	postdec2,f,c
  9973  011376                     l11090:
  9974  011376  0ED0               	movlw	208
  9975  011378  6E0B               	movwf	(btemp+10)^0,c
  9976  01137A  0EFF               	movlw	255
  9977  01137C  6E0C               	movwf	(btemp+11)^0,c
  9978                           
  9979                           ;stkvar	_fmt @ sp[(-32)+-4]
  9980  01137E  0EDC               	movlw	-36
  9981  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  9982  011386  0EDD               	movlw	-35
  9983  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  9984  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9985  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  9986  01139A                     	if	0	;tblptru may be non-zero
  9987  01139A                     	endif
  9988  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9989  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  9990  01139C  6EF8               	movwf	tblptru,c
  9991  01139E                     	endif
  9992  01139E  0008               	tblrd		*
  9993  0113A0  50F5               	movf	tablat,w,c
  9994  0113A2  6E09               	movwf	(btemp+8)^0,c
  9995  0113A4  6A0A               	clrf	(btemp+9)^0,c
  9996  0113A6  500B               	movf	(btemp+10)^0,w,c
  9997  0113A8  2609               	addwf	(btemp+8)^0,f,c
  9998  0113AA  500C               	movf	(btemp+11)^0,w,c
  9999  0113AC  220A               	addwfc	(btemp+9)^0,f,c
 10000  0113AE  500A               	movf	(btemp+9)^0,w,c
 10001  0113B0  E106               	bnz	u10520
 10002  0113B2  0E0A               	movlw	10
 10003  0113B4  5C09               	subwf	(btemp+8)^0,w,c
 10004  0113B6  B0D8               	btfsc	status,0,c
 10005  0113B8  D002               	goto	u10520
 10006  0113BA  0E01               	movlw	1
 10007  0113BC  D001               	goto	u10530
 10008  0113BE                     u10520:
 10009  0113BE  0E00               	movlw	0
 10010  0113C0                     u10530:
 10011  0113C0  6E0B               	movwf	(btemp+10)^0,c
 10012  0113C2  6A0C               	clrf	(btemp+11)^0,c
 10013                           
 10014                           ;stkvar	_vfpfcnvrt$5204 @ sp[(-32)+4]
 10015  0113C4  0EE4               	movlw	-28
 10016  0113C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10017  0113CC  0EE5               	movlw	-27
 10018  0113CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 10019                           
 10020                           ;stkvar	_vfpfcnvrt$5204 @ sp[(-32)+4]
 10021  0113D4  0EE4               	movlw	-28
 10022  0113D6  006F FF8C  F001    	movff	plusw1,btemp
 10023  0113DC  0EE5               	movlw	-27
 10024  0113DE  50E3               	movf	plusw1,w,c
 10025  0113E0  1001               	iorwf	btemp^0,w,c
 10026  0113E2  A4D8               	btfss	status,2,c
 10027  0113E4  D7BD               	goto	l11088
 10028  0113E6                     u10540:
 10029                           
 10030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 10031                           ;stkvar	_fmt @ sp[(-32)+-4]
 10032  0113E6  0EDC               	movlw	-36
 10033  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10034  0113EE  0EDD               	movlw	-35
 10035  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10036  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10037  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10038  011402                     	if	0	;tblptru may be non-zero
 10039  011402                     	endif
 10040  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10041  011402  0E00               	movlw	low (__mediumconst shr (0+16))
 10042  011404  6EF8               	movwf	tblptru,c
 10043  011406                     	endif
 10044  011406  0008               	tblrd		*
 10045  011408  50F5               	movf	tablat,w,c
 10046  01140A  0A2E               	xorlw	46
 10047  01140C  A4D8               	btfss	status,2,c
 10048  01140E  D0AC               	goto	u10590
 10049                           
 10050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 10051  011410  6A23               	clrf	_prec^0,c
 10052  011412  6A24               	clrf	(_prec+1)^0,c
 10053                           
 10054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 10055                           ;stkvar	_fmt @ sp[(-32)+-4]
 10056  011414  0EDC               	movlw	-36
 10057  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
 10058  01141C  0EDD               	movlw	-35
 10059  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10060  011424  2ADE               	incf	postinc2,f,c
 10061  011426  0E00               	movlw	0
 10062  011428  22DD               	addwfc	postdec2,f,c
 10063                           
 10064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 10065                           ;stkvar	_fmt @ sp[(-32)+-4]
 10066  01142A  0EDC               	movlw	-36
 10067  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10068  011432  0EDD               	movlw	-35
 10069  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
 10070  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10071  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
 10072  011446                     	if	0	;tblptru may be non-zero
 10073  011446                     	endif
 10074  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10075  011446  0E00               	movlw	low (__mediumconst shr (0+16))
 10076  011448  6EF8               	movwf	tblptru,c
 10077  01144A                     	endif
 10078  01144A  0008               	tblrd		*
 10079  01144C  50F5               	movf	tablat,w,c
 10080  01144E  0A2A               	xorlw	42
 10081  011450  A4D8               	btfss	status,2,c
 10082  011452  D02A               	goto	l11108
 10083                           
 10084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 10085                           ;stkvar	_fmt @ sp[(-32)+-4]
 10086  011454  0EDC               	movlw	-36
 10087  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
 10088  01145C  0EDD               	movlw	-35
 10089  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10090  011464  2ADE               	incf	postinc2,f,c
 10091  011466  0E00               	movlw	0
 10092  011468  22DD               	addwfc	postdec2,f,c
 10093                           
 10094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 10095                           ;stkvar	_ap @ sp[(-32)+-6]
 10096  01146A  0EDA               	movlw	-38
 10097  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10098  011472  0EDB               	movlw	-37
 10099  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
 10100  01147A  0E02               	movlw	2
 10101  01147C  5EDE               	subwf	postinc2,f,c
 10102  01147E  0E00               	movlw	0
 10103  011480  5ADD               	subwfb	postdec2,f,c
 10104  011482  006F FF78  F00B    	movff	postinc2,btemp+10
 10105  011488  006F FF74  F00C    	movff	postdec2,btemp+11
 10106  01148E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10107  011494  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10108  01149A  006F FF78  F023    	movff	postinc2,_prec
 10109  0114A0  006F FF74  F024    	movff	postdec2,_prec+1
 10110                           
 10111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 10112  0114A6  D060               	goto	u10590
 10113  0114A8                     l11108:
 10114                           
 10115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 10116                           ;stkvar	_fmt @ sp[(-32)+-4]
 10117  0114A8  0EDC               	movlw	-36
 10118  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10119  0114B0  0EDD               	movlw	-35
 10120  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10121  0114B8  006F FF78  F00B    	movff	postinc2,btemp+10
 10122  0114BE  006F FF74  F00C    	movff	postdec2,btemp+11
 10123  0114C4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10124  0114CA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10125  0114D0  EC19  F0AF         	call	_atoi	;wreg free
 10126  0114D4  0060  F004  F023   	movff	btemp,_prec
 10127  0114DA  0060  F008  F024   	movff	btemp+1,_prec+1
 10128                           
 10129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10130  0114E0  D00B               	goto	l11112
 10131  0114E2                     l11110:
 10132                           
 10133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 10134                           ;stkvar	_fmt @ sp[(-32)+-4]
 10135  0114E2  0EDC               	movlw	-36
 10136  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10137  0114EA  0EDD               	movlw	-35
 10138  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10139  0114F2  2ADE               	incf	postinc2,f,c
 10140  0114F4  0E00               	movlw	0
 10141  0114F6  22DD               	addwfc	postdec2,f,c
 10142  0114F8                     l11112:
 10143  0114F8  0ED0               	movlw	208
 10144  0114FA  6E0B               	movwf	(btemp+10)^0,c
 10145  0114FC  0EFF               	movlw	255
 10146  0114FE  6E0C               	movwf	(btemp+11)^0,c
 10147                           
 10148                           ;stkvar	_fmt @ sp[(-32)+-4]
 10149  011500  0EDC               	movlw	-36
 10150  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
 10151  011508  0EDD               	movlw	-35
 10152  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10153  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
 10154  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
 10155  01151C                     	if	0	;tblptru may be non-zero
 10156  01151C                     	endif
 10157  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10158  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
 10159  01151E  6EF8               	movwf	tblptru,c
 10160  011520                     	endif
 10161  011520  0008               	tblrd		*
 10162  011522  50F5               	movf	tablat,w,c
 10163  011524  6E09               	movwf	(btemp+8)^0,c
 10164  011526  6A0A               	clrf	(btemp+9)^0,c
 10165  011528  500B               	movf	(btemp+10)^0,w,c
 10166  01152A  2609               	addwf	(btemp+8)^0,f,c
 10167  01152C  500C               	movf	(btemp+11)^0,w,c
 10168  01152E  220A               	addwfc	(btemp+9)^0,f,c
 10169  011530  500A               	movf	(btemp+9)^0,w,c
 10170  011532  E106               	bnz	u10570
 10171  011534  0E0A               	movlw	10
 10172  011536  5C09               	subwf	(btemp+8)^0,w,c
 10173  011538  B0D8               	btfsc	status,0,c
 10174  01153A  D002               	goto	u10570
 10175  01153C  0E01               	movlw	1
 10176  01153E  D001               	goto	u10580
 10177  011540                     u10570:
 10178  011540  0E00               	movlw	0
 10179  011542                     u10580:
 10180  011542  6E0B               	movwf	(btemp+10)^0,c
 10181  011544  6A0C               	clrf	(btemp+11)^0,c
 10182                           
 10183                           ;stkvar	_vfpfcnvrt$5205 @ sp[(-32)+0]
 10184  011546  0EE0               	movlw	-32
 10185  011548  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10186  01154E  0EE1               	movlw	-31
 10187  011550  0060  F033  FFE3   	movff	btemp+11,plusw1
 10188                           
 10189                           ;stkvar	_vfpfcnvrt$5205 @ sp[(-32)+0]
 10190  011556  0EE0               	movlw	-32
 10191  011558  006F FF8C  F001    	movff	plusw1,btemp
 10192  01155E  0EE1               	movlw	-31
 10193  011560  50E3               	movf	plusw1,w,c
 10194  011562  1001               	iorwf	btemp^0,w,c
 10195  011564  A4D8               	btfss	status,2,c
 10196  011566  D7BD               	goto	l11110
 10197  011568                     u10590:
 10198                           
 10199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 10200                           ;stkvar	_fmt @ sp[(-32)+-4]
 10201  011568  0EDC               	movlw	-36
 10202  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10203  011570  0EDD               	movlw	-35
 10204  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
 10205  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
 10206  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10207  011584                     	if	0	;tblptru may be non-zero
 10208  011584                     	endif
 10209  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10210  011584  0E00               	movlw	low (__mediumconst shr (0+16))
 10211  011586  6EF8               	movwf	tblptru,c
 10212  011588                     	endif
 10213  011588  0008               	tblrd		*
 10214  01158A  50F5               	movf	tablat,w,c
 10215  01158C  6EE6               	movwf	postinc1,c
 10216  01158E  0E00               	movlw	0
 10217  011590  6EE6               	movwf	postinc1,c
 10218  011592  EC1E  F0C5         	call	_tolower	;wreg free
 10219                           
 10220                           ;stkvar	_ct @ sp[(-32)+26]
 10221  011596  0EFA               	movlw	-6
 10222  011598  0060  F007  FFE3   	movff	btemp,plusw1
 10223                           
 10224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 10225                           ;stkvar	_ct @ sp[(-32)+26]
 10226  01159E  0EFA               	movlw	-6
 10227  0115A0  50E3               	movf	plusw1,w,c
 10228  0115A2  B4D8               	btfsc	status,2,c
 10229  0115A4  D05B               	goto	l11128
 10230                           
 10231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 10232                           ;stkvar	_ct @ sp[(-32)+26]
 10233  0115A6  0EFB               	movlw	251
 10234  0115A8  24E1               	addwf	fsr1l,w,c
 10235  0115AA  6ED9               	movwf	fsr2l,c
 10236  0115AC  0EFF               	movlw	255
 10237  0115AE  20E2               	addwfc	fsr1h,w,c
 10238  0115B0  6EDA               	movwf	fsr2h,c
 10239                           
 10240                           ;stkvar	_fmt @ sp[(-32)+-4]
 10241  0115B2  0EDC               	movlw	-36
 10242  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
 10243  0115BA  0EDD               	movlw	-35
 10244  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
 10245  0115C2  006F FFB8  F00B    	movff	postinc0,btemp+10
 10246  0115C8  006F FFB4  F00C    	movff	postdec0,btemp+11
 10247  0115CE  0E01               	movlw	1
 10248  0115D0  260B               	addwf	(btemp+10)^0,f,c
 10249  0115D2  0E00               	movlw	0
 10250  0115D4  220C               	addwfc	(btemp+11)^0,f,c
 10251  0115D6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10252  0115DC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10253  0115E2                     	if	0	;tblptru may be non-zero
 10254  0115E2                     	endif
 10255  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10256  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
 10257  0115E4  6EF8               	movwf	tblptru,c
 10258  0115E6                     	endif
 10259  0115E6  0008               	tblrd		*
 10260  0115E8  50F5               	movf	tablat,w,c
 10261  0115EA  6EE6               	movwf	postinc1,c
 10262  0115EC  0E00               	movlw	0
 10263  0115EE  6EE6               	movwf	postinc1,c
 10264  0115F0  EC1E  F0C5         	call	_tolower	;wreg free
 10265  0115F4  5001               	movf	btemp^0,w,c
 10266  0115F6  6EDF               	movwf	indf2,c
 10267                           
 10268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 10269                           ;stkvar	_ct @ sp[(-32)+26]
 10270  0115F8  0EFB               	movlw	251
 10271  0115FA  24E1               	addwf	fsr1l,w,c
 10272  0115FC  6ED9               	movwf	fsr2l,c
 10273  0115FE  0EFF               	movlw	255
 10274  011600  20E2               	addwfc	fsr1h,w,c
 10275  011602  6EDA               	movwf	fsr2h,c
 10276  011604  50DF               	movf	indf2,w,c
 10277  011606  B4D8               	btfsc	status,2,c
 10278  011608  D029               	goto	l11128
 10279                           
 10280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 10281                           ;stkvar	_ct @ sp[(-32)+26]
 10282  01160A  0EFC               	movlw	252
 10283  01160C  24E1               	addwf	fsr1l,w,c
 10284  01160E  6ED9               	movwf	fsr2l,c
 10285  011610  0EFF               	movlw	255
 10286  011612  20E2               	addwfc	fsr1h,w,c
 10287  011614  6EDA               	movwf	fsr2h,c
 10288                           
 10289                           ;stkvar	_fmt @ sp[(-32)+-4]
 10290  011616  0EDC               	movlw	-36
 10291  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
 10292  01161E  0EDD               	movlw	-35
 10293  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
 10294  011626  006F FFB8  F00B    	movff	postinc0,btemp+10
 10295  01162C  006F FFB4  F00C    	movff	postdec0,btemp+11
 10296  011632  0E02               	movlw	2
 10297  011634  260B               	addwf	(btemp+10)^0,f,c
 10298  011636  0E00               	movlw	0
 10299  011638  220C               	addwfc	(btemp+11)^0,f,c
 10300  01163A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10301  011640  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10302  011646                     	if	0	;tblptru may be non-zero
 10303  011646                     	endif
 10304  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10305  011646  0E00               	movlw	low (__mediumconst shr (0+16))
 10306  011648  6EF8               	movwf	tblptru,c
 10307  01164A                     	endif
 10308  01164A  0008               	tblrd		*
 10309  01164C  50F5               	movf	tablat,w,c
 10310  01164E  6EE6               	movwf	postinc1,c
 10311  011650  0E00               	movlw	0
 10312  011652  6EE6               	movwf	postinc1,c
 10313  011654  EC1E  F0C5         	call	_tolower	;wreg free
 10314  011658  5001               	movf	btemp^0,w,c
 10315  01165A  6EDF               	movwf	indf2,c
 10316  01165C                     l11128:
 10317                           
 10318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 10319                           ;stkvar	_fmt @ sp[(-32)+-4]
 10320  01165C  0EDC               	movlw	-36
 10321  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10322  011664  0EDD               	movlw	-35
 10323  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
 10324  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10325  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
 10326  011678                     	if	0	;tblptru may be non-zero
 10327  011678                     	endif
 10328  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10329  011678  0E00               	movlw	low (__mediumconst shr (0+16))
 10330  01167A  6EF8               	movwf	tblptru,c
 10331  01167C                     	endif
 10332  01167C  0008               	tblrd		*
 10333  01167E  50F5               	movf	tablat,w,c
 10334  011680  0A63               	xorlw	99
 10335  011682  A4D8               	btfss	status,2,c
 10336  011684  D036               	goto	l11138
 10337                           
 10338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 10339                           ;stkvar	_fmt @ sp[(-32)+-4]
 10340  011686  0EDC               	movlw	-36
 10341  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
 10342  01168E  0EDD               	movlw	-35
 10343  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
 10344  011696  2ADE               	incf	postinc2,f,c
 10345  011698  0E00               	movlw	0
 10346  01169A  22DD               	addwfc	postdec2,f,c
 10347                           
 10348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10349                           ;stkvar	_ap @ sp[(-32)+-6]
 10350  01169C  0EDA               	movlw	-38
 10351  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10352  0116A4  0EDB               	movlw	-37
 10353  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10354  0116AC  0E02               	movlw	2
 10355  0116AE  5EDE               	subwf	postinc2,f,c
 10356  0116B0  0E00               	movlw	0
 10357  0116B2  5ADD               	subwfb	postdec2,f,c
 10358  0116B4  006F FF78  F00B    	movff	postinc2,btemp+10
 10359  0116BA  006F FF74  F00C    	movff	postdec2,btemp+11
 10360  0116C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10361  0116C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10362  0116CC  50DF               	movf	indf2,w,c
 10363  0116CE  6E0C               	movwf	(btemp+11)^0,c
 10364                           
 10365                           ;stkvar	_c @ sp[(-32)+31]
 10366  0116D0  0EFF               	movlw	-1
 10367  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10368                           
 10369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 10370                           ;stkvar	_c @ sp[(-32)+31]
 10371  0116D8  0EFF               	movlw	-1
 10372  0116DA  50E3               	movf	plusw1,w,c
 10373  0116DC  6EE6               	movwf	postinc1,c
 10374                           
 10375                           ;stkvar	_fp @ sp[(-33)+-2]
 10376  0116DE  0EDD               	movlw	-35
 10377  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10378  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10379  0116EC  EC98  F0C4         	call	_ctoa	;wreg free
 10380  0116F0  D343               	goto	l2210
 10381  0116F2                     l11138:
 10382                           
 10383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 10384                           ;stkvar	_fmt @ sp[(-32)+-4]
 10385  0116F2  0EDC               	movlw	-36
 10386  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10387  0116FA  0EDD               	movlw	-35
 10388  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10389  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
 10390  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
 10391  01170E                     	if	0	;tblptru may be non-zero
 10392  01170E                     	endif
 10393  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10394  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
 10395  011710  6EF8               	movwf	tblptru,c
 10396  011712                     	endif
 10397  011712  0008               	tblrd		*
 10398  011714  50F5               	movf	tablat,w,c
 10399  011716  0A64               	xorlw	100
 10400  011718  B4D8               	btfsc	status,2,c
 10401  01171A  D015               	goto	u10640
 10402                           
 10403                           ;stkvar	_fmt @ sp[(-32)+-4]
 10404  01171C  0EDC               	movlw	-36
 10405  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10406  011724  0EDD               	movlw	-35
 10407  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
 10408  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10409  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
 10410  011738                     	if	0	;tblptru may be non-zero
 10411  011738                     	endif
 10412  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10413  011738  0E00               	movlw	low (__mediumconst shr (0+16))
 10414  01173A  6EF8               	movwf	tblptru,c
 10415  01173C                     	endif
 10416  01173C  0008               	tblrd		*
 10417  01173E  50F5               	movf	tablat,w,c
 10418  011740  0A69               	xorlw	105
 10419  011742  A4D8               	btfss	status,2,c
 10420  011744  D075               	goto	l11150
 10421  011746                     u10640:
 10422                           
 10423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 10424                           ;stkvar	_fmt @ sp[(-32)+-4]
 10425  011746  0EDC               	movlw	-36
 10426  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
 10427  01174E  0EDD               	movlw	-35
 10428  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
 10429  011756  2ADE               	incf	postinc2,f,c
 10430  011758  0E00               	movlw	0
 10431  01175A  22DD               	addwfc	postdec2,f,c
 10432                           
 10433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 10434                           ;stkvar	_ap @ sp[(-32)+-6]
 10435  01175C  0EDA               	movlw	-38
 10436  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10437  011764  0EDB               	movlw	-37
 10438  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
 10439  01176C  0E02               	movlw	2
 10440  01176E  5EDE               	subwf	postinc2,f,c
 10441  011770  0E00               	movlw	0
 10442  011772  5ADD               	subwfb	postdec2,f,c
 10443  011774  006F FF78  F00B    	movff	postinc2,btemp+10
 10444  01177A  006F FF74  F00C    	movff	postdec2,btemp+11
 10445  011780  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10446  011786  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10447  01178C  006F FF78  F00B    	movff	postinc2,btemp+10
 10448  011792  006F FF74  F00C    	movff	postdec2,btemp+11
 10449                           
 10450                           ;stkvar	_ll @ sp[(-32)+14]
 10451  011798  0EEE               	movlw	-18
 10452  01179A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10453  0117A0  0EEF               	movlw	-17
 10454  0117A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10455  0117A8  6A01               	clrf	btemp^0,c
 10456  0117AA  BEE3               	btfsc	plusw1,7,c
 10457  0117AC  6801               	setf	btemp^0,c
 10458  0117AE  0EF0               	movlw	-16
 10459  0117B0  0060  F007  FFE3   	movff	btemp,plusw1
 10460  0117B6  0EF1               	movlw	-15
 10461  0117B8  0060  F007  FFE3   	movff	btemp,plusw1
 10462  0117BE  0EF2               	movlw	-14
 10463  0117C0  0060  F007  FFE3   	movff	btemp,plusw1
 10464  0117C6  0EF3               	movlw	-13
 10465  0117C8  0060  F007  FFE3   	movff	btemp,plusw1
 10466  0117CE  0EF4               	movlw	-12
 10467  0117D0  0060  F007  FFE3   	movff	btemp,plusw1
 10468  0117D6  0EF5               	movlw	-11
 10469  0117D8  0060  F007  FFE3   	movff	btemp,plusw1
 10470                           
 10471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 10472                           ;stkvar	_ll @ sp[(-32)+14]
 10473  0117DE  50E1               	movf	fsr1l,w,c
 10474  0117E0  0FEE               	addlw	-18
 10475  0117E2  6ED9               	movwf	fsr2l,c
 10476  0117E4  50E2               	movf	fsr1h,w,c
 10477  0117E6  6EDA               	movwf	fsr2h,c
 10478  0117E8  0EFF               	movlw	255
 10479  0117EA  22DA               	addwfc	fsr2h,f,c
 10480  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
 10481  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
 10482  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
 10483  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
 10484  011804  006F FF7B FFE6     	movff	postinc2,postinc1
 10485  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
 10486  011810  006F FF7B FFE6     	movff	postinc2,postinc1
 10487  011816  006F FF7B FFE6     	movff	postinc2,postinc1
 10488                           
 10489                           ;stkvar	_fp @ sp[(-40)+-2]
 10490  01181C  0ED6               	movlw	-42
 10491  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
 10492  011824  006F FF8F FFE6     	movff	plusw1,postinc1
 10493  01182A  ECC4  F0A3         	call	_dtoa	;wreg free
 10494  01182E  D2A4               	goto	l2210
 10495  011830                     l11150:
 10496                           
 10497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 10498                           ;stkvar	_ct @ sp[(-32)+26]
 10499  011830  0EFA               	movlw	-6
 10500  011832  006F FF8C  F001    	movff	plusw1,btemp
 10501  011838  0E66               	movlw	102
 10502  01183A  1801               	xorwf	btemp^0,w,c
 10503  01183C  A4D8               	btfss	status,2,c
 10504  01183E  D06E               	goto	l11162
 10505                           
 10506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 10507                           ;stkvar	_fmt @ sp[(-32)+-4]
 10508  011840  0EDC               	movlw	-36
 10509  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
 10510  011848  0EDD               	movlw	-35
 10511  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10512  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
 10513  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
 10514  01185C                     	if	0	;tblptru may be non-zero
 10515  01185C                     	endif
 10516  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10517  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
 10518  01185E  6EF8               	movwf	tblptru,c
 10519  011860                     	endif
 10520                           
 10521                           ;stkvar	_c @ sp[(-32)+31]
 10522  011860  0008               	tblrd		*
 10523  011862  0EFF               	movlw	-1
 10524  011864  006F FFD7 FFE3     	movff	tablat,plusw1
 10525                           
 10526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 10527                           ;stkvar	_fmt @ sp[(-32)+-4]
 10528  01186A  0EDC               	movlw	-36
 10529  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10530  011872  0EDD               	movlw	-35
 10531  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
 10532  01187A  2ADE               	incf	postinc2,f,c
 10533  01187C  0E00               	movlw	0
 10534  01187E  22DD               	addwfc	postdec2,f,c
 10535                           
 10536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 10537                           ;stkvar	_ap @ sp[(-32)+-6]
 10538  011880  0EDA               	movlw	-38
 10539  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
 10540  011888  0EDB               	movlw	-37
 10541  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10542  011890  0E04               	movlw	4
 10543  011892  5EDE               	subwf	postinc2,f,c
 10544  011894  0E00               	movlw	0
 10545  011896  5ADD               	subwfb	postdec2,f,c
 10546  011898  006F FF78  F00B    	movff	postinc2,btemp+10
 10547  01189E  006F FF74  F00C    	movff	postdec2,btemp+11
 10548  0118A4  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10549  0118AA  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10550  0118B0  006F FF78  F009    	movff	postinc2,btemp+8
 10551  0118B6  006F FF78  F00A    	movff	postinc2,btemp+9
 10552  0118BC  006F FF78  F00B    	movff	postinc2,btemp+10
 10553  0118C2  006F FF78  F00C    	movff	postinc2,btemp+11
 10554                           
 10555                           ;stkvar	_f @ sp[(-32)+22]
 10556  0118C8  0EF6               	movlw	-10
 10557  0118CA  0060  F027  FFE3   	movff	btemp+8,plusw1
 10558  0118D0  0EF7               	movlw	-9
 10559  0118D2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10560  0118D8  0EF8               	movlw	-8
 10561  0118DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10562  0118E0  0EF9               	movlw	-7
 10563  0118E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10564  0118E8                     l11158:
 10565                           
 10566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 10567                           ;stkvar	_c @ sp[(-32)+31]
 10568  0118E8  0EFF               	movlw	-1
 10569  0118EA  50E3               	movf	plusw1,w,c
 10570  0118EC  6EE6               	movwf	postinc1,c
 10571                           
 10572                           ;stkvar	_f @ sp[(-33)+22]
 10573  0118EE  0EF5               	movlw	-11
 10574  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
 10575  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
 10576  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
 10577  011902  006F FF8F FFE6     	movff	plusw1,postinc1
 10578                           
 10579                           ;stkvar	_fp @ sp[(-37)+-2]
 10580  011908  0ED9               	movlw	-39
 10581  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
 10582  011910  006F FF8F FFE6     	movff	plusw1,postinc1
 10583  011916  EC00  F080         	call	_efgtoa	;wreg free
 10584  01191A  D22E               	goto	l2210
 10585  01191C                     l11162:
 10586                           
 10587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 10588  01191C  0E02               	movlw	2
 10589  01191E  6EE6               	movwf	postinc1,c
 10590  011920  0E00               	movlw	0
 10591  011922  6EE6               	movwf	postinc1,c
 10592  011924  0EF5               	movlw	low STR_55
 10593  011926  6EE6               	movwf	postinc1,c
 10594  011928  0EFF               	movlw	high STR_55
 10595  01192A  6EE6               	movwf	postinc1,c
 10596                           
 10597                           ;stkvar	_ct @ sp[(-36)+26]
 10598  01192C  0EF6               	movlw	246
 10599  01192E  24E1               	addwf	fsr1l,w,c
 10600  011930  6E01               	movwf	btemp^0,c
 10601  011932  0EFF               	movlw	255
 10602  011934  20E2               	addwfc	fsr1h,w,c
 10603  011936  6E02               	movwf	(btemp+1)^0,c
 10604  011938  0060  F007  FFE6   	movff	btemp,postinc1
 10605  01193E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10606  011944  EC7E  F0B4         	call	_strncmp	;wreg free
 10607  011948  5001               	movf	btemp^0,w,c
 10608  01194A  1002               	iorwf	(btemp+1)^0,w,c
 10609  01194C  A4D8               	btfss	status,2,c
 10610  01194E  D096               	goto	l11182
 10611                           
 10612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 10613                           ;stkvar	_fmt @ sp[(-32)+-4]
 10614  011950  0EDC               	movlw	-36
 10615  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
 10616  011958  0EDD               	movlw	-35
 10617  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10618  011960  006F FF78  F00B    	movff	postinc2,btemp+10
 10619  011966  006F FF74  F00C    	movff	postdec2,btemp+11
 10620  01196C  0E01               	movlw	1
 10621  01196E  260B               	addwf	(btemp+10)^0,f,c
 10622  011970  0E00               	movlw	0
 10623  011972  220C               	addwfc	(btemp+11)^0,f,c
 10624  011974  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10625  01197A  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10626  011980                     	if	0	;tblptru may be non-zero
 10627  011980                     	endif
 10628  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10629  011980  0E00               	movlw	low (__mediumconst shr (0+16))
 10630  011982  6EF8               	movwf	tblptru,c
 10631  011984                     	endif
 10632                           
 10633                           ;stkvar	_c @ sp[(-32)+31]
 10634  011984  0008               	tblrd		*
 10635  011986  0EFF               	movlw	-1
 10636  011988  006F FFD7 FFE3     	movff	tablat,plusw1
 10637  01198E  0EBF               	movlw	191
 10638  011990  6E0B               	movwf	(btemp+10)^0,c
 10639  011992  0EFF               	movlw	255
 10640  011994  6E0C               	movwf	(btemp+11)^0,c
 10641                           
 10642                           ;stkvar	_fmt @ sp[(-32)+-4]
 10643  011996  0EDC               	movlw	-36
 10644  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
 10645  01199E  0EDD               	movlw	-35
 10646  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10647  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10648  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10649  0119B2                     	if	0	;tblptru may be non-zero
 10650  0119B2                     	endif
 10651  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10652  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
 10653  0119B4  6EF8               	movwf	tblptru,c
 10654  0119B6                     	endif
 10655  0119B6  0008               	tblrd		*
 10656  0119B8  50F5               	movf	tablat,w,c
 10657  0119BA  6E09               	movwf	(btemp+8)^0,c
 10658  0119BC  6A0A               	clrf	(btemp+9)^0,c
 10659  0119BE  500B               	movf	(btemp+10)^0,w,c
 10660  0119C0  2609               	addwf	(btemp+8)^0,f,c
 10661  0119C2  500C               	movf	(btemp+11)^0,w,c
 10662  0119C4  220A               	addwfc	(btemp+9)^0,f,c
 10663  0119C6  500A               	movf	(btemp+9)^0,w,c
 10664  0119C8  E106               	bnz	u10670
 10665  0119CA  0E1A               	movlw	26
 10666  0119CC  5C09               	subwf	(btemp+8)^0,w,c
 10667  0119CE  B0D8               	btfsc	status,0,c
 10668  0119D0  D002               	goto	u10670
 10669  0119D2  0E01               	movlw	1
 10670  0119D4  D001               	goto	u10680
 10671  0119D6                     u10670:
 10672  0119D6  0E00               	movlw	0
 10673  0119D8                     u10680:
 10674  0119D8  6E0B               	movwf	(btemp+10)^0,c
 10675  0119DA  6A0C               	clrf	(btemp+11)^0,c
 10676                           
 10677                           ;stkvar	_vfpfcnvrt$5211 @ sp[(-32)+2]
 10678  0119DC  0EE2               	movlw	-30
 10679  0119DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10680  0119E4  0EE3               	movlw	-29
 10681  0119E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 10682                           
 10683                           ;stkvar	_vfpfcnvrt$5211 @ sp[(-32)+2]
 10684  0119EC  0EE2               	movlw	-30
 10685  0119EE  006F FF8C  F001    	movff	plusw1,btemp
 10686  0119F4  0EE3               	movlw	-29
 10687  0119F6  50E3               	movf	plusw1,w,c
 10688  0119F8  1001               	iorwf	btemp^0,w,c
 10689                           
 10690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 10691                           ;stkvar	_ap @ sp[(-32)+-6]
 10692                           
 10693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 10694                           
 10695                           ;stkvar	_f @ sp[(-32)+22]
 10696                           
 10697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 10698                           ;stkvar	_ap @ sp[(-32)+-6]
 10699  0119FA  0EDA               	movlw	-38
 10700  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10701  011A02  0EDB               	movlw	-37
 10702  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
 10703  011A0A  0E04               	movlw	4
 10704  011A0C  5EDE               	subwf	postinc2,f,c
 10705  011A0E  0E00               	movlw	0
 10706  011A10  5ADD               	subwfb	postdec2,f,c
 10707  011A12  006F FF78  F00B    	movff	postinc2,btemp+10
 10708  011A18  006F FF74  F00C    	movff	postdec2,btemp+11
 10709  011A1E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10710  011A24  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10711  011A2A  006F FF78  F009    	movff	postinc2,btemp+8
 10712  011A30  006F FF78  F00A    	movff	postinc2,btemp+9
 10713  011A36  006F FF78  F00B    	movff	postinc2,btemp+10
 10714  011A3C  006F FF78  F00C    	movff	postinc2,btemp+11
 10715                           
 10716                           ;stkvar	_f @ sp[(-32)+22]
 10717  011A42  0EF6               	movlw	-10
 10718  011A44  0060  F027  FFE3   	movff	btemp+8,plusw1
 10719  011A4A  0EF7               	movlw	-9
 10720  011A4C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10721  011A52  0EF8               	movlw	-8
 10722  011A54  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10723  011A5A  0EF9               	movlw	-7
 10724  011A5C  0060  F033  FFE3   	movff	btemp+11,plusw1
 10725                           
 10726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 10727                           ;stkvar	_fmt @ sp[(-32)+-4]
 10728  011A62  0EDC               	movlw	-36
 10729  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
 10730  011A6A  0EDD               	movlw	-35
 10731  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10732  011A72  0E02               	movlw	2
 10733  011A74  26DE               	addwf	postinc2,f,c
 10734  011A76  0E00               	movlw	0
 10735  011A78  22DD               	addwfc	postdec2,f,c
 10736  011A7A  D736               	goto	l11158
 10737  011A7C                     l11182:
 10738                           
 10739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 10740                           ;stkvar	_fmt @ sp[(-32)+-4]
 10741  011A7C  0EDC               	movlw	-36
 10742  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10743  011A84  0EDD               	movlw	-35
 10744  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
 10745  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10746  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
 10747  011A98                     	if	0	;tblptru may be non-zero
 10748  011A98                     	endif
 10749  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10750  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
 10751  011A9A  6EF8               	movwf	tblptru,c
 10752  011A9C                     	endif
 10753  011A9C  0008               	tblrd		*
 10754  011A9E  50F5               	movf	tablat,w,c
 10755  011AA0  0A73               	xorlw	115
 10756  011AA2  A4D8               	btfss	status,2,c
 10757  011AA4  D042               	goto	l11192
 10758                           
 10759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 10760                           ;stkvar	_fmt @ sp[(-32)+-4]
 10761  011AA6  0EDC               	movlw	-36
 10762  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10763  011AAE  0EDD               	movlw	-35
 10764  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10765  011AB6  2ADE               	incf	postinc2,f,c
 10766  011AB8  0E00               	movlw	0
 10767  011ABA  22DD               	addwfc	postdec2,f,c
 10768                           
 10769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 10770                           ;stkvar	_ap @ sp[(-32)+-6]
 10771  011ABC  0EDA               	movlw	-38
 10772  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10773  011AC4  0EDB               	movlw	-37
 10774  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10775  011ACC  0E02               	movlw	2
 10776  011ACE  5EDE               	subwf	postinc2,f,c
 10777  011AD0  0E00               	movlw	0
 10778  011AD2  5ADD               	subwfb	postdec2,f,c
 10779  011AD4  006F FF78  F00B    	movff	postinc2,btemp+10
 10780  011ADA  006F FF74  F00C    	movff	postdec2,btemp+11
 10781  011AE0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10782  011AE6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10783  011AEC  006F FF78  F00B    	movff	postinc2,btemp+10
 10784  011AF2  006F FF74  F00C    	movff	postdec2,btemp+11
 10785                           
 10786                           ;stkvar	_cp @ sp[(-32)+29]
 10787  011AF8  0EFE               	movlw	-2
 10788  011AFA  0060  F033  FFE3   	movff	btemp+11,plusw1
 10789  011B00  0EFD               	movlw	-3
 10790  011B02  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10791                           
 10792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 10793                           ;stkvar	_cp @ sp[(-32)+29]
 10794  011B08  0EFD               	movlw	-3
 10795  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
 10796  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
 10797                           
 10798                           ;stkvar	_fp @ sp[(-34)+-2]
 10799  011B16  0EDC               	movlw	-36
 10800  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
 10801  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
 10802  011B24  EC7A  F0AC         	call	_stoa	;wreg free
 10803  011B28  D127               	goto	l2210
 10804  011B2A                     l11192:
 10805                           
 10806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 10807                           ;stkvar	_fmt @ sp[(-32)+-4]
 10808  011B2A  0EDC               	movlw	-36
 10809  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10810  011B32  0EDD               	movlw	-35
 10811  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
 10812  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10813  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
 10814  011B46                     	if	0	;tblptru may be non-zero
 10815  011B46                     	endif
 10816  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10817  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
 10818  011B48  6EF8               	movwf	tblptru,c
 10819  011B4A                     	endif
 10820  011B4A  0008               	tblrd		*
 10821  011B4C  50F5               	movf	tablat,w,c
 10822  011B4E  0A78               	xorlw	120
 10823  011B50  B4D8               	btfsc	status,2,c
 10824  011B52  D015               	goto	u10720
 10825                           
 10826                           ;stkvar	_fmt @ sp[(-32)+-4]
 10827  011B54  0EDC               	movlw	-36
 10828  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
 10829  011B5C  0EDD               	movlw	-35
 10830  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10831  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
 10832  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10833  011B70                     	if	0	;tblptru may be non-zero
 10834  011B70                     	endif
 10835  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10836  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
 10837  011B72  6EF8               	movwf	tblptru,c
 10838  011B74                     	endif
 10839  011B74  0008               	tblrd		*
 10840  011B76  50F5               	movf	tablat,w,c
 10841  011B78  0A58               	xorlw	88
 10842  011B7A  A4D8               	btfss	status,2,c
 10843  011B7C  D094               	goto	l11206
 10844  011B7E                     u10720:
 10845                           
 10846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 10847                           ;stkvar	_fmt @ sp[(-32)+-4]
 10848  011B7E  0EDC               	movlw	-36
 10849  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
 10850  011B86  0EDD               	movlw	-35
 10851  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
 10852  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10853  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
 10854  011B9A                     	if	0	;tblptru may be non-zero
 10855  011B9A                     	endif
 10856  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10857  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
 10858  011B9C  6EF8               	movwf	tblptru,c
 10859  011B9E                     	endif
 10860                           
 10861                           ;stkvar	_c @ sp[(-32)+31]
 10862  011B9E  0008               	tblrd		*
 10863  011BA0  0EFF               	movlw	-1
 10864  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
 10865                           
 10866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 10867                           ;stkvar	_fmt @ sp[(-32)+-4]
 10868  011BA8  0EDC               	movlw	-36
 10869  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10870  011BB0  0EDD               	movlw	-35
 10871  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10872  011BB8  2ADE               	incf	postinc2,f,c
 10873  011BBA  0E00               	movlw	0
 10874  011BBC  22DD               	addwfc	postdec2,f,c
 10875                           
 10876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 10877                           ;stkvar	_ap @ sp[(-32)+-6]
 10878  011BBE  0EDA               	movlw	-38
 10879  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10880  011BC6  0EDB               	movlw	-37
 10881  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10882  011BCE  0E02               	movlw	2
 10883  011BD0  5EDE               	subwf	postinc2,f,c
 10884  011BD2  0E00               	movlw	0
 10885  011BD4  5ADD               	subwfb	postdec2,f,c
 10886  011BD6  006F FF78  F00B    	movff	postinc2,btemp+10
 10887  011BDC  006F FF74  F00C    	movff	postdec2,btemp+11
 10888  011BE2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10889  011BE8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10890  011BEE  006F FF78  F00B    	movff	postinc2,btemp+10
 10891  011BF4  006F FF74  F00C    	movff	postdec2,btemp+11
 10892  011BFA  500B               	movf	(btemp+10)^0,w,c
 10893  011BFC  6E11               	movwf	(btemp+16)^0,c
 10894  011BFE  500C               	movf	(btemp+11)^0,w,c
 10895  011C00  6E12               	movwf	(btemp+17)^0,c
 10896  011C02  6A13               	clrf	(btemp+18)^0,c
 10897  011C04  6A14               	clrf	(btemp+19)^0,c
 10898  011C06  6A15               	clrf	(btemp+20)^0,c
 10899  011C08  6A16               	clrf	(btemp+21)^0,c
 10900  011C0A  6A17               	clrf	(btemp+22)^0,c
 10901  011C0C  6A18               	clrf	(btemp+23)^0,c
 10902                           
 10903                           ;stkvar	_llu @ sp[(-32)+6]
 10904  011C0E  0EE6               	movlw	-26
 10905  011C10  0060  F047  FFE3   	movff	btemp+16,plusw1
 10906  011C16  0EE7               	movlw	-25
 10907  011C18  0060  F04B  FFE3   	movff	btemp+17,plusw1
 10908  011C1E  0EE8               	movlw	-24
 10909  011C20  0060  F04F  FFE3   	movff	btemp+18,plusw1
 10910  011C26  0EE9               	movlw	-23
 10911  011C28  0060  F053  FFE3   	movff	btemp+19,plusw1
 10912  011C2E  0EEA               	movlw	-22
 10913  011C30  0060  F057  FFE3   	movff	btemp+20,plusw1
 10914  011C36  0EEB               	movlw	-21
 10915  011C38  0060  F05B  FFE3   	movff	btemp+21,plusw1
 10916  011C3E  0EEC               	movlw	-20
 10917  011C40  0060  F05F  FFE3   	movff	btemp+22,plusw1
 10918  011C46  0EED               	movlw	-19
 10919  011C48  0060  F063  FFE3   	movff	btemp+23,plusw1
 10920                           
 10921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 10922                           ;stkvar	_c @ sp[(-32)+31]
 10923  011C4E  0EFF               	movlw	-1
 10924  011C50  50E3               	movf	plusw1,w,c
 10925  011C52  6EE6               	movwf	postinc1,c
 10926                           
 10927                           ;stkvar	_llu @ sp[(-33)+6]
 10928  011C54  50E1               	movf	fsr1l,w,c
 10929  011C56  0FE5               	addlw	-27
 10930  011C58  6ED9               	movwf	fsr2l,c
 10931  011C5A  50E2               	movf	fsr1h,w,c
 10932  011C5C  6EDA               	movwf	fsr2h,c
 10933  011C5E  0EFF               	movlw	255
 10934  011C60  22DA               	addwfc	fsr2h,f,c
 10935  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
 10936  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
 10937  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 10938  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
 10939  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 10940  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
 10941  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
 10942  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
 10943                           
 10944                           ;stkvar	_fp @ sp[(-41)+-2]
 10945  011C92  0ED5               	movlw	-43
 10946  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
 10947  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
 10948  011CA0  EC04  F0A6         	call	_xtoa	;wreg free
 10949  011CA4  D069               	goto	l2210
 10950  011CA6                     l11206:
 10951                           
 10952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 10953                           ;stkvar	_fmt @ sp[(-32)+-4]
 10954  011CA6  0EDC               	movlw	-36
 10955  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10956  011CAE  0EDD               	movlw	-35
 10957  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10958  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10959  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10960  011CC2                     	if	0	;tblptru may be non-zero
 10961  011CC2                     	endif
 10962  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10963  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
 10964  011CC4  6EF8               	movwf	tblptru,c
 10965  011CC6                     	endif
 10966  011CC6  0008               	tblrd		*
 10967  011CC8  50F5               	movf	tablat,w,c
 10968  011CCA  0A25               	xorlw	37
 10969  011CCC  A4D8               	btfss	status,2,c
 10970  011CCE  D01A               	goto	l11216
 10971                           
 10972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 10973                           ;stkvar	_fmt @ sp[(-32)+-4]
 10974  011CD0  0EDC               	movlw	-36
 10975  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
 10976  011CD8  0EDD               	movlw	-35
 10977  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
 10978  011CE0  2ADE               	incf	postinc2,f,c
 10979  011CE2  0E00               	movlw	0
 10980  011CE4  22DD               	addwfc	postdec2,f,c
 10981                           
 10982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 10983                           ;stkvar	_fp @ sp[(-32)+-2]
 10984  011CE6  0EDE               	movlw	-34
 10985  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
 10986  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
 10987  011CF4  0E25               	movlw	37
 10988  011CF6  6EE6               	movwf	postinc1,c
 10989  011CF8  0E00               	movlw	0
 10990  011CFA  6EE6               	movwf	postinc1,c
 10991  011CFC  ECB3  F0BB         	call	_fputc	;wreg free
 10992  011D00                     l11212:
 10993                           
 10994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 10995  011D00  0E01               	movlw	1
 10996  011D02  D00C               	goto	L7
 10997  011D04                     l11216:
 10998                           
 10999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 11000                           ;stkvar	_fmt @ sp[(-32)+-4]
 11001  011D04  0EDC               	movlw	-36
 11002  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
 11003  011D0C  0EDD               	movlw	-35
 11004  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11005  011D14  2ADE               	incf	postinc2,f,c
 11006  011D16  0E00               	movlw	0
 11007  011D18  22DD               	addwfc	postdec2,f,c
 11008                           
 11009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 11010  011D1A  0E00               	movlw	0
 11011  011D1C                     L7:
 11012  011D1C  6E01               	movwf	btemp^0,c
 11013  011D1E  0E00               	movlw	0
 11014  011D20  6E02               	movwf	(btemp+1)^0,c
 11015  011D22  D02A               	goto	l2210
 11016  011D24                     l11222:
 11017                           
 11018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 11019                           ;stkvar	_fp @ sp[(-32)+-2]
 11020  011D24  0EDE               	movlw	-34
 11021  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
 11022  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
 11023                           
 11024                           ;stkvar	_fmt @ sp[(-34)+-4]
 11025  011D32  0EDA               	movlw	-38
 11026  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
 11027  011D3A  0EDB               	movlw	-37
 11028  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11029  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
 11030  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
 11031  011D4E                     	if	0	;tblptru may be non-zero
 11032  011D4E                     	endif
 11033  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11034  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
 11035  011D50  6EF8               	movwf	tblptru,c
 11036  011D52                     	endif
 11037  011D52  0008               	tblrd		*
 11038  011D54  50F5               	movf	tablat,w,c
 11039  011D56  6EE6               	movwf	postinc1,c
 11040  011D58  0E00               	movlw	0
 11041  011D5A  6EE6               	movwf	postinc1,c
 11042  011D5C  ECB3  F0BB         	call	_fputc	;wreg free
 11043                           
 11044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 11045                           ;stkvar	_fmt @ sp[(-32)+-4]
 11046  011D60  0EDC               	movlw	-36
 11047  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
 11048  011D68  0EDD               	movlw	-35
 11049  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11050  011D70  2ADE               	incf	postinc2,f,c
 11051  011D72  0E00               	movlw	0
 11052  011D74  22DD               	addwfc	postdec2,f,c
 11053  011D76  D7C4               	goto	l11212
 11054  011D78                     l2210:
 11055                           
 11056                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 11057  011D78  0EDA               	movlw	218
 11058  011D7A  26E1               	addwf	fsr1l,f,c
 11059  011D7C  0EFF               	movlw	255
 11060  011D7E  22E2               	addwfc	fsr1h,f,c
 11061  011D80  0012               	return		;funcret
 11062  011D82                     __end_of_vfpfcnvrt:
 11063                           	opt callstack 0
 11064                           
 11065 ;; *************** function _xtoa *****************
 11066 ;; Defined at:
 11067 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11068 ;; Parameters:    Size  Location     Type
 11069 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11070 ;;		 -> f(6), NULL(0), 
 11071 ;;  d               8  [STACK] unsigned long long 
 11072 ;;  x               1  [STACK] unsigned char 
 11073 ;; Auto vars:     Size  Location     Type
 11074 ;;  n               8  [STACK] unsigned long long 
 11075 ;;  c               2  [STACK] int 
 11076 ;;  i               2  [STACK] int 
 11077 ;;  w               2  [STACK] int 
 11078 ;;  p               2  [STACK] int 
 11079 ;; Return value:  Size  Location     Type
 11080 ;;                  2  [STACK] int 
 11081 ;; Registers used:
 11082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11083 ;; Tracked objects:
 11084 ;;		On entry : 0/0
 11085 ;;		On exit  : 0/0
 11086 ;;		Unchanged: 0/0
 11087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11092 ;;Total ram usage:        0 bytes
 11093 ;; Hardware stack levels used:    1
 11094 ;; Hardware stack levels required when called:   20
 11095 ;; This function calls:
 11096 ;;		_isalpha
 11097 ;;		_isupper
 11098 ;;		_pad
 11099 ;;		_toupper
 11100 ;; This function is called by:
 11101 ;;		_vfpfcnvrt
 11102 ;; This function uses a reentrant model
 11103 ;;
 11104                           
 11105                           	psect	text44
 11106  014C08                     __ptext44:
 11107                           	opt callstack 0
 11108  014C08                     _xtoa:
 11109                           	opt callstack 0
 11110                           
 11111                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 11112  014C08  0E14               	movlw	20
 11113  014C0A  26E1               	addwf	fsr1l,f,c
 11114  014C0C  0E00               	movlw	0
 11115  014C0E  22E2               	addwfc	fsr1h,f,c
 11116                           
 11117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 11118                           
 11119                           ;incstack = 0
 11120 ;; hardware stack exceeded
 11121  014C10  AE24               	btfss	(_prec+1)^0,7,c
 11122                           
 11123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 11124  014C12  9225               	bcf	_flags^0,1,c
 11125                           
 11126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 11127  014C14  BE24               	btfsc	(_prec+1)^0,7,c
 11128  014C16  D005               	goto	u10300
 11129  014C18  5024               	movf	(_prec+1)^0,w,c
 11130  014C1A  E110               	bnz	l10988
 11131  014C1C  0423               	decf	_prec^0,w,c
 11132  014C1E  B0D8               	btfsc	status,0,c
 11133  014C20  D00D               	goto	l10988
 11134  014C22                     u10300:
 11135  014C22  0E01               	movlw	1
 11136  014C24  6E0B               	movwf	(btemp+10)^0,c
 11137  014C26  0E00               	movlw	0
 11138  014C28  6E0C               	movwf	(btemp+11)^0,c
 11139                           
 11140                           ;stkvar	_p @ sp[(-20)+18]
 11141  014C2A  0EFE               	movlw	-2
 11142  014C2C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11143  014C32  0EFF               	movlw	-1
 11144  014C34  0060  F033  FFE3   	movff	btemp+11,plusw1
 11145  014C3A  D008               	goto	l2160
 11146  014C3C                     l10988:
 11147                           
 11148                           ;stkvar	_p @ sp[(-20)+18]
 11149  014C3C  0EFE               	movlw	-2
 11150  014C3E  0060  F08F  FFE3   	movff	_prec,plusw1
 11151  014C44  0EFF               	movlw	-1
 11152  014C46  0060  F093  FFE3   	movff	_prec+1,plusw1
 11153  014C4C                     l2160:
 11154                           
 11155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 11156                           ;stkvar	_w @ sp[(-20)+16]
 11157  014C4C  0EFC               	movlw	-4
 11158  014C4E  0060  F087  FFE3   	movff	_width,plusw1
 11159  014C54  0EFD               	movlw	-3
 11160  014C56  0060  F08B  FFE3   	movff	_width+1,plusw1
 11161                           
 11162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 11163  014C5C  A825               	btfss	_flags^0,4,c
 11164  014C5E  D00B               	goto	l10994
 11165                           
 11166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 11167                           ;stkvar	_w @ sp[(-20)+16]
 11168  014C60  50E1               	movf	fsr1l,w,c
 11169  014C62  0FFC               	addlw	-4
 11170  014C64  6ED9               	movwf	fsr2l,c
 11171  014C66  50E2               	movf	fsr1h,w,c
 11172  014C68  6EDA               	movwf	fsr2h,c
 11173  014C6A  0EFF               	movlw	255
 11174  014C6C  22DA               	addwfc	fsr2h,f,c
 11175  014C6E  0EFE               	movlw	254
 11176  014C70  26DE               	addwf	postinc2,f,c
 11177  014C72  0EFF               	movlw	255
 11178  014C74  22DD               	addwfc	postdec2,f,c
 11179  014C76                     l10994:
 11180                           
 11181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 11182                           ;stkvar	_d @ sp[(-20)+-10]
 11183  014C76  0EE2               	movlw	226
 11184  014C78  24E1               	addwf	fsr1l,w,c
 11185  014C7A  6ED9               	movwf	fsr2l,c
 11186  014C7C  0EFF               	movlw	255
 11187  014C7E  20E2               	addwfc	fsr1h,w,c
 11188  014C80  6EDA               	movwf	fsr2h,c
 11189                           
 11190                           ;stkvar	_n @ sp[(-20)+4]
 11191  014C82  0E08               	movlw	8
 11192  014C84  6E01               	movwf	btemp^0,c
 11193  014C86  0EF0               	movlw	-16
 11194  014C88                     us1032999:
 11195  014C88  006F FF7B FFE3     	movff	postinc2,plusw1
 11196  014C8E  28E8               	incf	wreg,w,c
 11197  014C90  2E01               	decfsz	btemp^0,f,c
 11198  014C92  D7FA               	bra	us1032999
 11199                           
 11200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 11201  014C94  0E4F               	movlw	79
 11202  014C96  6E0B               	movwf	(btemp+10)^0,c
 11203  014C98  0E00               	movlw	0
 11204  014C9A  6E0C               	movwf	(btemp+11)^0,c
 11205                           
 11206                           ;stkvar	_i @ sp[(-20)+14]
 11207  014C9C  0EFA               	movlw	-6
 11208  014C9E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11209  014CA4  0EFB               	movlw	-5
 11210  014CA6  0060  F033  FFE3   	movff	btemp+11,plusw1
 11211                           
 11212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 11213  014CAC  0103               	movlb	3	; () banked
 11214  014CAE  6BE3               	clrf	(_dbuf+79)& (0+255),b
 11215                           
 11216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11217  014CB0  D0EE               	goto	l11032
 11218  014CB2                     l11000:
 11219                           
 11220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 11221                           ;stkvar	_i @ sp[(-20)+14]
 11222  014CB2  50E1               	movf	fsr1l,w,c
 11223  014CB4  0FFA               	addlw	-6
 11224  014CB6  6ED9               	movwf	fsr2l,c
 11225  014CB8  50E2               	movf	fsr1h,w,c
 11226  014CBA  6EDA               	movwf	fsr2h,c
 11227  014CBC  0EFF               	movlw	255
 11228  014CBE  22DA               	addwfc	fsr2h,f,c
 11229  014CC0  06DE               	decf	postinc2,f,c
 11230  014CC2  0E00               	movlw	0
 11231  014CC4  5ADD               	subwfb	postdec2,f,c
 11232                           
 11233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 11234                           ;stkvar	_n @ sp[(-20)+4]
 11235  014CC6  0EF0               	movlw	-16
 11236  014CC8  006F FF8C  F00B    	movff	plusw1,btemp+10
 11237  014CCE  0EF1               	movlw	-15
 11238  014CD0  006F FF8C  F00C    	movff	plusw1,btemp+11
 11239  014CD6  0E0F               	movlw	15
 11240  014CD8  160B               	andwf	(btemp+10)^0,f,c
 11241  014CDA  0E00               	movlw	0
 11242  014CDC  160C               	andwf	(btemp+11)^0,f,c
 11243                           
 11244                           ;stkvar	_c @ sp[(-20)+12]
 11245  014CDE  0EF8               	movlw	-8
 11246  014CE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11247  014CE6  0EF9               	movlw	-7
 11248  014CE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 11249                           
 11250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 11251                           ;stkvar	_c @ sp[(-20)+12]
 11252  014CEE  0EF9               	movlw	-7
 11253  014CF0  BEE3               	btfsc	plusw1,7,c
 11254  014CF2  D00F               	goto	l11008
 11255  014CF4  0EF9               	movlw	-7
 11256  014CF6  50E3               	movf	plusw1,w,c
 11257  014CF8  E108               	bnz	u10330
 11258  014CFA  0EF8               	movlw	-8
 11259  014CFC  006F FF8C  F001    	movff	plusw1,btemp
 11260  014D02  0E0A               	movlw	10
 11261  014D04  5E01               	subwf	btemp^0,f,c
 11262  014D06  A0D8               	btfss	status,0,c
 11263  014D08  D004               	goto	l11008
 11264  014D0A                     u10330:
 11265                           
 11266                           ;stkvar	_c @ sp[(-20)+12]
 11267  014D0A  0EF8               	movlw	-8
 11268  014D0C  50E3               	movf	plusw1,w,c
 11269  014D0E  0F57               	addlw	87
 11270  014D10  D003               	goto	L8
 11271  014D12                     l11008:
 11272                           
 11273                           ;stkvar	_c @ sp[(-20)+12]
 11274  014D12  0EF8               	movlw	-8
 11275  014D14  50E3               	movf	plusw1,w,c
 11276  014D16  0F30               	addlw	48
 11277  014D18                     L8:
 11278  014D18  6E0B               	movwf	(btemp+10)^0,c
 11279  014D1A  0EF9               	movlw	-7
 11280  014D1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 11281  014D22  0E00               	movlw	0
 11282  014D24  220C               	addwfc	(btemp+11)^0,f,c
 11283                           
 11284                           ;stkvar	_c @ sp[(-20)+12]
 11285  014D26  0EF8               	movlw	-8
 11286  014D28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11287  014D2E  0EF9               	movlw	-7
 11288  014D30  0060  F033  FFE3   	movff	btemp+11,plusw1
 11289  014D36  0EBF               	movlw	191
 11290  014D38  6E0B               	movwf	(btemp+10)^0,c
 11291  014D3A  0EFF               	movlw	255
 11292  014D3C  6E0C               	movwf	(btemp+11)^0,c
 11293                           
 11294                           ;stkvar	_x @ sp[(-20)+-11]
 11295  014D3E  0EE1               	movlw	-31
 11296  014D40  50E3               	movf	plusw1,w,c
 11297  014D42  6E09               	movwf	(btemp+8)^0,c
 11298  014D44  6A0A               	clrf	(btemp+9)^0,c
 11299  014D46  500B               	movf	(btemp+10)^0,w,c
 11300  014D48  2609               	addwf	(btemp+8)^0,f,c
 11301  014D4A  500C               	movf	(btemp+11)^0,w,c
 11302  014D4C  220A               	addwfc	(btemp+9)^0,f,c
 11303  014D4E  500A               	movf	(btemp+9)^0,w,c
 11304  014D50  E106               	bnz	u10340
 11305  014D52  0E1A               	movlw	26
 11306  014D54  5C09               	subwf	(btemp+8)^0,w,c
 11307  014D56  B0D8               	btfsc	status,0,c
 11308  014D58  D002               	goto	u10340
 11309  014D5A  0E01               	movlw	1
 11310  014D5C  D001               	goto	u10350
 11311  014D5E                     u10340:
 11312  014D5E  0E00               	movlw	0
 11313  014D60                     u10350:
 11314  014D60  6E0B               	movwf	(btemp+10)^0,c
 11315  014D62  6A0C               	clrf	(btemp+11)^0,c
 11316                           
 11317                           ;stkvar	_xtoa$5189 @ sp[(-20)+2]
 11318  014D64  0EEE               	movlw	-18
 11319  014D66  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11320  014D6C  0EEF               	movlw	-17
 11321  014D6E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11322                           
 11323                           ;stkvar	_xtoa$5189 @ sp[(-20)+2]
 11324  014D74  0EEE               	movlw	-18
 11325  014D76  006F FF8C  F001    	movff	plusw1,btemp
 11326  014D7C  0EEF               	movlw	-17
 11327  014D7E  50E3               	movf	plusw1,w,c
 11328  014D80  1001               	iorwf	btemp^0,w,c
 11329  014D82  B4D8               	btfsc	status,2,c
 11330  014D84  D041               	goto	l11024
 11331  014D86  0E9F               	movlw	159
 11332  014D88  6E0B               	movwf	(btemp+10)^0,c
 11333  014D8A  0EFF               	movlw	255
 11334  014D8C  6E0C               	movwf	(btemp+11)^0,c
 11335                           
 11336                           ;stkvar	_c @ sp[(-20)+12]
 11337  014D8E  0EF8               	movlw	-8
 11338  014D90  006F FF8C  F009    	movff	plusw1,btemp+8
 11339  014D96  0EF9               	movlw	-7
 11340  014D98  006F FF8C  F00A    	movff	plusw1,btemp+9
 11341  014D9E  0E20               	movlw	32
 11342  014DA0  1209               	iorwf	(btemp+8)^0,f,c
 11343  014DA2  0E00               	movlw	0
 11344  014DA4  120A               	iorwf	(btemp+9)^0,f,c
 11345  014DA6  500B               	movf	(btemp+10)^0,w,c
 11346  014DA8  2609               	addwf	(btemp+8)^0,f,c
 11347  014DAA  500C               	movf	(btemp+11)^0,w,c
 11348  014DAC  220A               	addwfc	(btemp+9)^0,f,c
 11349  014DAE  500A               	movf	(btemp+9)^0,w,c
 11350  014DB0  E106               	bnz	u10370
 11351  014DB2  0E1A               	movlw	26
 11352  014DB4  5C09               	subwf	(btemp+8)^0,w,c
 11353  014DB6  B0D8               	btfsc	status,0,c
 11354  014DB8  D002               	goto	u10370
 11355  014DBA  0E01               	movlw	1
 11356  014DBC  D001               	goto	u10380
 11357  014DBE                     u10370:
 11358  014DBE  0E00               	movlw	0
 11359  014DC0                     u10380:
 11360  014DC0  6E0B               	movwf	(btemp+10)^0,c
 11361  014DC2  6A0C               	clrf	(btemp+11)^0,c
 11362                           
 11363                           ;stkvar	_xtoa$5190 @ sp[(-20)+0]
 11364  014DC4  0EEC               	movlw	-20
 11365  014DC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11366  014DCC  0EED               	movlw	-19
 11367  014DCE  0060  F033  FFE3   	movff	btemp+11,plusw1
 11368                           
 11369                           ;stkvar	_xtoa$5190 @ sp[(-20)+0]
 11370  014DD4  0EEC               	movlw	-20
 11371  014DD6  006F FF8C  F001    	movff	plusw1,btemp
 11372  014DDC  0EED               	movlw	-19
 11373  014DDE  50E3               	movf	plusw1,w,c
 11374  014DE0  1001               	iorwf	btemp^0,w,c
 11375  014DE2  B4D8               	btfsc	status,2,c
 11376  014DE4  D011               	goto	l11024
 11377                           
 11378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 11379                           ;stkvar	_c @ sp[(-20)+12]
 11380  014DE6  0EF8               	movlw	-8
 11381  014DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 11382  014DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 11383  014DF4  ECDC  F0C4         	call	_toupper	;wreg free
 11384                           
 11385                           ;stkvar	_c @ sp[(-20)+12]
 11386  014DF8  0EF8               	movlw	-8
 11387  014DFA  0060  F007  FFE3   	movff	btemp,plusw1
 11388  014E00  0EF9               	movlw	-7
 11389  014E02  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11390  014E08                     l11024:
 11391                           
 11392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 11393                           ;stkvar	_c @ sp[(-20)+12]
 11394                           ;stkvar	_i @ sp[(-20)+14]
 11395  014E08  0EFA               	movlw	-6
 11396  014E0A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11397  014E10  0EFB               	movlw	-5
 11398  014E12  006F FF8C  F00C    	movff	plusw1,btemp+11
 11399  014E18  0E94               	movlw	low _dbuf
 11400  014E1A  240B               	addwf	(btemp+10)^0,w,c
 11401  014E1C  6ED9               	movwf	fsr2l,c
 11402  014E1E  0E03               	movlw	high _dbuf
 11403  014E20  200C               	addwfc	(btemp+11)^0,w,c
 11404  014E22  6EDA               	movwf	fsr2h,c
 11405  014E24  0EF8               	movlw	-8
 11406  014E26  006F FF8F FFDF     	movff	plusw1,indf2
 11407                           
 11408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 11409                           ;stkvar	_p @ sp[(-20)+18]
 11410  014E2C  50E1               	movf	fsr1l,w,c
 11411  014E2E  0FFE               	addlw	-2
 11412  014E30  6ED9               	movwf	fsr2l,c
 11413  014E32  50E2               	movf	fsr1h,w,c
 11414  014E34  6EDA               	movwf	fsr2h,c
 11415  014E36  0EFF               	movlw	255
 11416  014E38  22DA               	addwfc	fsr2h,f,c
 11417  014E3A  06DE               	decf	postinc2,f,c
 11418  014E3C  0E00               	movlw	0
 11419  014E3E  5ADD               	subwfb	postdec2,f,c
 11420                           
 11421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 11422                           ;stkvar	_w @ sp[(-20)+16]
 11423  014E40  50E1               	movf	fsr1l,w,c
 11424  014E42  0FFC               	addlw	-4
 11425  014E44  6ED9               	movwf	fsr2l,c
 11426  014E46  50E2               	movf	fsr1h,w,c
 11427  014E48  6EDA               	movwf	fsr2h,c
 11428  014E4A  0EFF               	movlw	255
 11429  014E4C  22DA               	addwfc	fsr2h,f,c
 11430  014E4E  06DE               	decf	postinc2,f,c
 11431  014E50  0E00               	movlw	0
 11432  014E52  5ADD               	subwfb	postdec2,f,c
 11433                           
 11434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 11435  014E54  0E04               	movlw	4
 11436  014E56  6E0C               	movwf	(btemp+11)^0,c
 11437                           
 11438                           ;stkvar	_n @ sp[(-20)+4]
 11439  014E58  50E1               	movf	fsr1l,w,c
 11440  014E5A  0FF0               	addlw	-16
 11441  014E5C  6ED9               	movwf	fsr2l,c
 11442  014E5E  50E2               	movf	fsr1h,w,c
 11443  014E60  6EDA               	movwf	fsr2h,c
 11444  014E62  0EFF               	movlw	255
 11445  014E64  22DA               	addwfc	fsr2h,f,c
 11446  014E66  280C               	incf	(btemp+11)^0,w,c
 11447  014E68  52DE               	movf	postinc2,f,c
 11448  014E6A  D00F               	goto	u10400
 11449  014E6C                     u10405:
 11450  014E6C  52DE               	movf	postinc2,f,c
 11451  014E6E  52DE               	movf	postinc2,f,c
 11452  014E70  52DE               	movf	postinc2,f,c
 11453  014E72  52DE               	movf	postinc2,f,c
 11454  014E74  52DE               	movf	postinc2,f,c
 11455  014E76  52DE               	movf	postinc2,f,c
 11456  014E78  90D8               	bcf	status,0,c
 11457  014E7A  32DD               	rrcf	postdec2,f,c
 11458  014E7C  32DD               	rrcf	postdec2,f,c
 11459  014E7E  32DD               	rrcf	postdec2,f,c
 11460  014E80  32DD               	rrcf	postdec2,f,c
 11461  014E82  32DD               	rrcf	postdec2,f,c
 11462  014E84  32DD               	rrcf	postdec2,f,c
 11463  014E86  32DD               	rrcf	postdec2,f,c
 11464  014E88  32DE               	rrcf	postinc2,f,c
 11465  014E8A                     u10400:
 11466  014E8A  2EE8               	decfsz	wreg,f,c
 11467  014E8C  D7EF               	goto	u10405
 11468  014E8E                     l11032:
 11469                           
 11470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11471                           ;stkvar	_i @ sp[(-20)+14]
 11472  014E8E  0EFB               	movlw	-5
 11473  014E90  BEE3               	btfsc	plusw1,7,c
 11474  014E92  D03A               	goto	u10450
 11475  014E94  0EFB               	movlw	-5
 11476  014E96  50E3               	movf	plusw1,w,c
 11477  014E98  E108               	bnz	u10410
 11478  014E9A  0EFA               	movlw	-6
 11479  014E9C  006F FF8C  F001    	movff	plusw1,btemp
 11480  014EA2  0E02               	movlw	2
 11481  014EA4  5E01               	subwf	btemp^0,f,c
 11482  014EA6  A0D8               	btfss	status,0,c
 11483  014EA8  D02F               	goto	u10450
 11484  014EAA                     u10410:
 11485                           
 11486                           ;stkvar	_n @ sp[(-20)+4]
 11487  014EAA  0EF0               	movlw	-16
 11488  014EAC  50E3               	movf	plusw1,w,c
 11489  014EAE  E115               	bnz	u10421
 11490  014EB0  0EF1               	movlw	-15
 11491  014EB2  50E3               	movf	plusw1,w,c
 11492  014EB4  E112               	bnz	u10421
 11493  014EB6  0EF2               	movlw	-14
 11494  014EB8  50E3               	movf	plusw1,w,c
 11495  014EBA  E10F               	bnz	u10421
 11496  014EBC  0EF3               	movlw	-13
 11497  014EBE  50E3               	movf	plusw1,w,c
 11498  014EC0  E10C               	bnz	u10421
 11499  014EC2  0EF4               	movlw	-12
 11500  014EC4  50E3               	movf	plusw1,w,c
 11501  014EC6  E109               	bnz	u10421
 11502  014EC8  0EF5               	movlw	-11
 11503  014ECA  50E3               	movf	plusw1,w,c
 11504  014ECC  E106               	bnz	u10421
 11505  014ECE  0EF6               	movlw	-10
 11506  014ED0  50E3               	movf	plusw1,w,c
 11507  014ED2  E103               	bnz	u10421
 11508  014ED4  0EF7               	movlw	-9
 11509  014ED6  50E3               	movf	plusw1,w,c
 11510  014ED8  A4D8               	btfss	status,2,c
 11511  014EDA                     u10421:
 11512  014EDA  D6EB               	goto	l11000
 11513                           
 11514                           ;stkvar	_p @ sp[(-20)+18]
 11515  014EDC  0EFF               	movlw	-1
 11516  014EDE  BEE3               	btfsc	plusw1,7,c
 11517  014EE0  D007               	goto	u10430
 11518  014EE2  0EFF               	movlw	-1
 11519  014EE4  50E3               	movf	plusw1,w,c
 11520  014EE6  E103               	bnz	u10431
 11521  014EE8  0EFE               	movlw	-2
 11522  014EEA  04E3               	decf	plusw1,w,c
 11523  014EEC  B0D8               	btfsc	status,0,c
 11524  014EEE                     u10431:
 11525  014EEE  D6E1               	goto	l11000
 11526  014EF0                     u10430:
 11527                           
 11528                           ;stkvar	_w @ sp[(-20)+16]
 11529  014EF0  0EFD               	movlw	-3
 11530  014EF2  BEE3               	btfsc	plusw1,7,c
 11531  014EF4  D009               	goto	u10450
 11532  014EF6  0EFD               	movlw	-3
 11533  014EF8  50E3               	movf	plusw1,w,c
 11534  014EFA  E104               	bnz	u10440
 11535  014EFC  0EFC               	movlw	-4
 11536  014EFE  04E3               	decf	plusw1,w,c
 11537  014F00  A0D8               	btfss	status,0,c
 11538  014F02  D002               	goto	u10450
 11539  014F04                     u10440:
 11540  014F04  B225               	btfsc	_flags^0,1,c
 11541  014F06  D6D5               	goto	l11000
 11542  014F08                     u10450:
 11543                           
 11544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 11545  014F08  A825               	btfss	_flags^0,4,c
 11546  014F0A  D036               	goto	l11048
 11547                           
 11548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 11549                           ;stkvar	_i @ sp[(-20)+14]
 11550  014F0C  50E1               	movf	fsr1l,w,c
 11551  014F0E  0FFA               	addlw	-6
 11552  014F10  6ED9               	movwf	fsr2l,c
 11553  014F12  50E2               	movf	fsr1h,w,c
 11554  014F14  6EDA               	movwf	fsr2h,c
 11555  014F16  0EFF               	movlw	255
 11556  014F18  22DA               	addwfc	fsr2h,f,c
 11557  014F1A  06DE               	decf	postinc2,f,c
 11558  014F1C  0E00               	movlw	0
 11559  014F1E  5ADD               	subwfb	postdec2,f,c
 11560                           
 11561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 11562                           ;stkvar	_x @ sp[(-20)+-11]
 11563                           ;stkvar	_i @ sp[(-20)+14]
 11564  014F20  0EFA               	movlw	-6
 11565  014F22  006F FF8C  F00B    	movff	plusw1,btemp+10
 11566  014F28  0EFB               	movlw	-5
 11567  014F2A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11568  014F30  0E94               	movlw	low _dbuf
 11569  014F32  240B               	addwf	(btemp+10)^0,w,c
 11570  014F34  6ED9               	movwf	fsr2l,c
 11571  014F36  0E03               	movlw	high _dbuf
 11572  014F38  200C               	addwfc	(btemp+11)^0,w,c
 11573  014F3A  6EDA               	movwf	fsr2h,c
 11574  014F3C  0EE1               	movlw	-31
 11575  014F3E  006F FF8F FFDF     	movff	plusw1,indf2
 11576                           
 11577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 11578                           ;stkvar	_i @ sp[(-20)+14]
 11579  014F44  50E1               	movf	fsr1l,w,c
 11580  014F46  0FFA               	addlw	-6
 11581  014F48  6ED9               	movwf	fsr2l,c
 11582  014F4A  50E2               	movf	fsr1h,w,c
 11583  014F4C  6EDA               	movwf	fsr2h,c
 11584  014F4E  0EFF               	movlw	255
 11585  014F50  22DA               	addwfc	fsr2h,f,c
 11586  014F52  06DE               	decf	postinc2,f,c
 11587  014F54  0E00               	movlw	0
 11588  014F56  5ADD               	subwfb	postdec2,f,c
 11589                           
 11590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 11591                           ;stkvar	_i @ sp[(-20)+14]
 11592  014F58  0EFA               	movlw	-6
 11593  014F5A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11594  014F60  0EFB               	movlw	-5
 11595  014F62  006F FF8C  F00C    	movff	plusw1,btemp+11
 11596  014F68  0E94               	movlw	low _dbuf
 11597  014F6A  240B               	addwf	(btemp+10)^0,w,c
 11598  014F6C  6ED9               	movwf	fsr2l,c
 11599  014F6E  0E03               	movlw	high _dbuf
 11600  014F70  200C               	addwfc	(btemp+11)^0,w,c
 11601  014F72  6EDA               	movwf	fsr2h,c
 11602  014F74  0E30               	movlw	48
 11603  014F76  6EDF               	movwf	indf2,c
 11604  014F78                     l11048:
 11605                           
 11606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 11607                           ;stkvar	_w @ sp[(-20)+16]
 11608  014F78  0EFC               	movlw	-4
 11609  014F7A  006F FF8F FFE6     	movff	plusw1,postinc1
 11610  014F80  006F FF8F FFE6     	movff	plusw1,postinc1
 11611                           
 11612                           ;stkvar	_i @ sp[(-22)+14]
 11613  014F86  0E94               	movlw	low _dbuf
 11614  014F88  6E0B               	movwf	(btemp+10)^0,c
 11615  014F8A  0E03               	movlw	high _dbuf
 11616  014F8C  6E0C               	movwf	(btemp+11)^0,c
 11617  014F8E  0EF8               	movlw	-8
 11618  014F90  50E3               	movf	plusw1,w,c
 11619  014F92  260B               	addwf	(btemp+10)^0,f,c
 11620  014F94  0EF9               	movlw	-7
 11621  014F96  50E3               	movf	plusw1,w,c
 11622  014F98  220C               	addwfc	(btemp+11)^0,f,c
 11623  014F9A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11624  014FA0  0060  F033  FFE6   	movff	btemp+11,postinc1
 11625                           
 11626                           ;stkvar	_fp @ sp[(-24)+-2]
 11627  014FA6  0EE6               	movlw	-26
 11628  014FA8  006F FF8F FFE6     	movff	plusw1,postinc1
 11629  014FAE  006F FF8F FFE6     	movff	plusw1,postinc1
 11630  014FB4  ECD1  F0BC         	call	_pad	;wreg free
 11631                           
 11632                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 11633  014FB8  0EE1               	movlw	225
 11634  014FBA  26E1               	addwf	fsr1l,f,c
 11635  014FBC  0EFF               	movlw	255
 11636  014FBE  22E2               	addwfc	fsr1h,f,c
 11637  014FC0  0012               	return		;funcret
 11638  014FC2                     __end_of_xtoa:
 11639                           	opt callstack 0
 11640                           
 11641 ;; *************** function _toupper *****************
 11642 ;; Defined at:
 11643 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 11644 ;; Parameters:    Size  Location     Type
 11645 ;;  c               2  [STACK] int 
 11646 ;; Auto vars:     Size  Location     Type
 11647 ;;		None
 11648 ;; Return value:  Size  Location     Type
 11649 ;;                  2  [STACK] int 
 11650 ;; Registers used:
 11651 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 11652 ;; Tracked objects:
 11653 ;;		On entry : 0/3
 11654 ;;		On exit  : 0/0
 11655 ;;		Unchanged: 0/0
 11656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11661 ;;Total ram usage:        0 bytes
 11662 ;; Hardware stack levels used:    1
 11663 ;; Hardware stack levels required when called:   16
 11664 ;; This function calls:
 11665 ;;		_islower
 11666 ;; This function is called by:
 11667 ;;		_xtoa
 11668 ;; This function uses a reentrant model
 11669 ;;
 11670                           
 11671                           	psect	text45
 11672  0189B8                     __ptext45:
 11673                           	opt callstack 0
 11674  0189B8                     _toupper:
 11675                           	opt callstack 0
 11676                           
 11677                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11678  0189B8  52E6               	movf	postinc1,f,c
 11679  0189BA  52E6               	movf	postinc1,f,c
 11680                           
 11681                           ;stkvar	_c @ sp[(-2)+-2]
 11682                           
 11683                           ;incstack = 0
 11684 ;; hardware stack exceeded
 11685  0189BC  0EFC               	movlw	-4
 11686  0189BE  50E3               	movf	plusw1,w,c
 11687  0189C0  0F9F               	addlw	159
 11688  0189C2  6E0B               	movwf	(btemp+10)^0,c
 11689  0189C4  0EFD               	movlw	-3
 11690  0189C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 11691  0189CC  0EFF               	movlw	255
 11692  0189CE  220C               	addwfc	(btemp+11)^0,f,c
 11693  0189D0  500C               	movf	(btemp+11)^0,w,c
 11694  0189D2  E106               	bnz	u5490
 11695  0189D4  0E1A               	movlw	26
 11696  0189D6  5C0B               	subwf	(btemp+10)^0,w,c
 11697  0189D8  B0D8               	btfsc	status,0,c
 11698  0189DA  D002               	goto	u5490
 11699  0189DC  0E01               	movlw	1
 11700  0189DE  D001               	goto	u5500
 11701  0189E0                     u5490:
 11702  0189E0  0E00               	movlw	0
 11703  0189E2                     u5500:
 11704  0189E2  6E0B               	movwf	(btemp+10)^0,c
 11705  0189E4  6A0C               	clrf	(btemp+11)^0,c
 11706                           
 11707                           ;stkvar	_toupper$5965 @ sp[(-2)+0]
 11708  0189E6  0EFE               	movlw	-2
 11709  0189E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11710  0189EE  0EFF               	movlw	-1
 11711  0189F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 11712                           
 11713                           ;stkvar	_toupper$5965 @ sp[(-2)+0]
 11714  0189F6  0EFE               	movlw	-2
 11715  0189F8  006F FF8C  F001    	movff	plusw1,btemp
 11716  0189FE  0EFF               	movlw	-1
 11717  018A00  50E3               	movf	plusw1,w,c
 11718  018A02  1001               	iorwf	btemp^0,w,c
 11719  018A04  B4D8               	btfsc	status,2,c
 11720  018A06  D00D               	goto	l7284
 11721                           
 11722                           ;stkvar	_c @ sp[(-2)+-2]
 11723  018A08  0EFC               	movlw	-4
 11724  018A0A  006F FF8C  F001    	movff	plusw1,btemp
 11725  018A10  0EFD               	movlw	-3
 11726  018A12  006F FF8C  F002    	movff	plusw1,btemp+1
 11727  018A18  0E5F               	movlw	95
 11728  018A1A  1601               	andwf	btemp^0,f,c
 11729  018A1C  0E00               	movlw	0
 11730  018A1E  1602               	andwf	(btemp+1)^0,f,c
 11731  018A20  D008               	goto	l3314
 11732  018A22                     l7284:
 11733                           
 11734                           ;stkvar	_c @ sp[(-2)+-2]
 11735  018A22  0EFC               	movlw	-4
 11736  018A24  006F FF8C  F001    	movff	plusw1,btemp
 11737  018A2A  0EFD               	movlw	-3
 11738  018A2C  006F FF8C  F002    	movff	plusw1,btemp+1
 11739  018A32                     l3314:
 11740                           
 11741                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11742  018A32  52E5               	movf	postdec1,f,c
 11743  018A34  52E5               	movf	postdec1,f,c
 11744  018A36  52E5               	movf	postdec1,f,c
 11745  018A38  52E5               	movf	postdec1,f,c
 11746  018A3A  0012               	return		;funcret
 11747  018A3C                     __end_of_toupper:
 11748                           	opt callstack 0
 11749                           
 11750 ;; *************** function _islower *****************
 11751 ;; Defined at:
 11752 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 11753 ;; Parameters:    Size  Location     Type
 11754 ;;  c               2  [STACK] int 
 11755 ;; Auto vars:     Size  Location     Type
 11756 ;;		None
 11757 ;; Return value:  Size  Location     Type
 11758 ;;                  2  [STACK] int 
 11759 ;; Registers used:
 11760 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11761 ;; Tracked objects:
 11762 ;;		On entry : 0/0
 11763 ;;		On exit  : 0/0
 11764 ;;		Unchanged: 0/0
 11765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11770 ;;Total ram usage:        0 bytes
 11771 ;; Hardware stack levels used:    1
 11772 ;; Hardware stack levels required when called:   15
 11773 ;; This function calls:
 11774 ;;		Nothing
 11775 ;; This function is called by:
 11776 ;;		_toupper
 11777 ;; This function uses a reentrant model
 11778 ;;
 11779                           
 11780                           	psect	text46
 11781  0195AE                     __ptext46:
 11782                           	opt callstack 0
 11783  0195AE                     _islower:
 11784                           	opt callstack 0
 11785                           
 11786                           ;stkvar	_c @ sp[(0)+-2]
 11787                           
 11788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11789                           ;incstack = 0
 11790 ;; hardware stack exceeded
 11791  0195AE  0EFE               	movlw	-2
 11792  0195B0  50E3               	movf	plusw1,w,c
 11793  0195B2  0F9F               	addlw	159
 11794  0195B4  6E0B               	movwf	(btemp+10)^0,c
 11795  0195B6  0EFF               	movlw	-1
 11796  0195B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 11797  0195BE  0EFF               	movlw	255
 11798  0195C0  220C               	addwfc	(btemp+11)^0,f,c
 11799  0195C2  500C               	movf	(btemp+11)^0,w,c
 11800  0195C4  E106               	bnz	u5180
 11801  0195C6  0E1A               	movlw	26
 11802  0195C8  5C0B               	subwf	(btemp+10)^0,w,c
 11803  0195CA  B0D8               	btfsc	status,0,c
 11804  0195CC  D002               	goto	u5180
 11805  0195CE  0E01               	movlw	1
 11806  0195D0  D001               	goto	u5190
 11807  0195D2                     u5180:
 11808  0195D2  0E00               	movlw	0
 11809  0195D4                     u5190:
 11810  0195D4  6E01               	movwf	btemp^0,c
 11811  0195D6  6A02               	clrf	(btemp+1)^0,c
 11812                           
 11813                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11814  0195D8  52E5               	movf	postdec1,f,c
 11815  0195DA  52E5               	movf	postdec1,f,c
 11816  0195DC  0012               	return		;funcret
 11817  0195DE                     __end_of_islower:
 11818                           	opt callstack 0
 11819                           
 11820 ;; *************** function _isalpha *****************
 11821 ;; Defined at:
 11822 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 11823 ;; Parameters:    Size  Location     Type
 11824 ;;  c               2  [STACK] int 
 11825 ;; Auto vars:     Size  Location     Type
 11826 ;;		None
 11827 ;; Return value:  Size  Location     Type
 11828 ;;                  2  [STACK] int 
 11829 ;; Registers used:
 11830 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 11831 ;; Tracked objects:
 11832 ;;		On entry : 0/0
 11833 ;;		On exit  : 0/0
 11834 ;;		Unchanged: 0/0
 11835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11840 ;;Total ram usage:        0 bytes
 11841 ;; Hardware stack levels used:    1
 11842 ;; Hardware stack levels required when called:   15
 11843 ;; This function calls:
 11844 ;;		Nothing
 11845 ;; This function is called by:
 11846 ;;		_xtoa
 11847 ;; This function uses a reentrant model
 11848 ;;
 11849                           
 11850                           	psect	text47
 11851  0192AE                     __ptext47:
 11852                           	opt callstack 0
 11853  0192AE                     _isalpha:
 11854                           	opt callstack 0
 11855                           
 11856                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11857                           ;incstack = 0
 11858 ;; hardware stack exceeded
 11859  0192AE  0E9F               	movlw	159
 11860  0192B0  6E0B               	movwf	(btemp+10)^0,c
 11861  0192B2  0EFF               	movlw	255
 11862  0192B4  6E0C               	movwf	(btemp+11)^0,c
 11863                           
 11864                           ;stkvar	_c @ sp[(0)+-2]
 11865  0192B6  0EFE               	movlw	-2
 11866  0192B8  006F FF8C  F009    	movff	plusw1,btemp+8
 11867  0192BE  0EFF               	movlw	-1
 11868  0192C0  006F FF8C  F00A    	movff	plusw1,btemp+9
 11869  0192C6  0E20               	movlw	32
 11870  0192C8  1209               	iorwf	(btemp+8)^0,f,c
 11871  0192CA  0E00               	movlw	0
 11872  0192CC  120A               	iorwf	(btemp+9)^0,f,c
 11873  0192CE  500B               	movf	(btemp+10)^0,w,c
 11874  0192D0  2609               	addwf	(btemp+8)^0,f,c
 11875  0192D2  500C               	movf	(btemp+11)^0,w,c
 11876  0192D4  220A               	addwfc	(btemp+9)^0,f,c
 11877  0192D6  500A               	movf	(btemp+9)^0,w,c
 11878  0192D8  E106               	bnz	u5470
 11879  0192DA  0E1A               	movlw	26
 11880  0192DC  5C09               	subwf	(btemp+8)^0,w,c
 11881  0192DE  B0D8               	btfsc	status,0,c
 11882  0192E0  D002               	goto	u5470
 11883  0192E2  0E01               	movlw	1
 11884  0192E4  D001               	goto	u5480
 11885  0192E6                     u5470:
 11886  0192E6  0E00               	movlw	0
 11887  0192E8                     u5480:
 11888  0192E8  6E01               	movwf	btemp^0,c
 11889  0192EA  6A02               	clrf	(btemp+1)^0,c
 11890                           
 11891                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11892  0192EC  52E5               	movf	postdec1,f,c
 11893  0192EE  52E5               	movf	postdec1,f,c
 11894  0192F0  0012               	return		;funcret
 11895  0192F2                     __end_of_isalpha:
 11896                           	opt callstack 0
 11897                           
 11898 ;; *************** function _strncmp *****************
 11899 ;; Defined at:
 11900 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 11901 ;; Parameters:    Size  Location     Type
 11902 ;;  _l              2  [STACK] PTR const unsigned char 
 11903 ;;		 -> ct(3), 
 11904 ;;  _r              2  [STACK] PTR const unsigned char 
 11905 ;;		 -> STR_57(3), 
 11906 ;;  n               2  [STACK] unsigned int 
 11907 ;; Auto vars:     Size  Location     Type
 11908 ;;  r               2  [STACK] PTR const unsigned char 
 11909 ;;		 -> STR_57(3), 
 11910 ;;  l               2  [STACK] PTR const unsigned char 
 11911 ;;		 -> ct(3), 
 11912 ;; Return value:  Size  Location     Type
 11913 ;;                  2  [STACK] int 
 11914 ;; Registers used:
 11915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 11916 ;; Tracked objects:
 11917 ;;		On entry : 0/0
 11918 ;;		On exit  : 0/0
 11919 ;;		Unchanged: 0/0
 11920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11925 ;;Total ram usage:        0 bytes
 11926 ;; Hardware stack levels used:    1
 11927 ;; Hardware stack levels required when called:   15
 11928 ;; This function calls:
 11929 ;;		Nothing
 11930 ;; This function is called by:
 11931 ;;		_vfpfcnvrt
 11932 ;; This function uses a reentrant model
 11933 ;;
 11934                           
 11935                           	psect	text48
 11936  0168FC                     __ptext48:
 11937                           	opt callstack 0
 11938  0168FC                     _strncmp:
 11939                           	opt callstack 0
 11940                           
 11941                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11942  0168FC  52E6               	movf	postinc1,f,c
 11943  0168FE  52E6               	movf	postinc1,f,c
 11944  016900  52E6               	movf	postinc1,f,c
 11945  016902  52E6               	movf	postinc1,f,c
 11946                           
 11947                           ;stkvar	__l @ sp[(-4)+-2]
 11948                           
 11949                           ;incstack = 0
 11950 ;; hardware stack exceeded
 11951  016904  0EFA               	movlw	-6
 11952  016906  006F FF8C  F00B    	movff	plusw1,btemp+10
 11953  01690C  0EFB               	movlw	-5
 11954  01690E  006F FF8C  F00C    	movff	plusw1,btemp+11
 11955                           
 11956                           ;stkvar	_l @ sp[(-4)+2]
 11957  016914  0EFF               	movlw	-1
 11958  016916  0060  F033  FFE3   	movff	btemp+11,plusw1
 11959  01691C  0EFE               	movlw	-2
 11960  01691E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11961                           
 11962                           ;stkvar	__r @ sp[(-4)+-4]
 11963  016924  0EF8               	movlw	-8
 11964  016926  006F FF8C  F00B    	movff	plusw1,btemp+10
 11965  01692C  0EF9               	movlw	-7
 11966  01692E  006F FF8C  F00C    	movff	plusw1,btemp+11
 11967                           
 11968                           ;stkvar	_r @ sp[(-4)+0]
 11969  016934  0EFD               	movlw	-3
 11970  016936  0060  F033  FFE3   	movff	btemp+11,plusw1
 11971  01693C  0EFC               	movlw	-4
 11972  01693E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11973                           
 11974                           ;stkvar	_n @ sp[(-4)+-6]
 11975  016944  0EF6               	movlw	-10
 11976  016946  006F FF8C  F001    	movff	plusw1,btemp
 11977  01694C  0E01               	movlw	1
 11978  01694E  5E01               	subwf	btemp^0,f,c
 11979  016950  0EF6               	movlw	-10
 11980  016952  0060  F007  FFE3   	movff	btemp,plusw1
 11981  016958  0EF7               	movlw	-9
 11982  01695A  006F FF8C  F001    	movff	plusw1,btemp
 11983  016960  0E00               	movlw	0
 11984  016962  5A01               	subwfb	btemp^0,f,c
 11985  016964  0EF7               	movlw	-9
 11986  016966  0060  F007  FFE3   	movff	btemp,plusw1
 11987  01696C  0EF6               	movlw	-10
 11988  01696E  28E3               	incf	plusw1,w,c
 11989  016970  E13F               	bnz	l8494
 11990  016972  0EF7               	movlw	-9
 11991  016974  28E3               	incf	plusw1,w,c
 11992  016976  A4D8               	btfss	status,2,c
 11993  016978  D03B               	goto	l8494
 11994  01697A  0E00               	movlw	0
 11995  01697C  6E01               	movwf	btemp^0,c
 11996  01697E  0E00               	movlw	0
 11997  016980  6E02               	movwf	(btemp+1)^0,c
 11998  016982  D09B               	goto	l3286
 11999  016984                     l8492:
 12000                           
 12001                           ;stkvar	_l @ sp[(-4)+2]
 12002  016984  0EFE               	movlw	-2
 12003  016986  50E3               	movf	plusw1,w,c
 12004  016988  0F01               	addlw	1
 12005  01698A  6E01               	movwf	btemp^0,c
 12006  01698C  0EFE               	movlw	-2
 12007  01698E  0060  F007  FFE3   	movff	btemp,plusw1
 12008  016994  6A01               	clrf	btemp^0,c
 12009  016996  0EFF               	movlw	-1
 12010  016998  50E3               	movf	plusw1,w,c
 12011  01699A  2001               	addwfc	btemp^0,w,c
 12012  01699C  6E01               	movwf	btemp^0,c
 12013  01699E  0EFF               	movlw	-1
 12014  0169A0  0060  F007  FFE3   	movff	btemp,plusw1
 12015                           
 12016                           ;stkvar	_r @ sp[(-4)+0]
 12017  0169A6  0EFC               	movlw	-4
 12018  0169A8  50E3               	movf	plusw1,w,c
 12019  0169AA  0F01               	addlw	1
 12020  0169AC  6E01               	movwf	btemp^0,c
 12021  0169AE  0EFC               	movlw	-4
 12022  0169B0  0060  F007  FFE3   	movff	btemp,plusw1
 12023  0169B6  6A01               	clrf	btemp^0,c
 12024  0169B8  0EFD               	movlw	-3
 12025  0169BA  50E3               	movf	plusw1,w,c
 12026  0169BC  2001               	addwfc	btemp^0,w,c
 12027  0169BE  6E01               	movwf	btemp^0,c
 12028  0169C0  0EFD               	movlw	-3
 12029  0169C2  0060  F007  FFE3   	movff	btemp,plusw1
 12030                           
 12031                           ;stkvar	_n @ sp[(-4)+-6]
 12032  0169C8  0EF6               	movlw	-10
 12033  0169CA  006F FF8C  F001    	movff	plusw1,btemp
 12034  0169D0  0E01               	movlw	1
 12035  0169D2  5E01               	subwf	btemp^0,f,c
 12036  0169D4  0EF6               	movlw	-10
 12037  0169D6  0060  F007  FFE3   	movff	btemp,plusw1
 12038  0169DC  0EF7               	movlw	-9
 12039  0169DE  006F FF8C  F001    	movff	plusw1,btemp
 12040  0169E4  0E00               	movlw	0
 12041  0169E6  5A01               	subwfb	btemp^0,f,c
 12042  0169E8  0EF7               	movlw	-9
 12043  0169EA  0060  F007  FFE3   	movff	btemp,plusw1
 12044  0169F0                     l8494:
 12045                           
 12046                           ;stkvar	_l @ sp[(-4)+2]
 12047  0169F0  0EFE               	movlw	-2
 12048  0169F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12049  0169F8  0EFF               	movlw	-1
 12050  0169FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12051  016A00  50DF               	movf	indf2,w,c
 12052  016A02  B4D8               	btfsc	status,2,c
 12053  016A04  D03B               	goto	u7730
 12054                           
 12055                           ;stkvar	_r @ sp[(-4)+0]
 12056  016A06  50E1               	movf	fsr1l,w,c
 12057  016A08  0FFC               	addlw	-4
 12058  016A0A  6ED9               	movwf	fsr2l,c
 12059  016A0C  50E2               	movf	fsr1h,w,c
 12060  016A0E  6EDA               	movwf	fsr2h,c
 12061  016A10  0EFF               	movlw	255
 12062  016A12  22DA               	addwfc	fsr2h,f,c
 12063  016A14  006F FF7B FFF6     	movff	postinc2,tblptrl
 12064  016A1A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12065  016A20                     	if	0	;tblptru may be non-zero
 12066  016A20                     	endif
 12067  016A20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12068  016A20  0E00               	movlw	low (__mediumconst shr (0+16))
 12069  016A22  6EF8               	movwf	tblptru,c
 12070  016A24                     	endif
 12071  016A24  0008               	tblrd		*
 12072  016A26  50F5               	movf	tablat,w,c
 12073  016A28  0900               	iorlw	0
 12074  016A2A  B4D8               	btfsc	status,2,c
 12075  016A2C  D027               	goto	u7730
 12076                           
 12077                           ;stkvar	_n @ sp[(-4)+-6]
 12078  016A2E  0EF6               	movlw	-10
 12079  016A30  006F FF8C  F001    	movff	plusw1,btemp
 12080  016A36  0EF7               	movlw	-9
 12081  016A38  50E3               	movf	plusw1,w,c
 12082  016A3A  1001               	iorwf	btemp^0,w,c
 12083  016A3C  B4D8               	btfsc	status,2,c
 12084  016A3E  D01E               	goto	u7730
 12085                           
 12086                           ;stkvar	_l @ sp[(-4)+2]
 12087  016A40  0EFE               	movlw	-2
 12088  016A42  006F FF8F FFD9     	movff	plusw1,fsr2l
 12089  016A48  0EFF               	movlw	-1
 12090  016A4A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12091  016A50  50DF               	movf	indf2,w,c
 12092  016A52  6E0C               	movwf	(btemp+11)^0,c
 12093                           
 12094                           ;stkvar	_r @ sp[(-4)+0]
 12095  016A54  50E1               	movf	fsr1l,w,c
 12096  016A56  0FFC               	addlw	-4
 12097  016A58  6ED9               	movwf	fsr2l,c
 12098  016A5A  50E2               	movf	fsr1h,w,c
 12099  016A5C  6EDA               	movwf	fsr2h,c
 12100  016A5E  0EFF               	movlw	255
 12101  016A60  22DA               	addwfc	fsr2h,f,c
 12102  016A62  006F FF7B FFF6     	movff	postinc2,tblptrl
 12103  016A68  006F FF77 FFF7     	movff	postdec2,tblptrh
 12104  016A6E                     	if	0	;tblptru may be non-zero
 12105  016A6E                     	endif
 12106  016A6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12107  016A6E  0E00               	movlw	low (__mediumconst shr (0+16))
 12108  016A70  6EF8               	movwf	tblptru,c
 12109  016A72                     	endif
 12110  016A72  0008               	tblrd		*
 12111  016A74  50F5               	movf	tablat,w,c
 12112  016A76  180C               	xorwf	(btemp+11)^0,w,c
 12113  016A78  B4D8               	btfsc	status,2,c
 12114  016A7A  D784               	goto	l8492
 12115  016A7C                     u7730:
 12116                           
 12117                           ;stkvar	_l @ sp[(-4)+2]
 12118  016A7C  0EFE               	movlw	-2
 12119  016A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12120  016A84  0EFF               	movlw	-1
 12121  016A86  006F FF8F FFDA     	movff	plusw1,fsr2h
 12122  016A8C  50DF               	movf	indf2,w,c
 12123  016A8E  6E01               	movwf	btemp^0,c
 12124  016A90  6A02               	clrf	(btemp+1)^0,c
 12125                           
 12126                           ;stkvar	_r @ sp[(-4)+0]
 12127  016A92  50E1               	movf	fsr1l,w,c
 12128  016A94  0FFC               	addlw	-4
 12129  016A96  6ED9               	movwf	fsr2l,c
 12130  016A98  50E2               	movf	fsr1h,w,c
 12131  016A9A  6EDA               	movwf	fsr2h,c
 12132  016A9C  0EFF               	movlw	255
 12133  016A9E  22DA               	addwfc	fsr2h,f,c
 12134  016AA0  006F FF7B FFF6     	movff	postinc2,tblptrl
 12135  016AA6  006F FF77 FFF7     	movff	postdec2,tblptrh
 12136  016AAC                     	if	0	;tblptru may be non-zero
 12137  016AAC                     	endif
 12138  016AAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12139  016AAC  0E00               	movlw	low (__mediumconst shr (0+16))
 12140  016AAE  6EF8               	movwf	tblptru,c
 12141  016AB0                     	endif
 12142  016AB0  0008               	tblrd		*
 12143  016AB2  50F5               	movf	tablat,w,c
 12144  016AB4  5E01               	subwf	btemp^0,f,c
 12145  016AB6  0E00               	movlw	0
 12146  016AB8  5A02               	subwfb	(btemp+1)^0,f,c
 12147  016ABA                     l3286:
 12148                           
 12149                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 12150  016ABA  0EF6               	movlw	246
 12151  016ABC  26E1               	addwf	fsr1l,f,c
 12152  016ABE  0EFF               	movlw	255
 12153  016AC0  22E2               	addwfc	fsr1h,f,c
 12154  016AC2  0012               	return		;funcret
 12155  016AC4                     __end_of_strncmp:
 12156                           	opt callstack 0
 12157                           
 12158 ;; *************** function _stoa *****************
 12159 ;; Defined at:
 12160 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12161 ;; Parameters:    Size  Location     Type
 12162 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12163 ;;		 -> f(6), NULL(0), 
 12164 ;;  s               2  [STACK] PTR unsigned char 
 12165 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
 12166 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
 12167 ;;		 -> STR_3(6), V(188), 
 12168 ;; Auto vars:     Size  Location     Type
 12169 ;;  nuls            7  [STACK] unsigned char [7]
 12170 ;;  l               2  [STACK] int 
 12171 ;;  p               2  [STACK] int 
 12172 ;;  cp              2  [STACK] PTR unsigned char 
 12173 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_28(9), 
 12174 ;;		 -> STR_27(12), D.lcd(288), D(290), T(144), 
 12175 ;;		 -> STR_7(6), STR_3(6), V(188), 
 12176 ;;  w               2  [STACK] int 
 12177 ;;  i               2  [STACK] int 
 12178 ;; Return value:  Size  Location     Type
 12179 ;;                  2  [STACK] int 
 12180 ;; Registers used:
 12181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12182 ;; Tracked objects:
 12183 ;;		On entry : 0/0
 12184 ;;		On exit  : 0/0
 12185 ;;		Unchanged: 0/0
 12186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12191 ;;Total ram usage:        0 bytes
 12192 ;; Hardware stack levels used:    1
 12193 ;; Hardware stack levels required when called:   18
 12194 ;; This function calls:
 12195 ;;		_fputc
 12196 ;;		_strlen
 12197 ;; This function is called by:
 12198 ;;		_vfpfcnvrt
 12199 ;; This function uses a reentrant model
 12200 ;;
 12201                           
 12202                           	psect	text49
 12203  0158F4                     __ptext49:
 12204                           	opt callstack 0
 12205  0158F4                     _stoa:
 12206                           	opt callstack 0
 12207                           
 12208                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12209  0158F4  0E11               	movlw	17
 12210  0158F6  26E1               	addwf	fsr1l,f,c
 12211  0158F8  0E00               	movlw	0
 12212  0158FA  22E2               	addwfc	fsr1h,f,c
 12213                           
 12214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 12215                           
 12216                           ;incstack = 0
 12217 ;; hardware stack exceeded
 12218  0158FC  EE20  F1D3         	lfsr	2,stoa@F1166
 12219                           
 12220                           ;stkvar	_nuls @ sp[(-17)+0]
 12221  015900  0E07               	movlw	7
 12222  015902  6E01               	movwf	btemp^0,c
 12223  015904  0EEF               	movlw	-17
 12224  015906                     us1019999:
 12225  015906  006F FF7B FFE3     	movff	postinc2,plusw1
 12226  01590C  28E8               	incf	wreg,w,c
 12227  01590E  2E01               	decfsz	btemp^0,f,c
 12228  015910  D7FA               	bra	us1019999
 12229                           
 12230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 12231                           ;stkvar	_s @ sp[(-17)+-4]
 12232  015912  0EEB               	movlw	-21
 12233  015914  006F FF8C  F00B    	movff	plusw1,btemp+10
 12234  01591A  0EEC               	movlw	-20
 12235  01591C  006F FF8C  F00C    	movff	plusw1,btemp+11
 12236                           
 12237                           ;stkvar	_cp @ sp[(-17)+11]
 12238  015922  0EFB               	movlw	-5
 12239  015924  0060  F033  FFE3   	movff	btemp+11,plusw1
 12240  01592A  0EFA               	movlw	-6
 12241  01592C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12242                           
 12243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 12244                           ;stkvar	_cp @ sp[(-17)+11]
 12245  015932  0EFA               	movlw	-6
 12246  015934  006F FF8C  F001    	movff	plusw1,btemp
 12247  01593A  0EFB               	movlw	-5
 12248  01593C  50E3               	movf	plusw1,w,c
 12249  01593E  1001               	iorwf	btemp^0,w,c
 12250  015940  A4D8               	btfss	status,2,c
 12251  015942  D00E               	goto	l10936
 12252                           
 12253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 12254                           ;stkvar	_nuls @ sp[(-17)+0]
 12255  015944  0EEF               	movlw	239
 12256  015946  24E1               	addwf	fsr1l,w,c
 12257  015948  6E0B               	movwf	(btemp+10)^0,c
 12258  01594A  0EFF               	movlw	255
 12259  01594C  20E2               	addwfc	fsr1h,w,c
 12260  01594E  6E0C               	movwf	(btemp+11)^0,c
 12261                           
 12262                           ;stkvar	_cp @ sp[(-17)+11]
 12263  015950  0EFB               	movlw	-5
 12264  015952  0060  F033  FFE3   	movff	btemp+11,plusw1
 12265  015958  0EFA               	movlw	-6
 12266  01595A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12267  015960                     l10936:
 12268                           
 12269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 12270                           ;stkvar	_cp @ sp[(-17)+11]
 12271  015960  0EFA               	movlw	-6
 12272  015962  006F FF8F FFE6     	movff	plusw1,postinc1
 12273  015968  006F FF8F FFE6     	movff	plusw1,postinc1
 12274  01596E  ECD6  F0C2         	call	_strlen	;wreg free
 12275                           
 12276                           ;stkvar	_l @ sp[(-17)+7]
 12277  015972  0EF6               	movlw	-10
 12278  015974  0060  F007  FFE3   	movff	btemp,plusw1
 12279  01597A  0EF7               	movlw	-9
 12280  01597C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12281                           
 12282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 12283                           ;stkvar	_p @ sp[(-17)+9]
 12284  015982  0EF8               	movlw	-8
 12285  015984  0060  F08F  FFE3   	movff	_prec,plusw1
 12286  01598A  0EF9               	movlw	-7
 12287  01598C  0060  F093  FFE3   	movff	_prec+1,plusw1
 12288                           
 12289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 12290                           ;stkvar	_p @ sp[(-17)+9]
 12291  015992  0EF9               	movlw	-7
 12292  015994  BEE3               	btfsc	plusw1,7,c
 12293  015996  D023               	goto	l2139
 12294                           
 12295                           ;stkvar	_l @ sp[(-17)+7]
 12296                           ;stkvar	_p @ sp[(-17)+9]
 12297  015998  50E1               	movf	fsr1l,w,c
 12298  01599A  0FF8               	addlw	-8
 12299  01599C  6ED9               	movwf	fsr2l,c
 12300  01599E  50E2               	movf	fsr1h,w,c
 12301  0159A0  6EDA               	movwf	fsr2h,c
 12302  0159A2  0EFF               	movlw	255
 12303  0159A4  22DA               	addwfc	fsr2h,f,c
 12304  0159A6  0EF6               	movlw	-10
 12305  0159A8  50E3               	movf	plusw1,w,c
 12306  0159AA  5CDE               	subwf	postinc2,w,c
 12307  0159AC  50DE               	movf	postinc2,w,c
 12308  0159AE  0A80               	xorlw	128
 12309  0159B0  6E01               	movwf	btemp^0,c
 12310  0159B2  0EF7               	movlw	-9
 12311  0159B4  50E3               	movf	plusw1,w,c
 12312  0159B6  0A80               	xorlw	128
 12313  0159B8  5801               	subwfb	btemp^0,w,c
 12314  0159BA  B0D8               	btfsc	status,0,c
 12315  0159BC  D010               	goto	l2139
 12316                           
 12317                           ;stkvar	_p @ sp[(-17)+9]
 12318                           ;stkvar	_l @ sp[(-17)+7]
 12319  0159BE  0EF8               	movlw	-8
 12320  0159C0  006F FF8C  F001    	movff	plusw1,btemp
 12321  0159C6  0EF6               	movlw	-10
 12322  0159C8  0060  F007  FFE3   	movff	btemp,plusw1
 12323  0159CE  0EF9               	movlw	-7
 12324  0159D0  006F FF8C  F001    	movff	plusw1,btemp
 12325  0159D6  0EF7               	movlw	-9
 12326  0159D8  0060  F007  FFE3   	movff	btemp,plusw1
 12327  0159DE                     l2139:
 12328                           
 12329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 12330                           ;stkvar	_l @ sp[(-17)+7]
 12331                           ;stkvar	_p @ sp[(-17)+9]
 12332  0159DE  0EF6               	movlw	-10
 12333  0159E0  006F FF8C  F001    	movff	plusw1,btemp
 12334  0159E6  0EF8               	movlw	-8
 12335  0159E8  0060  F007  FFE3   	movff	btemp,plusw1
 12336  0159EE  0EF7               	movlw	-9
 12337  0159F0  006F FF8C  F001    	movff	plusw1,btemp
 12338  0159F6  0EF9               	movlw	-7
 12339  0159F8  0060  F007  FFE3   	movff	btemp,plusw1
 12340                           
 12341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 12342                           ;stkvar	_w @ sp[(-17)+13]
 12343  0159FE  0EFC               	movlw	-4
 12344  015A00  0060  F087  FFE3   	movff	_width,plusw1
 12345  015A06  0EFD               	movlw	-3
 12346  015A08  0060  F08B  FFE3   	movff	_width+1,plusw1
 12347                           
 12348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 12349  015A0E  A025               	btfss	_flags^0,0,c
 12350  015A10  D01F               	goto	l10956
 12351  015A12  D031               	goto	u10240
 12352  015A14                     l10952:
 12353                           
 12354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 12355                           ;stkvar	_fp @ sp[(-17)+-2]
 12356  015A14  0EED               	movlw	-19
 12357  015A16  006F FF8F FFE6     	movff	plusw1,postinc1
 12358  015A1C  006F FF8F FFE6     	movff	plusw1,postinc1
 12359  015A22  0E20               	movlw	32
 12360  015A24  6EE6               	movwf	postinc1,c
 12361  015A26  0E00               	movlw	0
 12362  015A28  6EE6               	movwf	postinc1,c
 12363  015A2A  ECB3  F0BB         	call	_fputc	;wreg free
 12364                           
 12365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 12366                           ;stkvar	_l @ sp[(-17)+7]
 12367  015A2E  0EF6               	movlw	-10
 12368  015A30  50E3               	movf	plusw1,w,c
 12369  015A32  0F01               	addlw	1
 12370  015A34  6E01               	movwf	btemp^0,c
 12371  015A36  0EF6               	movlw	-10
 12372  015A38  0060  F007  FFE3   	movff	btemp,plusw1
 12373  015A3E  6A01               	clrf	btemp^0,c
 12374  015A40  0EF7               	movlw	-9
 12375  015A42  50E3               	movf	plusw1,w,c
 12376  015A44  2001               	addwfc	btemp^0,w,c
 12377  015A46  6E01               	movwf	btemp^0,c
 12378  015A48  0EF7               	movlw	-9
 12379  015A4A  0060  F007  FFE3   	movff	btemp,plusw1
 12380  015A50                     l10956:
 12381                           
 12382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 12383                           ;stkvar	_w @ sp[(-17)+13]
 12384                           ;stkvar	_l @ sp[(-17)+7]
 12385  015A50  50E1               	movf	fsr1l,w,c
 12386  015A52  0FF6               	addlw	-10
 12387  015A54  6ED9               	movwf	fsr2l,c
 12388  015A56  50E2               	movf	fsr1h,w,c
 12389  015A58  6EDA               	movwf	fsr2h,c
 12390  015A5A  0EFF               	movlw	255
 12391  015A5C  22DA               	addwfc	fsr2h,f,c
 12392  015A5E  0EFC               	movlw	-4
 12393  015A60  50E3               	movf	plusw1,w,c
 12394  015A62  5CDE               	subwf	postinc2,w,c
 12395  015A64  50DE               	movf	postinc2,w,c
 12396  015A66  0A80               	xorlw	128
 12397  015A68  6E01               	movwf	btemp^0,c
 12398  015A6A  0EFD               	movlw	-3
 12399  015A6C  50E3               	movf	plusw1,w,c
 12400  015A6E  0A80               	xorlw	128
 12401  015A70  5801               	subwfb	btemp^0,w,c
 12402  015A72  A0D8               	btfss	status,0,c
 12403  015A74  D7CF               	goto	l10952
 12404  015A76                     u10240:
 12405                           
 12406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 12407                           ;stkvar	_i @ sp[(-17)+15]
 12408  015A76  0EFE               	movlw	-2
 12409  015A78  6AE3               	clrf	plusw1,c
 12410  015A7A  0EFF               	movlw	-1
 12411  015A7C  6AE3               	clrf	plusw1,c
 12412                           
 12413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 12414  015A7E  D045               	goto	l10966
 12415  015A80                     l10960:
 12416                           
 12417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 12418                           ;stkvar	_fp @ sp[(-17)+-2]
 12419  015A80  0EED               	movlw	-19
 12420  015A82  006F FF8F FFE6     	movff	plusw1,postinc1
 12421  015A88  006F FF8F FFE6     	movff	plusw1,postinc1
 12422                           
 12423                           ;stkvar	_cp @ sp[(-19)+11]
 12424  015A8E  0EF8               	movlw	-8
 12425  015A90  006F FF8F FFF6     	movff	plusw1,tblptrl
 12426  015A96  0EF9               	movlw	-7
 12427  015A98  006F FF8F FFF7     	movff	plusw1,tblptrh
 12428  015A9E  0E00               	movlw	low (__mediumconst shr (0+16))
 12429  015AA0  6EF8               	movwf	tblptru,c
 12430  015AA2  0E1F               	movlw	(high __ramtop+-1)
 12431  015AA4  64F7               	cpfsgt	tblptrh,c
 12432  015AA6  D003               	bra	u10257
 12433  015AA8  0008               	tblrd		*
 12434  015AAA  50F5               	movf	tablat,w,c
 12435  015AAC  D007               	bra	u10250
 12436  015AAE                     u10257:
 12437  015AAE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12438  015AB4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12439  015ABA  50EF               	movf	indf0,w,c
 12440  015ABC                     u10250:
 12441  015ABC  6EE6               	movwf	postinc1,c
 12442  015ABE  0E00               	movlw	0
 12443  015AC0  6EE6               	movwf	postinc1,c
 12444  015AC2  ECB3  F0BB         	call	_fputc	;wreg free
 12445                           
 12446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 12447                           ;stkvar	_cp @ sp[(-17)+11]
 12448  015AC6  0EFA               	movlw	-6
 12449  015AC8  50E3               	movf	plusw1,w,c
 12450  015ACA  0F01               	addlw	1
 12451  015ACC  6E01               	movwf	btemp^0,c
 12452  015ACE  0EFA               	movlw	-6
 12453  015AD0  0060  F007  FFE3   	movff	btemp,plusw1
 12454  015AD6  6A01               	clrf	btemp^0,c
 12455  015AD8  0EFB               	movlw	-5
 12456  015ADA  50E3               	movf	plusw1,w,c
 12457  015ADC  2001               	addwfc	btemp^0,w,c
 12458  015ADE  6E01               	movwf	btemp^0,c
 12459  015AE0  0EFB               	movlw	-5
 12460  015AE2  0060  F007  FFE3   	movff	btemp,plusw1
 12461                           
 12462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 12463                           ;stkvar	_i @ sp[(-17)+15]
 12464  015AE8  0EFE               	movlw	-2
 12465  015AEA  50E3               	movf	plusw1,w,c
 12466  015AEC  0F01               	addlw	1
 12467  015AEE  6E01               	movwf	btemp^0,c
 12468  015AF0  0EFE               	movlw	-2
 12469  015AF2  0060  F007  FFE3   	movff	btemp,plusw1
 12470  015AF8  6A01               	clrf	btemp^0,c
 12471  015AFA  0EFF               	movlw	-1
 12472  015AFC  50E3               	movf	plusw1,w,c
 12473  015AFE  2001               	addwfc	btemp^0,w,c
 12474  015B00  6E01               	movwf	btemp^0,c
 12475  015B02  0EFF               	movlw	-1
 12476  015B04  0060  F007  FFE3   	movff	btemp,plusw1
 12477  015B0A                     l10966:
 12478                           
 12479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 12480                           ;stkvar	_p @ sp[(-17)+9]
 12481                           ;stkvar	_i @ sp[(-17)+15]
 12482  015B0A  50E1               	movf	fsr1l,w,c
 12483  015B0C  0FFE               	addlw	-2
 12484  015B0E  6ED9               	movwf	fsr2l,c
 12485  015B10  50E2               	movf	fsr1h,w,c
 12486  015B12  6EDA               	movwf	fsr2h,c
 12487  015B14  0EFF               	movlw	255
 12488  015B16  22DA               	addwfc	fsr2h,f,c
 12489  015B18  0EF8               	movlw	-8
 12490  015B1A  50E3               	movf	plusw1,w,c
 12491  015B1C  5CDE               	subwf	postinc2,w,c
 12492  015B1E  50DE               	movf	postinc2,w,c
 12493  015B20  0A80               	xorlw	128
 12494  015B22  6E01               	movwf	btemp^0,c
 12495  015B24  0EF9               	movlw	-7
 12496  015B26  50E3               	movf	plusw1,w,c
 12497  015B28  0A80               	xorlw	128
 12498  015B2A  5801               	subwfb	btemp^0,w,c
 12499  015B2C  A0D8               	btfss	status,0,c
 12500  015B2E  D7A8               	goto	l10960
 12501                           
 12502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 12503  015B30  B025               	btfsc	_flags^0,0,c
 12504  015B32  D01F               	goto	l10974
 12505  015B34  D031               	goto	u10280
 12506  015B36                     l10970:
 12507                           
 12508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 12509                           ;stkvar	_fp @ sp[(-17)+-2]
 12510  015B36  0EED               	movlw	-19
 12511  015B38  006F FF8F FFE6     	movff	plusw1,postinc1
 12512  015B3E  006F FF8F FFE6     	movff	plusw1,postinc1
 12513  015B44  0E20               	movlw	32
 12514  015B46  6EE6               	movwf	postinc1,c
 12515  015B48  0E00               	movlw	0
 12516  015B4A  6EE6               	movwf	postinc1,c
 12517  015B4C  ECB3  F0BB         	call	_fputc	;wreg free
 12518                           
 12519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 12520                           ;stkvar	_l @ sp[(-17)+7]
 12521  015B50  0EF6               	movlw	-10
 12522  015B52  50E3               	movf	plusw1,w,c
 12523  015B54  0F01               	addlw	1
 12524  015B56  6E01               	movwf	btemp^0,c
 12525  015B58  0EF6               	movlw	-10
 12526  015B5A  0060  F007  FFE3   	movff	btemp,plusw1
 12527  015B60  6A01               	clrf	btemp^0,c
 12528  015B62  0EF7               	movlw	-9
 12529  015B64  50E3               	movf	plusw1,w,c
 12530  015B66  2001               	addwfc	btemp^0,w,c
 12531  015B68  6E01               	movwf	btemp^0,c
 12532  015B6A  0EF7               	movlw	-9
 12533  015B6C  0060  F007  FFE3   	movff	btemp,plusw1
 12534  015B72                     l10974:
 12535                           
 12536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 12537                           ;stkvar	_w @ sp[(-17)+13]
 12538                           ;stkvar	_l @ sp[(-17)+7]
 12539  015B72  50E1               	movf	fsr1l,w,c
 12540  015B74  0FF6               	addlw	-10
 12541  015B76  6ED9               	movwf	fsr2l,c
 12542  015B78  50E2               	movf	fsr1h,w,c
 12543  015B7A  6EDA               	movwf	fsr2h,c
 12544  015B7C  0EFF               	movlw	255
 12545  015B7E  22DA               	addwfc	fsr2h,f,c
 12546  015B80  0EFC               	movlw	-4
 12547  015B82  50E3               	movf	plusw1,w,c
 12548  015B84  5CDE               	subwf	postinc2,w,c
 12549  015B86  50DE               	movf	postinc2,w,c
 12550  015B88  0A80               	xorlw	128
 12551  015B8A  6E01               	movwf	btemp^0,c
 12552  015B8C  0EFD               	movlw	-3
 12553  015B8E  50E3               	movf	plusw1,w,c
 12554  015B90  0A80               	xorlw	128
 12555  015B92  5801               	subwfb	btemp^0,w,c
 12556  015B94  A0D8               	btfss	status,0,c
 12557  015B96  D7CF               	goto	l10970
 12558  015B98                     u10280:
 12559                           
 12560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 12561                           ;stkvar	_l @ sp[(-17)+7]
 12562  015B98  0EF6               	movlw	-10
 12563  015B9A  006F FF8C  F001    	movff	plusw1,btemp
 12564  015BA0  0EF7               	movlw	-9
 12565  015BA2  006F FF8C  F002    	movff	plusw1,btemp+1
 12566                           
 12567                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 12568  015BA8  0EEB               	movlw	235
 12569  015BAA  26E1               	addwf	fsr1l,f,c
 12570  015BAC  0EFF               	movlw	255
 12571  015BAE  22E2               	addwfc	fsr1h,f,c
 12572  015BB0  0012               	return		;funcret
 12573  015BB2                     __end_of_stoa:
 12574                           	opt callstack 0
 12575                           
 12576 ;; *************** function _efgtoa *****************
 12577 ;; Defined at:
 12578 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12579 ;; Parameters:    Size  Location     Type
 12580 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12581 ;;		 -> f(6), NULL(0), 
 12582 ;;  f               4  [STACK] PTR struct _IO_FILE
 12583 ;;  c               1  [STACK] unsigned char 
 12584 ;; Auto vars:     Size  Location     Type
 12585 ;;  u               4  [STACK] unsigned char 
 12586 ;;  g               4  [STACK] unsigned char 
 12587 ;;  l               4  [STACK] unsigned char 
 12588 ;;  h               4  [STACK] unsigned char 
 12589 ;;  ou              4  [STACK] unsigned char 
 12590 ;;  n               2  [STACK] int 
 12591 ;;  e               2  [STACK] int 
 12592 ;;  i               2  [STACK] int 
 12593 ;;  w               2  [STACK] int 
 12594 ;;  p               2  [STACK] int 
 12595 ;;  sign            2  [STACK] int 
 12596 ;;  d               2  [STACK] int 
 12597 ;;  ne              2  [STACK] int 
 12598 ;;  m               2  [STACK] int 
 12599 ;;  pp              2  [STACK] int 
 12600 ;;  t               2  [STACK] int 
 12601 ;;  mode            1  [STACK] unsigned char 
 12602 ;;  nmode           1  [STACK] unsigned char 
 12603 ;; Return value:  Size  Location     Type
 12604 ;;                  2  [STACK] int 
 12605 ;; Registers used:
 12606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 12607 ;; Tracked objects:
 12608 ;;		On entry : 0/0
 12609 ;;		On exit  : 0/0
 12610 ;;		Unchanged: 0/0
 12611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12616 ;;Total ram usage:        0 bytes
 12617 ;; Hardware stack levels used:    1
 12618 ;; Hardware stack levels required when called:   20
 12619 ;; This function calls:
 12620 ;;		___awdiv
 12621 ;;		___awmod
 12622 ;;		___fladd
 12623 ;;		___fldiv
 12624 ;;		___fleq
 12625 ;;		___flge
 12626 ;;		___flmul
 12627 ;;		___flneg
 12628 ;;		___flsub
 12629 ;;		___fltol
 12630 ;;		___fpclassifyf
 12631 ;;		_floorf
 12632 ;;		_isupper
 12633 ;;		_pad
 12634 ;;		_strcpy
 12635 ;;		_tolower
 12636 ;; This function is called by:
 12637 ;;		_vfpfcnvrt
 12638 ;; This function uses a reentrant model
 12639 ;;
 12640                           
 12641                           	psect	text50
 12642  010000                     __ptext50:
 12643                           	opt callstack 0
 12644  010000                     _efgtoa:
 12645                           	opt callstack 0
 12646                           
 12647                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12648  010000  0E38               	movlw	56
 12649  010002  26E1               	addwf	fsr1l,f,c
 12650  010004  0E00               	movlw	0
 12651  010006  22E2               	addwfc	fsr1h,f,c
 12652                           
 12653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 12654                           ;stkvar	_sign @ sp[(-56)+42]
 12655                           
 12656                           ;incstack = 0
 12657 ;; hardware stack exceeded
 12658  010008  0EF2               	movlw	-14
 12659  01000A  6AE3               	clrf	plusw1,c
 12660  01000C  0EF3               	movlw	-13
 12661  01000E  6AE3               	clrf	plusw1,c
 12662                           
 12663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 12664                           ;stkvar	_f @ sp[(-56)+-6]
 12665  010010  0EC2               	movlw	-62
 12666  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 12667  010018  0EC3               	movlw	-61
 12668  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 12669  010020  0EC4               	movlw	-60
 12670  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 12671  010028  0EC5               	movlw	-59
 12672  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12673                           
 12674                           ;stkvar	_g @ sp[(-56)+16]
 12675  010030  0ED8               	movlw	-40
 12676  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 12677  010038  0ED9               	movlw	-39
 12678  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12679  010040  0EDA               	movlw	-38
 12680  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12681  010048  0EDB               	movlw	-37
 12682  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12683                           
 12684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 12685                           ;stkvar	_g @ sp[(-56)+16]
 12686  010050  0EDB               	movlw	-37
 12687  010052  AEE3               	btfss	plusw1,7,c
 12688  010054  D02B               	goto	l10634
 12689                           
 12690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 12691  010056  0E01               	movlw	1
 12692  010058  6E0B               	movwf	(btemp+10)^0,c
 12693  01005A  0E00               	movlw	0
 12694  01005C  6E0C               	movwf	(btemp+11)^0,c
 12695                           
 12696                           ;stkvar	_sign @ sp[(-56)+42]
 12697  01005E  0EF2               	movlw	-14
 12698  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12699  010066  0EF3               	movlw	-13
 12700  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 12701                           
 12702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 12703                           ;stkvar	_g @ sp[(-56)+16]
 12704  01006E  0ED8               	movlw	-40
 12705  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 12706  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 12707  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 12708  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 12709  010088  EC84  F0C8         	call	___flneg	;wreg free
 12710                           
 12711                           ;stkvar	_g @ sp[(-56)+16]
 12712  01008C  0ED8               	movlw	-40
 12713  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 12714  010094  0ED9               	movlw	-39
 12715  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12716  01009C  0EDA               	movlw	-38
 12717  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 12718  0100A4  0EDB               	movlw	-37
 12719  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 12720  0100AC                     l10634:
 12721                           
 12722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 12723                           ;stkvar	_n @ sp[(-56)+32]
 12724  0100AC  0EE8               	movlw	-24
 12725  0100AE  6AE3               	clrf	plusw1,c
 12726  0100B0  0EE9               	movlw	-23
 12727  0100B2  6AE3               	clrf	plusw1,c
 12728                           
 12729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 12730                           ;stkvar	_w @ sp[(-56)+38]
 12731  0100B4  0EEE               	movlw	-18
 12732  0100B6  0060  F087  FFE3   	movff	_width,plusw1
 12733  0100BC  0EEF               	movlw	-17
 12734  0100BE  0060  F08B  FFE3   	movff	_width+1,plusw1
 12735                           
 12736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 12737                           ;stkvar	_sign @ sp[(-56)+42]
 12738  0100C4  0EF2               	movlw	-14
 12739  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 12740  0100CC  0EF3               	movlw	-13
 12741  0100CE  50E3               	movf	plusw1,w,c
 12742  0100D0  1001               	iorwf	btemp^0,w,c
 12743  0100D2  A4D8               	btfss	status,2,c
 12744  0100D4  D002               	goto	u9690
 12745  0100D6  A425               	btfss	_flags^0,2,c
 12746  0100D8  D036               	goto	l10654
 12747  0100DA                     u9690:
 12748                           
 12749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 12750                           ;stkvar	_sign @ sp[(-56)+42]
 12751  0100DA  0EF2               	movlw	-14
 12752  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 12753  0100E2  0EF3               	movlw	-13
 12754  0100E4  50E3               	movf	plusw1,w,c
 12755  0100E6  1001               	iorwf	btemp^0,w,c
 12756  0100E8  A4D8               	btfss	status,2,c
 12757  0100EA  D002               	goto	l10646
 12758  0100EC  0E2B               	movlw	43
 12759  0100EE  D001               	goto	L9
 12760  0100F0                     l10646:
 12761  0100F0  0E2D               	movlw	45
 12762  0100F2                     L9:
 12763  0100F2  6E0B               	movwf	(btemp+10)^0,c
 12764  0100F4  0E00               	movlw	0
 12765  0100F6  6E0C               	movwf	(btemp+11)^0,c
 12766                           
 12767                           ;stkvar	_efgtoa$5158 @ sp[(-56)+10]
 12768  0100F8  0ED2               	movlw	-46
 12769  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12770  010100  0ED3               	movlw	-45
 12771  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 12772                           
 12773                           ;stkvar	_efgtoa$5158 @ sp[(-56)+10]
 12774  010108  0ED2               	movlw	-46
 12775  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 12776                           
 12777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 12778                           ;stkvar	_n @ sp[(-56)+32]
 12779  010110  0EE8               	movlw	-24
 12780  010112  50E3               	movf	plusw1,w,c
 12781  010114  0F01               	addlw	1
 12782  010116  6E01               	movwf	btemp^0,c
 12783  010118  0EE8               	movlw	-24
 12784  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 12785  010120  6A01               	clrf	btemp^0,c
 12786  010122  0EE9               	movlw	-23
 12787  010124  50E3               	movf	plusw1,w,c
 12788  010126  2001               	addwfc	btemp^0,w,c
 12789  010128  6E01               	movwf	btemp^0,c
 12790  01012A  0EE9               	movlw	-23
 12791  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 12792                           
 12793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 12794                           ;stkvar	_w @ sp[(-56)+38]
 12795  010132  50E1               	movf	fsr1l,w,c
 12796  010134  0FEE               	addlw	-18
 12797  010136  6ED9               	movwf	fsr2l,c
 12798  010138  50E2               	movf	fsr1h,w,c
 12799  01013A  6EDA               	movwf	fsr2h,c
 12800  01013C  0EFF               	movlw	255
 12801  01013E  22DA               	addwfc	fsr2h,f,c
 12802  010140  06DE               	decf	postinc2,f,c
 12803  010142  0E00               	movlw	0
 12804  010144  5ADD               	subwfb	postdec2,f,c
 12805  010146                     l10654:
 12806                           
 12807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 12808                           ;stkvar	_g @ sp[(-56)+16]
 12809  010146  0ED8               	movlw	-40
 12810  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 12811  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 12812  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 12813  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 12814  010160  EC42  F0B6         	call	___fpclassifyf	;wreg free
 12815  010164  0401               	decf	btemp^0,w,c
 12816  010166  1002               	iorwf	(btemp+1)^0,w,c
 12817  010168  A4D8               	btfss	status,2,c
 12818  01016A  D076               	goto	l10672
 12819  01016C  0EBF               	movlw	191
 12820  01016E  6E0B               	movwf	(btemp+10)^0,c
 12821  010170  0EFF               	movlw	255
 12822  010172  6E0C               	movwf	(btemp+11)^0,c
 12823                           
 12824                           ;stkvar	_c @ sp[(-56)+-7]
 12825  010174  0EC1               	movlw	-63
 12826  010176  50E3               	movf	plusw1,w,c
 12827  010178  6E09               	movwf	(btemp+8)^0,c
 12828  01017A  6A0A               	clrf	(btemp+9)^0,c
 12829  01017C  500B               	movf	(btemp+10)^0,w,c
 12830  01017E  2609               	addwf	(btemp+8)^0,f,c
 12831  010180  500C               	movf	(btemp+11)^0,w,c
 12832  010182  220A               	addwfc	(btemp+9)^0,f,c
 12833  010184  500A               	movf	(btemp+9)^0,w,c
 12834  010186  E106               	bnz	u9720
 12835  010188  0E1A               	movlw	26
 12836  01018A  5C09               	subwf	(btemp+8)^0,w,c
 12837  01018C  B0D8               	btfsc	status,0,c
 12838  01018E  D002               	goto	u9720
 12839  010190  0E01               	movlw	1
 12840  010192  D001               	goto	u9730
 12841  010194                     u9720:
 12842  010194  0E00               	movlw	0
 12843  010196                     u9730:
 12844  010196  6E0B               	movwf	(btemp+10)^0,c
 12845  010198  6A0C               	clrf	(btemp+11)^0,c
 12846                           
 12847                           ;stkvar	_efgtoa$5159 @ sp[(-56)+8]
 12848  01019A  0ED0               	movlw	-48
 12849  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12850  0101A2  0ED1               	movlw	-47
 12851  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 12852                           
 12853                           ;stkvar	_efgtoa$5159 @ sp[(-56)+8]
 12854  0101AA  0ED0               	movlw	-48
 12855  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 12856  0101B2  0ED1               	movlw	-47
 12857  0101B4  50E3               	movf	plusw1,w,c
 12858  0101B6  1001               	iorwf	btemp^0,w,c
 12859  0101B8  B4D8               	btfsc	status,2,c
 12860  0101BA  D017               	goto	l10664
 12861                           
 12862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 12863  0101BC  0EE5               	movlw	low STR_47
 12864  0101BE  6EE6               	movwf	postinc1,c
 12865  0101C0  0EFF               	movlw	high STR_47
 12866  0101C2  6EE6               	movwf	postinc1,c
 12867                           
 12868                           ;stkvar	_n @ sp[(-58)+32]
 12869  0101C4  0E94               	movlw	low _dbuf
 12870  0101C6  6E0B               	movwf	(btemp+10)^0,c
 12871  0101C8  0E03               	movlw	high _dbuf
 12872  0101CA  6E0C               	movwf	(btemp+11)^0,c
 12873  0101CC  0EE6               	movlw	-26
 12874  0101CE  50E3               	movf	plusw1,w,c
 12875  0101D0  260B               	addwf	(btemp+10)^0,f,c
 12876  0101D2  0EE7               	movlw	-25
 12877  0101D4  50E3               	movf	plusw1,w,c
 12878  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 12879  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12880  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 12881  0101E4  EC52  F0C0         	call	_strcpy	;wreg free
 12882                           
 12883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 12884  0101E8  D016               	goto	l10666
 12885  0101EA                     l10664:
 12886                           
 12887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 12888  0101EA  0EED               	movlw	low STR_48
 12889  0101EC  6EE6               	movwf	postinc1,c
 12890  0101EE  0EFF               	movlw	high STR_48
 12891  0101F0  6EE6               	movwf	postinc1,c
 12892                           
 12893                           ;stkvar	_n @ sp[(-58)+32]
 12894  0101F2  0E94               	movlw	low _dbuf
 12895  0101F4  6E0B               	movwf	(btemp+10)^0,c
 12896  0101F6  0E03               	movlw	high _dbuf
 12897  0101F8  6E0C               	movwf	(btemp+11)^0,c
 12898  0101FA  0EE6               	movlw	-26
 12899  0101FC  50E3               	movf	plusw1,w,c
 12900  0101FE  260B               	addwf	(btemp+10)^0,f,c
 12901  010200  0EE7               	movlw	-25
 12902  010202  50E3               	movf	plusw1,w,c
 12903  010204  220C               	addwfc	(btemp+11)^0,f,c
 12904  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12905  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 12906  010212  EC52  F0C0         	call	_strcpy	;wreg free
 12907  010216                     l10666:
 12908                           
 12909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 12910                           ;stkvar	_w @ sp[(-56)+38]
 12911  010216  50E1               	movf	fsr1l,w,c
 12912  010218  0FEE               	addlw	-18
 12913  01021A  6ED9               	movwf	fsr2l,c
 12914  01021C  50E2               	movf	fsr1h,w,c
 12915  01021E  6EDA               	movwf	fsr2h,c
 12916  010220  0EFF               	movlw	255
 12917  010222  22DA               	addwfc	fsr2h,f,c
 12918  010224  0EFD               	movlw	253
 12919  010226  26DE               	addwf	postinc2,f,c
 12920  010228  0EFF               	movlw	255
 12921  01022A  22DD               	addwfc	postdec2,f,c
 12922  01022C                     l10668:
 12923                           
 12924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 12925                           ;stkvar	_w @ sp[(-56)+38]
 12926  01022C  0EEE               	movlw	-18
 12927  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 12928  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 12929  01023A  0E94               	movlw	low _dbuf
 12930  01023C  6EE6               	movwf	postinc1,c
 12931  01023E  0E03               	movlw	high _dbuf
 12932  010240  6EE6               	movwf	postinc1,c
 12933                           
 12934                           ;stkvar	_fp @ sp[(-60)+-2]
 12935  010242  0EC2               	movlw	-62
 12936  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 12937  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 12938  010250  ECD1  F0BC         	call	_pad	;wreg free
 12939  010254  EF1D  F089         	goto	l2057
 12940  010258                     l10672:
 12941                           
 12942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 12943                           ;stkvar	_g @ sp[(-56)+16]
 12944  010258  0ED8               	movlw	-40
 12945  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 12946  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 12947  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 12948  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 12949  010272  EC42  F0B6         	call	___fpclassifyf	;wreg free
 12950  010276  5001               	movf	btemp^0,w,c
 12951  010278  1002               	iorwf	(btemp+1)^0,w,c
 12952  01027A  A4D8               	btfss	status,2,c
 12953  01027C  D056               	goto	l10690
 12954  01027E  0EBF               	movlw	191
 12955  010280  6E0B               	movwf	(btemp+10)^0,c
 12956  010282  0EFF               	movlw	255
 12957  010284  6E0C               	movwf	(btemp+11)^0,c
 12958                           
 12959                           ;stkvar	_c @ sp[(-56)+-7]
 12960  010286  0EC1               	movlw	-63
 12961  010288  50E3               	movf	plusw1,w,c
 12962  01028A  6E09               	movwf	(btemp+8)^0,c
 12963  01028C  6A0A               	clrf	(btemp+9)^0,c
 12964  01028E  500B               	movf	(btemp+10)^0,w,c
 12965  010290  2609               	addwf	(btemp+8)^0,f,c
 12966  010292  500C               	movf	(btemp+11)^0,w,c
 12967  010294  220A               	addwfc	(btemp+9)^0,f,c
 12968  010296  500A               	movf	(btemp+9)^0,w,c
 12969  010298  E106               	bnz	u9760
 12970  01029A  0E1A               	movlw	26
 12971  01029C  5C09               	subwf	(btemp+8)^0,w,c
 12972  01029E  B0D8               	btfsc	status,0,c
 12973  0102A0  D002               	goto	u9760
 12974  0102A2  0E01               	movlw	1
 12975  0102A4  D001               	goto	u9770
 12976  0102A6                     u9760:
 12977  0102A6  0E00               	movlw	0
 12978  0102A8                     u9770:
 12979  0102A8  6E0B               	movwf	(btemp+10)^0,c
 12980  0102AA  6A0C               	clrf	(btemp+11)^0,c
 12981                           
 12982                           ;stkvar	_efgtoa$5163 @ sp[(-56)+6]
 12983  0102AC  0ECE               	movlw	-50
 12984  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12985  0102B4  0ECF               	movlw	-49
 12986  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 12987                           
 12988                           ;stkvar	_efgtoa$5163 @ sp[(-56)+6]
 12989  0102BC  0ECE               	movlw	-50
 12990  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 12991  0102C4  0ECF               	movlw	-49
 12992  0102C6  50E3               	movf	plusw1,w,c
 12993  0102C8  1001               	iorwf	btemp^0,w,c
 12994  0102CA  B4D8               	btfsc	status,2,c
 12995  0102CC  D017               	goto	l10682
 12996                           
 12997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 12998  0102CE  0EE9               	movlw	low STR_51
 12999  0102D0  6EE6               	movwf	postinc1,c
 13000  0102D2  0EFF               	movlw	high STR_51
 13001  0102D4  6EE6               	movwf	postinc1,c
 13002                           
 13003                           ;stkvar	_n @ sp[(-58)+32]
 13004  0102D6  0E94               	movlw	low _dbuf
 13005  0102D8  6E0B               	movwf	(btemp+10)^0,c
 13006  0102DA  0E03               	movlw	high _dbuf
 13007  0102DC  6E0C               	movwf	(btemp+11)^0,c
 13008  0102DE  0EE6               	movlw	-26
 13009  0102E0  50E3               	movf	plusw1,w,c
 13010  0102E2  260B               	addwf	(btemp+10)^0,f,c
 13011  0102E4  0EE7               	movlw	-25
 13012  0102E6  50E3               	movf	plusw1,w,c
 13013  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 13014  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13015  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 13016  0102F6  EC52  F0C0         	call	_strcpy	;wreg free
 13017                           
 13018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 13019  0102FA  D78D               	goto	l10666
 13020  0102FC                     l10682:
 13021                           
 13022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 13023  0102FC  0EF1               	movlw	low STR_52
 13024  0102FE  6EE6               	movwf	postinc1,c
 13025  010300  0EFF               	movlw	high STR_52
 13026  010302  6EE6               	movwf	postinc1,c
 13027                           
 13028                           ;stkvar	_n @ sp[(-58)+32]
 13029  010304  0E94               	movlw	low _dbuf
 13030  010306  6E0B               	movwf	(btemp+10)^0,c
 13031  010308  0E03               	movlw	high _dbuf
 13032  01030A  6E0C               	movwf	(btemp+11)^0,c
 13033  01030C  0EE6               	movlw	-26
 13034  01030E  50E3               	movf	plusw1,w,c
 13035  010310  260B               	addwf	(btemp+10)^0,f,c
 13036  010312  0EE7               	movlw	-25
 13037  010314  50E3               	movf	plusw1,w,c
 13038  010316  220C               	addwfc	(btemp+11)^0,f,c
 13039  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13040  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 13041  010324  EC52  F0C0         	call	_strcpy	;wreg free
 13042  010328  D776               	goto	l10666
 13043  01032A                     l10690:
 13044                           
 13045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 13046  01032A  0E00               	movlw	0
 13047  01032C  6E09               	movwf	(btemp+8)^0,c
 13048  01032E  0E00               	movlw	0
 13049  010330  6E0A               	movwf	(btemp+9)^0,c
 13050  010332  0E80               	movlw	128
 13051  010334  6E0B               	movwf	(btemp+10)^0,c
 13052  010336  0E3F               	movlw	63
 13053  010338  6E0C               	movwf	(btemp+11)^0,c
 13054                           
 13055                           ;stkvar	_u @ sp[(-56)+12]
 13056  01033A  0ED4               	movlw	-44
 13057  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 13058  010342  0ED5               	movlw	-43
 13059  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13060  01034A  0ED6               	movlw	-42
 13061  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13062  010352  0ED7               	movlw	-41
 13063  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 13064                           
 13065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 13066                           ;stkvar	_e @ sp[(-56)+34]
 13067  01035A  0EEA               	movlw	-22
 13068  01035C  6AE3               	clrf	plusw1,c
 13069  01035E  0EEB               	movlw	-21
 13070  010360  6AE3               	clrf	plusw1,c
 13071                           
 13072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 13073  010362  0E00               	movlw	0
 13074  010364  6EE6               	movwf	postinc1,c
 13075  010366  0E00               	movlw	0
 13076  010368  6EE6               	movwf	postinc1,c
 13077  01036A  0E00               	movlw	0
 13078  01036C  6EE6               	movwf	postinc1,c
 13079  01036E  0E00               	movlw	0
 13080  010370  6EE6               	movwf	postinc1,c
 13081                           
 13082                           ;stkvar	_g @ sp[(-60)+16]
 13083  010372  0ED4               	movlw	-44
 13084  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 13085  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 13086  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 13087  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 13088  01038C  ECBC  F0C0         	call	___fleq	;wreg free
 13089  010390  A001               	btfss	btemp& (0+255),0,c
 13090  010392  D039               	goto	l10702
 13091  010394  D0BC               	goto	u9810
 13092  010396                     l10698:
 13093                           
 13094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 13095  010396  0E00               	movlw	0
 13096  010398  6EE6               	movwf	postinc1,c
 13097  01039A  0E00               	movlw	0
 13098  01039C  6EE6               	movwf	postinc1,c
 13099  01039E  0E20               	movlw	32
 13100  0103A0  6EE6               	movwf	postinc1,c
 13101  0103A2  0E41               	movlw	65
 13102  0103A4  6EE6               	movwf	postinc1,c
 13103                           
 13104                           ;stkvar	_u @ sp[(-60)+12]
 13105  0103A6  0ED0               	movlw	-48
 13106  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 13107  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 13108  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 13109  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 13110  0103C0  EC1C  F093         	call	___flmul	;wreg free
 13111                           
 13112                           ;stkvar	_u @ sp[(-56)+12]
 13113  0103C4  0ED4               	movlw	-44
 13114  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 13115  0103CC  0ED5               	movlw	-43
 13116  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13117  0103D4  0ED6               	movlw	-42
 13118  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13119  0103DC  0ED7               	movlw	-41
 13120  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 13121                           
 13122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 13123                           ;stkvar	_e @ sp[(-56)+34]
 13124  0103E4  0EEA               	movlw	-22
 13125  0103E6  50E3               	movf	plusw1,w,c
 13126  0103E8  0F01               	addlw	1
 13127  0103EA  6E01               	movwf	btemp^0,c
 13128  0103EC  0EEA               	movlw	-22
 13129  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 13130  0103F4  6A01               	clrf	btemp^0,c
 13131  0103F6  0EEB               	movlw	-21
 13132  0103F8  50E3               	movf	plusw1,w,c
 13133  0103FA  2001               	addwfc	btemp^0,w,c
 13134  0103FC  6E01               	movwf	btemp^0,c
 13135  0103FE  0EEB               	movlw	-21
 13136  010400  0060  F007  FFE3   	movff	btemp,plusw1
 13137  010406                     l10702:
 13138                           
 13139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 13140  010406  0E00               	movlw	0
 13141  010408  6EE6               	movwf	postinc1,c
 13142  01040A  0E00               	movlw	0
 13143  01040C  6EE6               	movwf	postinc1,c
 13144  01040E  0E20               	movlw	32
 13145  010410  6EE6               	movwf	postinc1,c
 13146  010412  0E41               	movlw	65
 13147  010414  6EE6               	movwf	postinc1,c
 13148                           
 13149                           ;stkvar	_u @ sp[(-60)+12]
 13150  010416  0ED0               	movlw	-48
 13151  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 13152  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 13153  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 13154  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 13155  010430  EC1C  F093         	call	___flmul	;wreg free
 13156  010434  0060  F007  FFE6   	movff	btemp,postinc1
 13157  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13158  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13159  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 13160                           
 13161                           ;stkvar	_g @ sp[(-60)+16]
 13162  01044C  0ED4               	movlw	-44
 13163  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 13164  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 13165  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 13166  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 13167  010466  EC7E  F0B8         	call	___flge	;wreg free
 13168  01046A  A001               	btfss	btemp& (0+255),0,c
 13169  01046C  D032               	goto	l10708
 13170  01046E  D793               	goto	l10698
 13171  010470                     l10704:
 13172                           
 13173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 13174  010470  0E00               	movlw	0
 13175  010472  6EE6               	movwf	postinc1,c
 13176  010474  0E00               	movlw	0
 13177  010476  6EE6               	movwf	postinc1,c
 13178  010478  0E20               	movlw	32
 13179  01047A  6EE6               	movwf	postinc1,c
 13180  01047C  0E41               	movlw	65
 13181  01047E  6EE6               	movwf	postinc1,c
 13182                           
 13183                           ;stkvar	_u @ sp[(-60)+12]
 13184  010480  0ED0               	movlw	-48
 13185  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 13186  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 13187  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 13188  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 13189  01049A  ECB1  F09E         	call	___fldiv	;wreg free
 13190                           
 13191                           ;stkvar	_u @ sp[(-56)+12]
 13192  01049E  0ED4               	movlw	-44
 13193  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 13194  0104A6  0ED5               	movlw	-43
 13195  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13196  0104AE  0ED6               	movlw	-42
 13197  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13198  0104B6  0ED7               	movlw	-41
 13199  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 13200                           
 13201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 13202                           ;stkvar	_e @ sp[(-56)+34]
 13203  0104BE  50E1               	movf	fsr1l,w,c
 13204  0104C0  0FEA               	addlw	-22
 13205  0104C2  6ED9               	movwf	fsr2l,c
 13206  0104C4  50E2               	movf	fsr1h,w,c
 13207  0104C6  6EDA               	movwf	fsr2h,c
 13208  0104C8  0EFF               	movlw	255
 13209  0104CA  22DA               	addwfc	fsr2h,f,c
 13210  0104CC  06DE               	decf	postinc2,f,c
 13211  0104CE  0E00               	movlw	0
 13212  0104D0  5ADD               	subwfb	postdec2,f,c
 13213  0104D2                     l10708:
 13214                           
 13215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 13216                           ;stkvar	_u @ sp[(-56)+12]
 13217  0104D2  0ED4               	movlw	-44
 13218  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 13219  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 13220  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 13221  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 13222                           
 13223                           ;stkvar	_g @ sp[(-60)+16]
 13224  0104EC  0ED4               	movlw	-44
 13225  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 13226  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 13227  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 13228  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 13229  010506  EC7E  F0B8         	call	___flge	;wreg free
 13230  01050A  A001               	btfss	btemp& (0+255),0,c
 13231  01050C  D7B1               	goto	l10704
 13232  01050E                     u9810:
 13233                           
 13234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 13235                           ;stkvar	_c @ sp[(-56)+-7]
 13236  01050E  0EC1               	movlw	-63
 13237  010510  50E3               	movf	plusw1,w,c
 13238  010512  6EE6               	movwf	postinc1,c
 13239  010514  0E00               	movlw	0
 13240  010516  6EE6               	movwf	postinc1,c
 13241  010518  EC1E  F0C5         	call	_tolower	;wreg free
 13242                           
 13243                           ;stkvar	_mode @ sp[(-56)+54]
 13244  01051C  0EFE               	movlw	-2
 13245  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 13246                           
 13247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 13248                           ;stkvar	_mode @ sp[(-56)+54]
 13249                           ;stkvar	_nmode @ sp[(-56)+55]
 13250  010524  0EFE               	movlw	-2
 13251  010526  006F FF8C  F001    	movff	plusw1,btemp
 13252  01052C  0EFF               	movlw	-1
 13253  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 13254                           
 13255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 13256                           ;stkvar	_mode @ sp[(-56)+54]
 13257  010534  0EFE               	movlw	-2
 13258  010536  006F FF8C  F001    	movff	plusw1,btemp
 13259  01053C  0E67               	movlw	103
 13260  01053E  1801               	xorwf	btemp^0,w,c
 13261  010540  A4D8               	btfss	status,2,c
 13262  010542  D025               	goto	l10726
 13263                           
 13264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 13265  010544  5023               	movf	_prec^0,w,c
 13266  010546  1024               	iorwf	(_prec+1)^0,w,c
 13267  010548  A4D8               	btfss	status,2,c
 13268  01054A  D004               	goto	l10720
 13269                           
 13270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 13271  01054C  0E00               	movlw	0
 13272  01054E  6E24               	movwf	(_prec+1)^0,c
 13273  010550  0E01               	movlw	1
 13274  010552  6E23               	movwf	_prec^0,c
 13275  010554                     l10720:
 13276                           
 13277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 13278  010554  BE24               	btfsc	(_prec+1)^0,7,c
 13279  010556  D005               	goto	u9840
 13280  010558  5024               	movf	(_prec+1)^0,w,c
 13281  01055A  E110               	bnz	l10724
 13282  01055C  0423               	decf	_prec^0,w,c
 13283  01055E  B0D8               	btfsc	status,0,c
 13284  010560  D00D               	goto	l10724
 13285  010562                     u9840:
 13286  010562  0E06               	movlw	6
 13287  010564  6E0B               	movwf	(btemp+10)^0,c
 13288  010566  0E00               	movlw	0
 13289  010568  6E0C               	movwf	(btemp+11)^0,c
 13290                           
 13291                           ;stkvar	_p @ sp[(-56)+40]
 13292  01056A  0EF0               	movlw	-16
 13293  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13294  010572  0EF1               	movlw	-15
 13295  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 13296  01057A  D00C               	goto	l10732
 13297  01057C                     l10724:
 13298                           
 13299                           ;stkvar	_p @ sp[(-56)+40]
 13300  01057C  0EF0               	movlw	-16
 13301  01057E  0060  F08F  FFE3   	movff	_prec,plusw1
 13302  010584  0EF1               	movlw	-15
 13303  010586  0060  F093  FFE3   	movff	_prec+1,plusw1
 13304  01058C  D003               	goto	l10732
 13305  01058E                     l10726:
 13306                           
 13307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 13308  01058E  AE24               	btfss	(_prec+1)^0,7,c
 13309  010590  D7F5               	goto	l10724
 13310  010592  D7E7               	goto	u9840
 13311  010594                     l10732:
 13312                           
 13313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 13314                           ;stkvar	_mode @ sp[(-56)+54]
 13315  010594  0EFE               	movlw	-2
 13316  010596  006F FF8C  F001    	movff	plusw1,btemp
 13317  01059C  0E67               	movlw	103
 13318  01059E  1801               	xorwf	btemp^0,w,c
 13319  0105A0  A4D8               	btfss	status,2,c
 13320  0105A2  D02F               	goto	l10742
 13321                           
 13322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 13323                           ;stkvar	_e @ sp[(-56)+34]
 13324  0105A4  0EEB               	movlw	-21
 13325  0105A6  AEE3               	btfss	plusw1,7,c
 13326  0105A8  D00E               	goto	u9870
 13327  0105AA  0EEA               	movlw	-22
 13328  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 13329  0105B2  0EFC               	movlw	252
 13330  0105B4  5E01               	subwf	btemp^0,f,c
 13331  0105B6  0EEB               	movlw	-21
 13332  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 13333  0105BE  0EFF               	movlw	255
 13334  0105C0  5A01               	subwfb	btemp^0,f,c
 13335  0105C2  A0D8               	btfss	status,0,c
 13336  0105C4  D018               	goto	l10740
 13337  0105C6                     u9870:
 13338                           
 13339                           ;stkvar	_e @ sp[(-56)+34]
 13340                           ;stkvar	_p @ sp[(-56)+40]
 13341  0105C6  0EF0               	movlw	-16
 13342  0105C8  50E3               	movf	plusw1,w,c
 13343  0105CA  0FFF               	addlw	255
 13344  0105CC  6E0B               	movwf	(btemp+10)^0,c
 13345  0105CE  0EF1               	movlw	-15
 13346  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 13347  0105D6  0EFF               	movlw	255
 13348  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 13349  0105DA  0EEA               	movlw	-22
 13350  0105DC  50E3               	movf	plusw1,w,c
 13351  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 13352  0105E0  500C               	movf	(btemp+11)^0,w,c
 13353  0105E2  0A80               	xorlw	128
 13354  0105E4  6E01               	movwf	btemp^0,c
 13355  0105E6  0EEB               	movlw	-21
 13356  0105E8  50E3               	movf	plusw1,w,c
 13357  0105EA  0A80               	xorlw	128
 13358  0105EC  5801               	subwfb	btemp^0,w,c
 13359  0105EE  A0D8               	btfss	status,0,c
 13360  0105F0  D002               	goto	l10740
 13361                           
 13362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 13363  0105F2  0E66               	movlw	102
 13364  0105F4  D001               	goto	L10
 13365  0105F6                     l10740:
 13366                           
 13367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 13368  0105F6  0E65               	movlw	101
 13369  0105F8                     L10:
 13370  0105F8  6E0C               	movwf	(btemp+11)^0,c
 13371                           
 13372                           ;stkvar	_nmode @ sp[(-56)+55]
 13373  0105FA  0EFF               	movlw	-1
 13374  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13375  010602                     l10742:
 13376                           
 13377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 13378                           ;stkvar	_p @ sp[(-56)+40]
 13379                           ;stkvar	_m @ sp[(-56)+48]
 13380  010602  0EF0               	movlw	-16
 13381  010604  006F FF8C  F001    	movff	plusw1,btemp
 13382  01060A  0EF8               	movlw	-8
 13383  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 13384  010612  0EF1               	movlw	-15
 13385  010614  006F FF8C  F001    	movff	plusw1,btemp
 13386  01061A  0EF9               	movlw	-7
 13387  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 13388                           
 13389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 13390                           ;stkvar	_mode @ sp[(-56)+54]
 13391  010622  0EFE               	movlw	-2
 13392  010624  006F FF8C  F001    	movff	plusw1,btemp
 13393  01062A  0E67               	movlw	103
 13394  01062C  1801               	xorwf	btemp^0,w,c
 13395  01062E  A4D8               	btfss	status,2,c
 13396  010630  D00B               	goto	u9910
 13397                           
 13398                           ;stkvar	_nmode @ sp[(-56)+55]
 13399  010632  0EFF               	movlw	-1
 13400  010634  006F FF8C  F001    	movff	plusw1,btemp
 13401  01063A  0E66               	movlw	102
 13402  01063C  1801               	xorwf	btemp^0,w,c
 13403  01063E  A4D8               	btfss	status,2,c
 13404  010640  D014               	goto	l2086
 13405                           
 13406                           ;stkvar	_e @ sp[(-56)+34]
 13407  010642  0EEB               	movlw	-21
 13408  010644  AEE3               	btfss	plusw1,7,c
 13409  010646  D011               	goto	l2086
 13410  010648                     u9910:
 13411                           
 13412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 13413                           ;stkvar	_m @ sp[(-56)+48]
 13414  010648  0EF8               	movlw	-8
 13415  01064A  50E3               	movf	plusw1,w,c
 13416  01064C  0F01               	addlw	1
 13417  01064E  6E01               	movwf	btemp^0,c
 13418  010650  0EF8               	movlw	-8
 13419  010652  0060  F007  FFE3   	movff	btemp,plusw1
 13420  010658  6A01               	clrf	btemp^0,c
 13421  01065A  0EF9               	movlw	-7
 13422  01065C  50E3               	movf	plusw1,w,c
 13423  01065E  2001               	addwfc	btemp^0,w,c
 13424  010660  6E01               	movwf	btemp^0,c
 13425  010662  0EF9               	movlw	-7
 13426  010664  0060  F007  FFE3   	movff	btemp,plusw1
 13427  01066A                     l2086:
 13428                           
 13429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 13430                           ;stkvar	_nmode @ sp[(-56)+55]
 13431  01066A  0EFF               	movlw	-1
 13432  01066C  006F FF8C  F001    	movff	plusw1,btemp
 13433  010672  0E66               	movlw	102
 13434  010674  1801               	xorwf	btemp^0,w,c
 13435  010676  A4D8               	btfss	status,2,c
 13436  010678  D03B               	goto	l10762
 13437                           
 13438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 13439                           ;stkvar	_e @ sp[(-56)+34]
 13440  01067A  0EEB               	movlw	-21
 13441  01067C  AEE3               	btfss	plusw1,7,c
 13442  01067E  D01C               	goto	l10758
 13443                           
 13444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 13445  010680  0E00               	movlw	0
 13446  010682  6E09               	movwf	(btemp+8)^0,c
 13447  010684  0E00               	movlw	0
 13448  010686  6E0A               	movwf	(btemp+9)^0,c
 13449  010688  0E80               	movlw	128
 13450  01068A  6E0B               	movwf	(btemp+10)^0,c
 13451  01068C  0E3F               	movlw	63
 13452  01068E  6E0C               	movwf	(btemp+11)^0,c
 13453                           
 13454                           ;stkvar	_u @ sp[(-56)+12]
 13455  010690  0ED4               	movlw	-44
 13456  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 13457  010698  0ED5               	movlw	-43
 13458  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13459  0106A0  0ED6               	movlw	-42
 13460  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13461  0106A8  0ED7               	movlw	-41
 13462  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 13463                           
 13464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 13465                           ;stkvar	_e @ sp[(-56)+34]
 13466  0106B0  0EEA               	movlw	-22
 13467  0106B2  6AE3               	clrf	plusw1,c
 13468  0106B4  0EEB               	movlw	-21
 13469  0106B6  6AE3               	clrf	plusw1,c
 13470  0106B8                     l10758:
 13471                           
 13472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 13473                           ;stkvar	_mode @ sp[(-56)+54]
 13474  0106B8  0EFE               	movlw	-2
 13475  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 13476  0106C0  0E67               	movlw	103
 13477  0106C2  1801               	xorwf	btemp^0,w,c
 13478  0106C4  B4D8               	btfsc	status,2,c
 13479  0106C6  D014               	goto	l10762
 13480                           
 13481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 13482                           ;stkvar	_e @ sp[(-56)+34]
 13483                           ;stkvar	_m @ sp[(-56)+48]
 13484  0106C8  0EF8               	movlw	-8
 13485  0106CA  50E3               	movf	plusw1,w,c
 13486  0106CC  6E01               	movwf	btemp^0,c
 13487  0106CE  0EEA               	movlw	-22
 13488  0106D0  50E3               	movf	plusw1,w,c
 13489  0106D2  2601               	addwf	btemp^0,f,c
 13490  0106D4  0EF8               	movlw	-8
 13491  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 13492  0106DC  0EF9               	movlw	-7
 13493  0106DE  50E3               	movf	plusw1,w,c
 13494  0106E0  6E01               	movwf	btemp^0,c
 13495  0106E2  0EEB               	movlw	-21
 13496  0106E4  50E3               	movf	plusw1,w,c
 13497  0106E6  2201               	addwfc	btemp^0,f,c
 13498  0106E8  0EF9               	movlw	-7
 13499  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 13500  0106F0                     l10762:
 13501                           
 13502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 13503                           ;stkvar	_i @ sp[(-56)+36]
 13504  0106F0  0EEC               	movlw	-20
 13505  0106F2  6AE3               	clrf	plusw1,c
 13506  0106F4  0EED               	movlw	-19
 13507  0106F6  6AE3               	clrf	plusw1,c
 13508                           
 13509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 13510                           ;stkvar	_g @ sp[(-56)+16]
 13511  0106F8  0ED8               	movlw	-40
 13512  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 13513  010700  0ED9               	movlw	-39
 13514  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 13515  010708  0EDA               	movlw	-38
 13516  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 13517  010710  0EDB               	movlw	-37
 13518  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 13519                           
 13520                           ;stkvar	_h @ sp[(-56)+24]
 13521  010718  0EE0               	movlw	-32
 13522  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 13523  010720  0EE1               	movlw	-31
 13524  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13525  010728  0EE2               	movlw	-30
 13526  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13527  010730  0EE3               	movlw	-29
 13528  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 13529                           
 13530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 13531                           ;stkvar	_u @ sp[(-56)+12]
 13532  010738  0ED4               	movlw	-44
 13533  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 13534  010740  0ED5               	movlw	-43
 13535  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 13536  010748  0ED6               	movlw	-42
 13537  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 13538  010750  0ED7               	movlw	-41
 13539  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 13540                           
 13541                           ;stkvar	_ou @ sp[(-56)+28]
 13542  010758  0EE4               	movlw	-28
 13543  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 13544  010760  0EE5               	movlw	-27
 13545  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13546  010768  0EE6               	movlw	-26
 13547  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13548  010770  0EE7               	movlw	-25
 13549  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 13550                           
 13551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 13552  010778  D0D6               	goto	l10778
 13553  01077A                     l10768:
 13554                           
 13555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 13556                           ;stkvar	_u @ sp[(-56)+12]
 13557  01077A  0ED4               	movlw	-44
 13558  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 13559  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 13560  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 13561  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 13562                           
 13563                           ;stkvar	_h @ sp[(-60)+24]
 13564  010794  0EDC               	movlw	-36
 13565  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 13566  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 13567  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 13568  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 13569  0107AE  ECB1  F09E         	call	___fldiv	;wreg free
 13570  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 13571  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13572  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13573  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 13574  0107CA  ECE1  F0A7         	call	_floorf	;wreg free
 13575                           
 13576                           ;stkvar	_l @ sp[(-56)+20]
 13577  0107CE  0EDC               	movlw	-36
 13578  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 13579  0107D6  0EDD               	movlw	-35
 13580  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13581  0107DE  0EDE               	movlw	-34
 13582  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13583  0107E6  0EDF               	movlw	-33
 13584  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 13585                           
 13586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 13587                           ;stkvar	_l @ sp[(-56)+20]
 13588  0107EE  0EDC               	movlw	-36
 13589  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 13590  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 13591  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 13592  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 13593  010808  EC0D  F0B7         	call	___fltol	;wreg free
 13594  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 13595  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 13596                           
 13597                           ;stkvar	_d @ sp[(-56)+44]
 13598  010818  0EF4               	movlw	-12
 13599  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13600  010820  0EF5               	movlw	-11
 13601  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 13602                           
 13603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 13604                           ;stkvar	_u @ sp[(-56)+12]
 13605  010828  0ED4               	movlw	-44
 13606  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 13607  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 13608  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 13609  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 13610                           
 13611                           ;stkvar	_l @ sp[(-60)+20]
 13612  010842  0ED8               	movlw	-40
 13613  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 13614  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 13615  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 13616  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 13617  01085C  EC1C  F093         	call	___flmul	;wreg free
 13618  010860  0060  F007  FFE6   	movff	btemp,postinc1
 13619  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13620  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13621  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 13622                           
 13623                           ;stkvar	_h @ sp[(-60)+24]
 13624  010878  0EDC               	movlw	-36
 13625  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 13626  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 13627  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 13628  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 13629  010892  ECCB  F0C8         	call	___flsub	;wreg free
 13630                           
 13631                           ;stkvar	_h @ sp[(-56)+24]
 13632  010896  0EE0               	movlw	-32
 13633  010898  0060  F007  FFE3   	movff	btemp,plusw1
 13634  01089E  0EE1               	movlw	-31
 13635  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13636  0108A6  0EE2               	movlw	-30
 13637  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13638  0108AE  0EE3               	movlw	-29
 13639  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 13640                           
 13641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 13642  0108B6  0E00               	movlw	0
 13643  0108B8  6EE6               	movwf	postinc1,c
 13644  0108BA  0E00               	movlw	0
 13645  0108BC  6EE6               	movwf	postinc1,c
 13646  0108BE  0E20               	movlw	32
 13647  0108C0  6EE6               	movwf	postinc1,c
 13648  0108C2  0E41               	movlw	65
 13649  0108C4  6EE6               	movwf	postinc1,c
 13650                           
 13651                           ;stkvar	_u @ sp[(-60)+12]
 13652  0108C6  0ED0               	movlw	-48
 13653  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 13654  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 13655  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 13656  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 13657  0108E0  ECB1  F09E         	call	___fldiv	;wreg free
 13658                           
 13659                           ;stkvar	_u @ sp[(-56)+12]
 13660  0108E4  0ED4               	movlw	-44
 13661  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 13662  0108EC  0ED5               	movlw	-43
 13663  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13664  0108F4  0ED6               	movlw	-42
 13665  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13666  0108FC  0ED7               	movlw	-41
 13667  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 13668                           
 13669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 13670                           ;stkvar	_i @ sp[(-56)+36]
 13671  010904  0EEC               	movlw	-20
 13672  010906  50E3               	movf	plusw1,w,c
 13673  010908  0F01               	addlw	1
 13674  01090A  6E01               	movwf	btemp^0,c
 13675  01090C  0EEC               	movlw	-20
 13676  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 13677  010914  6A01               	clrf	btemp^0,c
 13678  010916  0EED               	movlw	-19
 13679  010918  50E3               	movf	plusw1,w,c
 13680  01091A  2001               	addwfc	btemp^0,w,c
 13681  01091C  6E01               	movwf	btemp^0,c
 13682  01091E  0EED               	movlw	-19
 13683  010920  0060  F007  FFE3   	movff	btemp,plusw1
 13684  010926                     l10778:
 13685                           
 13686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 13687                           ;stkvar	_m @ sp[(-56)+48]
 13688                           ;stkvar	_i @ sp[(-56)+36]
 13689  010926  50E1               	movf	fsr1l,w,c
 13690  010928  0FEC               	addlw	-20
 13691  01092A  6ED9               	movwf	fsr2l,c
 13692  01092C  50E2               	movf	fsr1h,w,c
 13693  01092E  6EDA               	movwf	fsr2h,c
 13694  010930  0EFF               	movlw	255
 13695  010932  22DA               	addwfc	fsr2h,f,c
 13696  010934  0EF8               	movlw	-8
 13697  010936  50E3               	movf	plusw1,w,c
 13698  010938  5CDE               	subwf	postinc2,w,c
 13699  01093A  50DE               	movf	postinc2,w,c
 13700  01093C  0A80               	xorlw	128
 13701  01093E  6E01               	movwf	btemp^0,c
 13702  010940  0EF9               	movlw	-7
 13703  010942  50E3               	movf	plusw1,w,c
 13704  010944  0A80               	xorlw	128
 13705  010946  5801               	subwfb	btemp^0,w,c
 13706  010948  A0D8               	btfss	status,0,c
 13707  01094A  D717               	goto	l10768
 13708                           
 13709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 13710  01094C  0E00               	movlw	0
 13711  01094E  6EE6               	movwf	postinc1,c
 13712  010950  0E00               	movlw	0
 13713  010952  6EE6               	movwf	postinc1,c
 13714  010954  0EA0               	movlw	160
 13715  010956  6EE6               	movwf	postinc1,c
 13716  010958  0E40               	movlw	64
 13717  01095A  6EE6               	movwf	postinc1,c
 13718                           
 13719                           ;stkvar	_u @ sp[(-60)+12]
 13720  01095C  0ED0               	movlw	-48
 13721  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 13722  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 13723  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 13724  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 13725  010976  EC1C  F093         	call	___flmul	;wreg free
 13726                           
 13727                           ;stkvar	_l @ sp[(-56)+20]
 13728  01097A  0EDC               	movlw	-36
 13729  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 13730  010982  0EDD               	movlw	-35
 13731  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13732  01098A  0EDE               	movlw	-34
 13733  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13734  010992  0EDF               	movlw	-33
 13735  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 13736                           
 13737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 13738                           ;stkvar	_l @ sp[(-56)+20]
 13739  01099A  0EDC               	movlw	-36
 13740  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 13741  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 13742  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 13743  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 13744                           
 13745                           ;stkvar	_h @ sp[(-60)+24]
 13746  0109B4  0EDC               	movlw	-36
 13747  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 13748  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 13749  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 13750  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 13751  0109CE  EC7E  F0B8         	call	___flge	;wreg free
 13752  0109D2  A001               	btfss	btemp& (0+255),0,c
 13753  0109D4  D021               	goto	u9980
 13754                           
 13755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 13756                           ;stkvar	_l @ sp[(-56)+20]
 13757                           
 13758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 13759                           
 13760                           ;stkvar	_l @ sp[(-56)+20]
 13761                           
 13762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 13763  0109D6  0EDC               	movlw	-36
 13764  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 13765  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 13766  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 13767  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 13768                           
 13769                           ;stkvar	_h @ sp[(-60)+24]
 13770  0109F0  0EDC               	movlw	-36
 13771  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 13772  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 13773  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 13774  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 13775  010A0A  ECBC  F0C0         	call	___fleq	;wreg free
 13776  010A0E  A001               	btfss	btemp& (0+255),0,c
 13777  010A10  D01B               	goto	l10792
 13778                           
 13779                           ;stkvar	_d @ sp[(-56)+44]
 13780  010A12  0EF4               	movlw	-12
 13781  010A14  B0E3               	btfsc	plusw1,0,c
 13782  010A16  D018               	goto	l10792
 13783  010A18                     u9980:
 13784                           
 13785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 13786  010A18  0E00               	movlw	0
 13787  010A1A  6E09               	movwf	(btemp+8)^0,c
 13788  010A1C  0E00               	movlw	0
 13789  010A1E  6E0A               	movwf	(btemp+9)^0,c
 13790  010A20  0E00               	movlw	0
 13791  010A22  6E0B               	movwf	(btemp+10)^0,c
 13792  010A24  0E00               	movlw	0
 13793  010A26  6E0C               	movwf	(btemp+11)^0,c
 13794                           
 13795                           ;stkvar	_l @ sp[(-56)+20]
 13796  010A28  0EDC               	movlw	-36
 13797  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 13798  010A30  0EDD               	movlw	-35
 13799  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13800  010A38  0EDE               	movlw	-34
 13801  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13802  010A40  0EDF               	movlw	-33
 13803  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 13804  010A48                     l10792:
 13805                           
 13806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 13807                           ;stkvar	_l @ sp[(-56)+20]
 13808  010A48  0EDC               	movlw	-36
 13809  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 13810  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 13811  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 13812  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 13813                           
 13814                           ;stkvar	_g @ sp[(-60)+16]
 13815  010A62  0ED4               	movlw	-44
 13816  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 13817  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 13818  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 13819  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 13820  010A7C  EC31  F097         	call	___fladd	;wreg free
 13821                           
 13822                           ;stkvar	_h @ sp[(-56)+24]
 13823  010A80  0EE0               	movlw	-32
 13824  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 13825  010A88  0EE1               	movlw	-31
 13826  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13827  010A90  0EE2               	movlw	-30
 13828  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13829  010A98  0EE3               	movlw	-29
 13830  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 13831                           
 13832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 13833                           ;stkvar	_ou @ sp[(-56)+28]
 13834  010AA0  0EE4               	movlw	-28
 13835  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 13836  010AA8  0EE5               	movlw	-27
 13837  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 13838  010AB0  0EE6               	movlw	-26
 13839  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 13840  010AB8  0EE7               	movlw	-25
 13841  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 13842                           
 13843                           ;stkvar	_u @ sp[(-56)+12]
 13844  010AC0  0ED4               	movlw	-44
 13845  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 13846  010AC8  0ED5               	movlw	-43
 13847  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13848  010AD0  0ED6               	movlw	-42
 13849  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13850  010AD8  0ED7               	movlw	-41
 13851  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 13852                           
 13853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 13854                           ;stkvar	_nmode @ sp[(-56)+55]
 13855  010AE0  0EFF               	movlw	-1
 13856  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 13857  010AE8  0E65               	movlw	101
 13858  010AEA  1801               	xorwf	btemp^0,w,c
 13859  010AEC  B4D8               	btfsc	status,2,c
 13860  010AEE  D011               	goto	l10800
 13861                           
 13862                           ;stkvar	_e @ sp[(-56)+34]
 13863                           ;stkvar	_ne @ sp[(-56)+46]
 13864  010AF0  0EEA               	movlw	-22
 13865  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 13866  010AF8  0EF6               	movlw	-10
 13867  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 13868  010B00  0EEB               	movlw	-21
 13869  010B02  006F FF8C  F001    	movff	plusw1,btemp
 13870  010B08  0EF7               	movlw	-9
 13871  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 13872  010B10  D004               	goto	l2101
 13873  010B12                     l10800:
 13874                           
 13875                           ;stkvar	_ne @ sp[(-56)+46]
 13876  010B12  0EF6               	movlw	-10
 13877  010B14  6AE3               	clrf	plusw1,c
 13878  010B16  0EF7               	movlw	-9
 13879  010B18  6AE3               	clrf	plusw1,c
 13880  010B1A                     l2101:
 13881                           
 13882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 13883                           ;stkvar	_pp @ sp[(-56)+50]
 13884  010B1A  0EFA               	movlw	-6
 13885  010B1C  6AE3               	clrf	plusw1,c
 13886  010B1E  0EFB               	movlw	-5
 13887  010B20  6AE3               	clrf	plusw1,c
 13888                           
 13889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 13890                           ;stkvar	_t @ sp[(-56)+52]
 13891  010B22  0EFC               	movlw	-4
 13892  010B24  6AE3               	clrf	plusw1,c
 13893  010B26  0EFD               	movlw	-3
 13894  010B28  6AE3               	clrf	plusw1,c
 13895                           
 13896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 13897                           ;stkvar	_i @ sp[(-56)+36]
 13898  010B2A  0EEC               	movlw	-20
 13899  010B2C  6AE3               	clrf	plusw1,c
 13900  010B2E  0EED               	movlw	-19
 13901  010B30  6AE3               	clrf	plusw1,c
 13902                           
 13903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 13904  010B32  D1B7               	goto	l10852
 13905  010B34                     l10802:
 13906                           
 13907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 13908                           ;stkvar	_u @ sp[(-56)+12]
 13909  010B34  0ED4               	movlw	-44
 13910  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 13911  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 13912  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 13913  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 13914                           
 13915                           ;stkvar	_h @ sp[(-60)+24]
 13916  010B4E  0EDC               	movlw	-36
 13917  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 13918  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 13919  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 13920  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 13921  010B68  ECB1  F09E         	call	___fldiv	;wreg free
 13922  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 13923  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13924  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13925  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 13926  010B84  ECE1  F0A7         	call	_floorf	;wreg free
 13927                           
 13928                           ;stkvar	_l @ sp[(-56)+20]
 13929  010B88  0EDC               	movlw	-36
 13930  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 13931  010B90  0EDD               	movlw	-35
 13932  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13933  010B98  0EDE               	movlw	-34
 13934  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13935  010BA0  0EDF               	movlw	-33
 13936  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 13937                           
 13938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 13939                           ;stkvar	_l @ sp[(-56)+20]
 13940  010BA8  0EDC               	movlw	-36
 13941  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 13942  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 13943  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 13944  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 13945  010BC2  EC0D  F0B7         	call	___fltol	;wreg free
 13946  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 13947  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 13948                           
 13949                           ;stkvar	_d @ sp[(-56)+44]
 13950  010BD2  0EF4               	movlw	-12
 13951  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13952  010BDA  0EF5               	movlw	-11
 13953  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13954                           
 13955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 13956  010BE2  B825               	btfsc	_flags^0,4,c
 13957  010BE4  D026               	goto	l10816
 13958                           
 13959                           ;stkvar	_d @ sp[(-56)+44]
 13960  010BE6  0EF4               	movlw	-12
 13961  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 13962  010BEE  0EF5               	movlw	-11
 13963  010BF0  50E3               	movf	plusw1,w,c
 13964  010BF2  1001               	iorwf	btemp^0,w,c
 13965  010BF4  A4D8               	btfss	status,2,c
 13966  010BF6  D01D               	goto	l10816
 13967                           
 13968                           ;stkvar	_mode @ sp[(-56)+54]
 13969  010BF8  0EFE               	movlw	-2
 13970  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 13971  010C00  0E67               	movlw	103
 13972  010C02  1801               	xorwf	btemp^0,w,c
 13973  010C04  A4D8               	btfss	status,2,c
 13974  010C06  D015               	goto	l10816
 13975                           
 13976                           ;stkvar	_ne @ sp[(-56)+46]
 13977  010C08  0EF7               	movlw	-9
 13978  010C0A  AEE3               	btfss	plusw1,7,c
 13979  010C0C  D012               	goto	l10816
 13980                           
 13981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 13982                           ;stkvar	_t @ sp[(-56)+52]
 13983  010C0E  0EFC               	movlw	-4
 13984  010C10  50E3               	movf	plusw1,w,c
 13985  010C12  0F01               	addlw	1
 13986  010C14  6E01               	movwf	btemp^0,c
 13987  010C16  0EFC               	movlw	-4
 13988  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 13989  010C1E  6A01               	clrf	btemp^0,c
 13990  010C20  0EFD               	movlw	-3
 13991  010C22  50E3               	movf	plusw1,w,c
 13992  010C24  2001               	addwfc	btemp^0,w,c
 13993  010C26  6E01               	movwf	btemp^0,c
 13994  010C28  0EFD               	movlw	-3
 13995  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 13996                           
 13997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 13998  010C30  D0AF               	goto	l10844
 13999  010C32                     l10816:
 14000                           
 14001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 14002                           ;stkvar	_pp @ sp[(-56)+50]
 14003  010C32  0EFA               	movlw	-6
 14004  010C34  006F FF8C  F001    	movff	plusw1,btemp
 14005  010C3A  0EFB               	movlw	-5
 14006  010C3C  50E3               	movf	plusw1,w,c
 14007  010C3E  1001               	iorwf	btemp^0,w,c
 14008  010C40  A4D8               	btfss	status,2,c
 14009  010C42  D070               	goto	l10836
 14010                           
 14011                           ;stkvar	_ne @ sp[(-56)+46]
 14012  010C44  0EF7               	movlw	-9
 14013  010C46  AEE3               	btfss	plusw1,7,c
 14014  010C48  D06D               	goto	l10836
 14015                           
 14016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 14017                           ;stkvar	_n @ sp[(-56)+32]
 14018  010C4A  0EE8               	movlw	-24
 14019  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14020  010C52  0EE9               	movlw	-23
 14021  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 14022  010C5A  0E94               	movlw	low _dbuf
 14023  010C5C  240B               	addwf	(btemp+10)^0,w,c
 14024  010C5E  6ED9               	movwf	fsr2l,c
 14025  010C60  0E03               	movlw	high _dbuf
 14026  010C62  200C               	addwfc	(btemp+11)^0,w,c
 14027  010C64  6EDA               	movwf	fsr2h,c
 14028  010C66  0E2E               	movlw	46
 14029  010C68  6EDF               	movwf	indf2,c
 14030                           
 14031                           ;stkvar	_n @ sp[(-56)+32]
 14032  010C6A  0EE8               	movlw	-24
 14033  010C6C  50E3               	movf	plusw1,w,c
 14034  010C6E  0F01               	addlw	1
 14035  010C70  6E01               	movwf	btemp^0,c
 14036  010C72  0EE8               	movlw	-24
 14037  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 14038  010C7A  6A01               	clrf	btemp^0,c
 14039  010C7C  0EE9               	movlw	-23
 14040  010C7E  50E3               	movf	plusw1,w,c
 14041  010C80  2001               	addwfc	btemp^0,w,c
 14042  010C82  6E01               	movwf	btemp^0,c
 14043  010C84  0EE9               	movlw	-23
 14044  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 14045                           
 14046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 14047                           ;stkvar	_w @ sp[(-56)+38]
 14048  010C8C  50E1               	movf	fsr1l,w,c
 14049  010C8E  0FEE               	addlw	-18
 14050  010C90  6ED9               	movwf	fsr2l,c
 14051  010C92  50E2               	movf	fsr1h,w,c
 14052  010C94  6EDA               	movwf	fsr2h,c
 14053  010C96  0EFF               	movlw	255
 14054  010C98  22DA               	addwfc	fsr2h,f,c
 14055  010C9A  06DE               	decf	postinc2,f,c
 14056  010C9C  0E00               	movlw	0
 14057  010C9E  5ADD               	subwfb	postdec2,f,c
 14058                           
 14059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 14060  010CA0  0E01               	movlw	1
 14061  010CA2  6E0B               	movwf	(btemp+10)^0,c
 14062  010CA4  0E00               	movlw	0
 14063  010CA6  6E0C               	movwf	(btemp+11)^0,c
 14064                           
 14065                           ;stkvar	_pp @ sp[(-56)+50]
 14066  010CA8  0EFA               	movlw	-6
 14067  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14068  010CB0  0EFB               	movlw	-5
 14069  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 14070  010CB8  D035               	goto	l10836
 14071  010CBA                     l10828:
 14072                           
 14073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 14074                           ;stkvar	_n @ sp[(-56)+32]
 14075  010CBA  0EE8               	movlw	-24
 14076  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 14077  010CC2  0EE9               	movlw	-23
 14078  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 14079  010CCA  0E94               	movlw	low _dbuf
 14080  010CCC  240B               	addwf	(btemp+10)^0,w,c
 14081  010CCE  6ED9               	movwf	fsr2l,c
 14082  010CD0  0E03               	movlw	high _dbuf
 14083  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 14084  010CD4  6EDA               	movwf	fsr2h,c
 14085  010CD6  0E30               	movlw	48
 14086  010CD8  6EDF               	movwf	indf2,c
 14087                           
 14088                           ;stkvar	_n @ sp[(-56)+32]
 14089  010CDA  0EE8               	movlw	-24
 14090  010CDC  50E3               	movf	plusw1,w,c
 14091  010CDE  0F01               	addlw	1
 14092  010CE0  6E01               	movwf	btemp^0,c
 14093  010CE2  0EE8               	movlw	-24
 14094  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 14095  010CEA  6A01               	clrf	btemp^0,c
 14096  010CEC  0EE9               	movlw	-23
 14097  010CEE  50E3               	movf	plusw1,w,c
 14098  010CF0  2001               	addwfc	btemp^0,w,c
 14099  010CF2  6E01               	movwf	btemp^0,c
 14100  010CF4  0EE9               	movlw	-23
 14101  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 14102                           
 14103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 14104                           ;stkvar	_w @ sp[(-56)+38]
 14105  010CFC  50E1               	movf	fsr1l,w,c
 14106  010CFE  0FEE               	addlw	-18
 14107  010D00  6ED9               	movwf	fsr2l,c
 14108  010D02  50E2               	movf	fsr1h,w,c
 14109  010D04  6EDA               	movwf	fsr2h,c
 14110  010D06  0EFF               	movlw	255
 14111  010D08  22DA               	addwfc	fsr2h,f,c
 14112  010D0A  06DE               	decf	postinc2,f,c
 14113  010D0C  0E00               	movlw	0
 14114  010D0E  5ADD               	subwfb	postdec2,f,c
 14115                           
 14116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 14117                           ;stkvar	_t @ sp[(-56)+52]
 14118  010D10  50E1               	movf	fsr1l,w,c
 14119  010D12  0FFC               	addlw	-4
 14120  010D14  6ED9               	movwf	fsr2l,c
 14121  010D16  50E2               	movf	fsr1h,w,c
 14122  010D18  6EDA               	movwf	fsr2h,c
 14123  010D1A  0EFF               	movlw	255
 14124  010D1C  22DA               	addwfc	fsr2h,f,c
 14125  010D1E  06DE               	decf	postinc2,f,c
 14126  010D20  0E00               	movlw	0
 14127  010D22  5ADD               	subwfb	postdec2,f,c
 14128  010D24                     l10836:
 14129                           
 14130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 14131                           ;stkvar	_t @ sp[(-56)+52]
 14132  010D24  0EFC               	movlw	-4
 14133  010D26  006F FF8C  F001    	movff	plusw1,btemp
 14134  010D2C  0EFD               	movlw	-3
 14135  010D2E  50E3               	movf	plusw1,w,c
 14136  010D30  1001               	iorwf	btemp^0,w,c
 14137  010D32  A4D8               	btfss	status,2,c
 14138  010D34  D7C2               	goto	l10828
 14139                           
 14140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 14141                           ;stkvar	_n @ sp[(-56)+32]
 14142  010D36  0EE8               	movlw	-24
 14143  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 14144  010D3E  0EE9               	movlw	-23
 14145  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 14146  010D46  0E94               	movlw	low _dbuf
 14147  010D48  240B               	addwf	(btemp+10)^0,w,c
 14148  010D4A  6ED9               	movwf	fsr2l,c
 14149  010D4C  0E03               	movlw	high _dbuf
 14150  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 14151  010D50  6EDA               	movwf	fsr2h,c
 14152                           
 14153                           ;stkvar	_d @ sp[(-56)+44]
 14154  010D52  0EF4               	movlw	-12
 14155  010D54  50E3               	movf	plusw1,w,c
 14156  010D56  0F30               	addlw	48
 14157  010D58  6EDF               	movwf	indf2,c
 14158                           
 14159                           ;stkvar	_n @ sp[(-56)+32]
 14160  010D5A  0EE8               	movlw	-24
 14161  010D5C  50E3               	movf	plusw1,w,c
 14162  010D5E  0F01               	addlw	1
 14163  010D60  6E01               	movwf	btemp^0,c
 14164  010D62  0EE8               	movlw	-24
 14165  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 14166  010D6A  6A01               	clrf	btemp^0,c
 14167  010D6C  0EE9               	movlw	-23
 14168  010D6E  50E3               	movf	plusw1,w,c
 14169  010D70  2001               	addwfc	btemp^0,w,c
 14170  010D72  6E01               	movwf	btemp^0,c
 14171  010D74  0EE9               	movlw	-23
 14172  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 14173                           
 14174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 14175                           ;stkvar	_w @ sp[(-56)+38]
 14176  010D7C  50E1               	movf	fsr1l,w,c
 14177  010D7E  0FEE               	addlw	-18
 14178  010D80  6ED9               	movwf	fsr2l,c
 14179  010D82  50E2               	movf	fsr1h,w,c
 14180  010D84  6EDA               	movwf	fsr2h,c
 14181  010D86  0EFF               	movlw	255
 14182  010D88  22DA               	addwfc	fsr2h,f,c
 14183  010D8A  06DE               	decf	postinc2,f,c
 14184  010D8C  0E00               	movlw	0
 14185  010D8E  5ADD               	subwfb	postdec2,f,c
 14186  010D90                     l10844:
 14187                           
 14188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 14189                           ;stkvar	_u @ sp[(-56)+12]
 14190  010D90  0ED4               	movlw	-44
 14191  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 14192  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 14193  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 14194  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 14195                           
 14196                           ;stkvar	_l @ sp[(-60)+20]
 14197  010DAA  0ED8               	movlw	-40
 14198  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 14199  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 14200  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 14201  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 14202  010DC4  EC1C  F093         	call	___flmul	;wreg free
 14203  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 14204  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14205  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 14206  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 14207                           
 14208                           ;stkvar	_h @ sp[(-60)+24]
 14209  010DE0  0EDC               	movlw	-36
 14210  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 14211  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 14212  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 14213  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 14214  010DFA  ECCB  F0C8         	call	___flsub	;wreg free
 14215                           
 14216                           ;stkvar	_h @ sp[(-56)+24]
 14217  010DFE  0EE0               	movlw	-32
 14218  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 14219  010E06  0EE1               	movlw	-31
 14220  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14221  010E0E  0EE2               	movlw	-30
 14222  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14223  010E16  0EE3               	movlw	-29
 14224  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 14225                           
 14226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 14227  010E1E  0E00               	movlw	0
 14228  010E20  6EE6               	movwf	postinc1,c
 14229  010E22  0E00               	movlw	0
 14230  010E24  6EE6               	movwf	postinc1,c
 14231  010E26  0E20               	movlw	32
 14232  010E28  6EE6               	movwf	postinc1,c
 14233  010E2A  0E41               	movlw	65
 14234  010E2C  6EE6               	movwf	postinc1,c
 14235                           
 14236                           ;stkvar	_u @ sp[(-60)+12]
 14237  010E2E  0ED0               	movlw	-48
 14238  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 14239  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 14240  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 14241  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 14242  010E48  ECB1  F09E         	call	___fldiv	;wreg free
 14243                           
 14244                           ;stkvar	_u @ sp[(-56)+12]
 14245  010E4C  0ED4               	movlw	-44
 14246  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 14247  010E54  0ED5               	movlw	-43
 14248  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14249  010E5C  0ED6               	movlw	-42
 14250  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14251  010E64  0ED7               	movlw	-41
 14252  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 14253                           
 14254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 14255                           ;stkvar	_ne @ sp[(-56)+46]
 14256  010E6C  50E1               	movf	fsr1l,w,c
 14257  010E6E  0FF6               	addlw	-10
 14258  010E70  6ED9               	movwf	fsr2l,c
 14259  010E72  50E2               	movf	fsr1h,w,c
 14260  010E74  6EDA               	movwf	fsr2h,c
 14261  010E76  0EFF               	movlw	255
 14262  010E78  22DA               	addwfc	fsr2h,f,c
 14263  010E7A  06DE               	decf	postinc2,f,c
 14264  010E7C  0E00               	movlw	0
 14265  010E7E  5ADD               	subwfb	postdec2,f,c
 14266                           
 14267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 14268                           ;stkvar	_i @ sp[(-56)+36]
 14269  010E80  0EEC               	movlw	-20
 14270  010E82  50E3               	movf	plusw1,w,c
 14271  010E84  0F01               	addlw	1
 14272  010E86  6E01               	movwf	btemp^0,c
 14273  010E88  0EEC               	movlw	-20
 14274  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 14275  010E90  6A01               	clrf	btemp^0,c
 14276  010E92  0EED               	movlw	-19
 14277  010E94  50E3               	movf	plusw1,w,c
 14278  010E96  2001               	addwfc	btemp^0,w,c
 14279  010E98  6E01               	movwf	btemp^0,c
 14280  010E9A  0EED               	movlw	-19
 14281  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 14282  010EA2                     l10852:
 14283                           
 14284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 14285                           ;stkvar	_m @ sp[(-56)+48]
 14286                           ;stkvar	_i @ sp[(-56)+36]
 14287  010EA2  50E1               	movf	fsr1l,w,c
 14288  010EA4  0FEC               	addlw	-20
 14289  010EA6  6ED9               	movwf	fsr2l,c
 14290  010EA8  50E2               	movf	fsr1h,w,c
 14291  010EAA  6EDA               	movwf	fsr2h,c
 14292  010EAC  0EFF               	movlw	255
 14293  010EAE  22DA               	addwfc	fsr2h,f,c
 14294  010EB0  0EF8               	movlw	-8
 14295  010EB2  50E3               	movf	plusw1,w,c
 14296  010EB4  5CDE               	subwf	postinc2,w,c
 14297  010EB6  50DE               	movf	postinc2,w,c
 14298  010EB8  0A80               	xorlw	128
 14299  010EBA  6E01               	movwf	btemp^0,c
 14300  010EBC  0EF9               	movlw	-7
 14301  010EBE  50E3               	movf	plusw1,w,c
 14302  010EC0  0A80               	xorlw	128
 14303  010EC2  5801               	subwfb	btemp^0,w,c
 14304  010EC4  B0D8               	btfsc	status,0,c
 14305  010EC6  D00E               	goto	u10080
 14306                           
 14307                           ;stkvar	_n @ sp[(-56)+32]
 14308  010EC8  0EE9               	movlw	-23
 14309  010ECA  BEE3               	btfsc	plusw1,7,c
 14310  010ECC  D633               	goto	l10802
 14311  010ECE  0EE9               	movlw	-23
 14312  010ED0  50E3               	movf	plusw1,w,c
 14313  010ED2  E108               	bnz	u10080
 14314  010ED4  0EE8               	movlw	-24
 14315  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 14316  010EDC  0E4B               	movlw	75
 14317  010EDE  5E01               	subwf	btemp^0,f,c
 14318  010EE0  A0D8               	btfss	status,0,c
 14319  010EE2  D628               	goto	l10802
 14320  010EE4                     u10080:
 14321                           
 14322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 14323                           ;stkvar	_pp @ sp[(-56)+50]
 14324  010EE4  0EFA               	movlw	-6
 14325  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 14326  010EEC  0EFB               	movlw	-5
 14327  010EEE  50E3               	movf	plusw1,w,c
 14328  010EF0  1001               	iorwf	btemp^0,w,c
 14329  010EF2  B4D8               	btfsc	status,2,c
 14330  010EF4  A825               	btfss	_flags^0,4,c
 14331  010EF6  D021               	goto	l10864
 14332                           
 14333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 14334                           ;stkvar	_n @ sp[(-56)+32]
 14335  010EF8  0EE8               	movlw	-24
 14336  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 14337  010F00  0EE9               	movlw	-23
 14338  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 14339  010F08  0E94               	movlw	low _dbuf
 14340  010F0A  240B               	addwf	(btemp+10)^0,w,c
 14341  010F0C  6ED9               	movwf	fsr2l,c
 14342  010F0E  0E03               	movlw	high _dbuf
 14343  010F10  200C               	addwfc	(btemp+11)^0,w,c
 14344  010F12  6EDA               	movwf	fsr2h,c
 14345  010F14  0E2E               	movlw	46
 14346  010F16  6EDF               	movwf	indf2,c
 14347                           
 14348                           ;stkvar	_n @ sp[(-56)+32]
 14349  010F18  0EE8               	movlw	-24
 14350  010F1A  50E3               	movf	plusw1,w,c
 14351  010F1C  0F01               	addlw	1
 14352  010F1E  6E01               	movwf	btemp^0,c
 14353  010F20  0EE8               	movlw	-24
 14354  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 14355  010F28  6A01               	clrf	btemp^0,c
 14356  010F2A  0EE9               	movlw	-23
 14357  010F2C  50E3               	movf	plusw1,w,c
 14358  010F2E  2001               	addwfc	btemp^0,w,c
 14359  010F30  6E01               	movwf	btemp^0,c
 14360  010F32  0EE9               	movlw	-23
 14361  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 14362  010F3A                     l10864:
 14363                           
 14364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 14365                           ;stkvar	_n @ sp[(-56)+32]
 14366  010F3A  0EE8               	movlw	-24
 14367  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14368  010F42  0EE9               	movlw	-23
 14369  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 14370  010F4A  0E94               	movlw	low _dbuf
 14371  010F4C  240B               	addwf	(btemp+10)^0,w,c
 14372  010F4E  6ED9               	movwf	fsr2l,c
 14373  010F50  0E03               	movlw	high _dbuf
 14374  010F52  200C               	addwfc	(btemp+11)^0,w,c
 14375  010F54  6EDA               	movwf	fsr2h,c
 14376  010F56  0E00               	movlw	0
 14377  010F58  6EDF               	movwf	indf2,c
 14378                           
 14379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 14380                           ;stkvar	_nmode @ sp[(-56)+55]
 14381  010F5A  0EFF               	movlw	-1
 14382  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 14383  010F62  0E65               	movlw	101
 14384  010F64  1801               	xorwf	btemp^0,w,c
 14385  010F66  A4D8               	btfss	status,2,c
 14386  010F68  EF16  F081         	goto	l10668
 14387                           
 14388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 14389  010F6C  0E4F               	movlw	79
 14390  010F6E  6E0B               	movwf	(btemp+10)^0,c
 14391  010F70  0E00               	movlw	0
 14392  010F72  6E0C               	movwf	(btemp+11)^0,c
 14393                           
 14394                           ;stkvar	_i @ sp[(-56)+36]
 14395  010F74  0EEC               	movlw	-20
 14396  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14397  010F7C  0EED               	movlw	-19
 14398  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 14399                           
 14400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 14401                           ;stkvar	_i @ sp[(-56)+36]
 14402  010F84  0EEC               	movlw	-20
 14403  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 14404  010F8C  0EED               	movlw	-19
 14405  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14406  010F94  0E94               	movlw	low _dbuf
 14407  010F96  240B               	addwf	(btemp+10)^0,w,c
 14408  010F98  6ED9               	movwf	fsr2l,c
 14409  010F9A  0E03               	movlw	high _dbuf
 14410  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 14411  010F9E  6EDA               	movwf	fsr2h,c
 14412  010FA0  0E00               	movlw	0
 14413  010FA2  6EDF               	movwf	indf2,c
 14414                           
 14415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 14416                           ;stkvar	_sign @ sp[(-56)+42]
 14417  010FA4  0EF2               	movlw	-14
 14418  010FA6  6AE3               	clrf	plusw1,c
 14419  010FA8  0EF3               	movlw	-13
 14420  010FAA  6AE3               	clrf	plusw1,c
 14421                           
 14422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 14423                           ;stkvar	_e @ sp[(-56)+34]
 14424  010FAC  0EEB               	movlw	-21
 14425  010FAE  AEE3               	btfss	plusw1,7,c
 14426  010FB0  D012               	goto	l10878
 14427                           
 14428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 14429  010FB2  0E01               	movlw	1
 14430  010FB4  6E0B               	movwf	(btemp+10)^0,c
 14431  010FB6  0E00               	movlw	0
 14432  010FB8  6E0C               	movwf	(btemp+11)^0,c
 14433                           
 14434                           ;stkvar	_sign @ sp[(-56)+42]
 14435  010FBA  0EF2               	movlw	-14
 14436  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14437  010FC2  0EF3               	movlw	-13
 14438  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14439                           
 14440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 14441                           ;stkvar	_e @ sp[(-56)+34]
 14442                           ;stkvar	_e @ sp[(-56)+34]
 14443  010FCA  0EEA               	movlw	-22
 14444  010FCC  6CE3               	negf	plusw1,c
 14445  010FCE  0EEB               	movlw	-21
 14446  010FD0  1EE3               	comf	plusw1,f,c
 14447  010FD2  B0D8               	btfsc	status,0,c
 14448  010FD4  2AE3               	incf	plusw1,f,c
 14449  010FD6                     l10878:
 14450                           
 14451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 14452  010FD6  0E02               	movlw	2
 14453  010FD8  6E0B               	movwf	(btemp+10)^0,c
 14454  010FDA  0E00               	movlw	0
 14455  010FDC  6E0C               	movwf	(btemp+11)^0,c
 14456                           
 14457                           ;stkvar	_p @ sp[(-56)+40]
 14458  010FDE  0EF0               	movlw	-16
 14459  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14460  010FE6  0EF1               	movlw	-15
 14461  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 14462                           
 14463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 14464  010FEE  D051               	goto	l10890
 14465  010FF0                     l10880:
 14466                           
 14467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 14468                           ;stkvar	_i @ sp[(-56)+36]
 14469  010FF0  50E1               	movf	fsr1l,w,c
 14470  010FF2  0FEC               	addlw	-20
 14471  010FF4  6ED9               	movwf	fsr2l,c
 14472  010FF6  50E2               	movf	fsr1h,w,c
 14473  010FF8  6EDA               	movwf	fsr2h,c
 14474  010FFA  0EFF               	movlw	255
 14475  010FFC  22DA               	addwfc	fsr2h,f,c
 14476  010FFE  06DE               	decf	postinc2,f,c
 14477  011000  0E00               	movlw	0
 14478  011002  5ADD               	subwfb	postdec2,f,c
 14479                           
 14480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 14481                           ;stkvar	_i @ sp[(-56)+36]
 14482  011004  0EEC               	movlw	-20
 14483  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 14484  01100C  0EED               	movlw	-19
 14485  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14486  011014  0E94               	movlw	low _dbuf
 14487  011016  240B               	addwf	(btemp+10)^0,w,c
 14488  011018  6ED9               	movwf	fsr2l,c
 14489  01101A  0E03               	movlw	high _dbuf
 14490  01101C  200C               	addwfc	(btemp+11)^0,w,c
 14491  01101E  6EDA               	movwf	fsr2h,c
 14492  011020  0E0A               	movlw	10
 14493  011022  6EE6               	movwf	postinc1,c
 14494  011024  0E00               	movlw	0
 14495  011026  6EE6               	movwf	postinc1,c
 14496                           
 14497                           ;stkvar	_e @ sp[(-58)+34]
 14498  011028  0EE8               	movlw	-24
 14499  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 14500  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 14501  011036  EC45  F0BC         	call	___awmod	;wreg free
 14502  01103A  5001               	movf	btemp^0,w,c
 14503  01103C  0F30               	addlw	48
 14504  01103E  6EDF               	movwf	indf2,c
 14505                           
 14506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 14507  011040  0E0A               	movlw	10
 14508  011042  6EE6               	movwf	postinc1,c
 14509  011044  0E00               	movlw	0
 14510  011046  6EE6               	movwf	postinc1,c
 14511                           
 14512                           ;stkvar	_e @ sp[(-58)+34]
 14513  011048  0EE8               	movlw	-24
 14514  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 14515  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 14516  011056  ECE1  F0B9         	call	___awdiv	;wreg free
 14517                           
 14518                           ;stkvar	_e @ sp[(-56)+34]
 14519  01105A  0EEA               	movlw	-22
 14520  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 14521  011062  0EEB               	movlw	-21
 14522  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14523                           
 14524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 14525                           ;stkvar	_p @ sp[(-56)+40]
 14526  01106A  50E1               	movf	fsr1l,w,c
 14527  01106C  0FF0               	addlw	-16
 14528  01106E  6ED9               	movwf	fsr2l,c
 14529  011070  50E2               	movf	fsr1h,w,c
 14530  011072  6EDA               	movwf	fsr2h,c
 14531  011074  0EFF               	movlw	255
 14532  011076  22DA               	addwfc	fsr2h,f,c
 14533  011078  06DE               	decf	postinc2,f,c
 14534  01107A  0E00               	movlw	0
 14535  01107C  5ADD               	subwfb	postdec2,f,c
 14536                           
 14537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 14538                           ;stkvar	_w @ sp[(-56)+38]
 14539  01107E  50E1               	movf	fsr1l,w,c
 14540  011080  0FEE               	addlw	-18
 14541  011082  6ED9               	movwf	fsr2l,c
 14542  011084  50E2               	movf	fsr1h,w,c
 14543  011086  6EDA               	movwf	fsr2h,c
 14544  011088  0EFF               	movlw	255
 14545  01108A  22DA               	addwfc	fsr2h,f,c
 14546  01108C  06DE               	decf	postinc2,f,c
 14547  01108E  0E00               	movlw	0
 14548  011090  5ADD               	subwfb	postdec2,f,c
 14549  011092                     l10890:
 14550                           
 14551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 14552                           ;stkvar	_e @ sp[(-56)+34]
 14553  011092  0EEA               	movlw	-22
 14554  011094  006F FF8C  F001    	movff	plusw1,btemp
 14555  01109A  0EEB               	movlw	-21
 14556  01109C  50E3               	movf	plusw1,w,c
 14557  01109E  1001               	iorwf	btemp^0,w,c
 14558  0110A0  A4D8               	btfss	status,2,c
 14559  0110A2  D7A6               	goto	l10880
 14560                           
 14561                           ;stkvar	_p @ sp[(-56)+40]
 14562  0110A4  0EF1               	movlw	-15
 14563  0110A6  BEE3               	btfsc	plusw1,7,c
 14564  0110A8  D007               	goto	u10140
 14565  0110AA  0EF1               	movlw	-15
 14566  0110AC  50E3               	movf	plusw1,w,c
 14567  0110AE  E1A0               	bnz	l10880
 14568  0110B0  0EF0               	movlw	-16
 14569  0110B2  04E3               	decf	plusw1,w,c
 14570  0110B4  B0D8               	btfsc	status,0,c
 14571  0110B6  D79C               	goto	l10880
 14572  0110B8                     u10140:
 14573                           
 14574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 14575                           ;stkvar	_i @ sp[(-56)+36]
 14576  0110B8  50E1               	movf	fsr1l,w,c
 14577  0110BA  0FEC               	addlw	-20
 14578  0110BC  6ED9               	movwf	fsr2l,c
 14579  0110BE  50E2               	movf	fsr1h,w,c
 14580  0110C0  6EDA               	movwf	fsr2h,c
 14581  0110C2  0EFF               	movlw	255
 14582  0110C4  22DA               	addwfc	fsr2h,f,c
 14583  0110C6  06DE               	decf	postinc2,f,c
 14584  0110C8  0E00               	movlw	0
 14585  0110CA  5ADD               	subwfb	postdec2,f,c
 14586                           
 14587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 14588                           ;stkvar	_sign @ sp[(-56)+42]
 14589  0110CC  0EF2               	movlw	-14
 14590  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 14591  0110D4  0EF3               	movlw	-13
 14592  0110D6  50E3               	movf	plusw1,w,c
 14593  0110D8  1001               	iorwf	btemp^0,w,c
 14594  0110DA  A4D8               	btfss	status,2,c
 14595  0110DC  D002               	goto	l10900
 14596  0110DE  0E2B               	movlw	43
 14597  0110E0  D001               	goto	L11
 14598  0110E2                     l10900:
 14599  0110E2  0E2D               	movlw	45
 14600  0110E4                     L11:
 14601  0110E4  6E0B               	movwf	(btemp+10)^0,c
 14602  0110E6  0E00               	movlw	0
 14603  0110E8  6E0C               	movwf	(btemp+11)^0,c
 14604                           
 14605                           ;stkvar	_efgtoa$5167 @ sp[(-56)+4]
 14606  0110EA  0ECC               	movlw	-52
 14607  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14608  0110F2  0ECD               	movlw	-51
 14609  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14610                           
 14611                           ;stkvar	_efgtoa$5167 @ sp[(-56)+4]
 14612                           ;stkvar	_i @ sp[(-56)+36]
 14613  0110FA  0EEC               	movlw	-20
 14614  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 14615  011102  0EED               	movlw	-19
 14616  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 14617  01110A  0E94               	movlw	low _dbuf
 14618  01110C  240B               	addwf	(btemp+10)^0,w,c
 14619  01110E  6ED9               	movwf	fsr2l,c
 14620  011110  0E03               	movlw	high _dbuf
 14621  011112  200C               	addwfc	(btemp+11)^0,w,c
 14622  011114  6EDA               	movwf	fsr2h,c
 14623  011116  0ECC               	movlw	-52
 14624  011118  006F FF8F FFDF     	movff	plusw1,indf2
 14625                           
 14626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 14627                           ;stkvar	_w @ sp[(-56)+38]
 14628  01111E  50E1               	movf	fsr1l,w,c
 14629  011120  0FEE               	addlw	-18
 14630  011122  6ED9               	movwf	fsr2l,c
 14631  011124  50E2               	movf	fsr1h,w,c
 14632  011126  6EDA               	movwf	fsr2h,c
 14633  011128  0EFF               	movlw	255
 14634  01112A  22DA               	addwfc	fsr2h,f,c
 14635  01112C  06DE               	decf	postinc2,f,c
 14636  01112E  0E00               	movlw	0
 14637  011130  5ADD               	subwfb	postdec2,f,c
 14638                           
 14639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 14640                           ;stkvar	_i @ sp[(-56)+36]
 14641  011132  50E1               	movf	fsr1l,w,c
 14642  011134  0FEC               	addlw	-20
 14643  011136  6ED9               	movwf	fsr2l,c
 14644  011138  50E2               	movf	fsr1h,w,c
 14645  01113A  6EDA               	movwf	fsr2h,c
 14646  01113C  0EFF               	movlw	255
 14647  01113E  22DA               	addwfc	fsr2h,f,c
 14648  011140  06DE               	decf	postinc2,f,c
 14649  011142  0E00               	movlw	0
 14650  011144  5ADD               	subwfb	postdec2,f,c
 14651  011146  0EBF               	movlw	191
 14652  011148  6E0B               	movwf	(btemp+10)^0,c
 14653  01114A  0EFF               	movlw	255
 14654  01114C  6E0C               	movwf	(btemp+11)^0,c
 14655                           
 14656                           ;stkvar	_c @ sp[(-56)+-7]
 14657  01114E  0EC1               	movlw	-63
 14658  011150  50E3               	movf	plusw1,w,c
 14659  011152  6E09               	movwf	(btemp+8)^0,c
 14660  011154  6A0A               	clrf	(btemp+9)^0,c
 14661  011156  500B               	movf	(btemp+10)^0,w,c
 14662  011158  2609               	addwf	(btemp+8)^0,f,c
 14663  01115A  500C               	movf	(btemp+11)^0,w,c
 14664  01115C  220A               	addwfc	(btemp+9)^0,f,c
 14665  01115E  500A               	movf	(btemp+9)^0,w,c
 14666  011160  E106               	bnz	u10160
 14667  011162  0E1A               	movlw	26
 14668  011164  5C09               	subwf	(btemp+8)^0,w,c
 14669  011166  B0D8               	btfsc	status,0,c
 14670  011168  D002               	goto	u10160
 14671  01116A  0E01               	movlw	1
 14672  01116C  D001               	goto	u10170
 14673  01116E                     u10160:
 14674  01116E  0E00               	movlw	0
 14675  011170                     u10170:
 14676  011170  6E0B               	movwf	(btemp+10)^0,c
 14677  011172  6A0C               	clrf	(btemp+11)^0,c
 14678                           
 14679                           ;stkvar	_efgtoa$5169 @ sp[(-56)+0]
 14680  011174  0EC8               	movlw	-56
 14681  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14682  01117C  0EC9               	movlw	-55
 14683  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 14684                           
 14685                           ;stkvar	_efgtoa$5169 @ sp[(-56)+0]
 14686  011184  0EC8               	movlw	-56
 14687  011186  006F FF8C  F001    	movff	plusw1,btemp
 14688  01118C  0EC9               	movlw	-55
 14689  01118E  50E3               	movf	plusw1,w,c
 14690  011190  1001               	iorwf	btemp^0,w,c
 14691  011192  A4D8               	btfss	status,2,c
 14692  011194  D002               	goto	l10916
 14693  011196  0E65               	movlw	101
 14694  011198  D001               	goto	L12
 14695  01119A                     l10916:
 14696  01119A  0E45               	movlw	69
 14697  01119C                     L12:
 14698  01119C  6E0B               	movwf	(btemp+10)^0,c
 14699  01119E  0E00               	movlw	0
 14700  0111A0  6E0C               	movwf	(btemp+11)^0,c
 14701                           
 14702                           ;stkvar	_efgtoa$5168 @ sp[(-56)+2]
 14703  0111A2  0ECA               	movlw	-54
 14704  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14705  0111AA  0ECB               	movlw	-53
 14706  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 14707                           
 14708                           ;stkvar	_efgtoa$5168 @ sp[(-56)+2]
 14709                           ;stkvar	_i @ sp[(-56)+36]
 14710  0111B2  0EEC               	movlw	-20
 14711  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 14712  0111BA  0EED               	movlw	-19
 14713  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 14714  0111C2  0E94               	movlw	low _dbuf
 14715  0111C4  240B               	addwf	(btemp+10)^0,w,c
 14716  0111C6  6ED9               	movwf	fsr2l,c
 14717  0111C8  0E03               	movlw	high _dbuf
 14718  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 14719  0111CC  6EDA               	movwf	fsr2h,c
 14720  0111CE  0ECA               	movlw	-54
 14721  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 14722                           
 14723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 14724                           ;stkvar	_w @ sp[(-56)+38]
 14725  0111D6  50E1               	movf	fsr1l,w,c
 14726  0111D8  0FEE               	addlw	-18
 14727  0111DA  6ED9               	movwf	fsr2l,c
 14728  0111DC  50E2               	movf	fsr1h,w,c
 14729  0111DE  6EDA               	movwf	fsr2h,c
 14730  0111E0  0EFF               	movlw	255
 14731  0111E2  22DA               	addwfc	fsr2h,f,c
 14732  0111E4  06DE               	decf	postinc2,f,c
 14733  0111E6  0E00               	movlw	0
 14734  0111E8  5ADD               	subwfb	postdec2,f,c
 14735                           
 14736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 14737                           ;stkvar	_i @ sp[(-56)+36]
 14738  0111EA  0EEC               	movlw	-20
 14739  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 14740  0111F2  0EED               	movlw	-19
 14741  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 14742  0111FA  0E94               	movlw	low _dbuf
 14743  0111FC  240B               	addwf	(btemp+10)^0,w,c
 14744  0111FE  6E09               	movwf	(btemp+8)^0,c
 14745  011200  0E03               	movlw	high _dbuf
 14746  011202  200C               	addwfc	(btemp+11)^0,w,c
 14747  011204  6E0A               	movwf	(btemp+9)^0,c
 14748  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 14749  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 14750                           
 14751                           ;stkvar	_n @ sp[(-58)+32]
 14752  011212  0E94               	movlw	low _dbuf
 14753  011214  6E0B               	movwf	(btemp+10)^0,c
 14754  011216  0E03               	movlw	high _dbuf
 14755  011218  6E0C               	movwf	(btemp+11)^0,c
 14756  01121A  0EE6               	movlw	-26
 14757  01121C  50E3               	movf	plusw1,w,c
 14758  01121E  260B               	addwf	(btemp+10)^0,f,c
 14759  011220  0EE7               	movlw	-25
 14760  011222  50E3               	movf	plusw1,w,c
 14761  011224  220C               	addwfc	(btemp+11)^0,f,c
 14762  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14763  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 14764  011232  EC52  F0C0         	call	_strcpy	;wreg free
 14765  011236  EF16  F081         	goto	l10668
 14766  01123A                     l2057:
 14767                           
 14768                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 14769  01123A  0EC1               	movlw	193
 14770  01123C  26E1               	addwf	fsr1l,f,c
 14771  01123E  0EFF               	movlw	255
 14772  011240  22E2               	addwfc	fsr1h,f,c
 14773  011242  0012               	return		;funcret
 14774  011244                     __end_of_efgtoa:
 14775                           	opt callstack 0
 14776                           
 14777 ;; *************** function _tolower *****************
 14778 ;; Defined at:
 14779 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 14780 ;; Parameters:    Size  Location     Type
 14781 ;;  c               2  [STACK] int 
 14782 ;; Auto vars:     Size  Location     Type
 14783 ;;		None
 14784 ;; Return value:  Size  Location     Type
 14785 ;;                  2  [STACK] int 
 14786 ;; Registers used:
 14787 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 14788 ;; Tracked objects:
 14789 ;;		On entry : 0/0
 14790 ;;		On exit  : 0/0
 14791 ;;		Unchanged: 0/0
 14792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14797 ;;Total ram usage:        0 bytes
 14798 ;; Hardware stack levels used:    1
 14799 ;; Hardware stack levels required when called:   16
 14800 ;; This function calls:
 14801 ;;		_isupper
 14802 ;; This function is called by:
 14803 ;;		_efgtoa
 14804 ;;		_vfpfcnvrt
 14805 ;; This function uses a reentrant model
 14806 ;;
 14807                           
 14808                           	psect	text51
 14809  018A3C                     __ptext51:
 14810                           	opt callstack 0
 14811  018A3C                     _tolower:
 14812                           	opt callstack 0
 14813                           
 14814                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14815  018A3C  52E6               	movf	postinc1,f,c
 14816  018A3E  52E6               	movf	postinc1,f,c
 14817                           
 14818                           ;stkvar	_c @ sp[(-2)+-2]
 14819                           
 14820                           ;incstack = 0
 14821 ;; hardware stack exceeded
 14822  018A40  0EFC               	movlw	-4
 14823  018A42  50E3               	movf	plusw1,w,c
 14824  018A44  0FBF               	addlw	191
 14825  018A46  6E0B               	movwf	(btemp+10)^0,c
 14826  018A48  0EFD               	movlw	-3
 14827  018A4A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14828  018A50  0EFF               	movlw	255
 14829  018A52  220C               	addwfc	(btemp+11)^0,f,c
 14830  018A54  500C               	movf	(btemp+11)^0,w,c
 14831  018A56  E106               	bnz	u5340
 14832  018A58  0E1A               	movlw	26
 14833  018A5A  5C0B               	subwf	(btemp+10)^0,w,c
 14834  018A5C  B0D8               	btfsc	status,0,c
 14835  018A5E  D002               	goto	u5340
 14836  018A60  0E01               	movlw	1
 14837  018A62  D001               	goto	u5350
 14838  018A64                     u5340:
 14839  018A64  0E00               	movlw	0
 14840  018A66                     u5350:
 14841  018A66  6E0B               	movwf	(btemp+10)^0,c
 14842  018A68  6A0C               	clrf	(btemp+11)^0,c
 14843                           
 14844                           ;stkvar	_tolower$5950 @ sp[(-2)+0]
 14845  018A6A  0EFE               	movlw	-2
 14846  018A6C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14847  018A72  0EFF               	movlw	-1
 14848  018A74  0060  F033  FFE3   	movff	btemp+11,plusw1
 14849                           
 14850                           ;stkvar	_tolower$5950 @ sp[(-2)+0]
 14851  018A7A  0EFE               	movlw	-2
 14852  018A7C  006F FF8C  F001    	movff	plusw1,btemp
 14853  018A82  0EFF               	movlw	-1
 14854  018A84  50E3               	movf	plusw1,w,c
 14855  018A86  1001               	iorwf	btemp^0,w,c
 14856  018A88  B4D8               	btfsc	status,2,c
 14857  018A8A  D00D               	goto	l7228
 14858                           
 14859                           ;stkvar	_c @ sp[(-2)+-2]
 14860  018A8C  0EFC               	movlw	-4
 14861  018A8E  006F FF8C  F001    	movff	plusw1,btemp
 14862  018A94  0EFD               	movlw	-3
 14863  018A96  006F FF8C  F002    	movff	plusw1,btemp+1
 14864  018A9C  0E20               	movlw	32
 14865  018A9E  1201               	iorwf	btemp^0,f,c
 14866  018AA0  0E00               	movlw	0
 14867  018AA2  1202               	iorwf	(btemp+1)^0,f,c
 14868  018AA4  D008               	goto	l3301
 14869  018AA6                     l7228:
 14870                           
 14871                           ;stkvar	_c @ sp[(-2)+-2]
 14872  018AA6  0EFC               	movlw	-4
 14873  018AA8  006F FF8C  F001    	movff	plusw1,btemp
 14874  018AAE  0EFD               	movlw	-3
 14875  018AB0  006F FF8C  F002    	movff	plusw1,btemp+1
 14876  018AB6                     l3301:
 14877                           
 14878                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14879  018AB6  52E5               	movf	postdec1,f,c
 14880  018AB8  52E5               	movf	postdec1,f,c
 14881  018ABA  52E5               	movf	postdec1,f,c
 14882  018ABC  52E5               	movf	postdec1,f,c
 14883  018ABE  0012               	return		;funcret
 14884  018AC0                     __end_of_tolower:
 14885                           	opt callstack 0
 14886                           
 14887 ;; *************** function _isupper *****************
 14888 ;; Defined at:
 14889 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 14890 ;; Parameters:    Size  Location     Type
 14891 ;;  c               2  [STACK] int 
 14892 ;; Auto vars:     Size  Location     Type
 14893 ;;		None
 14894 ;; Return value:  Size  Location     Type
 14895 ;;                  2  [STACK] int 
 14896 ;; Registers used:
 14897 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14898 ;; Tracked objects:
 14899 ;;		On entry : 0/0
 14900 ;;		On exit  : 0/0
 14901 ;;		Unchanged: 0/0
 14902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14907 ;;Total ram usage:        0 bytes
 14908 ;; Hardware stack levels used:    1
 14909 ;; Hardware stack levels required when called:   15
 14910 ;; This function calls:
 14911 ;;		Nothing
 14912 ;; This function is called by:
 14913 ;;		_efgtoa
 14914 ;;		_xtoa
 14915 ;;		_vfpfcnvrt
 14916 ;;		_tolower
 14917 ;; This function uses a reentrant model
 14918 ;;
 14919                           
 14920                           	psect	text52
 14921  0195DE                     __ptext52:
 14922                           	opt callstack 0
 14923  0195DE                     _isupper:
 14924                           	opt callstack 0
 14925                           
 14926                           ;stkvar	_c @ sp[(0)+-2]
 14927                           
 14928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14929                           ;incstack = 0
 14930 ;; hardware stack exceeded
 14931  0195DE  0EFE               	movlw	-2
 14932  0195E0  50E3               	movf	plusw1,w,c
 14933  0195E2  0FBF               	addlw	191
 14934  0195E4  6E0B               	movwf	(btemp+10)^0,c
 14935  0195E6  0EFF               	movlw	-1
 14936  0195E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 14937  0195EE  0EFF               	movlw	255
 14938  0195F0  220C               	addwfc	(btemp+11)^0,f,c
 14939  0195F2  500C               	movf	(btemp+11)^0,w,c
 14940  0195F4  E106               	bnz	u4740
 14941  0195F6  0E1A               	movlw	26
 14942  0195F8  5C0B               	subwf	(btemp+10)^0,w,c
 14943  0195FA  B0D8               	btfsc	status,0,c
 14944  0195FC  D002               	goto	u4740
 14945  0195FE  0E01               	movlw	1
 14946  019600  D001               	goto	u4750
 14947  019602                     u4740:
 14948  019602  0E00               	movlw	0
 14949  019604                     u4750:
 14950  019604  6E01               	movwf	btemp^0,c
 14951  019606  6A02               	clrf	(btemp+1)^0,c
 14952                           
 14953                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14954  019608  52E5               	movf	postdec1,f,c
 14955  01960A  52E5               	movf	postdec1,f,c
 14956  01960C  0012               	return		;funcret
 14957  01960E                     __end_of_isupper:
 14958                           	opt callstack 0
 14959                           
 14960 ;; *************** function _strcpy *****************
 14961 ;; Defined at:
 14962 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 14963 ;; Parameters:    Size  Location     Type
 14964 ;;  dest            2  [STACK] PTR unsigned char 
 14965 ;;		 -> dbuf(80), 
 14966 ;;  src             2  [STACK] PTR const unsigned char 
 14967 ;;		 -> STR_52(4), STR_51(4), STR_48(4), STR_47(4), 
 14968 ;;		 -> dbuf(80), 
 14969 ;; Auto vars:     Size  Location     Type
 14970 ;;  d               2  [STACK] PTR unsigned char 
 14971 ;;		 -> dbuf(80), 
 14972 ;;  s               2  [STACK] PTR const unsigned char 
 14973 ;;		 -> STR_52(4), STR_51(4), STR_48(4), STR_47(4), 
 14974 ;;		 -> dbuf(80), 
 14975 ;; Return value:  Size  Location     Type
 14976 ;;                  2  [STACK] PTR unsigned char 
 14977 ;; Registers used:
 14978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 14979 ;; Tracked objects:
 14980 ;;		On entry : 0/0
 14981 ;;		On exit  : 0/0
 14982 ;;		Unchanged: 0/0
 14983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14988 ;;Total ram usage:        0 bytes
 14989 ;; Hardware stack levels used:    1
 14990 ;; Hardware stack levels required when called:   15
 14991 ;; This function calls:
 14992 ;;		Nothing
 14993 ;; This function is called by:
 14994 ;;		_efgtoa
 14995 ;; This function uses a reentrant model
 14996 ;;
 14997                           
 14998                           	psect	text53
 14999  0180A4                     __ptext53:
 15000                           	opt callstack 0
 15001  0180A4                     _strcpy:
 15002                           	opt callstack 0
 15003                           
 15004                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15005  0180A4  52E6               	movf	postinc1,f,c
 15006  0180A6  52E6               	movf	postinc1,f,c
 15007  0180A8  52E6               	movf	postinc1,f,c
 15008  0180AA  52E6               	movf	postinc1,f,c
 15009                           
 15010                           ;stkvar	_src @ sp[(-4)+-4]
 15011                           
 15012                           ;incstack = 0
 15013 ;; hardware stack exceeded
 15014  0180AC  0EF8               	movlw	-8
 15015  0180AE  006F FF8C  F00B    	movff	plusw1,btemp+10
 15016  0180B4  0EF9               	movlw	-7
 15017  0180B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 15018                           
 15019                           ;stkvar	_s @ sp[(-4)+2]
 15020  0180BC  0EFF               	movlw	-1
 15021  0180BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 15022  0180C4  0EFE               	movlw	-2
 15023  0180C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15024                           
 15025                           ;stkvar	_dest @ sp[(-4)+-2]
 15026  0180CC  0EFA               	movlw	-6
 15027  0180CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 15028  0180D4  0EFB               	movlw	-5
 15029  0180D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 15030                           
 15031                           ;stkvar	_d @ sp[(-4)+0]
 15032  0180DC  0EFD               	movlw	-3
 15033  0180DE  0060  F033  FFE3   	movff	btemp+11,plusw1
 15034  0180E4  0EFC               	movlw	-4
 15035  0180E6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15036  0180EC                     l10490:
 15037                           
 15038                           ;stkvar	_s @ sp[(-4)+2]
 15039  0180EC  50E1               	movf	fsr1l,w,c
 15040  0180EE  0FFE               	addlw	-2
 15041  0180F0  6ED9               	movwf	fsr2l,c
 15042  0180F2  50E2               	movf	fsr1h,w,c
 15043  0180F4  6EDA               	movwf	fsr2h,c
 15044  0180F6  0EFF               	movlw	255
 15045  0180F8  22DA               	addwfc	fsr2h,f,c
 15046  0180FA  006F FF7C  F00B    	movff	indf2,btemp+10
 15047  018100  0E01               	movlw	1
 15048  018102  26DE               	addwf	postinc2,f,c
 15049  018104  006F FF7C  F00C    	movff	indf2,btemp+11
 15050  01810A  0E00               	movlw	0
 15051  01810C  22DD               	addwfc	postdec2,f,c
 15052  01810E  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 15053  018114  0060  F033  FFF7   	movff	btemp+11,tblptrh
 15054  01811A  0E00               	movlw	low (__mediumconst shr (0+16))
 15055  01811C  6EF8               	movwf	tblptru,c
 15056                           
 15057                           ;stkvar	_d @ sp[(-4)+0]
 15058  01811E  50E1               	movf	fsr1l,w,c
 15059  018120  0FFC               	addlw	-4
 15060  018122  6ED9               	movwf	fsr2l,c
 15061  018124  50E2               	movf	fsr1h,w,c
 15062  018126  6EDA               	movwf	fsr2h,c
 15063  018128  0EFF               	movlw	255
 15064  01812A  22DA               	addwfc	fsr2h,f,c
 15065  01812C  006F FF7C  F00B    	movff	indf2,btemp+10
 15066  018132  0E01               	movlw	1
 15067  018134  26DE               	addwf	postinc2,f,c
 15068  018136  006F FF7C  F00C    	movff	indf2,btemp+11
 15069  01813C  0E00               	movlw	0
 15070  01813E  22DD               	addwfc	postdec2,f,c
 15071  018140  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15072  018146  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15073  01814C  0E1F               	movlw	(high __ramtop+-1)
 15074  01814E  64F7               	cpfsgt	tblptrh,c
 15075  018150  D003               	bra	u9417
 15076  018152  0008               	tblrd		*
 15077  018154  50F5               	movf	tablat,w,c
 15078  018156  D007               	bra	u9410
 15079  018158                     u9417:
 15080  018158  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15081  01815E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15082  018164  50EF               	movf	indf0,w,c
 15083  018166                     u9410:
 15084  018166  6EDF               	movwf	indf2,c
 15085  018168  50DF               	movf	indf2,w,c
 15086  01816A  A4D8               	btfss	status,2,c
 15087  01816C  D7BF               	goto	l10490
 15088                           
 15089                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 15090  01816E  0EF8               	movlw	248
 15091  018170  26E1               	addwf	fsr1l,f,c
 15092  018172  0EFF               	movlw	255
 15093  018174  22E2               	addwfc	fsr1h,f,c
 15094  018176  0012               	return		;funcret
 15095  018178                     __end_of_strcpy:
 15096                           	opt callstack 0
 15097                           
 15098 ;; *************** function _floorf *****************
 15099 ;; Defined at:
 15100 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 15101 ;; Parameters:    Size  Location     Type
 15102 ;;  x               4  [STACK] float 
 15103 ;; Auto vars:     Size  Location     Type
 15104 ;;  u               4  [STACK] struct .
 15105 ;;  m               4  [STACK] unsigned long 
 15106 ;;  e               2  [STACK] int 
 15107 ;; Return value:  Size  Location     Type
 15108 ;;                  4  [STACK] float 
 15109 ;; Registers used:
 15110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 15111 ;; Tracked objects:
 15112 ;;		On entry : 0/0
 15113 ;;		On exit  : 0/0
 15114 ;;		Unchanged: 0/0
 15115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15120 ;;Total ram usage:        0 bytes
 15121 ;; Hardware stack levels used:    1
 15122 ;; Hardware stack levels required when called:   15
 15123 ;; This function calls:
 15124 ;;		Nothing
 15125 ;; This function is called by:
 15126 ;;		_efgtoa
 15127 ;; This function uses a reentrant model
 15128 ;;
 15129                           
 15130                           	psect	text54
 15131  014FC2                     __ptext54:
 15132                           	opt callstack 0
 15133  014FC2                     _floorf:
 15134                           	opt callstack 0
 15135                           
 15136                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15137  014FC2  0E0A               	movlw	10
 15138  014FC4  26E1               	addwf	fsr1l,f,c
 15139  014FC6  0E00               	movlw	0
 15140  014FC8  22E2               	addwfc	fsr1h,f,c
 15141                           
 15142                           ;incstack = 0
 15143 ;; hardware stack exceeded
 15144  014FCA  0060  F254  F009   	movff	floorf@F524,btemp+8
 15145  014FD0  0060  F258  F00A   	movff	floorf@F524+1,btemp+9
 15146  014FD6  0060  F25C  F00B   	movff	floorf@F524+2,btemp+10
 15147  014FDC  0060  F260  F00C   	movff	floorf@F524+3,btemp+11
 15148                           
 15149                           ;stkvar	_u @ sp[(-10)+0]
 15150  014FE2  0EF6               	movlw	-10
 15151  014FE4  0060  F027  FFE3   	movff	btemp+8,plusw1
 15152  014FEA  0EF7               	movlw	-9
 15153  014FEC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15154  014FF2  0EF8               	movlw	-8
 15155  014FF4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15156  014FFA  0EF9               	movlw	-7
 15157  014FFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15158                           
 15159                           ;stkvar	_x @ sp[(-10)+-4]
 15160  015002  0EF2               	movlw	-14
 15161  015004  006F FF8C  F009    	movff	plusw1,btemp+8
 15162  01500A  0EF3               	movlw	-13
 15163  01500C  006F FF8C  F00A    	movff	plusw1,btemp+9
 15164  015012  0EF4               	movlw	-12
 15165  015014  006F FF8C  F00B    	movff	plusw1,btemp+10
 15166  01501A  0EF5               	movlw	-11
 15167  01501C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15168                           
 15169                           ;stkvar	_u @ sp[(-10)+0]
 15170  015022  0EF6               	movlw	-10
 15171  015024  0060  F027  FFE3   	movff	btemp+8,plusw1
 15172  01502A  0EF7               	movlw	-9
 15173  01502C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15174  015032  0EF8               	movlw	-8
 15175  015034  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15176  01503A  0EF9               	movlw	-7
 15177  01503C  0060  F033  FFE3   	movff	btemp+11,plusw1
 15178  015042  0E81               	movlw	129
 15179  015044  6E0B               	movwf	(btemp+10)^0,c
 15180  015046  0EFF               	movlw	255
 15181  015048  6E0C               	movwf	(btemp+11)^0,c
 15182                           
 15183                           ;stkvar	_u @ sp[(-10)+0]
 15184  01504A  0EF6               	movlw	-10
 15185  01504C  006F FF8C  F005    	movff	plusw1,btemp+4
 15186  015052  0EF7               	movlw	-9
 15187  015054  006F FF8C  F006    	movff	plusw1,btemp+5
 15188  01505A  0EF8               	movlw	-8
 15189  01505C  006F FF8C  F007    	movff	plusw1,btemp+6
 15190  015062  0EF9               	movlw	-7
 15191  015064  006F FF8C  F008    	movff	plusw1,btemp+7
 15192  01506A  0E18               	movlw	24
 15193  01506C  D005               	goto	u5370
 15194  01506E                     u5375:
 15195  01506E  90D8               	bcf	status,0,c
 15196  015070  3208               	rrcf	(btemp+7)^0,f,c
 15197  015072  3207               	rrcf	(btemp+6)^0,f,c
 15198  015074  3206               	rrcf	(btemp+5)^0,f,c
 15199  015076  3205               	rrcf	(btemp+4)^0,f,c
 15200  015078                     u5370:
 15201  015078  2EE8               	decfsz	wreg,f,c
 15202  01507A  D7F9               	goto	u5375
 15203  01507C  0060  F014  F009   	movff	btemp+4,btemp+8
 15204  015082  0060  F018  F00A   	movff	btemp+5,btemp+9
 15205  015088  0EFF               	movlw	255
 15206  01508A  1609               	andwf	(btemp+8)^0,f,c
 15207  01508C  0E00               	movlw	0
 15208  01508E  160A               	andwf	(btemp+9)^0,f,c
 15209  015090  500B               	movf	(btemp+10)^0,w,c
 15210  015092  2609               	addwf	(btemp+8)^0,f,c
 15211  015094  500C               	movf	(btemp+11)^0,w,c
 15212  015096  220A               	addwfc	(btemp+9)^0,f,c
 15213                           
 15214                           ;stkvar	_e @ sp[(-10)+8]
 15215  015098  0EFE               	movlw	-2
 15216  01509A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15217  0150A0  0EFF               	movlw	-1
 15218  0150A2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15219                           
 15220                           ;stkvar	_e @ sp[(-10)+8]
 15221  0150A8  0EFF               	movlw	-1
 15222  0150AA  BEE3               	btfsc	plusw1,7,c
 15223  0150AC  D019               	goto	l7242
 15224  0150AE  0EFF               	movlw	-1
 15225  0150B0  50E3               	movf	plusw1,w,c
 15226  0150B2  E108               	bnz	u5380
 15227  0150B4  0EFE               	movlw	-2
 15228  0150B6  006F FF8C  F001    	movff	plusw1,btemp
 15229  0150BC  0E17               	movlw	23
 15230  0150BE  5E01               	subwf	btemp^0,f,c
 15231  0150C0  A0D8               	btfss	status,0,c
 15232  0150C2  D00E               	goto	l7242
 15233  0150C4                     u5380:
 15234                           
 15235                           ;stkvar	_x @ sp[(-10)+-4]
 15236  0150C4  0EF2               	movlw	-14
 15237  0150C6  006F FF8C  F001    	movff	plusw1,btemp
 15238  0150CC  0EF3               	movlw	-13
 15239  0150CE  006F FF8C  F002    	movff	plusw1,btemp+1
 15240  0150D4  0EF4               	movlw	-12
 15241  0150D6  006F FF8C  F003    	movff	plusw1,btemp+2
 15242  0150DC  0EF5               	movlw	-11
 15243  0150DE  D11F               	goto	L13
 15244  0150E0                     l7242:
 15245                           
 15246                           ;stkvar	_e @ sp[(-10)+8]
 15247  0150E0  0EFF               	movlw	-1
 15248  0150E2  BEE3               	btfsc	plusw1,7,c
 15249  0150E4  D0B4               	goto	l7258
 15250                           
 15251                           ;stkvar	_e @ sp[(-10)+8]
 15252  0150E6  0EFE               	movlw	-2
 15253  0150E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 15254  0150EE  0EFF               	movlw	255
 15255  0150F0  6E05               	movwf	(btemp+4)^0,c
 15256  0150F2  0EFF               	movlw	255
 15257  0150F4  6E06               	movwf	(btemp+5)^0,c
 15258  0150F6  0E7F               	movlw	127
 15259  0150F8  6E07               	movwf	(btemp+6)^0,c
 15260  0150FA  0E00               	movlw	0
 15261  0150FC  6E08               	movwf	(btemp+7)^0,c
 15262  0150FE                     u5405:
 15263  0150FE  660C               	tstfsz	(btemp+11)^0,c
 15264  015100  D001               	goto	u5406
 15265  015102  D007               	goto	u5407
 15266  015104                     u5406:
 15267  015104  3408               	rlcf	(btemp+7)^0,w,c
 15268  015106  3208               	rrcf	(btemp+7)^0,f,c
 15269  015108  3207               	rrcf	(btemp+6)^0,f,c
 15270  01510A  3206               	rrcf	(btemp+5)^0,f,c
 15271  01510C  3205               	rrcf	(btemp+4)^0,f,c
 15272  01510E  2E0C               	decfsz	(btemp+11)^0,f,c
 15273  015110  D7F6               	goto	u5405
 15274  015112                     u5407:
 15275                           
 15276                           ;stkvar	_m @ sp[(-10)+4]
 15277  015112  0EFA               	movlw	-6
 15278  015114  0060  F017  FFE3   	movff	btemp+4,plusw1
 15279  01511A  0EFB               	movlw	-5
 15280  01511C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 15281  015122  0EFC               	movlw	-4
 15282  015124  0060  F01F  FFE3   	movff	btemp+6,plusw1
 15283  01512A  0EFD               	movlw	-3
 15284  01512C  0060  F023  FFE3   	movff	btemp+7,plusw1
 15285                           
 15286                           ;stkvar	_m @ sp[(-10)+4]
 15287                           ;stkvar	_u @ sp[(-10)+0]
 15288  015132  0EF6               	movlw	-10
 15289  015134  006F FF8C  F009    	movff	plusw1,btemp+8
 15290  01513A  0EF7               	movlw	-9
 15291  01513C  006F FF8C  F00A    	movff	plusw1,btemp+9
 15292  015142  0EF8               	movlw	-8
 15293  015144  006F FF8C  F00B    	movff	plusw1,btemp+10
 15294  01514A  0EF9               	movlw	-7
 15295  01514C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15296  015152  0EFA               	movlw	-6
 15297  015154  50E3               	movf	plusw1,w,c
 15298  015156  1609               	andwf	(btemp+8)^0,f,c
 15299  015158  0EFB               	movlw	-5
 15300  01515A  50E3               	movf	plusw1,w,c
 15301  01515C  160A               	andwf	(btemp+9)^0,f,c
 15302  01515E  0EFC               	movlw	-4
 15303  015160  50E3               	movf	plusw1,w,c
 15304  015162  160B               	andwf	(btemp+10)^0,f,c
 15305  015164  0EFD               	movlw	-3
 15306  015166  50E3               	movf	plusw1,w,c
 15307  015168  160C               	andwf	(btemp+11)^0,f,c
 15308  01516A  5009               	movf	(btemp+8)^0,w,c
 15309  01516C  100A               	iorwf	(btemp+9)^0,w,c
 15310  01516E  100B               	iorwf	(btemp+10)^0,w,c
 15311  015170  100C               	iorwf	(btemp+11)^0,w,c
 15312  015172  B4D8               	btfsc	status,2,c
 15313  015174  D7A7               	goto	u5380
 15314                           
 15315                           ;stkvar	_u @ sp[(-10)+0]
 15316  015176  0EF6               	movlw	-10
 15317  015178  006F FF8C  F009    	movff	plusw1,btemp+8
 15318  01517E  0EF7               	movlw	-9
 15319  015180  006F FF8C  F00A    	movff	plusw1,btemp+9
 15320  015186  0EF8               	movlw	-8
 15321  015188  006F FF8C  F00B    	movff	plusw1,btemp+10
 15322  01518E  0EF9               	movlw	-7
 15323  015190  006F FF8C  F00C    	movff	plusw1,btemp+11
 15324  015196  0E20               	movlw	32
 15325  015198  D005               	goto	u5420
 15326  01519A                     u5425:
 15327  01519A  90D8               	bcf	status,0,c
 15328  01519C  320C               	rrcf	(btemp+11)^0,f,c
 15329  01519E  320B               	rrcf	(btemp+10)^0,f,c
 15330  0151A0  320A               	rrcf	(btemp+9)^0,f,c
 15331  0151A2  3209               	rrcf	(btemp+8)^0,f,c
 15332  0151A4                     u5420:
 15333  0151A4  2EE8               	decfsz	wreg,f,c
 15334  0151A6  D7F9               	goto	u5425
 15335  0151A8  5009               	movf	(btemp+8)^0,w,c
 15336  0151AA  B4D8               	btfsc	status,2,c
 15337  0151AC  D028               	goto	l7256
 15338                           
 15339                           ;stkvar	_m @ sp[(-10)+4]
 15340                           ;stkvar	_u @ sp[(-10)+0]
 15341  0151AE  0EF6               	movlw	-10
 15342  0151B0  50E3               	movf	plusw1,w,c
 15343  0151B2  6E01               	movwf	btemp^0,c
 15344  0151B4  0EFA               	movlw	-6
 15345  0151B6  50E3               	movf	plusw1,w,c
 15346  0151B8  2601               	addwf	btemp^0,f,c
 15347  0151BA  0EF6               	movlw	-10
 15348  0151BC  0060  F007  FFE3   	movff	btemp,plusw1
 15349  0151C2  0EF7               	movlw	-9
 15350  0151C4  50E3               	movf	plusw1,w,c
 15351  0151C6  6E01               	movwf	btemp^0,c
 15352  0151C8  0EFB               	movlw	-5
 15353  0151CA  50E3               	movf	plusw1,w,c
 15354  0151CC  2201               	addwfc	btemp^0,f,c
 15355  0151CE  0EF7               	movlw	-9
 15356  0151D0  0060  F007  FFE3   	movff	btemp,plusw1
 15357  0151D6  0EF8               	movlw	-8
 15358  0151D8  50E3               	movf	plusw1,w,c
 15359  0151DA  6E01               	movwf	btemp^0,c
 15360  0151DC  0EFC               	movlw	-4
 15361  0151DE  50E3               	movf	plusw1,w,c
 15362  0151E0  2201               	addwfc	btemp^0,f,c
 15363  0151E2  0EF8               	movlw	-8
 15364  0151E4  0060  F007  FFE3   	movff	btemp,plusw1
 15365  0151EA  0EF9               	movlw	-7
 15366  0151EC  50E3               	movf	plusw1,w,c
 15367  0151EE  6E01               	movwf	btemp^0,c
 15368  0151F0  0EFD               	movlw	-3
 15369  0151F2  50E3               	movf	plusw1,w,c
 15370  0151F4  2201               	addwfc	btemp^0,f,c
 15371  0151F6  0EF9               	movlw	-7
 15372  0151F8  0060  F007  FFE3   	movff	btemp,plusw1
 15373  0151FE                     l7256:
 15374                           
 15375                           ;stkvar	_m @ sp[(-10)+4]
 15376  0151FE  0EFA               	movlw	-6
 15377  015200  006F FF8C  F009    	movff	plusw1,btemp+8
 15378  015206  0EFB               	movlw	-5
 15379  015208  006F FF8C  F00A    	movff	plusw1,btemp+9
 15380  01520E  0EFC               	movlw	-4
 15381  015210  006F FF8C  F00B    	movff	plusw1,btemp+10
 15382  015216  0EFD               	movlw	-3
 15383  015218  006F FF8C  F00C    	movff	plusw1,btemp+11
 15384  01521E  1C09               	comf	(btemp+8)^0,w,c
 15385  015220  6E05               	movwf	(btemp+4)^0,c
 15386  015222  1C0A               	comf	(btemp+9)^0,w,c
 15387  015224  6E06               	movwf	(btemp+5)^0,c
 15388  015226  1C0B               	comf	(btemp+10)^0,w,c
 15389  015228  6E07               	movwf	(btemp+6)^0,c
 15390  01522A  1C0C               	comf	(btemp+11)^0,w,c
 15391  01522C  6E08               	movwf	(btemp+7)^0,c
 15392                           
 15393                           ;stkvar	_u @ sp[(-10)+0]
 15394  01522E  50E1               	movf	fsr1l,w,c
 15395  015230  0FF6               	addlw	-10
 15396  015232  6ED9               	movwf	fsr2l,c
 15397  015234  50E2               	movf	fsr1h,w,c
 15398  015236  6EDA               	movwf	fsr2h,c
 15399  015238  0EFF               	movlw	255
 15400  01523A  22DA               	addwfc	fsr2h,f,c
 15401  01523C  5005               	movf	(btemp+4)^0,w,c
 15402  01523E  16DE               	andwf	postinc2,f,c
 15403  015240  5006               	movf	(btemp+5)^0,w,c
 15404  015242  16DE               	andwf	postinc2,f,c
 15405  015244  5007               	movf	(btemp+6)^0,w,c
 15406  015246  16DE               	andwf	postinc2,f,c
 15407  015248  5008               	movf	(btemp+7)^0,w,c
 15408  01524A  16DE               	andwf	postinc2,f,c
 15409  01524C  D05B               	goto	l7266
 15410  01524E                     l7258:
 15411                           
 15412                           ;stkvar	_u @ sp[(-10)+0]
 15413  01524E  0EF6               	movlw	-10
 15414  015250  006F FF8C  F009    	movff	plusw1,btemp+8
 15415  015256  0EF7               	movlw	-9
 15416  015258  006F FF8C  F00A    	movff	plusw1,btemp+9
 15417  01525E  0EF8               	movlw	-8
 15418  015260  006F FF8C  F00B    	movff	plusw1,btemp+10
 15419  015266  0EF9               	movlw	-7
 15420  015268  006F FF8C  F00C    	movff	plusw1,btemp+11
 15421  01526E  0E20               	movlw	32
 15422  015270  D005               	goto	u5440
 15423  015272                     u5445:
 15424  015272  90D8               	bcf	status,0,c
 15425  015274  320C               	rrcf	(btemp+11)^0,f,c
 15426  015276  320B               	rrcf	(btemp+10)^0,f,c
 15427  015278  320A               	rrcf	(btemp+9)^0,f,c
 15428  01527A  3209               	rrcf	(btemp+8)^0,f,c
 15429  01527C                     u5440:
 15430  01527C  2EE8               	decfsz	wreg,f,c
 15431  01527E  D7F9               	goto	u5445
 15432  015280  6609               	tstfsz	(btemp+8)^0,c
 15433  015282  D009               	goto	l7262
 15434                           
 15435                           ;stkvar	_u @ sp[(-10)+0]
 15436  015284  0EF6               	movlw	-10
 15437  015286  6AE3               	clrf	plusw1,c
 15438  015288  0EF7               	movlw	-9
 15439  01528A  6AE3               	clrf	plusw1,c
 15440  01528C  0EF8               	movlw	-8
 15441  01528E  6AE3               	clrf	plusw1,c
 15442  015290  0EF9               	movlw	-7
 15443  015292  6AE3               	clrf	plusw1,c
 15444  015294  D037               	goto	l7266
 15445  015296                     l7262:
 15446                           
 15447                           ;stkvar	_u @ sp[(-10)+0]
 15448  015296  0EF6               	movlw	-10
 15449  015298  006F FF8C  F009    	movff	plusw1,btemp+8
 15450  01529E  0EF7               	movlw	-9
 15451  0152A0  006F FF8C  F00A    	movff	plusw1,btemp+9
 15452  0152A6  0EF8               	movlw	-8
 15453  0152A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 15454  0152AE  0EF9               	movlw	-7
 15455  0152B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15456  0152B6  90D8               	bcf	status,0,c
 15457  0152B8  3409               	rlcf	(btemp+8)^0,w,c
 15458  0152BA  6E05               	movwf	(btemp+4)^0,c
 15459  0152BC  340A               	rlcf	(btemp+9)^0,w,c
 15460  0152BE  6E06               	movwf	(btemp+5)^0,c
 15461  0152C0  340B               	rlcf	(btemp+10)^0,w,c
 15462  0152C2  6E07               	movwf	(btemp+6)^0,c
 15463  0152C4  340C               	rlcf	(btemp+11)^0,w,c
 15464  0152C6  6E08               	movwf	(btemp+7)^0,c
 15465  0152C8  5005               	movf	(btemp+4)^0,w,c
 15466  0152CA  1006               	iorwf	(btemp+5)^0,w,c
 15467  0152CC  1007               	iorwf	(btemp+6)^0,w,c
 15468  0152CE  1008               	iorwf	(btemp+7)^0,w,c
 15469  0152D0  B4D8               	btfsc	status,2,c
 15470  0152D2  D018               	goto	l7266
 15471  0152D4  0E00               	movlw	0
 15472  0152D6  6E09               	movwf	(btemp+8)^0,c
 15473  0152D8  0E00               	movlw	0
 15474  0152DA  6E0A               	movwf	(btemp+9)^0,c
 15475  0152DC  0E80               	movlw	128
 15476  0152DE  6E0B               	movwf	(btemp+10)^0,c
 15477  0152E0  0EBF               	movlw	191
 15478  0152E2  6E0C               	movwf	(btemp+11)^0,c
 15479                           
 15480                           ;stkvar	_u @ sp[(-10)+0]
 15481  0152E4  0EF6               	movlw	-10
 15482  0152E6  0060  F027  FFE3   	movff	btemp+8,plusw1
 15483  0152EC  0EF7               	movlw	-9
 15484  0152EE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15485  0152F4  0EF8               	movlw	-8
 15486  0152F6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15487  0152FC  0EF9               	movlw	-7
 15488  0152FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 15489  015304                     l7266:
 15490                           
 15491                           ;stkvar	_u @ sp[(-10)+0]
 15492  015304  0EF6               	movlw	-10
 15493  015306  006F FF8C  F001    	movff	plusw1,btemp
 15494  01530C  0EF7               	movlw	-9
 15495  01530E  006F FF8C  F002    	movff	plusw1,btemp+1
 15496  015314  0EF8               	movlw	-8
 15497  015316  006F FF8C  F003    	movff	plusw1,btemp+2
 15498  01531C  0EF9               	movlw	-7
 15499  01531E                     L13:
 15500  01531E  006F FF8C  F004    	movff	plusw1,btemp+3
 15501                           
 15502                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15503  015324  0EF2               	movlw	242
 15504  015326  26E1               	addwf	fsr1l,f,c
 15505  015328  0EFF               	movlw	255
 15506  01532A  22E2               	addwfc	fsr1h,f,c
 15507  01532C  0012               	return		;funcret
 15508  01532E                     __end_of_floorf:
 15509                           	opt callstack 0
 15510                           
 15511 ;; *************** function ___fpclassifyf *****************
 15512 ;; Defined at:
 15513 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 15514 ;; Parameters:    Size  Location     Type
 15515 ;;  x               4  [STACK] float 
 15516 ;; Auto vars:     Size  Location     Type
 15517 ;;  u               4  [STACK] struct .
 15518 ;;  e               2  [STACK] int 
 15519 ;; Return value:  Size  Location     Type
 15520 ;;                  2  [STACK] int 
 15521 ;; Registers used:
 15522 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 15523 ;; Tracked objects:
 15524 ;;		On entry : 0/0
 15525 ;;		On exit  : 0/0
 15526 ;;		Unchanged: 0/0
 15527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15532 ;;Total ram usage:        0 bytes
 15533 ;; Hardware stack levels used:    1
 15534 ;; Hardware stack levels required when called:   15
 15535 ;; This function calls:
 15536 ;;		Nothing
 15537 ;; This function is called by:
 15538 ;;		_efgtoa
 15539 ;; This function uses a reentrant model
 15540 ;;
 15541                           
 15542                           	psect	text55
 15543  016C84                     __ptext55:
 15544                           	opt callstack 0
 15545  016C84                     ___fpclassifyf:
 15546                           	opt callstack 0
 15547                           
 15548                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15549  016C84  0E06               	movlw	6
 15550  016C86  26E1               	addwf	fsr1l,f,c
 15551  016C88  0E00               	movlw	0
 15552  016C8A  22E2               	addwfc	fsr1h,f,c
 15553                           
 15554                           ;incstack = 0
 15555 ;; hardware stack exceeded
 15556  016C8C  0060  F264  F009   	movff	___fpclassifyf@F463,btemp+8
 15557  016C92  0060  F268  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 15558  016C98  0060  F26C  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 15559  016C9E  0060  F270  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 15560                           
 15561                           ;stkvar	_u @ sp[(-6)+0]
 15562  016CA4  0EFA               	movlw	-6
 15563  016CA6  0060  F027  FFE3   	movff	btemp+8,plusw1
 15564  016CAC  0EFB               	movlw	-5
 15565  016CAE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15566  016CB4  0EFC               	movlw	-4
 15567  016CB6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15568  016CBC  0EFD               	movlw	-3
 15569  016CBE  0060  F033  FFE3   	movff	btemp+11,plusw1
 15570                           
 15571                           ;stkvar	_x @ sp[(-6)+-4]
 15572  016CC4  0EF6               	movlw	-10
 15573  016CC6  006F FF8C  F009    	movff	plusw1,btemp+8
 15574  016CCC  0EF7               	movlw	-9
 15575  016CCE  006F FF8C  F00A    	movff	plusw1,btemp+9
 15576  016CD4  0EF8               	movlw	-8
 15577  016CD6  006F FF8C  F00B    	movff	plusw1,btemp+10
 15578  016CDC  0EF9               	movlw	-7
 15579  016CDE  006F FF8C  F00C    	movff	plusw1,btemp+11
 15580                           
 15581                           ;stkvar	_u @ sp[(-6)+0]
 15582  016CE4  0EFA               	movlw	-6
 15583  016CE6  0060  F027  FFE3   	movff	btemp+8,plusw1
 15584  016CEC  0EFB               	movlw	-5
 15585  016CEE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15586  016CF4  0EFC               	movlw	-4
 15587  016CF6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15588  016CFC  0EFD               	movlw	-3
 15589  016CFE  0060  F033  FFE3   	movff	btemp+11,plusw1
 15590                           
 15591                           ;stkvar	_u @ sp[(-6)+0]
 15592  016D04  0EFA               	movlw	-6
 15593  016D06  006F FF8C  F009    	movff	plusw1,btemp+8
 15594  016D0C  0EFB               	movlw	-5
 15595  016D0E  006F FF8C  F00A    	movff	plusw1,btemp+9
 15596  016D14  0EFC               	movlw	-4
 15597  016D16  006F FF8C  F00B    	movff	plusw1,btemp+10
 15598  016D1C  0EFD               	movlw	-3
 15599  016D1E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15600  016D24  0E18               	movlw	24
 15601  016D26  D005               	goto	u5250
 15602  016D28                     u5255:
 15603  016D28  90D8               	bcf	status,0,c
 15604  016D2A  320C               	rrcf	(btemp+11)^0,f,c
 15605  016D2C  320B               	rrcf	(btemp+10)^0,f,c
 15606  016D2E  320A               	rrcf	(btemp+9)^0,f,c
 15607  016D30  3209               	rrcf	(btemp+8)^0,f,c
 15608  016D32                     u5250:
 15609  016D32  2EE8               	decfsz	wreg,f,c
 15610  016D34  D7F9               	goto	u5255
 15611  016D36  0060  F024  F007   	movff	btemp+8,btemp+6
 15612  016D3C  0060  F028  F008   	movff	btemp+9,btemp+7
 15613  016D42  0EFF               	movlw	255
 15614  016D44  1607               	andwf	(btemp+6)^0,f,c
 15615  016D46  0E00               	movlw	0
 15616  016D48  1608               	andwf	(btemp+7)^0,f,c
 15617                           
 15618                           ;stkvar	_e @ sp[(-6)+4]
 15619  016D4A  0EFE               	movlw	-2
 15620  016D4C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 15621  016D52  0EFF               	movlw	-1
 15622  016D54  0060  F023  FFE3   	movff	btemp+7,plusw1
 15623                           
 15624                           ;stkvar	_e @ sp[(-6)+4]
 15625  016D5A  0EFE               	movlw	-2
 15626  016D5C  006F FF8C  F001    	movff	plusw1,btemp
 15627  016D62  0EFF               	movlw	-1
 15628  016D64  50E3               	movf	plusw1,w,c
 15629  016D66  1001               	iorwf	btemp^0,w,c
 15630  016D68  A4D8               	btfss	status,2,c
 15631  016D6A  D023               	goto	l7204
 15632                           
 15633                           ;stkvar	_u @ sp[(-6)+0]
 15634  016D6C  0EFA               	movlw	-6
 15635  016D6E  006F FF8C  F009    	movff	plusw1,btemp+8
 15636  016D74  0EFB               	movlw	-5
 15637  016D76  006F FF8C  F00A    	movff	plusw1,btemp+9
 15638  016D7C  0EFC               	movlw	-4
 15639  016D7E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15640  016D84  0EFD               	movlw	-3
 15641  016D86  006F FF8C  F00C    	movff	plusw1,btemp+11
 15642  016D8C  90D8               	bcf	status,0,c
 15643  016D8E  3409               	rlcf	(btemp+8)^0,w,c
 15644  016D90  6E05               	movwf	(btemp+4)^0,c
 15645  016D92  340A               	rlcf	(btemp+9)^0,w,c
 15646  016D94  6E06               	movwf	(btemp+5)^0,c
 15647  016D96  340B               	rlcf	(btemp+10)^0,w,c
 15648  016D98  6E07               	movwf	(btemp+6)^0,c
 15649  016D9A  340C               	rlcf	(btemp+11)^0,w,c
 15650  016D9C  6E08               	movwf	(btemp+7)^0,c
 15651  016D9E  5005               	movf	(btemp+4)^0,w,c
 15652  016DA0  1006               	iorwf	(btemp+5)^0,w,c
 15653  016DA2  1007               	iorwf	(btemp+6)^0,w,c
 15654  016DA4  1008               	iorwf	(btemp+7)^0,w,c
 15655  016DA6  A4D8               	btfss	status,2,c
 15656  016DA8  D002               	goto	l7200
 15657  016DAA  0E02               	movlw	2
 15658  016DAC  D02E               	goto	L14
 15659  016DAE                     l7200:
 15660  016DAE  0E03               	movlw	3
 15661  016DB0  D02C               	goto	L14
 15662  016DB2                     l7204:
 15663                           
 15664                           ;stkvar	_e @ sp[(-6)+4]
 15665  016DB2  0EFE               	movlw	-2
 15666  016DB4  28E3               	incf	plusw1,w,c
 15667  016DB6  E128               	bnz	l7210
 15668  016DB8  0EFF               	movlw	-1
 15669  016DBA  50E3               	movf	plusw1,w,c
 15670  016DBC  A4D8               	btfss	status,2,c
 15671  016DBE  D024               	goto	l7210
 15672                           
 15673                           ;stkvar	_u @ sp[(-6)+0]
 15674  016DC0  0EFA               	movlw	-6
 15675  016DC2  006F FF8C  F009    	movff	plusw1,btemp+8
 15676  016DC8  0EFB               	movlw	-5
 15677  016DCA  006F FF8C  F00A    	movff	plusw1,btemp+9
 15678  016DD0  0EFC               	movlw	-4
 15679  016DD2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15680  016DD8  0EFD               	movlw	-3
 15681  016DDA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15682  016DE0  0E09               	movlw	9
 15683  016DE2                     u5295:
 15684  016DE2  90D8               	bcf	status,0,c
 15685  016DE4  3609               	rlcf	(btemp+8)^0,f,c
 15686  016DE6  360A               	rlcf	(btemp+9)^0,f,c
 15687  016DE8  360B               	rlcf	(btemp+10)^0,f,c
 15688  016DEA  360C               	rlcf	(btemp+11)^0,f,c
 15689  016DEC  2EE8               	decfsz	wreg,f,c
 15690  016DEE  D7F9               	goto	u5295
 15691  016DF0  5009               	movf	(btemp+8)^0,w,c
 15692  016DF2  100A               	iorwf	(btemp+9)^0,w,c
 15693  016DF4  100B               	iorwf	(btemp+10)^0,w,c
 15694  016DF6  100C               	iorwf	(btemp+11)^0,w,c
 15695  016DF8  A4D8               	btfss	status,2,c
 15696  016DFA  D002               	goto	u5300
 15697  016DFC  0E01               	movlw	1
 15698  016DFE  D001               	goto	u5310
 15699  016E00                     u5300:
 15700  016E00  0E00               	movlw	0
 15701  016E02                     u5310:
 15702  016E02  6E01               	movwf	btemp^0,c
 15703  016E04  6A02               	clrf	(btemp+1)^0,c
 15704  016E06  D004               	goto	l2916
 15705  016E08                     l7210:
 15706  016E08  0E04               	movlw	4
 15707  016E0A                     L14:
 15708  016E0A  6E01               	movwf	btemp^0,c
 15709  016E0C  0E00               	movlw	0
 15710  016E0E  6E02               	movwf	(btemp+1)^0,c
 15711  016E10                     l2916:
 15712                           
 15713                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 15714  016E10  0EF6               	movlw	246
 15715  016E12  26E1               	addwf	fsr1l,f,c
 15716  016E14  0EFF               	movlw	255
 15717  016E16  22E2               	addwfc	fsr1h,f,c
 15718  016E18  0012               	return		;funcret
 15719  016E1A                     __end_of___fpclassifyf:
 15720                           	opt callstack 0
 15721                           
 15722 ;; *************** function ___fltol *****************
 15723 ;; Defined at:
 15724 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 15725 ;; Parameters:    Size  Location     Type
 15726 ;;  f1              4  [STACK] int 
 15727 ;; Auto vars:     Size  Location     Type
 15728 ;;  exp1            1  [STACK] unsigned char 
 15729 ;;  sign1           1  [STACK] unsigned char 
 15730 ;; Return value:  Size  Location     Type
 15731 ;;                  4  [STACK] long 
 15732 ;; Registers used:
 15733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15734 ;; Tracked objects:
 15735 ;;		On entry : 0/1
 15736 ;;		On exit  : 0/0
 15737 ;;		Unchanged: 0/0
 15738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15743 ;;Total ram usage:        0 bytes
 15744 ;; Hardware stack levels used:    1
 15745 ;; Hardware stack levels required when called:   15
 15746 ;; This function calls:
 15747 ;;		Nothing
 15748 ;; This function is called by:
 15749 ;;		_calc_bsoc
 15750 ;;		_init_bsoc
 15751 ;;		_efgtoa
 15752 ;; This function uses a reentrant model
 15753 ;;
 15754                           
 15755                           	psect	text56
 15756  016E1A                     __ptext56:
 15757                           	opt callstack 0
 15758  016E1A                     ___fltol:
 15759                           	opt callstack 0
 15760                           
 15761                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15762  016E1A  52E6               	movf	postinc1,f,c
 15763  016E1C  52E6               	movf	postinc1,f,c
 15764                           
 15765                           ;stkvar	_f1 @ sp[(-2)+-4]
 15766                           
 15767                           ;incstack = 0
 15768 ;; hardware stack exceeded
 15769  016E1E  0EFA               	movlw	-6
 15770  016E20  006F FF8C  F009    	movff	plusw1,btemp+8
 15771  016E26  0EFB               	movlw	-5
 15772  016E28  006F FF8C  F00A    	movff	plusw1,btemp+9
 15773  016E2E  0EFC               	movlw	-4
 15774  016E30  006F FF8C  F00B    	movff	plusw1,btemp+10
 15775  016E36  0EFD               	movlw	-3
 15776  016E38  006F FF8C  F00C    	movff	plusw1,btemp+11
 15777  016E3E  0E18               	movlw	24
 15778  016E40  D005               	goto	u6460
 15779  016E42                     u6465:
 15780  016E42  90D8               	bcf	status,0,c
 15781  016E44  320C               	rrcf	(btemp+11)^0,f,c
 15782  016E46  320B               	rrcf	(btemp+10)^0,f,c
 15783  016E48  320A               	rrcf	(btemp+9)^0,f,c
 15784  016E4A  3209               	rrcf	(btemp+8)^0,f,c
 15785  016E4C                     u6460:
 15786  016E4C  2EE8               	decfsz	wreg,f,c
 15787  016E4E  D7F9               	goto	u6465
 15788                           
 15789                           ;stkvar	_exp1 @ sp[(-2)+0]
 15790  016E50  0EFE               	movlw	-2
 15791  016E52  0060  F027  FFE3   	movff	btemp+8,plusw1
 15792  016E58  0EFE               	movlw	-2
 15793  016E5A  50E3               	movf	plusw1,w,c
 15794  016E5C  A4D8               	btfss	status,2,c
 15795  016E5E  D006               	goto	l7830
 15796  016E60                     u6470:
 15797  016E60  0E00               	movlw	0
 15798  016E62  6E01               	movwf	btemp^0,c
 15799  016E64  6A02               	clrf	(btemp+1)^0,c
 15800  016E66  6A03               	clrf	(btemp+2)^0,c
 15801  016E68  6A04               	clrf	(btemp+3)^0,c
 15802  016E6A  D08B               	goto	l2532
 15803  016E6C                     l7830:
 15804                           
 15805                           ;stkvar	_f1 @ sp[(-2)+-4]
 15806  016E6C  0EFA               	movlw	-6
 15807  016E6E  006F FF8C  F009    	movff	plusw1,btemp+8
 15808  016E74  0EFB               	movlw	-5
 15809  016E76  006F FF8C  F00A    	movff	plusw1,btemp+9
 15810  016E7C  0EFC               	movlw	-4
 15811  016E7E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15812  016E84  0EFD               	movlw	-3
 15813  016E86  006F FF8C  F00C    	movff	plusw1,btemp+11
 15814  016E8C  0E20               	movlw	32
 15815  016E8E  D005               	goto	u6480
 15816  016E90                     u6485:
 15817  016E90  90D8               	bcf	status,0,c
 15818  016E92  320C               	rrcf	(btemp+11)^0,f,c
 15819  016E94  320B               	rrcf	(btemp+10)^0,f,c
 15820  016E96  320A               	rrcf	(btemp+9)^0,f,c
 15821  016E98  3209               	rrcf	(btemp+8)^0,f,c
 15822  016E9A                     u6480:
 15823  016E9A  2EE8               	decfsz	wreg,f,c
 15824  016E9C  D7F9               	goto	u6485
 15825                           
 15826                           ;stkvar	_sign1 @ sp[(-2)+1]
 15827  016E9E  0EFF               	movlw	-1
 15828  016EA0  0060  F027  FFE3   	movff	btemp+8,plusw1
 15829                           
 15830                           ;stkvar	_f1 @ sp[(-2)+-4]
 15831  016EA6  0EFC               	movlw	-4
 15832  016EA8  8EE3               	bsf	plusw1,7,c
 15833                           
 15834                           ;stkvar	_f1 @ sp[(-2)+-4]
 15835  016EAA  50E1               	movf	fsr1l,w,c
 15836  016EAC  0FFA               	addlw	-6
 15837  016EAE  6ED9               	movwf	fsr2l,c
 15838  016EB0  50E2               	movf	fsr1h,w,c
 15839  016EB2  6EDA               	movwf	fsr2h,c
 15840  016EB4  0EFF               	movlw	255
 15841  016EB6  22DA               	addwfc	fsr2h,f,c
 15842  016EB8  0EFF               	movlw	255
 15843  016EBA  16DE               	andwf	postinc2,f,c
 15844  016EBC  0EFF               	movlw	255
 15845  016EBE  16DE               	andwf	postinc2,f,c
 15846  016EC0  0EFF               	movlw	255
 15847  016EC2  16DE               	andwf	postinc2,f,c
 15848  016EC4  0E00               	movlw	0
 15849  016EC6  16DE               	andwf	postinc2,f,c
 15850                           
 15851                           ;stkvar	_exp1 @ sp[(-2)+0]
 15852  016EC8  0EFE               	movlw	-2
 15853  016ECA  006F FF8C  F001    	movff	plusw1,btemp
 15854  016ED0  0E96               	movlw	150
 15855  016ED2  5E01               	subwf	btemp^0,f,c
 15856  016ED4  0EFE               	movlw	-2
 15857  016ED6  0060  F007  FFE3   	movff	btemp,plusw1
 15858                           
 15859                           ;stkvar	_exp1 @ sp[(-2)+0]
 15860  016EDC  0EFE               	movlw	-2
 15861  016EDE  AEE3               	btfss	plusw1,7,c
 15862  016EE0  D014               	goto	l7848
 15863                           
 15864                           ;stkvar	_exp1 @ sp[(-2)+0]
 15865  016EE2  0EFE               	movlw	-2
 15866  016EE4  50E3               	movf	plusw1,w,c
 15867  016EE6  0A80               	xorlw	128
 15868  016EE8  0F97               	addlw	151
 15869  016EEA  A0D8               	btfss	status,0,c
 15870  016EEC  D7B9               	goto	u6470
 15871  016EEE                     l7846:
 15872                           
 15873                           ;stkvar	_f1 @ sp[(-2)+-4]
 15874  016EEE  90D8               	bcf	status,0,c
 15875  016EF0  0EFD               	movlw	-3
 15876  016EF2  32E3               	rrcf	plusw1,f,c
 15877  016EF4  0EFC               	movlw	-4
 15878  016EF6  32E3               	rrcf	plusw1,f,c
 15879  016EF8  0EFB               	movlw	-5
 15880  016EFA  32E3               	rrcf	plusw1,f,c
 15881  016EFC  0EFA               	movlw	-6
 15882  016EFE  32E3               	rrcf	plusw1,f,c
 15883                           
 15884                           ;stkvar	_exp1 @ sp[(-2)+0]
 15885  016F00  0EFE               	movlw	-2
 15886  016F02  2AE3               	incf	plusw1,f,c
 15887  016F04  B4D8               	btfsc	status,2,c
 15888  016F06  D018               	goto	u6530
 15889  016F08  D7F2               	goto	l7846
 15890  016F0A                     l7848:
 15891                           
 15892                           ;stkvar	_exp1 @ sp[(-2)+0]
 15893  016F0A  0EFE               	movlw	-2
 15894  016F0C  006F FF8C  F001    	movff	plusw1,btemp
 15895  016F12  0E1F               	movlw	31
 15896  016F14  6401               	cpfsgt	btemp^0,c
 15897  016F16  D00C               	goto	l7856
 15898  016F18  D7A3               	goto	u6470
 15899  016F1A                     l7854:
 15900                           
 15901                           ;stkvar	_f1 @ sp[(-2)+-4]
 15902  016F1A  90D8               	bcf	status,0,c
 15903  016F1C  0EFA               	movlw	-6
 15904  016F1E  36E3               	rlcf	plusw1,f,c
 15905  016F20  0EFB               	movlw	-5
 15906  016F22  36E3               	rlcf	plusw1,f,c
 15907  016F24  0EFC               	movlw	-4
 15908  016F26  36E3               	rlcf	plusw1,f,c
 15909  016F28  0EFD               	movlw	-3
 15910  016F2A  36E3               	rlcf	plusw1,f,c
 15911                           
 15912                           ;stkvar	_exp1 @ sp[(-2)+0]
 15913  016F2C  0EFE               	movlw	-2
 15914  016F2E  06E3               	decf	plusw1,f,c
 15915  016F30                     l7856:
 15916                           
 15917                           ;stkvar	_exp1 @ sp[(-2)+0]
 15918  016F30  0EFE               	movlw	-2
 15919  016F32  50E3               	movf	plusw1,w,c
 15920  016F34  A4D8               	btfss	status,2,c
 15921  016F36  D7F1               	goto	l7854
 15922  016F38                     u6530:
 15923                           
 15924                           ;stkvar	_sign1 @ sp[(-2)+1]
 15925  016F38  0EFF               	movlw	-1
 15926  016F3A  50E3               	movf	plusw1,w,c
 15927  016F3C  B4D8               	btfsc	status,2,c
 15928  016F3E  D011               	goto	u6550
 15929                           
 15930                           ;stkvar	_f1 @ sp[(-2)+-4]
 15931                           ;stkvar	_f1 @ sp[(-2)+-4]
 15932  016F40  0EFA               	movlw	-6
 15933  016F42  6CE3               	negf	plusw1,c
 15934  016F44  0EFB               	movlw	-5
 15935  016F46  1EE3               	comf	plusw1,f,c
 15936  016F48  0EFC               	movlw	-4
 15937  016F4A  1EE3               	comf	plusw1,f,c
 15938  016F4C  0EFD               	movlw	-3
 15939  016F4E  1EE3               	comf	plusw1,f,c
 15940  016F50  E308               	bnc	u6550
 15941  016F52  0EFB               	movlw	-5
 15942  016F54  2AE3               	incf	plusw1,f,c
 15943  016F56  E305               	bnc	u6550
 15944  016F58  0EFC               	movlw	-4
 15945  016F5A  2AE3               	incf	plusw1,f,c
 15946  016F5C  E302               	bnc	u6550
 15947  016F5E  0EFD               	movlw	-3
 15948  016F60  2AE3               	incf	plusw1,f,c
 15949  016F62                     u6550:
 15950                           
 15951                           ;stkvar	_f1 @ sp[(-2)+-4]
 15952  016F62  0EFA               	movlw	-6
 15953  016F64  006F FF8C  F001    	movff	plusw1,btemp
 15954  016F6A  0EFB               	movlw	-5
 15955  016F6C  006F FF8C  F002    	movff	plusw1,btemp+1
 15956  016F72  0EFC               	movlw	-4
 15957  016F74  006F FF8C  F003    	movff	plusw1,btemp+2
 15958  016F7A  0EFD               	movlw	-3
 15959  016F7C  006F FF8C  F004    	movff	plusw1,btemp+3
 15960  016F82                     l2532:
 15961                           
 15962                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15963  016F82  0EFA               	movlw	250
 15964  016F84  26E1               	addwf	fsr1l,f,c
 15965  016F86  0EFF               	movlw	255
 15966  016F88  22E2               	addwfc	fsr1h,f,c
 15967  016F8A  0012               	return		;funcret
 15968  016F8C                     __end_of___fltol:
 15969                           	opt callstack 0
 15970                           
 15971 ;; *************** function ___flneg *****************
 15972 ;; Defined at:
 15973 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 15974 ;; Parameters:    Size  Location     Type
 15975 ;;  f1              4  [STACK] long 
 15976 ;; Auto vars:     Size  Location     Type
 15977 ;;		None
 15978 ;; Return value:  Size  Location     Type
 15979 ;;                  4  [STACK] long 
 15980 ;; Registers used:
 15981 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 15982 ;; Tracked objects:
 15983 ;;		On entry : 0/0
 15984 ;;		On exit  : 0/0
 15985 ;;		Unchanged: 0/0
 15986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15991 ;;Total ram usage:        0 bytes
 15992 ;; Hardware stack levels used:    1
 15993 ;; Hardware stack levels required when called:   15
 15994 ;; This function calls:
 15995 ;;		Nothing
 15996 ;; This function is called by:
 15997 ;;		_calc_bsoc
 15998 ;;		_efgtoa
 15999 ;; This function uses a reentrant model
 16000 ;;
 16001                           
 16002                           	psect	text57
 16003  019108                     __ptext57:
 16004                           	opt callstack 0
 16005  019108                     ___flneg:
 16006                           	opt callstack 0
 16007                           
 16008                           ;stkvar	_f1 @ sp[(0)+-4]
 16009                           
 16010                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16011                           ;incstack = 0
 16012 ;; hardware stack exceeded
 16013  019108  0EFC               	movlw	-4
 16014  01910A  50E3               	movf	plusw1,w,c
 16015  01910C  E10A               	bnz	u6450
 16016  01910E  0EFD               	movlw	-3
 16017  019110  50E3               	movf	plusw1,w,c
 16018  019112  E107               	bnz	u6450
 16019  019114  0EFE               	movlw	-2
 16020  019116  50E3               	movf	plusw1,w,c
 16021  019118  E104               	bnz	u6450
 16022  01911A  0EFF               	movlw	-1
 16023  01911C  50E3               	movf	plusw1,w,c
 16024  01911E  B4D8               	btfsc	status,2,c
 16025  019120  D002               	goto	l7820
 16026  019122                     u6450:
 16027                           
 16028                           ;stkvar	_f1 @ sp[(0)+-4]
 16029  019122  0EFF               	movlw	-1
 16030  019124  7EE3               	btg	plusw1,7,c
 16031  019126                     l7820:
 16032                           
 16033                           ;stkvar	_f1 @ sp[(0)+-4]
 16034  019126  0EFC               	movlw	-4
 16035  019128  006F FF8C  F001    	movff	plusw1,btemp
 16036  01912E  0EFD               	movlw	-3
 16037  019130  006F FF8C  F002    	movff	plusw1,btemp+1
 16038  019136  0EFE               	movlw	-2
 16039  019138  006F FF8C  F003    	movff	plusw1,btemp+2
 16040  01913E  0EFF               	movlw	-1
 16041  019140  006F FF8C  F004    	movff	plusw1,btemp+3
 16042                           
 16043                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16044  019146  52E5               	movf	postdec1,f,c
 16045  019148  52E5               	movf	postdec1,f,c
 16046  01914A  52E5               	movf	postdec1,f,c
 16047  01914C  52E5               	movf	postdec1,f,c
 16048  01914E  0012               	return		;funcret
 16049  019150                     __end_of___flneg:
 16050                           	opt callstack 0
 16051                           
 16052 ;; *************** function ___flge *****************
 16053 ;; Defined at:
 16054 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 16055 ;; Parameters:    Size  Location     Type
 16056 ;;  ff1             4  [STACK] long 
 16057 ;;  ff2             4  [STACK] long 
 16058 ;; Auto vars:     Size  Location     Type
 16059 ;;		None
 16060 ;; Return value:  Size  Location     Type
 16061 ;;		None               void
 16062 ;; Registers used:
 16063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 16064 ;; Tracked objects:
 16065 ;;		On entry : 0/0
 16066 ;;		On exit  : 0/0
 16067 ;;		Unchanged: 0/0
 16068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16073 ;;Total ram usage:        0 bytes
 16074 ;; Hardware stack levels used:    1
 16075 ;; Hardware stack levels required when called:   15
 16076 ;; This function calls:
 16077 ;;		Nothing
 16078 ;; This function is called by:
 16079 ;;		_calc_bsoc
 16080 ;;		_efgtoa
 16081 ;; This function uses a reentrant model
 16082 ;;
 16083                           
 16084                           	psect	text58
 16085  0170FC                     __ptext58:
 16086                           	opt callstack 0
 16087  0170FC                     ___flge:
 16088                           	opt callstack 0
 16089                           
 16090                           ;stkvar	_ff1 @ sp[(0)+-4]
 16091                           
 16092                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16093                           ;incstack = 0
 16094 ;; hardware stack exceeded
 16095  0170FC  50E1               	movf	fsr1l,w,c
 16096  0170FE  0FFC               	addlw	-4
 16097  017100  6ED9               	movwf	fsr2l,c
 16098  017102  50E2               	movf	fsr1h,w,c
 16099  017104  6EDA               	movwf	fsr2h,c
 16100  017106  0EFF               	movlw	255
 16101  017108  22DA               	addwfc	fsr2h,f,c
 16102  01710A  0E00               	movlw	0
 16103  01710C  14DE               	andwf	postinc2,w,c
 16104  01710E  6E09               	movwf	(btemp+8)^0,c
 16105  017110  0E00               	movlw	0
 16106  017112  14DE               	andwf	postinc2,w,c
 16107  017114  6E0A               	movwf	(btemp+9)^0,c
 16108  017116  0E80               	movlw	128
 16109  017118  14DE               	andwf	postinc2,w,c
 16110  01711A  6E0B               	movwf	(btemp+10)^0,c
 16111  01711C  0E7F               	movlw	127
 16112  01711E  14DE               	andwf	postinc2,w,c
 16113  017120  6E0C               	movwf	(btemp+11)^0,c
 16114  017122  5009               	movf	(btemp+8)^0,w,c
 16115  017124  100A               	iorwf	(btemp+9)^0,w,c
 16116  017126  100B               	iorwf	(btemp+10)^0,w,c
 16117  017128  100C               	iorwf	(btemp+11)^0,w,c
 16118  01712A  A4D8               	btfss	status,2,c
 16119  01712C  D008               	goto	l7794
 16120                           
 16121                           ;stkvar	_ff1 @ sp[(0)+-4]
 16122  01712E  0EFC               	movlw	-4
 16123  017130  6AE3               	clrf	plusw1,c
 16124  017132  0EFD               	movlw	-3
 16125  017134  6AE3               	clrf	plusw1,c
 16126  017136  0EFE               	movlw	-2
 16127  017138  6AE3               	clrf	plusw1,c
 16128  01713A  0EFF               	movlw	-1
 16129  01713C  6AE3               	clrf	plusw1,c
 16130  01713E                     l7794:
 16131                           
 16132                           ;stkvar	_ff2 @ sp[(0)+-8]
 16133  01713E  50E1               	movf	fsr1l,w,c
 16134  017140  0FF8               	addlw	-8
 16135  017142  6ED9               	movwf	fsr2l,c
 16136  017144  50E2               	movf	fsr1h,w,c
 16137  017146  6EDA               	movwf	fsr2h,c
 16138  017148  0EFF               	movlw	255
 16139  01714A  22DA               	addwfc	fsr2h,f,c
 16140  01714C  0E00               	movlw	0
 16141  01714E  14DE               	andwf	postinc2,w,c
 16142  017150  6E09               	movwf	(btemp+8)^0,c
 16143  017152  0E00               	movlw	0
 16144  017154  14DE               	andwf	postinc2,w,c
 16145  017156  6E0A               	movwf	(btemp+9)^0,c
 16146  017158  0E80               	movlw	128
 16147  01715A  14DE               	andwf	postinc2,w,c
 16148  01715C  6E0B               	movwf	(btemp+10)^0,c
 16149  01715E  0E7F               	movlw	127
 16150  017160  14DE               	andwf	postinc2,w,c
 16151  017162  6E0C               	movwf	(btemp+11)^0,c
 16152  017164  5009               	movf	(btemp+8)^0,w,c
 16153  017166  100A               	iorwf	(btemp+9)^0,w,c
 16154  017168  100B               	iorwf	(btemp+10)^0,w,c
 16155  01716A  100C               	iorwf	(btemp+11)^0,w,c
 16156  01716C  A4D8               	btfss	status,2,c
 16157  01716E  D008               	goto	l2498
 16158                           
 16159                           ;stkvar	_ff2 @ sp[(0)+-8]
 16160  017170  0EF8               	movlw	-8
 16161  017172  6AE3               	clrf	plusw1,c
 16162  017174  0EF9               	movlw	-7
 16163  017176  6AE3               	clrf	plusw1,c
 16164  017178  0EFA               	movlw	-6
 16165  01717A  6AE3               	clrf	plusw1,c
 16166  01717C  0EFB               	movlw	-5
 16167  01717E  6AE3               	clrf	plusw1,c
 16168  017180                     l2498:
 16169                           
 16170                           ;stkvar	_ff1 @ sp[(0)+-4]
 16171  017180  0EFF               	movlw	-1
 16172  017182  AEE3               	btfss	plusw1,7,c
 16173  017184  D024               	goto	l7800
 16174                           
 16175                           ;stkvar	_ff1 @ sp[(0)+-4]
 16176  017186  0E00               	movlw	0
 16177  017188  6E09               	movwf	(btemp+8)^0,c
 16178  01718A  0E00               	movlw	0
 16179  01718C  6E0A               	movwf	(btemp+9)^0,c
 16180  01718E  0E00               	movlw	0
 16181  017190  6E0B               	movwf	(btemp+10)^0,c
 16182  017192  0E80               	movlw	128
 16183  017194  6E0C               	movwf	(btemp+11)^0,c
 16184  017196  0EFC               	movlw	-4
 16185  017198  50E3               	movf	plusw1,w,c
 16186  01719A  5E09               	subwf	(btemp+8)^0,f,c
 16187  01719C  0EFD               	movlw	-3
 16188  01719E  50E3               	movf	plusw1,w,c
 16189  0171A0  5A0A               	subwfb	(btemp+9)^0,f,c
 16190  0171A2  0EFE               	movlw	-2
 16191  0171A4  50E3               	movf	plusw1,w,c
 16192  0171A6  5A0B               	subwfb	(btemp+10)^0,f,c
 16193  0171A8  0EFF               	movlw	-1
 16194  0171AA  50E3               	movf	plusw1,w,c
 16195  0171AC  5A0C               	subwfb	(btemp+11)^0,f,c
 16196                           
 16197                           ;stkvar	_ff1 @ sp[(0)+-4]
 16198  0171AE  0EFC               	movlw	-4
 16199  0171B0  0060  F027  FFE3   	movff	btemp+8,plusw1
 16200  0171B6  0EFD               	movlw	-3
 16201  0171B8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16202  0171BE  0EFE               	movlw	-2
 16203  0171C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16204  0171C6  0EFF               	movlw	-1
 16205  0171C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 16206  0171CE                     l7800:
 16207                           
 16208                           ;stkvar	_ff2 @ sp[(0)+-8]
 16209  0171CE  0EFB               	movlw	-5
 16210  0171D0  AEE3               	btfss	plusw1,7,c
 16211  0171D2  D024               	goto	l7804
 16212                           
 16213                           ;stkvar	_ff2 @ sp[(0)+-8]
 16214  0171D4  0E00               	movlw	0
 16215  0171D6  6E09               	movwf	(btemp+8)^0,c
 16216  0171D8  0E00               	movlw	0
 16217  0171DA  6E0A               	movwf	(btemp+9)^0,c
 16218  0171DC  0E00               	movlw	0
 16219  0171DE  6E0B               	movwf	(btemp+10)^0,c
 16220  0171E0  0E80               	movlw	128
 16221  0171E2  6E0C               	movwf	(btemp+11)^0,c
 16222  0171E4  0EF8               	movlw	-8
 16223  0171E6  50E3               	movf	plusw1,w,c
 16224  0171E8  5E09               	subwf	(btemp+8)^0,f,c
 16225  0171EA  0EF9               	movlw	-7
 16226  0171EC  50E3               	movf	plusw1,w,c
 16227  0171EE  5A0A               	subwfb	(btemp+9)^0,f,c
 16228  0171F0  0EFA               	movlw	-6
 16229  0171F2  50E3               	movf	plusw1,w,c
 16230  0171F4  5A0B               	subwfb	(btemp+10)^0,f,c
 16231  0171F6  0EFB               	movlw	-5
 16232  0171F8  50E3               	movf	plusw1,w,c
 16233  0171FA  5A0C               	subwfb	(btemp+11)^0,f,c
 16234                           
 16235                           ;stkvar	_ff2 @ sp[(0)+-8]
 16236  0171FC  0EF8               	movlw	-8
 16237  0171FE  0060  F027  FFE3   	movff	btemp+8,plusw1
 16238  017204  0EF9               	movlw	-7
 16239  017206  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16240  01720C  0EFA               	movlw	-6
 16241  01720E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16242  017214  0EFB               	movlw	-5
 16243  017216  0060  F033  FFE3   	movff	btemp+11,plusw1
 16244  01721C                     l7804:
 16245                           
 16246                           ;stkvar	_ff1 @ sp[(0)+-4]
 16247  01721C  0EFF               	movlw	-1
 16248  01721E  7EE3               	btg	plusw1,7,c
 16249                           
 16250                           ;stkvar	_ff2 @ sp[(0)+-8]
 16251  017220  0EFB               	movlw	-5
 16252  017222  7EE3               	btg	plusw1,7,c
 16253                           
 16254                           ;stkvar	_ff2 @ sp[(0)+-8]
 16255                           ;stkvar	_ff1 @ sp[(0)+-4]
 16256  017224  50E1               	movf	fsr1l,w,c
 16257  017226  0FFC               	addlw	-4
 16258  017228  6ED9               	movwf	fsr2l,c
 16259  01722A  50E2               	movf	fsr1h,w,c
 16260  01722C  6EDA               	movwf	fsr2h,c
 16261  01722E  0EFF               	movlw	255
 16262  017230  22DA               	addwfc	fsr2h,f,c
 16263  017232  0EF8               	movlw	-8
 16264  017234  50E3               	movf	plusw1,w,c
 16265  017236  5CDE               	subwf	postinc2,w,c
 16266  017238  0EF9               	movlw	-7
 16267  01723A  50E3               	movf	plusw1,w,c
 16268  01723C  58DE               	subwfb	postinc2,w,c
 16269  01723E  0EFA               	movlw	-6
 16270  017240  50E3               	movf	plusw1,w,c
 16271  017242  58DE               	subwfb	postinc2,w,c
 16272  017244  0EFB               	movlw	-5
 16273  017246  50E3               	movf	plusw1,w,c
 16274  017248  58DE               	subwfb	postinc2,w,c
 16275  01724A  B0D8               	btfsc	status,0,c
 16276  01724C  D002               	goto	l7812
 16277  01724E  9001               	bcf	btemp& (0+255),0,c
 16278  017250  D001               	goto	l2505
 16279  017252                     l7812:
 16280  017252  8001               	bsf	btemp& (0+255),0,c
 16281  017254                     l2505:
 16282                           
 16283                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16284  017254  0EF8               	movlw	248
 16285  017256  26E1               	addwf	fsr1l,f,c
 16286  017258  0EFF               	movlw	255
 16287  01725A  22E2               	addwfc	fsr1h,f,c
 16288  01725C  0012               	return		;funcret
 16289  01725E                     __end_of___flge:
 16290                           	opt callstack 0
 16291                           
 16292 ;; *************** function ___fleq *****************
 16293 ;; Defined at:
 16294 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 16295 ;; Parameters:    Size  Location     Type
 16296 ;;  ff1             4  [STACK] long 
 16297 ;;  ff2             4  [STACK] long 
 16298 ;; Auto vars:     Size  Location     Type
 16299 ;;		None
 16300 ;; Return value:  Size  Location     Type
 16301 ;;		None               void
 16302 ;; Registers used:
 16303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 16304 ;; Tracked objects:
 16305 ;;		On entry : 0/0
 16306 ;;		On exit  : 0/0
 16307 ;;		Unchanged: 0/0
 16308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16313 ;;Total ram usage:        0 bytes
 16314 ;; Hardware stack levels used:    1
 16315 ;; Hardware stack levels required when called:   15
 16316 ;; This function calls:
 16317 ;;		Nothing
 16318 ;; This function is called by:
 16319 ;;		_efgtoa
 16320 ;; This function uses a reentrant model
 16321 ;;
 16322                           
 16323                           	psect	text59
 16324  018178                     __ptext59:
 16325                           	opt callstack 0
 16326  018178                     ___fleq:
 16327                           	opt callstack 0
 16328                           
 16329                           ;stkvar	_ff1 @ sp[(0)+-4]
 16330                           
 16331                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16332                           ;incstack = 0
 16333 ;; hardware stack exceeded
 16334  018178  50E1               	movf	fsr1l,w,c
 16335  01817A  0FFC               	addlw	-4
 16336  01817C  6ED9               	movwf	fsr2l,c
 16337  01817E  50E2               	movf	fsr1h,w,c
 16338  018180  6EDA               	movwf	fsr2h,c
 16339  018182  0EFF               	movlw	255
 16340  018184  22DA               	addwfc	fsr2h,f,c
 16341  018186  0E00               	movlw	0
 16342  018188  14DE               	andwf	postinc2,w,c
 16343  01818A  6E09               	movwf	(btemp+8)^0,c
 16344  01818C  0E00               	movlw	0
 16345  01818E  14DE               	andwf	postinc2,w,c
 16346  018190  6E0A               	movwf	(btemp+9)^0,c
 16347  018192  0E80               	movlw	128
 16348  018194  14DE               	andwf	postinc2,w,c
 16349  018196  6E0B               	movwf	(btemp+10)^0,c
 16350  018198  0E7F               	movlw	127
 16351  01819A  14DE               	andwf	postinc2,w,c
 16352  01819C  6E0C               	movwf	(btemp+11)^0,c
 16353  01819E  5009               	movf	(btemp+8)^0,w,c
 16354  0181A0  100A               	iorwf	(btemp+9)^0,w,c
 16355  0181A2  100B               	iorwf	(btemp+10)^0,w,c
 16356  0181A4  100C               	iorwf	(btemp+11)^0,w,c
 16357  0181A6  A4D8               	btfss	status,2,c
 16358  0181A8  D008               	goto	l7778
 16359                           
 16360                           ;stkvar	_ff1 @ sp[(0)+-4]
 16361  0181AA  0EFC               	movlw	-4
 16362  0181AC  6AE3               	clrf	plusw1,c
 16363  0181AE  0EFD               	movlw	-3
 16364  0181B0  6AE3               	clrf	plusw1,c
 16365  0181B2  0EFE               	movlw	-2
 16366  0181B4  6AE3               	clrf	plusw1,c
 16367  0181B6  0EFF               	movlw	-1
 16368  0181B8  6AE3               	clrf	plusw1,c
 16369  0181BA                     l7778:
 16370                           
 16371                           ;stkvar	_ff2 @ sp[(0)+-8]
 16372  0181BA  50E1               	movf	fsr1l,w,c
 16373  0181BC  0FF8               	addlw	-8
 16374  0181BE  6ED9               	movwf	fsr2l,c
 16375  0181C0  50E2               	movf	fsr1h,w,c
 16376  0181C2  6EDA               	movwf	fsr2h,c
 16377  0181C4  0EFF               	movlw	255
 16378  0181C6  22DA               	addwfc	fsr2h,f,c
 16379  0181C8  0E00               	movlw	0
 16380  0181CA  14DE               	andwf	postinc2,w,c
 16381  0181CC  6E09               	movwf	(btemp+8)^0,c
 16382  0181CE  0E00               	movlw	0
 16383  0181D0  14DE               	andwf	postinc2,w,c
 16384  0181D2  6E0A               	movwf	(btemp+9)^0,c
 16385  0181D4  0E80               	movlw	128
 16386  0181D6  14DE               	andwf	postinc2,w,c
 16387  0181D8  6E0B               	movwf	(btemp+10)^0,c
 16388  0181DA  0E7F               	movlw	127
 16389  0181DC  14DE               	andwf	postinc2,w,c
 16390  0181DE  6E0C               	movwf	(btemp+11)^0,c
 16391  0181E0  5009               	movf	(btemp+8)^0,w,c
 16392  0181E2  100A               	iorwf	(btemp+9)^0,w,c
 16393  0181E4  100B               	iorwf	(btemp+10)^0,w,c
 16394  0181E6  100C               	iorwf	(btemp+11)^0,w,c
 16395  0181E8  A4D8               	btfss	status,2,c
 16396  0181EA  D008               	goto	l7782
 16397                           
 16398                           ;stkvar	_ff2 @ sp[(0)+-8]
 16399  0181EC  0EF8               	movlw	-8
 16400  0181EE  6AE3               	clrf	plusw1,c
 16401  0181F0  0EF9               	movlw	-7
 16402  0181F2  6AE3               	clrf	plusw1,c
 16403  0181F4  0EFA               	movlw	-6
 16404  0181F6  6AE3               	clrf	plusw1,c
 16405  0181F8  0EFB               	movlw	-5
 16406  0181FA  6AE3               	clrf	plusw1,c
 16407  0181FC                     l7782:
 16408                           
 16409                           ;stkvar	_ff2 @ sp[(0)+-8]
 16410                           ;stkvar	_ff1 @ sp[(0)+-4]
 16411  0181FC  50E1               	movf	fsr1l,w,c
 16412  0181FE  0FFC               	addlw	-4
 16413  018200  6ED9               	movwf	fsr2l,c
 16414  018202  50E2               	movf	fsr1h,w,c
 16415  018204  6EDA               	movwf	fsr2h,c
 16416  018206  0EFF               	movlw	255
 16417  018208  22DA               	addwfc	fsr2h,f,c
 16418  01820A  0EF8               	movlw	-8
 16419  01820C  50E3               	movf	plusw1,w,c
 16420  01820E  18DE               	xorwf	postinc2,w,c
 16421  018210  E10D               	bnz	u6390
 16422  018212  0EF9               	movlw	-7
 16423  018214  50E3               	movf	plusw1,w,c
 16424  018216  18DE               	xorwf	postinc2,w,c
 16425  018218  E109               	bnz	u6390
 16426  01821A  0EFA               	movlw	-6
 16427  01821C  50E3               	movf	plusw1,w,c
 16428  01821E  18DE               	xorwf	postinc2,w,c
 16429  018220  E105               	bnz	u6390
 16430  018222  0EFB               	movlw	-5
 16431  018224  50E3               	movf	plusw1,w,c
 16432  018226  18DE               	xorwf	postinc2,w,c
 16433  018228  B4D8               	btfsc	status,2,c
 16434  01822A  D002               	goto	l7786
 16435  01822C                     u6390:
 16436  01822C  9001               	bcf	btemp& (0+255),0,c
 16437  01822E  D001               	goto	l2494
 16438  018230                     l7786:
 16439  018230  8001               	bsf	btemp& (0+255),0,c
 16440  018232                     l2494:
 16441                           
 16442                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16443  018232  0EF8               	movlw	248
 16444  018234  26E1               	addwf	fsr1l,f,c
 16445  018236  0EFF               	movlw	255
 16446  018238  22E2               	addwfc	fsr1h,f,c
 16447  01823A  0012               	return		;funcret
 16448  01823C                     __end_of___fleq:
 16449                           	opt callstack 0
 16450                           
 16451 ;; *************** function ___fldiv *****************
 16452 ;; Defined at:
 16453 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 16454 ;; Parameters:    Size  Location     Type
 16455 ;;  b               4  [STACK] long 
 16456 ;;  a               4  [STACK] long 
 16457 ;; Auto vars:     Size  Location     Type
 16458 ;;  grs             4  [STACK] unsigned long 
 16459 ;;  rem             4  [STACK] unsigned long 
 16460 ;;  new_exp         2  [STACK] short 
 16461 ;;  aexp            1  [STACK] unsigned char 
 16462 ;;  bexp            1  [STACK] unsigned char 
 16463 ;;  sign            1  [STACK] unsigned char 
 16464 ;; Return value:  Size  Location     Type
 16465 ;;                  4  [STACK] unsigned char 
 16466 ;; Registers used:
 16467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 16468 ;; Tracked objects:
 16469 ;;		On entry : 0/1
 16470 ;;		On exit  : 0/0
 16471 ;;		Unchanged: 0/0
 16472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16477 ;;Total ram usage:        0 bytes
 16478 ;; Hardware stack levels used:    1
 16479 ;; Hardware stack levels required when called:   15
 16480 ;; This function calls:
 16481 ;;		Nothing
 16482 ;; This function is called by:
 16483 ;;		_conv_raw_result
 16484 ;;		_calc_bsoc
 16485 ;;		_init_bsoc
 16486 ;;		_efgtoa
 16487 ;; This function uses a reentrant model
 16488 ;;
 16489                           
 16490                           	psect	text60
 16491  013D62                     __ptext60:
 16492                           	opt callstack 0
 16493  013D62                     ___fldiv:
 16494                           	opt callstack 0
 16495                           
 16496                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16497  013D62  0E0D               	movlw	13
 16498  013D64  26E1               	addwf	fsr1l,f,c
 16499  013D66  0E00               	movlw	0
 16500  013D68  22E2               	addwfc	fsr1h,f,c
 16501                           
 16502                           ;stkvar	_b @ sp[(-13)+-4]
 16503                           
 16504                           ;incstack = 0
 16505 ;; hardware stack exceeded
 16506  013D6A  0EF2               	movlw	242
 16507  013D6C  24E1               	addwf	fsr1l,w,c
 16508  013D6E  6ED9               	movwf	fsr2l,c
 16509  013D70  0EFF               	movlw	255
 16510  013D72  20E2               	addwfc	fsr1h,w,c
 16511  013D74  6EDA               	movwf	fsr2h,c
 16512  013D76  50DF               	movf	indf2,w,c
 16513  013D78  6E0C               	movwf	(btemp+11)^0,c
 16514  013D7A  0E80               	movlw	128
 16515  013D7C  160C               	andwf	(btemp+11)^0,f,c
 16516                           
 16517                           ;stkvar	_sign @ sp[(-13)+12]
 16518  013D7E  0EFF               	movlw	-1
 16519  013D80  0060  F033  FFE3   	movff	btemp+11,plusw1
 16520                           
 16521                           ;stkvar	_b @ sp[(-13)+-4]
 16522  013D86  0EF2               	movlw	242
 16523  013D88  24E1               	addwf	fsr1l,w,c
 16524  013D8A  6ED9               	movwf	fsr2l,c
 16525  013D8C  0EFF               	movlw	255
 16526  013D8E  20E2               	addwfc	fsr1h,w,c
 16527  013D90  6EDA               	movwf	fsr2h,c
 16528  013D92  50DF               	movf	indf2,w,c
 16529  013D94  6E0C               	movwf	(btemp+11)^0,c
 16530  013D96  90D8               	bcf	status,0,c
 16531  013D98  340C               	rlcf	(btemp+11)^0,w,c
 16532  013D9A  6E0B               	movwf	(btemp+10)^0,c
 16533                           
 16534                           ;stkvar	_bexp @ sp[(-13)+11]
 16535  013D9C  0EFE               	movlw	-2
 16536  013D9E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16537                           
 16538                           ;stkvar	_b @ sp[(-13)+-4]
 16539  013DA4  0EF1               	movlw	241
 16540  013DA6  24E1               	addwf	fsr1l,w,c
 16541  013DA8  6ED9               	movwf	fsr2l,c
 16542  013DAA  0EFF               	movlw	255
 16543  013DAC  20E2               	addwfc	fsr1h,w,c
 16544  013DAE  6EDA               	movwf	fsr2h,c
 16545  013DB0  AEDF               	btfss	indf2,7,c
 16546  013DB2  D002               	goto	l7380
 16547                           
 16548                           ;stkvar	_bexp @ sp[(-13)+11]
 16549  013DB4  0EFE               	movlw	-2
 16550  013DB6  80E3               	bsf	plusw1,0,c
 16551  013DB8                     l7380:
 16552                           
 16553                           ;stkvar	_bexp @ sp[(-13)+11]
 16554  013DB8  0EFE               	movlw	-2
 16555  013DBA  50E3               	movf	plusw1,w,c
 16556  013DBC  B4D8               	btfsc	status,2,c
 16557  013DBE  D027               	goto	l7390
 16558                           
 16559                           ;stkvar	_bexp @ sp[(-13)+11]
 16560  013DC0  0EFE               	movlw	-2
 16561  013DC2  28E3               	incf	plusw1,w,c
 16562  013DC4  A4D8               	btfss	status,2,c
 16563  013DC6  D018               	goto	l7386
 16564  013DC8  0E00               	movlw	0
 16565  013DCA  6E09               	movwf	(btemp+8)^0,c
 16566  013DCC  0E00               	movlw	0
 16567  013DCE  6E0A               	movwf	(btemp+9)^0,c
 16568  013DD0  0E00               	movlw	0
 16569  013DD2  6E0B               	movwf	(btemp+10)^0,c
 16570  013DD4  0E00               	movlw	0
 16571  013DD6  6E0C               	movwf	(btemp+11)^0,c
 16572                           
 16573                           ;stkvar	_b @ sp[(-13)+-4]
 16574  013DD8  0EEF               	movlw	-17
 16575  013DDA  0060  F027  FFE3   	movff	btemp+8,plusw1
 16576  013DE0  0EF0               	movlw	-16
 16577  013DE2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16578  013DE8  0EF1               	movlw	-15
 16579  013DEA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16580  013DF0  0EF2               	movlw	-14
 16581  013DF2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16582  013DF8                     l7386:
 16583                           
 16584                           ;stkvar	_b @ sp[(-13)+-4]
 16585  013DF8  0EF1               	movlw	-15
 16586  013DFA  8EE3               	bsf	plusw1,7,c
 16587                           
 16588                           ;stkvar	_b @ sp[(-13)+-4]
 16589  013DFC  0EF2               	movlw	242
 16590  013DFE  24E1               	addwf	fsr1l,w,c
 16591  013E00  6ED9               	movwf	fsr2l,c
 16592  013E02  0EFF               	movlw	255
 16593  013E04  20E2               	addwfc	fsr1h,w,c
 16594  013E06  6EDA               	movwf	fsr2h,c
 16595  013E08  0E00               	movlw	0
 16596  013E0A  6EDF               	movwf	indf2,c
 16597  013E0C  D018               	goto	l7392
 16598  013E0E                     l7390:
 16599  013E0E  0E00               	movlw	0
 16600  013E10  6E09               	movwf	(btemp+8)^0,c
 16601  013E12  0E00               	movlw	0
 16602  013E14  6E0A               	movwf	(btemp+9)^0,c
 16603  013E16  0E00               	movlw	0
 16604  013E18  6E0B               	movwf	(btemp+10)^0,c
 16605  013E1A  0E00               	movlw	0
 16606  013E1C  6E0C               	movwf	(btemp+11)^0,c
 16607                           
 16608                           ;stkvar	_b @ sp[(-13)+-4]
 16609  013E1E  0EEF               	movlw	-17
 16610  013E20  0060  F027  FFE3   	movff	btemp+8,plusw1
 16611  013E26  0EF0               	movlw	-16
 16612  013E28  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16613  013E2E  0EF1               	movlw	-15
 16614  013E30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16615  013E36  0EF2               	movlw	-14
 16616  013E38  0060  F033  FFE3   	movff	btemp+11,plusw1
 16617  013E3E                     l7392:
 16618                           
 16619                           ;stkvar	_a @ sp[(-13)+-8]
 16620  013E3E  0EEE               	movlw	238
 16621  013E40  24E1               	addwf	fsr1l,w,c
 16622  013E42  6ED9               	movwf	fsr2l,c
 16623  013E44  0EFF               	movlw	255
 16624  013E46  20E2               	addwfc	fsr1h,w,c
 16625  013E48  6EDA               	movwf	fsr2h,c
 16626  013E4A  50DF               	movf	indf2,w,c
 16627  013E4C  6E0C               	movwf	(btemp+11)^0,c
 16628  013E4E  0E80               	movlw	128
 16629  013E50  160C               	andwf	(btemp+11)^0,f,c
 16630                           
 16631                           ;stkvar	_sign @ sp[(-13)+12]
 16632  013E52  50E1               	movf	fsr1l,w,c
 16633  013E54  0FFF               	addlw	-1
 16634  013E56  6ED9               	movwf	fsr2l,c
 16635  013E58  50E2               	movf	fsr1h,w,c
 16636  013E5A  6EDA               	movwf	fsr2h,c
 16637  013E5C  0EFF               	movlw	255
 16638  013E5E  22DA               	addwfc	fsr2h,f,c
 16639  013E60  500C               	movf	(btemp+11)^0,w,c
 16640  013E62  1ADF               	xorwf	indf2,f,c
 16641                           
 16642                           ;stkvar	_a @ sp[(-13)+-8]
 16643  013E64  0EEE               	movlw	238
 16644  013E66  24E1               	addwf	fsr1l,w,c
 16645  013E68  6ED9               	movwf	fsr2l,c
 16646  013E6A  0EFF               	movlw	255
 16647  013E6C  20E2               	addwfc	fsr1h,w,c
 16648  013E6E  6EDA               	movwf	fsr2h,c
 16649  013E70  50DF               	movf	indf2,w,c
 16650  013E72  6E0C               	movwf	(btemp+11)^0,c
 16651  013E74  90D8               	bcf	status,0,c
 16652  013E76  340C               	rlcf	(btemp+11)^0,w,c
 16653  013E78  6E0B               	movwf	(btemp+10)^0,c
 16654                           
 16655                           ;stkvar	_aexp @ sp[(-13)+10]
 16656  013E7A  0EFD               	movlw	-3
 16657  013E7C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16658                           
 16659                           ;stkvar	_a @ sp[(-13)+-8]
 16660  013E82  0EED               	movlw	237
 16661  013E84  24E1               	addwf	fsr1l,w,c
 16662  013E86  6ED9               	movwf	fsr2l,c
 16663  013E88  0EFF               	movlw	255
 16664  013E8A  20E2               	addwfc	fsr1h,w,c
 16665  013E8C  6EDA               	movwf	fsr2h,c
 16666  013E8E  AEDF               	btfss	indf2,7,c
 16667  013E90  D002               	goto	l7400
 16668                           
 16669                           ;stkvar	_aexp @ sp[(-13)+10]
 16670  013E92  0EFD               	movlw	-3
 16671  013E94  80E3               	bsf	plusw1,0,c
 16672  013E96                     l7400:
 16673                           
 16674                           ;stkvar	_aexp @ sp[(-13)+10]
 16675  013E96  0EFD               	movlw	-3
 16676  013E98  50E3               	movf	plusw1,w,c
 16677  013E9A  B4D8               	btfsc	status,2,c
 16678  013E9C  D027               	goto	l7410
 16679                           
 16680                           ;stkvar	_aexp @ sp[(-13)+10]
 16681  013E9E  0EFD               	movlw	-3
 16682  013EA0  28E3               	incf	plusw1,w,c
 16683  013EA2  A4D8               	btfss	status,2,c
 16684  013EA4  D018               	goto	l7406
 16685  013EA6  0E00               	movlw	0
 16686  013EA8  6E09               	movwf	(btemp+8)^0,c
 16687  013EAA  0E00               	movlw	0
 16688  013EAC  6E0A               	movwf	(btemp+9)^0,c
 16689  013EAE  0E00               	movlw	0
 16690  013EB0  6E0B               	movwf	(btemp+10)^0,c
 16691  013EB2  0E00               	movlw	0
 16692  013EB4  6E0C               	movwf	(btemp+11)^0,c
 16693                           
 16694                           ;stkvar	_a @ sp[(-13)+-8]
 16695  013EB6  0EEB               	movlw	-21
 16696  013EB8  0060  F027  FFE3   	movff	btemp+8,plusw1
 16697  013EBE  0EEC               	movlw	-20
 16698  013EC0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16699  013EC6  0EED               	movlw	-19
 16700  013EC8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16701  013ECE  0EEE               	movlw	-18
 16702  013ED0  0060  F033  FFE3   	movff	btemp+11,plusw1
 16703  013ED6                     l7406:
 16704                           
 16705                           ;stkvar	_a @ sp[(-13)+-8]
 16706  013ED6  0EED               	movlw	-19
 16707  013ED8  8EE3               	bsf	plusw1,7,c
 16708                           
 16709                           ;stkvar	_a @ sp[(-13)+-8]
 16710  013EDA  0EEE               	movlw	238
 16711  013EDC  24E1               	addwf	fsr1l,w,c
 16712  013EDE  6ED9               	movwf	fsr2l,c
 16713  013EE0  0EFF               	movlw	255
 16714  013EE2  20E2               	addwfc	fsr1h,w,c
 16715  013EE4  6EDA               	movwf	fsr2h,c
 16716  013EE6  0E00               	movlw	0
 16717  013EE8  6EDF               	movwf	indf2,c
 16718  013EEA  D018               	goto	l7412
 16719  013EEC                     l7410:
 16720  013EEC  0E00               	movlw	0
 16721  013EEE  6E09               	movwf	(btemp+8)^0,c
 16722  013EF0  0E00               	movlw	0
 16723  013EF2  6E0A               	movwf	(btemp+9)^0,c
 16724  013EF4  0E00               	movlw	0
 16725  013EF6  6E0B               	movwf	(btemp+10)^0,c
 16726  013EF8  0E00               	movlw	0
 16727  013EFA  6E0C               	movwf	(btemp+11)^0,c
 16728                           
 16729                           ;stkvar	_a @ sp[(-13)+-8]
 16730  013EFC  0EEB               	movlw	-21
 16731  013EFE  0060  F027  FFE3   	movff	btemp+8,plusw1
 16732  013F04  0EEC               	movlw	-20
 16733  013F06  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16734  013F0C  0EED               	movlw	-19
 16735  013F0E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16736  013F14  0EEE               	movlw	-18
 16737  013F16  0060  F033  FFE3   	movff	btemp+11,plusw1
 16738  013F1C                     l7412:
 16739                           
 16740                           ;stkvar	_a @ sp[(-13)+-8]
 16741  013F1C  0EEB               	movlw	-21
 16742  013F1E  50E3               	movf	plusw1,w,c
 16743  013F20  E139               	bnz	l7424
 16744  013F22  0EEC               	movlw	-20
 16745  013F24  50E3               	movf	plusw1,w,c
 16746  013F26  E136               	bnz	l7424
 16747  013F28  0EED               	movlw	-19
 16748  013F2A  50E3               	movf	plusw1,w,c
 16749  013F2C  E133               	bnz	l7424
 16750  013F2E  0EEE               	movlw	-18
 16751  013F30  50E3               	movf	plusw1,w,c
 16752  013F32  A4D8               	btfss	status,2,c
 16753  013F34  D02F               	goto	l7424
 16754                           
 16755                           ;stkvar	_b @ sp[(-13)+-4]
 16756  013F36  0EEF               	movlw	-17
 16757  013F38  6AE3               	clrf	plusw1,c
 16758  013F3A  0EF0               	movlw	-16
 16759  013F3C  6AE3               	clrf	plusw1,c
 16760  013F3E  0EF1               	movlw	-15
 16761  013F40  6AE3               	clrf	plusw1,c
 16762  013F42  0EF2               	movlw	-14
 16763  013F44  6AE3               	clrf	plusw1,c
 16764                           
 16765                           ;stkvar	_b @ sp[(-13)+-4]
 16766  013F46  0EF1               	movlw	241
 16767  013F48  24E1               	addwf	fsr1l,w,c
 16768  013F4A  6ED9               	movwf	fsr2l,c
 16769  013F4C  0EFF               	movlw	255
 16770  013F4E  20E2               	addwfc	fsr1h,w,c
 16771  013F50  6EDA               	movwf	fsr2h,c
 16772  013F52  0E80               	movlw	128
 16773  013F54  12DE               	iorwf	postinc2,f,c
 16774  013F56  0E7F               	movlw	127
 16775  013F58  12DD               	iorwf	postdec2,f,c
 16776  013F5A                     l7418:
 16777                           
 16778                           ;stkvar	_sign @ sp[(-13)+12]
 16779  013F5A  0EFF               	movlw	-1
 16780  013F5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 16781                           
 16782                           ;stkvar	_b @ sp[(-13)+-4]
 16783  013F62  0EF2               	movlw	242
 16784  013F64  24E1               	addwf	fsr1l,w,c
 16785  013F66  6ED9               	movwf	fsr2l,c
 16786  013F68  0EFF               	movlw	255
 16787  013F6A  20E2               	addwfc	fsr1h,w,c
 16788  013F6C  6EDA               	movwf	fsr2h,c
 16789  013F6E  500C               	movf	(btemp+11)^0,w,c
 16790  013F70  12DF               	iorwf	indf2,f,c
 16791                           
 16792                           ;stkvar	_b @ sp[(-13)+-4]
 16793  013F72  0EEF               	movlw	-17
 16794  013F74  006F FF8C  F001    	movff	plusw1,btemp
 16795  013F7A  0EF0               	movlw	-16
 16796  013F7C  006F FF8C  F002    	movff	plusw1,btemp+1
 16797  013F82  0EF1               	movlw	-15
 16798  013F84  006F FF8C  F003    	movff	plusw1,btemp+2
 16799  013F8A  0EF2               	movlw	-14
 16800  013F8C  006F FF8C  F004    	movff	plusw1,btemp+3
 16801  013F92  D19F               	goto	l2817
 16802  013F94                     l7424:
 16803                           
 16804                           ;stkvar	_bexp @ sp[(-13)+11]
 16805  013F94  0EFE               	movlw	-2
 16806  013F96  50E3               	movf	plusw1,w,c
 16807  013F98  A4D8               	btfss	status,2,c
 16808  013F9A  D009               	goto	l7432
 16809  013F9C  0E00               	movlw	0
 16810  013F9E  6E01               	movwf	btemp^0,c
 16811  013FA0  0E00               	movlw	0
 16812  013FA2  6E02               	movwf	(btemp+1)^0,c
 16813  013FA4  0E00               	movlw	0
 16814  013FA6  6E03               	movwf	(btemp+2)^0,c
 16815  013FA8  0E00               	movlw	0
 16816  013FAA  6E04               	movwf	(btemp+3)^0,c
 16817  013FAC  D192               	goto	l2817
 16818  013FAE                     l7432:
 16819                           
 16820                           ;stkvar	_bexp @ sp[(-13)+11]
 16821  013FAE  0EFE               	movlw	-2
 16822  013FB0  50E3               	movf	plusw1,w,c
 16823  013FB2  6E0B               	movwf	(btemp+10)^0,c
 16824  013FB4  6A0C               	clrf	(btemp+11)^0,c
 16825                           
 16826                           ;stkvar	_aexp @ sp[(-13)+10]
 16827  013FB6  0EFD               	movlw	-3
 16828  013FB8  50E3               	movf	plusw1,w,c
 16829  013FBA  5E0B               	subwf	(btemp+10)^0,f,c
 16830  013FBC  0E00               	movlw	0
 16831  013FBE  5A0C               	subwfb	(btemp+11)^0,f,c
 16832  013FC0  0E7F               	movlw	127
 16833  013FC2  260B               	addwf	(btemp+10)^0,f,c
 16834  013FC4  0E00               	movlw	0
 16835  013FC6  220C               	addwfc	(btemp+11)^0,f,c
 16836                           
 16837                           ;stkvar	_new_exp @ sp[(-13)+8]
 16838  013FC8  0EFB               	movlw	-5
 16839  013FCA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16840  013FD0  0EFC               	movlw	-4
 16841  013FD2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16842                           
 16843                           ;stkvar	_b @ sp[(-13)+-4]
 16844  013FD8  0EEF               	movlw	-17
 16845  013FDA  006F FF8C  F009    	movff	plusw1,btemp+8
 16846  013FE0  0EF0               	movlw	-16
 16847  013FE2  006F FF8C  F00A    	movff	plusw1,btemp+9
 16848  013FE8  0EF1               	movlw	-15
 16849  013FEA  006F FF8C  F00B    	movff	plusw1,btemp+10
 16850  013FF0  0EF2               	movlw	-14
 16851  013FF2  006F FF8C  F00C    	movff	plusw1,btemp+11
 16852                           
 16853                           ;stkvar	_rem @ sp[(-13)+4]
 16854  013FF8  0EF7               	movlw	-9
 16855  013FFA  0060  F027  FFE3   	movff	btemp+8,plusw1
 16856  014000  0EF8               	movlw	-8
 16857  014002  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16858  014008  0EF9               	movlw	-7
 16859  01400A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16860  014010  0EFA               	movlw	-6
 16861  014012  0060  F033  FFE3   	movff	btemp+11,plusw1
 16862                           
 16863                           ;stkvar	_b @ sp[(-13)+-4]
 16864  014018  0EEF               	movlw	-17
 16865  01401A  6AE3               	clrf	plusw1,c
 16866  01401C  0EF0               	movlw	-16
 16867  01401E  6AE3               	clrf	plusw1,c
 16868  014020  0EF1               	movlw	-15
 16869  014022  6AE3               	clrf	plusw1,c
 16870  014024  0EF2               	movlw	-14
 16871  014026  6AE3               	clrf	plusw1,c
 16872                           
 16873                           ;stkvar	_grs @ sp[(-13)+0]
 16874  014028  0EF3               	movlw	-13
 16875  01402A  6AE3               	clrf	plusw1,c
 16876  01402C  0EF4               	movlw	-12
 16877  01402E  6AE3               	clrf	plusw1,c
 16878  014030  0EF5               	movlw	-11
 16879  014032  6AE3               	clrf	plusw1,c
 16880  014034  0EF6               	movlw	-10
 16881  014036  6AE3               	clrf	plusw1,c
 16882                           
 16883                           ;stkvar	_aexp @ sp[(-13)+10]
 16884  014038  0EFD               	movlw	-3
 16885  01403A  6AE3               	clrf	plusw1,c
 16886  01403C  D050               	goto	l7460
 16887  01403E                     l7442:
 16888                           
 16889                           ;stkvar	_aexp @ sp[(-13)+10]
 16890  01403E  0EFD               	movlw	-3
 16891  014040  50E3               	movf	plusw1,w,c
 16892  014042  B4D8               	btfsc	status,2,c
 16893  014044  D020               	goto	l7452
 16894                           
 16895                           ;stkvar	_rem @ sp[(-13)+4]
 16896  014046  90D8               	bcf	status,0,c
 16897  014048  0EF7               	movlw	-9
 16898  01404A  36E3               	rlcf	plusw1,f,c
 16899  01404C  0EF8               	movlw	-8
 16900  01404E  36E3               	rlcf	plusw1,f,c
 16901  014050  0EF9               	movlw	-7
 16902  014052  36E3               	rlcf	plusw1,f,c
 16903  014054  0EFA               	movlw	-6
 16904  014056  36E3               	rlcf	plusw1,f,c
 16905                           
 16906                           ;stkvar	_b @ sp[(-13)+-4]
 16907  014058  90D8               	bcf	status,0,c
 16908  01405A  0EEF               	movlw	-17
 16909  01405C  36E3               	rlcf	plusw1,f,c
 16910  01405E  0EF0               	movlw	-16
 16911  014060  36E3               	rlcf	plusw1,f,c
 16912  014062  0EF1               	movlw	-15
 16913  014064  36E3               	rlcf	plusw1,f,c
 16914  014066  0EF2               	movlw	-14
 16915  014068  36E3               	rlcf	plusw1,f,c
 16916                           
 16917                           ;stkvar	_grs @ sp[(-13)+0]
 16918  01406A  0EF6               	movlw	-10
 16919  01406C  AEE3               	btfss	plusw1,7,c
 16920  01406E  D002               	goto	l7450
 16921                           
 16922                           ;stkvar	_b @ sp[(-13)+-4]
 16923  014070  0EEF               	movlw	-17
 16924  014072  80E3               	bsf	plusw1,0,c
 16925  014074                     l7450:
 16926                           
 16927                           ;stkvar	_grs @ sp[(-13)+0]
 16928  014074  90D8               	bcf	status,0,c
 16929  014076  0EF3               	movlw	-13
 16930  014078  36E3               	rlcf	plusw1,f,c
 16931  01407A  0EF4               	movlw	-12
 16932  01407C  36E3               	rlcf	plusw1,f,c
 16933  01407E  0EF5               	movlw	-11
 16934  014080  36E3               	rlcf	plusw1,f,c
 16935  014082  0EF6               	movlw	-10
 16936  014084  36E3               	rlcf	plusw1,f,c
 16937  014086                     l7452:
 16938                           
 16939                           ;stkvar	_a @ sp[(-13)+-8]
 16940                           ;stkvar	_rem @ sp[(-13)+4]
 16941  014086  50E1               	movf	fsr1l,w,c
 16942  014088  0FF7               	addlw	-9
 16943  01408A  6ED9               	movwf	fsr2l,c
 16944  01408C  50E2               	movf	fsr1h,w,c
 16945  01408E  6EDA               	movwf	fsr2h,c
 16946  014090  0EFF               	movlw	255
 16947  014092  22DA               	addwfc	fsr2h,f,c
 16948  014094  0EEB               	movlw	-21
 16949  014096  50E3               	movf	plusw1,w,c
 16950  014098  5CDE               	subwf	postinc2,w,c
 16951  01409A  0EEC               	movlw	-20
 16952  01409C  50E3               	movf	plusw1,w,c
 16953  01409E  58DE               	subwfb	postinc2,w,c
 16954  0140A0  0EED               	movlw	-19
 16955  0140A2  50E3               	movf	plusw1,w,c
 16956  0140A4  58DE               	subwfb	postinc2,w,c
 16957  0140A6  0EEE               	movlw	-18
 16958  0140A8  50E3               	movf	plusw1,w,c
 16959  0140AA  58DE               	subwfb	postinc2,w,c
 16960  0140AC  A0D8               	btfss	status,0,c
 16961  0140AE  D015               	goto	l7458
 16962                           
 16963                           ;stkvar	_grs @ sp[(-13)+0]
 16964  0140B0  0EF6               	movlw	-10
 16965  0140B2  8CE3               	bsf	plusw1,6,c
 16966                           
 16967                           ;stkvar	_a @ sp[(-13)+-8]
 16968                           ;stkvar	_rem @ sp[(-13)+4]
 16969  0140B4  50E1               	movf	fsr1l,w,c
 16970  0140B6  0FF7               	addlw	-9
 16971  0140B8  6ED9               	movwf	fsr2l,c
 16972  0140BA  50E2               	movf	fsr1h,w,c
 16973  0140BC  6EDA               	movwf	fsr2h,c
 16974  0140BE  0EFF               	movlw	255
 16975  0140C0  22DA               	addwfc	fsr2h,f,c
 16976  0140C2  0EEB               	movlw	-21
 16977  0140C4  50E3               	movf	plusw1,w,c
 16978  0140C6  5EDE               	subwf	postinc2,f,c
 16979  0140C8  0EEC               	movlw	-20
 16980  0140CA  50E3               	movf	plusw1,w,c
 16981  0140CC  5ADE               	subwfb	postinc2,f,c
 16982  0140CE  0EED               	movlw	-19
 16983  0140D0  50E3               	movf	plusw1,w,c
 16984  0140D2  5ADE               	subwfb	postinc2,f,c
 16985  0140D4  0EEE               	movlw	-18
 16986  0140D6  50E3               	movf	plusw1,w,c
 16987  0140D8  5ADE               	subwfb	postinc2,f,c
 16988  0140DA                     l7458:
 16989                           
 16990                           ;stkvar	_aexp @ sp[(-13)+10]
 16991  0140DA  0EFD               	movlw	-3
 16992  0140DC  2AE3               	incf	plusw1,f,c
 16993  0140DE                     l7460:
 16994                           
 16995                           ;stkvar	_aexp @ sp[(-13)+10]
 16996  0140DE  0EFD               	movlw	-3
 16997  0140E0  006F FF8C  F001    	movff	plusw1,btemp
 16998  0140E6  0E19               	movlw	25
 16999  0140E8  6401               	cpfsgt	btemp^0,c
 17000  0140EA  D7A9               	goto	l7442
 17001                           
 17002                           ;stkvar	_rem @ sp[(-13)+4]
 17003  0140EC  0EF7               	movlw	-9
 17004  0140EE  50E3               	movf	plusw1,w,c
 17005  0140F0  E10A               	bnz	u5890
 17006  0140F2  0EF8               	movlw	-8
 17007  0140F4  50E3               	movf	plusw1,w,c
 17008  0140F6  E107               	bnz	u5890
 17009  0140F8  0EF9               	movlw	-7
 17010  0140FA  50E3               	movf	plusw1,w,c
 17011  0140FC  E104               	bnz	u5890
 17012  0140FE  0EFA               	movlw	-6
 17013  014100  50E3               	movf	plusw1,w,c
 17014  014102  B4D8               	btfsc	status,2,c
 17015  014104  D024               	goto	l7476
 17016  014106                     u5890:
 17017                           
 17018                           ;stkvar	_grs @ sp[(-13)+0]
 17019  014106  0EF3               	movlw	-13
 17020  014108  80E3               	bsf	plusw1,0,c
 17021  01410A  D021               	goto	l7476
 17022  01410C                     l7466:
 17023                           
 17024                           ;stkvar	_b @ sp[(-13)+-4]
 17025  01410C  90D8               	bcf	status,0,c
 17026  01410E  0EEF               	movlw	-17
 17027  014110  36E3               	rlcf	plusw1,f,c
 17028  014112  0EF0               	movlw	-16
 17029  014114  36E3               	rlcf	plusw1,f,c
 17030  014116  0EF1               	movlw	-15
 17031  014118  36E3               	rlcf	plusw1,f,c
 17032  01411A  0EF2               	movlw	-14
 17033  01411C  36E3               	rlcf	plusw1,f,c
 17034                           
 17035                           ;stkvar	_grs @ sp[(-13)+0]
 17036  01411E  0EF6               	movlw	-10
 17037  014120  AEE3               	btfss	plusw1,7,c
 17038  014122  D002               	goto	l7472
 17039                           
 17040                           ;stkvar	_b @ sp[(-13)+-4]
 17041  014124  0EEF               	movlw	-17
 17042  014126  80E3               	bsf	plusw1,0,c
 17043  014128                     l7472:
 17044                           
 17045                           ;stkvar	_grs @ sp[(-13)+0]
 17046  014128  90D8               	bcf	status,0,c
 17047  01412A  0EF3               	movlw	-13
 17048  01412C  36E3               	rlcf	plusw1,f,c
 17049  01412E  0EF4               	movlw	-12
 17050  014130  36E3               	rlcf	plusw1,f,c
 17051  014132  0EF5               	movlw	-11
 17052  014134  36E3               	rlcf	plusw1,f,c
 17053  014136  0EF6               	movlw	-10
 17054  014138  36E3               	rlcf	plusw1,f,c
 17055                           
 17056                           ;stkvar	_new_exp @ sp[(-13)+8]
 17057  01413A  50E1               	movf	fsr1l,w,c
 17058  01413C  0FFB               	addlw	-5
 17059  01413E  6ED9               	movwf	fsr2l,c
 17060  014140  50E2               	movf	fsr1h,w,c
 17061  014142  6EDA               	movwf	fsr2h,c
 17062  014144  0EFF               	movlw	255
 17063  014146  22DA               	addwfc	fsr2h,f,c
 17064  014148  06DE               	decf	postinc2,f,c
 17065  01414A  0E00               	movlw	0
 17066  01414C  5ADD               	subwfb	postdec2,f,c
 17067  01414E                     l7476:
 17068                           
 17069                           ;stkvar	_b @ sp[(-13)+-4]
 17070  01414E  0EF1               	movlw	-15
 17071  014150  AEE3               	btfss	plusw1,7,c
 17072  014152  D7DC               	goto	l7466
 17073                           
 17074                           ;stkvar	_aexp @ sp[(-13)+10]
 17075  014154  0EFD               	movlw	-3
 17076  014156  6AE3               	clrf	plusw1,c
 17077                           
 17078                           ;stkvar	_grs @ sp[(-13)+0]
 17079  014158  0EF6               	movlw	-10
 17080  01415A  AEE3               	btfss	plusw1,7,c
 17081  01415C  D020               	goto	l7490
 17082                           
 17083                           ;stkvar	_grs @ sp[(-13)+0]
 17084  01415E  50E1               	movf	fsr1l,w,c
 17085  014160  0FF3               	addlw	-13
 17086  014162  6ED9               	movwf	fsr2l,c
 17087  014164  50E2               	movf	fsr1h,w,c
 17088  014166  6EDA               	movwf	fsr2h,c
 17089  014168  0EFF               	movlw	255
 17090  01416A  22DA               	addwfc	fsr2h,f,c
 17091  01416C  0EFF               	movlw	255
 17092  01416E  14DE               	andwf	postinc2,w,c
 17093  014170  6E09               	movwf	(btemp+8)^0,c
 17094  014172  0EFF               	movlw	255
 17095  014174  14DE               	andwf	postinc2,w,c
 17096  014176  6E0A               	movwf	(btemp+9)^0,c
 17097  014178  0EFF               	movlw	255
 17098  01417A  14DE               	andwf	postinc2,w,c
 17099  01417C  6E0B               	movwf	(btemp+10)^0,c
 17100  01417E  0E7F               	movlw	127
 17101  014180  14DE               	andwf	postinc2,w,c
 17102  014182  6E0C               	movwf	(btemp+11)^0,c
 17103  014184  5009               	movf	(btemp+8)^0,w,c
 17104  014186  100A               	iorwf	(btemp+9)^0,w,c
 17105  014188  100B               	iorwf	(btemp+10)^0,w,c
 17106  01418A  100C               	iorwf	(btemp+11)^0,w,c
 17107  01418C  B4D8               	btfsc	status,2,c
 17108  01418E  D004               	goto	l7486
 17109  014190                     u5930:
 17110                           
 17111                           ;stkvar	_aexp @ sp[(-13)+10]
 17112  014190  0EFD               	movlw	-3
 17113  014192  6AE3               	clrf	plusw1,c
 17114  014194  2AE3               	incf	plusw1,f,c
 17115  014196  D003               	goto	l7490
 17116  014198                     l7486:
 17117                           
 17118                           ;stkvar	_b @ sp[(-13)+-4]
 17119  014198  0EEF               	movlw	-17
 17120  01419A  B0E3               	btfsc	plusw1,0,c
 17121  01419C  D7F9               	goto	u5930
 17122  01419E                     l7490:
 17123                           
 17124                           ;stkvar	_aexp @ sp[(-13)+10]
 17125  01419E  0EFD               	movlw	-3
 17126  0141A0  50E3               	movf	plusw1,w,c
 17127  0141A2  B4D8               	btfsc	status,2,c
 17128  0141A4  D036               	goto	l7500
 17129                           
 17130                           ;stkvar	_b @ sp[(-13)+-4]
 17131  0141A6  50E1               	movf	fsr1l,w,c
 17132  0141A8  0FEF               	addlw	-17
 17133  0141AA  6ED9               	movwf	fsr2l,c
 17134  0141AC  50E2               	movf	fsr1h,w,c
 17135  0141AE  6EDA               	movwf	fsr2h,c
 17136  0141B0  0EFF               	movlw	255
 17137  0141B2  22DA               	addwfc	fsr2h,f,c
 17138  0141B4  2ADE               	incf	postinc2,f,c
 17139  0141B6  0E00               	movlw	0
 17140  0141B8  22DE               	addwfc	postinc2,f,c
 17141  0141BA  22DE               	addwfc	postinc2,f,c
 17142  0141BC  22DE               	addwfc	postinc2,f,c
 17143                           
 17144                           ;stkvar	_b @ sp[(-13)+-4]
 17145  0141BE  0EF2               	movlw	-14
 17146  0141C0  A0E3               	btfss	plusw1,0,c
 17147  0141C2  D027               	goto	l7500
 17148  0141C4  0E01               	movlw	1
 17149  0141C6  6E0C               	movwf	(btemp+11)^0,c
 17150                           
 17151                           ;stkvar	_b @ sp[(-13)+-4]
 17152  0141C8  50E1               	movf	fsr1l,w,c
 17153  0141CA  0FEF               	addlw	-17
 17154  0141CC  6ED9               	movwf	fsr2l,c
 17155  0141CE  50E2               	movf	fsr1h,w,c
 17156  0141D0  6EDA               	movwf	fsr2h,c
 17157  0141D2  0EFF               	movlw	255
 17158  0141D4  22DA               	addwfc	fsr2h,f,c
 17159  0141D6  280C               	incf	(btemp+11)^0,w,c
 17160  0141D8  52DE               	movf	postinc2,f,c
 17161  0141DA  D008               	goto	u5970
 17162  0141DC                     u5975:
 17163  0141DC  52DE               	movf	postinc2,f,c
 17164  0141DE  90D8               	bcf	status,0,c
 17165  0141E0  BEDC               	btfsc	preinc2,7,c
 17166  0141E2  80D8               	bsf	status,0,c
 17167  0141E4  32DD               	rrcf	postdec2,f,c
 17168  0141E6  32DD               	rrcf	postdec2,f,c
 17169  0141E8  32DD               	rrcf	postdec2,f,c
 17170  0141EA  32DE               	rrcf	postinc2,f,c
 17171  0141EC                     u5970:
 17172  0141EC  2EE8               	decfsz	wreg,f,c
 17173  0141EE  D7F6               	goto	u5975
 17174                           
 17175                           ;stkvar	_new_exp @ sp[(-13)+8]
 17176  0141F0  0EFB               	movlw	-5
 17177  0141F2  50E3               	movf	plusw1,w,c
 17178  0141F4  0F01               	addlw	1
 17179  0141F6  6E01               	movwf	btemp^0,c
 17180  0141F8  0EFB               	movlw	-5
 17181  0141FA  0060  F007  FFE3   	movff	btemp,plusw1
 17182  014200  6A01               	clrf	btemp^0,c
 17183  014202  0EFC               	movlw	-4
 17184  014204  50E3               	movf	plusw1,w,c
 17185  014206  2001               	addwfc	btemp^0,w,c
 17186  014208  6E01               	movwf	btemp^0,c
 17187  01420A  0EFC               	movlw	-4
 17188  01420C  0060  F007  FFE3   	movff	btemp,plusw1
 17189  014212                     l7500:
 17190                           
 17191                           ;stkvar	_new_exp @ sp[(-13)+8]
 17192  014212  0EFC               	movlw	-4
 17193  014214  BEE3               	btfsc	plusw1,7,c
 17194  014216  D01B               	goto	l7506
 17195  014218  0EFC               	movlw	-4
 17196  01421A  50E3               	movf	plusw1,w,c
 17197  01421C  E104               	bnz	u5980
 17198  01421E  0EFB               	movlw	-5
 17199  014220  28E3               	incf	plusw1,w,c
 17200  014222  A0D8               	btfss	status,0,c
 17201  014224  D014               	goto	l7506
 17202  014226                     u5980:
 17203  014226  0EFF               	movlw	255
 17204  014228  6E0B               	movwf	(btemp+10)^0,c
 17205  01422A  0E00               	movlw	0
 17206  01422C  6E0C               	movwf	(btemp+11)^0,c
 17207                           
 17208                           ;stkvar	_new_exp @ sp[(-13)+8]
 17209  01422E  0EFB               	movlw	-5
 17210  014230  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17211  014236  0EFC               	movlw	-4
 17212  014238  0060  F033  FFE3   	movff	btemp+11,plusw1
 17213                           
 17214                           ;stkvar	_b @ sp[(-13)+-4]
 17215  01423E  0EEF               	movlw	-17
 17216  014240  6AE3               	clrf	plusw1,c
 17217  014242  0EF0               	movlw	-16
 17218  014244  6AE3               	clrf	plusw1,c
 17219  014246  0EF1               	movlw	-15
 17220  014248  6AE3               	clrf	plusw1,c
 17221  01424A  0EF2               	movlw	-14
 17222  01424C  6AE3               	clrf	plusw1,c
 17223  01424E                     l7506:
 17224                           
 17225                           ;stkvar	_new_exp @ sp[(-13)+8]
 17226  01424E  0EFC               	movlw	-4
 17227  014250  BEE3               	btfsc	plusw1,7,c
 17228  014252  D007               	goto	u5990
 17229  014254  0EFC               	movlw	-4
 17230  014256  50E3               	movf	plusw1,w,c
 17231  014258  E112               	bnz	l7512
 17232  01425A  0EFB               	movlw	-5
 17233  01425C  04E3               	decf	plusw1,w,c
 17234  01425E  B0D8               	btfsc	status,0,c
 17235  014260  D00E               	goto	l7512
 17236  014262                     u5990:
 17237                           
 17238                           ;stkvar	_new_exp @ sp[(-13)+8]
 17239  014262  0EFB               	movlw	-5
 17240  014264  6AE3               	clrf	plusw1,c
 17241  014266  0EFC               	movlw	-4
 17242  014268  6AE3               	clrf	plusw1,c
 17243                           
 17244                           ;stkvar	_b @ sp[(-13)+-4]
 17245  01426A  0EEF               	movlw	-17
 17246  01426C  6AE3               	clrf	plusw1,c
 17247  01426E  0EF0               	movlw	-16
 17248  014270  6AE3               	clrf	plusw1,c
 17249  014272  0EF1               	movlw	-15
 17250  014274  6AE3               	clrf	plusw1,c
 17251  014276  0EF2               	movlw	-14
 17252  014278  6AE3               	clrf	plusw1,c
 17253                           
 17254                           ;stkvar	_sign @ sp[(-13)+12]
 17255  01427A  0EFF               	movlw	-1
 17256  01427C  6AE3               	clrf	plusw1,c
 17257  01427E                     l7512:
 17258                           
 17259                           ;stkvar	_new_exp @ sp[(-13)+8]
 17260                           ;stkvar	_bexp @ sp[(-13)+11]
 17261  01427E  0EFB               	movlw	-5
 17262  014280  006F FF8C  F001    	movff	plusw1,btemp
 17263  014286  0EFE               	movlw	-2
 17264  014288  0060  F007  FFE3   	movff	btemp,plusw1
 17265                           
 17266                           ;stkvar	_bexp @ sp[(-13)+11]
 17267  01428E  0EFE               	movlw	-2
 17268  014290  A0E3               	btfss	plusw1,0,c
 17269  014292  D009               	goto	l7518
 17270                           
 17271                           ;stkvar	_b @ sp[(-13)+-4]
 17272  014294  0EF1               	movlw	241
 17273  014296  24E1               	addwf	fsr1l,w,c
 17274  014298  6ED9               	movwf	fsr2l,c
 17275  01429A  0EFF               	movlw	255
 17276  01429C  20E2               	addwfc	fsr1h,w,c
 17277  01429E  6EDA               	movwf	fsr2h,c
 17278  0142A0  0E00               	movlw	0
 17279  0142A2  8EDB               	bsf	plusw2,7,c
 17280  0142A4  D008               	goto	l7520
 17281  0142A6                     l7518:
 17282                           
 17283                           ;stkvar	_b @ sp[(-13)+-4]
 17284  0142A6  0EF1               	movlw	241
 17285  0142A8  24E1               	addwf	fsr1l,w,c
 17286  0142AA  6ED9               	movwf	fsr2l,c
 17287  0142AC  0EFF               	movlw	255
 17288  0142AE  20E2               	addwfc	fsr1h,w,c
 17289  0142B0  6EDA               	movwf	fsr2h,c
 17290  0142B2  0E7F               	movlw	127
 17291  0142B4  16DF               	andwf	indf2,f,c
 17292  0142B6                     l7520:
 17293                           
 17294                           ;stkvar	_b @ sp[(-13)+-4]
 17295  0142B6  0EF2               	movlw	242
 17296  0142B8  24E1               	addwf	fsr1l,w,c
 17297  0142BA  6ED9               	movwf	fsr2l,c
 17298  0142BC  0EFF               	movlw	255
 17299  0142BE  20E2               	addwfc	fsr1h,w,c
 17300  0142C0  6EDA               	movwf	fsr2h,c
 17301                           
 17302                           ;stkvar	_bexp @ sp[(-13)+11]
 17303  0142C2  0EFE               	movlw	-2
 17304  0142C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17305  0142CA  90D8               	bcf	status,0,c
 17306  0142CC  300C               	rrcf	(btemp+11)^0,w,c
 17307  0142CE  6EDF               	movwf	indf2,c
 17308  0142D0  D644               	goto	l7418
 17309  0142D2                     l2817:
 17310                           
 17311                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 17312  0142D2  0EEB               	movlw	235
 17313  0142D4  26E1               	addwf	fsr1l,f,c
 17314  0142D6  0EFF               	movlw	255
 17315  0142D8  22E2               	addwfc	fsr1h,f,c
 17316  0142DA  0012               	return		;funcret
 17317  0142DC                     __end_of___fldiv:
 17318                           	opt callstack 0
 17319                           
 17320 ;; *************** function ___awmod *****************
 17321 ;; Defined at:
 17322 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 17323 ;; Parameters:    Size  Location     Type
 17324 ;;  dividend        2  [STACK] int 
 17325 ;;  divisor         2  [STACK] int 
 17326 ;; Auto vars:     Size  Location     Type
 17327 ;;  sign            1  [STACK] unsigned char 
 17328 ;;  counter         1  [STACK] unsigned char 
 17329 ;; Return value:  Size  Location     Type
 17330 ;;                  2  [STACK] int 
 17331 ;; Registers used:
 17332 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17333 ;; Tracked objects:
 17334 ;;		On entry : 0/0
 17335 ;;		On exit  : 0/0
 17336 ;;		Unchanged: 0/0
 17337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17342 ;;Total ram usage:        0 bytes
 17343 ;; Hardware stack levels used:    1
 17344 ;; Hardware stack levels required when called:   15
 17345 ;; This function calls:
 17346 ;;		Nothing
 17347 ;; This function is called by:
 17348 ;;		_efgtoa
 17349 ;; This function uses a reentrant model
 17350 ;;
 17351                           
 17352                           	psect	text61
 17353  01788A                     __ptext61:
 17354                           	opt callstack 0
 17355  01788A                     ___awmod:
 17356                           	opt callstack 0
 17357                           
 17358                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17359  01788A  52E6               	movf	postinc1,f,c
 17360  01788C  52E6               	movf	postinc1,f,c
 17361                           
 17362                           ;stkvar	_sign @ sp[(-2)+0]
 17363                           
 17364                           ;incstack = 0
 17365 ;; hardware stack exceeded
 17366  01788E  0EFE               	movlw	-2
 17367  017890  6AE3               	clrf	plusw1,c
 17368                           
 17369                           ;stkvar	_dividend @ sp[(-2)+-2]
 17370  017892  0EFD               	movlw	-3
 17371  017894  AEE3               	btfss	plusw1,7,c
 17372  017896  D009               	goto	l7744
 17373                           
 17374                           ;stkvar	_dividend @ sp[(-2)+-2]
 17375                           ;stkvar	_dividend @ sp[(-2)+-2]
 17376  017898  0EFC               	movlw	-4
 17377  01789A  6CE3               	negf	plusw1,c
 17378  01789C  0EFD               	movlw	-3
 17379  01789E  1EE3               	comf	plusw1,f,c
 17380  0178A0  B0D8               	btfsc	status,0,c
 17381  0178A2  2AE3               	incf	plusw1,f,c
 17382                           
 17383                           ;stkvar	_sign @ sp[(-2)+0]
 17384  0178A4  0EFE               	movlw	-2
 17385  0178A6  6AE3               	clrf	plusw1,c
 17386  0178A8  2AE3               	incf	plusw1,f,c
 17387  0178AA                     l7744:
 17388                           
 17389                           ;stkvar	_divisor @ sp[(-2)+-4]
 17390  0178AA  0EFB               	movlw	-5
 17391  0178AC  AEE3               	btfss	plusw1,7,c
 17392  0178AE  D006               	goto	l7748
 17393                           
 17394                           ;stkvar	_divisor @ sp[(-2)+-4]
 17395                           ;stkvar	_divisor @ sp[(-2)+-4]
 17396  0178B0  0EFA               	movlw	-6
 17397  0178B2  6CE3               	negf	plusw1,c
 17398  0178B4  0EFB               	movlw	-5
 17399  0178B6  1EE3               	comf	plusw1,f,c
 17400  0178B8  B0D8               	btfsc	status,0,c
 17401  0178BA  2AE3               	incf	plusw1,f,c
 17402  0178BC                     l7748:
 17403                           
 17404                           ;stkvar	_divisor @ sp[(-2)+-4]
 17405  0178BC  0EFA               	movlw	-6
 17406  0178BE  006F FF8C  F001    	movff	plusw1,btemp
 17407  0178C4  0EFB               	movlw	-5
 17408  0178C6  50E3               	movf	plusw1,w,c
 17409  0178C8  1001               	iorwf	btemp^0,w,c
 17410  0178CA  B4D8               	btfsc	status,2,c
 17411  0178CC  D053               	goto	u6350
 17412                           
 17413                           ;stkvar	_counter @ sp[(-2)+1]
 17414  0178CE  0EFF               	movlw	-1
 17415  0178D0  6AE3               	clrf	plusw1,c
 17416  0178D2  D012               	goto	L15
 17417  0178D4                     l7752:
 17418                           
 17419                           ;stkvar	_divisor @ sp[(-2)+-4]
 17420  0178D4  0EFA               	movlw	-6
 17421  0178D6  50E3               	movf	plusw1,w,c
 17422  0178D8  90D8               	bcf	status,0,c
 17423  0178DA  34E8               	rlcf	wreg,w,c
 17424  0178DC  6E01               	movwf	btemp^0,c
 17425  0178DE  0EFA               	movlw	-6
 17426  0178E0  0060  F007  FFE3   	movff	btemp,plusw1
 17427  0178E6  0EFB               	movlw	-5
 17428  0178E8  50E3               	movf	plusw1,w,c
 17429  0178EA  34E8               	rlcf	wreg,w,c
 17430  0178EC  6E01               	movwf	btemp^0,c
 17431  0178EE  0EFB               	movlw	-5
 17432  0178F0  0060  F007  FFE3   	movff	btemp,plusw1
 17433                           
 17434                           ;stkvar	_counter @ sp[(-2)+1]
 17435  0178F6  0EFF               	movlw	-1
 17436  0178F8                     L15:
 17437  0178F8  2AE3               	incf	plusw1,f,c
 17438                           
 17439                           ;stkvar	_divisor @ sp[(-2)+-4]
 17440  0178FA  0EFB               	movlw	-5
 17441  0178FC  AEE3               	btfss	plusw1,7,c
 17442  0178FE  D7EA               	goto	l7752
 17443  017900                     u6330:
 17444                           
 17445                           ;stkvar	_divisor @ sp[(-2)+-4]
 17446  017900  0EFA               	movlw	-6
 17447  017902  006F FF8C  F00B    	movff	plusw1,btemp+10
 17448  017908  0EFB               	movlw	-5
 17449  01790A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17450                           
 17451                           ;stkvar	_dividend @ sp[(-2)+-2]
 17452  017910  0EFC               	movlw	-4
 17453  017912  006F FF8C  F009    	movff	plusw1,btemp+8
 17454  017918  0EFD               	movlw	-3
 17455  01791A  006F FF8C  F00A    	movff	plusw1,btemp+9
 17456  017920  500B               	movf	(btemp+10)^0,w,c
 17457  017922  5C09               	subwf	(btemp+8)^0,w,c
 17458  017924  500C               	movf	(btemp+11)^0,w,c
 17459  017926  580A               	subwfb	(btemp+9)^0,w,c
 17460  017928  A0D8               	btfss	status,0,c
 17461  01792A  D014               	goto	l7762
 17462                           
 17463                           ;stkvar	_divisor @ sp[(-2)+-4]
 17464                           ;stkvar	_dividend @ sp[(-2)+-2]
 17465  01792C  0EFC               	movlw	-4
 17466  01792E  50E3               	movf	plusw1,w,c
 17467  017930  6E01               	movwf	btemp^0,c
 17468  017932  0EFA               	movlw	-6
 17469  017934  50E3               	movf	plusw1,w,c
 17470  017936  5E01               	subwf	btemp^0,f,c
 17471  017938  0EFC               	movlw	-4
 17472  01793A  0060  F007  FFE3   	movff	btemp,plusw1
 17473  017940  0EFD               	movlw	-3
 17474  017942  50E3               	movf	plusw1,w,c
 17475  017944  6E01               	movwf	btemp^0,c
 17476  017946  0EFB               	movlw	-5
 17477  017948  50E3               	movf	plusw1,w,c
 17478  01794A  5A01               	subwfb	btemp^0,f,c
 17479  01794C  0EFD               	movlw	-3
 17480  01794E  0060  F007  FFE3   	movff	btemp,plusw1
 17481  017954                     l7762:
 17482                           
 17483                           ;stkvar	_divisor @ sp[(-2)+-4]
 17484  017954  90D8               	bcf	status,0,c
 17485  017956  0EFB               	movlw	-5
 17486  017958  32E3               	rrcf	plusw1,f,c
 17487  01795A  0EFA               	movlw	-6
 17488  01795C  32E3               	rrcf	plusw1,f,c
 17489                           
 17490                           ;stkvar	_counter @ sp[(-2)+1]
 17491  01795E  0EFF               	movlw	-1
 17492  017960  50E3               	movf	plusw1,w,c
 17493  017962  6E01               	movwf	btemp^0,c
 17494  017964  0E01               	movlw	1
 17495  017966  5E01               	subwf	btemp^0,f,c
 17496  017968  0EFF               	movlw	-1
 17497  01796A  0060  F007  FFE3   	movff	btemp,plusw1
 17498  017970  A4D8               	btfss	status,2,c
 17499  017972  D7C6               	goto	u6330
 17500  017974                     u6350:
 17501                           
 17502                           ;stkvar	_sign @ sp[(-2)+0]
 17503  017974  0EFE               	movlw	-2
 17504  017976  50E3               	movf	plusw1,w,c
 17505  017978  B4D8               	btfsc	status,2,c
 17506  01797A  D006               	goto	l7770
 17507                           
 17508                           ;stkvar	_dividend @ sp[(-2)+-2]
 17509                           ;stkvar	_dividend @ sp[(-2)+-2]
 17510  01797C  0EFC               	movlw	-4
 17511  01797E  6CE3               	negf	plusw1,c
 17512  017980  0EFD               	movlw	-3
 17513  017982  1EE3               	comf	plusw1,f,c
 17514  017984  B0D8               	btfsc	status,0,c
 17515  017986  2AE3               	incf	plusw1,f,c
 17516  017988                     l7770:
 17517                           
 17518                           ;stkvar	_dividend @ sp[(-2)+-2]
 17519  017988  0EFC               	movlw	-4
 17520  01798A  006F FF8C  F001    	movff	plusw1,btemp
 17521  017990  0EFD               	movlw	-3
 17522  017992  006F FF8C  F002    	movff	plusw1,btemp+1
 17523                           
 17524                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17525  017998  0EFA               	movlw	250
 17526  01799A  26E1               	addwf	fsr1l,f,c
 17527  01799C  0EFF               	movlw	255
 17528  01799E  22E2               	addwfc	fsr1h,f,c
 17529  0179A0  0012               	return		;funcret
 17530  0179A2                     __end_of___awmod:
 17531                           	opt callstack 0
 17532                           
 17533 ;; *************** function ___awdiv *****************
 17534 ;; Defined at:
 17535 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 17536 ;; Parameters:    Size  Location     Type
 17537 ;;  dividend        2  [STACK] int 
 17538 ;;  divisor         2  [STACK] int 
 17539 ;; Auto vars:     Size  Location     Type
 17540 ;;  quotient        2  [STACK] int 
 17541 ;;  sign            1  [STACK] unsigned char 
 17542 ;;  counter         1  [STACK] unsigned char 
 17543 ;; Return value:  Size  Location     Type
 17544 ;;                  2  [STACK] int 
 17545 ;; Registers used:
 17546 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17547 ;; Tracked objects:
 17548 ;;		On entry : 0/0
 17549 ;;		On exit  : 0/0
 17550 ;;		Unchanged: 0/0
 17551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17556 ;;Total ram usage:        0 bytes
 17557 ;; Hardware stack levels used:    1
 17558 ;; Hardware stack levels required when called:   15
 17559 ;; This function calls:
 17560 ;;		Nothing
 17561 ;; This function is called by:
 17562 ;;		_efgtoa
 17563 ;; This function uses a reentrant model
 17564 ;;
 17565                           
 17566                           	psect	text62
 17567  0173C2                     __ptext62:
 17568                           	opt callstack 0
 17569  0173C2                     ___awdiv:
 17570                           	opt callstack 0
 17571                           
 17572                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17573  0173C2  52E6               	movf	postinc1,f,c
 17574  0173C4  52E6               	movf	postinc1,f,c
 17575  0173C6  52E6               	movf	postinc1,f,c
 17576  0173C8  52E6               	movf	postinc1,f,c
 17577                           
 17578                           ;stkvar	_sign @ sp[(-4)+2]
 17579                           
 17580                           ;incstack = 0
 17581 ;; hardware stack exceeded
 17582  0173CA  0EFE               	movlw	-2
 17583  0173CC  6AE3               	clrf	plusw1,c
 17584                           
 17585                           ;stkvar	_divisor @ sp[(-4)+-4]
 17586  0173CE  0EF9               	movlw	-7
 17587  0173D0  AEE3               	btfss	plusw1,7,c
 17588  0173D2  D009               	goto	l7698
 17589                           
 17590                           ;stkvar	_divisor @ sp[(-4)+-4]
 17591                           ;stkvar	_divisor @ sp[(-4)+-4]
 17592  0173D4  0EF8               	movlw	-8
 17593  0173D6  6CE3               	negf	plusw1,c
 17594  0173D8  0EF9               	movlw	-7
 17595  0173DA  1EE3               	comf	plusw1,f,c
 17596  0173DC  B0D8               	btfsc	status,0,c
 17597  0173DE  2AE3               	incf	plusw1,f,c
 17598                           
 17599                           ;stkvar	_sign @ sp[(-4)+2]
 17600  0173E0  0EFE               	movlw	-2
 17601  0173E2  6AE3               	clrf	plusw1,c
 17602  0173E4  2AE3               	incf	plusw1,f,c
 17603  0173E6                     l7698:
 17604                           
 17605                           ;stkvar	_dividend @ sp[(-4)+-2]
 17606  0173E6  0EFB               	movlw	-5
 17607  0173E8  AEE3               	btfss	plusw1,7,c
 17608  0173EA  D008               	goto	l7704
 17609                           
 17610                           ;stkvar	_dividend @ sp[(-4)+-2]
 17611                           ;stkvar	_dividend @ sp[(-4)+-2]
 17612  0173EC  0EFA               	movlw	-6
 17613  0173EE  6CE3               	negf	plusw1,c
 17614  0173F0  0EFB               	movlw	-5
 17615  0173F2  1EE3               	comf	plusw1,f,c
 17616  0173F4  B0D8               	btfsc	status,0,c
 17617  0173F6  2AE3               	incf	plusw1,f,c
 17618                           
 17619                           ;stkvar	_sign @ sp[(-4)+2]
 17620  0173F8  0EFE               	movlw	-2
 17621  0173FA  70E3               	btg	plusw1,0,c
 17622  0173FC                     l7704:
 17623                           
 17624                           ;stkvar	_quotient @ sp[(-4)+0]
 17625  0173FC  0EFC               	movlw	-4
 17626  0173FE  6AE3               	clrf	plusw1,c
 17627  017400  0EFD               	movlw	-3
 17628  017402  6AE3               	clrf	plusw1,c
 17629                           
 17630                           ;stkvar	_divisor @ sp[(-4)+-4]
 17631  017404  0EF8               	movlw	-8
 17632  017406  006F FF8C  F001    	movff	plusw1,btemp
 17633  01740C  0EF9               	movlw	-7
 17634  01740E  50E3               	movf	plusw1,w,c
 17635  017410  1001               	iorwf	btemp^0,w,c
 17636  017412  B4D8               	btfsc	status,2,c
 17637  017414  D066               	goto	u6280
 17638                           
 17639                           ;stkvar	_counter @ sp[(-4)+3]
 17640  017416  0EFF               	movlw	-1
 17641  017418  6AE3               	clrf	plusw1,c
 17642  01741A  D012               	goto	L16
 17643  01741C                     l7710:
 17644                           
 17645                           ;stkvar	_divisor @ sp[(-4)+-4]
 17646  01741C  0EF8               	movlw	-8
 17647  01741E  50E3               	movf	plusw1,w,c
 17648  017420  90D8               	bcf	status,0,c
 17649  017422  34E8               	rlcf	wreg,w,c
 17650  017424  6E01               	movwf	btemp^0,c
 17651  017426  0EF8               	movlw	-8
 17652  017428  0060  F007  FFE3   	movff	btemp,plusw1
 17653  01742E  0EF9               	movlw	-7
 17654  017430  50E3               	movf	plusw1,w,c
 17655  017432  34E8               	rlcf	wreg,w,c
 17656  017434  6E01               	movwf	btemp^0,c
 17657  017436  0EF9               	movlw	-7
 17658  017438  0060  F007  FFE3   	movff	btemp,plusw1
 17659                           
 17660                           ;stkvar	_counter @ sp[(-4)+3]
 17661  01743E  0EFF               	movlw	-1
 17662  017440                     L16:
 17663  017440  2AE3               	incf	plusw1,f,c
 17664                           
 17665                           ;stkvar	_divisor @ sp[(-4)+-4]
 17666  017442  0EF9               	movlw	-7
 17667  017444  AEE3               	btfss	plusw1,7,c
 17668  017446  D7EA               	goto	l7710
 17669  017448                     u6260:
 17670                           
 17671                           ;stkvar	_quotient @ sp[(-4)+0]
 17672  017448  0EFC               	movlw	-4
 17673  01744A  50E3               	movf	plusw1,w,c
 17674  01744C  90D8               	bcf	status,0,c
 17675  01744E  34E8               	rlcf	wreg,w,c
 17676  017450  6E01               	movwf	btemp^0,c
 17677  017452  0EFC               	movlw	-4
 17678  017454  0060  F007  FFE3   	movff	btemp,plusw1
 17679  01745A  0EFD               	movlw	-3
 17680  01745C  50E3               	movf	plusw1,w,c
 17681  01745E  34E8               	rlcf	wreg,w,c
 17682  017460  6E01               	movwf	btemp^0,c
 17683  017462  0EFD               	movlw	-3
 17684  017464  0060  F007  FFE3   	movff	btemp,plusw1
 17685                           
 17686                           ;stkvar	_divisor @ sp[(-4)+-4]
 17687  01746A  0EF8               	movlw	-8
 17688  01746C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17689  017472  0EF9               	movlw	-7
 17690  017474  006F FF8C  F00C    	movff	plusw1,btemp+11
 17691                           
 17692                           ;stkvar	_dividend @ sp[(-4)+-2]
 17693  01747A  0EFA               	movlw	-6
 17694  01747C  006F FF8C  F009    	movff	plusw1,btemp+8
 17695  017482  0EFB               	movlw	-5
 17696  017484  006F FF8C  F00A    	movff	plusw1,btemp+9
 17697  01748A  500B               	movf	(btemp+10)^0,w,c
 17698  01748C  5C09               	subwf	(btemp+8)^0,w,c
 17699  01748E  500C               	movf	(btemp+11)^0,w,c
 17700  017490  580A               	subwfb	(btemp+9)^0,w,c
 17701  017492  A0D8               	btfss	status,0,c
 17702  017494  D016               	goto	l7724
 17703                           
 17704                           ;stkvar	_divisor @ sp[(-4)+-4]
 17705                           ;stkvar	_dividend @ sp[(-4)+-2]
 17706  017496  0EFA               	movlw	-6
 17707  017498  50E3               	movf	plusw1,w,c
 17708  01749A  6E01               	movwf	btemp^0,c
 17709  01749C  0EF8               	movlw	-8
 17710  01749E  50E3               	movf	plusw1,w,c
 17711  0174A0  5E01               	subwf	btemp^0,f,c
 17712  0174A2  0EFA               	movlw	-6
 17713  0174A4  0060  F007  FFE3   	movff	btemp,plusw1
 17714  0174AA  0EFB               	movlw	-5
 17715  0174AC  50E3               	movf	plusw1,w,c
 17716  0174AE  6E01               	movwf	btemp^0,c
 17717  0174B0  0EF9               	movlw	-7
 17718  0174B2  50E3               	movf	plusw1,w,c
 17719  0174B4  5A01               	subwfb	btemp^0,f,c
 17720  0174B6  0EFB               	movlw	-5
 17721  0174B8  0060  F007  FFE3   	movff	btemp,plusw1
 17722                           
 17723                           ;stkvar	_quotient @ sp[(-4)+0]
 17724  0174BE  0EFC               	movlw	-4
 17725  0174C0  80E3               	bsf	plusw1,0,c
 17726  0174C2                     l7724:
 17727                           
 17728                           ;stkvar	_divisor @ sp[(-4)+-4]
 17729  0174C2  90D8               	bcf	status,0,c
 17730  0174C4  0EF9               	movlw	-7
 17731  0174C6  32E3               	rrcf	plusw1,f,c
 17732  0174C8  0EF8               	movlw	-8
 17733  0174CA  32E3               	rrcf	plusw1,f,c
 17734                           
 17735                           ;stkvar	_counter @ sp[(-4)+3]
 17736  0174CC  0EFF               	movlw	-1
 17737  0174CE  50E3               	movf	plusw1,w,c
 17738  0174D0  6E01               	movwf	btemp^0,c
 17739  0174D2  0E01               	movlw	1
 17740  0174D4  5E01               	subwf	btemp^0,f,c
 17741  0174D6  0EFF               	movlw	-1
 17742  0174D8  0060  F007  FFE3   	movff	btemp,plusw1
 17743  0174DE  A4D8               	btfss	status,2,c
 17744  0174E0  D7B3               	goto	u6260
 17745  0174E2                     u6280:
 17746                           
 17747                           ;stkvar	_sign @ sp[(-4)+2]
 17748  0174E2  0EFE               	movlw	-2
 17749  0174E4  50E3               	movf	plusw1,w,c
 17750  0174E6  B4D8               	btfsc	status,2,c
 17751  0174E8  D006               	goto	l7732
 17752                           
 17753                           ;stkvar	_quotient @ sp[(-4)+0]
 17754                           ;stkvar	_quotient @ sp[(-4)+0]
 17755  0174EA  0EFC               	movlw	-4
 17756  0174EC  6CE3               	negf	plusw1,c
 17757  0174EE  0EFD               	movlw	-3
 17758  0174F0  1EE3               	comf	plusw1,f,c
 17759  0174F2  B0D8               	btfsc	status,0,c
 17760  0174F4  2AE3               	incf	plusw1,f,c
 17761  0174F6                     l7732:
 17762                           
 17763                           ;stkvar	_quotient @ sp[(-4)+0]
 17764  0174F6  0EFC               	movlw	-4
 17765  0174F8  006F FF8C  F001    	movff	plusw1,btemp
 17766  0174FE  0EFD               	movlw	-3
 17767  017500  006F FF8C  F002    	movff	plusw1,btemp+1
 17768                           
 17769                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17770  017506  0EF8               	movlw	248
 17771  017508  26E1               	addwf	fsr1l,f,c
 17772  01750A  0EFF               	movlw	255
 17773  01750C  22E2               	addwfc	fsr1h,f,c
 17774  01750E  0012               	return		;funcret
 17775  017510                     __end_of___awdiv:
 17776                           	opt callstack 0
 17777                           
 17778 ;; *************** function _dtoa *****************
 17779 ;; Defined at:
 17780 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17781 ;; Parameters:    Size  Location     Type
 17782 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17783 ;;		 -> f(6), NULL(0), 
 17784 ;;  d               8  [STACK] long long 
 17785 ;; Auto vars:     Size  Location     Type
 17786 ;;  n               8  [STACK] long long 
 17787 ;;  i               2  [STACK] int 
 17788 ;;  s               2  [STACK] int 
 17789 ;;  w               2  [STACK] int 
 17790 ;;  p               2  [STACK] int 
 17791 ;; Return value:  Size  Location     Type
 17792 ;;                  2  [STACK] int 
 17793 ;; Registers used:
 17794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17795 ;; Tracked objects:
 17796 ;;		On entry : 0/0
 17797 ;;		On exit  : 0/0
 17798 ;;		Unchanged: 0/0
 17799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17804 ;;Total ram usage:        0 bytes
 17805 ;; Hardware stack levels used:    1
 17806 ;; Hardware stack levels required when called:   20
 17807 ;; This function calls:
 17808 ;;		___aodiv
 17809 ;;		___aomod
 17810 ;;		_abs
 17811 ;;		_pad
 17812 ;; This function is called by:
 17813 ;;		_vfpfcnvrt
 17814 ;; This function uses a reentrant model
 17815 ;;
 17816                           
 17817                           	psect	text63
 17818  014788                     __ptext63:
 17819                           	opt callstack 0
 17820  014788                     _dtoa:
 17821                           	opt callstack 0
 17822                           
 17823                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17824  014788  0E12               	movlw	18
 17825  01478A  26E1               	addwf	fsr1l,f,c
 17826  01478C  0E00               	movlw	0
 17827  01478E  22E2               	addwfc	fsr1h,f,c
 17828                           
 17829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 17830                           ;stkvar	_d @ sp[(-18)+-10]
 17831                           
 17832                           ;incstack = 0
 17833 ;; hardware stack exceeded
 17834  014790  0EE4               	movlw	228
 17835  014792  24E1               	addwf	fsr1l,w,c
 17836  014794  6ED9               	movwf	fsr2l,c
 17837  014796  0EFF               	movlw	255
 17838  014798  20E2               	addwfc	fsr1h,w,c
 17839  01479A  6EDA               	movwf	fsr2h,c
 17840                           
 17841                           ;stkvar	_n @ sp[(-18)+2]
 17842  01479C  0E08               	movlw	8
 17843  01479E  6E01               	movwf	btemp^0,c
 17844  0147A0  0EF0               	movlw	-16
 17845  0147A2                     us950999:
 17846  0147A2  006F FF7B FFE3     	movff	postinc2,plusw1
 17847  0147A8  28E8               	incf	wreg,w,c
 17848  0147AA  2E01               	decfsz	btemp^0,f,c
 17849  0147AC  D7FA               	bra	us950999
 17850                           
 17851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 17852                           ;stkvar	_n @ sp[(-18)+2]
 17853  0147AE  0EF7               	movlw	-9
 17854  0147B0  AEE3               	btfss	plusw1,7,c
 17855  0147B2  D002               	goto	u9510
 17856  0147B4  0E01               	movlw	1
 17857  0147B6  D001               	goto	u9520
 17858  0147B8                     u9510:
 17859  0147B8  0E00               	movlw	0
 17860  0147BA                     u9520:
 17861  0147BA  6E0B               	movwf	(btemp+10)^0,c
 17862  0147BC  6A0C               	clrf	(btemp+11)^0,c
 17863                           
 17864                           ;stkvar	_s @ sp[(-18)+12]
 17865  0147BE  0EFA               	movlw	-6
 17866  0147C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17867  0147C6  0EFB               	movlw	-5
 17868  0147C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17869                           
 17870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 17871                           ;stkvar	_s @ sp[(-18)+12]
 17872  0147CE  0EFA               	movlw	-6
 17873  0147D0  006F FF8C  F001    	movff	plusw1,btemp
 17874  0147D6  0EFB               	movlw	-5
 17875  0147D8  50E3               	movf	plusw1,w,c
 17876  0147DA  1001               	iorwf	btemp^0,w,c
 17877  0147DC  B4D8               	btfsc	status,2,c
 17878  0147DE  D025               	goto	u9540
 17879                           
 17880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 17881                           ;stkvar	_n @ sp[(-18)+2]
 17882                           ;stkvar	_n @ sp[(-18)+2]
 17883  0147E0  0EF0               	movlw	-16
 17884  0147E2  6CE3               	negf	plusw1,c
 17885  0147E4  0EF1               	movlw	-15
 17886  0147E6  1EE3               	comf	plusw1,f,c
 17887  0147E8  0EF2               	movlw	-14
 17888  0147EA  1EE3               	comf	plusw1,f,c
 17889  0147EC  0EF3               	movlw	-13
 17890  0147EE  1EE3               	comf	plusw1,f,c
 17891  0147F0  0EF4               	movlw	-12
 17892  0147F2  1EE3               	comf	plusw1,f,c
 17893  0147F4  0EF5               	movlw	-11
 17894  0147F6  1EE3               	comf	plusw1,f,c
 17895  0147F8  0EF6               	movlw	-10
 17896  0147FA  1EE3               	comf	plusw1,f,c
 17897  0147FC  0EF7               	movlw	-9
 17898  0147FE  1EE3               	comf	plusw1,f,c
 17899  014800  E314               	bnc	u9540
 17900  014802  0EF1               	movlw	-15
 17901  014804  2AE3               	incf	plusw1,f,c
 17902  014806  E311               	bnc	u9540
 17903  014808  0EF2               	movlw	-14
 17904  01480A  2AE3               	incf	plusw1,f,c
 17905  01480C  E30E               	bnc	u9540
 17906  01480E  0EF3               	movlw	-13
 17907  014810  2AE3               	incf	plusw1,f,c
 17908  014812  E30B               	bnc	u9540
 17909  014814  0EF4               	movlw	-12
 17910  014816  2AE3               	incf	plusw1,f,c
 17911  014818  E308               	bnc	u9540
 17912  01481A  0EF5               	movlw	-11
 17913  01481C  2AE3               	incf	plusw1,f,c
 17914  01481E  E305               	bnc	u9540
 17915  014820  0EF6               	movlw	-10
 17916  014822  2AE3               	incf	plusw1,f,c
 17917  014824  E302               	bnc	u9540
 17918  014826  0EF7               	movlw	-9
 17919  014828  2AE3               	incf	plusw1,f,c
 17920  01482A                     u9540:
 17921                           
 17922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 17923  01482A  AE24               	btfss	(_prec+1)^0,7,c
 17924                           
 17925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 17926  01482C  9225               	bcf	_flags^0,1,c
 17927                           
 17928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 17929  01482E  BE24               	btfsc	(_prec+1)^0,7,c
 17930  014830  D005               	goto	u9560
 17931  014832  5024               	movf	(_prec+1)^0,w,c
 17932  014834  E110               	bnz	l10574
 17933  014836  0423               	decf	_prec^0,w,c
 17934  014838  B0D8               	btfsc	status,0,c
 17935  01483A  D00D               	goto	l10574
 17936  01483C                     u9560:
 17937  01483C  0E01               	movlw	1
 17938  01483E  6E0B               	movwf	(btemp+10)^0,c
 17939  014840  0E00               	movlw	0
 17940  014842  6E0C               	movwf	(btemp+11)^0,c
 17941                           
 17942                           ;stkvar	_p @ sp[(-18)+16]
 17943  014844  0EFE               	movlw	-2
 17944  014846  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17945  01484C  0EFF               	movlw	-1
 17946  01484E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17947  014854  D008               	goto	l2021
 17948  014856                     l10574:
 17949                           
 17950                           ;stkvar	_p @ sp[(-18)+16]
 17951  014856  0EFE               	movlw	-2
 17952  014858  0060  F08F  FFE3   	movff	_prec,plusw1
 17953  01485E  0EFF               	movlw	-1
 17954  014860  0060  F093  FFE3   	movff	_prec+1,plusw1
 17955  014866                     l2021:
 17956                           
 17957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 17958                           ;stkvar	_w @ sp[(-18)+14]
 17959  014866  0EFC               	movlw	-4
 17960  014868  0060  F087  FFE3   	movff	_width,plusw1
 17961  01486E  0EFD               	movlw	-3
 17962  014870  0060  F08B  FFE3   	movff	_width+1,plusw1
 17963                           
 17964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 17965                           ;stkvar	_s @ sp[(-18)+12]
 17966  014876  0EFA               	movlw	-6
 17967  014878  006F FF8C  F001    	movff	plusw1,btemp
 17968  01487E  0EFB               	movlw	-5
 17969  014880  50E3               	movf	plusw1,w,c
 17970  014882  1001               	iorwf	btemp^0,w,c
 17971  014884  A4D8               	btfss	status,2,c
 17972  014886  D002               	goto	u9580
 17973  014888  A425               	btfss	_flags^0,2,c
 17974  01488A  D00A               	goto	l10582
 17975  01488C                     u9580:
 17976                           
 17977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 17978                           ;stkvar	_w @ sp[(-18)+14]
 17979  01488C  50E1               	movf	fsr1l,w,c
 17980  01488E  0FFC               	addlw	-4
 17981  014890  6ED9               	movwf	fsr2l,c
 17982  014892  50E2               	movf	fsr1h,w,c
 17983  014894  6EDA               	movwf	fsr2h,c
 17984  014896  0EFF               	movlw	255
 17985  014898  22DA               	addwfc	fsr2h,f,c
 17986  01489A  06DE               	decf	postinc2,f,c
 17987  01489C  0E00               	movlw	0
 17988  01489E  5ADD               	subwfb	postdec2,f,c
 17989  0148A0                     l10582:
 17990                           
 17991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 17992  0148A0  0E4F               	movlw	79
 17993  0148A2  6E0B               	movwf	(btemp+10)^0,c
 17994  0148A4  0E00               	movlw	0
 17995  0148A6  6E0C               	movwf	(btemp+11)^0,c
 17996                           
 17997                           ;stkvar	_i @ sp[(-18)+10]
 17998  0148A8  0EF8               	movlw	-8
 17999  0148AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18000  0148B0  0EF9               	movlw	-7
 18001  0148B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18002                           
 18003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 18004  0148B8  0103               	movlb	3	; () banked
 18005  0148BA  6BE3               	clrf	(_dbuf+79)& (0+255),b
 18006                           
 18007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18008  0148BC  D109               	goto	l10596
 18009  0148BE                     l10586:
 18010                           
 18011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 18012                           ;stkvar	_i @ sp[(-18)+10]
 18013  0148BE  50E1               	movf	fsr1l,w,c
 18014  0148C0  0FF8               	addlw	-8
 18015  0148C2  6ED9               	movwf	fsr2l,c
 18016  0148C4  50E2               	movf	fsr1h,w,c
 18017  0148C6  6EDA               	movwf	fsr2h,c
 18018  0148C8  0EFF               	movlw	255
 18019  0148CA  22DA               	addwfc	fsr2h,f,c
 18020  0148CC  06DE               	decf	postinc2,f,c
 18021  0148CE  0E00               	movlw	0
 18022  0148D0  5ADD               	subwfb	postdec2,f,c
 18023                           
 18024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 18025  0148D2  0E0A               	movlw	10
 18026  0148D4  6EE6               	movwf	postinc1,c
 18027  0148D6  0E00               	movlw	0
 18028  0148D8  6EE6               	movwf	postinc1,c
 18029  0148DA  0E00               	movlw	0
 18030  0148DC  6EE6               	movwf	postinc1,c
 18031  0148DE  0E00               	movlw	0
 18032  0148E0  6EE6               	movwf	postinc1,c
 18033  0148E2  0E00               	movlw	0
 18034  0148E4  6EE6               	movwf	postinc1,c
 18035  0148E6  0E00               	movlw	0
 18036  0148E8  6EE6               	movwf	postinc1,c
 18037  0148EA  0E00               	movlw	0
 18038  0148EC  6EE6               	movwf	postinc1,c
 18039  0148EE  0E00               	movlw	0
 18040  0148F0  6EE6               	movwf	postinc1,c
 18041                           
 18042                           ;stkvar	_n @ sp[(-26)+2]
 18043  0148F2  50E1               	movf	fsr1l,w,c
 18044  0148F4  0FE8               	addlw	-24
 18045  0148F6  6ED9               	movwf	fsr2l,c
 18046  0148F8  50E2               	movf	fsr1h,w,c
 18047  0148FA  6EDA               	movwf	fsr2h,c
 18048  0148FC  0EFF               	movlw	255
 18049  0148FE  22DA               	addwfc	fsr2h,f,c
 18050  014900  006F FF7B FFE6     	movff	postinc2,postinc1
 18051  014906  006F FF7B FFE6     	movff	postinc2,postinc1
 18052  01490C  006F FF7B FFE6     	movff	postinc2,postinc1
 18053  014912  006F FF7B FFE6     	movff	postinc2,postinc1
 18054  014918  006F FF7B FFE6     	movff	postinc2,postinc1
 18055  01491E  006F FF7B FFE6     	movff	postinc2,postinc1
 18056  014924  006F FF7B FFE6     	movff	postinc2,postinc1
 18057  01492A  006F FF7B FFE6     	movff	postinc2,postinc1
 18058  014930  EC53  F0B0         	call	___aomod	;wreg free
 18059  014934  52E5               	movf	postdec1,f,c
 18060  014936  006F FF9C  F018    	movff	indf1,btemp+23
 18061  01493C  52E5               	movf	postdec1,f,c
 18062  01493E  006F FF9C  F017    	movff	indf1,btemp+22
 18063  014944  52E5               	movf	postdec1,f,c
 18064  014946  006F FF9C  F016    	movff	indf1,btemp+21
 18065  01494C  52E5               	movf	postdec1,f,c
 18066  01494E  006F FF9C  F015    	movff	indf1,btemp+20
 18067  014954  52E5               	movf	postdec1,f,c
 18068  014956  006F FF9C  F014    	movff	indf1,btemp+19
 18069  01495C  52E5               	movf	postdec1,f,c
 18070  01495E  006F FF9C  F013    	movff	indf1,btemp+18
 18071  014964  52E5               	movf	postdec1,f,c
 18072  014966  006F FF9C  F012    	movff	indf1,btemp+17
 18073  01496C  52E5               	movf	postdec1,f,c
 18074  01496E  006F FF9C  F011    	movff	indf1,btemp+16
 18075  014974  0EF8               	movlw	248
 18076  014976  26E1               	addwf	fsr1l,f,c
 18077  014978  0EFF               	movlw	255
 18078  01497A  22E2               	addwfc	fsr1h,f,c
 18079  01497C  0060  F044  F00B   	movff	btemp+16,btemp+10
 18080  014982  0060  F048  F00C   	movff	btemp+17,btemp+11
 18081  014988  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18082  01498E  0060  F033  FFE6   	movff	btemp+11,postinc1
 18083  014994  ECA8  F0C8         	call	_abs	;wreg free
 18084  014998  0E30               	movlw	48
 18085  01499A  2601               	addwf	btemp^0,f,c
 18086                           
 18087                           ;stkvar	_i @ sp[(-18)+10]
 18088  01499C  0EF8               	movlw	-8
 18089  01499E  006F FF8C  F00B    	movff	plusw1,btemp+10
 18090  0149A4  0EF9               	movlw	-7
 18091  0149A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18092  0149AC  0E94               	movlw	low _dbuf
 18093  0149AE  240B               	addwf	(btemp+10)^0,w,c
 18094  0149B0  6ED9               	movwf	fsr2l,c
 18095  0149B2  0E03               	movlw	high _dbuf
 18096  0149B4  200C               	addwfc	(btemp+11)^0,w,c
 18097  0149B6  6EDA               	movwf	fsr2h,c
 18098  0149B8  0060  F007  FFDF   	movff	btemp,indf2
 18099                           
 18100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 18101                           ;stkvar	_p @ sp[(-18)+16]
 18102  0149BE  50E1               	movf	fsr1l,w,c
 18103  0149C0  0FFE               	addlw	-2
 18104  0149C2  6ED9               	movwf	fsr2l,c
 18105  0149C4  50E2               	movf	fsr1h,w,c
 18106  0149C6  6EDA               	movwf	fsr2h,c
 18107  0149C8  0EFF               	movlw	255
 18108  0149CA  22DA               	addwfc	fsr2h,f,c
 18109  0149CC  06DE               	decf	postinc2,f,c
 18110  0149CE  0E00               	movlw	0
 18111  0149D0  5ADD               	subwfb	postdec2,f,c
 18112                           
 18113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 18114                           ;stkvar	_w @ sp[(-18)+14]
 18115  0149D2  50E1               	movf	fsr1l,w,c
 18116  0149D4  0FFC               	addlw	-4
 18117  0149D6  6ED9               	movwf	fsr2l,c
 18118  0149D8  50E2               	movf	fsr1h,w,c
 18119  0149DA  6EDA               	movwf	fsr2h,c
 18120  0149DC  0EFF               	movlw	255
 18121  0149DE  22DA               	addwfc	fsr2h,f,c
 18122  0149E0  06DE               	decf	postinc2,f,c
 18123  0149E2  0E00               	movlw	0
 18124  0149E4  5ADD               	subwfb	postdec2,f,c
 18125                           
 18126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 18127  0149E6  0E0A               	movlw	10
 18128  0149E8  6EE6               	movwf	postinc1,c
 18129  0149EA  0E00               	movlw	0
 18130  0149EC  6EE6               	movwf	postinc1,c
 18131  0149EE  0E00               	movlw	0
 18132  0149F0  6EE6               	movwf	postinc1,c
 18133  0149F2  0E00               	movlw	0
 18134  0149F4  6EE6               	movwf	postinc1,c
 18135  0149F6  0E00               	movlw	0
 18136  0149F8  6EE6               	movwf	postinc1,c
 18137  0149FA  0E00               	movlw	0
 18138  0149FC  6EE6               	movwf	postinc1,c
 18139  0149FE  0E00               	movlw	0
 18140  014A00  6EE6               	movwf	postinc1,c
 18141  014A02  0E00               	movlw	0
 18142  014A04  6EE6               	movwf	postinc1,c
 18143                           
 18144                           ;stkvar	_n @ sp[(-26)+2]
 18145  014A06  50E1               	movf	fsr1l,w,c
 18146  014A08  0FE8               	addlw	-24
 18147  014A0A  6ED9               	movwf	fsr2l,c
 18148  014A0C  50E2               	movf	fsr1h,w,c
 18149  014A0E  6EDA               	movwf	fsr2h,c
 18150  014A10  0EFF               	movlw	255
 18151  014A12  22DA               	addwfc	fsr2h,f,c
 18152  014A14  006F FF7B FFE6     	movff	postinc2,postinc1
 18153  014A1A  006F FF7B FFE6     	movff	postinc2,postinc1
 18154  014A20  006F FF7B FFE6     	movff	postinc2,postinc1
 18155  014A26  006F FF7B FFE6     	movff	postinc2,postinc1
 18156  014A2C  006F FF7B FFE6     	movff	postinc2,postinc1
 18157  014A32  006F FF7B FFE6     	movff	postinc2,postinc1
 18158  014A38  006F FF7B FFE6     	movff	postinc2,postinc1
 18159  014A3E  006F FF7B FFE6     	movff	postinc2,postinc1
 18160  014A44  ECD9  F0AD         	call	___aodiv	;wreg free
 18161  014A48  52E5               	movf	postdec1,f,c
 18162  014A4A  006F FF9C  F018    	movff	indf1,btemp+23
 18163  014A50  52E5               	movf	postdec1,f,c
 18164  014A52  006F FF9C  F017    	movff	indf1,btemp+22
 18165  014A58  52E5               	movf	postdec1,f,c
 18166  014A5A  006F FF9C  F016    	movff	indf1,btemp+21
 18167  014A60  52E5               	movf	postdec1,f,c
 18168  014A62  006F FF9C  F015    	movff	indf1,btemp+20
 18169  014A68  52E5               	movf	postdec1,f,c
 18170  014A6A  006F FF9C  F014    	movff	indf1,btemp+19
 18171  014A70  52E5               	movf	postdec1,f,c
 18172  014A72  006F FF9C  F013    	movff	indf1,btemp+18
 18173  014A78  52E5               	movf	postdec1,f,c
 18174  014A7A  006F FF9C  F012    	movff	indf1,btemp+17
 18175  014A80  52E5               	movf	postdec1,f,c
 18176  014A82  006F FF9C  F011    	movff	indf1,btemp+16
 18177  014A88  0EF8               	movlw	248
 18178  014A8A  26E1               	addwf	fsr1l,f,c
 18179  014A8C  0EFF               	movlw	255
 18180  014A8E  22E2               	addwfc	fsr1h,f,c
 18181                           
 18182                           ;stkvar	_n @ sp[(-18)+2]
 18183  014A90  0EF0               	movlw	-16
 18184  014A92  0060  F047  FFE3   	movff	btemp+16,plusw1
 18185  014A98  0EF1               	movlw	-15
 18186  014A9A  0060  F04B  FFE3   	movff	btemp+17,plusw1
 18187  014AA0  0EF2               	movlw	-14
 18188  014AA2  0060  F04F  FFE3   	movff	btemp+18,plusw1
 18189  014AA8  0EF3               	movlw	-13
 18190  014AAA  0060  F053  FFE3   	movff	btemp+19,plusw1
 18191  014AB0  0EF4               	movlw	-12
 18192  014AB2  0060  F057  FFE3   	movff	btemp+20,plusw1
 18193  014AB8  0EF5               	movlw	-11
 18194  014ABA  0060  F05B  FFE3   	movff	btemp+21,plusw1
 18195  014AC0  0EF6               	movlw	-10
 18196  014AC2  0060  F05F  FFE3   	movff	btemp+22,plusw1
 18197  014AC8  0EF7               	movlw	-9
 18198  014ACA  0060  F063  FFE3   	movff	btemp+23,plusw1
 18199  014AD0                     l10596:
 18200                           
 18201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18202                           ;stkvar	_i @ sp[(-18)+10]
 18203  014AD0  0EF9               	movlw	-7
 18204  014AD2  BEE3               	btfsc	plusw1,7,c
 18205  014AD4  D036               	goto	u9630
 18206  014AD6  0EF9               	movlw	-7
 18207  014AD8  50E3               	movf	plusw1,w,c
 18208  014ADA  E104               	bnz	u9590
 18209  014ADC  0EF8               	movlw	-8
 18210  014ADE  04E3               	decf	plusw1,w,c
 18211  014AE0  A0D8               	btfss	status,0,c
 18212  014AE2  D02F               	goto	u9630
 18213  014AE4                     u9590:
 18214                           
 18215                           ;stkvar	_n @ sp[(-18)+2]
 18216  014AE4  0EF0               	movlw	-16
 18217  014AE6  50E3               	movf	plusw1,w,c
 18218  014AE8  E115               	bnz	u9601
 18219  014AEA  0EF1               	movlw	-15
 18220  014AEC  50E3               	movf	plusw1,w,c
 18221  014AEE  E112               	bnz	u9601
 18222  014AF0  0EF2               	movlw	-14
 18223  014AF2  50E3               	movf	plusw1,w,c
 18224  014AF4  E10F               	bnz	u9601
 18225  014AF6  0EF3               	movlw	-13
 18226  014AF8  50E3               	movf	plusw1,w,c
 18227  014AFA  E10C               	bnz	u9601
 18228  014AFC  0EF4               	movlw	-12
 18229  014AFE  50E3               	movf	plusw1,w,c
 18230  014B00  E109               	bnz	u9601
 18231  014B02  0EF5               	movlw	-11
 18232  014B04  50E3               	movf	plusw1,w,c
 18233  014B06  E106               	bnz	u9601
 18234  014B08  0EF6               	movlw	-10
 18235  014B0A  50E3               	movf	plusw1,w,c
 18236  014B0C  E103               	bnz	u9601
 18237  014B0E  0EF7               	movlw	-9
 18238  014B10  50E3               	movf	plusw1,w,c
 18239  014B12  A4D8               	btfss	status,2,c
 18240  014B14                     u9601:
 18241  014B14  D6D4               	goto	l10586
 18242                           
 18243                           ;stkvar	_p @ sp[(-18)+16]
 18244  014B16  0EFF               	movlw	-1
 18245  014B18  BEE3               	btfsc	plusw1,7,c
 18246  014B1A  D007               	goto	u9610
 18247  014B1C  0EFF               	movlw	-1
 18248  014B1E  50E3               	movf	plusw1,w,c
 18249  014B20  E103               	bnz	u9611
 18250  014B22  0EFE               	movlw	-2
 18251  014B24  04E3               	decf	plusw1,w,c
 18252  014B26  B0D8               	btfsc	status,0,c
 18253  014B28                     u9611:
 18254  014B28  D6CA               	goto	l10586
 18255  014B2A                     u9610:
 18256                           
 18257                           ;stkvar	_w @ sp[(-18)+14]
 18258  014B2A  0EFD               	movlw	-3
 18259  014B2C  BEE3               	btfsc	plusw1,7,c
 18260  014B2E  D009               	goto	u9630
 18261  014B30  0EFD               	movlw	-3
 18262  014B32  50E3               	movf	plusw1,w,c
 18263  014B34  E104               	bnz	u9620
 18264  014B36  0EFC               	movlw	-4
 18265  014B38  04E3               	decf	plusw1,w,c
 18266  014B3A  A0D8               	btfss	status,0,c
 18267  014B3C  D002               	goto	u9630
 18268  014B3E                     u9620:
 18269  014B3E  B225               	btfsc	_flags^0,1,c
 18270  014B40  D6BE               	goto	l10586
 18271  014B42                     u9630:
 18272                           
 18273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 18274                           ;stkvar	_s @ sp[(-18)+12]
 18275  014B42  0EFA               	movlw	-6
 18276  014B44  006F FF8C  F001    	movff	plusw1,btemp
 18277  014B4A  0EFB               	movlw	-5
 18278  014B4C  50E3               	movf	plusw1,w,c
 18279  014B4E  1001               	iorwf	btemp^0,w,c
 18280  014B50  A4D8               	btfss	status,2,c
 18281  014B52  D002               	goto	u9650
 18282  014B54  A425               	btfss	_flags^0,2,c
 18283  014B56  D033               	goto	l10620
 18284  014B58                     u9650:
 18285                           
 18286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 18287                           ;stkvar	_i @ sp[(-18)+10]
 18288  014B58  50E1               	movf	fsr1l,w,c
 18289  014B5A  0FF8               	addlw	-8
 18290  014B5C  6ED9               	movwf	fsr2l,c
 18291  014B5E  50E2               	movf	fsr1h,w,c
 18292  014B60  6EDA               	movwf	fsr2h,c
 18293  014B62  0EFF               	movlw	255
 18294  014B64  22DA               	addwfc	fsr2h,f,c
 18295  014B66  06DE               	decf	postinc2,f,c
 18296  014B68  0E00               	movlw	0
 18297  014B6A  5ADD               	subwfb	postdec2,f,c
 18298                           
 18299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 18300                           ;stkvar	_s @ sp[(-18)+12]
 18301  014B6C  0EFA               	movlw	-6
 18302  014B6E  006F FF8C  F001    	movff	plusw1,btemp
 18303  014B74  0EFB               	movlw	-5
 18304  014B76  50E3               	movf	plusw1,w,c
 18305  014B78  1001               	iorwf	btemp^0,w,c
 18306  014B7A  A4D8               	btfss	status,2,c
 18307  014B7C  D002               	goto	l10616
 18308  014B7E  0E2B               	movlw	43
 18309  014B80  D001               	goto	L17
 18310  014B82                     l10616:
 18311  014B82  0E2D               	movlw	45
 18312  014B84                     L17:
 18313  014B84  6E0B               	movwf	(btemp+10)^0,c
 18314  014B86  0E00               	movlw	0
 18315  014B88  6E0C               	movwf	(btemp+11)^0,c
 18316                           
 18317                           ;stkvar	_dtoa$5135 @ sp[(-18)+0]
 18318  014B8A  0EEE               	movlw	-18
 18319  014B8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18320  014B92  0EEF               	movlw	-17
 18321  014B94  0060  F033  FFE3   	movff	btemp+11,plusw1
 18322                           
 18323                           ;stkvar	_dtoa$5135 @ sp[(-18)+0]
 18324                           ;stkvar	_i @ sp[(-18)+10]
 18325  014B9A  0EF8               	movlw	-8
 18326  014B9C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18327  014BA2  0EF9               	movlw	-7
 18328  014BA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18329  014BAA  0E94               	movlw	low _dbuf
 18330  014BAC  240B               	addwf	(btemp+10)^0,w,c
 18331  014BAE  6ED9               	movwf	fsr2l,c
 18332  014BB0  0E03               	movlw	high _dbuf
 18333  014BB2  200C               	addwfc	(btemp+11)^0,w,c
 18334  014BB4  6EDA               	movwf	fsr2h,c
 18335  014BB6  0EEE               	movlw	-18
 18336  014BB8  006F FF8F FFDF     	movff	plusw1,indf2
 18337  014BBE                     l10620:
 18338                           
 18339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 18340                           ;stkvar	_w @ sp[(-18)+14]
 18341  014BBE  0EFC               	movlw	-4
 18342  014BC0  006F FF8F FFE6     	movff	plusw1,postinc1
 18343  014BC6  006F FF8F FFE6     	movff	plusw1,postinc1
 18344                           
 18345                           ;stkvar	_i @ sp[(-20)+10]
 18346  014BCC  0E94               	movlw	low _dbuf
 18347  014BCE  6E0B               	movwf	(btemp+10)^0,c
 18348  014BD0  0E03               	movlw	high _dbuf
 18349  014BD2  6E0C               	movwf	(btemp+11)^0,c
 18350  014BD4  0EF6               	movlw	-10
 18351  014BD6  50E3               	movf	plusw1,w,c
 18352  014BD8  260B               	addwf	(btemp+10)^0,f,c
 18353  014BDA  0EF7               	movlw	-9
 18354  014BDC  50E3               	movf	plusw1,w,c
 18355  014BDE  220C               	addwfc	(btemp+11)^0,f,c
 18356  014BE0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18357  014BE6  0060  F033  FFE6   	movff	btemp+11,postinc1
 18358                           
 18359                           ;stkvar	_fp @ sp[(-22)+-2]
 18360  014BEC  0EE8               	movlw	-24
 18361  014BEE  006F FF8F FFE6     	movff	plusw1,postinc1
 18362  014BF4  006F FF8F FFE6     	movff	plusw1,postinc1
 18363  014BFA  ECD1  F0BC         	call	_pad	;wreg free
 18364                           
 18365                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 18366  014BFE  0EE4               	movlw	228
 18367  014C00  26E1               	addwf	fsr1l,f,c
 18368  014C02  0EFF               	movlw	255
 18369  014C04  22E2               	addwfc	fsr1h,f,c
 18370  014C06  0012               	return		;funcret
 18371  014C08                     __end_of_dtoa:
 18372                           	opt callstack 0
 18373                           
 18374 ;; *************** function _abs *****************
 18375 ;; Defined at:
 18376 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 18377 ;; Parameters:    Size  Location     Type
 18378 ;;  a               2  [STACK] int 
 18379 ;; Auto vars:     Size  Location     Type
 18380 ;;		None
 18381 ;; Return value:  Size  Location     Type
 18382 ;;                  2  [STACK] int 
 18383 ;; Registers used:
 18384 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 18385 ;; Tracked objects:
 18386 ;;		On entry : 0/3
 18387 ;;		On exit  : 0/0
 18388 ;;		Unchanged: 0/0
 18389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18394 ;;Total ram usage:        0 bytes
 18395 ;; Hardware stack levels used:    1
 18396 ;; Hardware stack levels required when called:   15
 18397 ;; This function calls:
 18398 ;;		Nothing
 18399 ;; This function is called by:
 18400 ;;		_dtoa
 18401 ;; This function uses a reentrant model
 18402 ;;
 18403                           
 18404                           	psect	text64
 18405  019150                     __ptext64:
 18406                           	opt callstack 0
 18407  019150                     _abs:
 18408                           	opt callstack 0
 18409                           
 18410                           ;stkvar	_a @ sp[(0)+-2]
 18411                           
 18412                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18413                           ;incstack = 0
 18414 ;; hardware stack exceeded
 18415  019150  0EFF               	movlw	-1
 18416  019152  BEE3               	btfsc	plusw1,7,c
 18417  019154  D007               	goto	u5240
 18418  019156  0EFF               	movlw	-1
 18419  019158  50E3               	movf	plusw1,w,c
 18420  01915A  E112               	bnz	l7186
 18421  01915C  0EFE               	movlw	-2
 18422  01915E  04E3               	decf	plusw1,w,c
 18423  019160  B0D8               	btfsc	status,0,c
 18424  019162  D00E               	goto	l7186
 18425  019164                     u5240:
 18426                           
 18427                           ;stkvar	_a @ sp[(0)+-2]
 18428  019164  0EFE               	movlw	-2
 18429  019166  006F FF8C  F001    	movff	plusw1,btemp
 18430  01916C  1E01               	comf	btemp^0,f,c
 18431  01916E  0EFF               	movlw	-1
 18432  019170  006F FF8C  F002    	movff	plusw1,btemp+1
 18433  019176  1E02               	comf	(btemp+1)^0,f,c
 18434  019178  2A01               	incf	btemp^0,f,c
 18435  01917A  B4D8               	btfsc	status,2,c
 18436  01917C  2A02               	incf	(btemp+1)^0,f,c
 18437  01917E  D008               	goto	l2924
 18438  019180                     l7186:
 18439                           
 18440                           ;stkvar	_a @ sp[(0)+-2]
 18441  019180  0EFE               	movlw	-2
 18442  019182  006F FF8C  F001    	movff	plusw1,btemp
 18443  019188  0EFF               	movlw	-1
 18444  01918A  006F FF8C  F002    	movff	plusw1,btemp+1
 18445  019190                     l2924:
 18446                           
 18447                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 18448  019190  52E5               	movf	postdec1,f,c
 18449  019192  52E5               	movf	postdec1,f,c
 18450  019194  0012               	return		;funcret
 18451  019196                     __end_of_abs:
 18452                           	opt callstack 0
 18453                           
 18454 ;; *************** function ___aomod *****************
 18455 ;; Defined at:
 18456 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 18457 ;; Parameters:    Size  Location     Type
 18458 ;;  dividend        8  [STACK] long long 
 18459 ;;  divisor         8  [STACK] long long 
 18460 ;; Auto vars:     Size  Location     Type
 18461 ;;  sign            1  [STACK] unsigned char 
 18462 ;;  counter         1  [STACK] unsigned char 
 18463 ;; Return value:  Size  Location     Type
 18464 ;;                  8  [STACK] long long 
 18465 ;; Registers used:
 18466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18467 ;; Tracked objects:
 18468 ;;		On entry : 0/3
 18469 ;;		On exit  : 0/0
 18470 ;;		Unchanged: 0/0
 18471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18476 ;;Total ram usage:        0 bytes
 18477 ;; Hardware stack levels used:    1
 18478 ;; Hardware stack levels required when called:   15
 18479 ;; This function calls:
 18480 ;;		Nothing
 18481 ;; This function is called by:
 18482 ;;		_dtoa
 18483 ;; This function uses a reentrant model
 18484 ;;
 18485                           
 18486                           	psect	text65
 18487  0160A6                     __ptext65:
 18488                           	opt callstack 0
 18489  0160A6                     ___aomod:
 18490                           	opt callstack 0
 18491                           
 18492                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18493  0160A6  52E6               	movf	postinc1,f,c
 18494  0160A8  52E6               	movf	postinc1,f,c
 18495                           
 18496                           ;stkvar	_sign @ sp[(-2)+0]
 18497                           
 18498                           ;incstack = 0
 18499 ;; hardware stack exceeded
 18500  0160AA  0EFE               	movlw	-2
 18501  0160AC  6AE3               	clrf	plusw1,c
 18502                           
 18503                           ;stkvar	_dividend @ sp[(-2)+-8]
 18504  0160AE  0EFD               	movlw	-3
 18505  0160B0  AEE3               	btfss	plusw1,7,c
 18506  0160B2  D028               	goto	l7344
 18507                           
 18508                           ;stkvar	_dividend @ sp[(-2)+-8]
 18509                           ;stkvar	_dividend @ sp[(-2)+-8]
 18510  0160B4  0EF6               	movlw	-10
 18511  0160B6  6CE3               	negf	plusw1,c
 18512  0160B8  0EF7               	movlw	-9
 18513  0160BA  1EE3               	comf	plusw1,f,c
 18514  0160BC  0EF8               	movlw	-8
 18515  0160BE  1EE3               	comf	plusw1,f,c
 18516  0160C0  0EF9               	movlw	-7
 18517  0160C2  1EE3               	comf	plusw1,f,c
 18518  0160C4  0EFA               	movlw	-6
 18519  0160C6  1EE3               	comf	plusw1,f,c
 18520  0160C8  0EFB               	movlw	-5
 18521  0160CA  1EE3               	comf	plusw1,f,c
 18522  0160CC  0EFC               	movlw	-4
 18523  0160CE  1EE3               	comf	plusw1,f,c
 18524  0160D0  0EFD               	movlw	-3
 18525  0160D2  1EE3               	comf	plusw1,f,c
 18526  0160D4  E314               	bnc	u5670
 18527  0160D6  0EF7               	movlw	-9
 18528  0160D8  2AE3               	incf	plusw1,f,c
 18529  0160DA  E311               	bnc	u5670
 18530  0160DC  0EF8               	movlw	-8
 18531  0160DE  2AE3               	incf	plusw1,f,c
 18532  0160E0  E30E               	bnc	u5670
 18533  0160E2  0EF9               	movlw	-7
 18534  0160E4  2AE3               	incf	plusw1,f,c
 18535  0160E6  E30B               	bnc	u5670
 18536  0160E8  0EFA               	movlw	-6
 18537  0160EA  2AE3               	incf	plusw1,f,c
 18538  0160EC  E308               	bnc	u5670
 18539  0160EE  0EFB               	movlw	-5
 18540  0160F0  2AE3               	incf	plusw1,f,c
 18541  0160F2  E305               	bnc	u5670
 18542  0160F4  0EFC               	movlw	-4
 18543  0160F6  2AE3               	incf	plusw1,f,c
 18544  0160F8  E302               	bnc	u5670
 18545  0160FA  0EFD               	movlw	-3
 18546  0160FC  2AE3               	incf	plusw1,f,c
 18547  0160FE                     u5670:
 18548                           
 18549                           ;stkvar	_sign @ sp[(-2)+0]
 18550  0160FE  0EFE               	movlw	-2
 18551  016100  6AE3               	clrf	plusw1,c
 18552  016102  2AE3               	incf	plusw1,f,c
 18553  016104                     l7344:
 18554                           
 18555                           ;stkvar	_divisor @ sp[(-2)+-16]
 18556  016104  0EF5               	movlw	-11
 18557  016106  AEE3               	btfss	plusw1,7,c
 18558  016108  D025               	goto	u5690
 18559                           
 18560                           ;stkvar	_divisor @ sp[(-2)+-16]
 18561                           ;stkvar	_divisor @ sp[(-2)+-16]
 18562  01610A  0EEE               	movlw	-18
 18563  01610C  6CE3               	negf	plusw1,c
 18564  01610E  0EEF               	movlw	-17
 18565  016110  1EE3               	comf	plusw1,f,c
 18566  016112  0EF0               	movlw	-16
 18567  016114  1EE3               	comf	plusw1,f,c
 18568  016116  0EF1               	movlw	-15
 18569  016118  1EE3               	comf	plusw1,f,c
 18570  01611A  0EF2               	movlw	-14
 18571  01611C  1EE3               	comf	plusw1,f,c
 18572  01611E  0EF3               	movlw	-13
 18573  016120  1EE3               	comf	plusw1,f,c
 18574  016122  0EF4               	movlw	-12
 18575  016124  1EE3               	comf	plusw1,f,c
 18576  016126  0EF5               	movlw	-11
 18577  016128  1EE3               	comf	plusw1,f,c
 18578  01612A  E314               	bnc	u5690
 18579  01612C  0EEF               	movlw	-17
 18580  01612E  2AE3               	incf	plusw1,f,c
 18581  016130  E311               	bnc	u5690
 18582  016132  0EF0               	movlw	-16
 18583  016134  2AE3               	incf	plusw1,f,c
 18584  016136  E30E               	bnc	u5690
 18585  016138  0EF1               	movlw	-15
 18586  01613A  2AE3               	incf	plusw1,f,c
 18587  01613C  E30B               	bnc	u5690
 18588  01613E  0EF2               	movlw	-14
 18589  016140  2AE3               	incf	plusw1,f,c
 18590  016142  E308               	bnc	u5690
 18591  016144  0EF3               	movlw	-13
 18592  016146  2AE3               	incf	plusw1,f,c
 18593  016148  E305               	bnc	u5690
 18594  01614A  0EF4               	movlw	-12
 18595  01614C  2AE3               	incf	plusw1,f,c
 18596  01614E  E302               	bnc	u5690
 18597  016150  0EF5               	movlw	-11
 18598  016152  2AE3               	incf	plusw1,f,c
 18599  016154                     u5690:
 18600                           
 18601                           ;stkvar	_divisor @ sp[(-2)+-16]
 18602  016154  0EEE               	movlw	-18
 18603  016156  50E3               	movf	plusw1,w,c
 18604  016158  E116               	bnz	u5700
 18605  01615A  0EEF               	movlw	-17
 18606  01615C  50E3               	movf	plusw1,w,c
 18607  01615E  E113               	bnz	u5700
 18608  016160  0EF0               	movlw	-16
 18609  016162  50E3               	movf	plusw1,w,c
 18610  016164  E110               	bnz	u5700
 18611  016166  0EF1               	movlw	-15
 18612  016168  50E3               	movf	plusw1,w,c
 18613  01616A  E10D               	bnz	u5700
 18614  01616C  0EF2               	movlw	-14
 18615  01616E  50E3               	movf	plusw1,w,c
 18616  016170  E10A               	bnz	u5700
 18617  016172  0EF3               	movlw	-13
 18618  016174  50E3               	movf	plusw1,w,c
 18619  016176  E107               	bnz	u5700
 18620  016178  0EF4               	movlw	-12
 18621  01617A  50E3               	movf	plusw1,w,c
 18622  01617C  E104               	bnz	u5700
 18623  01617E  0EF5               	movlw	-11
 18624  016180  50E3               	movf	plusw1,w,c
 18625  016182  B4D8               	btfsc	status,2,c
 18626  016184  D075               	goto	u5730
 18627  016186                     u5700:
 18628                           
 18629                           ;stkvar	_counter @ sp[(-2)+1]
 18630  016186  0EFF               	movlw	-1
 18631  016188  6AE3               	clrf	plusw1,c
 18632  01618A  D012               	goto	L18
 18633  01618C                     l7352:
 18634                           
 18635                           ;stkvar	_divisor @ sp[(-2)+-16]
 18636  01618C  90D8               	bcf	status,0,c
 18637  01618E  0EEE               	movlw	-18
 18638  016190  36E3               	rlcf	plusw1,f,c
 18639  016192  0EEF               	movlw	-17
 18640  016194  36E3               	rlcf	plusw1,f,c
 18641  016196  0EF0               	movlw	-16
 18642  016198  36E3               	rlcf	plusw1,f,c
 18643  01619A  0EF1               	movlw	-15
 18644  01619C  36E3               	rlcf	plusw1,f,c
 18645  01619E  0EF2               	movlw	-14
 18646  0161A0  36E3               	rlcf	plusw1,f,c
 18647  0161A2  0EF3               	movlw	-13
 18648  0161A4  36E3               	rlcf	plusw1,f,c
 18649  0161A6  0EF4               	movlw	-12
 18650  0161A8  36E3               	rlcf	plusw1,f,c
 18651  0161AA  0EF5               	movlw	-11
 18652  0161AC  36E3               	rlcf	plusw1,f,c
 18653                           
 18654                           ;stkvar	_counter @ sp[(-2)+1]
 18655  0161AE  0EFF               	movlw	-1
 18656  0161B0                     L18:
 18657  0161B0  2AE3               	incf	plusw1,f,c
 18658                           
 18659                           ;stkvar	_divisor @ sp[(-2)+-16]
 18660  0161B2  0EF5               	movlw	-11
 18661  0161B4  AEE3               	btfss	plusw1,7,c
 18662  0161B6  D7EA               	goto	l7352
 18663  0161B8                     u5710:
 18664                           
 18665                           ;stkvar	_divisor @ sp[(-2)+-16]
 18666                           ;stkvar	_dividend @ sp[(-2)+-8]
 18667  0161B8  50E1               	movf	fsr1l,w,c
 18668  0161BA  0FF6               	addlw	-10
 18669  0161BC  6ED9               	movwf	fsr2l,c
 18670  0161BE  50E2               	movf	fsr1h,w,c
 18671  0161C0  6EDA               	movwf	fsr2h,c
 18672  0161C2  0EFF               	movlw	255
 18673  0161C4  22DA               	addwfc	fsr2h,f,c
 18674  0161C6  0EEE               	movlw	-18
 18675  0161C8  50E3               	movf	plusw1,w,c
 18676  0161CA  5CDE               	subwf	postinc2,w,c
 18677  0161CC  0EEF               	movlw	-17
 18678  0161CE  50E3               	movf	plusw1,w,c
 18679  0161D0  58DE               	subwfb	postinc2,w,c
 18680  0161D2  0EF0               	movlw	-16
 18681  0161D4  50E3               	movf	plusw1,w,c
 18682  0161D6  58DE               	subwfb	postinc2,w,c
 18683  0161D8  0EF1               	movlw	-15
 18684  0161DA  50E3               	movf	plusw1,w,c
 18685  0161DC  58DE               	subwfb	postinc2,w,c
 18686  0161DE  0EF2               	movlw	-14
 18687  0161E0  50E3               	movf	plusw1,w,c
 18688  0161E2  58DE               	subwfb	postinc2,w,c
 18689  0161E4  0EF3               	movlw	-13
 18690  0161E6  50E3               	movf	plusw1,w,c
 18691  0161E8  58DE               	subwfb	postinc2,w,c
 18692  0161EA  0EF4               	movlw	-12
 18693  0161EC  50E3               	movf	plusw1,w,c
 18694  0161EE  58DE               	subwfb	postinc2,w,c
 18695  0161F0  0EF5               	movlw	-11
 18696  0161F2  50E3               	movf	plusw1,w,c
 18697  0161F4  58DE               	subwfb	postinc2,w,c
 18698  0161F6  A0D8               	btfss	status,0,c
 18699  0161F8  D01F               	goto	l7360
 18700                           
 18701                           ;stkvar	_divisor @ sp[(-2)+-16]
 18702                           ;stkvar	_dividend @ sp[(-2)+-8]
 18703  0161FA  50E1               	movf	fsr1l,w,c
 18704  0161FC  0FF6               	addlw	-10
 18705  0161FE  6ED9               	movwf	fsr2l,c
 18706  016200  50E2               	movf	fsr1h,w,c
 18707  016202  6EDA               	movwf	fsr2h,c
 18708  016204  0EFF               	movlw	255
 18709  016206  22DA               	addwfc	fsr2h,f,c
 18710  016208  0EEE               	movlw	-18
 18711  01620A  50E3               	movf	plusw1,w,c
 18712  01620C  5EDE               	subwf	postinc2,f,c
 18713  01620E  0EEF               	movlw	-17
 18714  016210  50E3               	movf	plusw1,w,c
 18715  016212  5ADE               	subwfb	postinc2,f,c
 18716  016214  0EF0               	movlw	-16
 18717  016216  50E3               	movf	plusw1,w,c
 18718  016218  5ADE               	subwfb	postinc2,f,c
 18719  01621A  0EF1               	movlw	-15
 18720  01621C  50E3               	movf	plusw1,w,c
 18721  01621E  5ADE               	subwfb	postinc2,f,c
 18722  016220  0EF2               	movlw	-14
 18723  016222  50E3               	movf	plusw1,w,c
 18724  016224  5ADE               	subwfb	postinc2,f,c
 18725  016226  0EF3               	movlw	-13
 18726  016228  50E3               	movf	plusw1,w,c
 18727  01622A  5ADE               	subwfb	postinc2,f,c
 18728  01622C  0EF4               	movlw	-12
 18729  01622E  50E3               	movf	plusw1,w,c
 18730  016230  5ADE               	subwfb	postinc2,f,c
 18731  016232  0EF5               	movlw	-11
 18732  016234  50E3               	movf	plusw1,w,c
 18733  016236  5ADE               	subwfb	postinc2,f,c
 18734  016238                     l7360:
 18735                           
 18736                           ;stkvar	_divisor @ sp[(-2)+-16]
 18737  016238  90D8               	bcf	status,0,c
 18738  01623A  0EF5               	movlw	-11
 18739  01623C  32E3               	rrcf	plusw1,f,c
 18740  01623E  0EF4               	movlw	-12
 18741  016240  32E3               	rrcf	plusw1,f,c
 18742  016242  0EF3               	movlw	-13
 18743  016244  32E3               	rrcf	plusw1,f,c
 18744  016246  0EF2               	movlw	-14
 18745  016248  32E3               	rrcf	plusw1,f,c
 18746  01624A  0EF1               	movlw	-15
 18747  01624C  32E3               	rrcf	plusw1,f,c
 18748  01624E  0EF0               	movlw	-16
 18749  016250  32E3               	rrcf	plusw1,f,c
 18750  016252  0EEF               	movlw	-17
 18751  016254  32E3               	rrcf	plusw1,f,c
 18752  016256  0EEE               	movlw	-18
 18753  016258  32E3               	rrcf	plusw1,f,c
 18754                           
 18755                           ;stkvar	_counter @ sp[(-2)+1]
 18756  01625A  0EFF               	movlw	-1
 18757  01625C  50E3               	movf	plusw1,w,c
 18758  01625E  6E01               	movwf	btemp^0,c
 18759  016260  0E01               	movlw	1
 18760  016262  5E01               	subwf	btemp^0,f,c
 18761  016264  0EFF               	movlw	-1
 18762  016266  0060  F007  FFE3   	movff	btemp,plusw1
 18763  01626C  A4D8               	btfss	status,2,c
 18764  01626E  D7A4               	goto	u5710
 18765  016270                     u5730:
 18766                           
 18767                           ;stkvar	_sign @ sp[(-2)+0]
 18768  016270  0EFE               	movlw	-2
 18769  016272  50E3               	movf	plusw1,w,c
 18770  016274  B4D8               	btfsc	status,2,c
 18771  016276  D025               	goto	u5750
 18772                           
 18773                           ;stkvar	_dividend @ sp[(-2)+-8]
 18774                           ;stkvar	_dividend @ sp[(-2)+-8]
 18775  016278  0EF6               	movlw	-10
 18776  01627A  6CE3               	negf	plusw1,c
 18777  01627C  0EF7               	movlw	-9
 18778  01627E  1EE3               	comf	plusw1,f,c
 18779  016280  0EF8               	movlw	-8
 18780  016282  1EE3               	comf	plusw1,f,c
 18781  016284  0EF9               	movlw	-7
 18782  016286  1EE3               	comf	plusw1,f,c
 18783  016288  0EFA               	movlw	-6
 18784  01628A  1EE3               	comf	plusw1,f,c
 18785  01628C  0EFB               	movlw	-5
 18786  01628E  1EE3               	comf	plusw1,f,c
 18787  016290  0EFC               	movlw	-4
 18788  016292  1EE3               	comf	plusw1,f,c
 18789  016294  0EFD               	movlw	-3
 18790  016296  1EE3               	comf	plusw1,f,c
 18791  016298  E314               	bnc	u5750
 18792  01629A  0EF7               	movlw	-9
 18793  01629C  2AE3               	incf	plusw1,f,c
 18794  01629E  E311               	bnc	u5750
 18795  0162A0  0EF8               	movlw	-8
 18796  0162A2  2AE3               	incf	plusw1,f,c
 18797  0162A4  E30E               	bnc	u5750
 18798  0162A6  0EF9               	movlw	-7
 18799  0162A8  2AE3               	incf	plusw1,f,c
 18800  0162AA  E30B               	bnc	u5750
 18801  0162AC  0EFA               	movlw	-6
 18802  0162AE  2AE3               	incf	plusw1,f,c
 18803  0162B0  E308               	bnc	u5750
 18804  0162B2  0EFB               	movlw	-5
 18805  0162B4  2AE3               	incf	plusw1,f,c
 18806  0162B6  E305               	bnc	u5750
 18807  0162B8  0EFC               	movlw	-4
 18808  0162BA  2AE3               	incf	plusw1,f,c
 18809  0162BC  E302               	bnc	u5750
 18810  0162BE  0EFD               	movlw	-3
 18811  0162C0  2AE3               	incf	plusw1,f,c
 18812  0162C2                     u5750:
 18813                           
 18814                           ;stkvar	_dividend @ sp[(-2)+-8]
 18815  0162C2  0EF6               	movlw	246
 18816  0162C4  24E1               	addwf	fsr1l,w,c
 18817  0162C6  6ED9               	movwf	fsr2l,c
 18818  0162C8  0EFF               	movlw	255
 18819  0162CA  20E2               	addwfc	fsr1h,w,c
 18820  0162CC  6EDA               	movwf	fsr2h,c
 18821                           
 18822                           ;stkvar	?___aomod @ sp[(-2)+-8]
 18823  0162CE  0E08               	movlw	8
 18824  0162D0  6E01               	movwf	btemp^0,c
 18825  0162D2  0EF6               	movlw	-10
 18826  0162D4                     us576999:
 18827  0162D4  006F FF7B FFE3     	movff	postinc2,plusw1
 18828  0162DA  28E8               	incf	wreg,w,c
 18829  0162DC  2E01               	decfsz	btemp^0,f,c
 18830  0162DE  D7FA               	bra	us576999
 18831                           
 18832                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18833  0162E0  52E5               	movf	postdec1,f,c
 18834  0162E2  52E5               	movf	postdec1,f,c
 18835  0162E4  0012               	return		;funcret
 18836  0162E6                     __end_of___aomod:
 18837                           	opt callstack 0
 18838                           
 18839 ;; *************** function ___aodiv *****************
 18840 ;; Defined at:
 18841 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 18842 ;; Parameters:    Size  Location     Type
 18843 ;;  dividend        8  [STACK] long long 
 18844 ;;  divisor         8  [STACK] long long 
 18845 ;; Auto vars:     Size  Location     Type
 18846 ;;  quotient        8  [STACK] long long 
 18847 ;;  sign            1  [STACK] unsigned char 
 18848 ;;  counter         1  [STACK] unsigned char 
 18849 ;; Return value:  Size  Location     Type
 18850 ;;                  8  [STACK] long long 
 18851 ;; Registers used:
 18852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18853 ;; Tracked objects:
 18854 ;;		On entry : 0/3
 18855 ;;		On exit  : 0/0
 18856 ;;		Unchanged: 0/0
 18857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18862 ;;Total ram usage:        0 bytes
 18863 ;; Hardware stack levels used:    1
 18864 ;; Hardware stack levels required when called:   15
 18865 ;; This function calls:
 18866 ;;		Nothing
 18867 ;; This function is called by:
 18868 ;;		_dtoa
 18869 ;; This function uses a reentrant model
 18870 ;;
 18871                           
 18872                           	psect	text66
 18873  015BB2                     __ptext66:
 18874                           	opt callstack 0
 18875  015BB2                     ___aodiv:
 18876                           	opt callstack 0
 18877                           
 18878                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 18879  015BB2  0E0A               	movlw	10
 18880  015BB4  26E1               	addwf	fsr1l,f,c
 18881  015BB6  0E00               	movlw	0
 18882  015BB8  22E2               	addwfc	fsr1h,f,c
 18883                           
 18884                           ;stkvar	_sign @ sp[(-10)+8]
 18885                           
 18886                           ;incstack = 0
 18887 ;; hardware stack exceeded
 18888  015BBA  0EFE               	movlw	-2
 18889  015BBC  6AE3               	clrf	plusw1,c
 18890                           
 18891                           ;stkvar	_divisor @ sp[(-10)+-16]
 18892  015BBE  0EED               	movlw	-19
 18893  015BC0  AEE3               	btfss	plusw1,7,c
 18894  015BC2  D028               	goto	l7300
 18895                           
 18896                           ;stkvar	_divisor @ sp[(-10)+-16]
 18897                           ;stkvar	_divisor @ sp[(-10)+-16]
 18898  015BC4  0EE6               	movlw	-26
 18899  015BC6  6CE3               	negf	plusw1,c
 18900  015BC8  0EE7               	movlw	-25
 18901  015BCA  1EE3               	comf	plusw1,f,c
 18902  015BCC  0EE8               	movlw	-24
 18903  015BCE  1EE3               	comf	plusw1,f,c
 18904  015BD0  0EE9               	movlw	-23
 18905  015BD2  1EE3               	comf	plusw1,f,c
 18906  015BD4  0EEA               	movlw	-22
 18907  015BD6  1EE3               	comf	plusw1,f,c
 18908  015BD8  0EEB               	movlw	-21
 18909  015BDA  1EE3               	comf	plusw1,f,c
 18910  015BDC  0EEC               	movlw	-20
 18911  015BDE  1EE3               	comf	plusw1,f,c
 18912  015BE0  0EED               	movlw	-19
 18913  015BE2  1EE3               	comf	plusw1,f,c
 18914  015BE4  E314               	bnc	u5550
 18915  015BE6  0EE7               	movlw	-25
 18916  015BE8  2AE3               	incf	plusw1,f,c
 18917  015BEA  E311               	bnc	u5550
 18918  015BEC  0EE8               	movlw	-24
 18919  015BEE  2AE3               	incf	plusw1,f,c
 18920  015BF0  E30E               	bnc	u5550
 18921  015BF2  0EE9               	movlw	-23
 18922  015BF4  2AE3               	incf	plusw1,f,c
 18923  015BF6  E30B               	bnc	u5550
 18924  015BF8  0EEA               	movlw	-22
 18925  015BFA  2AE3               	incf	plusw1,f,c
 18926  015BFC  E308               	bnc	u5550
 18927  015BFE  0EEB               	movlw	-21
 18928  015C00  2AE3               	incf	plusw1,f,c
 18929  015C02  E305               	bnc	u5550
 18930  015C04  0EEC               	movlw	-20
 18931  015C06  2AE3               	incf	plusw1,f,c
 18932  015C08  E302               	bnc	u5550
 18933  015C0A  0EED               	movlw	-19
 18934  015C0C  2AE3               	incf	plusw1,f,c
 18935  015C0E                     u5550:
 18936                           
 18937                           ;stkvar	_sign @ sp[(-10)+8]
 18938  015C0E  0EFE               	movlw	-2
 18939  015C10  6AE3               	clrf	plusw1,c
 18940  015C12  2AE3               	incf	plusw1,f,c
 18941  015C14                     l7300:
 18942                           
 18943                           ;stkvar	_dividend @ sp[(-10)+-8]
 18944  015C14  0EF5               	movlw	-11
 18945  015C16  AEE3               	btfss	plusw1,7,c
 18946  015C18  D027               	goto	l7306
 18947                           
 18948                           ;stkvar	_dividend @ sp[(-10)+-8]
 18949                           ;stkvar	_dividend @ sp[(-10)+-8]
 18950  015C1A  0EEE               	movlw	-18
 18951  015C1C  6CE3               	negf	plusw1,c
 18952  015C1E  0EEF               	movlw	-17
 18953  015C20  1EE3               	comf	plusw1,f,c
 18954  015C22  0EF0               	movlw	-16
 18955  015C24  1EE3               	comf	plusw1,f,c
 18956  015C26  0EF1               	movlw	-15
 18957  015C28  1EE3               	comf	plusw1,f,c
 18958  015C2A  0EF2               	movlw	-14
 18959  015C2C  1EE3               	comf	plusw1,f,c
 18960  015C2E  0EF3               	movlw	-13
 18961  015C30  1EE3               	comf	plusw1,f,c
 18962  015C32  0EF4               	movlw	-12
 18963  015C34  1EE3               	comf	plusw1,f,c
 18964  015C36  0EF5               	movlw	-11
 18965  015C38  1EE3               	comf	plusw1,f,c
 18966  015C3A  E314               	bnc	u5570
 18967  015C3C  0EEF               	movlw	-17
 18968  015C3E  2AE3               	incf	plusw1,f,c
 18969  015C40  E311               	bnc	u5570
 18970  015C42  0EF0               	movlw	-16
 18971  015C44  2AE3               	incf	plusw1,f,c
 18972  015C46  E30E               	bnc	u5570
 18973  015C48  0EF1               	movlw	-15
 18974  015C4A  2AE3               	incf	plusw1,f,c
 18975  015C4C  E30B               	bnc	u5570
 18976  015C4E  0EF2               	movlw	-14
 18977  015C50  2AE3               	incf	plusw1,f,c
 18978  015C52  E308               	bnc	u5570
 18979  015C54  0EF3               	movlw	-13
 18980  015C56  2AE3               	incf	plusw1,f,c
 18981  015C58  E305               	bnc	u5570
 18982  015C5A  0EF4               	movlw	-12
 18983  015C5C  2AE3               	incf	plusw1,f,c
 18984  015C5E  E302               	bnc	u5570
 18985  015C60  0EF5               	movlw	-11
 18986  015C62  2AE3               	incf	plusw1,f,c
 18987  015C64                     u5570:
 18988                           
 18989                           ;stkvar	_sign @ sp[(-10)+8]
 18990  015C64  0EFE               	movlw	-2
 18991  015C66  70E3               	btg	plusw1,0,c
 18992  015C68                     l7306:
 18993                           
 18994                           ;stkvar	_quotient @ sp[(-10)+0]
 18995  015C68  0E07               	movlw	7
 18996  015C6A  6E01               	movwf	btemp^0,c
 18997  015C6C  0EF6               	movlw	-10
 18998  015C6E                     u5581:
 18999  015C6E  6AE3               	clrf	plusw1,c
 19000  015C70  2AE8               	incf	wreg,f,c
 19001  015C72  0601               	decf	btemp^0,f,c
 19002  015C74  E2FC               	bc	u5581
 19003                           
 19004                           ;stkvar	_divisor @ sp[(-10)+-16]
 19005  015C76  0EE6               	movlw	-26
 19006  015C78  50E3               	movf	plusw1,w,c
 19007  015C7A  E116               	bnz	u5590
 19008  015C7C  0EE7               	movlw	-25
 19009  015C7E  50E3               	movf	plusw1,w,c
 19010  015C80  E113               	bnz	u5590
 19011  015C82  0EE8               	movlw	-24
 19012  015C84  50E3               	movf	plusw1,w,c
 19013  015C86  E110               	bnz	u5590
 19014  015C88  0EE9               	movlw	-23
 19015  015C8A  50E3               	movf	plusw1,w,c
 19016  015C8C  E10D               	bnz	u5590
 19017  015C8E  0EEA               	movlw	-22
 19018  015C90  50E3               	movf	plusw1,w,c
 19019  015C92  E10A               	bnz	u5590
 19020  015C94  0EEB               	movlw	-21
 19021  015C96  50E3               	movf	plusw1,w,c
 19022  015C98  E107               	bnz	u5590
 19023  015C9A  0EEC               	movlw	-20
 19024  015C9C  50E3               	movf	plusw1,w,c
 19025  015C9E  E104               	bnz	u5590
 19026  015CA0  0EED               	movlw	-19
 19027  015CA2  50E3               	movf	plusw1,w,c
 19028  015CA4  B4D8               	btfsc	status,2,c
 19029  015CA6  D088               	goto	u5620
 19030  015CA8                     u5590:
 19031                           
 19032                           ;stkvar	_counter @ sp[(-10)+9]
 19033  015CA8  0EFF               	movlw	-1
 19034  015CAA  6AE3               	clrf	plusw1,c
 19035  015CAC  D012               	goto	L19
 19036  015CAE                     l7312:
 19037                           
 19038                           ;stkvar	_divisor @ sp[(-10)+-16]
 19039  015CAE  90D8               	bcf	status,0,c
 19040  015CB0  0EE6               	movlw	-26
 19041  015CB2  36E3               	rlcf	plusw1,f,c
 19042  015CB4  0EE7               	movlw	-25
 19043  015CB6  36E3               	rlcf	plusw1,f,c
 19044  015CB8  0EE8               	movlw	-24
 19045  015CBA  36E3               	rlcf	plusw1,f,c
 19046  015CBC  0EE9               	movlw	-23
 19047  015CBE  36E3               	rlcf	plusw1,f,c
 19048  015CC0  0EEA               	movlw	-22
 19049  015CC2  36E3               	rlcf	plusw1,f,c
 19050  015CC4  0EEB               	movlw	-21
 19051  015CC6  36E3               	rlcf	plusw1,f,c
 19052  015CC8  0EEC               	movlw	-20
 19053  015CCA  36E3               	rlcf	plusw1,f,c
 19054  015CCC  0EED               	movlw	-19
 19055  015CCE  36E3               	rlcf	plusw1,f,c
 19056                           
 19057                           ;stkvar	_counter @ sp[(-10)+9]
 19058  015CD0  0EFF               	movlw	-1
 19059  015CD2                     L19:
 19060  015CD2  2AE3               	incf	plusw1,f,c
 19061                           
 19062                           ;stkvar	_divisor @ sp[(-10)+-16]
 19063  015CD4  0EED               	movlw	-19
 19064  015CD6  AEE3               	btfss	plusw1,7,c
 19065  015CD8  D7EA               	goto	l7312
 19066  015CDA                     u5600:
 19067                           
 19068                           ;stkvar	_quotient @ sp[(-10)+0]
 19069  015CDA  90D8               	bcf	status,0,c
 19070  015CDC  0EF6               	movlw	-10
 19071  015CDE  36E3               	rlcf	plusw1,f,c
 19072  015CE0  0EF7               	movlw	-9
 19073  015CE2  36E3               	rlcf	plusw1,f,c
 19074  015CE4  0EF8               	movlw	-8
 19075  015CE6  36E3               	rlcf	plusw1,f,c
 19076  015CE8  0EF9               	movlw	-7
 19077  015CEA  36E3               	rlcf	plusw1,f,c
 19078  015CEC  0EFA               	movlw	-6
 19079  015CEE  36E3               	rlcf	plusw1,f,c
 19080  015CF0  0EFB               	movlw	-5
 19081  015CF2  36E3               	rlcf	plusw1,f,c
 19082  015CF4  0EFC               	movlw	-4
 19083  015CF6  36E3               	rlcf	plusw1,f,c
 19084  015CF8  0EFD               	movlw	-3
 19085  015CFA  36E3               	rlcf	plusw1,f,c
 19086                           
 19087                           ;stkvar	_divisor @ sp[(-10)+-16]
 19088                           ;stkvar	_dividend @ sp[(-10)+-8]
 19089  015CFC  50E1               	movf	fsr1l,w,c
 19090  015CFE  0FEE               	addlw	-18
 19091  015D00  6ED9               	movwf	fsr2l,c
 19092  015D02  50E2               	movf	fsr1h,w,c
 19093  015D04  6EDA               	movwf	fsr2h,c
 19094  015D06  0EFF               	movlw	255
 19095  015D08  22DA               	addwfc	fsr2h,f,c
 19096  015D0A  0EE6               	movlw	-26
 19097  015D0C  50E3               	movf	plusw1,w,c
 19098  015D0E  5CDE               	subwf	postinc2,w,c
 19099  015D10  0EE7               	movlw	-25
 19100  015D12  50E3               	movf	plusw1,w,c
 19101  015D14  58DE               	subwfb	postinc2,w,c
 19102  015D16  0EE8               	movlw	-24
 19103  015D18  50E3               	movf	plusw1,w,c
 19104  015D1A  58DE               	subwfb	postinc2,w,c
 19105  015D1C  0EE9               	movlw	-23
 19106  015D1E  50E3               	movf	plusw1,w,c
 19107  015D20  58DE               	subwfb	postinc2,w,c
 19108  015D22  0EEA               	movlw	-22
 19109  015D24  50E3               	movf	plusw1,w,c
 19110  015D26  58DE               	subwfb	postinc2,w,c
 19111  015D28  0EEB               	movlw	-21
 19112  015D2A  50E3               	movf	plusw1,w,c
 19113  015D2C  58DE               	subwfb	postinc2,w,c
 19114  015D2E  0EEC               	movlw	-20
 19115  015D30  50E3               	movf	plusw1,w,c
 19116  015D32  58DE               	subwfb	postinc2,w,c
 19117  015D34  0EED               	movlw	-19
 19118  015D36  50E3               	movf	plusw1,w,c
 19119  015D38  58DE               	subwfb	postinc2,w,c
 19120  015D3A  A0D8               	btfss	status,0,c
 19121  015D3C  D021               	goto	l7324
 19122                           
 19123                           ;stkvar	_divisor @ sp[(-10)+-16]
 19124                           ;stkvar	_dividend @ sp[(-10)+-8]
 19125  015D3E  50E1               	movf	fsr1l,w,c
 19126  015D40  0FEE               	addlw	-18
 19127  015D42  6ED9               	movwf	fsr2l,c
 19128  015D44  50E2               	movf	fsr1h,w,c
 19129  015D46  6EDA               	movwf	fsr2h,c
 19130  015D48  0EFF               	movlw	255
 19131  015D4A  22DA               	addwfc	fsr2h,f,c
 19132  015D4C  0EE6               	movlw	-26
 19133  015D4E  50E3               	movf	plusw1,w,c
 19134  015D50  5EDE               	subwf	postinc2,f,c
 19135  015D52  0EE7               	movlw	-25
 19136  015D54  50E3               	movf	plusw1,w,c
 19137  015D56  5ADE               	subwfb	postinc2,f,c
 19138  015D58  0EE8               	movlw	-24
 19139  015D5A  50E3               	movf	plusw1,w,c
 19140  015D5C  5ADE               	subwfb	postinc2,f,c
 19141  015D5E  0EE9               	movlw	-23
 19142  015D60  50E3               	movf	plusw1,w,c
 19143  015D62  5ADE               	subwfb	postinc2,f,c
 19144  015D64  0EEA               	movlw	-22
 19145  015D66  50E3               	movf	plusw1,w,c
 19146  015D68  5ADE               	subwfb	postinc2,f,c
 19147  015D6A  0EEB               	movlw	-21
 19148  015D6C  50E3               	movf	plusw1,w,c
 19149  015D6E  5ADE               	subwfb	postinc2,f,c
 19150  015D70  0EEC               	movlw	-20
 19151  015D72  50E3               	movf	plusw1,w,c
 19152  015D74  5ADE               	subwfb	postinc2,f,c
 19153  015D76  0EED               	movlw	-19
 19154  015D78  50E3               	movf	plusw1,w,c
 19155  015D7A  5ADE               	subwfb	postinc2,f,c
 19156                           
 19157                           ;stkvar	_quotient @ sp[(-10)+0]
 19158  015D7C  0EF6               	movlw	-10
 19159  015D7E  80E3               	bsf	plusw1,0,c
 19160  015D80                     l7324:
 19161                           
 19162                           ;stkvar	_divisor @ sp[(-10)+-16]
 19163  015D80  90D8               	bcf	status,0,c
 19164  015D82  0EED               	movlw	-19
 19165  015D84  32E3               	rrcf	plusw1,f,c
 19166  015D86  0EEC               	movlw	-20
 19167  015D88  32E3               	rrcf	plusw1,f,c
 19168  015D8A  0EEB               	movlw	-21
 19169  015D8C  32E3               	rrcf	plusw1,f,c
 19170  015D8E  0EEA               	movlw	-22
 19171  015D90  32E3               	rrcf	plusw1,f,c
 19172  015D92  0EE9               	movlw	-23
 19173  015D94  32E3               	rrcf	plusw1,f,c
 19174  015D96  0EE8               	movlw	-24
 19175  015D98  32E3               	rrcf	plusw1,f,c
 19176  015D9A  0EE7               	movlw	-25
 19177  015D9C  32E3               	rrcf	plusw1,f,c
 19178  015D9E  0EE6               	movlw	-26
 19179  015DA0  32E3               	rrcf	plusw1,f,c
 19180                           
 19181                           ;stkvar	_counter @ sp[(-10)+9]
 19182  015DA2  0EFF               	movlw	-1
 19183  015DA4  50E3               	movf	plusw1,w,c
 19184  015DA6  6E01               	movwf	btemp^0,c
 19185  015DA8  0E01               	movlw	1
 19186  015DAA  5E01               	subwf	btemp^0,f,c
 19187  015DAC  0EFF               	movlw	-1
 19188  015DAE  0060  F007  FFE3   	movff	btemp,plusw1
 19189  015DB4  A4D8               	btfss	status,2,c
 19190  015DB6  D791               	goto	u5600
 19191  015DB8                     u5620:
 19192                           
 19193                           ;stkvar	_sign @ sp[(-10)+8]
 19194  015DB8  0EFE               	movlw	-2
 19195  015DBA  50E3               	movf	plusw1,w,c
 19196  015DBC  B4D8               	btfsc	status,2,c
 19197  015DBE  D025               	goto	u5640
 19198                           
 19199                           ;stkvar	_quotient @ sp[(-10)+0]
 19200                           ;stkvar	_quotient @ sp[(-10)+0]
 19201  015DC0  0EF6               	movlw	-10
 19202  015DC2  6CE3               	negf	plusw1,c
 19203  015DC4  0EF7               	movlw	-9
 19204  015DC6  1EE3               	comf	plusw1,f,c
 19205  015DC8  0EF8               	movlw	-8
 19206  015DCA  1EE3               	comf	plusw1,f,c
 19207  015DCC  0EF9               	movlw	-7
 19208  015DCE  1EE3               	comf	plusw1,f,c
 19209  015DD0  0EFA               	movlw	-6
 19210  015DD2  1EE3               	comf	plusw1,f,c
 19211  015DD4  0EFB               	movlw	-5
 19212  015DD6  1EE3               	comf	plusw1,f,c
 19213  015DD8  0EFC               	movlw	-4
 19214  015DDA  1EE3               	comf	plusw1,f,c
 19215  015DDC  0EFD               	movlw	-3
 19216  015DDE  1EE3               	comf	plusw1,f,c
 19217  015DE0  E314               	bnc	u5640
 19218  015DE2  0EF7               	movlw	-9
 19219  015DE4  2AE3               	incf	plusw1,f,c
 19220  015DE6  E311               	bnc	u5640
 19221  015DE8  0EF8               	movlw	-8
 19222  015DEA  2AE3               	incf	plusw1,f,c
 19223  015DEC  E30E               	bnc	u5640
 19224  015DEE  0EF9               	movlw	-7
 19225  015DF0  2AE3               	incf	plusw1,f,c
 19226  015DF2  E30B               	bnc	u5640
 19227  015DF4  0EFA               	movlw	-6
 19228  015DF6  2AE3               	incf	plusw1,f,c
 19229  015DF8  E308               	bnc	u5640
 19230  015DFA  0EFB               	movlw	-5
 19231  015DFC  2AE3               	incf	plusw1,f,c
 19232  015DFE  E305               	bnc	u5640
 19233  015E00  0EFC               	movlw	-4
 19234  015E02  2AE3               	incf	plusw1,f,c
 19235  015E04  E302               	bnc	u5640
 19236  015E06  0EFD               	movlw	-3
 19237  015E08  2AE3               	incf	plusw1,f,c
 19238  015E0A                     u5640:
 19239                           
 19240                           ;stkvar	_quotient @ sp[(-10)+0]
 19241  015E0A  0EF6               	movlw	246
 19242  015E0C  24E1               	addwf	fsr1l,w,c
 19243  015E0E  6ED9               	movwf	fsr2l,c
 19244  015E10  0EFF               	movlw	255
 19245  015E12  20E2               	addwfc	fsr1h,w,c
 19246  015E14  6EDA               	movwf	fsr2h,c
 19247                           
 19248                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 19249  015E16  0E08               	movlw	8
 19250  015E18  6E01               	movwf	btemp^0,c
 19251  015E1A  0EEE               	movlw	-18
 19252  015E1C                     us565999:
 19253  015E1C  006F FF7B FFE3     	movff	postinc2,plusw1
 19254  015E22  28E8               	incf	wreg,w,c
 19255  015E24  2E01               	decfsz	btemp^0,f,c
 19256  015E26  D7FA               	bra	us565999
 19257                           
 19258                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 19259  015E28  0EF6               	movlw	246
 19260  015E2A  26E1               	addwf	fsr1l,f,c
 19261  015E2C  0EFF               	movlw	255
 19262  015E2E  22E2               	addwfc	fsr1h,f,c
 19263  015E30  0012               	return		;funcret
 19264  015E32                     __end_of___aodiv:
 19265                           	opt callstack 0
 19266                           
 19267 ;; *************** function _ctoa *****************
 19268 ;; Defined at:
 19269 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19270 ;; Parameters:    Size  Location     Type
 19271 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19272 ;;		 -> f(6), NULL(0), 
 19273 ;;  c               1  [STACK] unsigned char 
 19274 ;; Auto vars:     Size  Location     Type
 19275 ;;  w               2  [STACK] int 
 19276 ;;  l               2    0        int 
 19277 ;; Return value:  Size  Location     Type
 19278 ;;                  2  [STACK] int 
 19279 ;; Registers used:
 19280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19281 ;; Tracked objects:
 19282 ;;		On entry : 0/0
 19283 ;;		On exit  : 0/0
 19284 ;;		Unchanged: 0/0
 19285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19290 ;;Total ram usage:        0 bytes
 19291 ;; Hardware stack levels used:    1
 19292 ;; Hardware stack levels required when called:   20
 19293 ;; This function calls:
 19294 ;;		_pad
 19295 ;; This function is called by:
 19296 ;;		_vfpfcnvrt
 19297 ;; This function uses a reentrant model
 19298 ;;
 19299                           
 19300                           	psect	text67
 19301  018930                     __ptext67:
 19302                           	opt callstack 0
 19303  018930                     _ctoa:
 19304                           	opt callstack 0
 19305                           
 19306                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19307  018930  52E6               	movf	postinc1,f,c
 19308  018932  52E6               	movf	postinc1,f,c
 19309                           
 19310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 19311                           
 19312                           ;incstack = 0
 19313 ;; hardware stack exceeded
 19314  018934  5021               	movf	_width^0,w,c
 19315  018936  1022               	iorwf	(_width+1)^0,w,c
 19316  018938  A4D8               	btfss	status,2,c
 19317  01893A  D009               	goto	l10548
 19318                           
 19319                           ;stkvar	_w @ sp[(-2)+0]
 19320  01893C  0EFE               	movlw	-2
 19321  01893E  0060  F087  FFE3   	movff	_width,plusw1
 19322  018944  0EFF               	movlw	-1
 19323  018946  0060  F08B  FFE3   	movff	_width+1,plusw1
 19324  01894C  D016               	goto	l10550
 19325  01894E                     l10548:
 19326  01894E  0EFF               	movlw	255
 19327  018950  6E0B               	movwf	(btemp+10)^0,c
 19328  018952  0EFF               	movlw	255
 19329  018954  6E0C               	movwf	(btemp+11)^0,c
 19330  018956  0060  F084  F009   	movff	_width,btemp+8
 19331  01895C  0060  F088  F00A   	movff	_width+1,btemp+9
 19332  018962  500B               	movf	(btemp+10)^0,w,c
 19333  018964  2609               	addwf	(btemp+8)^0,f,c
 19334  018966  500C               	movf	(btemp+11)^0,w,c
 19335  018968  220A               	addwfc	(btemp+9)^0,f,c
 19336                           
 19337                           ;stkvar	_w @ sp[(-2)+0]
 19338  01896A  0EFE               	movlw	-2
 19339  01896C  0060  F027  FFE3   	movff	btemp+8,plusw1
 19340  018972  0EFF               	movlw	-1
 19341  018974  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19342  01897A                     l10550:
 19343                           
 19344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 19345                           ;stkvar	_c @ sp[(-2)+-3]
 19346  01897A  0EFB               	movlw	-5
 19347  01897C  006F FF8C  F394    	movff	plusw1,_dbuf
 19348                           
 19349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 19350  018982  0103               	movlb	3	; () banked
 19351  018984  6B95               	clrf	(_dbuf+1)& (0+255),b
 19352                           
 19353                           ; BSR set to: 3
 19354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 19355                           ;stkvar	_w @ sp[(-2)+0]
 19356  018986  0EFE               	movlw	-2
 19357  018988  006F FF8F FFE6     	movff	plusw1,postinc1
 19358  01898E  006F FF8F FFE6     	movff	plusw1,postinc1
 19359  018994  0E94               	movlw	low _dbuf
 19360  018996  6EE6               	movwf	postinc1,c
 19361  018998  0E03               	movlw	high _dbuf
 19362  01899A  6EE6               	movwf	postinc1,c
 19363                           
 19364                           ;stkvar	_fp @ sp[(-6)+-2]
 19365  01899C  0EF8               	movlw	-8
 19366  01899E  006F FF8F FFE6     	movff	plusw1,postinc1
 19367  0189A4  006F FF8F FFE6     	movff	plusw1,postinc1
 19368  0189AA  ECD1  F0BC         	call	_pad	;wreg free
 19369                           
 19370                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 19371  0189AE  0EFB               	movlw	251
 19372  0189B0  26E1               	addwf	fsr1l,f,c
 19373  0189B2  0EFF               	movlw	255
 19374  0189B4  22E2               	addwfc	fsr1h,f,c
 19375  0189B6  0012               	return		;funcret
 19376  0189B8                     __end_of_ctoa:
 19377                           	opt callstack 0
 19378                           
 19379 ;; *************** function _pad *****************
 19380 ;; Defined at:
 19381 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19382 ;; Parameters:    Size  Location     Type
 19383 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19384 ;;		 -> f(6), NULL(0), 
 19385 ;;  buf             2  [STACK] PTR unsigned char 
 19386 ;;		 -> dbuf(80), 
 19387 ;;  p               2  [STACK] int 
 19388 ;; Auto vars:     Size  Location     Type
 19389 ;;  w               2  [STACK] int 
 19390 ;;  i               2  [STACK] int 
 19391 ;; Return value:  Size  Location     Type
 19392 ;;                  2  [STACK] int 
 19393 ;; Registers used:
 19394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19395 ;; Tracked objects:
 19396 ;;		On entry : 0/3
 19397 ;;		On exit  : 0/0
 19398 ;;		Unchanged: 0/0
 19399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19404 ;;Total ram usage:        0 bytes
 19405 ;; Hardware stack levels used:    1
 19406 ;; Hardware stack levels required when called:   19
 19407 ;; This function calls:
 19408 ;;		_fputc
 19409 ;;		_fputs
 19410 ;;		_strlen
 19411 ;; This function is called by:
 19412 ;;		_ctoa
 19413 ;;		_dtoa
 19414 ;;		_efgtoa
 19415 ;;		_xtoa
 19416 ;; This function uses a reentrant model
 19417 ;;
 19418                           
 19419                           	psect	text68
 19420  0179A2                     __ptext68:
 19421                           	opt callstack 0
 19422  0179A2                     _pad:
 19423                           	opt callstack 0
 19424                           
 19425                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19426  0179A2  52E6               	movf	postinc1,f,c
 19427  0179A4  52E6               	movf	postinc1,f,c
 19428  0179A6  52E6               	movf	postinc1,f,c
 19429  0179A8  52E6               	movf	postinc1,f,c
 19430                           
 19431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 19432                           
 19433                           ;incstack = 0
 19434 ;; hardware stack exceeded
 19435  0179AA  A025               	btfss	_flags^0,0,c
 19436  0179AC  D010               	goto	l10470
 19437                           
 19438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 19439                           ;stkvar	_fp @ sp[(-4)+-2]
 19440  0179AE  0EFA               	movlw	-6
 19441  0179B0  006F FF8F FFE6     	movff	plusw1,postinc1
 19442  0179B6  006F FF8F FFE6     	movff	plusw1,postinc1
 19443                           
 19444                           ;stkvar	_buf @ sp[(-6)+-4]
 19445  0179BC  0EF6               	movlw	-10
 19446  0179BE  006F FF8F FFE6     	movff	plusw1,postinc1
 19447  0179C4  006F FF8F FFE6     	movff	plusw1,postinc1
 19448  0179CA  EC27  F0C3         	call	_fputs	;wreg free
 19449  0179CE                     l10470:
 19450                           
 19451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 19452                           ;stkvar	_p @ sp[(-4)+-6]
 19453  0179CE  0EF7               	movlw	-9
 19454  0179D0  BEE3               	btfsc	plusw1,7,c
 19455  0179D2  D011               	goto	l10474
 19456                           
 19457                           ;stkvar	_p @ sp[(-4)+-6]
 19458                           ;stkvar	_w @ sp[(-4)+0]
 19459  0179D4  0EF6               	movlw	-10
 19460  0179D6  006F FF8C  F001    	movff	plusw1,btemp
 19461  0179DC  0EFC               	movlw	-4
 19462  0179DE  0060  F007  FFE3   	movff	btemp,plusw1
 19463  0179E4  0EF7               	movlw	-9
 19464  0179E6  006F FF8C  F001    	movff	plusw1,btemp
 19465  0179EC  0EFD               	movlw	-3
 19466  0179EE  0060  F007  FFE3   	movff	btemp,plusw1
 19467  0179F4  D004               	goto	l2001
 19468  0179F6                     l10474:
 19469                           
 19470                           ;stkvar	_w @ sp[(-4)+0]
 19471  0179F6  0EFC               	movlw	-4
 19472  0179F8  6AE3               	clrf	plusw1,c
 19473  0179FA  0EFD               	movlw	-3
 19474  0179FC  6AE3               	clrf	plusw1,c
 19475  0179FE                     l2001:
 19476                           
 19477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 19478                           ;stkvar	_i @ sp[(-4)+2]
 19479  0179FE  0EFE               	movlw	-2
 19480  017A00  6AE3               	clrf	plusw1,c
 19481  017A02  0EFF               	movlw	-1
 19482  017A04  6AE3               	clrf	plusw1,c
 19483                           
 19484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19485  017A06  D01E               	goto	l10480
 19486  017A08                     l10476:
 19487                           
 19488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 19489                           ;stkvar	_fp @ sp[(-4)+-2]
 19490  017A08  0EFA               	movlw	-6
 19491  017A0A  006F FF8F FFE6     	movff	plusw1,postinc1
 19492  017A10  006F FF8F FFE6     	movff	plusw1,postinc1
 19493  017A16  0E20               	movlw	32
 19494  017A18  6EE6               	movwf	postinc1,c
 19495  017A1A  0E00               	movlw	0
 19496  017A1C  6EE6               	movwf	postinc1,c
 19497  017A1E  ECB3  F0BB         	call	_fputc	;wreg free
 19498                           
 19499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 19500                           ;stkvar	_i @ sp[(-4)+2]
 19501  017A22  0EFE               	movlw	-2
 19502  017A24  50E3               	movf	plusw1,w,c
 19503  017A26  0F01               	addlw	1
 19504  017A28  6E01               	movwf	btemp^0,c
 19505  017A2A  0EFE               	movlw	-2
 19506  017A2C  0060  F007  FFE3   	movff	btemp,plusw1
 19507  017A32  6A01               	clrf	btemp^0,c
 19508  017A34  0EFF               	movlw	-1
 19509  017A36  50E3               	movf	plusw1,w,c
 19510  017A38  2001               	addwfc	btemp^0,w,c
 19511  017A3A  6E01               	movwf	btemp^0,c
 19512  017A3C  0EFF               	movlw	-1
 19513  017A3E  0060  F007  FFE3   	movff	btemp,plusw1
 19514  017A44                     l10480:
 19515                           
 19516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19517                           ;stkvar	_w @ sp[(-4)+0]
 19518                           ;stkvar	_i @ sp[(-4)+2]
 19519  017A44  50E1               	movf	fsr1l,w,c
 19520  017A46  0FFE               	addlw	-2
 19521  017A48  6ED9               	movwf	fsr2l,c
 19522  017A4A  50E2               	movf	fsr1h,w,c
 19523  017A4C  6EDA               	movwf	fsr2h,c
 19524  017A4E  0EFF               	movlw	255
 19525  017A50  22DA               	addwfc	fsr2h,f,c
 19526  017A52  0EFC               	movlw	-4
 19527  017A54  50E3               	movf	plusw1,w,c
 19528  017A56  5CDE               	subwf	postinc2,w,c
 19529  017A58  50DE               	movf	postinc2,w,c
 19530  017A5A  0A80               	xorlw	128
 19531  017A5C  6E01               	movwf	btemp^0,c
 19532  017A5E  0EFD               	movlw	-3
 19533  017A60  50E3               	movf	plusw1,w,c
 19534  017A62  0A80               	xorlw	128
 19535  017A64  5801               	subwfb	btemp^0,w,c
 19536  017A66  A0D8               	btfss	status,0,c
 19537  017A68  D7CF               	goto	l10476
 19538                           
 19539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 19540  017A6A  B025               	btfsc	_flags^0,0,c
 19541  017A6C  D010               	goto	l10484
 19542                           
 19543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 19544                           ;stkvar	_fp @ sp[(-4)+-2]
 19545  017A6E  0EFA               	movlw	-6
 19546  017A70  006F FF8F FFE6     	movff	plusw1,postinc1
 19547  017A76  006F FF8F FFE6     	movff	plusw1,postinc1
 19548                           
 19549                           ;stkvar	_buf @ sp[(-6)+-4]
 19550  017A7C  0EF6               	movlw	-10
 19551  017A7E  006F FF8F FFE6     	movff	plusw1,postinc1
 19552  017A84  006F FF8F FFE6     	movff	plusw1,postinc1
 19553  017A8A  EC27  F0C3         	call	_fputs	;wreg free
 19554  017A8E                     l10484:
 19555                           
 19556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 19557                           ;stkvar	_w @ sp[(-4)+0]
 19558                           ;stkvar	_buf @ sp[(-4)+-4]
 19559  017A8E  0EF8               	movlw	-8
 19560  017A90  006F FF8F FFE6     	movff	plusw1,postinc1
 19561  017A96  006F FF8F FFE6     	movff	plusw1,postinc1
 19562  017A9C  ECD6  F0C2         	call	_strlen	;wreg free
 19563  017AA0  0EFC               	movlw	-4
 19564  017AA2  50E3               	movf	plusw1,w,c
 19565  017AA4  2601               	addwf	btemp^0,f,c
 19566  017AA6  0EFD               	movlw	-3
 19567  017AA8  50E3               	movf	plusw1,w,c
 19568  017AAA  2202               	addwfc	(btemp+1)^0,f,c
 19569                           
 19570                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 19571  017AAC  0EF6               	movlw	246
 19572  017AAE  26E1               	addwf	fsr1l,f,c
 19573  017AB0  0EFF               	movlw	255
 19574  017AB2  22E2               	addwfc	fsr1h,f,c
 19575  017AB4  0012               	return		;funcret
 19576  017AB6                     __end_of_pad:
 19577                           	opt callstack 0
 19578                           
 19579 ;; *************** function _strlen *****************
 19580 ;; Defined at:
 19581 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 19582 ;; Parameters:    Size  Location     Type
 19583 ;;  s               2  [STACK] PTR const unsigned char 
 19584 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19585 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 19586 ;;		 -> T(144), port_data(512), STR_7(6), STR_3(6), 
 19587 ;;		 -> V(188), 
 19588 ;; Auto vars:     Size  Location     Type
 19589 ;;  a               2  [STACK] PTR const unsigned char 
 19590 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19591 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 19592 ;;		 -> T(144), port_data(512), STR_7(6), STR_3(6), 
 19593 ;;		 -> V(188), 
 19594 ;; Return value:  Size  Location     Type
 19595 ;;                  2  [STACK] unsigned int 
 19596 ;; Registers used:
 19597 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 19598 ;; Tracked objects:
 19599 ;;		On entry : 0/0
 19600 ;;		On exit  : 0/0
 19601 ;;		Unchanged: 0/0
 19602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19607 ;;Total ram usage:        0 bytes
 19608 ;; Hardware stack levels used:    1
 19609 ;; Hardware stack levels required when called:   15
 19610 ;; This function calls:
 19611 ;;		Nothing
 19612 ;; This function is called by:
 19613 ;;		_eaDogM_WriteString
 19614 ;;		_calc_bsoc
 19615 ;;		_pad
 19616 ;;		_stoa
 19617 ;; This function uses a reentrant model
 19618 ;;
 19619                           
 19620                           	psect	text69
 19621  0185AC                     __ptext69:
 19622                           	opt callstack 0
 19623  0185AC                     _strlen:
 19624                           	opt callstack 0
 19625                           
 19626                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19627  0185AC  52E6               	movf	postinc1,f,c
 19628  0185AE  52E6               	movf	postinc1,f,c
 19629                           
 19630                           ;stkvar	_s @ sp[(-2)+-2]
 19631                           
 19632                           ;incstack = 0
 19633 ;; hardware stack exceeded
 19634  0185B0  0EFC               	movlw	-4
 19635  0185B2  006F FF8C  F00B    	movff	plusw1,btemp+10
 19636  0185B8  0EFD               	movlw	-3
 19637  0185BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19638                           
 19639                           ;stkvar	_a @ sp[(-2)+0]
 19640  0185C0  0EFF               	movlw	-1
 19641  0185C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 19642  0185C8  0EFE               	movlw	-2
 19643  0185CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19644  0185D0  D011               	goto	l6918
 19645  0185D2                     l6916:
 19646                           
 19647                           ;stkvar	_s @ sp[(-2)+-2]
 19648  0185D2  0EFC               	movlw	-4
 19649  0185D4  50E3               	movf	plusw1,w,c
 19650  0185D6  0F01               	addlw	1
 19651  0185D8  6E01               	movwf	btemp^0,c
 19652  0185DA  0EFC               	movlw	-4
 19653  0185DC  0060  F007  FFE3   	movff	btemp,plusw1
 19654  0185E2  6A01               	clrf	btemp^0,c
 19655  0185E4  0EFD               	movlw	-3
 19656  0185E6  50E3               	movf	plusw1,w,c
 19657  0185E8  2001               	addwfc	btemp^0,w,c
 19658  0185EA  6E01               	movwf	btemp^0,c
 19659  0185EC  0EFD               	movlw	-3
 19660  0185EE  0060  F007  FFE3   	movff	btemp,plusw1
 19661  0185F4                     l6918:
 19662                           
 19663                           ;stkvar	_s @ sp[(-2)+-2]
 19664  0185F4  0EFC               	movlw	-4
 19665  0185F6  006F FF8F FFF6     	movff	plusw1,tblptrl
 19666  0185FC  0EFD               	movlw	-3
 19667  0185FE  006F FF8F FFF7     	movff	plusw1,tblptrh
 19668  018604  0E00               	movlw	low (__mediumconst shr (0+16))
 19669  018606  6EF8               	movwf	tblptru,c
 19670  018608  0E1F               	movlw	(high __ramtop+-1)
 19671  01860A  64F7               	cpfsgt	tblptrh,c
 19672  01860C  D003               	bra	u4717
 19673  01860E  0008               	tblrd		*
 19674  018610  50F5               	movf	tablat,w,c
 19675  018612  D007               	bra	u4710
 19676  018614                     u4717:
 19677  018614  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19678  01861A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19679  018620  50EF               	movf	indf0,w,c
 19680  018622                     u4710:
 19681  018622  0900               	iorlw	0
 19682  018624  A4D8               	btfss	status,2,c
 19683  018626  D7D5               	goto	l6916
 19684                           
 19685                           ;stkvar	_a @ sp[(-2)+0]
 19686                           ;stkvar	_s @ sp[(-2)+-2]
 19687  018628  0EFC               	movlw	-4
 19688  01862A  006F FF8C  F001    	movff	plusw1,btemp
 19689  018630  0EFD               	movlw	-3
 19690  018632  006F FF8C  F002    	movff	plusw1,btemp+1
 19691  018638  0EFE               	movlw	-2
 19692  01863A  50E3               	movf	plusw1,w,c
 19693  01863C  5E01               	subwf	btemp^0,f,c
 19694  01863E  0EFF               	movlw	-1
 19695  018640  50E3               	movf	plusw1,w,c
 19696  018642  5A02               	subwfb	(btemp+1)^0,f,c
 19697                           
 19698                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 19699  018644  52E5               	movf	postdec1,f,c
 19700  018646  52E5               	movf	postdec1,f,c
 19701  018648  52E5               	movf	postdec1,f,c
 19702  01864A  52E5               	movf	postdec1,f,c
 19703  01864C  0012               	return		;funcret
 19704  01864E                     __end_of_strlen:
 19705                           	opt callstack 0
 19706                           
 19707 ;; *************** function _fputs *****************
 19708 ;; Defined at:
 19709 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 19710 ;; Parameters:    Size  Location     Type
 19711 ;;  s               2  [STACK] PTR const unsigned char 
 19712 ;;		 -> dbuf(80), 
 19713 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19714 ;;		 -> f(6), NULL(0), 
 19715 ;; Auto vars:     Size  Location     Type
 19716 ;;  i               2  [STACK] int 
 19717 ;;  c               1  [STACK] unsigned char 
 19718 ;; Return value:  Size  Location     Type
 19719 ;;                  2  [STACK] int 
 19720 ;; Registers used:
 19721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19722 ;; Tracked objects:
 19723 ;;		On entry : 0/3
 19724 ;;		On exit  : 0/0
 19725 ;;		Unchanged: 0/0
 19726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19731 ;;Total ram usage:        0 bytes
 19732 ;; Hardware stack levels used:    1
 19733 ;; Hardware stack levels required when called:   18
 19734 ;; This function calls:
 19735 ;;		_fputc
 19736 ;; This function is called by:
 19737 ;;		_pad
 19738 ;; This function uses a reentrant model
 19739 ;;
 19740                           
 19741                           	psect	text70
 19742  01864E                     __ptext70:
 19743                           	opt callstack 0
 19744  01864E                     _fputs:
 19745                           	opt callstack 0
 19746                           
 19747                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19748  01864E  52E6               	movf	postinc1,f,c
 19749  018650  52E6               	movf	postinc1,f,c
 19750  018652  52E6               	movf	postinc1,f,c
 19751                           
 19752                           ;stkvar	_i @ sp[(-3)+0]
 19753                           
 19754                           ;incstack = 0
 19755 ;; hardware stack exceeded
 19756  018654  0EFD               	movlw	-3
 19757  018656  6AE3               	clrf	plusw1,c
 19758  018658  0EFE               	movlw	-2
 19759  01865A  6AE3               	clrf	plusw1,c
 19760  01865C  D01F               	goto	l10464
 19761  01865E                     l10460:
 19762                           
 19763                           ;stkvar	_fp @ sp[(-3)+-4]
 19764  01865E  0EF9               	movlw	-7
 19765  018660  006F FF8F FFE6     	movff	plusw1,postinc1
 19766  018666  006F FF8F FFE6     	movff	plusw1,postinc1
 19767                           
 19768                           ;stkvar	_c @ sp[(-5)+2]
 19769  01866C  0EFD               	movlw	-3
 19770  01866E  50E3               	movf	plusw1,w,c
 19771  018670  6EE6               	movwf	postinc1,c
 19772  018672  0E00               	movlw	0
 19773  018674  6EE6               	movwf	postinc1,c
 19774  018676  ECB3  F0BB         	call	_fputc	;wreg free
 19775                           
 19776                           ;stkvar	_i @ sp[(-3)+0]
 19777  01867A  0EFD               	movlw	-3
 19778  01867C  50E3               	movf	plusw1,w,c
 19779  01867E  0F01               	addlw	1
 19780  018680  6E01               	movwf	btemp^0,c
 19781  018682  0EFD               	movlw	-3
 19782  018684  0060  F007  FFE3   	movff	btemp,plusw1
 19783  01868A  6A01               	clrf	btemp^0,c
 19784  01868C  0EFE               	movlw	-2
 19785  01868E  50E3               	movf	plusw1,w,c
 19786  018690  2001               	addwfc	btemp^0,w,c
 19787  018692  6E01               	movwf	btemp^0,c
 19788  018694  0EFE               	movlw	-2
 19789  018696  0060  F007  FFE3   	movff	btemp,plusw1
 19790  01869C                     l10464:
 19791                           
 19792                           ;stkvar	_i @ sp[(-3)+0]
 19793  01869C  0EFD               	movlw	-3
 19794  01869E  006F FF8C  F00B    	movff	plusw1,btemp+10
 19795  0186A4  0EFE               	movlw	-2
 19796  0186A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 19797                           
 19798                           ;stkvar	_s @ sp[(-3)+-2]
 19799  0186AC  0EFB               	movlw	-5
 19800  0186AE  006F FF8C  F009    	movff	plusw1,btemp+8
 19801  0186B4  0EFC               	movlw	-4
 19802  0186B6  006F FF8C  F00A    	movff	plusw1,btemp+9
 19803  0186BC  500B               	movf	(btemp+10)^0,w,c
 19804  0186BE  2409               	addwf	(btemp+8)^0,w,c
 19805  0186C0  6ED9               	movwf	fsr2l,c
 19806  0186C2  500C               	movf	(btemp+11)^0,w,c
 19807  0186C4  200A               	addwfc	(btemp+9)^0,w,c
 19808  0186C6  6EDA               	movwf	fsr2h,c
 19809  0186C8  50DF               	movf	indf2,w,c
 19810  0186CA  6E0C               	movwf	(btemp+11)^0,c
 19811                           
 19812                           ;stkvar	_c @ sp[(-3)+2]
 19813  0186CC  0EFF               	movlw	-1
 19814  0186CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 19815  0186D4  0EFF               	movlw	-1
 19816  0186D6  50E3               	movf	plusw1,w,c
 19817  0186D8  A4D8               	btfss	status,2,c
 19818  0186DA  D7C1               	goto	l10460
 19819                           
 19820                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19821  0186DC  0EF9               	movlw	249
 19822  0186DE  26E1               	addwf	fsr1l,f,c
 19823  0186E0  0EFF               	movlw	255
 19824  0186E2  22E2               	addwfc	fsr1h,f,c
 19825  0186E4  0012               	return		;funcret
 19826  0186E6                     __end_of_fputs:
 19827                           	opt callstack 0
 19828                           
 19829 ;; *************** function _fputc *****************
 19830 ;; Defined at:
 19831 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 19832 ;; Parameters:    Size  Location     Type
 19833 ;;  c               2  [STACK] int 
 19834 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19835 ;;		 -> f(6), NULL(0), 
 19836 ;; Auto vars:     Size  Location     Type
 19837 ;;		None
 19838 ;; Return value:  Size  Location     Type
 19839 ;;                  2  [STACK] int 
 19840 ;; Registers used:
 19841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19842 ;; Tracked objects:
 19843 ;;		On entry : 0/0
 19844 ;;		On exit  : 0/0
 19845 ;;		Unchanged: 0/0
 19846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19851 ;;Total ram usage:        0 bytes
 19852 ;; Hardware stack levels used:    1
 19853 ;; Hardware stack levels required when called:   17
 19854 ;; This function calls:
 19855 ;;		_putch
 19856 ;; This function is called by:
 19857 ;;		_pad
 19858 ;;		_stoa
 19859 ;;		_vfpfcnvrt
 19860 ;;		_fputs
 19861 ;; This function uses a reentrant model
 19862 ;;
 19863                           
 19864                           	psect	text71
 19865  017766                     __ptext71:
 19866                           	opt callstack 0
 19867  017766                     _fputc:
 19868                           	opt callstack 0
 19869                           
 19870                           ;stkvar	_fp @ sp[(0)+-4]
 19871                           
 19872                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19873                           ;incstack = 0
 19874 ;; hardware stack exceeded
 19875  017766  0EFC               	movlw	-4
 19876  017768  006F FF8C  F001    	movff	plusw1,btemp
 19877  01776E  0EFD               	movlw	-3
 19878  017770  50E3               	movf	plusw1,w,c
 19879  017772  1001               	iorwf	btemp^0,w,c
 19880  017774  B4D8               	btfsc	status,2,c
 19881  017776  D009               	goto	u9330
 19882                           
 19883                           ;stkvar	_fp @ sp[(0)+-4]
 19884  017778  0EFC               	movlw	-4
 19885  01777A  006F FF8C  F001    	movff	plusw1,btemp
 19886  017780  0EFD               	movlw	-3
 19887  017782  50E3               	movf	plusw1,w,c
 19888  017784  1001               	iorwf	btemp^0,w,c
 19889  017786  A4D8               	btfss	status,2,c
 19890  017788  D006               	goto	l10448
 19891  01778A                     u9330:
 19892                           
 19893                           ;stkvar	_c @ sp[(0)+-2]
 19894  01778A  0EFE               	movlw	-2
 19895  01778C  50E3               	movf	plusw1,w,c
 19896  01778E  6EE6               	movwf	postinc1,c
 19897  017790  EC14  F0CE         	call	_putch	;wreg free
 19898  017794  D075               	goto	l3019
 19899  017796                     l10448:
 19900                           
 19901                           ;stkvar	_fp @ sp[(0)+-4]
 19902  017796  0EFC               	movlw	-4
 19903  017798  006F FF8C  F00B    	movff	plusw1,btemp+10
 19904  01779E  0EFD               	movlw	-3
 19905  0177A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 19906  0177A6  0E04               	movlw	4
 19907  0177A8  240B               	addwf	(btemp+10)^0,w,c
 19908  0177AA  6ED9               	movwf	fsr2l,c
 19909  0177AC  0E00               	movlw	0
 19910  0177AE  200C               	addwfc	(btemp+11)^0,w,c
 19911  0177B0  6EDA               	movwf	fsr2h,c
 19912  0177B2  50DE               	movf	postinc2,w,c
 19913  0177B4  10DE               	iorwf	postinc2,w,c
 19914  0177B6  B4D8               	btfsc	status,2,c
 19915  0177B8  D026               	goto	u9350
 19916                           
 19917                           ;stkvar	_fp @ sp[(0)+-4]
 19918  0177BA  0EFC               	movlw	-4
 19919  0177BC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19920  0177C2  0EFD               	movlw	-3
 19921  0177C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19922  0177CA  0E04               	movlw	4
 19923  0177CC  240B               	addwf	(btemp+10)^0,w,c
 19924  0177CE  6ED9               	movwf	fsr2l,c
 19925  0177D0  0E00               	movlw	0
 19926  0177D2  200C               	addwfc	(btemp+11)^0,w,c
 19927  0177D4  6EDA               	movwf	fsr2h,c
 19928                           
 19929                           ;stkvar	_fp @ sp[(0)+-4]
 19930  0177D6  0EFC               	movlw	-4
 19931  0177D8  006F FF8C  F00B    	movff	plusw1,btemp+10
 19932  0177DE  0EFD               	movlw	-3
 19933  0177E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 19934  0177E6  0E02               	movlw	2
 19935  0177E8  240B               	addwf	(btemp+10)^0,w,c
 19936  0177EA  6EE9               	movwf	fsr0l,c
 19937  0177EC  0E00               	movlw	0
 19938  0177EE  200C               	addwfc	(btemp+11)^0,w,c
 19939  0177F0  6EEA               	movwf	fsr0h,c
 19940  0177F2  50DE               	movf	postinc2,w,c
 19941  0177F4  5CEE               	subwf	postinc0,w,c
 19942  0177F6  50EE               	movf	postinc0,w,c
 19943  0177F8  0A80               	xorlw	128
 19944  0177FA  6E01               	movwf	btemp^0,c
 19945  0177FC  50DE               	movf	postinc2,w,c
 19946  0177FE  0A80               	xorlw	128
 19947  017800  5801               	subwfb	btemp^0,w,c
 19948  017802  B0D8               	btfsc	status,0,c
 19949  017804  D03D               	goto	l3019
 19950  017806                     u9350:
 19951                           
 19952                           ;stkvar	_c @ sp[(0)+-2]
 19953                           ;stkvar	_fp @ sp[(0)+-4]
 19954  017806  0EFC               	movlw	-4
 19955  017808  006F FF8C  F00B    	movff	plusw1,btemp+10
 19956  01780E  0EFD               	movlw	-3
 19957  017810  006F FF8C  F00C    	movff	plusw1,btemp+11
 19958  017816  0E02               	movlw	2
 19959  017818  240B               	addwf	(btemp+10)^0,w,c
 19960  01781A  6ED9               	movwf	fsr2l,c
 19961  01781C  0E00               	movlw	0
 19962  01781E  200C               	addwfc	(btemp+11)^0,w,c
 19963  017820  6EDA               	movwf	fsr2h,c
 19964  017822  006F FF78  F00B    	movff	postinc2,btemp+10
 19965  017828  006F FF74  F00C    	movff	postdec2,btemp+11
 19966                           
 19967                           ;stkvar	_fp @ sp[(0)+-4]
 19968  01782E  0EFC               	movlw	-4
 19969  017830  006F FF8F FFD9     	movff	plusw1,fsr2l
 19970  017836  0EFD               	movlw	-3
 19971  017838  006F FF8F FFDA     	movff	plusw1,fsr2h
 19972  01783E  006F FF78  F009    	movff	postinc2,btemp+8
 19973  017844  006F FF74  F00A    	movff	postdec2,btemp+9
 19974  01784A  500B               	movf	(btemp+10)^0,w,c
 19975  01784C  2409               	addwf	(btemp+8)^0,w,c
 19976  01784E  6ED9               	movwf	fsr2l,c
 19977  017850  500C               	movf	(btemp+11)^0,w,c
 19978  017852  200A               	addwfc	(btemp+9)^0,w,c
 19979  017854  6EDA               	movwf	fsr2h,c
 19980  017856  0EFE               	movlw	-2
 19981  017858  006F FF8F FFDF     	movff	plusw1,indf2
 19982                           
 19983                           ;stkvar	_fp @ sp[(0)+-4]
 19984  01785E  0EFC               	movlw	-4
 19985  017860  006F FF8C  F00B    	movff	plusw1,btemp+10
 19986  017866  0EFD               	movlw	-3
 19987  017868  006F FF8C  F00C    	movff	plusw1,btemp+11
 19988  01786E  0E02               	movlw	2
 19989  017870  240B               	addwf	(btemp+10)^0,w,c
 19990  017872  6ED9               	movwf	fsr2l,c
 19991  017874  0E00               	movlw	0
 19992  017876  200C               	addwfc	(btemp+11)^0,w,c
 19993  017878  6EDA               	movwf	fsr2h,c
 19994  01787A  2ADE               	incf	postinc2,f,c
 19995  01787C  0E00               	movlw	0
 19996  01787E  22DD               	addwfc	postdec2,f,c
 19997  017880                     l3019:
 19998                           
 19999                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20000  017880  52E5               	movf	postdec1,f,c
 20001  017882  52E5               	movf	postdec1,f,c
 20002  017884  52E5               	movf	postdec1,f,c
 20003  017886  52E5               	movf	postdec1,f,c
 20004  017888  0012               	return		;funcret
 20005  01788A                     __end_of_fputc:
 20006                           	opt callstack 0
 20007                           
 20008 ;; *************** function _putch *****************
 20009 ;; Defined at:
 20010 ;;		line 170 in file "eadog.c"
 20011 ;; Parameters:    Size  Location     Type
 20012 ;;  c               1  [STACK] unsigned char 
 20013 ;; Auto vars:     Size  Location     Type
 20014 ;;		None
 20015 ;; Return value:  Size  Location     Type
 20016 ;;                  1  [STACK] void 
 20017 ;; Registers used:
 20018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20019 ;; Tracked objects:
 20020 ;;		On entry : 0/0
 20021 ;;		On exit  : 0/0
 20022 ;;		Unchanged: 0/0
 20023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20028 ;;Total ram usage:        0 bytes
 20029 ;; Hardware stack levels used:    1
 20030 ;; Hardware stack levels required when called:   16
 20031 ;; This function calls:
 20032 ;;		_ringBufS_put_dma
 20033 ;; This function is called by:
 20034 ;;		_fputc
 20035 ;; This function uses a reentrant model
 20036 ;;
 20037                           
 20038                           	psect	text72
 20039  019C28                     __ptext72:
 20040                           	opt callstack 0
 20041  019C28                     _putch:
 20042                           	opt callstack 0
 20043                           
 20044                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 20045                           ;stkvar	_c @ sp[(0)+-1]
 20046                           
 20047                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20048                           ;incstack = 0
 20049 ;; hardware stack exceeded
 20050  019C28  0EFF               	movlw	-1
 20051  019C2A  50E3               	movf	plusw1,w,c
 20052  019C2C  6EE6               	movwf	postinc1,c
 20053  019C2E  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
 20054  019C34  0060  F243  FFE6   	movff	_spi_link+7,postinc1
 20055  019C3A  EC2E  F0C2         	call	_ringBufS_put_dma	;wreg free
 20056                           
 20057                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 20058  019C3E  52E5               	movf	postdec1,f,c
 20059  019C40  0012               	return		;funcret
 20060  019C42                     __end_of_putch:
 20061                           	opt callstack 0
 20062                           
 20063 ;; *************** function _ringBufS_put_dma *****************
 20064 ;; Defined at:
 20065 ;;		line 67 in file "ringbufs.c"
 20066 ;; Parameters:    Size  Location     Type
 20067 ;;  _this           2  [STACK] PTR struct ringBufS_t
 20068 ;;		 -> ring_buf1(67), 
 20069 ;;  c               1  [STACK] const unsigned char 
 20070 ;; Auto vars:     Size  Location     Type
 20071 ;;		None
 20072 ;; Return value:  Size  Location     Type
 20073 ;;                  1  [STACK] void 
 20074 ;; Registers used:
 20075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20076 ;; Tracked objects:
 20077 ;;		On entry : 0/0
 20078 ;;		On exit  : 0/0
 20079 ;;		Unchanged: 0/0
 20080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20085 ;;Total ram usage:        0 bytes
 20086 ;; Hardware stack levels used:    1
 20087 ;; Hardware stack levels required when called:   15
 20088 ;; This function calls:
 20089 ;;		Nothing
 20090 ;; This function is called by:
 20091 ;;		_putch
 20092 ;; This function uses a reentrant model
 20093 ;;
 20094                           
 20095                           	psect	text73
 20096  01845C                     __ptext73:
 20097                           	opt callstack 0
 20098  01845C                     _ringBufS_put_dma:
 20099                           	opt callstack 0
 20100                           
 20101                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 20102                           ;stkvar	__this @ sp[(0)+-2]
 20103                           
 20104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20105                           ;incstack = 0
 20106 ;; hardware stack exceeded
 20107  01845C  0EFE               	movlw	-2
 20108  01845E  006F FF8C  F00B    	movff	plusw1,btemp+10
 20109  018464  0EFF               	movlw	-1
 20110  018466  006F FF8C  F00C    	movff	plusw1,btemp+11
 20111  01846C  0E42               	movlw	66
 20112  01846E  240B               	addwf	(btemp+10)^0,w,c
 20113  018470  6ED9               	movwf	fsr2l,c
 20114  018472  0E00               	movlw	0
 20115  018474  200C               	addwfc	(btemp+11)^0,w,c
 20116  018476  6EDA               	movwf	fsr2h,c
 20117  018478  0E40               	movlw	64
 20118  01847A  60DF               	cpfslt	indf2,c
 20119  01847C  D040               	goto	l1554
 20120                           
 20121                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 20122                           ;stkvar	_c @ sp[(0)+-3]
 20123                           ;stkvar	__this @ sp[(0)+-2]
 20124  01847E  0EFE               	movlw	-2
 20125  018480  006F FF8C  F00B    	movff	plusw1,btemp+10
 20126  018486  0EFF               	movlw	-1
 20127  018488  006F FF8C  F00C    	movff	plusw1,btemp+11
 20128  01848E  0E40               	movlw	64
 20129  018490  240B               	addwf	(btemp+10)^0,w,c
 20130  018492  6ED9               	movwf	fsr2l,c
 20131  018494  0E00               	movlw	0
 20132  018496  200C               	addwfc	(btemp+11)^0,w,c
 20133  018498  6EDA               	movwf	fsr2h,c
 20134  01849A  50DF               	movf	indf2,w,c
 20135  01849C  6E0C               	movwf	(btemp+11)^0,c
 20136                           
 20137                           ;stkvar	__this @ sp[(0)+-2]
 20138  01849E  0EFE               	movlw	-2
 20139  0184A0  006F FF8C  F009    	movff	plusw1,btemp+8
 20140  0184A6  0EFF               	movlw	-1
 20141  0184A8  006F FF8C  F00A    	movff	plusw1,btemp+9
 20142  0184AE  500C               	movf	(btemp+11)^0,w,c
 20143  0184B0  2409               	addwf	(btemp+8)^0,w,c
 20144  0184B2  6ED9               	movwf	fsr2l,c
 20145  0184B4  0E00               	movlw	0
 20146  0184B6  200A               	addwfc	(btemp+9)^0,w,c
 20147  0184B8  6EDA               	movwf	fsr2h,c
 20148  0184BA  0EFD               	movlw	-3
 20149  0184BC  006F FF8F FFDF     	movff	plusw1,indf2
 20150                           
 20151                           ;ringbufs.c: 71:   ++_this->head;
 20152                           ;stkvar	__this @ sp[(0)+-2]
 20153  0184C2  0EFE               	movlw	-2
 20154  0184C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 20155  0184CA  0EFF               	movlw	-1
 20156  0184CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 20157  0184D2  0E40               	movlw	64
 20158  0184D4  240B               	addwf	(btemp+10)^0,w,c
 20159  0184D6  6ED9               	movwf	fsr2l,c
 20160  0184D8  0E00               	movlw	0
 20161  0184DA  200C               	addwfc	(btemp+11)^0,w,c
 20162  0184DC  6EDA               	movwf	fsr2h,c
 20163  0184DE  2ADF               	incf	indf2,f,c
 20164                           
 20165                           ;ringbufs.c: 72:   ++_this->count;
 20166                           ;stkvar	__this @ sp[(0)+-2]
 20167  0184E0  0EFE               	movlw	-2
 20168  0184E2  006F FF8C  F00B    	movff	plusw1,btemp+10
 20169  0184E8  0EFF               	movlw	-1
 20170  0184EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 20171  0184F0  0E42               	movlw	66
 20172  0184F2  240B               	addwf	(btemp+10)^0,w,c
 20173  0184F4  6ED9               	movwf	fsr2l,c
 20174  0184F6  0E00               	movlw	0
 20175  0184F8  200C               	addwfc	(btemp+11)^0,w,c
 20176  0184FA  6EDA               	movwf	fsr2h,c
 20177  0184FC  2ADF               	incf	indf2,f,c
 20178  0184FE                     l1554:
 20179                           
 20180                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 20181  0184FE  52E5               	movf	postdec1,f,c
 20182  018500  52E5               	movf	postdec1,f,c
 20183  018502  52E5               	movf	postdec1,f,c
 20184  018504  0012               	return		;funcret
 20185  018506                     __end_of_ringBufS_put_dma:
 20186                           	opt callstack 0
 20187                           
 20188 ;; *************** function _atoi *****************
 20189 ;; Defined at:
 20190 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 20191 ;; Parameters:    Size  Location     Type
 20192 ;;  s               2  [STACK] PTR const unsigned char 
 20193 ;;		 -> STR_46(75), STR_44(3), STR_43(3), STR_42(19), 
 20194 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
 20195 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
 20196 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
 20197 ;;		 -> STR_29(19), STR_26(3), STR_25(3), STR_24(3), 
 20198 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
 20199 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
 20200 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
 20201 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
 20202 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 20203 ;;		 -> STR_1(17), 
 20204 ;; Auto vars:     Size  Location     Type
 20205 ;;  n               2  [STACK] int 
 20206 ;;  neg             2  [STACK] int 
 20207 ;; Return value:  Size  Location     Type
 20208 ;;                  2  [STACK] int 
 20209 ;; Registers used:
 20210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 20211 ;; Tracked objects:
 20212 ;;		On entry : 0/0
 20213 ;;		On exit  : 0/0
 20214 ;;		Unchanged: 0/0
 20215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20220 ;;Total ram usage:        0 bytes
 20221 ;; Hardware stack levels used:    1
 20222 ;; Hardware stack levels required when called:   16
 20223 ;; This function calls:
 20224 ;;		_isdigit
 20225 ;;		_isspace
 20226 ;; This function is called by:
 20227 ;;		_vfpfcnvrt
 20228 ;; This function uses a reentrant model
 20229 ;;
 20230                           
 20231                           	psect	text74
 20232  015E32                     __ptext74:
 20233                           	opt callstack 0
 20234  015E32                     _atoi:
 20235                           	opt callstack 0
 20236                           
 20237                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20238  015E32  0E09               	movlw	9
 20239  015E34  26E1               	addwf	fsr1l,f,c
 20240  015E36  0E00               	movlw	0
 20241  015E38  22E2               	addwfc	fsr1h,f,c
 20242                           
 20243                           ;stkvar	_n @ sp[(-9)+5]
 20244                           
 20245                           ;incstack = 0
 20246 ;; hardware stack exceeded
 20247  015E3A  0EFC               	movlw	-4
 20248  015E3C  6AE3               	clrf	plusw1,c
 20249  015E3E  0EFD               	movlw	-3
 20250  015E40  6AE3               	clrf	plusw1,c
 20251                           
 20252                           ;stkvar	_neg @ sp[(-9)+7]
 20253  015E42  0EFE               	movlw	-2
 20254  015E44  6AE3               	clrf	plusw1,c
 20255  015E46  0EFF               	movlw	-1
 20256  015E48  6AE3               	clrf	plusw1,c
 20257  015E4A  D011               	goto	l8442
 20258  015E4C                     l8440:
 20259                           
 20260                           ;stkvar	_s @ sp[(-9)+-2]
 20261  015E4C  0EF5               	movlw	-11
 20262  015E4E  50E3               	movf	plusw1,w,c
 20263  015E50  0F01               	addlw	1
 20264  015E52  6E01               	movwf	btemp^0,c
 20265  015E54  0EF5               	movlw	-11
 20266  015E56  0060  F007  FFE3   	movff	btemp,plusw1
 20267  015E5C  6A01               	clrf	btemp^0,c
 20268  015E5E  0EF6               	movlw	-10
 20269  015E60  50E3               	movf	plusw1,w,c
 20270  015E62  2001               	addwfc	btemp^0,w,c
 20271  015E64  6E01               	movwf	btemp^0,c
 20272  015E66  0EF6               	movlw	-10
 20273  015E68  0060  F007  FFE3   	movff	btemp,plusw1
 20274  015E6E                     l8442:
 20275                           
 20276                           ;stkvar	_atoi$5687 @ sp[(-9)+4]
 20277  015E6E  0EFB               	movlw	-5
 20278  015E70  6AE3               	clrf	plusw1,c
 20279  015E72  2AE3               	incf	plusw1,f,c
 20280                           
 20281                           ;stkvar	_s @ sp[(-9)+-2]
 20282  015E74  50E1               	movf	fsr1l,w,c
 20283  015E76  0FF5               	addlw	-11
 20284  015E78  6ED9               	movwf	fsr2l,c
 20285  015E7A  50E2               	movf	fsr1h,w,c
 20286  015E7C  6EDA               	movwf	fsr2h,c
 20287  015E7E  0EFF               	movlw	255
 20288  015E80  22DA               	addwfc	fsr2h,f,c
 20289  015E82  006F FF7B FFF6     	movff	postinc2,tblptrl
 20290  015E88  006F FF77 FFF7     	movff	postdec2,tblptrh
 20291  015E8E                     	if	0	;tblptru may be non-zero
 20292  015E8E                     	endif
 20293  015E8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20294  015E8E  0E00               	movlw	low (__mediumconst shr (0+16))
 20295  015E90  6EF8               	movwf	tblptru,c
 20296  015E92                     	endif
 20297  015E92  0008               	tblrd		*
 20298  015E94  50F5               	movf	tablat,w,c
 20299  015E96  0A20               	xorlw	32
 20300  015E98  B4D8               	btfsc	status,2,c
 20301  015E9A  D023               	goto	l8450
 20302  015E9C  0EF7               	movlw	247
 20303  015E9E  6E0B               	movwf	(btemp+10)^0,c
 20304  015EA0  0EFF               	movlw	255
 20305  015EA2  6E0C               	movwf	(btemp+11)^0,c
 20306                           
 20307                           ;stkvar	_s @ sp[(-9)+-2]
 20308  015EA4  50E1               	movf	fsr1l,w,c
 20309  015EA6  0FF5               	addlw	-11
 20310  015EA8  6ED9               	movwf	fsr2l,c
 20311  015EAA  50E2               	movf	fsr1h,w,c
 20312  015EAC  6EDA               	movwf	fsr2h,c
 20313  015EAE  0EFF               	movlw	255
 20314  015EB0  22DA               	addwfc	fsr2h,f,c
 20315  015EB2  006F FF7B FFF6     	movff	postinc2,tblptrl
 20316  015EB8  006F FF77 FFF7     	movff	postdec2,tblptrh
 20317  015EBE                     	if	0	;tblptru may be non-zero
 20318  015EBE                     	endif
 20319  015EBE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20320  015EBE  0E00               	movlw	low (__mediumconst shr (0+16))
 20321  015EC0  6EF8               	movwf	tblptru,c
 20322  015EC2                     	endif
 20323  015EC2  0008               	tblrd		*
 20324  015EC4  50F5               	movf	tablat,w,c
 20325  015EC6  6E09               	movwf	(btemp+8)^0,c
 20326  015EC8  6A0A               	clrf	(btemp+9)^0,c
 20327  015ECA  500B               	movf	(btemp+10)^0,w,c
 20328  015ECC  2609               	addwf	(btemp+8)^0,f,c
 20329  015ECE  500C               	movf	(btemp+11)^0,w,c
 20330  015ED0  220A               	addwfc	(btemp+9)^0,f,c
 20331  015ED2  500A               	movf	(btemp+9)^0,w,c
 20332  015ED4  E104               	bnz	u7630
 20333  015ED6  0E05               	movlw	5
 20334  015ED8  5C09               	subwf	(btemp+8)^0,w,c
 20335  015EDA  A0D8               	btfss	status,0,c
 20336  015EDC  D002               	goto	l8450
 20337  015EDE                     u7630:
 20338                           
 20339                           ;stkvar	_atoi$5687 @ sp[(-9)+4]
 20340  015EDE  0EFB               	movlw	-5
 20341  015EE0  6AE3               	clrf	plusw1,c
 20342  015EE2                     l8450:
 20343                           
 20344                           ;stkvar	_atoi$5687 @ sp[(-9)+4]
 20345  015EE2  0EFB               	movlw	-5
 20346  015EE4  50E3               	movf	plusw1,w,c
 20347  015EE6  6E0B               	movwf	(btemp+10)^0,c
 20348  015EE8  6A0C               	clrf	(btemp+11)^0,c
 20349                           
 20350                           ;stkvar	_atoi$5686 @ sp[(-9)+2]
 20351  015EEA  0EF9               	movlw	-7
 20352  015EEC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20353  015EF2  0EFA               	movlw	-6
 20354  015EF4  0060  F033  FFE3   	movff	btemp+11,plusw1
 20355                           
 20356                           ;stkvar	_atoi$5686 @ sp[(-9)+2]
 20357  015EFA  0EF9               	movlw	-7
 20358  015EFC  006F FF8C  F001    	movff	plusw1,btemp
 20359  015F02  0EFA               	movlw	-6
 20360  015F04  50E3               	movf	plusw1,w,c
 20361  015F06  1001               	iorwf	btemp^0,w,c
 20362  015F08  B4D8               	btfsc	status,2,c
 20363  015F0A  D01F               	goto	l8460
 20364  015F0C  D79F               	goto	l8440
 20365  015F0E                     l8456:
 20366  015F0E  0E01               	movlw	1
 20367  015F10  6E0B               	movwf	(btemp+10)^0,c
 20368  015F12  0E00               	movlw	0
 20369  015F14  6E0C               	movwf	(btemp+11)^0,c
 20370                           
 20371                           ;stkvar	_neg @ sp[(-9)+7]
 20372  015F16  0EFE               	movlw	-2
 20373  015F18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20374  015F1E  0EFF               	movlw	-1
 20375  015F20  0060  F033  FFE3   	movff	btemp+11,plusw1
 20376  015F26                     l8458:
 20377                           
 20378                           ;stkvar	_s @ sp[(-9)+-2]
 20379  015F26  0EF5               	movlw	-11
 20380  015F28  50E3               	movf	plusw1,w,c
 20381  015F2A  0F01               	addlw	1
 20382  015F2C  6E01               	movwf	btemp^0,c
 20383  015F2E  0EF5               	movlw	-11
 20384  015F30  0060  F007  FFE3   	movff	btemp,plusw1
 20385  015F36  6A01               	clrf	btemp^0,c
 20386  015F38  0EF6               	movlw	-10
 20387  015F3A  50E3               	movf	plusw1,w,c
 20388  015F3C  2001               	addwfc	btemp^0,w,c
 20389  015F3E  6E01               	movwf	btemp^0,c
 20390  015F40  0EF6               	movlw	-10
 20391  015F42  0060  F007  FFE3   	movff	btemp,plusw1
 20392  015F48  D053               	goto	l8466
 20393  015F4A                     l8460:
 20394                           
 20395                           ;stkvar	_s @ sp[(-9)+-2]
 20396  015F4A  50E1               	movf	fsr1l,w,c
 20397  015F4C  0FF5               	addlw	-11
 20398  015F4E  6ED9               	movwf	fsr2l,c
 20399  015F50  50E2               	movf	fsr1h,w,c
 20400  015F52  6EDA               	movwf	fsr2h,c
 20401  015F54  0EFF               	movlw	255
 20402  015F56  22DA               	addwfc	fsr2h,f,c
 20403  015F58  006F FF7B FFF6     	movff	postinc2,tblptrl
 20404  015F5E  006F FF77 FFF7     	movff	postdec2,tblptrh
 20405  015F64                     	if	0	;tblptru may be non-zero
 20406  015F64                     	endif
 20407  015F64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20408  015F64  0E00               	movlw	low (__mediumconst shr (0+16))
 20409  015F66  6EF8               	movwf	tblptru,c
 20410  015F68                     	endif
 20411  015F68  0008               	tblrd		*
 20412  015F6A  50F5               	movf	tablat,w,c
 20413  015F6C  6E0B               	movwf	(btemp+10)^0,c
 20414  015F6E  6A0C               	clrf	(btemp+11)^0,c
 20415                           
 20416                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20417                           ; Switch size 1, requested type "simple"
 20418                           ; Number of cases is 1, Range of values is 0 to 0
 20419                           ; switch strategies available:
 20420                           ; Name         Instructions Cycles
 20421                           ; simple_byte            4     3 (average)
 20422                           ;	Chosen strategy is simple_byte
 20423  015F70  500C               	movf	(btemp+11)^0,w,c
 20424  015F72  0A00               	xorlw	0	; case 0
 20425  015F74  A4D8               	btfss	status,2,c
 20426  015F76  D03C               	goto	l8466
 20427                           
 20428                           ; Switch size 1, requested type "simple"
 20429                           ; Number of cases is 2, Range of values is 43 to 45
 20430                           ; switch strategies available:
 20431                           ; Name         Instructions Cycles
 20432                           ; simple_byte            7     4 (average)
 20433                           ;	Chosen strategy is simple_byte
 20434  015F78  500B               	movf	(btemp+10)^0,w,c
 20435  015F7A  0A2B               	xorlw	43	; case 43
 20436  015F7C  B4D8               	btfsc	status,2,c
 20437  015F7E  D7D3               	goto	l8458
 20438  015F80  0A06               	xorlw	6	; case 45
 20439  015F82  B4D8               	btfsc	status,2,c
 20440  015F84  D7C4               	goto	l8456
 20441  015F86  D034               	goto	l8466
 20442  015F88                     l8462:
 20443                           
 20444                           ;stkvar	_n @ sp[(-9)+5]
 20445  015F88  0EFC               	movlw	-4
 20446  015F8A  006F FF8C  F00B    	movff	plusw1,btemp+10
 20447  015F90  0EFD               	movlw	-3
 20448  015F92  006F FF8C  F00C    	movff	plusw1,btemp+11
 20449  015F98  0E0A               	movlw	10
 20450  015F9A  020B               	mulwf	(btemp+10)^0,c
 20451  015F9C  006F FFCC  F009    	movff	prodl,btemp+8
 20452  015FA2  006F FFD0  F00A    	movff	prodh,btemp+9
 20453  015FA8  020C               	mulwf	(btemp+11)^0,c
 20454  015FAA  50F3               	movf	prodl,w,c
 20455  015FAC  260A               	addwf	(btemp+9)^0,f,c
 20456                           
 20457                           ;stkvar	_s @ sp[(-9)+-2]
 20458  015FAE  50E1               	movf	fsr1l,w,c
 20459  015FB0  0FF5               	addlw	-11
 20460  015FB2  6ED9               	movwf	fsr2l,c
 20461  015FB4  50E2               	movf	fsr1h,w,c
 20462  015FB6  6EDA               	movwf	fsr2h,c
 20463  015FB8  0EFF               	movlw	255
 20464  015FBA  22DA               	addwfc	fsr2h,f,c
 20465  015FBC  006F FF7B FFF6     	movff	postinc2,tblptrl
 20466  015FC2  006F FF77 FFF7     	movff	postdec2,tblptrh
 20467  015FC8                     	if	0	;tblptru may be non-zero
 20468  015FC8                     	endif
 20469  015FC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20470  015FC8  0E00               	movlw	low (__mediumconst shr (0+16))
 20471  015FCA  6EF8               	movwf	tblptru,c
 20472  015FCC                     	endif
 20473  015FCC  0008               	tblrd		*
 20474  015FCE  50F5               	movf	tablat,w,c
 20475  015FD0  5E09               	subwf	(btemp+8)^0,f,c
 20476  015FD2  0E00               	movlw	0
 20477  015FD4  5A0A               	subwfb	(btemp+9)^0,f,c
 20478  015FD6  0E30               	movlw	48
 20479  015FD8  2609               	addwf	(btemp+8)^0,f,c
 20480  015FDA  0E00               	movlw	0
 20481  015FDC  220A               	addwfc	(btemp+9)^0,f,c
 20482                           
 20483                           ;stkvar	_n @ sp[(-9)+5]
 20484  015FDE  0EFC               	movlw	-4
 20485  015FE0  0060  F027  FFE3   	movff	btemp+8,plusw1
 20486  015FE6  0EFD               	movlw	-3
 20487  015FE8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20488  015FEE  D79B               	goto	l8458
 20489  015FF0                     l8466:
 20490  015FF0  0ED0               	movlw	208
 20491  015FF2  6E0B               	movwf	(btemp+10)^0,c
 20492  015FF4  0EFF               	movlw	255
 20493  015FF6  6E0C               	movwf	(btemp+11)^0,c
 20494                           
 20495                           ;stkvar	_s @ sp[(-9)+-2]
 20496  015FF8  50E1               	movf	fsr1l,w,c
 20497  015FFA  0FF5               	addlw	-11
 20498  015FFC  6ED9               	movwf	fsr2l,c
 20499  015FFE  50E2               	movf	fsr1h,w,c
 20500  016000  6EDA               	movwf	fsr2h,c
 20501  016002  0EFF               	movlw	255
 20502  016004  22DA               	addwfc	fsr2h,f,c
 20503  016006  006F FF7B FFF6     	movff	postinc2,tblptrl
 20504  01600C  006F FF77 FFF7     	movff	postdec2,tblptrh
 20505  016012                     	if	0	;tblptru may be non-zero
 20506  016012                     	endif
 20507  016012                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20508  016012  0E00               	movlw	low (__mediumconst shr (0+16))
 20509  016014  6EF8               	movwf	tblptru,c
 20510  016016                     	endif
 20511  016016  0008               	tblrd		*
 20512  016018  50F5               	movf	tablat,w,c
 20513  01601A  6E09               	movwf	(btemp+8)^0,c
 20514  01601C  6A0A               	clrf	(btemp+9)^0,c
 20515  01601E  500B               	movf	(btemp+10)^0,w,c
 20516  016020  2609               	addwf	(btemp+8)^0,f,c
 20517  016022  500C               	movf	(btemp+11)^0,w,c
 20518  016024  220A               	addwfc	(btemp+9)^0,f,c
 20519  016026  500A               	movf	(btemp+9)^0,w,c
 20520  016028  E106               	bnz	u7650
 20521  01602A  0E0A               	movlw	10
 20522  01602C  5C09               	subwf	(btemp+8)^0,w,c
 20523  01602E  B0D8               	btfsc	status,0,c
 20524  016030  D002               	goto	u7650
 20525  016032  0E01               	movlw	1
 20526  016034  D001               	goto	u7660
 20527  016036                     u7650:
 20528  016036  0E00               	movlw	0
 20529  016038                     u7660:
 20530  016038  6E0B               	movwf	(btemp+10)^0,c
 20531  01603A  6A0C               	clrf	(btemp+11)^0,c
 20532                           
 20533                           ;stkvar	_atoi$5688 @ sp[(-9)+0]
 20534  01603C  0EF7               	movlw	-9
 20535  01603E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20536  016044  0EF8               	movlw	-8
 20537  016046  0060  F033  FFE3   	movff	btemp+11,plusw1
 20538                           
 20539                           ;stkvar	_atoi$5688 @ sp[(-9)+0]
 20540  01604C  0EF7               	movlw	-9
 20541  01604E  006F FF8C  F001    	movff	plusw1,btemp
 20542  016054  0EF8               	movlw	-8
 20543  016056  50E3               	movf	plusw1,w,c
 20544  016058  1001               	iorwf	btemp^0,w,c
 20545  01605A  A4D8               	btfss	status,2,c
 20546  01605C  D795               	goto	l8462
 20547                           
 20548                           ;stkvar	_neg @ sp[(-9)+7]
 20549  01605E  0EFE               	movlw	-2
 20550  016060  006F FF8C  F001    	movff	plusw1,btemp
 20551  016066  0EFF               	movlw	-1
 20552  016068  50E3               	movf	plusw1,w,c
 20553  01606A  1001               	iorwf	btemp^0,w,c
 20554  01606C  A4D8               	btfss	status,2,c
 20555  01606E  D00E               	goto	l8476
 20556                           
 20557                           ;stkvar	_n @ sp[(-9)+5]
 20558  016070  0EFC               	movlw	-4
 20559  016072  006F FF8C  F001    	movff	plusw1,btemp
 20560  016078  1E01               	comf	btemp^0,f,c
 20561  01607A  0EFD               	movlw	-3
 20562  01607C  006F FF8C  F002    	movff	plusw1,btemp+1
 20563  016082  1E02               	comf	(btemp+1)^0,f,c
 20564  016084  2A01               	incf	btemp^0,f,c
 20565  016086  B4D8               	btfsc	status,2,c
 20566  016088  2A02               	incf	(btemp+1)^0,f,c
 20567  01608A  D008               	goto	l2955
 20568  01608C                     l8476:
 20569                           
 20570                           ;stkvar	_n @ sp[(-9)+5]
 20571  01608C  0EFC               	movlw	-4
 20572  01608E  006F FF8C  F001    	movff	plusw1,btemp
 20573  016094  0EFD               	movlw	-3
 20574  016096  006F FF8C  F002    	movff	plusw1,btemp+1
 20575  01609C                     l2955:
 20576                           
 20577                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 20578  01609C  0EF5               	movlw	245
 20579  01609E  26E1               	addwf	fsr1l,f,c
 20580  0160A0  0EFF               	movlw	255
 20581  0160A2  22E2               	addwfc	fsr1h,f,c
 20582  0160A4  0012               	return		;funcret
 20583  0160A6                     __end_of_atoi:
 20584                           	opt callstack 0
 20585                           
 20586 ;; *************** function _isspace *****************
 20587 ;; Defined at:
 20588 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 20589 ;; Parameters:    Size  Location     Type
 20590 ;;  c               2  [STACK] int 
 20591 ;; Auto vars:     Size  Location     Type
 20592 ;;		None
 20593 ;; Return value:  Size  Location     Type
 20594 ;;                  2  [STACK] int 
 20595 ;; Registers used:
 20596 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20597 ;; Tracked objects:
 20598 ;;		On entry : 0/0
 20599 ;;		On exit  : 0/0
 20600 ;;		Unchanged: 0/0
 20601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20606 ;;Total ram usage:        0 bytes
 20607 ;; Hardware stack levels used:    1
 20608 ;; Hardware stack levels required when called:   15
 20609 ;; This function calls:
 20610 ;;		Nothing
 20611 ;; This function is called by:
 20612 ;;		_atoi
 20613 ;; This function uses a reentrant model
 20614 ;;
 20615                           
 20616                           	psect	text75
 20617  018FCC                     __ptext75:
 20618                           	opt callstack 0
 20619  018FCC                     _isspace:
 20620                           	opt callstack 0
 20621                           
 20622                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20623  018FCC  52E6               	movf	postinc1,f,c
 20624                           
 20625                           ;stkvar	_isspace$5726 @ sp[(-1)+0]
 20626                           
 20627                           ;incstack = 0
 20628 ;; hardware stack exceeded
 20629  018FCE  0EFF               	movlw	-1
 20630  018FD0  6AE3               	clrf	plusw1,c
 20631  018FD2  2AE3               	incf	plusw1,f,c
 20632                           
 20633                           ;stkvar	_c @ sp[(-1)+-2]
 20634  018FD4  0EFD               	movlw	-3
 20635  018FD6  006F FF8C  F001    	movff	plusw1,btemp
 20636  018FDC  0E20               	movlw	32
 20637  018FDE  1801               	xorwf	btemp^0,w,c
 20638  018FE0  E104               	bnz	u6560
 20639  018FE2  0EFE               	movlw	-2
 20640  018FE4  50E3               	movf	plusw1,w,c
 20641  018FE6  B4D8               	btfsc	status,2,c
 20642  018FE8  D012               	goto	l7874
 20643  018FEA                     u6560:
 20644                           
 20645                           ;stkvar	_c @ sp[(-1)+-2]
 20646  018FEA  0EFD               	movlw	-3
 20647  018FEC  50E3               	movf	plusw1,w,c
 20648  018FEE  0FF7               	addlw	247
 20649  018FF0  6E0B               	movwf	(btemp+10)^0,c
 20650  018FF2  0EFE               	movlw	-2
 20651  018FF4  006F FF8C  F00C    	movff	plusw1,btemp+11
 20652  018FFA  0EFF               	movlw	255
 20653  018FFC  220C               	addwfc	(btemp+11)^0,f,c
 20654  018FFE  500C               	movf	(btemp+11)^0,w,c
 20655  019000  E104               	bnz	u6570
 20656  019002  0E05               	movlw	5
 20657  019004  5C0B               	subwf	(btemp+10)^0,w,c
 20658  019006  A0D8               	btfss	status,0,c
 20659  019008  D002               	goto	l7874
 20660  01900A                     u6570:
 20661                           
 20662                           ;stkvar	_isspace$5726 @ sp[(-1)+0]
 20663  01900A  0EFF               	movlw	-1
 20664  01900C  6AE3               	clrf	plusw1,c
 20665  01900E                     l7874:
 20666                           
 20667                           ;stkvar	_isspace$5726 @ sp[(-1)+0]
 20668  01900E  0EFF               	movlw	-1
 20669  019010  50E3               	movf	plusw1,w,c
 20670  019012  6E01               	movwf	btemp^0,c
 20671  019014  6A02               	clrf	(btemp+1)^0,c
 20672                           
 20673                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20674  019016  52E5               	movf	postdec1,f,c
 20675  019018  52E5               	movf	postdec1,f,c
 20676  01901A  52E5               	movf	postdec1,f,c
 20677  01901C  0012               	return		;funcret
 20678  01901E                     __end_of_isspace:
 20679                           	opt callstack 0
 20680                           
 20681 ;; *************** function _isdigit *****************
 20682 ;; Defined at:
 20683 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 20684 ;; Parameters:    Size  Location     Type
 20685 ;;  c               2  [STACK] int 
 20686 ;; Auto vars:     Size  Location     Type
 20687 ;;		None
 20688 ;; Return value:  Size  Location     Type
 20689 ;;                  2  [STACK] int 
 20690 ;; Registers used:
 20691 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20692 ;; Tracked objects:
 20693 ;;		On entry : 0/0
 20694 ;;		On exit  : 0/0
 20695 ;;		Unchanged: 0/0
 20696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20701 ;;Total ram usage:        0 bytes
 20702 ;; Hardware stack levels used:    1
 20703 ;; Hardware stack levels required when called:   15
 20704 ;; This function calls:
 20705 ;;		Nothing
 20706 ;; This function is called by:
 20707 ;;		_vfpfcnvrt
 20708 ;;		_atoi
 20709 ;; This function uses a reentrant model
 20710 ;;
 20711                           
 20712                           	psect	text76
 20713  01960E                     __ptext76:
 20714                           	opt callstack 0
 20715  01960E                     _isdigit:
 20716                           	opt callstack 0
 20717                           
 20718                           ;stkvar	_c @ sp[(0)+-2]
 20719                           
 20720                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20721                           ;incstack = 0
 20722 ;; hardware stack exceeded
 20723  01960E  0EFE               	movlw	-2
 20724  019610  50E3               	movf	plusw1,w,c
 20725  019612  0FD0               	addlw	208
 20726  019614  6E0B               	movwf	(btemp+10)^0,c
 20727  019616  0EFF               	movlw	-1
 20728  019618  006F FF8C  F00C    	movff	plusw1,btemp+11
 20729  01961E  0EFF               	movlw	255
 20730  019620  220C               	addwfc	(btemp+11)^0,f,c
 20731  019622  500C               	movf	(btemp+11)^0,w,c
 20732  019624  E106               	bnz	u5520
 20733  019626  0E0A               	movlw	10
 20734  019628  5C0B               	subwf	(btemp+10)^0,w,c
 20735  01962A  B0D8               	btfsc	status,0,c
 20736  01962C  D002               	goto	u5520
 20737  01962E  0E01               	movlw	1
 20738  019630  D001               	goto	u5530
 20739  019632                     u5520:
 20740  019632  0E00               	movlw	0
 20741  019634                     u5530:
 20742  019634  6E01               	movwf	btemp^0,c
 20743  019636  6A02               	clrf	(btemp+1)^0,c
 20744                           
 20745                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20746  019638  52E5               	movf	postdec1,f,c
 20747  01963A  52E5               	movf	postdec1,f,c
 20748  01963C  0012               	return		;funcret
 20749  01963E                     __end_of_isdigit:
 20750                           	opt callstack 0
 20751                           
 20752 ;; *************** function _set_vterm *****************
 20753 ;; Defined at:
 20754 ;;		line 107 in file "mconfig.c"
 20755 ;; Parameters:    Size  Location     Type
 20756 ;;  vterm           1  [STACK] const unsigned char 
 20757 ;; Auto vars:     Size  Location     Type
 20758 ;;		None
 20759 ;; Return value:  Size  Location     Type
 20760 ;;                  1  [STACK] unsigned char 
 20761 ;; Registers used:
 20762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 20763 ;; Tracked objects:
 20764 ;;		On entry : 0/2
 20765 ;;		On exit  : 0/0
 20766 ;;		Unchanged: 0/0
 20767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20772 ;;Total ram usage:        0 bytes
 20773 ;; Hardware stack levels used:    1
 20774 ;; Hardware stack levels required when called:   15
 20775 ;; This function calls:
 20776 ;;		Nothing
 20777 ;; This function is called by:
 20778 ;;		_main
 20779 ;;		_check_help
 20780 ;; This function uses a reentrant model
 20781 ;;
 20782                           
 20783                           	psect	text77
 20784  019BB2                     __ptext77:
 20785                           	opt callstack 0
 20786  019BB2                     _set_vterm:
 20787                           	opt callstack 15
 20788                           
 20789                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 20790                           ;stkvar	_vterm @ sp[(0)+-1]
 20791                           
 20792                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20793                           ;incstack = 0
 20794  019BB2  0EFF               	movlw	-1
 20795  019BB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 20796  019BBA  0E03               	movlw	3
 20797  019BBC  160C               	andwf	(btemp+11)^0,f,c
 20798  019BBE  EE22  F11F         	lfsr	2,_D+288
 20799  019BC2  50DF               	movf	223,w,c
 20800  019BC4  180C               	xorwf	(btemp+11)^0,w,c
 20801  019BC6  0BFE               	andlw	-2
 20802  019BC8  180C               	xorwf	(btemp+11)^0,w,c
 20803  019BCA  6EDF               	movwf	223,c
 20804                           
 20805                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20806  019BCC  52E5               	movf	postdec1,f,c
 20807  019BCE  0012               	return		;funcret
 20808  019BD0                     __end_of_set_vterm:
 20809                           	opt callstack 0
 20810                           
 20811 ;; *************** function _set_temp_display_help *****************
 20812 ;; Defined at:
 20813 ;;		line 211 in file "mconfig.c"
 20814 ;; Parameters:    Size  Location     Type
 20815 ;;  new_response    1  [STACK] const enum E16509
 20816 ;; Auto vars:     Size  Location     Type
 20817 ;;		None
 20818 ;; Return value:  Size  Location     Type
 20819 ;;                  1  [STACK] enum E16509
 20820 ;; Registers used:
 20821 ;;		wreg, fsr1l, fsr1h
 20822 ;; Tracked objects:
 20823 ;;		On entry : 0/2
 20824 ;;		On exit  : 3F/2
 20825 ;;		Unchanged: 0/0
 20826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20831 ;;Total ram usage:        0 bytes
 20832 ;; Hardware stack levels used:    1
 20833 ;; Hardware stack levels required when called:   15
 20834 ;; This function calls:
 20835 ;;		Nothing
 20836 ;; This function is called by:
 20837 ;;		_check_help
 20838 ;; This function uses a reentrant model
 20839 ;;
 20840                           
 20841                           	psect	text78
 20842  019CF6                     __ptext78:
 20843                           	opt callstack 0
 20844  019CF6                     _set_temp_display_help:
 20845                           	opt callstack 14
 20846                           
 20847                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 20848                           
 20849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20850                           ;incstack = 0
 20851  019CF6  0102               	movlb	2	; () banked
 20852  019CF8  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 20853                           
 20854                           ; BSR set to: 2
 20855                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 20856                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20857  019CFA  0EFF               	movlw	-1
 20858  019CFC  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 20859                           
 20860                           ; BSR set to: 2
 20861                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 20862  019D02  52E5               	movf	postdec1,f,c
 20863  019D04  0012               	return		;funcret
 20864  019D06                     __end_of_set_temp_display_help:
 20865                           	opt callstack 0
 20866                           
 20867 ;; *************** function _set_display_info *****************
 20868 ;; Defined at:
 20869 ;;		line 200 in file "mconfig.c"
 20870 ;; Parameters:    Size  Location     Type
 20871 ;;  new_response    1  [STACK] const enum E16509
 20872 ;; Auto vars:     Size  Location     Type
 20873 ;;		None
 20874 ;; Return value:  Size  Location     Type
 20875 ;;                  1  [STACK] enum E16994
 20876 ;; Registers used:
 20877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20878 ;; Tracked objects:
 20879 ;;		On entry : 0/1
 20880 ;;		On exit  : 0/0
 20881 ;;		Unchanged: 0/0
 20882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20887 ;;Total ram usage:        0 bytes
 20888 ;; Hardware stack levels used:    1
 20889 ;; Hardware stack levels required when called:   16
 20890 ;; This function calls:
 20891 ;;		_TimerDone
 20892 ;; This function is called by:
 20893 ;;		_main
 20894 ;;		_check_help
 20895 ;; This function uses a reentrant model
 20896 ;;
 20897                           
 20898                           	psect	text79
 20899  019BD0                     __ptext79:
 20900                           	opt callstack 0
 20901  019BD0                     _set_display_info:
 20902                           	opt callstack 14
 20903                           
 20904                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 20905                           
 20906                           ; BSR set to: 2
 20907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20908                           ;incstack = 0
 20909  019BD0  0E07               	movlw	7
 20910  019BD2  6EE6               	movwf	postinc1,c
 20911  019BD4  ECDF  F0CB         	call	_TimerDone	;wreg free
 20912  019BD8  5001               	movf	btemp^0,w,c
 20913  019BDA  B4D8               	btfsc	status,2,c
 20914  019BDC  D006               	goto	l1689
 20915                           
 20916                           ;mconfig.c: 205:   old_info = V.response.info;
 20917  019BDE  0102               	movlb	2	; () banked
 20918  019BE0  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 20919                           
 20920                           ; BSR set to: 2
 20921                           ;mconfig.c: 206:   V.response.info = new_response_info;
 20922                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20923  019BE2  0EFF               	movlw	-1
 20924  019BE4  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 20925  019BEA                     l1689:
 20926                           
 20927                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 20928  019BEA  52E5               	movf	postdec1,f,c
 20929  019BEC  0012               	return		;funcret
 20930  019BEE                     __end_of_set_display_info:
 20931                           	opt callstack 0
 20932                           
 20933 ;; *************** function _mode_lamp_dim *****************
 20934 ;; Defined at:
 20935 ;;		line 13 in file "mconfig.c"
 20936 ;; Parameters:    Size  Location     Type
 20937 ;;  level           2  [STACK] const unsigned short 
 20938 ;; Auto vars:     Size  Location     Type
 20939 ;;		None
 20940 ;; Return value:  Size  Location     Type
 20941 ;;                  1  [STACK] void 
 20942 ;; Registers used:
 20943 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20944 ;; Tracked objects:
 20945 ;;		On entry : 0/2
 20946 ;;		On exit  : 0/0
 20947 ;;		Unchanged: 0/0
 20948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20953 ;;Total ram usage:        0 bytes
 20954 ;; Hardware stack levels used:    1
 20955 ;; Hardware stack levels required when called:   16
 20956 ;; This function calls:
 20957 ;;		_PWM8_LoadDutyValue
 20958 ;; This function is called by:
 20959 ;;		_main
 20960 ;;		_check_help
 20961 ;; This function uses a reentrant model
 20962 ;;
 20963                           
 20964                           	psect	text80
 20965  019C5E                     __ptext80:
 20966                           	opt callstack 0
 20967  019C5E                     _mode_lamp_dim:
 20968                           	opt callstack 14
 20969                           
 20970                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 20971                           ;stkvar	_level @ sp[(0)+-2]
 20972                           
 20973                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20974                           ;incstack = 0
 20975  019C5E  0EFE               	movlw	-2
 20976  019C60  006F FF8F FFE6     	movff	plusw1,postinc1
 20977  019C66  006F FF8F FFE6     	movff	plusw1,postinc1
 20978  019C6C  EC79  F0C9         	call	_PWM8_LoadDutyValue	;wreg free
 20979                           
 20980                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 20981  019C70  52E5               	movf	postdec1,f,c
 20982  019C72  52E5               	movf	postdec1,f,c
 20983  019C74  0012               	return		;funcret
 20984  019C76                     __end_of_mode_lamp_dim:
 20985                           	opt callstack 0
 20986                           
 20987 ;; *************** function _mode_lamp_bright *****************
 20988 ;; Defined at:
 20989 ;;		line 18 in file "mconfig.c"
 20990 ;; Parameters:    Size  Location     Type
 20991 ;;		None
 20992 ;; Auto vars:     Size  Location     Type
 20993 ;;		None
 20994 ;; Return value:  Size  Location     Type
 20995 ;;                  1  [STACK] void 
 20996 ;; Registers used:
 20997 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20998 ;; Tracked objects:
 20999 ;;		On entry : 0/0
 21000 ;;		On exit  : 0/0
 21001 ;;		Unchanged: 0/0
 21002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21007 ;;Total ram usage:        0 bytes
 21008 ;; Hardware stack levels used:    1
 21009 ;; Hardware stack levels required when called:   16
 21010 ;; This function calls:
 21011 ;;		_PWM8_LoadDutyValue
 21012 ;; This function is called by:
 21013 ;;		_check_help
 21014 ;; This function uses a reentrant model
 21015 ;;
 21016                           
 21017                           	psect	text81
 21018  019D14                     __ptext81:
 21019                           	opt callstack 0
 21020  019D14                     _mode_lamp_bright:
 21021                           	opt callstack 13
 21022                           
 21023                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 21024                           
 21025                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21026                           ;incstack = 0
 21027  019D14  0E2C               	movlw	44
 21028  019D16  6EE6               	movwf	postinc1,c
 21029  019D18  0E01               	movlw	1
 21030  019D1A  6EE6               	movwf	postinc1,c
 21031  019D1C  EC79  F0C9         	call	_PWM8_LoadDutyValue	;wreg free
 21032                           
 21033                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21034  019D20  0012               	return		;funcret
 21035  019D22                     __end_of_mode_lamp_bright:
 21036                           	opt callstack 0
 21037                           
 21038 ;; *************** function _PWM8_LoadDutyValue *****************
 21039 ;; Defined at:
 21040 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 21041 ;; Parameters:    Size  Location     Type
 21042 ;;  dutyValue       2  [STACK] unsigned short 
 21043 ;; Auto vars:     Size  Location     Type
 21044 ;;		None
 21045 ;; Return value:  Size  Location     Type
 21046 ;;                  1  [STACK] void 
 21047 ;; Registers used:
 21048 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21049 ;; Tracked objects:
 21050 ;;		On entry : 0/2
 21051 ;;		On exit  : 0/0
 21052 ;;		Unchanged: 0/0
 21053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21058 ;;Total ram usage:        0 bytes
 21059 ;; Hardware stack levels used:    1
 21060 ;; Hardware stack levels required when called:   15
 21061 ;; This function calls:
 21062 ;;		Nothing
 21063 ;; This function is called by:
 21064 ;;		_mode_lamp_dim
 21065 ;;		_mode_lamp_bright
 21066 ;; This function uses a reentrant model
 21067 ;;
 21068                           
 21069                           	psect	text82
 21070  0192F2                     __ptext82:
 21071                           	opt callstack 0
 21072  0192F2                     _PWM8_LoadDutyValue:
 21073                           	opt callstack 14
 21074                           
 21075                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 21076                           ;stkvar	_dutyValue @ sp[(0)+-2]
 21077                           
 21078                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21079                           ;incstack = 0
 21080  0192F2  0EFE               	movlw	-2
 21081  0192F4  006F FF8C  F00B    	movff	plusw1,btemp+10
 21082  0192FA  0EFF               	movlw	-1
 21083  0192FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 21084  019302  90D8               	bcf	status,0,c
 21085  019304  320C               	rrcf	(btemp+11)^0,f,c
 21086  019306  320B               	rrcf	(btemp+10)^0,f,c
 21087  019308  90D8               	bcf	status,0,c
 21088  01930A  320C               	rrcf	(btemp+11)^0,f,c
 21089  01930C  320B               	rrcf	(btemp+10)^0,f,c
 21090  01930E  500B               	movf	(btemp+10)^0,w,c
 21091  019310  6E61               	movwf	97,c	;volatile
 21092                           
 21093                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 21094                           ;stkvar	_dutyValue @ sp[(0)+-2]
 21095  019312  0EFE               	movlw	-2
 21096  019314  006F FF8C  F00C    	movff	plusw1,btemp+11
 21097  01931A  0E03               	movlw	3
 21098  01931C  160C               	andwf	(btemp+11)^0,f,c
 21099  01931E  0E06               	movlw	6
 21100  019320  6E01               	movwf	btemp^0,c
 21101  019322                     u8055:
 21102  019322  90D8               	bcf	status,0,c
 21103  019324  360C               	rlcf	(btemp+11)^0,f,c
 21104  019326  2E01               	decfsz	btemp^0,f,c
 21105  019328  D7FC               	goto	u8055
 21106  01932A  500C               	movf	(btemp+11)^0,w,c
 21107  01932C  6E60               	movwf	96,c	;volatile
 21108                           
 21109                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 21110  01932E  52E5               	movf	postdec1,f,c
 21111  019330  52E5               	movf	postdec1,f,c
 21112  019332  0012               	return		;funcret
 21113  019334                     __end_of_PWM8_LoadDutyValue:
 21114                           	opt callstack 0
 21115                           
 21116 ;; *************** function _help_button *****************
 21117 ;; Defined at:
 21118 ;;		line 26 in file "mconfig.c"
 21119 ;; Parameters:    Size  Location     Type
 21120 ;;		None
 21121 ;; Auto vars:     Size  Location     Type
 21122 ;;		None
 21123 ;; Return value:  Size  Location     Type
 21124 ;;                  1  [STACK] _Bool 
 21125 ;; Registers used:
 21126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21127 ;; Tracked objects:
 21128 ;;		On entry : 0/2
 21129 ;;		On exit  : 0/0
 21130 ;;		Unchanged: 0/0
 21131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21136 ;;Total ram usage:        0 bytes
 21137 ;; Hardware stack levels used:    1
 21138 ;; Hardware stack levels required when called:   16
 21139 ;; This function calls:
 21140 ;;		_StartTimer
 21141 ;;		_TimerDone
 21142 ;; This function is called by:
 21143 ;;		_check_help
 21144 ;; This function uses a reentrant model
 21145 ;;
 21146                           
 21147                           	psect	text83
 21148  019472                     __ptext83:
 21149                           	opt callstack 0
 21150  019472                     _help_button:
 21151                           	opt callstack 13
 21152                           
 21153                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 21154                           
 21155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21156                           ;incstack = 0
 21157  019472  B0CB               	btfsc	203,0,c	;volatile
 21158  019474  D00C               	goto	l1632
 21159                           
 21160                           ;mconfig.c: 29:   V.help = 1;
 21161  019476  0102               	movlb	2	; () banked
 21162  019478  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 21163                           
 21164                           ; BSR set to: 2
 21165                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 21166  01947A  0E08               	movlw	8
 21167  01947C  6EE6               	movwf	postinc1,c
 21168  01947E  ECDF  F0CB         	call	_TimerDone	;wreg free
 21169  019482  5001               	movf	btemp^0,w,c
 21170  019484  B4D8               	btfsc	status,2,c
 21171  019486  D003               	goto	l1632
 21172                           
 21173                           ;mconfig.c: 31:    return 1;
 21174  019488  0E01               	movlw	1
 21175  01948A  6E01               	movwf	btemp^0,c
 21176  01948C  0012               	return	
 21177  01948E                     l1632:
 21178                           
 21179                           ;mconfig.c: 34:  if (!V.help)
 21180  01948E  0102               	movlb	2	; () banked
 21181  019490  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 21182  019492  D008               	goto	l9390
 21183                           
 21184                           ; BSR set to: 2
 21185                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 21186  019494  0E2C               	movlw	44
 21187  019496  6EE6               	movwf	postinc1,c
 21188  019498  0E01               	movlw	1
 21189  01949A  6EE6               	movwf	postinc1,c
 21190  01949C  0E08               	movlw	8
 21191  01949E  6EE6               	movwf	postinc1,c
 21192  0194A0  EC9A  F0C9         	call	_StartTimer	;wreg free
 21193  0194A4                     l9390:
 21194                           
 21195                           ;mconfig.c: 37:  return 0;
 21196  0194A4  0E00               	movlw	0
 21197  0194A6  6E01               	movwf	btemp^0,c
 21198                           
 21199                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 21200  0194A8  0012               	return		;funcret
 21201  0194AA                     __end_of_help_button:
 21202                           	opt callstack 0
 21203                           
 21204 ;; *************** function _TimerDone *****************
 21205 ;; Defined at:
 21206 ;;		line 20 in file "timers.c"
 21207 ;; Parameters:    Size  Location     Type
 21208 ;;  timer           1  [STACK] const unsigned char 
 21209 ;; Auto vars:     Size  Location     Type
 21210 ;;		None
 21211 ;; Return value:  Size  Location     Type
 21212 ;;                  1  [STACK] _Bool 
 21213 ;; Registers used:
 21214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21215 ;; Tracked objects:
 21216 ;;		On entry : 0/1
 21217 ;;		On exit  : 0/0
 21218 ;;		Unchanged: 0/0
 21219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21224 ;;Total ram usage:        0 bytes
 21225 ;; Hardware stack levels used:    1
 21226 ;; Hardware stack levels required when called:   15
 21227 ;; This function calls:
 21228 ;;		Nothing
 21229 ;; This function is called by:
 21230 ;;		_main
 21231 ;;		_WaitMs
 21232 ;;		_help_button
 21233 ;;		_check_help
 21234 ;;		_set_display_info
 21235 ;; This function uses a reentrant model
 21236 ;;
 21237                           
 21238                           	psect	text84
 21239  0197BE                     __ptext84:
 21240                           	opt callstack 0
 21241  0197BE                     _TimerDone:
 21242                           	opt callstack 14
 21243                           
 21244                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21245                           ;incstack = 0
 21246  0197BE  0004               	clrwdt		;# 
 21247                           
 21248                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 21249                           ;stkvar	_timer @ sp[(0)+-1]
 21250  0197C0  0EFF               	movlw	-1
 21251  0197C2  50E3               	movf	plusw1,w,c
 21252  0197C4  0D02               	mullw	2
 21253  0197C6  0EDA               	movlw	low _tickCount
 21254  0197C8  24F3               	addwf	243,w,c
 21255  0197CA  6ED9               	movwf	fsr2l,c
 21256  0197CC  0E01               	movlw	high _tickCount
 21257  0197CE  20F4               	addwfc	prodh,w,c
 21258  0197D0  6EDA               	movwf	fsr2h,c
 21259  0197D2  50DE               	movf	postinc2,w,c
 21260  0197D4  10DE               	iorwf	postinc2,w,c
 21261  0197D6  A4D8               	btfss	status,2,c
 21262  0197D8  D002               	goto	l8696
 21263                           
 21264                           ;timers.c: 24:   return 1;
 21265  0197DA  0E01               	movlw	1
 21266  0197DC  D001               	goto	L20
 21267  0197DE                     l8696:
 21268                           
 21269                           ;timers.c: 26:  return 0;
 21270  0197DE  0E00               	movlw	0
 21271  0197E0                     L20:
 21272  0197E0  6E01               	movwf	btemp^0,c
 21273                           
 21274                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21275  0197E2  52E5               	movf	postdec1,f,c
 21276  0197E4  0012               	return		;funcret
 21277  0197E6                     __end_of_TimerDone:
 21278                           	opt callstack 0
 21279                           
 21280 ;; *************** function _StartTimer *****************
 21281 ;; Defined at:
 21282 ;;		line 12 in file "timers.c"
 21283 ;; Parameters:    Size  Location     Type
 21284 ;;  timer           1  [STACK] const unsigned char 
 21285 ;;  count           2  [STACK] const unsigned short 
 21286 ;; Auto vars:     Size  Location     Type
 21287 ;;		None
 21288 ;; Return value:  Size  Location     Type
 21289 ;;                  1  [STACK] void 
 21290 ;; Registers used:
 21291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21292 ;; Tracked objects:
 21293 ;;		On entry : 0/0
 21294 ;;		On exit  : 0/0
 21295 ;;		Unchanged: 0/0
 21296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21301 ;;Total ram usage:        0 bytes
 21302 ;; Hardware stack levels used:    1
 21303 ;; Hardware stack levels required when called:   15
 21304 ;; This function calls:
 21305 ;;		Nothing
 21306 ;; This function is called by:
 21307 ;;		_main
 21308 ;;		_WaitMs
 21309 ;;		_help_button
 21310 ;;		_check_help
 21311 ;;		_calc_bsoc
 21312 ;; This function uses a reentrant model
 21313 ;;
 21314                           
 21315                           	psect	text85
 21316  019334                     __ptext85:
 21317                           	opt callstack 0
 21318  019334                     _StartTimer:
 21319                           	opt callstack 0
 21320                           
 21321                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 21322                           ;stkvar	_count @ sp[(0)+-3]
 21323                           
 21324                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21325                           ;incstack = 0
 21326 ;; hardware stack exceeded
 21327  019334  0EFD               	movlw	-3
 21328  019336  006F FF8C  F00B    	movff	plusw1,btemp+10
 21329  01933C  0EFE               	movlw	-2
 21330  01933E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21331  019344  90D8               	bcf	status,0,c
 21332  019346  340B               	rlcf	(btemp+10)^0,w,c
 21333  019348  6E09               	movwf	(btemp+8)^0,c
 21334  01934A  340C               	rlcf	(btemp+11)^0,w,c
 21335  01934C  6E0A               	movwf	(btemp+9)^0,c
 21336                           
 21337                           ;stkvar	_timer @ sp[(0)+-1]
 21338  01934E  0EFF               	movlw	-1
 21339  019350  50E3               	movf	plusw1,w,c
 21340  019352  0D02               	mullw	2
 21341  019354  0EDA               	movlw	low _tickCount
 21342  019356  24F3               	addwf	243,w,c
 21343  019358  6ED9               	movwf	fsr2l,c
 21344  01935A  0E01               	movlw	high _tickCount
 21345  01935C  20F4               	addwfc	prodh,w,c
 21346  01935E  6EDA               	movwf	fsr2h,c
 21347  019360  0060  F027  FFDE   	movff	btemp+8,postinc2
 21348  019366  0060  F02B  FFDD   	movff	btemp+9,postdec2
 21349                           
 21350                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 21351  01936C  52E5               	movf	postdec1,f,c
 21352  01936E  52E5               	movf	postdec1,f,c
 21353  019370  52E5               	movf	postdec1,f,c
 21354  019372  0012               	return		;funcret
 21355  019374                     __end_of_StartTimer:
 21356                           	opt callstack 0
 21357                           
 21358 ;; *************** function _display_info *****************
 21359 ;; Defined at:
 21360 ;;		line 190 in file "mconfig.c"
 21361 ;; Parameters:    Size  Location     Type
 21362 ;;		None
 21363 ;; Auto vars:     Size  Location     Type
 21364 ;;		None
 21365 ;; Return value:  Size  Location     Type
 21366 ;;                  1  [STACK] enum E16509
 21367 ;; Registers used:
 21368 ;;		btemp
 21369 ;; Tracked objects:
 21370 ;;		On entry : 0/2
 21371 ;;		On exit  : 0/0
 21372 ;;		Unchanged: 0/0
 21373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21378 ;;Total ram usage:        0 bytes
 21379 ;; Hardware stack levels used:    1
 21380 ;; Hardware stack levels required when called:   15
 21381 ;; This function calls:
 21382 ;;		Nothing
 21383 ;; This function is called by:
 21384 ;;		_check_help
 21385 ;; This function uses a reentrant model
 21386 ;;
 21387                           
 21388                           	psect	text86
 21389  019D82                     __ptext86:
 21390                           	opt callstack 0
 21391  019D82                     _display_info:
 21392                           	opt callstack 14
 21393                           
 21394                           ;mconfig.c: 192:  return V.response.info;
 21395                           
 21396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21397                           ;incstack = 0
 21398  019D82  0060  FA8C  F001   	movff	_V+163,btemp	;volatile
 21399                           
 21400                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21401  019D88  0012               	return		;funcret
 21402  019D8A                     __end_of_display_info:
 21403                           	opt callstack 0
 21404                           
 21405 ;; *************** function _display_help *****************
 21406 ;; Defined at:
 21407 ;;		line 195 in file "mconfig.c"
 21408 ;; Parameters:    Size  Location     Type
 21409 ;;		None
 21410 ;; Auto vars:     Size  Location     Type
 21411 ;;		None
 21412 ;; Return value:  Size  Location     Type
 21413 ;;                  1  [STACK] enum E16509
 21414 ;; Registers used:
 21415 ;;		btemp
 21416 ;; Tracked objects:
 21417 ;;		On entry : 3F/2
 21418 ;;		On exit  : 0/0
 21419 ;;		Unchanged: 0/0
 21420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21425 ;;Total ram usage:        0 bytes
 21426 ;; Hardware stack levels used:    1
 21427 ;; Hardware stack levels required when called:   15
 21428 ;; This function calls:
 21429 ;;		Nothing
 21430 ;; This function is called by:
 21431 ;;		_check_help
 21432 ;; This function uses a reentrant model
 21433 ;;
 21434                           
 21435                           	psect	text87
 21436  019D8A                     __ptext87:
 21437                           	opt callstack 0
 21438  019D8A                     _display_help:
 21439                           	opt callstack 14
 21440                           
 21441                           ;mconfig.c: 197:  return V.response.help_temp;
 21442                           
 21443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21444                           ;incstack = 0
 21445  019D8A  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 21446                           
 21447                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21448  019D90  0012               	return		;funcret
 21449  019D92                     __end_of_display_help:
 21450                           	opt callstack 0
 21451                           
 21452 ;; *************** function _check_enter_button *****************
 21453 ;; Defined at:
 21454 ;;		line 42 in file "hid.c"
 21455 ;; Parameters:    Size  Location     Type
 21456 ;;  h               1  [STACK] PTR struct H_data
 21457 ;;		 -> H(7), 
 21458 ;; Auto vars:     Size  Location     Type
 21459 ;;		None
 21460 ;; Return value:  Size  Location     Type
 21461 ;;                  1  [STACK] _Bool 
 21462 ;; Registers used:
 21463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21464 ;; Tracked objects:
 21465 ;;		On entry : 0/1
 21466 ;;		On exit  : 0/0
 21467 ;;		Unchanged: 0/0
 21468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21473 ;;Total ram usage:        0 bytes
 21474 ;; Hardware stack levels used:    1
 21475 ;; Hardware stack levels required when called:   15
 21476 ;; This function calls:
 21477 ;;		Nothing
 21478 ;; This function is called by:
 21479 ;;		_main
 21480 ;; This function uses a reentrant model
 21481 ;;
 21482                           
 21483                           	psect	text88
 21484  019374                     __ptext88:
 21485                           	opt callstack 0
 21486  019374                     _check_enter_button:
 21487                           	opt callstack 15
 21488                           
 21489                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 21490                           ;stkvar	_h @ sp[(0)+-1]
 21491                           
 21492                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21493                           ;incstack = 0
 21494  019374  0EFF               	movlw	-1
 21495  019376  50E3               	movf	plusw1,w,c
 21496  019378  6ED9               	movwf	fsr2l,c
 21497  01937A  6ADA               	clrf	fsr2h,c
 21498  01937C  0E04               	movlw	4
 21499  01937E  26D9               	addwf	fsr2l,f,c
 21500  019380  50DF               	movf	indf2,w,c
 21501  019382  A4D8               	btfss	status,2,c
 21502  019384  D013               	goto	l9962
 21503                           
 21504                           ;stkvar	_h @ sp[(0)+-1]
 21505  019386  0EFF               	movlw	-1
 21506  019388  50E3               	movf	plusw1,w,c
 21507  01938A  6ED9               	movwf	fsr2l,c
 21508  01938C  6ADA               	clrf	fsr2h,c
 21509  01938E  0E05               	movlw	5
 21510  019390  26D9               	addwf	fsr2l,f,c
 21511  019392  50DF               	movf	indf2,w,c
 21512  019394  A4D8               	btfss	status,2,c
 21513  019396  D00A               	goto	l9962
 21514                           
 21515                           ;hid.c: 45:   h->wait_enter = 1;
 21516                           ;stkvar	_h @ sp[(0)+-1]
 21517  019398  0EFF               	movlw	-1
 21518  01939A  50E3               	movf	plusw1,w,c
 21519  01939C  6ED9               	movwf	fsr2l,c
 21520  01939E  6ADA               	clrf	fsr2h,c
 21521  0193A0  0E04               	movlw	4
 21522  0193A2  26D9               	addwf	fsr2l,f,c
 21523  0193A4  0E01               	movlw	1
 21524  0193A6  6EDF               	movwf	indf2,c
 21525                           
 21526                           ;hid.c: 46:   return 1;
 21527  0193A8  0E01               	movlw	1
 21528  0193AA  D001               	goto	L21
 21529  0193AC                     l9962:
 21530                           
 21531                           ;hid.c: 48:  return 0;
 21532  0193AC  0E00               	movlw	0
 21533  0193AE                     L21:
 21534  0193AE  6E01               	movwf	btemp^0,c
 21535                           
 21536                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 21537  0193B0  52E5               	movf	postdec1,f,c
 21538  0193B2  0012               	return		;funcret
 21539  0193B4                     __end_of_check_enter_button:
 21540                           	opt callstack 0
 21541                           
 21542 ;; *************** function _check_adc_scan *****************
 21543 ;; Defined at:
 21544 ;;		line 56 in file "daq.c"
 21545 ;; Parameters:    Size  Location     Type
 21546 ;;		None
 21547 ;; Auto vars:     Size  Location     Type
 21548 ;;		None
 21549 ;; Return value:  Size  Location     Type
 21550 ;;                  1  [STACK] _Bool 
 21551 ;; Registers used:
 21552 ;;		btemp
 21553 ;; Tracked objects:
 21554 ;;		On entry : 0/1
 21555 ;;		On exit  : 0/0
 21556 ;;		Unchanged: 0/0
 21557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21562 ;;Total ram usage:        0 bytes
 21563 ;; Hardware stack levels used:    1
 21564 ;; Hardware stack levels required when called:   15
 21565 ;; This function calls:
 21566 ;;		Nothing
 21567 ;; This function is called by:
 21568 ;;		_main
 21569 ;; This function uses a reentrant model
 21570 ;;
 21571                           
 21572                           	psect	text89
 21573  019D92                     __ptext89:
 21574                           	opt callstack 0
 21575  019D92                     _check_adc_scan:
 21576                           	opt callstack 15
 21577                           
 21578                           ;daq.c: 58:  return R.done;
 21579                           
 21580                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21581                           ;incstack = 0
 21582  019D92  0060  F3C8  F001   	movff	_R+39,btemp	;volatile
 21583                           
 21584                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21585  019D98  0012               	return		;funcret
 21586  019D9A                     __end_of_check_adc_scan:
 21587                           	opt callstack 0
 21588                           
 21589 ;; *************** function _calc_model_data *****************
 21590 ;; Defined at:
 21591 ;;		line 56 in file "mbmc.c"
 21592 ;; Parameters:    Size  Location     Type
 21593 ;;		None
 21594 ;; Auto vars:     Size  Location     Type
 21595 ;;		None
 21596 ;; Return value:  Size  Location     Type
 21597 ;;                  1  [STACK] void 
 21598 ;; Registers used:
 21599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21600 ;; Tracked objects:
 21601 ;;		On entry : 0/1
 21602 ;;		On exit  : 3F/1
 21603 ;;		Unchanged: 0/0
 21604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21609 ;;Total ram usage:        0 bytes
 21610 ;; Hardware stack levels used:    1
 21611 ;; Hardware stack levels required when called:   18
 21612 ;; This function calls:
 21613 ;;		___fladd
 21614 ;;		___flmul
 21615 ;;		___flsub
 21616 ;;		_lp_filter
 21617 ;;		_start_bsoc
 21618 ;;		_stop_bsoc
 21619 ;; This function is called by:
 21620 ;;		_main
 21621 ;; This function uses a reentrant model
 21622 ;;
 21623                           
 21624                           	psect	text90
 21625  01561A                     __ptext90:
 21626                           	opt callstack 0
 21627  01561A                     _calc_model_data:
 21628                           	opt callstack 12
 21629                           
 21630                           ;mbmc.c: 58:  stop_bsoc();
 21631                           
 21632                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21633                           ;incstack = 0
 21634  01561A  ECDA  F0CE         	call	_stop_bsoc	;wreg free
 21635                           
 21636                           ; BSR set to: 57
 21637                           ;mbmc.c: 60:  if (!V.calib) {
 21638  01561E  0102               	movlb	2	; () banked
 21639  015620  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 21640  015622  A4D8               	btfss	status,2,c
 21641  015624  D161               	goto	l9862
 21642                           
 21643                           ; BSR set to: 2
 21644                           ;mbmc.c: 61:   C.c_bat = C.calc[C_BATT];
 21645  015626  C100  F144         	movff	_C,_C+68	;volatile
 21646  01562A  C101  F145         	movff	_C+1,_C+69	;volatile
 21647  01562E  C102  F146         	movff	_C+2,_C+70	;volatile
 21648  015632  C103  F147         	movff	_C+3,_C+71	;volatile
 21649                           
 21650                           ;mbmc.c: 62:   C.c_pv = C.calc[C_PV];
 21651  015636  C104  F148         	movff	_C+4,_C+72	;volatile
 21652  01563A  C105  F149         	movff	_C+5,_C+73	;volatile
 21653  01563E  C106  F14A         	movff	_C+6,_C+74	;volatile
 21654  015642  C107  F14B         	movff	_C+7,_C+75	;volatile
 21655                           
 21656                           ;mbmc.c: 63:   C.v_bat = C.calc[V_BAT];
 21657  015646  C110  F154         	movff	_C+16,_C+84	;volatile
 21658  01564A  C111  F155         	movff	_C+17,_C+85	;volatile
 21659  01564E  C112  F156         	movff	_C+18,_C+86	;volatile
 21660  015652  C113  F157         	movff	_C+19,_C+87	;volatile
 21661                           
 21662                           ;mbmc.c: 64:   C.v_pv = C.calc[V_PV];
 21663  015656  C114  F150         	movff	_C+20,_C+80	;volatile
 21664  01565A  C115  F151         	movff	_C+21,_C+81	;volatile
 21665  01565E  C116  F152         	movff	_C+22,_C+82	;volatile
 21666  015662  C117  F153         	movff	_C+23,_C+83	;volatile
 21667                           
 21668                           ;mbmc.c: 65:   C.v_inverter = C.calc[V_INVERTER];
 21669  015666  C130  F164         	movff	_C+48,_C+100	;volatile
 21670  01566A  C131  F165         	movff	_C+49,_C+101	;volatile
 21671  01566E  C132  F166         	movff	_C+50,_C+102	;volatile
 21672  015672  C133  F167         	movff	_C+51,_C+103	;volatile
 21673                           
 21674                           ; BSR set to: 2
 21675                           ;mbmc.c: 66:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 21676  015676  0E01               	movlw	1
 21677  015678  6EE6               	movwf	postinc1,c
 21678  01567A  0E10               	movlw	16
 21679  01567C  6EE6               	movwf	postinc1,c
 21680  01567E  0060  F403  FFE6   	movff	_C,postinc1
 21681  015684  0060  F407  FFE6   	movff	_C+1,postinc1
 21682  01568A  0060  F40B  FFE6   	movff	_C+2,postinc1
 21683  015690  0060  F40F  FFE6   	movff	_C+3,postinc1
 21684  015696  0060  F413  FFE6   	movff	_C+4,postinc1
 21685  01569C  0060  F417  FFE6   	movff	_C+5,postinc1
 21686  0156A2  0060  F41B  FFE6   	movff	_C+6,postinc1
 21687  0156A8  0060  F41F  FFE6   	movff	_C+7,postinc1
 21688  0156AE  ECCB  F0C8         	call	___flsub	;wreg free
 21689  0156B2  0060  F007  FFE6   	movff	btemp,postinc1
 21690  0156B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21691  0156BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21692  0156C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 21693  0156CA  EC62  F0B5         	call	_lp_filter	;wreg free
 21694  0156CE  0060  F004  F140   	movff	btemp,_C+64	;volatile
 21695  0156D4  0060  F008  F141   	movff	btemp+1,_C+65	;volatile
 21696  0156DA  0060  F00C  F142   	movff	btemp+2,_C+66	;volatile
 21697  0156E0  0060  F010  F143   	movff	btemp+3,_C+67	;volatile
 21698                           
 21699                           ;mbmc.c: 67:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 21700  0156E6  0E01               	movlw	1
 21701  0156E8  6EE6               	movwf	postinc1,c
 21702  0156EA  0E11               	movlw	17
 21703  0156EC  6EE6               	movwf	postinc1,c
 21704  0156EE  0060  F553  FFE6   	movff	_C+84,postinc1
 21705  0156F4  0060  F557  FFE6   	movff	_C+85,postinc1
 21706  0156FA  0060  F55B  FFE6   	movff	_C+86,postinc1
 21707  015700  0060  F55F  FFE6   	movff	_C+87,postinc1
 21708  015706  0060  F503  FFE6   	movff	_C+64,postinc1
 21709  01570C  0060  F507  FFE6   	movff	_C+65,postinc1
 21710  015712  0060  F50B  FFE6   	movff	_C+66,postinc1
 21711  015718  0060  F50F  FFE6   	movff	_C+67,postinc1
 21712  01571E  EC1C  F093         	call	___flmul	;wreg free
 21713  015722  0060  F007  FFE6   	movff	btemp,postinc1
 21714  015728  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21715  01572E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21716  015734  0060  F013  FFE6   	movff	btemp+3,postinc1
 21717  01573A  EC62  F0B5         	call	_lp_filter	;wreg free
 21718  01573E  0060  F004  F168   	movff	btemp,_C+104	;volatile
 21719  015744  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 21720  01574A  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 21721  015750  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 21722                           
 21723                           ;mbmc.c: 68:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 21724  015756  0E01               	movlw	1
 21725  015758  6EE6               	movwf	postinc1,c
 21726  01575A  0E12               	movlw	18
 21727  01575C  6EE6               	movwf	postinc1,c
 21728  01575E  0060  F543  FFE6   	movff	_C+80,postinc1
 21729  015764  0060  F547  FFE6   	movff	_C+81,postinc1
 21730  01576A  0060  F54B  FFE6   	movff	_C+82,postinc1
 21731  015770  0060  F54F  FFE6   	movff	_C+83,postinc1
 21732  015776  0060  F523  FFE6   	movff	_C+72,postinc1
 21733  01577C  0060  F527  FFE6   	movff	_C+73,postinc1
 21734  015782  0060  F52B  FFE6   	movff	_C+74,postinc1
 21735  015788  0060  F52F  FFE6   	movff	_C+75,postinc1
 21736  01578E  EC1C  F093         	call	___flmul	;wreg free
 21737  015792  0060  F007  FFE6   	movff	btemp,postinc1
 21738  015798  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21739  01579E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21740  0157A4  0060  F013  FFE6   	movff	btemp+3,postinc1
 21741  0157AA  EC62  F0B5         	call	_lp_filter	;wreg free
 21742  0157AE  0060  F004  F170   	movff	btemp,_C+112	;volatile
 21743  0157B4  0060  F008  F171   	movff	btemp+1,_C+113	;volatile
 21744  0157BA  0060  F00C  F172   	movff	btemp+2,_C+114	;volatile
 21745  0157C0  0060  F010  F173   	movff	btemp+3,_C+115	;volatile
 21746                           
 21747                           ;mbmc.c: 69:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 21748  0157C6  0E01               	movlw	1
 21749  0157C8  6EE6               	movwf	postinc1,c
 21750  0157CA  0E13               	movlw	19
 21751  0157CC  6EE6               	movwf	postinc1,c
 21752  0157CE  0E00               	movlw	0
 21753  0157D0  6EE6               	movwf	postinc1,c
 21754  0157D2  0E00               	movlw	0
 21755  0157D4  6EE6               	movwf	postinc1,c
 21756  0157D6  0E60               	movlw	96
 21757  0157D8  6EE6               	movwf	postinc1,c
 21758  0157DA  0EC1               	movlw	193
 21759  0157DC  6EE6               	movwf	postinc1,c
 21760  0157DE  0060  F593  FFE6   	movff	_C+100,postinc1
 21761  0157E4  0060  F597  FFE6   	movff	_C+101,postinc1
 21762  0157EA  0060  F59B  FFE6   	movff	_C+102,postinc1
 21763  0157F0  0060  F59F  FFE6   	movff	_C+103,postinc1
 21764  0157F6  0060  F503  FFE6   	movff	_C+64,postinc1
 21765  0157FC  0060  F507  FFE6   	movff	_C+65,postinc1
 21766  015802  0060  F50B  FFE6   	movff	_C+66,postinc1
 21767  015808  0060  F50F  FFE6   	movff	_C+67,postinc1
 21768  01580E  EC1C  F093         	call	___flmul	;wreg free
 21769  015812  0060  F007  FFE6   	movff	btemp,postinc1
 21770  015818  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21771  01581E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21772  015824  0060  F013  FFE6   	movff	btemp+3,postinc1
 21773  01582A  EC31  F097         	call	___fladd	;wreg free
 21774  01582E  0060  F007  FFE6   	movff	btemp,postinc1
 21775  015834  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21776  01583A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21777  015840  0060  F013  FFE6   	movff	btemp+3,postinc1
 21778  015846  EC62  F0B5         	call	_lp_filter	;wreg free
 21779  01584A  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 21780  015850  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 21781  015856  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 21782  01585C  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 21783                           
 21784                           ;mbmc.c: 70:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 21785  015862  0E01               	movlw	1
 21786  015864  6EE6               	movwf	postinc1,c
 21787  015866  0E14               	movlw	20
 21788  015868  6EE6               	movwf	postinc1,c
 21789  01586A  0060  F553  FFE6   	movff	_C+84,postinc1
 21790  015870  0060  F557  FFE6   	movff	_C+85,postinc1
 21791  015876  0060  F55B  FFE6   	movff	_C+86,postinc1
 21792  01587C  0060  F55F  FFE6   	movff	_C+87,postinc1
 21793  015882  0060  F513  FFE6   	movff	_C+68,postinc1
 21794  015888  0060  F517  FFE6   	movff	_C+69,postinc1
 21795  01588E  0060  F51B  FFE6   	movff	_C+70,postinc1
 21796  015894  0060  F51F  FFE6   	movff	_C+71,postinc1
 21797  01589A  EC1C  F093         	call	___flmul	;wreg free
 21798  01589E  0060  F007  FFE6   	movff	btemp,postinc1
 21799  0158A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21800  0158AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21801  0158B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 21802  0158B6  EC62  F0B5         	call	_lp_filter	;wreg free
 21803  0158BA  0060  F004  F174   	movff	btemp,_C+116	;volatile
 21804  0158C0  0060  F008  F175   	movff	btemp+1,_C+117	;volatile
 21805  0158C6  0060  F00C  F176   	movff	btemp+2,_C+118	;volatile
 21806  0158CC  0060  F010  F177   	movff	btemp+3,_C+119	;volatile
 21807                           
 21808                           ;mbmc.c: 74:   if (C.p_inverter < 0.0)
 21809  0158D2  0101               	movlb	1	; () banked
 21810  0158D4  AF6F               	btfss	(_C+111)& (0+255),7,b	;volatile
 21811  0158D6  D008               	goto	l9862
 21812                           
 21813                           ; BSR set to: 1
 21814                           ;mbmc.c: 75:    C.p_inverter = 0.0001;
 21815  0158D8  0E17               	movlw	23
 21816  0158DA  6F6C               	movwf	(_C+108)& (0+255),b	;volatile
 21817  0158DC  0EB7               	movlw	183
 21818  0158DE  6F6D               	movwf	(_C+109)& (0+255),b	;volatile
 21819  0158E0  0ED1               	movlw	209
 21820  0158E2  6F6E               	movwf	(_C+110)& (0+255),b	;volatile
 21821  0158E4  0E38               	movlw	56
 21822  0158E6  6F6F               	movwf	(_C+111)& (0+255),b	;volatile
 21823  0158E8                     l9862:
 21824                           
 21825                           ;mbmc.c: 77:  start_bsoc();
 21826  0158E8  EC8A  F0CD         	call	_start_bsoc	;wreg free
 21827                           
 21828                           ; BSR set to: 57
 21829                           ;mbmc.c: 78:  C.update = 1;
 21830  0158EC  0E01               	movlw	1
 21831  0158EE  0101               	movlb	1	; () banked
 21832  0158F0  6FA0               	movwf	(_C+160)& (0+255),b	;volatile
 21833                           
 21834                           ; BSR set to: 1
 21835                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21836  0158F2  0012               	return		;funcret
 21837  0158F4                     __end_of_calc_model_data:
 21838                           	opt callstack 0
 21839                           
 21840 ;; *************** function _stop_bsoc *****************
 21841 ;; Defined at:
 21842 ;;		line 106 in file "bsoc.c"
 21843 ;; Parameters:    Size  Location     Type
 21844 ;;		None
 21845 ;; Auto vars:     Size  Location     Type
 21846 ;;		None
 21847 ;; Return value:  Size  Location     Type
 21848 ;;                  1  [STACK] void 
 21849 ;; Registers used:
 21850 ;;		None
 21851 ;; Tracked objects:
 21852 ;;		On entry : 0/1
 21853 ;;		On exit  : 3F/39
 21854 ;;		Unchanged: 0/0
 21855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21860 ;;Total ram usage:        0 bytes
 21861 ;; Hardware stack levels used:    1
 21862 ;; Hardware stack levels required when called:   15
 21863 ;; This function calls:
 21864 ;;		Nothing
 21865 ;; This function is called by:
 21866 ;;		_calc_model_data
 21867 ;; This function uses a reentrant model
 21868 ;;
 21869                           
 21870                           	psect	text91
 21871  019DB4                     __ptext91:
 21872                           	opt callstack 0
 21873  019DB4                     _stop_bsoc:
 21874                           	opt callstack 14
 21875                           
 21876                           ;bsoc.c: 109:  PIE6bits.TMR3IE = 0;
 21877                           
 21878                           ; BSR set to: 1
 21879                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21880                           ;incstack = 0
 21881  019DB4  0139               	movlb	57	; () banked
 21882  019DB6  9D96               	bcf	150,6,b	;volatile
 21883                           
 21884                           ; BSR set to: 57
 21885                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 21886  019DB8  0012               	return		;funcret
 21887  019DBA                     __end_of_stop_bsoc:
 21888                           	opt callstack 0
 21889                           
 21890 ;; *************** function _start_bsoc *****************
 21891 ;; Defined at:
 21892 ;;		line 97 in file "bsoc.c"
 21893 ;; Parameters:    Size  Location     Type
 21894 ;;		None
 21895 ;; Auto vars:     Size  Location     Type
 21896 ;;		None
 21897 ;; Return value:  Size  Location     Type
 21898 ;;                  1  [STACK] void 
 21899 ;; Registers used:
 21900 ;;		wreg, status,2, status,0, btemp+11
 21901 ;; Tracked objects:
 21902 ;;		On entry : 3C/2
 21903 ;;		On exit  : 3F/39
 21904 ;;		Unchanged: 0/0
 21905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21910 ;;Total ram usage:        0 bytes
 21911 ;; Hardware stack levels used:    1
 21912 ;; Hardware stack levels required when called:   15
 21913 ;; This function calls:
 21914 ;;		Nothing
 21915 ;; This function is called by:
 21916 ;;		_calc_model_data
 21917 ;; This function uses a reentrant model
 21918 ;;
 21919                           
 21920                           	psect	text92
 21921  019B14                     __ptext92:
 21922                           	opt callstack 0
 21923  019B14                     _start_bsoc:
 21924                           	opt callstack 14
 21925                           
 21926                           ;bsoc.c: 100:  PIE6bits.TMR3IE = 1;
 21927                           
 21928                           ; BSR set to: 57
 21929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21930                           ;incstack = 0
 21931  019B14  0139               	movlb	57	; () banked
 21932  019B16  8D96               	bsf	150,6,b	;volatile
 21933                           
 21934                           ; BSR set to: 57
 21935  019B18  A4BE               	btfss	190,2,c	;volatile
 21936  019B1A  D002               	goto	u8490
 21937  019B1C  0E01               	movlw	1
 21938  019B1E  D001               	goto	u8496
 21939  019B20                     u8490:
 21940  019B20  0E00               	movlw	0
 21941  019B22                     u8496:
 21942  019B22  0AFF               	xorlw	255
 21943  019B24  6E0C               	movwf	(btemp+11)^0,c
 21944  019B26  460C               	rlncf	(btemp+11)^0,f,c
 21945  019B28  460C               	rlncf	(btemp+11)^0,f,c
 21946  019B2A  50BE               	movf	190,w,c	;volatile
 21947  019B2C  180C               	xorwf	(btemp+11)^0,w,c
 21948  019B2E  0BFB               	andlw	-5
 21949  019B30  180C               	xorwf	(btemp+11)^0,w,c
 21950  019B32  6EBE               	movwf	190,c	;volatile
 21951                           
 21952                           ; BSR set to: 57
 21953                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 21954  019B34  0012               	return		;funcret
 21955  019B36                     __end_of_start_bsoc:
 21956                           	opt callstack 0
 21957                           
 21958 ;; *************** function _lp_filter *****************
 21959 ;; Defined at:
 21960 ;;		line 18 in file "mbmc.c"
 21961 ;; Parameters:    Size  Location     Type
 21962 ;;  new             4  [STACK] const float 
 21963 ;;  bn              1  [STACK] const unsigned char 
 21964 ;;  slow            1  [STACK] const char 
 21965 ;; Auto vars:     Size  Location     Type
 21966 ;;  lp_speed        4  [STACK] float 
 21967 ;; Return value:  Size  Location     Type
 21968 ;;                  4  [STACK] float 
 21969 ;; Registers used:
 21970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21971 ;; Tracked objects:
 21972 ;;		On entry : 0/2
 21973 ;;		On exit  : 0/0
 21974 ;;		Unchanged: 0/0
 21975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21980 ;;Total ram usage:        0 bytes
 21981 ;; Hardware stack levels used:    1
 21982 ;; Hardware stack levels required when called:   17
 21983 ;; This function calls:
 21984 ;;		___fladd
 21985 ;;		___flmul
 21986 ;;		___flsub
 21987 ;; This function is called by:
 21988 ;;		_main
 21989 ;;		_convert_adc_data
 21990 ;;		_calc_model_data
 21991 ;; This function uses a reentrant model
 21992 ;;
 21993                           
 21994                           	psect	text93
 21995  016AC4                     __ptext93:
 21996                           	opt callstack 0
 21997  016AC4                     _lp_filter:
 21998                           	opt callstack 0
 21999                           
 22000                           ; BSR set to: 57
 22001                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22002  016AC4  52E6               	movf	postinc1,f,c
 22003  016AC6  52E6               	movf	postinc1,f,c
 22004  016AC8  52E6               	movf	postinc1,f,c
 22005  016ACA  52E6               	movf	postinc1,f,c
 22006                           
 22007                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16 +5];;mbmc.c: 21:  float lp_speed;;mbmc.c: 2
      +                          3:  if (bn >= 16 +5)
 22008                           ;stkvar	_bn @ sp[(-4)+-5]
 22009                           
 22010                           ;incstack = 0
 22011  016ACC  0EF7               	movlw	-9
 22012  016ACE  006F FF8C  F001    	movff	plusw1,btemp
 22013  016AD4  0E14               	movlw	20
 22014  016AD6  6401               	cpfsgt	btemp^0,c
 22015  016AD8  D011               	goto	l9344
 22016  016ADA                     u8310:
 22017                           
 22018                           ;mbmc.c: 24:   return new;
 22019                           ;stkvar	_new @ sp[(-4)+-4]
 22020  016ADA  0EF8               	movlw	-8
 22021  016ADC  006F FF8C  F001    	movff	plusw1,btemp
 22022  016AE2  0EF9               	movlw	-7
 22023  016AE4  006F FF8C  F002    	movff	plusw1,btemp+1
 22024  016AEA  0EFA               	movlw	-6
 22025  016AEC  006F FF8C  F003    	movff	plusw1,btemp+2
 22026  016AF2  0EFB               	movlw	-5
 22027  016AF4  006F FF8C  F004    	movff	plusw1,btemp+3
 22028  016AFA  D0BF               	goto	l1780
 22029  016AFC                     l9344:
 22030                           
 22031                           ;mbmc.c: 26:  if (slow == (-1)) {
 22032                           ;stkvar	_slow @ sp[(-4)+-6]
 22033  016AFC  0EF6               	movlw	-10
 22034  016AFE  28E3               	incf	plusw1,w,c
 22035  016B00  A4D8               	btfss	status,2,c
 22036  016B02  D012               	goto	l9352
 22037                           
 22038                           ;mbmc.c: 27:   smooth[bn] = 0.0;
 22039                           ;stkvar	_bn @ sp[(-4)+-5]
 22040  016B04  0EF7               	movlw	-9
 22041  016B06  50E3               	movf	plusw1,w,c
 22042  016B08  0D04               	mullw	4
 22043  016B0A  0E00               	movlw	low lp_filter@smooth
 22044  016B0C  24F3               	addwf	243,w,c
 22045  016B0E  6ED9               	movwf	fsr2l,c
 22046  016B10  0E03               	movlw	high lp_filter@smooth
 22047  016B12  20F4               	addwfc	prodh,w,c
 22048  016B14  6EDA               	movwf	fsr2h,c
 22049  016B16  0E00               	movlw	0
 22050  016B18  6EDE               	movwf	postinc2,c
 22051  016B1A  0E00               	movlw	0
 22052  016B1C  6EDE               	movwf	postinc2,c
 22053  016B1E  0E00               	movlw	0
 22054  016B20  6EDE               	movwf	postinc2,c
 22055  016B22  0E00               	movlw	0
 22056  016B24  6EDD               	movwf	postdec2,c
 22057  016B26  D7D9               	goto	u8310
 22058  016B28                     l9352:
 22059                           
 22060                           ;mbmc.c: 31:  if (slow) {
 22061                           ;stkvar	_slow @ sp[(-4)+-6]
 22062  016B28  0EF6               	movlw	-10
 22063  016B2A  50E3               	movf	plusw1,w,c
 22064  016B2C  B4D8               	btfsc	status,2,c
 22065  016B2E  D008               	goto	l9356
 22066                           
 22067                           ;mbmc.c: 32:   lp_speed = 0.033;
 22068  016B30  0E02               	movlw	2
 22069  016B32  6E09               	movwf	(btemp+8)^0,c
 22070  016B34  0E2B               	movlw	43
 22071  016B36  6E0A               	movwf	(btemp+9)^0,c
 22072  016B38  0E07               	movlw	7
 22073  016B3A  6E0B               	movwf	(btemp+10)^0,c
 22074  016B3C  0E3D               	movlw	61
 22075  016B3E  D007               	goto	L22
 22076  016B40                     l9356:
 22077                           
 22078                           ;mbmc.c: 34:   lp_speed = 0.125;
 22079  016B40  0E00               	movlw	0
 22080  016B42  6E09               	movwf	(btemp+8)^0,c
 22081  016B44  0E00               	movlw	0
 22082  016B46  6E0A               	movwf	(btemp+9)^0,c
 22083  016B48  0E00               	movlw	0
 22084  016B4A  6E0B               	movwf	(btemp+10)^0,c
 22085  016B4C  0E3E               	movlw	62
 22086  016B4E                     L22:
 22087  016B4E  6E0C               	movwf	(btemp+11)^0,c
 22088                           
 22089                           ;stkvar	_lp_speed @ sp[(-4)+0]
 22090  016B50  0EFC               	movlw	-4
 22091  016B52  0060  F027  FFE3   	movff	btemp+8,plusw1
 22092  016B58  0EFD               	movlw	-3
 22093  016B5A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22094  016B60  0EFE               	movlw	-2
 22095  016B62  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22096  016B68  0EFF               	movlw	-1
 22097  016B6A  0060  F033  FFE3   	movff	btemp+11,plusw1
 22098                           
 22099                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 22100                           ;stkvar	_bn @ sp[(-4)+-5]
 22101  016B70  0EF7               	movlw	-9
 22102  016B72  50E3               	movf	plusw1,w,c
 22103  016B74  0D04               	mullw	4
 22104  016B76  0E00               	movlw	low lp_filter@smooth
 22105  016B78  24F3               	addwf	243,w,c
 22106  016B7A  6ED9               	movwf	fsr2l,c
 22107  016B7C  0E03               	movlw	high lp_filter@smooth
 22108  016B7E  20F4               	addwfc	prodh,w,c
 22109  016B80  6EDA               	movwf	fsr2h,c
 22110  016B82  006F FF7B FFE6     	movff	postinc2,postinc1
 22111  016B88  006F FF7B FFE6     	movff	postinc2,postinc1
 22112  016B8E  006F FF7B FFE6     	movff	postinc2,postinc1
 22113  016B94  006F FF7B FFE6     	movff	postinc2,postinc1
 22114                           
 22115                           ;stkvar	_lp_speed @ sp[(-8)+0]
 22116  016B9A  0EF8               	movlw	-8
 22117  016B9C  006F FF8F FFE6     	movff	plusw1,postinc1
 22118  016BA2  006F FF8F FFE6     	movff	plusw1,postinc1
 22119  016BA8  006F FF8F FFE6     	movff	plusw1,postinc1
 22120  016BAE  006F FF8F FFE6     	movff	plusw1,postinc1
 22121                           
 22122                           ;stkvar	_bn @ sp[(-12)+-5]
 22123  016BB4  0EEF               	movlw	-17
 22124  016BB6  50E3               	movf	plusw1,w,c
 22125  016BB8  0D04               	mullw	4
 22126  016BBA  0E00               	movlw	low lp_filter@smooth
 22127  016BBC  24F3               	addwf	243,w,c
 22128  016BBE  6ED9               	movwf	fsr2l,c
 22129  016BC0  0E03               	movlw	high lp_filter@smooth
 22130  016BC2  20F4               	addwfc	prodh,w,c
 22131  016BC4  6EDA               	movwf	fsr2h,c
 22132  016BC6  006F FF7B FFE6     	movff	postinc2,postinc1
 22133  016BCC  006F FF7B FFE6     	movff	postinc2,postinc1
 22134  016BD2  006F FF7B FFE6     	movff	postinc2,postinc1
 22135  016BD8  006F FF7B FFE6     	movff	postinc2,postinc1
 22136                           
 22137                           ;stkvar	_new @ sp[(-16)+-4]
 22138  016BDE  0EEC               	movlw	-20
 22139  016BE0  006F FF8F FFE6     	movff	plusw1,postinc1
 22140  016BE6  006F FF8F FFE6     	movff	plusw1,postinc1
 22141  016BEC  006F FF8F FFE6     	movff	plusw1,postinc1
 22142  016BF2  006F FF8F FFE6     	movff	plusw1,postinc1
 22143  016BF8  ECCB  F0C8         	call	___flsub	;wreg free
 22144  016BFC  0060  F007  FFE6   	movff	btemp,postinc1
 22145  016C02  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22146  016C08  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22147  016C0E  0060  F013  FFE6   	movff	btemp+3,postinc1
 22148  016C14  EC1C  F093         	call	___flmul	;wreg free
 22149  016C18  0060  F007  FFE6   	movff	btemp,postinc1
 22150  016C1E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22151  016C24  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22152  016C2A  0060  F013  FFE6   	movff	btemp+3,postinc1
 22153  016C30  EC31  F097         	call	___fladd	;wreg free
 22154                           
 22155                           ;stkvar	_bn @ sp[(-4)+-5]
 22156  016C34  0EF7               	movlw	-9
 22157  016C36  50E3               	movf	plusw1,w,c
 22158  016C38  0D04               	mullw	4
 22159  016C3A  0E00               	movlw	low lp_filter@smooth
 22160  016C3C  24F3               	addwf	243,w,c
 22161  016C3E  6ED9               	movwf	fsr2l,c
 22162  016C40  0E03               	movlw	high lp_filter@smooth
 22163  016C42  20F4               	addwfc	prodh,w,c
 22164  016C44  6EDA               	movwf	fsr2h,c
 22165  016C46  0060  F007  FFDE   	movff	btemp,postinc2
 22166  016C4C  0060  F00B  FFDE   	movff	btemp+1,postinc2
 22167  016C52  0060  F00F  FFDE   	movff	btemp+2,postinc2
 22168  016C58  0060  F013  FFDD   	movff	btemp+3,postdec2
 22169  016C5E  52DD               	movf	postdec2,f,c
 22170  016C60  52DD               	movf	postdec2,f,c
 22171  016C62  006F FF78  F001    	movff	postinc2,btemp
 22172  016C68  006F FF78  F002    	movff	postinc2,btemp+1
 22173  016C6E  006F FF78  F003    	movff	postinc2,btemp+2
 22174  016C74  006F FF78  F004    	movff	postinc2,btemp+3
 22175  016C7A                     l1780:
 22176                           
 22177                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 22178  016C7A  0EF6               	movlw	246
 22179  016C7C  26E1               	addwf	fsr1l,f,c
 22180  016C7E  0EFF               	movlw	255
 22181  016C80  22E2               	addwfc	fsr1h,f,c
 22182  016C82  0012               	return		;funcret
 22183  016C84                     __end_of_lp_filter:
 22184                           	opt callstack 0
 22185                           
 22186 ;; *************** function ___flsub *****************
 22187 ;; Defined at:
 22188 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 22189 ;; Parameters:    Size  Location     Type
 22190 ;;  b               4  [STACK] float 
 22191 ;;  a               4  [STACK] float 
 22192 ;; Auto vars:     Size  Location     Type
 22193 ;;		None
 22194 ;; Return value:  Size  Location     Type
 22195 ;;                  4  [STACK] float 
 22196 ;; Registers used:
 22197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 22198 ;; Tracked objects:
 22199 ;;		On entry : 0/1
 22200 ;;		On exit  : 0/0
 22201 ;;		Unchanged: 0/0
 22202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22207 ;;Total ram usage:        0 bytes
 22208 ;; Hardware stack levels used:    1
 22209 ;; Hardware stack levels required when called:   16
 22210 ;; This function calls:
 22211 ;;		___fladd
 22212 ;; This function is called by:
 22213 ;;		_conv_raw_result
 22214 ;;		_lp_filter
 22215 ;;		_calc_model_data
 22216 ;;		_efgtoa
 22217 ;; This function uses a reentrant model
 22218 ;;
 22219                           
 22220                           	psect	text94
 22221  019196                     __ptext94:
 22222                           	opt callstack 0
 22223  019196                     ___flsub:
 22224                           	opt callstack 0
 22225                           
 22226                           ;stkvar	_a @ sp[(0)+-8]
 22227                           
 22228                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22229                           ;incstack = 0
 22230 ;; hardware stack exceeded
 22231  019196  0EFB               	movlw	-5
 22232  019198  7EE3               	btg	plusw1,7,c
 22233                           
 22234                           ;stkvar	_a @ sp[(0)+-8]
 22235  01919A  0EF8               	movlw	-8
 22236  01919C  006F FF8F FFE6     	movff	plusw1,postinc1
 22237  0191A2  006F FF8F FFE6     	movff	plusw1,postinc1
 22238  0191A8  006F FF8F FFE6     	movff	plusw1,postinc1
 22239  0191AE  006F FF8F FFE6     	movff	plusw1,postinc1
 22240                           
 22241                           ;stkvar	_b @ sp[(-4)+-4]
 22242  0191B4  0EF8               	movlw	-8
 22243  0191B6  006F FF8F FFE6     	movff	plusw1,postinc1
 22244  0191BC  006F FF8F FFE6     	movff	plusw1,postinc1
 22245  0191C2  006F FF8F FFE6     	movff	plusw1,postinc1
 22246  0191C8  006F FF8F FFE6     	movff	plusw1,postinc1
 22247  0191CE  EC31  F097         	call	___fladd	;wreg free
 22248                           
 22249                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 22250  0191D2  0EF8               	movlw	248
 22251  0191D4  26E1               	addwf	fsr1l,f,c
 22252  0191D6  0EFF               	movlw	255
 22253  0191D8  22E2               	addwfc	fsr1h,f,c
 22254  0191DA  0012               	return		;funcret
 22255  0191DC                     __end_of___flsub:
 22256                           	opt callstack 0
 22257                           
 22258 ;; *************** function ___fladd *****************
 22259 ;; Defined at:
 22260 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 22261 ;; Parameters:    Size  Location     Type
 22262 ;;  b               4  [STACK] float 
 22263 ;;  a               4  [STACK] float 
 22264 ;; Auto vars:     Size  Location     Type
 22265 ;;  grs             1  [STACK] unsigned char 
 22266 ;;  bexp            1  [STACK] unsigned char 
 22267 ;;  aexp            1  [STACK] unsigned char 
 22268 ;;  signs           1  [STACK] unsigned char 
 22269 ;; Return value:  Size  Location     Type
 22270 ;;                  4  [STACK] unsigned char 
 22271 ;; Registers used:
 22272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 22273 ;; Tracked objects:
 22274 ;;		On entry : 0/0
 22275 ;;		On exit  : 0/0
 22276 ;;		Unchanged: 0/0
 22277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22282 ;;Total ram usage:        0 bytes
 22283 ;; Hardware stack levels used:    1
 22284 ;; Hardware stack levels required when called:   15
 22285 ;; This function calls:
 22286 ;;		Nothing
 22287 ;; This function is called by:
 22288 ;;		_lp_filter
 22289 ;;		_calc_model_data
 22290 ;;		_calc_bsoc
 22291 ;;		_efgtoa
 22292 ;;		___flsub
 22293 ;; This function uses a reentrant model
 22294 ;;
 22295                           
 22296                           	psect	text95
 22297  012E62                     __ptext95:
 22298                           	opt callstack 0
 22299  012E62                     ___fladd:
 22300                           	opt callstack 0
 22301                           
 22302                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22303  012E62  52E6               	movf	postinc1,f,c
 22304  012E64  52E6               	movf	postinc1,f,c
 22305  012E66  52E6               	movf	postinc1,f,c
 22306  012E68  52E6               	movf	postinc1,f,c
 22307                           
 22308                           ;stkvar	_b @ sp[(-4)+-4]
 22309                           
 22310                           ;incstack = 0
 22311 ;; hardware stack exceeded
 22312  012E6A  0EFB               	movlw	251
 22313  012E6C  24E1               	addwf	fsr1l,w,c
 22314  012E6E  6ED9               	movwf	fsr2l,c
 22315  012E70  0EFF               	movlw	255
 22316  012E72  20E2               	addwfc	fsr1h,w,c
 22317  012E74  6EDA               	movwf	fsr2h,c
 22318  012E76  50DF               	movf	indf2,w,c
 22319  012E78  6E0C               	movwf	(btemp+11)^0,c
 22320  012E7A  0E80               	movlw	128
 22321  012E7C  160C               	andwf	(btemp+11)^0,f,c
 22322                           
 22323                           ;stkvar	_signs @ sp[(-4)+3]
 22324  012E7E  0EFF               	movlw	-1
 22325  012E80  0060  F033  FFE3   	movff	btemp+11,plusw1
 22326                           
 22327                           ;stkvar	_b @ sp[(-4)+-4]
 22328  012E86  0EFB               	movlw	251
 22329  012E88  24E1               	addwf	fsr1l,w,c
 22330  012E8A  6ED9               	movwf	fsr2l,c
 22331  012E8C  0EFF               	movlw	255
 22332  012E8E  20E2               	addwfc	fsr1h,w,c
 22333  012E90  6EDA               	movwf	fsr2h,c
 22334  012E92  50DF               	movf	indf2,w,c
 22335  012E94  6E0C               	movwf	(btemp+11)^0,c
 22336  012E96  90D8               	bcf	status,0,c
 22337  012E98  340C               	rlcf	(btemp+11)^0,w,c
 22338  012E9A  6E0B               	movwf	(btemp+10)^0,c
 22339                           
 22340                           ;stkvar	_bexp @ sp[(-4)+1]
 22341  012E9C  0EFD               	movlw	-3
 22342  012E9E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22343                           
 22344                           ;stkvar	_b @ sp[(-4)+-4]
 22345  012EA4  0EFA               	movlw	250
 22346  012EA6  24E1               	addwf	fsr1l,w,c
 22347  012EA8  6ED9               	movwf	fsr2l,c
 22348  012EAA  0EFF               	movlw	255
 22349  012EAC  20E2               	addwfc	fsr1h,w,c
 22350  012EAE  6EDA               	movwf	fsr2h,c
 22351  012EB0  AEDF               	btfss	indf2,7,c
 22352  012EB2  D002               	goto	l6944
 22353                           
 22354                           ;stkvar	_bexp @ sp[(-4)+1]
 22355  012EB4  0EFD               	movlw	-3
 22356  012EB6  80E3               	bsf	plusw1,0,c
 22357  012EB8                     l6944:
 22358                           
 22359                           ;stkvar	_bexp @ sp[(-4)+1]
 22360  012EB8  0EFD               	movlw	-3
 22361  012EBA  50E3               	movf	plusw1,w,c
 22362  012EBC  B4D8               	btfsc	status,2,c
 22363  012EBE  D027               	goto	l6954
 22364                           
 22365                           ;stkvar	_bexp @ sp[(-4)+1]
 22366  012EC0  0EFD               	movlw	-3
 22367  012EC2  28E3               	incf	plusw1,w,c
 22368  012EC4  A4D8               	btfss	status,2,c
 22369  012EC6  D018               	goto	l6950
 22370  012EC8  0E00               	movlw	0
 22371  012ECA  6E09               	movwf	(btemp+8)^0,c
 22372  012ECC  0E00               	movlw	0
 22373  012ECE  6E0A               	movwf	(btemp+9)^0,c
 22374  012ED0  0E00               	movlw	0
 22375  012ED2  6E0B               	movwf	(btemp+10)^0,c
 22376  012ED4  0E00               	movlw	0
 22377  012ED6  6E0C               	movwf	(btemp+11)^0,c
 22378                           
 22379                           ;stkvar	_b @ sp[(-4)+-4]
 22380  012ED8  0EF8               	movlw	-8
 22381  012EDA  0060  F027  FFE3   	movff	btemp+8,plusw1
 22382  012EE0  0EF9               	movlw	-7
 22383  012EE2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22384  012EE8  0EFA               	movlw	-6
 22385  012EEA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22386  012EF0  0EFB               	movlw	-5
 22387  012EF2  0060  F033  FFE3   	movff	btemp+11,plusw1
 22388  012EF8                     l6950:
 22389                           
 22390                           ;stkvar	_b @ sp[(-4)+-4]
 22391  012EF8  0EFA               	movlw	-6
 22392  012EFA  8EE3               	bsf	plusw1,7,c
 22393                           
 22394                           ;stkvar	_b @ sp[(-4)+-4]
 22395  012EFC  0EFB               	movlw	251
 22396  012EFE  24E1               	addwf	fsr1l,w,c
 22397  012F00  6ED9               	movwf	fsr2l,c
 22398  012F02  0EFF               	movlw	255
 22399  012F04  20E2               	addwfc	fsr1h,w,c
 22400  012F06  6EDA               	movwf	fsr2h,c
 22401  012F08  0E00               	movlw	0
 22402  012F0A  6EDF               	movwf	indf2,c
 22403  012F0C  D018               	goto	l6956
 22404  012F0E                     l6954:
 22405  012F0E  0E00               	movlw	0
 22406  012F10  6E09               	movwf	(btemp+8)^0,c
 22407  012F12  0E00               	movlw	0
 22408  012F14  6E0A               	movwf	(btemp+9)^0,c
 22409  012F16  0E00               	movlw	0
 22410  012F18  6E0B               	movwf	(btemp+10)^0,c
 22411  012F1A  0E00               	movlw	0
 22412  012F1C  6E0C               	movwf	(btemp+11)^0,c
 22413                           
 22414                           ;stkvar	_b @ sp[(-4)+-4]
 22415  012F1E  0EF8               	movlw	-8
 22416  012F20  0060  F027  FFE3   	movff	btemp+8,plusw1
 22417  012F26  0EF9               	movlw	-7
 22418  012F28  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22419  012F2E  0EFA               	movlw	-6
 22420  012F30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22421  012F36  0EFB               	movlw	-5
 22422  012F38  0060  F033  FFE3   	movff	btemp+11,plusw1
 22423  012F3E                     l6956:
 22424                           
 22425                           ;stkvar	_a @ sp[(-4)+-8]
 22426  012F3E  0EF7               	movlw	247
 22427  012F40  24E1               	addwf	fsr1l,w,c
 22428  012F42  6ED9               	movwf	fsr2l,c
 22429  012F44  0EFF               	movlw	255
 22430  012F46  20E2               	addwfc	fsr1h,w,c
 22431  012F48  6EDA               	movwf	fsr2h,c
 22432  012F4A  50DF               	movf	indf2,w,c
 22433  012F4C  6E0C               	movwf	(btemp+11)^0,c
 22434  012F4E  0E80               	movlw	128
 22435  012F50  160C               	andwf	(btemp+11)^0,f,c
 22436                           
 22437                           ;stkvar	_aexp @ sp[(-4)+2]
 22438  012F52  0EFE               	movlw	-2
 22439  012F54  0060  F033  FFE3   	movff	btemp+11,plusw1
 22440                           
 22441                           ;stkvar	_signs @ sp[(-4)+3]
 22442                           ;stkvar	_aexp @ sp[(-4)+2]
 22443  012F5A  50E1               	movf	fsr1l,w,c
 22444  012F5C  0FFE               	addlw	-2
 22445  012F5E  6ED9               	movwf	fsr2l,c
 22446  012F60  50E2               	movf	fsr1h,w,c
 22447  012F62  6EDA               	movwf	fsr2h,c
 22448  012F64  0EFF               	movlw	255
 22449  012F66  22DA               	addwfc	fsr2h,f,c
 22450  012F68  0EFF               	movlw	-1
 22451  012F6A  50E3               	movf	plusw1,w,c
 22452  012F6C  18DE               	xorwf	postinc2,w,c
 22453  012F6E  B4D8               	btfsc	status,2,c
 22454  012F70  D002               	goto	l6962
 22455                           
 22456                           ;stkvar	_signs @ sp[(-4)+3]
 22457  012F72  0EFF               	movlw	-1
 22458  012F74  8CE3               	bsf	plusw1,6,c
 22459  012F76                     l6962:
 22460                           
 22461                           ;stkvar	_a @ sp[(-4)+-8]
 22462  012F76  0EF7               	movlw	247
 22463  012F78  24E1               	addwf	fsr1l,w,c
 22464  012F7A  6ED9               	movwf	fsr2l,c
 22465  012F7C  0EFF               	movlw	255
 22466  012F7E  20E2               	addwfc	fsr1h,w,c
 22467  012F80  6EDA               	movwf	fsr2h,c
 22468  012F82  50DF               	movf	indf2,w,c
 22469  012F84  6E0C               	movwf	(btemp+11)^0,c
 22470  012F86  90D8               	bcf	status,0,c
 22471  012F88  340C               	rlcf	(btemp+11)^0,w,c
 22472  012F8A  6E0B               	movwf	(btemp+10)^0,c
 22473                           
 22474                           ;stkvar	_aexp @ sp[(-4)+2]
 22475  012F8C  0EFE               	movlw	-2
 22476  012F8E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22477                           
 22478                           ;stkvar	_a @ sp[(-4)+-8]
 22479  012F94  0EF6               	movlw	246
 22480  012F96  24E1               	addwf	fsr1l,w,c
 22481  012F98  6ED9               	movwf	fsr2l,c
 22482  012F9A  0EFF               	movlw	255
 22483  012F9C  20E2               	addwfc	fsr1h,w,c
 22484  012F9E  6EDA               	movwf	fsr2h,c
 22485  012FA0  AEDF               	btfss	indf2,7,c
 22486  012FA2  D002               	goto	l6968
 22487                           
 22488                           ;stkvar	_aexp @ sp[(-4)+2]
 22489  012FA4  0EFE               	movlw	-2
 22490  012FA6  80E3               	bsf	plusw1,0,c
 22491  012FA8                     l6968:
 22492                           
 22493                           ;stkvar	_aexp @ sp[(-4)+2]
 22494  012FA8  0EFE               	movlw	-2
 22495  012FAA  50E3               	movf	plusw1,w,c
 22496  012FAC  B4D8               	btfsc	status,2,c
 22497  012FAE  D027               	goto	l6978
 22498                           
 22499                           ;stkvar	_aexp @ sp[(-4)+2]
 22500  012FB0  0EFE               	movlw	-2
 22501  012FB2  28E3               	incf	plusw1,w,c
 22502  012FB4  A4D8               	btfss	status,2,c
 22503  012FB6  D018               	goto	l6974
 22504  012FB8  0E00               	movlw	0
 22505  012FBA  6E09               	movwf	(btemp+8)^0,c
 22506  012FBC  0E00               	movlw	0
 22507  012FBE  6E0A               	movwf	(btemp+9)^0,c
 22508  012FC0  0E00               	movlw	0
 22509  012FC2  6E0B               	movwf	(btemp+10)^0,c
 22510  012FC4  0E00               	movlw	0
 22511  012FC6  6E0C               	movwf	(btemp+11)^0,c
 22512                           
 22513                           ;stkvar	_a @ sp[(-4)+-8]
 22514  012FC8  0EF4               	movlw	-12
 22515  012FCA  0060  F027  FFE3   	movff	btemp+8,plusw1
 22516  012FD0  0EF5               	movlw	-11
 22517  012FD2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22518  012FD8  0EF6               	movlw	-10
 22519  012FDA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22520  012FE0  0EF7               	movlw	-9
 22521  012FE2  0060  F033  FFE3   	movff	btemp+11,plusw1
 22522  012FE8                     l6974:
 22523                           
 22524                           ;stkvar	_a @ sp[(-4)+-8]
 22525  012FE8  0EF6               	movlw	-10
 22526  012FEA  8EE3               	bsf	plusw1,7,c
 22527                           
 22528                           ;stkvar	_a @ sp[(-4)+-8]
 22529  012FEC  0EF7               	movlw	247
 22530  012FEE  24E1               	addwf	fsr1l,w,c
 22531  012FF0  6ED9               	movwf	fsr2l,c
 22532  012FF2  0EFF               	movlw	255
 22533  012FF4  20E2               	addwfc	fsr1h,w,c
 22534  012FF6  6EDA               	movwf	fsr2h,c
 22535  012FF8  0E00               	movlw	0
 22536  012FFA  6EDF               	movwf	indf2,c
 22537  012FFC  D018               	goto	l6980
 22538  012FFE                     l6978:
 22539  012FFE  0E00               	movlw	0
 22540  013000  6E09               	movwf	(btemp+8)^0,c
 22541  013002  0E00               	movlw	0
 22542  013004  6E0A               	movwf	(btemp+9)^0,c
 22543  013006  0E00               	movlw	0
 22544  013008  6E0B               	movwf	(btemp+10)^0,c
 22545  01300A  0E00               	movlw	0
 22546  01300C  6E0C               	movwf	(btemp+11)^0,c
 22547                           
 22548                           ;stkvar	_a @ sp[(-4)+-8]
 22549  01300E  0EF4               	movlw	-12
 22550  013010  0060  F027  FFE3   	movff	btemp+8,plusw1
 22551  013016  0EF5               	movlw	-11
 22552  013018  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22553  01301E  0EF6               	movlw	-10
 22554  013020  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22555  013026  0EF7               	movlw	-9
 22556  013028  0060  F033  FFE3   	movff	btemp+11,plusw1
 22557  01302E                     l6980:
 22558                           
 22559                           ;stkvar	_bexp @ sp[(-4)+1]
 22560                           ;stkvar	_aexp @ sp[(-4)+2]
 22561  01302E  50E1               	movf	fsr1l,w,c
 22562  013030  0FFE               	addlw	-2
 22563  013032  6ED9               	movwf	fsr2l,c
 22564  013034  50E2               	movf	fsr1h,w,c
 22565  013036  6EDA               	movwf	fsr2h,c
 22566  013038  0EFF               	movlw	255
 22567  01303A  22DA               	addwfc	fsr2h,f,c
 22568  01303C  0EFD               	movlw	-3
 22569  01303E  50E3               	movf	plusw1,w,c
 22570  013040  5CDE               	subwf	postinc2,w,c
 22571  013042  B0D8               	btfsc	status,0,c
 22572  013044  D0A4               	goto	l7016
 22573                           
 22574                           ;stkvar	_signs @ sp[(-4)+3]
 22575  013046  0EFF               	movlw	-1
 22576  013048  ACE3               	btfss	plusw1,6,c
 22577  01304A  D002               	goto	l6986
 22578                           
 22579                           ;stkvar	_signs @ sp[(-4)+3]
 22580  01304C  0EFF               	movlw	-1
 22581  01304E  7EE3               	btg	plusw1,7,c
 22582  013050                     l6986:
 22583                           
 22584                           ;stkvar	_bexp @ sp[(-4)+1]
 22585                           ;stkvar	_grs @ sp[(-4)+0]
 22586  013050  0EFD               	movlw	-3
 22587  013052  006F FF8C  F001    	movff	plusw1,btemp
 22588  013058  0EFC               	movlw	-4
 22589  01305A  0060  F007  FFE3   	movff	btemp,plusw1
 22590                           
 22591                           ;stkvar	_aexp @ sp[(-4)+2]
 22592                           ;stkvar	_bexp @ sp[(-4)+1]
 22593  013060  0EFE               	movlw	-2
 22594  013062  006F FF8C  F001    	movff	plusw1,btemp
 22595  013068  0EFD               	movlw	-3
 22596  01306A  0060  F007  FFE3   	movff	btemp,plusw1
 22597                           
 22598                           ;stkvar	_grs @ sp[(-4)+0]
 22599                           ;stkvar	_aexp @ sp[(-4)+2]
 22600  013070  0EFC               	movlw	-4
 22601  013072  006F FF8C  F001    	movff	plusw1,btemp
 22602  013078  0EFE               	movlw	-2
 22603  01307A  0060  F007  FFE3   	movff	btemp,plusw1
 22604                           
 22605                           ;stkvar	_b @ sp[(-4)+-4]
 22606                           ;stkvar	_grs @ sp[(-4)+0]
 22607  013080  0EF8               	movlw	-8
 22608  013082  006F FF8C  F001    	movff	plusw1,btemp
 22609  013088  0EFC               	movlw	-4
 22610  01308A  0060  F007  FFE3   	movff	btemp,plusw1
 22611                           
 22612                           ;stkvar	_a @ sp[(-4)+-8]
 22613                           ;stkvar	_b @ sp[(-4)+-4]
 22614  013090  0EF4               	movlw	-12
 22615  013092  006F FF8C  F001    	movff	plusw1,btemp
 22616  013098  0EF8               	movlw	-8
 22617  01309A  0060  F007  FFE3   	movff	btemp,plusw1
 22618                           
 22619                           ;stkvar	_grs @ sp[(-4)+0]
 22620                           ;stkvar	_a @ sp[(-4)+-8]
 22621  0130A0  0EFC               	movlw	-4
 22622  0130A2  006F FF8C  F001    	movff	plusw1,btemp
 22623  0130A8  0EF4               	movlw	-12
 22624  0130AA  0060  F007  FFE3   	movff	btemp,plusw1
 22625                           
 22626                           ;stkvar	_b @ sp[(-4)+-4]
 22627  0130B0  0EF9               	movlw	249
 22628  0130B2  24E1               	addwf	fsr1l,w,c
 22629  0130B4  6ED9               	movwf	fsr2l,c
 22630  0130B6  0EFF               	movlw	255
 22631  0130B8  20E2               	addwfc	fsr1h,w,c
 22632  0130BA  6EDA               	movwf	fsr2h,c
 22633  0130BC  50DF               	movf	indf2,w,c
 22634  0130BE  6E0C               	movwf	(btemp+11)^0,c
 22635                           
 22636                           ;stkvar	_grs @ sp[(-4)+0]
 22637  0130C0  0EFC               	movlw	-4
 22638  0130C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 22639                           
 22640                           ;stkvar	_a @ sp[(-4)+-8]
 22641  0130C8  0EF5               	movlw	245
 22642  0130CA  24E1               	addwf	fsr1l,w,c
 22643  0130CC  6ED9               	movwf	fsr2l,c
 22644  0130CE  0EFF               	movlw	255
 22645  0130D0  20E2               	addwfc	fsr1h,w,c
 22646  0130D2  6EDA               	movwf	fsr2h,c
 22647                           
 22648                           ;stkvar	_b @ sp[(-4)+-4]
 22649  0130D4  0EF9               	movlw	249
 22650  0130D6  24E1               	addwf	fsr1l,w,c
 22651  0130D8  6EE9               	movwf	fsr0l,c
 22652  0130DA  0EFF               	movlw	255
 22653  0130DC  20E2               	addwfc	fsr1h,w,c
 22654  0130DE  6EEA               	movwf	fsr0h,c
 22655  0130E0  006F FF7F FFEF     	movff	indf2,indf0
 22656                           
 22657                           ;stkvar	_grs @ sp[(-4)+0]
 22658                           ;stkvar	_a @ sp[(-4)+-8]
 22659  0130E6  0EF5               	movlw	245
 22660  0130E8  24E1               	addwf	fsr1l,w,c
 22661  0130EA  6ED9               	movwf	fsr2l,c
 22662  0130EC  0EFF               	movlw	255
 22663  0130EE  20E2               	addwfc	fsr1h,w,c
 22664  0130F0  6EDA               	movwf	fsr2h,c
 22665  0130F2  0EFC               	movlw	-4
 22666  0130F4  006F FF8F FFDF     	movff	plusw1,indf2
 22667                           
 22668                           ;stkvar	_b @ sp[(-4)+-4]
 22669  0130FA  0EFA               	movlw	250
 22670  0130FC  24E1               	addwf	fsr1l,w,c
 22671  0130FE  6ED9               	movwf	fsr2l,c
 22672  013100  0EFF               	movlw	255
 22673  013102  20E2               	addwfc	fsr1h,w,c
 22674  013104  6EDA               	movwf	fsr2h,c
 22675  013106  50DF               	movf	indf2,w,c
 22676  013108  6E0C               	movwf	(btemp+11)^0,c
 22677                           
 22678                           ;stkvar	_grs @ sp[(-4)+0]
 22679  01310A  0EFC               	movlw	-4
 22680  01310C  0060  F033  FFE3   	movff	btemp+11,plusw1
 22681                           
 22682                           ;stkvar	_a @ sp[(-4)+-8]
 22683  013112  0EF6               	movlw	246
 22684  013114  24E1               	addwf	fsr1l,w,c
 22685  013116  6ED9               	movwf	fsr2l,c
 22686  013118  0EFF               	movlw	255
 22687  01311A  20E2               	addwfc	fsr1h,w,c
 22688  01311C  6EDA               	movwf	fsr2h,c
 22689                           
 22690                           ;stkvar	_b @ sp[(-4)+-4]
 22691  01311E  0EFA               	movlw	250
 22692  013120  24E1               	addwf	fsr1l,w,c
 22693  013122  6EE9               	movwf	fsr0l,c
 22694  013124  0EFF               	movlw	255
 22695  013126  20E2               	addwfc	fsr1h,w,c
 22696  013128  6EEA               	movwf	fsr0h,c
 22697  01312A  006F FF7F FFEF     	movff	indf2,indf0
 22698                           
 22699                           ;stkvar	_grs @ sp[(-4)+0]
 22700                           ;stkvar	_a @ sp[(-4)+-8]
 22701  013130  0EF6               	movlw	246
 22702  013132  24E1               	addwf	fsr1l,w,c
 22703  013134  6ED9               	movwf	fsr2l,c
 22704  013136  0EFF               	movlw	255
 22705  013138  20E2               	addwfc	fsr1h,w,c
 22706  01313A  6EDA               	movwf	fsr2h,c
 22707  01313C  0EFC               	movlw	-4
 22708  01313E  006F FF8F FFDF     	movff	plusw1,indf2
 22709                           
 22710                           ;stkvar	_b @ sp[(-4)+-4]
 22711  013144  0EFB               	movlw	251
 22712  013146  24E1               	addwf	fsr1l,w,c
 22713  013148  6ED9               	movwf	fsr2l,c
 22714  01314A  0EFF               	movlw	255
 22715  01314C  20E2               	addwfc	fsr1h,w,c
 22716  01314E  6EDA               	movwf	fsr2h,c
 22717  013150  50DF               	movf	indf2,w,c
 22718  013152  6E0C               	movwf	(btemp+11)^0,c
 22719                           
 22720                           ;stkvar	_grs @ sp[(-4)+0]
 22721  013154  0EFC               	movlw	-4
 22722  013156  0060  F033  FFE3   	movff	btemp+11,plusw1
 22723                           
 22724                           ;stkvar	_a @ sp[(-4)+-8]
 22725  01315C  0EF7               	movlw	247
 22726  01315E  24E1               	addwf	fsr1l,w,c
 22727  013160  6ED9               	movwf	fsr2l,c
 22728  013162  0EFF               	movlw	255
 22729  013164  20E2               	addwfc	fsr1h,w,c
 22730  013166  6EDA               	movwf	fsr2h,c
 22731                           
 22732                           ;stkvar	_b @ sp[(-4)+-4]
 22733  013168  0EFB               	movlw	251
 22734  01316A  24E1               	addwf	fsr1l,w,c
 22735  01316C  6EE9               	movwf	fsr0l,c
 22736  01316E  0EFF               	movlw	255
 22737  013170  20E2               	addwfc	fsr1h,w,c
 22738  013172  6EEA               	movwf	fsr0h,c
 22739  013174  006F FF7F FFEF     	movff	indf2,indf0
 22740                           
 22741                           ;stkvar	_grs @ sp[(-4)+0]
 22742                           ;stkvar	_a @ sp[(-4)+-8]
 22743  01317A  0EF7               	movlw	247
 22744  01317C  24E1               	addwf	fsr1l,w,c
 22745  01317E  6ED9               	movwf	fsr2l,c
 22746  013180  0EFF               	movlw	255
 22747  013182  20E2               	addwfc	fsr1h,w,c
 22748  013184  6EDA               	movwf	fsr2h,c
 22749  013186  0EFC               	movlw	-4
 22750  013188  006F FF8F FFDF     	movff	plusw1,indf2
 22751  01318E                     l7016:
 22752                           
 22753                           ;stkvar	_grs @ sp[(-4)+0]
 22754  01318E  0EFC               	movlw	-4
 22755  013190  6AE3               	clrf	plusw1,c
 22756                           
 22757                           ;stkvar	_aexp @ sp[(-4)+2]
 22758  013192  0EFE               	movlw	-2
 22759  013194  50E3               	movf	plusw1,w,c
 22760  013196  6E0B               	movwf	(btemp+10)^0,c
 22761  013198  6A0C               	clrf	(btemp+11)^0,c
 22762                           
 22763                           ;stkvar	_bexp @ sp[(-4)+1]
 22764  01319A  0EFD               	movlw	-3
 22765  01319C  50E3               	movf	plusw1,w,c
 22766  01319E  5E0B               	subwf	(btemp+10)^0,f,c
 22767  0131A0  0E00               	movlw	0
 22768  0131A2  5A0C               	subwfb	(btemp+11)^0,f,c
 22769  0131A4  BE0C               	btfsc	(btemp+11)^0,7,c
 22770  0131A6  D062               	goto	l7040
 22771  0131A8  500C               	movf	(btemp+11)^0,w,c
 22772  0131AA  E104               	bnz	u4850
 22773  0131AC  0E1A               	movlw	26
 22774  0131AE  5C0B               	subwf	(btemp+10)^0,w,c
 22775  0131B0  A0D8               	btfss	status,0,c
 22776  0131B2  D05C               	goto	l7040
 22777  0131B4                     u4850:
 22778                           
 22779                           ;stkvar	_b @ sp[(-4)+-4]
 22780  0131B4  0EF8               	movlw	-8
 22781  0131B6  50E3               	movf	plusw1,w,c
 22782  0131B8  E10A               	bnz	u4861
 22783  0131BA  0EF9               	movlw	-7
 22784  0131BC  50E3               	movf	plusw1,w,c
 22785  0131BE  E107               	bnz	u4861
 22786  0131C0  0EFA               	movlw	-6
 22787  0131C2  50E3               	movf	plusw1,w,c
 22788  0131C4  E104               	bnz	u4861
 22789  0131C6  0EFB               	movlw	-5
 22790  0131C8  50E3               	movf	plusw1,w,c
 22791  0131CA  B4D8               	btfsc	status,2,c
 22792  0131CC  D003               	goto	u4860
 22793  0131CE                     u4861:
 22794  0131CE  6A0C               	clrf	(btemp+11)^0,c
 22795  0131D0  2A0C               	incf	(btemp+11)^0,f,c
 22796  0131D2  D001               	goto	u4878
 22797  0131D4                     u4860:
 22798  0131D4  6A0C               	clrf	(btemp+11)^0,c
 22799  0131D6                     u4878:
 22800                           
 22801                           ;stkvar	_grs @ sp[(-4)+0]
 22802  0131D6  0EFC               	movlw	-4
 22803  0131D8  0060  F033  FFE3   	movff	btemp+11,plusw1
 22804                           
 22805                           ;stkvar	_b @ sp[(-4)+-4]
 22806  0131DE  0EF8               	movlw	-8
 22807  0131E0  6AE3               	clrf	plusw1,c
 22808  0131E2  0EF9               	movlw	-7
 22809  0131E4  6AE3               	clrf	plusw1,c
 22810  0131E6  0EFA               	movlw	-6
 22811  0131E8  6AE3               	clrf	plusw1,c
 22812  0131EA  0EFB               	movlw	-5
 22813  0131EC  6AE3               	clrf	plusw1,c
 22814                           
 22815                           ;stkvar	_aexp @ sp[(-4)+2]
 22816                           ;stkvar	_bexp @ sp[(-4)+1]
 22817  0131EE  0EFE               	movlw	-2
 22818  0131F0  006F FF8C  F001    	movff	plusw1,btemp
 22819  0131F6  0EFD               	movlw	-3
 22820  0131F8  0060  F007  FFE3   	movff	btemp,plusw1
 22821  0131FE  D042               	goto	u4910
 22822  013200                     l7026:
 22823                           
 22824                           ;stkvar	_grs @ sp[(-4)+0]
 22825  013200  0EFC               	movlw	-4
 22826  013202  A0E3               	btfss	plusw1,0,c
 22827  013204  D00D               	goto	l7030
 22828                           
 22829                           ;stkvar	_grs @ sp[(-4)+0]
 22830  013206  0EFC               	movlw	-4
 22831  013208  006F FF8C  F00C    	movff	plusw1,btemp+11
 22832  01320E  90D8               	bcf	status,0,c
 22833  013210  320C               	rrcf	(btemp+11)^0,f,c
 22834  013212  0E01               	movlw	1
 22835  013214  120C               	iorwf	(btemp+11)^0,f,c
 22836                           
 22837                           ;stkvar	_grs @ sp[(-4)+0]
 22838  013216  0EFC               	movlw	-4
 22839  013218  0060  F033  FFE3   	movff	btemp+11,plusw1
 22840  01321E  D009               	goto	l7032
 22841  013220                     l7030:
 22842                           
 22843                           ;stkvar	_grs @ sp[(-4)+0]
 22844  013220  50E1               	movf	fsr1l,w,c
 22845  013222  0FFC               	addlw	-4
 22846  013224  6ED9               	movwf	fsr2l,c
 22847  013226  50E2               	movf	fsr1h,w,c
 22848  013228  6EDA               	movwf	fsr2h,c
 22849  01322A  0EFF               	movlw	255
 22850  01322C  22DA               	addwfc	fsr2h,f,c
 22851  01322E  90D8               	bcf	status,0,c
 22852  013230  32DF               	rrcf	indf2,f,c
 22853  013232                     l7032:
 22854                           
 22855                           ;stkvar	_b @ sp[(-4)+-4]
 22856  013232  0EF8               	movlw	-8
 22857  013234  A0E3               	btfss	plusw1,0,c
 22858  013236  D002               	goto	l7036
 22859                           
 22860                           ;stkvar	_grs @ sp[(-4)+0]
 22861  013238  0EFC               	movlw	-4
 22862  01323A  8EE3               	bsf	plusw1,7,c
 22863  01323C                     l7036:
 22864  01323C  0E01               	movlw	1
 22865  01323E  6E0C               	movwf	(btemp+11)^0,c
 22866                           
 22867                           ;stkvar	_b @ sp[(-4)+-4]
 22868  013240  50E1               	movf	fsr1l,w,c
 22869  013242  0FF8               	addlw	-8
 22870  013244  6ED9               	movwf	fsr2l,c
 22871  013246  50E2               	movf	fsr1h,w,c
 22872  013248  6EDA               	movwf	fsr2h,c
 22873  01324A  0EFF               	movlw	255
 22874  01324C  22DA               	addwfc	fsr2h,f,c
 22875  01324E  280C               	incf	(btemp+11)^0,w,c
 22876  013250  52DE               	movf	postinc2,f,c
 22877  013252  D008               	goto	u4900
 22878  013254                     u4905:
 22879  013254  52DE               	movf	postinc2,f,c
 22880  013256  90D8               	bcf	status,0,c
 22881  013258  BEDC               	btfsc	preinc2,7,c
 22882  01325A  80D8               	bsf	status,0,c
 22883  01325C  32DD               	rrcf	postdec2,f,c
 22884  01325E  32DD               	rrcf	postdec2,f,c
 22885  013260  32DD               	rrcf	postdec2,f,c
 22886  013262  32DE               	rrcf	postinc2,f,c
 22887  013264                     u4900:
 22888  013264  2EE8               	decfsz	wreg,f,c
 22889  013266  D7F6               	goto	u4905
 22890                           
 22891                           ;stkvar	_bexp @ sp[(-4)+1]
 22892  013268  0EFD               	movlw	-3
 22893  01326A  2AE3               	incf	plusw1,f,c
 22894  01326C                     l7040:
 22895                           
 22896                           ;stkvar	_aexp @ sp[(-4)+2]
 22897                           ;stkvar	_bexp @ sp[(-4)+1]
 22898  01326C  50E1               	movf	fsr1l,w,c
 22899  01326E  0FFD               	addlw	-3
 22900  013270  6ED9               	movwf	fsr2l,c
 22901  013272  50E2               	movf	fsr1h,w,c
 22902  013274  6EDA               	movwf	fsr2h,c
 22903  013276  0EFF               	movlw	255
 22904  013278  22DA               	addwfc	fsr2h,f,c
 22905  01327A  0EFE               	movlw	-2
 22906  01327C  50E3               	movf	plusw1,w,c
 22907  01327E  5CDE               	subwf	postinc2,w,c
 22908  013280  A0D8               	btfss	status,0,c
 22909  013282  D7BE               	goto	l7026
 22910  013284                     u4910:
 22911                           
 22912                           ;stkvar	_signs @ sp[(-4)+3]
 22913  013284  0EFF               	movlw	-1
 22914  013286  BCE3               	btfsc	plusw1,6,c
 22915  013288  D066               	goto	l7068
 22916                           
 22917                           ;stkvar	_bexp @ sp[(-4)+1]
 22918  01328A  0EFD               	movlw	-3
 22919  01328C  50E3               	movf	plusw1,w,c
 22920  01328E  B4D8               	btfsc	status,2,c
 22921  013290  D0F2               	goto	u5010
 22922                           
 22923                           ;stkvar	_a @ sp[(-4)+-8]
 22924                           ;stkvar	_b @ sp[(-4)+-4]
 22925  013292  0EF8               	movlw	-8
 22926  013294  50E3               	movf	plusw1,w,c
 22927  013296  6E01               	movwf	btemp^0,c
 22928  013298  0EF4               	movlw	-12
 22929  01329A  50E3               	movf	plusw1,w,c
 22930  01329C  2601               	addwf	btemp^0,f,c
 22931  01329E  0EF8               	movlw	-8
 22932  0132A0  0060  F007  FFE3   	movff	btemp,plusw1
 22933  0132A6  0EF9               	movlw	-7
 22934  0132A8  50E3               	movf	plusw1,w,c
 22935  0132AA  6E01               	movwf	btemp^0,c
 22936  0132AC  0EF5               	movlw	-11
 22937  0132AE  50E3               	movf	plusw1,w,c
 22938  0132B0  2201               	addwfc	btemp^0,f,c
 22939  0132B2  0EF9               	movlw	-7
 22940  0132B4  0060  F007  FFE3   	movff	btemp,plusw1
 22941  0132BA  0EFA               	movlw	-6
 22942  0132BC  50E3               	movf	plusw1,w,c
 22943  0132BE  6E01               	movwf	btemp^0,c
 22944  0132C0  0EF6               	movlw	-10
 22945  0132C2  50E3               	movf	plusw1,w,c
 22946  0132C4  2201               	addwfc	btemp^0,f,c
 22947  0132C6  0EFA               	movlw	-6
 22948  0132C8  0060  F007  FFE3   	movff	btemp,plusw1
 22949  0132CE  0EFB               	movlw	-5
 22950  0132D0  50E3               	movf	plusw1,w,c
 22951  0132D2  6E01               	movwf	btemp^0,c
 22952  0132D4  0EF7               	movlw	-9
 22953  0132D6  50E3               	movf	plusw1,w,c
 22954  0132D8  2201               	addwfc	btemp^0,f,c
 22955  0132DA  0EFB               	movlw	-5
 22956  0132DC  0060  F007  FFE3   	movff	btemp,plusw1
 22957                           
 22958                           ;stkvar	_b @ sp[(-4)+-4]
 22959  0132E2  0EFB               	movlw	-5
 22960  0132E4  A0E3               	btfss	plusw1,0,c
 22961  0132E6  D101               	goto	u5050
 22962                           
 22963                           ;stkvar	_grs @ sp[(-4)+0]
 22964  0132E8  0EFC               	movlw	-4
 22965  0132EA  A0E3               	btfss	plusw1,0,c
 22966  0132EC  D00D               	goto	l7058
 22967                           
 22968                           ;stkvar	_grs @ sp[(-4)+0]
 22969  0132EE  0EFC               	movlw	-4
 22970  0132F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22971  0132F6  90D8               	bcf	status,0,c
 22972  0132F8  320C               	rrcf	(btemp+11)^0,f,c
 22973  0132FA  0E01               	movlw	1
 22974  0132FC  120C               	iorwf	(btemp+11)^0,f,c
 22975                           
 22976                           ;stkvar	_grs @ sp[(-4)+0]
 22977  0132FE  0EFC               	movlw	-4
 22978  013300  0060  F033  FFE3   	movff	btemp+11,plusw1
 22979  013306  D009               	goto	l7060
 22980  013308                     l7058:
 22981                           
 22982                           ;stkvar	_grs @ sp[(-4)+0]
 22983  013308  50E1               	movf	fsr1l,w,c
 22984  01330A  0FFC               	addlw	-4
 22985  01330C  6ED9               	movwf	fsr2l,c
 22986  01330E  50E2               	movf	fsr1h,w,c
 22987  013310  6EDA               	movwf	fsr2h,c
 22988  013312  0EFF               	movlw	255
 22989  013314  22DA               	addwfc	fsr2h,f,c
 22990  013316  90D8               	bcf	status,0,c
 22991  013318  32DF               	rrcf	indf2,f,c
 22992  01331A                     l7060:
 22993                           
 22994                           ;stkvar	_b @ sp[(-4)+-4]
 22995  01331A  0EF8               	movlw	-8
 22996  01331C  A0E3               	btfss	plusw1,0,c
 22997  01331E  D002               	goto	l7064
 22998                           
 22999                           ;stkvar	_grs @ sp[(-4)+0]
 23000  013320  0EFC               	movlw	-4
 23001  013322  8EE3               	bsf	plusw1,7,c
 23002  013324                     l7064:
 23003  013324  0E01               	movlw	1
 23004  013326  6E0C               	movwf	(btemp+11)^0,c
 23005                           
 23006                           ;stkvar	_b @ sp[(-4)+-4]
 23007  013328  50E1               	movf	fsr1l,w,c
 23008  01332A  0FF8               	addlw	-8
 23009  01332C  6ED9               	movwf	fsr2l,c
 23010  01332E  50E2               	movf	fsr1h,w,c
 23011  013330  6EDA               	movwf	fsr2h,c
 23012  013332  0EFF               	movlw	255
 23013  013334  22DA               	addwfc	fsr2h,f,c
 23014  013336  280C               	incf	(btemp+11)^0,w,c
 23015  013338  52DE               	movf	postinc2,f,c
 23016  01333A  D008               	goto	u4970
 23017  01333C                     u4975:
 23018  01333C  52DE               	movf	postinc2,f,c
 23019  01333E  90D8               	bcf	status,0,c
 23020  013340  BEDC               	btfsc	preinc2,7,c
 23021  013342  80D8               	bsf	status,0,c
 23022  013344  32DD               	rrcf	postdec2,f,c
 23023  013346  32DD               	rrcf	postdec2,f,c
 23024  013348  32DD               	rrcf	postdec2,f,c
 23025  01334A  32DE               	rrcf	postinc2,f,c
 23026  01334C                     u4970:
 23027  01334C  2EE8               	decfsz	wreg,f,c
 23028  01334E  D7F6               	goto	u4975
 23029                           
 23030                           ;stkvar	_bexp @ sp[(-4)+1]
 23031  013350  0EFD               	movlw	-3
 23032  013352  2AE3               	incf	plusw1,f,c
 23033  013354  D0CA               	goto	u5050
 23034  013356                     l7068:
 23035                           
 23036                           ;stkvar	_a @ sp[(-4)+-8]
 23037                           ;stkvar	_b @ sp[(-4)+-4]
 23038  013356  50E1               	movf	fsr1l,w,c
 23039  013358  0FF8               	addlw	-8
 23040  01335A  6ED9               	movwf	fsr2l,c
 23041  01335C  50E2               	movf	fsr1h,w,c
 23042  01335E  6EDA               	movwf	fsr2h,c
 23043  013360  0EFF               	movlw	255
 23044  013362  22DA               	addwfc	fsr2h,f,c
 23045  013364  0EF4               	movlw	-12
 23046  013366  50E3               	movf	plusw1,w,c
 23047  013368  5CDE               	subwf	postinc2,w,c
 23048  01336A  0EF5               	movlw	-11
 23049  01336C  50E3               	movf	plusw1,w,c
 23050  01336E  58DE               	subwfb	postinc2,w,c
 23051  013370  0EF6               	movlw	-10
 23052  013372  50E3               	movf	plusw1,w,c
 23053  013374  58DE               	subwfb	postinc2,w,c
 23054  013376  50DE               	movf	postinc2,w,c
 23055  013378  0A80               	xorlw	128
 23056  01337A  6E01               	movwf	btemp^0,c
 23057  01337C  0EF7               	movlw	-9
 23058  01337E  50E3               	movf	plusw1,w,c
 23059  013380  0A80               	xorlw	128
 23060  013382  5801               	subwfb	btemp^0,w,c
 23061  013384  B0D8               	btfsc	status,0,c
 23062  013386  D053               	goto	l7080
 23063                           
 23064                           ;stkvar	_b @ sp[(-4)+-4]
 23065                           ;stkvar	_a @ sp[(-4)+-8]
 23066  013388  0EF4               	movlw	-12
 23067  01338A  006F FF8C  F009    	movff	plusw1,btemp+8
 23068  013390  0EF5               	movlw	-11
 23069  013392  006F FF8C  F00A    	movff	plusw1,btemp+9
 23070  013398  0EF6               	movlw	-10
 23071  01339A  006F FF8C  F00B    	movff	plusw1,btemp+10
 23072  0133A0  0EF7               	movlw	-9
 23073  0133A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23074  0133A8  0EF8               	movlw	-8
 23075  0133AA  50E3               	movf	plusw1,w,c
 23076  0133AC  5E09               	subwf	(btemp+8)^0,f,c
 23077  0133AE  0EF9               	movlw	-7
 23078  0133B0  50E3               	movf	plusw1,w,c
 23079  0133B2  5A0A               	subwfb	(btemp+9)^0,f,c
 23080  0133B4  0EFA               	movlw	-6
 23081  0133B6  50E3               	movf	plusw1,w,c
 23082  0133B8  5A0B               	subwfb	(btemp+10)^0,f,c
 23083  0133BA  0EFB               	movlw	-5
 23084  0133BC  50E3               	movf	plusw1,w,c
 23085  0133BE  5A0C               	subwfb	(btemp+11)^0,f,c
 23086  0133C0  0EFF               	movlw	255
 23087  0133C2  2409               	addwf	(btemp+8)^0,w,c
 23088  0133C4  6E05               	movwf	(btemp+4)^0,c
 23089  0133C6  0EFF               	movlw	255
 23090  0133C8  200A               	addwfc	(btemp+9)^0,w,c
 23091  0133CA  6E06               	movwf	(btemp+5)^0,c
 23092  0133CC  0EFF               	movlw	255
 23093  0133CE  200B               	addwfc	(btemp+10)^0,w,c
 23094  0133D0  6E07               	movwf	(btemp+6)^0,c
 23095  0133D2  0EFF               	movlw	255
 23096  0133D4  200C               	addwfc	(btemp+11)^0,w,c
 23097  0133D6  6E08               	movwf	(btemp+7)^0,c
 23098                           
 23099                           ;stkvar	_b @ sp[(-4)+-4]
 23100  0133D8  0EF8               	movlw	-8
 23101  0133DA  0060  F017  FFE3   	movff	btemp+4,plusw1
 23102  0133E0  0EF9               	movlw	-7
 23103  0133E2  0060  F01B  FFE3   	movff	btemp+5,plusw1
 23104  0133E8  0EFA               	movlw	-6
 23105  0133EA  0060  F01F  FFE3   	movff	btemp+6,plusw1
 23106  0133F0  0EFB               	movlw	-5
 23107  0133F2  0060  F023  FFE3   	movff	btemp+7,plusw1
 23108                           
 23109                           ;stkvar	_signs @ sp[(-4)+3]
 23110  0133F8  0EFF               	movlw	-1
 23111  0133FA  7EE3               	btg	plusw1,7,c
 23112                           
 23113                           ;stkvar	_grs @ sp[(-4)+0]
 23114  0133FC  0EFC               	movlw	-4
 23115  0133FE  50E3               	movf	plusw1,w,c
 23116  013400  0800               	sublw	0
 23117  013402  6E0C               	movwf	(btemp+11)^0,c
 23118                           
 23119                           ;stkvar	_grs @ sp[(-4)+0]
 23120  013404  0EFC               	movlw	-4
 23121  013406  0060  F033  FFE3   	movff	btemp+11,plusw1
 23122                           
 23123                           ;stkvar	_grs @ sp[(-4)+0]
 23124  01340C  0EFC               	movlw	-4
 23125  01340E  50E3               	movf	plusw1,w,c
 23126  013410  A4D8               	btfss	status,2,c
 23127  013412  D020               	goto	l7082
 23128                           
 23129                           ;stkvar	_b @ sp[(-4)+-4]
 23130  013414  50E1               	movf	fsr1l,w,c
 23131  013416  0FF8               	addlw	-8
 23132  013418  6ED9               	movwf	fsr2l,c
 23133  01341A  50E2               	movf	fsr1h,w,c
 23134  01341C  6EDA               	movwf	fsr2h,c
 23135  01341E  0EFF               	movlw	255
 23136  013420  22DA               	addwfc	fsr2h,f,c
 23137  013422  2ADE               	incf	postinc2,f,c
 23138  013424  0E00               	movlw	0
 23139  013426  22DE               	addwfc	postinc2,f,c
 23140  013428  22DE               	addwfc	postinc2,f,c
 23141  01342A  22DE               	addwfc	postinc2,f,c
 23142  01342C  D013               	goto	l7082
 23143  01342E                     l7080:
 23144                           
 23145                           ;stkvar	_a @ sp[(-4)+-8]
 23146                           ;stkvar	_b @ sp[(-4)+-4]
 23147  01342E  50E1               	movf	fsr1l,w,c
 23148  013430  0FF8               	addlw	-8
 23149  013432  6ED9               	movwf	fsr2l,c
 23150  013434  50E2               	movf	fsr1h,w,c
 23151  013436  6EDA               	movwf	fsr2h,c
 23152  013438  0EFF               	movlw	255
 23153  01343A  22DA               	addwfc	fsr2h,f,c
 23154  01343C  0EF4               	movlw	-12
 23155  01343E  50E3               	movf	plusw1,w,c
 23156  013440  5EDE               	subwf	postinc2,f,c
 23157  013442  0EF5               	movlw	-11
 23158  013444  50E3               	movf	plusw1,w,c
 23159  013446  5ADE               	subwfb	postinc2,f,c
 23160  013448  0EF6               	movlw	-10
 23161  01344A  50E3               	movf	plusw1,w,c
 23162  01344C  5ADE               	subwfb	postinc2,f,c
 23163  01344E  0EF7               	movlw	-9
 23164  013450  50E3               	movf	plusw1,w,c
 23165  013452  5ADE               	subwfb	postinc2,f,c
 23166  013454                     l7082:
 23167                           
 23168                           ;stkvar	_b @ sp[(-4)+-4]
 23169  013454  0EF8               	movlw	-8
 23170  013456  50E3               	movf	plusw1,w,c
 23171  013458  E145               	bnz	l7104
 23172  01345A  0EF9               	movlw	-7
 23173  01345C  50E3               	movf	plusw1,w,c
 23174  01345E  E142               	bnz	l7104
 23175  013460  0EFA               	movlw	-6
 23176  013462  50E3               	movf	plusw1,w,c
 23177  013464  E13F               	bnz	l7104
 23178  013466  0EFB               	movlw	-5
 23179  013468  50E3               	movf	plusw1,w,c
 23180  01346A  A4D8               	btfss	status,2,c
 23181  01346C  D03B               	goto	l7104
 23182                           
 23183                           ;stkvar	_grs @ sp[(-4)+0]
 23184  01346E  0EFC               	movlw	-4
 23185  013470  50E3               	movf	plusw1,w,c
 23186  013472  A4D8               	btfss	status,2,c
 23187  013474  D037               	goto	l7104
 23188  013476                     u5010:
 23189  013476  0E00               	movlw	0
 23190  013478  6E01               	movwf	btemp^0,c
 23191  01347A  0E00               	movlw	0
 23192  01347C  6E02               	movwf	(btemp+1)^0,c
 23193  01347E  0E00               	movlw	0
 23194  013480  6E03               	movwf	(btemp+2)^0,c
 23195  013482  0E00               	movlw	0
 23196  013484  6E04               	movwf	(btemp+3)^0,c
 23197  013486  D0C6               	goto	l2772
 23198  013488                     l7090:
 23199                           
 23200                           ;stkvar	_b @ sp[(-4)+-4]
 23201  013488  90D8               	bcf	status,0,c
 23202  01348A  0EF8               	movlw	-8
 23203  01348C  36E3               	rlcf	plusw1,f,c
 23204  01348E  0EF9               	movlw	-7
 23205  013490  36E3               	rlcf	plusw1,f,c
 23206  013492  0EFA               	movlw	-6
 23207  013494  36E3               	rlcf	plusw1,f,c
 23208  013496  0EFB               	movlw	-5
 23209  013498  36E3               	rlcf	plusw1,f,c
 23210                           
 23211                           ;stkvar	_grs @ sp[(-4)+0]
 23212  01349A  0EFC               	movlw	-4
 23213  01349C  AEE3               	btfss	plusw1,7,c
 23214  01349E  D002               	goto	l2784
 23215                           
 23216                           ;stkvar	_b @ sp[(-4)+-4]
 23217  0134A0  0EF8               	movlw	-8
 23218  0134A2  80E3               	bsf	plusw1,0,c
 23219  0134A4                     l2784:
 23220                           
 23221                           ;stkvar	_grs @ sp[(-4)+0]
 23222  0134A4  0EFC               	movlw	-4
 23223  0134A6  A0E3               	btfss	plusw1,0,c
 23224  0134A8  D00E               	goto	l7098
 23225                           
 23226                           ;stkvar	_grs @ sp[(-4)+0]
 23227  0134AA  0EFC               	movlw	-4
 23228  0134AC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23229  0134B2  90D8               	bcf	status,0,c
 23230  0134B4  340C               	rlcf	(btemp+11)^0,w,c
 23231  0134B6  6E0B               	movwf	(btemp+10)^0,c
 23232  0134B8  0E01               	movlw	1
 23233  0134BA  120B               	iorwf	(btemp+10)^0,f,c
 23234                           
 23235                           ;stkvar	_grs @ sp[(-4)+0]
 23236  0134BC  0EFC               	movlw	-4
 23237  0134BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23238  0134C4  D009               	goto	l7100
 23239  0134C6                     l7098:
 23240                           
 23241                           ;stkvar	_grs @ sp[(-4)+0]
 23242  0134C6  50E1               	movf	fsr1l,w,c
 23243  0134C8  0FFC               	addlw	-4
 23244  0134CA  6ED9               	movwf	fsr2l,c
 23245  0134CC  50E2               	movf	fsr1h,w,c
 23246  0134CE  6EDA               	movwf	fsr2h,c
 23247  0134D0  0EFF               	movlw	255
 23248  0134D2  22DA               	addwfc	fsr2h,f,c
 23249  0134D4  90D8               	bcf	status,0,c
 23250  0134D6  36DF               	rlcf	indf2,f,c
 23251  0134D8                     l7100:
 23252                           
 23253                           ;stkvar	_bexp @ sp[(-4)+1]
 23254  0134D8  0EFD               	movlw	-3
 23255  0134DA  50E3               	movf	plusw1,w,c
 23256  0134DC  B4D8               	btfsc	status,2,c
 23257  0134DE  D002               	goto	l7104
 23258                           
 23259                           ;stkvar	_bexp @ sp[(-4)+1]
 23260  0134E0  0EFD               	movlw	-3
 23261  0134E2  06E3               	decf	plusw1,f,c
 23262  0134E4                     l7104:
 23263                           
 23264                           ;stkvar	_b @ sp[(-4)+-4]
 23265  0134E4  0EFA               	movlw	-6
 23266  0134E6  AEE3               	btfss	plusw1,7,c
 23267  0134E8  D7CF               	goto	l7090
 23268  0134EA                     u5050:
 23269                           
 23270                           ;stkvar	_aexp @ sp[(-4)+2]
 23271  0134EA  0EFE               	movlw	-2
 23272  0134EC  6AE3               	clrf	plusw1,c
 23273                           
 23274                           ;stkvar	_grs @ sp[(-4)+0]
 23275  0134EE  0EFC               	movlw	-4
 23276  0134F0  AEE3               	btfss	plusw1,7,c
 23277  0134F2  D00F               	goto	l7118
 23278                           
 23279                           ;stkvar	_grs @ sp[(-4)+0]
 23280  0134F4  0EFC               	movlw	-4
 23281  0134F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23282  0134FC  0E7F               	movlw	127
 23283  0134FE  160C               	andwf	(btemp+11)^0,f,c
 23284  013500  B4D8               	btfsc	status,2,c
 23285  013502  D004               	goto	l7114
 23286  013504                     u5070:
 23287                           
 23288                           ;stkvar	_aexp @ sp[(-4)+2]
 23289  013504  0EFE               	movlw	-2
 23290  013506  6AE3               	clrf	plusw1,c
 23291  013508  2AE3               	incf	plusw1,f,c
 23292  01350A  D003               	goto	l7118
 23293  01350C                     l7114:
 23294                           
 23295                           ;stkvar	_b @ sp[(-4)+-4]
 23296  01350C  0EF8               	movlw	-8
 23297  01350E  B0E3               	btfsc	plusw1,0,c
 23298  013510  D7F9               	goto	u5070
 23299  013512                     l7118:
 23300                           
 23301                           ;stkvar	_aexp @ sp[(-4)+2]
 23302  013512  0EFE               	movlw	-2
 23303  013514  50E3               	movf	plusw1,w,c
 23304  013516  B4D8               	btfsc	status,2,c
 23305  013518  D02B               	goto	l7130
 23306                           
 23307                           ;stkvar	_b @ sp[(-4)+-4]
 23308  01351A  50E1               	movf	fsr1l,w,c
 23309  01351C  0FF8               	addlw	-8
 23310  01351E  6ED9               	movwf	fsr2l,c
 23311  013520  50E2               	movf	fsr1h,w,c
 23312  013522  6EDA               	movwf	fsr2h,c
 23313  013524  0EFF               	movlw	255
 23314  013526  22DA               	addwfc	fsr2h,f,c
 23315  013528  2ADE               	incf	postinc2,f,c
 23316  01352A  0E00               	movlw	0
 23317  01352C  22DE               	addwfc	postinc2,f,c
 23318  01352E  22DE               	addwfc	postinc2,f,c
 23319  013530  22DE               	addwfc	postinc2,f,c
 23320                           
 23321                           ;stkvar	_b @ sp[(-4)+-4]
 23322  013532  0EFB               	movlw	-5
 23323  013534  A0E3               	btfss	plusw1,0,c
 23324  013536  D01C               	goto	l7130
 23325  013538  0E01               	movlw	1
 23326  01353A  6E0C               	movwf	(btemp+11)^0,c
 23327                           
 23328                           ;stkvar	_b @ sp[(-4)+-4]
 23329  01353C  50E1               	movf	fsr1l,w,c
 23330  01353E  0FF8               	addlw	-8
 23331  013540  6ED9               	movwf	fsr2l,c
 23332  013542  50E2               	movf	fsr1h,w,c
 23333  013544  6EDA               	movwf	fsr2h,c
 23334  013546  0EFF               	movlw	255
 23335  013548  22DA               	addwfc	fsr2h,f,c
 23336  01354A  280C               	incf	(btemp+11)^0,w,c
 23337  01354C  52DE               	movf	postinc2,f,c
 23338  01354E  D008               	goto	u5110
 23339  013550                     u5115:
 23340  013550  52DE               	movf	postinc2,f,c
 23341  013552  90D8               	bcf	status,0,c
 23342  013554  BEDC               	btfsc	preinc2,7,c
 23343  013556  80D8               	bsf	status,0,c
 23344  013558  32DD               	rrcf	postdec2,f,c
 23345  01355A  32DD               	rrcf	postdec2,f,c
 23346  01355C  32DD               	rrcf	postdec2,f,c
 23347  01355E  32DE               	rrcf	postinc2,f,c
 23348  013560                     u5110:
 23349  013560  2EE8               	decfsz	wreg,f,c
 23350  013562  D7F6               	goto	u5115
 23351                           
 23352                           ;stkvar	_bexp @ sp[(-4)+1]
 23353  013564  0EFD               	movlw	-3
 23354  013566  28E3               	incf	plusw1,w,c
 23355  013568  B4D8               	btfsc	status,2,c
 23356  01356A  D002               	goto	l7130
 23357                           
 23358                           ;stkvar	_bexp @ sp[(-4)+1]
 23359  01356C  0EFD               	movlw	-3
 23360  01356E  2AE3               	incf	plusw1,f,c
 23361  013570                     l7130:
 23362                           
 23363                           ;stkvar	_bexp @ sp[(-4)+1]
 23364  013570  0EFD               	movlw	-3
 23365  013572  28E3               	incf	plusw1,w,c
 23366  013574  B4D8               	btfsc	status,2,c
 23367  013576  D004               	goto	u5140
 23368                           
 23369                           ;stkvar	_bexp @ sp[(-4)+1]
 23370  013578  0EFD               	movlw	-3
 23371  01357A  50E3               	movf	plusw1,w,c
 23372  01357C  A4D8               	btfss	status,2,c
 23373  01357E  D00E               	goto	l7140
 23374  013580                     u5140:
 23375                           
 23376                           ;stkvar	_b @ sp[(-4)+-4]
 23377  013580  0EF8               	movlw	-8
 23378  013582  6AE3               	clrf	plusw1,c
 23379  013584  0EF9               	movlw	-7
 23380  013586  6AE3               	clrf	plusw1,c
 23381  013588  0EFA               	movlw	-6
 23382  01358A  6AE3               	clrf	plusw1,c
 23383  01358C  0EFB               	movlw	-5
 23384  01358E  6AE3               	clrf	plusw1,c
 23385                           
 23386                           ;stkvar	_bexp @ sp[(-4)+1]
 23387  013590  0EFD               	movlw	-3
 23388  013592  50E3               	movf	plusw1,w,c
 23389  013594  A4D8               	btfss	status,2,c
 23390  013596  D002               	goto	l7140
 23391                           
 23392                           ;stkvar	_signs @ sp[(-4)+3]
 23393  013598  0EFF               	movlw	-1
 23394  01359A  6AE3               	clrf	plusw1,c
 23395  01359C                     l7140:
 23396                           
 23397                           ;stkvar	_bexp @ sp[(-4)+1]
 23398  01359C  0EFD               	movlw	-3
 23399  01359E  A0E3               	btfss	plusw1,0,c
 23400  0135A0  D009               	goto	l7144
 23401                           
 23402                           ;stkvar	_b @ sp[(-4)+-4]
 23403  0135A2  0EFA               	movlw	250
 23404  0135A4  24E1               	addwf	fsr1l,w,c
 23405  0135A6  6ED9               	movwf	fsr2l,c
 23406  0135A8  0EFF               	movlw	255
 23407  0135AA  20E2               	addwfc	fsr1h,w,c
 23408  0135AC  6EDA               	movwf	fsr2h,c
 23409  0135AE  0E00               	movlw	0
 23410  0135B0  8EDB               	bsf	plusw2,7,c
 23411  0135B2  D008               	goto	l7146
 23412  0135B4                     l7144:
 23413                           
 23414                           ;stkvar	_b @ sp[(-4)+-4]
 23415  0135B4  0EFA               	movlw	250
 23416  0135B6  24E1               	addwf	fsr1l,w,c
 23417  0135B8  6ED9               	movwf	fsr2l,c
 23418  0135BA  0EFF               	movlw	255
 23419  0135BC  20E2               	addwfc	fsr1h,w,c
 23420  0135BE  6EDA               	movwf	fsr2h,c
 23421  0135C0  0E7F               	movlw	127
 23422  0135C2  16DF               	andwf	indf2,f,c
 23423  0135C4                     l7146:
 23424                           
 23425                           ;stkvar	_b @ sp[(-4)+-4]
 23426  0135C4  0EFB               	movlw	251
 23427  0135C6  24E1               	addwf	fsr1l,w,c
 23428  0135C8  6ED9               	movwf	fsr2l,c
 23429  0135CA  0EFF               	movlw	255
 23430  0135CC  20E2               	addwfc	fsr1h,w,c
 23431  0135CE  6EDA               	movwf	fsr2h,c
 23432                           
 23433                           ;stkvar	_bexp @ sp[(-4)+1]
 23434  0135D0  0EFD               	movlw	-3
 23435  0135D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23436  0135D8  90D8               	bcf	status,0,c
 23437  0135DA  300C               	rrcf	(btemp+11)^0,w,c
 23438  0135DC  6EDF               	movwf	indf2,c
 23439                           
 23440                           ;stkvar	_signs @ sp[(-4)+3]
 23441  0135DE  0EFF               	movlw	-1
 23442  0135E0  AEE3               	btfss	plusw1,7,c
 23443  0135E2  D008               	goto	l7152
 23444                           
 23445                           ;stkvar	_b @ sp[(-4)+-4]
 23446  0135E4  0EFB               	movlw	251
 23447  0135E6  24E1               	addwf	fsr1l,w,c
 23448  0135E8  6ED9               	movwf	fsr2l,c
 23449  0135EA  0EFF               	movlw	255
 23450  0135EC  20E2               	addwfc	fsr1h,w,c
 23451  0135EE  6EDA               	movwf	fsr2h,c
 23452  0135F0  0E00               	movlw	0
 23453  0135F2  8EDB               	bsf	plusw2,7,c
 23454  0135F4                     l7152:
 23455                           
 23456                           ;stkvar	_b @ sp[(-4)+-4]
 23457  0135F4  0EF8               	movlw	-8
 23458  0135F6  006F FF8C  F001    	movff	plusw1,btemp
 23459  0135FC  0EF9               	movlw	-7
 23460  0135FE  006F FF8C  F002    	movff	plusw1,btemp+1
 23461  013604  0EFA               	movlw	-6
 23462  013606  006F FF8C  F003    	movff	plusw1,btemp+2
 23463  01360C  0EFB               	movlw	-5
 23464  01360E  006F FF8C  F004    	movff	plusw1,btemp+3
 23465  013614                     l2772:
 23466                           
 23467                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 23468  013614  0EF4               	movlw	244
 23469  013616  26E1               	addwf	fsr1l,f,c
 23470  013618  0EFF               	movlw	255
 23471  01361A  22E2               	addwfc	fsr1h,f,c
 23472  01361C  0012               	return		;funcret
 23473  01361E                     __end_of___fladd:
 23474                           	opt callstack 0
 23475                           
 23476 ;; *************** function ___flmul *****************
 23477 ;; Defined at:
 23478 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 23479 ;; Parameters:    Size  Location     Type
 23480 ;;  b               4  [STACK] unsigned char 
 23481 ;;  a               4  [STACK] unsigned char 
 23482 ;; Auto vars:     Size  Location     Type
 23483 ;;  prod            4  [STACK] struct .
 23484 ;;  grs             4  [STACK] unsigned long 
 23485 ;;  temp            2  [STACK] struct .
 23486 ;;  bexp            1  [STACK] unsigned char 
 23487 ;;  aexp            1  [STACK] unsigned char 
 23488 ;;  sign            1  [STACK] unsigned char 
 23489 ;; Return value:  Size  Location     Type
 23490 ;;                  4  [STACK] unsigned char 
 23491 ;; Registers used:
 23492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23493 ;; Tracked objects:
 23494 ;;		On entry : 0/1
 23495 ;;		On exit  : 0/0
 23496 ;;		Unchanged: 0/0
 23497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23502 ;;Total ram usage:        0 bytes
 23503 ;; Hardware stack levels used:    1
 23504 ;; Hardware stack levels required when called:   15
 23505 ;; This function calls:
 23506 ;;		Nothing
 23507 ;; This function is called by:
 23508 ;;		_conv_raw_result
 23509 ;;		_lp_filter
 23510 ;;		_calc_model_data
 23511 ;;		_calc_bsoc
 23512 ;;		_init_bsoc
 23513 ;;		_efgtoa
 23514 ;; This function uses a reentrant model
 23515 ;;
 23516                           
 23517                           	psect	text96
 23518  012638                     __ptext96:
 23519                           	opt callstack 0
 23520  012638                     ___flmul:
 23521                           	opt callstack 0
 23522                           
 23523                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 23524  012638  0E0D               	movlw	13
 23525  01263A  26E1               	addwf	fsr1l,f,c
 23526  01263C  0E00               	movlw	0
 23527  01263E  22E2               	addwfc	fsr1h,f,c
 23528                           
 23529                           ;stkvar	_b @ sp[(-13)+-4]
 23530                           
 23531                           ;incstack = 0
 23532 ;; hardware stack exceeded
 23533  012640  0EF2               	movlw	242
 23534  012642  24E1               	addwf	fsr1l,w,c
 23535  012644  6ED9               	movwf	fsr2l,c
 23536  012646  0EFF               	movlw	255
 23537  012648  20E2               	addwfc	fsr1h,w,c
 23538  01264A  6EDA               	movwf	fsr2h,c
 23539  01264C  50DF               	movf	indf2,w,c
 23540  01264E  6E0C               	movwf	(btemp+11)^0,c
 23541  012650  0E80               	movlw	128
 23542  012652  160C               	andwf	(btemp+11)^0,f,c
 23543                           
 23544                           ;stkvar	_sign @ sp[(-13)+12]
 23545  012654  0EFF               	movlw	-1
 23546  012656  0060  F033  FFE3   	movff	btemp+11,plusw1
 23547                           
 23548                           ;stkvar	_b @ sp[(-13)+-4]
 23549  01265C  0EF2               	movlw	242
 23550  01265E  24E1               	addwf	fsr1l,w,c
 23551  012660  6ED9               	movwf	fsr2l,c
 23552  012662  0EFF               	movlw	255
 23553  012664  20E2               	addwfc	fsr1h,w,c
 23554  012666  6EDA               	movwf	fsr2h,c
 23555  012668  50DF               	movf	indf2,w,c
 23556  01266A  6E0C               	movwf	(btemp+11)^0,c
 23557  01266C  90D8               	bcf	status,0,c
 23558  01266E  340C               	rlcf	(btemp+11)^0,w,c
 23559  012670  6E0B               	movwf	(btemp+10)^0,c
 23560                           
 23561                           ;stkvar	_bexp @ sp[(-13)+10]
 23562  012672  0EFD               	movlw	-3
 23563  012674  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23564                           
 23565                           ;stkvar	_b @ sp[(-13)+-4]
 23566  01267A  0EF1               	movlw	241
 23567  01267C  24E1               	addwf	fsr1l,w,c
 23568  01267E  6ED9               	movwf	fsr2l,c
 23569  012680  0EFF               	movlw	255
 23570  012682  20E2               	addwfc	fsr1h,w,c
 23571  012684  6EDA               	movwf	fsr2h,c
 23572  012686  AEDF               	btfss	indf2,7,c
 23573  012688  D002               	goto	l7536
 23574                           
 23575                           ;stkvar	_bexp @ sp[(-13)+10]
 23576  01268A  0EFD               	movlw	-3
 23577  01268C  80E3               	bsf	plusw1,0,c
 23578  01268E                     l7536:
 23579                           
 23580                           ;stkvar	_bexp @ sp[(-13)+10]
 23581  01268E  0EFD               	movlw	-3
 23582  012690  50E3               	movf	plusw1,w,c
 23583  012692  B4D8               	btfsc	status,2,c
 23584  012694  D01F               	goto	l7544
 23585                           
 23586                           ;stkvar	_bexp @ sp[(-13)+10]
 23587  012696  0EFD               	movlw	-3
 23588  012698  28E3               	incf	plusw1,w,c
 23589  01269A  A4D8               	btfss	status,2,c
 23590  01269C  D018               	goto	l7542
 23591  01269E  0E00               	movlw	0
 23592  0126A0  6E09               	movwf	(btemp+8)^0,c
 23593  0126A2  0E00               	movlw	0
 23594  0126A4  6E0A               	movwf	(btemp+9)^0,c
 23595  0126A6  0E00               	movlw	0
 23596  0126A8  6E0B               	movwf	(btemp+10)^0,c
 23597  0126AA  0E00               	movlw	0
 23598  0126AC  6E0C               	movwf	(btemp+11)^0,c
 23599                           
 23600                           ;stkvar	_b @ sp[(-13)+-4]
 23601  0126AE  0EEF               	movlw	-17
 23602  0126B0  0060  F027  FFE3   	movff	btemp+8,plusw1
 23603  0126B6  0EF0               	movlw	-16
 23604  0126B8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23605  0126BE  0EF1               	movlw	-15
 23606  0126C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23607  0126C6  0EF2               	movlw	-14
 23608  0126C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 23609  0126CE                     l7542:
 23610                           
 23611                           ;stkvar	_b @ sp[(-13)+-4]
 23612  0126CE  0EF1               	movlw	-15
 23613  0126D0  8EE3               	bsf	plusw1,7,c
 23614  0126D2  D018               	goto	l7546
 23615  0126D4                     l7544:
 23616  0126D4  0E00               	movlw	0
 23617  0126D6  6E09               	movwf	(btemp+8)^0,c
 23618  0126D8  0E00               	movlw	0
 23619  0126DA  6E0A               	movwf	(btemp+9)^0,c
 23620  0126DC  0E00               	movlw	0
 23621  0126DE  6E0B               	movwf	(btemp+10)^0,c
 23622  0126E0  0E00               	movlw	0
 23623  0126E2  6E0C               	movwf	(btemp+11)^0,c
 23624                           
 23625                           ;stkvar	_b @ sp[(-13)+-4]
 23626  0126E4  0EEF               	movlw	-17
 23627  0126E6  0060  F027  FFE3   	movff	btemp+8,plusw1
 23628  0126EC  0EF0               	movlw	-16
 23629  0126EE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23630  0126F4  0EF1               	movlw	-15
 23631  0126F6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23632  0126FC  0EF2               	movlw	-14
 23633  0126FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 23634  012704                     l7546:
 23635                           
 23636                           ;stkvar	_a @ sp[(-13)+-8]
 23637  012704  0EEE               	movlw	238
 23638  012706  24E1               	addwf	fsr1l,w,c
 23639  012708  6ED9               	movwf	fsr2l,c
 23640  01270A  0EFF               	movlw	255
 23641  01270C  20E2               	addwfc	fsr1h,w,c
 23642  01270E  6EDA               	movwf	fsr2h,c
 23643  012710  50DF               	movf	indf2,w,c
 23644  012712  6E0C               	movwf	(btemp+11)^0,c
 23645  012714  0E80               	movlw	128
 23646  012716  160C               	andwf	(btemp+11)^0,f,c
 23647                           
 23648                           ;stkvar	_sign @ sp[(-13)+12]
 23649  012718  50E1               	movf	fsr1l,w,c
 23650  01271A  0FFF               	addlw	-1
 23651  01271C  6ED9               	movwf	fsr2l,c
 23652  01271E  50E2               	movf	fsr1h,w,c
 23653  012720  6EDA               	movwf	fsr2h,c
 23654  012722  0EFF               	movlw	255
 23655  012724  22DA               	addwfc	fsr2h,f,c
 23656  012726  500C               	movf	(btemp+11)^0,w,c
 23657  012728  1ADF               	xorwf	indf2,f,c
 23658                           
 23659                           ;stkvar	_a @ sp[(-13)+-8]
 23660  01272A  0EEE               	movlw	238
 23661  01272C  24E1               	addwf	fsr1l,w,c
 23662  01272E  6ED9               	movwf	fsr2l,c
 23663  012730  0EFF               	movlw	255
 23664  012732  20E2               	addwfc	fsr1h,w,c
 23665  012734  6EDA               	movwf	fsr2h,c
 23666  012736  50DF               	movf	indf2,w,c
 23667  012738  6E0C               	movwf	(btemp+11)^0,c
 23668  01273A  90D8               	bcf	status,0,c
 23669  01273C  340C               	rlcf	(btemp+11)^0,w,c
 23670  01273E  6E0B               	movwf	(btemp+10)^0,c
 23671                           
 23672                           ;stkvar	_aexp @ sp[(-13)+11]
 23673  012740  0EFE               	movlw	-2
 23674  012742  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23675                           
 23676                           ;stkvar	_a @ sp[(-13)+-8]
 23677  012748  0EED               	movlw	237
 23678  01274A  24E1               	addwf	fsr1l,w,c
 23679  01274C  6ED9               	movwf	fsr2l,c
 23680  01274E  0EFF               	movlw	255
 23681  012750  20E2               	addwfc	fsr1h,w,c
 23682  012752  6EDA               	movwf	fsr2h,c
 23683  012754  AEDF               	btfss	indf2,7,c
 23684  012756  D002               	goto	l7554
 23685                           
 23686                           ;stkvar	_aexp @ sp[(-13)+11]
 23687  012758  0EFE               	movlw	-2
 23688  01275A  80E3               	bsf	plusw1,0,c
 23689  01275C                     l7554:
 23690                           
 23691                           ;stkvar	_aexp @ sp[(-13)+11]
 23692  01275C  0EFE               	movlw	-2
 23693  01275E  50E3               	movf	plusw1,w,c
 23694  012760  B4D8               	btfsc	status,2,c
 23695  012762  D01F               	goto	l7562
 23696                           
 23697                           ;stkvar	_aexp @ sp[(-13)+11]
 23698  012764  0EFE               	movlw	-2
 23699  012766  28E3               	incf	plusw1,w,c
 23700  012768  A4D8               	btfss	status,2,c
 23701  01276A  D018               	goto	l7560
 23702  01276C  0E00               	movlw	0
 23703  01276E  6E09               	movwf	(btemp+8)^0,c
 23704  012770  0E00               	movlw	0
 23705  012772  6E0A               	movwf	(btemp+9)^0,c
 23706  012774  0E00               	movlw	0
 23707  012776  6E0B               	movwf	(btemp+10)^0,c
 23708  012778  0E00               	movlw	0
 23709  01277A  6E0C               	movwf	(btemp+11)^0,c
 23710                           
 23711                           ;stkvar	_a @ sp[(-13)+-8]
 23712  01277C  0EEB               	movlw	-21
 23713  01277E  0060  F027  FFE3   	movff	btemp+8,plusw1
 23714  012784  0EEC               	movlw	-20
 23715  012786  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23716  01278C  0EED               	movlw	-19
 23717  01278E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23718  012794  0EEE               	movlw	-18
 23719  012796  0060  F033  FFE3   	movff	btemp+11,plusw1
 23720  01279C                     l7560:
 23721                           
 23722                           ;stkvar	_a @ sp[(-13)+-8]
 23723  01279C  0EED               	movlw	-19
 23724  01279E  8EE3               	bsf	plusw1,7,c
 23725  0127A0  D018               	goto	l7564
 23726  0127A2                     l7562:
 23727  0127A2  0E00               	movlw	0
 23728  0127A4  6E09               	movwf	(btemp+8)^0,c
 23729  0127A6  0E00               	movlw	0
 23730  0127A8  6E0A               	movwf	(btemp+9)^0,c
 23731  0127AA  0E00               	movlw	0
 23732  0127AC  6E0B               	movwf	(btemp+10)^0,c
 23733  0127AE  0E00               	movlw	0
 23734  0127B0  6E0C               	movwf	(btemp+11)^0,c
 23735                           
 23736                           ;stkvar	_a @ sp[(-13)+-8]
 23737  0127B2  0EEB               	movlw	-21
 23738  0127B4  0060  F027  FFE3   	movff	btemp+8,plusw1
 23739  0127BA  0EEC               	movlw	-20
 23740  0127BC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23741  0127C2  0EED               	movlw	-19
 23742  0127C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23743  0127CA  0EEE               	movlw	-18
 23744  0127CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 23745  0127D2                     l7564:
 23746                           
 23747                           ;stkvar	_aexp @ sp[(-13)+11]
 23748  0127D2  0EFE               	movlw	-2
 23749  0127D4  50E3               	movf	plusw1,w,c
 23750  0127D6  B4D8               	btfsc	status,2,c
 23751  0127D8  D004               	goto	u6080
 23752                           
 23753                           ;stkvar	_bexp @ sp[(-13)+10]
 23754  0127DA  0EFD               	movlw	-3
 23755  0127DC  50E3               	movf	plusw1,w,c
 23756  0127DE  A4D8               	btfss	status,2,c
 23757  0127E0  D009               	goto	l7572
 23758  0127E2                     u6080:
 23759  0127E2  0E00               	movlw	0
 23760  0127E4  6E01               	movwf	btemp^0,c
 23761  0127E6  0E00               	movlw	0
 23762  0127E8  6E02               	movwf	(btemp+1)^0,c
 23763  0127EA  0E00               	movlw	0
 23764  0127EC  6E03               	movwf	(btemp+2)^0,c
 23765  0127EE  0E00               	movlw	0
 23766  0127F0  6E04               	movwf	(btemp+3)^0,c
 23767  0127F2  D332               	goto	l2853
 23768  0127F4                     l7572:
 23769                           
 23770                           ;stkvar	_b @ sp[(-13)+-4]
 23771  0127F4  0EEF               	movlw	-17
 23772  0127F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23773                           
 23774                           ;stkvar	_a @ sp[(-13)+-8]
 23775  0127FC  0EED               	movlw	237
 23776  0127FE  24E1               	addwf	fsr1l,w,c
 23777  012800  6ED9               	movwf	fsr2l,c
 23778  012802  0EFF               	movlw	255
 23779  012804  20E2               	addwfc	fsr1h,w,c
 23780  012806  6EDA               	movwf	fsr2h,c
 23781  012808  50DF               	movf	indf2,w,c
 23782  01280A  020C               	mulwf	(btemp+11)^0,c
 23783                           
 23784                           ;stkvar	_temp @ sp[(-13)+8]
 23785  01280C  0EFB               	movlw	-5
 23786  01280E  006F FFCF FFE3     	movff	prodl,plusw1
 23787  012814  0EFC               	movlw	-4
 23788  012816  006F FFD3 FFE3     	movff	prodh,plusw1
 23789                           
 23790                           ;stkvar	_temp @ sp[(-13)+8]
 23791  01281C  0EFB               	movlw	-5
 23792  01281E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23793  012824  0060  F030  F005   	movff	btemp+11,btemp+4
 23794  01282A  6A06               	clrf	(btemp+5)^0,c
 23795  01282C  6A07               	clrf	(btemp+6)^0,c
 23796  01282E  6A08               	clrf	(btemp+7)^0,c
 23797                           
 23798                           ;stkvar	_grs @ sp[(-13)+4]
 23799  012830  0EF7               	movlw	-9
 23800  012832  0060  F017  FFE3   	movff	btemp+4,plusw1
 23801  012838  0EF8               	movlw	-8
 23802  01283A  0060  F01B  FFE3   	movff	btemp+5,plusw1
 23803  012840  0EF9               	movlw	-7
 23804  012842  0060  F01F  FFE3   	movff	btemp+6,plusw1
 23805  012848  0EFA               	movlw	-6
 23806  01284A  0060  F023  FFE3   	movff	btemp+7,plusw1
 23807                           
 23808                           ;stkvar	_temp @ sp[(-13)+8]
 23809  012850  0EFC               	movlw	252
 23810  012852  24E1               	addwf	fsr1l,w,c
 23811  012854  6ED9               	movwf	fsr2l,c
 23812  012856  0EFF               	movlw	255
 23813  012858  20E2               	addwfc	fsr1h,w,c
 23814  01285A  6EDA               	movwf	fsr2h,c
 23815  01285C  50DF               	movf	indf2,w,c
 23816  01285E  6E0C               	movwf	(btemp+11)^0,c
 23817  012860  0060  F030  F005   	movff	btemp+11,btemp+4
 23818  012866  6A06               	clrf	(btemp+5)^0,c
 23819  012868  6A07               	clrf	(btemp+6)^0,c
 23820  01286A  6A08               	clrf	(btemp+7)^0,c
 23821                           
 23822                           ;stkvar	_prod @ sp[(-13)+0]
 23823  01286C  0EF3               	movlw	-13
 23824  01286E  0060  F017  FFE3   	movff	btemp+4,plusw1
 23825  012874  0EF4               	movlw	-12
 23826  012876  0060  F01B  FFE3   	movff	btemp+5,plusw1
 23827  01287C  0EF5               	movlw	-11
 23828  01287E  0060  F01F  FFE3   	movff	btemp+6,plusw1
 23829  012884  0EF6               	movlw	-10
 23830  012886  0060  F023  FFE3   	movff	btemp+7,plusw1
 23831                           
 23832                           ;stkvar	_b @ sp[(-13)+-4]
 23833  01288C  0EF0               	movlw	240
 23834  01288E  24E1               	addwf	fsr1l,w,c
 23835  012890  6ED9               	movwf	fsr2l,c
 23836  012892  0EFF               	movlw	255
 23837  012894  20E2               	addwfc	fsr1h,w,c
 23838  012896  6EDA               	movwf	fsr2h,c
 23839  012898  50DF               	movf	indf2,w,c
 23840  01289A  6E0C               	movwf	(btemp+11)^0,c
 23841                           
 23842                           ;stkvar	_a @ sp[(-13)+-8]
 23843  01289C  0EEC               	movlw	236
 23844  01289E  24E1               	addwf	fsr1l,w,c
 23845  0128A0  6ED9               	movwf	fsr2l,c
 23846  0128A2  0EFF               	movlw	255
 23847  0128A4  20E2               	addwfc	fsr1h,w,c
 23848  0128A6  6EDA               	movwf	fsr2h,c
 23849  0128A8  50DF               	movf	indf2,w,c
 23850  0128AA  020C               	mulwf	(btemp+11)^0,c
 23851                           
 23852                           ;stkvar	_temp @ sp[(-13)+8]
 23853  0128AC  0EFB               	movlw	-5
 23854  0128AE  006F FFCF FFE3     	movff	prodl,plusw1
 23855  0128B4  0EFC               	movlw	-4
 23856  0128B6  006F FFD3 FFE3     	movff	prodh,plusw1
 23857                           
 23858                           ;stkvar	_grs @ sp[(-13)+4]
 23859  0128BC  50E1               	movf	fsr1l,w,c
 23860  0128BE  0FF7               	addlw	-9
 23861  0128C0  6ED9               	movwf	fsr2l,c
 23862  0128C2  50E2               	movf	fsr1h,w,c
 23863  0128C4  6EDA               	movwf	fsr2h,c
 23864  0128C6  0EFF               	movlw	255
 23865  0128C8  22DA               	addwfc	fsr2h,f,c
 23866                           
 23867                           ;stkvar	_temp @ sp[(-13)+8]
 23868  0128CA  0EFB               	movlw	-5
 23869  0128CC  50E3               	movf	plusw1,w,c
 23870  0128CE  26DE               	addwf	postinc2,f,c
 23871  0128D0  0E00               	movlw	0
 23872  0128D2  22DE               	addwfc	postinc2,f,c
 23873  0128D4  22DE               	addwfc	postinc2,f,c
 23874  0128D6  22DE               	addwfc	postinc2,f,c
 23875                           
 23876                           ;stkvar	_prod @ sp[(-13)+0]
 23877  0128D8  50E1               	movf	fsr1l,w,c
 23878  0128DA  0FF3               	addlw	-13
 23879  0128DC  6ED9               	movwf	fsr2l,c
 23880  0128DE  50E2               	movf	fsr1h,w,c
 23881  0128E0  6EDA               	movwf	fsr2h,c
 23882  0128E2  0EFF               	movlw	255
 23883  0128E4  22DA               	addwfc	fsr2h,f,c
 23884                           
 23885                           ;stkvar	_temp @ sp[(-13)+8]
 23886  0128E6  0EFC               	movlw	252
 23887  0128E8  24E1               	addwf	fsr1l,w,c
 23888  0128EA  6EE9               	movwf	fsr0l,c
 23889  0128EC  0EFF               	movlw	255
 23890  0128EE  20E2               	addwfc	fsr1h,w,c
 23891  0128F0  6EEA               	movwf	fsr0h,c
 23892  0128F2  50EF               	movf	indf0,w,c
 23893  0128F4  26DE               	addwf	postinc2,f,c
 23894  0128F6  0E00               	movlw	0
 23895  0128F8  22DE               	addwfc	postinc2,f,c
 23896  0128FA  22DE               	addwfc	postinc2,f,c
 23897  0128FC  22DE               	addwfc	postinc2,f,c
 23898                           
 23899                           ;stkvar	_b @ sp[(-13)+-4]
 23900  0128FE  0EF1               	movlw	241
 23901  012900  24E1               	addwf	fsr1l,w,c
 23902  012902  6ED9               	movwf	fsr2l,c
 23903  012904  0EFF               	movlw	255
 23904  012906  20E2               	addwfc	fsr1h,w,c
 23905  012908  6EDA               	movwf	fsr2h,c
 23906  01290A  50DF               	movf	indf2,w,c
 23907  01290C  6E0C               	movwf	(btemp+11)^0,c
 23908                           
 23909                           ;stkvar	_a @ sp[(-13)+-8]
 23910  01290E  0EEB               	movlw	-21
 23911  012910  50E3               	movf	plusw1,w,c
 23912  012912  020C               	mulwf	(btemp+11)^0,c
 23913                           
 23914                           ;stkvar	_temp @ sp[(-13)+8]
 23915  012914  0EFB               	movlw	-5
 23916  012916  006F FFCF FFE3     	movff	prodl,plusw1
 23917  01291C  0EFC               	movlw	-4
 23918  01291E  006F FFD3 FFE3     	movff	prodh,plusw1
 23919                           
 23920                           ;stkvar	_grs @ sp[(-13)+4]
 23921  012924  50E1               	movf	fsr1l,w,c
 23922  012926  0FF7               	addlw	-9
 23923  012928  6ED9               	movwf	fsr2l,c
 23924  01292A  50E2               	movf	fsr1h,w,c
 23925  01292C  6EDA               	movwf	fsr2h,c
 23926  01292E  0EFF               	movlw	255
 23927  012930  22DA               	addwfc	fsr2h,f,c
 23928                           
 23929                           ;stkvar	_temp @ sp[(-13)+8]
 23930  012932  0EFB               	movlw	-5
 23931  012934  50E3               	movf	plusw1,w,c
 23932  012936  26DE               	addwf	postinc2,f,c
 23933  012938  0E00               	movlw	0
 23934  01293A  22DE               	addwfc	postinc2,f,c
 23935  01293C  22DE               	addwfc	postinc2,f,c
 23936  01293E  22DE               	addwfc	postinc2,f,c
 23937                           
 23938                           ;stkvar	_prod @ sp[(-13)+0]
 23939  012940  50E1               	movf	fsr1l,w,c
 23940  012942  0FF3               	addlw	-13
 23941  012944  6ED9               	movwf	fsr2l,c
 23942  012946  50E2               	movf	fsr1h,w,c
 23943  012948  6EDA               	movwf	fsr2h,c
 23944  01294A  0EFF               	movlw	255
 23945  01294C  22DA               	addwfc	fsr2h,f,c
 23946                           
 23947                           ;stkvar	_temp @ sp[(-13)+8]
 23948  01294E  0EFC               	movlw	252
 23949  012950  24E1               	addwf	fsr1l,w,c
 23950  012952  6EE9               	movwf	fsr0l,c
 23951  012954  0EFF               	movlw	255
 23952  012956  20E2               	addwfc	fsr1h,w,c
 23953  012958  6EEA               	movwf	fsr0h,c
 23954  01295A  50EF               	movf	indf0,w,c
 23955  01295C  26DE               	addwf	postinc2,f,c
 23956  01295E  0E00               	movlw	0
 23957  012960  22DE               	addwfc	postinc2,f,c
 23958  012962  22DE               	addwfc	postinc2,f,c
 23959  012964  22DE               	addwfc	postinc2,f,c
 23960                           
 23961                           ;stkvar	_grs @ sp[(-13)+4]
 23962  012966  50E1               	movf	fsr1l,w,c
 23963  012968  0FF7               	addlw	-9
 23964  01296A  6ED9               	movwf	fsr2l,c
 23965  01296C  50E2               	movf	fsr1h,w,c
 23966  01296E  6EDA               	movwf	fsr2h,c
 23967  012970  0EFF               	movlw	255
 23968  012972  22DA               	addwfc	fsr2h,f,c
 23969  012974  0E08               	movlw	8
 23970  012976                     u6095:
 23971  012976  90D8               	bcf	status,0,c
 23972  012978  36DE               	rlcf	postinc2,f,c
 23973  01297A  36DE               	rlcf	postinc2,f,c
 23974  01297C  36DE               	rlcf	postinc2,f,c
 23975  01297E  36DD               	rlcf	postdec2,f,c
 23976  012980  52DD               	movf	postdec2,f,c
 23977  012982  52DD               	movf	postdec2,f,c
 23978  012984  2EE8               	decfsz	wreg,f,c
 23979  012986  D7F7               	goto	u6095
 23980                           
 23981                           ;stkvar	_b @ sp[(-13)+-4]
 23982  012988  0EF0               	movlw	240
 23983  01298A  24E1               	addwf	fsr1l,w,c
 23984  01298C  6ED9               	movwf	fsr2l,c
 23985  01298E  0EFF               	movlw	255
 23986  012990  20E2               	addwfc	fsr1h,w,c
 23987  012992  6EDA               	movwf	fsr2h,c
 23988  012994  50DF               	movf	indf2,w,c
 23989  012996  6E0C               	movwf	(btemp+11)^0,c
 23990                           
 23991                           ;stkvar	_a @ sp[(-13)+-8]
 23992  012998  0EEB               	movlw	-21
 23993  01299A  50E3               	movf	plusw1,w,c
 23994  01299C  020C               	mulwf	(btemp+11)^0,c
 23995                           
 23996                           ;stkvar	_temp @ sp[(-13)+8]
 23997  01299E  0EFB               	movlw	-5
 23998  0129A0  006F FFCF FFE3     	movff	prodl,plusw1
 23999  0129A6  0EFC               	movlw	-4
 24000  0129A8  006F FFD3 FFE3     	movff	prodh,plusw1
 24001                           
 24002                           ;stkvar	_temp @ sp[(-13)+8]
 24003  0129AE  0EFB               	movlw	-5
 24004  0129B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 24005  0129B6  0EFC               	movlw	-4
 24006  0129B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 24007                           
 24008                           ;stkvar	_grs @ sp[(-13)+4]
 24009  0129BE  50E1               	movf	fsr1l,w,c
 24010  0129C0  0FF7               	addlw	-9
 24011  0129C2  6ED9               	movwf	fsr2l,c
 24012  0129C4  50E2               	movf	fsr1h,w,c
 24013  0129C6  6EDA               	movwf	fsr2h,c
 24014  0129C8  0EFF               	movlw	255
 24015  0129CA  22DA               	addwfc	fsr2h,f,c
 24016  0129CC  500B               	movf	(btemp+10)^0,w,c
 24017  0129CE  26DE               	addwf	postinc2,f,c
 24018  0129D0  500C               	movf	(btemp+11)^0,w,c
 24019  0129D2  22DE               	addwfc	postinc2,f,c
 24020  0129D4  0E00               	movlw	0
 24021  0129D6  22DE               	addwfc	postinc2,f,c
 24022  0129D8  22DE               	addwfc	postinc2,f,c
 24023                           
 24024                           ;stkvar	_b @ sp[(-13)+-4]
 24025  0129DA  0EEF               	movlw	-17
 24026  0129DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 24027                           
 24028                           ;stkvar	_a @ sp[(-13)+-8]
 24029  0129E2  0EEC               	movlw	236
 24030  0129E4  24E1               	addwf	fsr1l,w,c
 24031  0129E6  6ED9               	movwf	fsr2l,c
 24032  0129E8  0EFF               	movlw	255
 24033  0129EA  20E2               	addwfc	fsr1h,w,c
 24034  0129EC  6EDA               	movwf	fsr2h,c
 24035  0129EE  50DF               	movf	indf2,w,c
 24036  0129F0  020C               	mulwf	(btemp+11)^0,c
 24037                           
 24038                           ;stkvar	_temp @ sp[(-13)+8]
 24039  0129F2  0EFB               	movlw	-5
 24040  0129F4  006F FFCF FFE3     	movff	prodl,plusw1
 24041  0129FA  0EFC               	movlw	-4
 24042  0129FC  006F FFD3 FFE3     	movff	prodh,plusw1
 24043                           
 24044                           ;stkvar	_temp @ sp[(-13)+8]
 24045  012A02  0EFB               	movlw	-5
 24046  012A04  006F FF8C  F00B    	movff	plusw1,btemp+10
 24047  012A0A  0EFC               	movlw	-4
 24048  012A0C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24049                           
 24050                           ;stkvar	_grs @ sp[(-13)+4]
 24051  012A12  50E1               	movf	fsr1l,w,c
 24052  012A14  0FF7               	addlw	-9
 24053  012A16  6ED9               	movwf	fsr2l,c
 24054  012A18  50E2               	movf	fsr1h,w,c
 24055  012A1A  6EDA               	movwf	fsr2h,c
 24056  012A1C  0EFF               	movlw	255
 24057  012A1E  22DA               	addwfc	fsr2h,f,c
 24058  012A20  500B               	movf	(btemp+10)^0,w,c
 24059  012A22  26DE               	addwf	postinc2,f,c
 24060  012A24  500C               	movf	(btemp+11)^0,w,c
 24061  012A26  22DE               	addwfc	postinc2,f,c
 24062  012A28  0E00               	movlw	0
 24063  012A2A  22DE               	addwfc	postinc2,f,c
 24064  012A2C  22DE               	addwfc	postinc2,f,c
 24065                           
 24066                           ;stkvar	_grs @ sp[(-13)+4]
 24067  012A2E  50E1               	movf	fsr1l,w,c
 24068  012A30  0FF7               	addlw	-9
 24069  012A32  6ED9               	movwf	fsr2l,c
 24070  012A34  50E2               	movf	fsr1h,w,c
 24071  012A36  6EDA               	movwf	fsr2h,c
 24072  012A38  0EFF               	movlw	255
 24073  012A3A  22DA               	addwfc	fsr2h,f,c
 24074  012A3C  0E08               	movlw	8
 24075  012A3E                     u6105:
 24076  012A3E  90D8               	bcf	status,0,c
 24077  012A40  36DE               	rlcf	postinc2,f,c
 24078  012A42  36DE               	rlcf	postinc2,f,c
 24079  012A44  36DE               	rlcf	postinc2,f,c
 24080  012A46  36DD               	rlcf	postdec2,f,c
 24081  012A48  52DD               	movf	postdec2,f,c
 24082  012A4A  52DD               	movf	postdec2,f,c
 24083  012A4C  2EE8               	decfsz	wreg,f,c
 24084  012A4E  D7F7               	goto	u6105
 24085                           
 24086                           ;stkvar	_b @ sp[(-13)+-4]
 24087  012A50  0EEF               	movlw	-17
 24088  012A52  006F FF8C  F00C    	movff	plusw1,btemp+11
 24089                           
 24090                           ;stkvar	_a @ sp[(-13)+-8]
 24091  012A58  0EEB               	movlw	-21
 24092  012A5A  50E3               	movf	plusw1,w,c
 24093  012A5C  020C               	mulwf	(btemp+11)^0,c
 24094                           
 24095                           ;stkvar	_temp @ sp[(-13)+8]
 24096  012A5E  0EFB               	movlw	-5
 24097  012A60  006F FFCF FFE3     	movff	prodl,plusw1
 24098  012A66  0EFC               	movlw	-4
 24099  012A68  006F FFD3 FFE3     	movff	prodh,plusw1
 24100                           
 24101                           ;stkvar	_temp @ sp[(-13)+8]
 24102  012A6E  0EFB               	movlw	-5
 24103  012A70  006F FF8C  F00B    	movff	plusw1,btemp+10
 24104  012A76  0EFC               	movlw	-4
 24105  012A78  006F FF8C  F00C    	movff	plusw1,btemp+11
 24106                           
 24107                           ;stkvar	_grs @ sp[(-13)+4]
 24108  012A7E  50E1               	movf	fsr1l,w,c
 24109  012A80  0FF7               	addlw	-9
 24110  012A82  6ED9               	movwf	fsr2l,c
 24111  012A84  50E2               	movf	fsr1h,w,c
 24112  012A86  6EDA               	movwf	fsr2h,c
 24113  012A88  0EFF               	movlw	255
 24114  012A8A  22DA               	addwfc	fsr2h,f,c
 24115  012A8C  500B               	movf	(btemp+10)^0,w,c
 24116  012A8E  26DE               	addwf	postinc2,f,c
 24117  012A90  500C               	movf	(btemp+11)^0,w,c
 24118  012A92  22DE               	addwfc	postinc2,f,c
 24119  012A94  0E00               	movlw	0
 24120  012A96  22DE               	addwfc	postinc2,f,c
 24121  012A98  22DE               	addwfc	postinc2,f,c
 24122                           
 24123                           ;stkvar	_b @ sp[(-13)+-4]
 24124  012A9A  0EF0               	movlw	240
 24125  012A9C  24E1               	addwf	fsr1l,w,c
 24126  012A9E  6ED9               	movwf	fsr2l,c
 24127  012AA0  0EFF               	movlw	255
 24128  012AA2  20E2               	addwfc	fsr1h,w,c
 24129  012AA4  6EDA               	movwf	fsr2h,c
 24130  012AA6  50DF               	movf	indf2,w,c
 24131  012AA8  6E0C               	movwf	(btemp+11)^0,c
 24132                           
 24133                           ;stkvar	_a @ sp[(-13)+-8]
 24134  012AAA  0EED               	movlw	237
 24135  012AAC  24E1               	addwf	fsr1l,w,c
 24136  012AAE  6ED9               	movwf	fsr2l,c
 24137  012AB0  0EFF               	movlw	255
 24138  012AB2  20E2               	addwfc	fsr1h,w,c
 24139  012AB4  6EDA               	movwf	fsr2h,c
 24140  012AB6  50DF               	movf	indf2,w,c
 24141  012AB8  020C               	mulwf	(btemp+11)^0,c
 24142                           
 24143                           ;stkvar	_temp @ sp[(-13)+8]
 24144  012ABA  0EFB               	movlw	-5
 24145  012ABC  006F FFCF FFE3     	movff	prodl,plusw1
 24146  012AC2  0EFC               	movlw	-4
 24147  012AC4  006F FFD3 FFE3     	movff	prodh,plusw1
 24148                           
 24149                           ;stkvar	_temp @ sp[(-13)+8]
 24150  012ACA  0EFB               	movlw	-5
 24151  012ACC  006F FF8C  F00B    	movff	plusw1,btemp+10
 24152  012AD2  0EFC               	movlw	-4
 24153  012AD4  006F FF8C  F00C    	movff	plusw1,btemp+11
 24154                           
 24155                           ;stkvar	_prod @ sp[(-13)+0]
 24156  012ADA  50E1               	movf	fsr1l,w,c
 24157  012ADC  0FF3               	addlw	-13
 24158  012ADE  6ED9               	movwf	fsr2l,c
 24159  012AE0  50E2               	movf	fsr1h,w,c
 24160  012AE2  6EDA               	movwf	fsr2h,c
 24161  012AE4  0EFF               	movlw	255
 24162  012AE6  22DA               	addwfc	fsr2h,f,c
 24163  012AE8  500B               	movf	(btemp+10)^0,w,c
 24164  012AEA  26DE               	addwf	postinc2,f,c
 24165  012AEC  500C               	movf	(btemp+11)^0,w,c
 24166  012AEE  22DE               	addwfc	postinc2,f,c
 24167  012AF0  0E00               	movlw	0
 24168  012AF2  22DE               	addwfc	postinc2,f,c
 24169  012AF4  22DE               	addwfc	postinc2,f,c
 24170                           
 24171                           ;stkvar	_b @ sp[(-13)+-4]
 24172  012AF6  0EF1               	movlw	241
 24173  012AF8  24E1               	addwf	fsr1l,w,c
 24174  012AFA  6ED9               	movwf	fsr2l,c
 24175  012AFC  0EFF               	movlw	255
 24176  012AFE  20E2               	addwfc	fsr1h,w,c
 24177  012B00  6EDA               	movwf	fsr2h,c
 24178  012B02  50DF               	movf	indf2,w,c
 24179  012B04  6E0C               	movwf	(btemp+11)^0,c
 24180                           
 24181                           ;stkvar	_a @ sp[(-13)+-8]
 24182  012B06  0EEC               	movlw	236
 24183  012B08  24E1               	addwf	fsr1l,w,c
 24184  012B0A  6ED9               	movwf	fsr2l,c
 24185  012B0C  0EFF               	movlw	255
 24186  012B0E  20E2               	addwfc	fsr1h,w,c
 24187  012B10  6EDA               	movwf	fsr2h,c
 24188  012B12  50DF               	movf	indf2,w,c
 24189  012B14  020C               	mulwf	(btemp+11)^0,c
 24190                           
 24191                           ;stkvar	_temp @ sp[(-13)+8]
 24192  012B16  0EFB               	movlw	-5
 24193  012B18  006F FFCF FFE3     	movff	prodl,plusw1
 24194  012B1E  0EFC               	movlw	-4
 24195  012B20  006F FFD3 FFE3     	movff	prodh,plusw1
 24196                           
 24197                           ;stkvar	_temp @ sp[(-13)+8]
 24198  012B26  0EFB               	movlw	-5
 24199  012B28  006F FF8C  F00B    	movff	plusw1,btemp+10
 24200  012B2E  0EFC               	movlw	-4
 24201  012B30  006F FF8C  F00C    	movff	plusw1,btemp+11
 24202                           
 24203                           ;stkvar	_prod @ sp[(-13)+0]
 24204  012B36  50E1               	movf	fsr1l,w,c
 24205  012B38  0FF3               	addlw	-13
 24206  012B3A  6ED9               	movwf	fsr2l,c
 24207  012B3C  50E2               	movf	fsr1h,w,c
 24208  012B3E  6EDA               	movwf	fsr2h,c
 24209  012B40  0EFF               	movlw	255
 24210  012B42  22DA               	addwfc	fsr2h,f,c
 24211  012B44  500B               	movf	(btemp+10)^0,w,c
 24212  012B46  26DE               	addwf	postinc2,f,c
 24213  012B48  500C               	movf	(btemp+11)^0,w,c
 24214  012B4A  22DE               	addwfc	postinc2,f,c
 24215  012B4C  0E00               	movlw	0
 24216  012B4E  22DE               	addwfc	postinc2,f,c
 24217  012B50  22DE               	addwfc	postinc2,f,c
 24218                           
 24219                           ;stkvar	_b @ sp[(-13)+-4]
 24220  012B52  0EF1               	movlw	241
 24221  012B54  24E1               	addwf	fsr1l,w,c
 24222  012B56  6ED9               	movwf	fsr2l,c
 24223  012B58  0EFF               	movlw	255
 24224  012B5A  20E2               	addwfc	fsr1h,w,c
 24225  012B5C  6EDA               	movwf	fsr2h,c
 24226  012B5E  50DF               	movf	indf2,w,c
 24227  012B60  6E0C               	movwf	(btemp+11)^0,c
 24228                           
 24229                           ;stkvar	_a @ sp[(-13)+-8]
 24230  012B62  0EED               	movlw	237
 24231  012B64  24E1               	addwf	fsr1l,w,c
 24232  012B66  6ED9               	movwf	fsr2l,c
 24233  012B68  0EFF               	movlw	255
 24234  012B6A  20E2               	addwfc	fsr1h,w,c
 24235  012B6C  6EDA               	movwf	fsr2h,c
 24236  012B6E  50DF               	movf	indf2,w,c
 24237  012B70  020C               	mulwf	(btemp+11)^0,c
 24238                           
 24239                           ;stkvar	_temp @ sp[(-13)+8]
 24240  012B72  0EFB               	movlw	-5
 24241  012B74  006F FFCF FFE3     	movff	prodl,plusw1
 24242  012B7A  0EFC               	movlw	-4
 24243  012B7C  006F FFD3 FFE3     	movff	prodh,plusw1
 24244                           
 24245                           ;stkvar	_temp @ sp[(-13)+8]
 24246  012B82  0EFB               	movlw	-5
 24247  012B84  006F FF8C  F00B    	movff	plusw1,btemp+10
 24248  012B8A  0EFC               	movlw	-4
 24249  012B8C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24250  012B92  500B               	movf	(btemp+10)^0,w,c
 24251  012B94  6E05               	movwf	(btemp+4)^0,c
 24252  012B96  500C               	movf	(btemp+11)^0,w,c
 24253  012B98  6E06               	movwf	(btemp+5)^0,c
 24254  012B9A  6A07               	clrf	(btemp+6)^0,c
 24255  012B9C  6A08               	clrf	(btemp+7)^0,c
 24256  012B9E  0060  F01C  F008   	movff	btemp+6,btemp+7
 24257  012BA4  0060  F018  F007   	movff	btemp+5,btemp+6
 24258  012BAA  0060  F014  F006   	movff	btemp+4,btemp+5
 24259  012BB0  6A05               	clrf	(btemp+4)^0,c
 24260                           
 24261                           ;stkvar	_prod @ sp[(-13)+0]
 24262  012BB2  50E1               	movf	fsr1l,w,c
 24263  012BB4  0FF3               	addlw	-13
 24264  012BB6  6ED9               	movwf	fsr2l,c
 24265  012BB8  50E2               	movf	fsr1h,w,c
 24266  012BBA  6EDA               	movwf	fsr2h,c
 24267  012BBC  0EFF               	movlw	255
 24268  012BBE  22DA               	addwfc	fsr2h,f,c
 24269  012BC0  5005               	movf	(btemp+4)^0,w,c
 24270  012BC2  26DE               	addwf	postinc2,f,c
 24271  012BC4  5006               	movf	(btemp+5)^0,w,c
 24272  012BC6  22DE               	addwfc	postinc2,f,c
 24273  012BC8  5007               	movf	(btemp+6)^0,w,c
 24274  012BCA  22DE               	addwfc	postinc2,f,c
 24275  012BCC  5008               	movf	(btemp+7)^0,w,c
 24276  012BCE  22DE               	addwfc	postinc2,f,c
 24277                           
 24278                           ;stkvar	_prod @ sp[(-13)+0]
 24279  012BD0  50E1               	movf	fsr1l,w,c
 24280  012BD2  0FF3               	addlw	-13
 24281  012BD4  6ED9               	movwf	fsr2l,c
 24282  012BD6  50E2               	movf	fsr1h,w,c
 24283  012BD8  6EDA               	movwf	fsr2h,c
 24284  012BDA  0EFF               	movlw	255
 24285  012BDC  22DA               	addwfc	fsr2h,f,c
 24286                           
 24287                           ;stkvar	_grs @ sp[(-13)+4]
 24288  012BDE  0EFA               	movlw	250
 24289  012BE0  24E1               	addwf	fsr1l,w,c
 24290  012BE2  6EE9               	movwf	fsr0l,c
 24291  012BE4  0EFF               	movlw	255
 24292  012BE6  20E2               	addwfc	fsr1h,w,c
 24293  012BE8  6EEA               	movwf	fsr0h,c
 24294  012BEA  50EF               	movf	indf0,w,c
 24295  012BEC  26DE               	addwf	postinc2,f,c
 24296  012BEE  0E00               	movlw	0
 24297  012BF0  22DE               	addwfc	postinc2,f,c
 24298  012BF2  22DE               	addwfc	postinc2,f,c
 24299  012BF4  22DE               	addwfc	postinc2,f,c
 24300                           
 24301                           ;stkvar	_grs @ sp[(-13)+4]
 24302  012BF6  50E1               	movf	fsr1l,w,c
 24303  012BF8  0FF7               	addlw	-9
 24304  012BFA  6ED9               	movwf	fsr2l,c
 24305  012BFC  50E2               	movf	fsr1h,w,c
 24306  012BFE  6EDA               	movwf	fsr2h,c
 24307  012C00  0EFF               	movlw	255
 24308  012C02  22DA               	addwfc	fsr2h,f,c
 24309  012C04  0E08               	movlw	8
 24310  012C06                     u6115:
 24311  012C06  90D8               	bcf	status,0,c
 24312  012C08  36DE               	rlcf	postinc2,f,c
 24313  012C0A  36DE               	rlcf	postinc2,f,c
 24314  012C0C  36DE               	rlcf	postinc2,f,c
 24315  012C0E  36DD               	rlcf	postdec2,f,c
 24316  012C10  52DD               	movf	postdec2,f,c
 24317  012C12  52DD               	movf	postdec2,f,c
 24318  012C14  2EE8               	decfsz	wreg,f,c
 24319  012C16  D7F7               	goto	u6115
 24320  012C18  0E82               	movlw	130
 24321  012C1A  6E0B               	movwf	(btemp+10)^0,c
 24322  012C1C  0EFF               	movlw	255
 24323  012C1E  6E0C               	movwf	(btemp+11)^0,c
 24324                           
 24325                           ;stkvar	_bexp @ sp[(-13)+10]
 24326  012C20  0EFD               	movlw	-3
 24327  012C22  50E3               	movf	plusw1,w,c
 24328  012C24  6E09               	movwf	(btemp+8)^0,c
 24329  012C26  6A0A               	clrf	(btemp+9)^0,c
 24330                           
 24331                           ;stkvar	_aexp @ sp[(-13)+11]
 24332  012C28  0EFE               	movlw	-2
 24333  012C2A  50E3               	movf	plusw1,w,c
 24334  012C2C  2609               	addwf	(btemp+8)^0,f,c
 24335  012C2E  0E00               	movlw	0
 24336  012C30  220A               	addwfc	(btemp+9)^0,f,c
 24337  012C32  500B               	movf	(btemp+10)^0,w,c
 24338  012C34  2609               	addwf	(btemp+8)^0,f,c
 24339  012C36  500C               	movf	(btemp+11)^0,w,c
 24340  012C38  220A               	addwfc	(btemp+9)^0,f,c
 24341                           
 24342                           ;stkvar	_temp @ sp[(-13)+8]
 24343  012C3A  0EFB               	movlw	-5
 24344  012C3C  0060  F027  FFE3   	movff	btemp+8,plusw1
 24345  012C42  0EFC               	movlw	-4
 24346  012C44  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24347  012C4A  D021               	goto	l7634
 24348  012C4C                     l7624:
 24349                           
 24350                           ;stkvar	_prod @ sp[(-13)+0]
 24351  012C4C  90D8               	bcf	status,0,c
 24352  012C4E  0EF3               	movlw	-13
 24353  012C50  36E3               	rlcf	plusw1,f,c
 24354  012C52  0EF4               	movlw	-12
 24355  012C54  36E3               	rlcf	plusw1,f,c
 24356  012C56  0EF5               	movlw	-11
 24357  012C58  36E3               	rlcf	plusw1,f,c
 24358  012C5A  0EF6               	movlw	-10
 24359  012C5C  36E3               	rlcf	plusw1,f,c
 24360                           
 24361                           ;stkvar	_grs @ sp[(-13)+4]
 24362  012C5E  0EFA               	movlw	-6
 24363  012C60  AEE3               	btfss	plusw1,7,c
 24364  012C62  D002               	goto	l7630
 24365                           
 24366                           ;stkvar	_prod @ sp[(-13)+0]
 24367  012C64  0EF3               	movlw	-13
 24368  012C66  80E3               	bsf	plusw1,0,c
 24369  012C68                     l7630:
 24370                           
 24371                           ;stkvar	_grs @ sp[(-13)+4]
 24372  012C68  90D8               	bcf	status,0,c
 24373  012C6A  0EF7               	movlw	-9
 24374  012C6C  36E3               	rlcf	plusw1,f,c
 24375  012C6E  0EF8               	movlw	-8
 24376  012C70  36E3               	rlcf	plusw1,f,c
 24377  012C72  0EF9               	movlw	-7
 24378  012C74  36E3               	rlcf	plusw1,f,c
 24379  012C76  0EFA               	movlw	-6
 24380  012C78  36E3               	rlcf	plusw1,f,c
 24381                           
 24382                           ;stkvar	_temp @ sp[(-13)+8]
 24383  012C7A  50E1               	movf	fsr1l,w,c
 24384  012C7C  0FFB               	addlw	-5
 24385  012C7E  6ED9               	movwf	fsr2l,c
 24386  012C80  50E2               	movf	fsr1h,w,c
 24387  012C82  6EDA               	movwf	fsr2h,c
 24388  012C84  0EFF               	movlw	255
 24389  012C86  22DA               	addwfc	fsr2h,f,c
 24390  012C88  06DE               	decf	postinc2,f,c
 24391  012C8A  0E00               	movlw	0
 24392  012C8C  5ADD               	subwfb	postdec2,f,c
 24393  012C8E                     l7634:
 24394                           
 24395                           ;stkvar	_prod @ sp[(-13)+0]
 24396  012C8E  0EF5               	movlw	-11
 24397  012C90  AEE3               	btfss	plusw1,7,c
 24398  012C92  D7DC               	goto	l7624
 24399                           
 24400                           ;stkvar	_aexp @ sp[(-13)+11]
 24401  012C94  0EFE               	movlw	-2
 24402  012C96  6AE3               	clrf	plusw1,c
 24403                           
 24404                           ;stkvar	_grs @ sp[(-13)+4]
 24405  012C98  0EFA               	movlw	-6
 24406  012C9A  AEE3               	btfss	plusw1,7,c
 24407  012C9C  D020               	goto	l7648
 24408                           
 24409                           ;stkvar	_grs @ sp[(-13)+4]
 24410  012C9E  50E1               	movf	fsr1l,w,c
 24411  012CA0  0FF7               	addlw	-9
 24412  012CA2  6ED9               	movwf	fsr2l,c
 24413  012CA4  50E2               	movf	fsr1h,w,c
 24414  012CA6  6EDA               	movwf	fsr2h,c
 24415  012CA8  0EFF               	movlw	255
 24416  012CAA  22DA               	addwfc	fsr2h,f,c
 24417  012CAC  0EFF               	movlw	255
 24418  012CAE  14DE               	andwf	postinc2,w,c
 24419  012CB0  6E09               	movwf	(btemp+8)^0,c
 24420  012CB2  0EFF               	movlw	255
 24421  012CB4  14DE               	andwf	postinc2,w,c
 24422  012CB6  6E0A               	movwf	(btemp+9)^0,c
 24423  012CB8  0EFF               	movlw	255
 24424  012CBA  14DE               	andwf	postinc2,w,c
 24425  012CBC  6E0B               	movwf	(btemp+10)^0,c
 24426  012CBE  0E7F               	movlw	127
 24427  012CC0  14DE               	andwf	postinc2,w,c
 24428  012CC2  6E0C               	movwf	(btemp+11)^0,c
 24429  012CC4  5009               	movf	(btemp+8)^0,w,c
 24430  012CC6  100A               	iorwf	(btemp+9)^0,w,c
 24431  012CC8  100B               	iorwf	(btemp+10)^0,w,c
 24432  012CCA  100C               	iorwf	(btemp+11)^0,w,c
 24433  012CCC  B4D8               	btfsc	status,2,c
 24434  012CCE  D004               	goto	l7644
 24435  012CD0                     u6150:
 24436                           
 24437                           ;stkvar	_aexp @ sp[(-13)+11]
 24438  012CD0  0EFE               	movlw	-2
 24439  012CD2  6AE3               	clrf	plusw1,c
 24440  012CD4  2AE3               	incf	plusw1,f,c
 24441  012CD6  D003               	goto	l7648
 24442  012CD8                     l7644:
 24443                           
 24444                           ;stkvar	_prod @ sp[(-13)+0]
 24445  012CD8  0EF3               	movlw	-13
 24446  012CDA  B0E3               	btfsc	plusw1,0,c
 24447  012CDC  D7F9               	goto	u6150
 24448  012CDE                     l7648:
 24449                           
 24450                           ;stkvar	_aexp @ sp[(-13)+11]
 24451  012CDE  0EFE               	movlw	-2
 24452  012CE0  50E3               	movf	plusw1,w,c
 24453  012CE2  B4D8               	btfsc	status,2,c
 24454  012CE4  D036               	goto	l7658
 24455                           
 24456                           ;stkvar	_prod @ sp[(-13)+0]
 24457  012CE6  50E1               	movf	fsr1l,w,c
 24458  012CE8  0FF3               	addlw	-13
 24459  012CEA  6ED9               	movwf	fsr2l,c
 24460  012CEC  50E2               	movf	fsr1h,w,c
 24461  012CEE  6EDA               	movwf	fsr2h,c
 24462  012CF0  0EFF               	movlw	255
 24463  012CF2  22DA               	addwfc	fsr2h,f,c
 24464  012CF4  2ADE               	incf	postinc2,f,c
 24465  012CF6  0E00               	movlw	0
 24466  012CF8  22DE               	addwfc	postinc2,f,c
 24467  012CFA  22DE               	addwfc	postinc2,f,c
 24468  012CFC  22DE               	addwfc	postinc2,f,c
 24469                           
 24470                           ;stkvar	_prod @ sp[(-13)+0]
 24471  012CFE  0EF6               	movlw	-10
 24472  012D00  A0E3               	btfss	plusw1,0,c
 24473  012D02  D027               	goto	l7658
 24474  012D04  0E01               	movlw	1
 24475  012D06  6E0C               	movwf	(btemp+11)^0,c
 24476                           
 24477                           ;stkvar	_prod @ sp[(-13)+0]
 24478  012D08  50E1               	movf	fsr1l,w,c
 24479  012D0A  0FF3               	addlw	-13
 24480  012D0C  6ED9               	movwf	fsr2l,c
 24481  012D0E  50E2               	movf	fsr1h,w,c
 24482  012D10  6EDA               	movwf	fsr2h,c
 24483  012D12  0EFF               	movlw	255
 24484  012D14  22DA               	addwfc	fsr2h,f,c
 24485  012D16  280C               	incf	(btemp+11)^0,w,c
 24486  012D18  52DE               	movf	postinc2,f,c
 24487  012D1A  D008               	goto	u6190
 24488  012D1C                     u6195:
 24489  012D1C  52DE               	movf	postinc2,f,c
 24490  012D1E  90D8               	bcf	status,0,c
 24491  012D20  BEDC               	btfsc	preinc2,7,c
 24492  012D22  80D8               	bsf	status,0,c
 24493  012D24  32DD               	rrcf	postdec2,f,c
 24494  012D26  32DD               	rrcf	postdec2,f,c
 24495  012D28  32DD               	rrcf	postdec2,f,c
 24496  012D2A  32DE               	rrcf	postinc2,f,c
 24497  012D2C                     u6190:
 24498  012D2C  2EE8               	decfsz	wreg,f,c
 24499  012D2E  D7F6               	goto	u6195
 24500                           
 24501                           ;stkvar	_temp @ sp[(-13)+8]
 24502  012D30  0EFB               	movlw	-5
 24503  012D32  50E3               	movf	plusw1,w,c
 24504  012D34  0F01               	addlw	1
 24505  012D36  6E01               	movwf	btemp^0,c
 24506  012D38  0EFB               	movlw	-5
 24507  012D3A  0060  F007  FFE3   	movff	btemp,plusw1
 24508  012D40  6A01               	clrf	btemp^0,c
 24509  012D42  0EFC               	movlw	-4
 24510  012D44  50E3               	movf	plusw1,w,c
 24511  012D46  2001               	addwfc	btemp^0,w,c
 24512  012D48  6E01               	movwf	btemp^0,c
 24513  012D4A  0EFC               	movlw	-4
 24514  012D4C  0060  F007  FFE3   	movff	btemp,plusw1
 24515  012D52                     l7658:
 24516                           
 24517                           ;stkvar	_temp @ sp[(-13)+8]
 24518  012D52  0EFC               	movlw	-4
 24519  012D54  BEE3               	btfsc	plusw1,7,c
 24520  012D56  D020               	goto	l7662
 24521  012D58  0EFC               	movlw	-4
 24522  012D5A  50E3               	movf	plusw1,w,c
 24523  012D5C  E104               	bnz	u6200
 24524  012D5E  0EFB               	movlw	-5
 24525  012D60  28E3               	incf	plusw1,w,c
 24526  012D62  A0D8               	btfss	status,0,c
 24527  012D64  D019               	goto	l7662
 24528  012D66                     u6200:
 24529  012D66  0E00               	movlw	0
 24530  012D68  6E09               	movwf	(btemp+8)^0,c
 24531  012D6A  0E00               	movlw	0
 24532  012D6C  6E0A               	movwf	(btemp+9)^0,c
 24533  012D6E  0E80               	movlw	128
 24534  012D70  6E0B               	movwf	(btemp+10)^0,c
 24535  012D72  0E7F               	movlw	127
 24536  012D74  6E0C               	movwf	(btemp+11)^0,c
 24537                           
 24538                           ;stkvar	_prod @ sp[(-13)+0]
 24539  012D76  0EF3               	movlw	-13
 24540  012D78  0060  F027  FFE3   	movff	btemp+8,plusw1
 24541  012D7E  0EF4               	movlw	-12
 24542  012D80  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24543  012D86  0EF5               	movlw	-11
 24544  012D88  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24545  012D8E  0EF6               	movlw	-10
 24546  012D90  0060  F033  FFE3   	movff	btemp+11,plusw1
 24547  012D96  D044               	goto	l7678
 24548  012D98                     l7662:
 24549                           
 24550                           ;stkvar	_temp @ sp[(-13)+8]
 24551  012D98  0EFC               	movlw	-4
 24552  012D9A  BEE3               	btfsc	plusw1,7,c
 24553  012D9C  D007               	goto	u6210
 24554  012D9E  0EFC               	movlw	-4
 24555  012DA0  50E3               	movf	plusw1,w,c
 24556  012DA2  E10F               	bnz	l7668
 24557  012DA4  0EFB               	movlw	-5
 24558  012DA6  04E3               	decf	plusw1,w,c
 24559  012DA8  B0D8               	btfsc	status,0,c
 24560  012DAA  D00B               	goto	l7668
 24561  012DAC                     u6210:
 24562                           
 24563                           ;stkvar	_prod @ sp[(-13)+0]
 24564  012DAC  0EF3               	movlw	-13
 24565  012DAE  6AE3               	clrf	plusw1,c
 24566  012DB0  0EF4               	movlw	-12
 24567  012DB2  6AE3               	clrf	plusw1,c
 24568  012DB4  0EF5               	movlw	-11
 24569  012DB6  6AE3               	clrf	plusw1,c
 24570  012DB8  0EF6               	movlw	-10
 24571  012DBA  6AE3               	clrf	plusw1,c
 24572                           
 24573                           ;stkvar	_sign @ sp[(-13)+12]
 24574  012DBC  0EFF               	movlw	-1
 24575  012DBE  6AE3               	clrf	plusw1,c
 24576  012DC0  D02F               	goto	l7678
 24577  012DC2                     l7668:
 24578                           
 24579                           ;stkvar	_temp @ sp[(-13)+8]
 24580                           ;stkvar	_bexp @ sp[(-13)+10]
 24581  012DC2  0EFB               	movlw	-5
 24582  012DC4  006F FF8C  F001    	movff	plusw1,btemp
 24583  012DCA  0EFD               	movlw	-3
 24584  012DCC  0060  F007  FFE3   	movff	btemp,plusw1
 24585                           
 24586                           ;stkvar	_prod @ sp[(-13)+0]
 24587  012DD2  50E1               	movf	fsr1l,w,c
 24588  012DD4  0FF3               	addlw	-13
 24589  012DD6  6ED9               	movwf	fsr2l,c
 24590  012DD8  50E2               	movf	fsr1h,w,c
 24591  012DDA  6EDA               	movwf	fsr2h,c
 24592  012DDC  0EFF               	movlw	255
 24593  012DDE  22DA               	addwfc	fsr2h,f,c
 24594  012DE0  0EFF               	movlw	255
 24595  012DE2  16DE               	andwf	postinc2,f,c
 24596  012DE4  0EFF               	movlw	255
 24597  012DE6  16DE               	andwf	postinc2,f,c
 24598  012DE8  0E7F               	movlw	127
 24599  012DEA  16DE               	andwf	postinc2,f,c
 24600  012DEC  0E00               	movlw	0
 24601  012DEE  16DE               	andwf	postinc2,f,c
 24602                           
 24603                           ;stkvar	_bexp @ sp[(-13)+10]
 24604  012DF0  0EFD               	movlw	-3
 24605  012DF2  A0E3               	btfss	plusw1,0,c
 24606  012DF4  D008               	goto	l7676
 24607                           
 24608                           ;stkvar	_prod @ sp[(-13)+0]
 24609  012DF6  0EF5               	movlw	245
 24610  012DF8  24E1               	addwf	fsr1l,w,c
 24611  012DFA  6ED9               	movwf	fsr2l,c
 24612  012DFC  0EFF               	movlw	255
 24613  012DFE  20E2               	addwfc	fsr1h,w,c
 24614  012E00  6EDA               	movwf	fsr2h,c
 24615  012E02  0E00               	movlw	0
 24616  012E04  8EDB               	bsf	plusw2,7,c
 24617  012E06                     l7676:
 24618                           
 24619                           ;stkvar	_prod @ sp[(-13)+0]
 24620  012E06  0EF6               	movlw	246
 24621  012E08  24E1               	addwf	fsr1l,w,c
 24622  012E0A  6ED9               	movwf	fsr2l,c
 24623  012E0C  0EFF               	movlw	255
 24624  012E0E  20E2               	addwfc	fsr1h,w,c
 24625  012E10  6EDA               	movwf	fsr2h,c
 24626                           
 24627                           ;stkvar	_bexp @ sp[(-13)+10]
 24628  012E12  0EFD               	movlw	-3
 24629  012E14  006F FF8C  F00C    	movff	plusw1,btemp+11
 24630  012E1A  90D8               	bcf	status,0,c
 24631  012E1C  300C               	rrcf	(btemp+11)^0,w,c
 24632  012E1E  6EDF               	movwf	indf2,c
 24633  012E20                     l7678:
 24634                           
 24635                           ;stkvar	_sign @ sp[(-13)+12]
 24636  012E20  0EFF               	movlw	-1
 24637  012E22  006F FF8C  F00C    	movff	plusw1,btemp+11
 24638                           
 24639                           ;stkvar	_prod @ sp[(-13)+0]
 24640  012E28  0EF6               	movlw	246
 24641  012E2A  24E1               	addwf	fsr1l,w,c
 24642  012E2C  6ED9               	movwf	fsr2l,c
 24643  012E2E  0EFF               	movlw	255
 24644  012E30  20E2               	addwfc	fsr1h,w,c
 24645  012E32  6EDA               	movwf	fsr2h,c
 24646  012E34  500C               	movf	(btemp+11)^0,w,c
 24647  012E36  12DF               	iorwf	indf2,f,c
 24648                           
 24649                           ;stkvar	_prod @ sp[(-13)+0]
 24650  012E38  0EF3               	movlw	-13
 24651  012E3A  006F FF8C  F001    	movff	plusw1,btemp
 24652  012E40  0EF4               	movlw	-12
 24653  012E42  006F FF8C  F002    	movff	plusw1,btemp+1
 24654  012E48  0EF5               	movlw	-11
 24655  012E4A  006F FF8C  F003    	movff	plusw1,btemp+2
 24656  012E50  0EF6               	movlw	-10
 24657  012E52  006F FF8C  F004    	movff	plusw1,btemp+3
 24658  012E58                     l2853:
 24659                           
 24660                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 24661  012E58  0EEB               	movlw	235
 24662  012E5A  26E1               	addwf	fsr1l,f,c
 24663  012E5C  0EFF               	movlw	255
 24664  012E5E  22E2               	addwfc	fsr1h,f,c
 24665  012E60  0012               	return		;funcret
 24666  012E62                     __end_of___flmul:
 24667                           	opt callstack 0
 24668                           
 24669 ;; *************** function _SYSTEM_Initialize *****************
 24670 ;; Defined at:
 24671 ;;		line 50 in file "mcc_generated_files/mcc.c"
 24672 ;; Parameters:    Size  Location     Type
 24673 ;;		None
 24674 ;; Auto vars:     Size  Location     Type
 24675 ;;		None
 24676 ;; Return value:  Size  Location     Type
 24677 ;;                  1  [STACK] void 
 24678 ;; Registers used:
 24679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 24680 ;; Tracked objects:
 24681 ;;		On entry : 0/0
 24682 ;;		On exit  : 3F/3C
 24683 ;;		Unchanged: 0/0
 24684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24689 ;;Total ram usage:        0 bytes
 24690 ;; Hardware stack levels used:    1
 24691 ;; Hardware stack levels required when called:   17
 24692 ;; This function calls:
 24693 ;;		_ADCC_Initialize
 24694 ;;		_CLKREF_Initialize
 24695 ;;		_DMA1_Initialize
 24696 ;;		_DMA2_Initialize
 24697 ;;		_EXT_INT_Initialize
 24698 ;;		_FVR_Initialize
 24699 ;;		_INTERRUPT_Initialize
 24700 ;;		_OSCILLATOR_Initialize
 24701 ;;		_PIN_MANAGER_Initialize
 24702 ;;		_PMD_Initialize
 24703 ;;		_PWM8_Initialize
 24704 ;;		_SPI1_Initialize
 24705 ;;		_TMR2_Initialize
 24706 ;;		_TMR3_Initialize
 24707 ;;		_TMR5_Initialize
 24708 ;;		_TMR6_Initialize
 24709 ;;		_UART1_Initialize
 24710 ;;		_UART2_Initialize
 24711 ;; This function is called by:
 24712 ;;		_main
 24713 ;; This function uses a reentrant model
 24714 ;;
 24715                           
 24716                           	psect	text97
 24717  0190BE                     __ptext97:
 24718                           	opt callstack 0
 24719  0190BE                     _SYSTEM_Initialize:
 24720                           	opt callstack 13
 24721                           
 24722                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 24723                           
 24724                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24725                           ;incstack = 0
 24726  0190BE  EC3F  F0C6         	call	_INTERRUPT_Initialize	;wreg free
 24727                           
 24728                           ; BSR set to: 57
 24729                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 24730  0190C2  EC68  F0CE         	call	_PMD_Initialize	;wreg free
 24731                           
 24732                           ; BSR set to: 57
 24733                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 24734  0190C6  EC07  F0C4         	call	_PIN_MANAGER_Initialize	;wreg free
 24735                           
 24736                           ; BSR set to: 58
 24737                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 24738  0190CA  EC5D  F0CE         	call	_OSCILLATOR_Initialize	;wreg free
 24739                           
 24740                           ; BSR set to: 57
 24741                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 24742  0190CE  ECCD  F0CE         	call	_FVR_Initialize	;wreg free
 24743                           
 24744                           ; BSR set to: 62
 24745                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 24746  0190D2  ECD4  F0C5         	call	_ADCC_Initialize	;wreg free
 24747                           
 24748                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 24749  0190D6  EC3B  F0CE         	call	_TMR2_Initialize	;wreg free
 24750                           
 24751                           ; BSR set to: 57
 24752                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 24753  0190DA  EC52  F0CE         	call	_PWM8_Initialize	;wreg free
 24754                           
 24755                           ; BSR set to: 63
 24756                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 24757  0190DE  ECA5  F0CA         	call	_EXT_INT_Initialize	;wreg free
 24758                           
 24759                           ; BSR set to: 57
 24760                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 24761  0190E2  EC7A  F0CB         	call	_TMR6_Initialize	;wreg free
 24762                           
 24763                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 24764  0190E6  EC34  F0C9         	call	_TMR3_Initialize	;wreg free
 24765                           
 24766                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 24767  0190EA  EC11  F0C9         	call	_TMR5_Initialize	;wreg free
 24768                           
 24769                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 24770  0190EE  ECEE  F0C8         	call	_UART1_Initialize	;wreg free
 24771                           
 24772                           ; BSR set to: 57
 24773                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 24774  0190F2  EC06  F0C7         	call	_UART2_Initialize	;wreg free
 24775                           
 24776                           ; BSR set to: 57
 24777                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 24778  0190F6  EC47  F0CE         	call	_SPI1_Initialize	;wreg free
 24779                           
 24780                           ; BSR set to: 61
 24781                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 24782  0190FA  EC62  F0C7         	call	_DMA2_Initialize	;wreg free
 24783                           
 24784                           ; BSR set to: 59
 24785                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 24786  0190FE  EC9F  F0C5         	call	_DMA1_Initialize	;wreg free
 24787                           
 24788                           ; BSR set to: 59
 24789                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 24790  019102  ECA1  F0CE         	call	_CLKREF_Initialize	;wreg free
 24791                           
 24792                           ; BSR set to: 60
 24793                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24794  019106  0012               	return		;funcret
 24795  019108                     __end_of_SYSTEM_Initialize:
 24796                           	opt callstack 0
 24797                           
 24798 ;; *************** function _UART2_Initialize *****************
 24799 ;; Defined at:
 24800 ;;		line 78 in file "mcc_generated_files/uart2.c"
 24801 ;; Parameters:    Size  Location     Type
 24802 ;;		None
 24803 ;; Auto vars:     Size  Location     Type
 24804 ;;		None
 24805 ;; Return value:  Size  Location     Type
 24806 ;;                  1  [STACK] void 
 24807 ;; Registers used:
 24808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24809 ;; Tracked objects:
 24810 ;;		On entry : 3F/39
 24811 ;;		On exit  : 3F/39
 24812 ;;		Unchanged: 0/0
 24813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24818 ;;Total ram usage:        0 bytes
 24819 ;; Hardware stack levels used:    1
 24820 ;; Hardware stack levels required when called:   16
 24821 ;; This function calls:
 24822 ;;		_UART2_SetRxInterruptHandler
 24823 ;;		_UART2_SetTxInterruptHandler
 24824 ;; This function is called by:
 24825 ;;		_SYSTEM_Initialize
 24826 ;; This function uses a reentrant model
 24827 ;;
 24828                           
 24829                           	psect	text98
 24830  018E0C                     __ptext98:
 24831                           	opt callstack 0
 24832  018E0C                     _UART2_Initialize:
 24833                           	opt callstack 13
 24834                           
 24835                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 24836                           
 24837                           ; BSR set to: 60
 24838                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24839                           ;incstack = 0
 24840  018E0C  0139               	movlb	57	; () banked
 24841  018E0E  9596               	bcf	150,2,b	;volatile
 24842                           
 24843                           ; BSR set to: 57
 24844                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 24845  018E10  0EEE               	movlw	low _UART2_Receive_ISR
 24846  018E12  6EE6               	movwf	postinc1,c
 24847  018E14  0E9B               	movlw	high _UART2_Receive_ISR
 24848  018E16  6EE6               	movwf	postinc1,c
 24849  018E18  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 24850  018E1A  6EE6               	movwf	postinc1,c
 24851  018E1C  EC07  F0CC         	call	_UART2_SetRxInterruptHandler	;wreg free
 24852                           
 24853                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 24854  018E20  0139               	movlb	57	; () banked
 24855  018E22  9796               	bcf	150,3,b	;volatile
 24856                           
 24857                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 24858  018E24  0EC8               	movlw	low _UART2_Transmit_ISR
 24859  018E26  6EE6               	movwf	postinc1,c
 24860  018E28  0E96               	movlw	high _UART2_Transmit_ISR
 24861  018E2A  6EE6               	movwf	postinc1,c
 24862  018E2C  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 24863  018E2E  6EE6               	movwf	postinc1,c
 24864  018E30  ECF3  F0CB         	call	_UART2_SetTxInterruptHandler	;wreg free
 24865                           
 24866                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 24867  018E34  013D               	movlb	61	; () banked
 24868  018E36  6BD4               	clrf	212,b	;volatile
 24869                           
 24870                           ; BSR set to: 61
 24871                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 24872  018E38  6BD6               	clrf	214,b	;volatile
 24873                           
 24874                           ; BSR set to: 61
 24875                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 24876  018E3A  6BD8               	clrf	216,b	;volatile
 24877                           
 24878                           ; BSR set to: 61
 24879                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 24880  018E3C  0EB0               	movlw	176
 24881  018E3E  6FDA               	movwf	218,b	;volatile
 24882                           
 24883                           ; BSR set to: 61
 24884                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 24885  018E40  0E80               	movlw	128
 24886  018E42  6FDB               	movwf	219,b	;volatile
 24887                           
 24888                           ; BSR set to: 61
 24889                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 24890  018E44  6BDC               	clrf	220,b	;volatile
 24891                           
 24892                           ; BSR set to: 61
 24893                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 24894  018E46  0E82               	movlw	130
 24895  018E48  6FDD               	movwf	221,b	;volatile
 24896                           
 24897                           ; BSR set to: 61
 24898                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 24899  018E4A  0E06               	movlw	6
 24900  018E4C  6FDE               	movwf	222,b	;volatile
 24901                           
 24902                           ; BSR set to: 61
 24903                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 24904  018E4E  6BDF               	clrf	223,b	;volatile
 24905                           
 24906                           ; BSR set to: 61
 24907                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 24908  018E50  6BE0               	clrf	224,b	;volatile
 24909                           
 24910                           ; BSR set to: 61
 24911                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 24912  018E52  6BE1               	clrf	225,b	;volatile
 24913                           
 24914                           ; BSR set to: 61
 24915                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 24916  018E54  6BE2               	clrf	226,b	;volatile
 24917                           
 24918                           ; BSR set to: 61
 24919                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 24920  018E56  6A34               	clrf	_uart2TxHead^0,c	;volatile
 24921                           
 24922                           ; BSR set to: 61
 24923                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 24924  018E58  6A33               	clrf	_uart2TxTail^0,c	;volatile
 24925                           
 24926                           ; BSR set to: 61
 24927                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 24928  018E5A  0E40               	movlw	64
 24929  018E5C  6E32               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 24930                           
 24931                           ; BSR set to: 61
 24932                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 24933  018E5E  6A31               	clrf	_uart2RxHead^0,c	;volatile
 24934                           
 24935                           ; BSR set to: 61
 24936                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 24937  018E60  6A30               	clrf	_uart2RxTail^0,c	;volatile
 24938                           
 24939                           ; BSR set to: 61
 24940                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 24941  018E62  6A2F               	clrf	_uart2RxCount^0,c	;volatile
 24942                           
 24943                           ; BSR set to: 61
 24944                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 24945  018E64  0139               	movlb	57	; () banked
 24946  018E66  8596               	bsf	150,2,b	;volatile
 24947                           
 24948                           ; BSR set to: 57
 24949                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 24950  018E68  0012               	return		;funcret
 24951  018E6A                     __end_of_UART2_Initialize:
 24952                           	opt callstack 0
 24953                           
 24954 ;; *************** function _UART2_SetTxInterruptHandler *****************
 24955 ;; Defined at:
 24956 ;;		line 252 in file "mcc_generated_files/uart2.c"
 24957 ;; Parameters:    Size  Location     Type
 24958 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24959 ;;		 -> UART2_Transmit_ISR(1), 
 24960 ;; Auto vars:     Size  Location     Type
 24961 ;;		None
 24962 ;; Return value:  Size  Location     Type
 24963 ;;                  1  [STACK] void 
 24964 ;; Registers used:
 24965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24966 ;; Tracked objects:
 24967 ;;		On entry : 3F/39
 24968 ;;		On exit  : 0/0
 24969 ;;		Unchanged: 0/0
 24970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24975 ;;Total ram usage:        0 bytes
 24976 ;; Hardware stack levels used:    1
 24977 ;; Hardware stack levels required when called:   15
 24978 ;; This function calls:
 24979 ;;		Nothing
 24980 ;; This function is called by:
 24981 ;;		_UART2_Initialize
 24982 ;; This function uses a reentrant model
 24983 ;;
 24984                           
 24985                           	psect	text99
 24986  0197E6                     __ptext99:
 24987                           	opt callstack 0
 24988  0197E6                     _UART2_SetTxInterruptHandler:
 24989                           	opt callstack 13
 24990                           
 24991                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 24992                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24993                           
 24994                           ; BSR set to: 57
 24995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24996                           ;incstack = 0
 24997  0197E6  50E1               	movf	fsr1l,w,c
 24998  0197E8  0FFD               	addlw	-3
 24999  0197EA  6ED9               	movwf	fsr2l,c
 25000  0197EC  50E2               	movf	fsr1h,w,c
 25001  0197EE  6EDA               	movwf	fsr2h,c
 25002  0197F0  0EFF               	movlw	255
 25003  0197F2  22DA               	addwfc	fsr2h,f,c
 25004  0197F4  006F FF78  F0BB    	movff	postinc2,_UART2_TxInterruptHandler
 25005  0197FA  006F FF78  F0BC    	movff	postinc2,_UART2_TxInterruptHandler+1
 25006  019800  006F FF74  F0BD    	movff	postdec2,_UART2_TxInterruptHandler+2
 25007                           
 25008                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 25009  019806  52E5               	movf	postdec1,f,c
 25010  019808  52E5               	movf	postdec1,f,c
 25011  01980A  52E5               	movf	postdec1,f,c
 25012  01980C  0012               	return		;funcret
 25013  01980E                     __end_of_UART2_SetTxInterruptHandler:
 25014                           	opt callstack 0
 25015                           
 25016 ;; *************** function _UART2_SetRxInterruptHandler *****************
 25017 ;; Defined at:
 25018 ;;		line 248 in file "mcc_generated_files/uart2.c"
 25019 ;; Parameters:    Size  Location     Type
 25020 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25021 ;;		 -> UART2_Receive_ISR(1), 
 25022 ;; Auto vars:     Size  Location     Type
 25023 ;;		None
 25024 ;; Return value:  Size  Location     Type
 25025 ;;                  1  [STACK] void 
 25026 ;; Registers used:
 25027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25028 ;; Tracked objects:
 25029 ;;		On entry : 3F/39
 25030 ;;		On exit  : 0/0
 25031 ;;		Unchanged: 0/0
 25032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25037 ;;Total ram usage:        0 bytes
 25038 ;; Hardware stack levels used:    1
 25039 ;; Hardware stack levels required when called:   15
 25040 ;; This function calls:
 25041 ;;		Nothing
 25042 ;; This function is called by:
 25043 ;;		_UART2_Initialize
 25044 ;; This function uses a reentrant model
 25045 ;;
 25046                           
 25047                           	psect	text100
 25048  01980E                     __ptext100:
 25049                           	opt callstack 0
 25050  01980E                     _UART2_SetRxInterruptHandler:
 25051                           	opt callstack 13
 25052                           
 25053                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 25054                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25055                           
 25056                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25057                           ;incstack = 0
 25058  01980E  50E1               	movf	fsr1l,w,c
 25059  019810  0FFD               	addlw	-3
 25060  019812  6ED9               	movwf	fsr2l,c
 25061  019814  50E2               	movf	fsr1h,w,c
 25062  019816  6EDA               	movwf	fsr2h,c
 25063  019818  0EFF               	movlw	255
 25064  01981A  22DA               	addwfc	fsr2h,f,c
 25065  01981C  006F FF78  F0BE    	movff	postinc2,_UART2_RxInterruptHandler
 25066  019822  006F FF78  F0BF    	movff	postinc2,_UART2_RxInterruptHandler+1
 25067  019828  006F FF74  F0C0    	movff	postdec2,_UART2_RxInterruptHandler+2
 25068                           
 25069                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 25070  01982E  52E5               	movf	postdec1,f,c
 25071  019830  52E5               	movf	postdec1,f,c
 25072  019832  52E5               	movf	postdec1,f,c
 25073  019834  0012               	return		;funcret
 25074  019836                     __end_of_UART2_SetRxInterruptHandler:
 25075                           	opt callstack 0
 25076                           
 25077 ;; *************** function _UART1_Initialize *****************
 25078 ;; Defined at:
 25079 ;;		line 75 in file "mcc_generated_files/uart1.c"
 25080 ;; Parameters:    Size  Location     Type
 25081 ;;		None
 25082 ;; Auto vars:     Size  Location     Type
 25083 ;;		None
 25084 ;; Return value:  Size  Location     Type
 25085 ;;                  1  [STACK] void 
 25086 ;; Registers used:
 25087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 25088 ;; Tracked objects:
 25089 ;;		On entry : 0/39
 25090 ;;		On exit  : 3F/39
 25091 ;;		Unchanged: 0/0
 25092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25097 ;;Total ram usage:        0 bytes
 25098 ;; Hardware stack levels used:    1
 25099 ;; Hardware stack levels required when called:   16
 25100 ;; This function calls:
 25101 ;;		_UART1_SetRxInterruptHandler
 25102 ;; This function is called by:
 25103 ;;		_SYSTEM_Initialize
 25104 ;; This function uses a reentrant model
 25105 ;;
 25106                           
 25107                           	psect	text101
 25108  0191DC                     __ptext101:
 25109                           	opt callstack 0
 25110  0191DC                     _UART1_Initialize:
 25111                           	opt callstack 13
 25112                           
 25113                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 25114                           
 25115                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25116                           ;incstack = 0
 25117  0191DC  0139               	movlb	57	; () banked
 25118  0191DE  9793               	bcf	147,3,b	;volatile
 25119                           
 25120                           ; BSR set to: 57
 25121                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 25122  0191E0  0E56               	movlw	low _UART1_Receive_ISR
 25123  0191E2  6EE6               	movwf	postinc1,c
 25124  0191E4  0E9B               	movlw	high _UART1_Receive_ISR
 25125  0191E6  6EE6               	movwf	postinc1,c
 25126  0191E8  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 25127  0191EA  6EE6               	movwf	postinc1,c
 25128  0191EC  EC1B  F0CC         	call	_UART1_SetRxInterruptHandler	;wreg free
 25129                           
 25130                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 25131  0191F0  013D               	movlb	61	; () banked
 25132  0191F2  6BEC               	clrf	236,b	;volatile
 25133                           
 25134                           ; BSR set to: 61
 25135                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 25136  0191F4  6BED               	clrf	237,b	;volatile
 25137                           
 25138                           ; BSR set to: 61
 25139                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 25140  0191F6  6BEE               	clrf	238,b	;volatile
 25141                           
 25142                           ; BSR set to: 61
 25143                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 25144  0191F8  6BEF               	clrf	239,b	;volatile
 25145                           
 25146                           ; BSR set to: 61
 25147                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 25148  0191FA  6BF0               	clrf	240,b	;volatile
 25149                           
 25150                           ; BSR set to: 61
 25151                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 25152  0191FC  6BF1               	clrf	241,b	;volatile
 25153                           
 25154                           ; BSR set to: 61
 25155                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 25156  0191FE  0EB0               	movlw	176
 25157  019200  6FF2               	movwf	242,b	;volatile
 25158                           
 25159                           ; BSR set to: 61
 25160                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 25161  019202  0E80               	movlw	128
 25162  019204  6FF3               	movwf	243,b	;volatile
 25163                           
 25164                           ; BSR set to: 61
 25165                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 25166  019206  6BF4               	clrf	244,b	;volatile
 25167                           
 25168                           ; BSR set to: 61
 25169                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 25170  019208  0E8A               	movlw	138
 25171  01920A  6FF5               	movwf	245,b	;volatile
 25172                           
 25173                           ; BSR set to: 61
 25174                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 25175  01920C  6BF6               	clrf	246,b	;volatile
 25176                           
 25177                           ; BSR set to: 61
 25178                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 25179  01920E  6BF7               	clrf	247,b	;volatile
 25180                           
 25181                           ; BSR set to: 61
 25182                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 25183  019210  6BF8               	clrf	248,b	;volatile
 25184                           
 25185                           ; BSR set to: 61
 25186                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 25187  019212  6BF9               	clrf	249,b	;volatile
 25188                           
 25189                           ; BSR set to: 61
 25190                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 25191  019214  6BFA               	clrf	250,b	;volatile
 25192                           
 25193                           ; BSR set to: 61
 25194                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 25195  019216  6A37               	clrf	_uart1RxHead^0,c	;volatile
 25196                           
 25197                           ; BSR set to: 61
 25198                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 25199  019218  6A36               	clrf	_uart1RxTail^0,c	;volatile
 25200                           
 25201                           ; BSR set to: 61
 25202                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 25203  01921A  6A35               	clrf	_uart1RxCount^0,c	;volatile
 25204                           
 25205                           ; BSR set to: 61
 25206                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 25207  01921C  0139               	movlb	57	; () banked
 25208  01921E  8793               	bsf	147,3,b	;volatile
 25209                           
 25210                           ; BSR set to: 57
 25211                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 25212  019220  0012               	return		;funcret
 25213  019222                     __end_of_UART1_Initialize:
 25214                           	opt callstack 0
 25215                           
 25216 ;; *************** function _UART1_SetRxInterruptHandler *****************
 25217 ;; Defined at:
 25218 ;;		line 207 in file "mcc_generated_files/uart1.c"
 25219 ;; Parameters:    Size  Location     Type
 25220 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25221 ;;		 -> UART1_Receive_ISR(1), 
 25222 ;; Auto vars:     Size  Location     Type
 25223 ;;		None
 25224 ;; Return value:  Size  Location     Type
 25225 ;;                  1  [STACK] void 
 25226 ;; Registers used:
 25227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25228 ;; Tracked objects:
 25229 ;;		On entry : 3F/39
 25230 ;;		On exit  : 0/0
 25231 ;;		Unchanged: 0/0
 25232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25237 ;;Total ram usage:        0 bytes
 25238 ;; Hardware stack levels used:    1
 25239 ;; Hardware stack levels required when called:   15
 25240 ;; This function calls:
 25241 ;;		Nothing
 25242 ;; This function is called by:
 25243 ;;		_UART1_Initialize
 25244 ;; This function uses a reentrant model
 25245 ;;
 25246                           
 25247                           	psect	text102
 25248  019836                     __ptext102:
 25249                           	opt callstack 0
 25250  019836                     _UART1_SetRxInterruptHandler:
 25251                           	opt callstack 13
 25252                           
 25253                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 25254                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25255                           
 25256                           ; BSR set to: 57
 25257                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25258                           ;incstack = 0
 25259  019836  50E1               	movf	fsr1l,w,c
 25260  019838  0FFD               	addlw	-3
 25261  01983A  6ED9               	movwf	fsr2l,c
 25262  01983C  50E2               	movf	fsr1h,w,c
 25263  01983E  6EDA               	movwf	fsr2h,c
 25264  019840  0EFF               	movlw	255
 25265  019842  22DA               	addwfc	fsr2h,f,c
 25266  019844  006F FF78  F0B8    	movff	postinc2,_UART1_RxInterruptHandler
 25267  01984A  006F FF78  F0B9    	movff	postinc2,_UART1_RxInterruptHandler+1
 25268  019850  006F FF74  F0BA    	movff	postdec2,_UART1_RxInterruptHandler+2
 25269                           
 25270                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 25271  019856  52E5               	movf	postdec1,f,c
 25272  019858  52E5               	movf	postdec1,f,c
 25273  01985A  52E5               	movf	postdec1,f,c
 25274  01985C  0012               	return		;funcret
 25275  01985E                     __end_of_UART1_SetRxInterruptHandler:
 25276                           	opt callstack 0
 25277                           
 25278 ;; *************** function _TMR6_Initialize *****************
 25279 ;; Defined at:
 25280 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 25281 ;; Parameters:    Size  Location     Type
 25282 ;;		None
 25283 ;; Auto vars:     Size  Location     Type
 25284 ;;		None
 25285 ;; Return value:  Size  Location     Type
 25286 ;;                  1  [STACK] void 
 25287 ;; Registers used:
 25288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 25289 ;; Tracked objects:
 25290 ;;		On entry : 3F/39
 25291 ;;		On exit  : 0/0
 25292 ;;		Unchanged: 0/0
 25293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25298 ;;Total ram usage:        0 bytes
 25299 ;; Hardware stack levels used:    1
 25300 ;; Hardware stack levels required when called:   16
 25301 ;; This function calls:
 25302 ;;		_TMR6_SetInterruptHandler
 25303 ;; This function is called by:
 25304 ;;		_SYSTEM_Initialize
 25305 ;; This function uses a reentrant model
 25306 ;;
 25307                           
 25308                           	psect	text103
 25309  0196F4                     __ptext103:
 25310                           	opt callstack 0
 25311  0196F4                     _TMR6_Initialize:
 25312                           	opt callstack 13
 25313                           
 25314                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 25315                           
 25316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25317                           ;incstack = 0
 25318  0196F4  0E01               	movlw	1
 25319  0196F6  6E96               	movwf	150,c	;volatile
 25320                           
 25321                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 25322  0196F8  6A95               	clrf	149,c	;volatile
 25323                           
 25324                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 25325  0196FA  6A97               	clrf	151,c	;volatile
 25326                           
 25327                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 25328  0196FC  0E7C               	movlw	124
 25329  0196FE  6E93               	movwf	147,c	;volatile
 25330                           
 25331                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 25332  019700  6A92               	clrf	146,c	;volatile
 25333                           
 25334                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 25335  019702  0139               	movlb	57	; () banked
 25336  019704  91A9               	bcf	169,0,b	;volatile
 25337                           
 25338                           ; BSR set to: 57
 25339                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 25340  019706  8199               	bsf	153,0,b	;volatile
 25341                           
 25342                           ; BSR set to: 57
 25343                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 25344  019708  0E70               	movlw	low _TMR6_DefaultInterruptHandler
 25345  01970A  6EE6               	movwf	postinc1,c
 25346  01970C  0E90               	movlw	high _TMR6_DefaultInterruptHandler
 25347  01970E  6EE6               	movwf	postinc1,c
 25348  019710  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 25349  019712  6EE6               	movwf	postinc1,c
 25350  019714  EC2F  F0CC         	call	_TMR6_SetInterruptHandler	;wreg free
 25351                           
 25352                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 25353  019718  0EE0               	movlw	224
 25354  01971A  6E94               	movwf	148,c	;volatile
 25355                           
 25356                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25357  01971C  0012               	return		;funcret
 25358  01971E                     __end_of_TMR6_Initialize:
 25359                           	opt callstack 0
 25360                           
 25361 ;; *************** function _TMR6_SetInterruptHandler *****************
 25362 ;; Defined at:
 25363 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 25364 ;; Parameters:    Size  Location     Type
 25365 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25366 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 25367 ;; Auto vars:     Size  Location     Type
 25368 ;;		None
 25369 ;; Return value:  Size  Location     Type
 25370 ;;                  1  [STACK] void 
 25371 ;; Registers used:
 25372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25373 ;; Tracked objects:
 25374 ;;		On entry : 3F/39
 25375 ;;		On exit  : 0/0
 25376 ;;		Unchanged: 0/0
 25377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25382 ;;Total ram usage:        0 bytes
 25383 ;; Hardware stack levels used:    1
 25384 ;; Hardware stack levels required when called:   15
 25385 ;; This function calls:
 25386 ;;		Nothing
 25387 ;; This function is called by:
 25388 ;;		_TMR6_Initialize
 25389 ;; This function uses a reentrant model
 25390 ;;
 25391                           
 25392                           	psect	text104
 25393  01985E                     __ptext104:
 25394                           	opt callstack 0
 25395  01985E                     _TMR6_SetInterruptHandler:
 25396                           	opt callstack 13
 25397                           
 25398                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 25399                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25400                           
 25401                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25402                           ;incstack = 0
 25403  01985E  50E1               	movf	fsr1l,w,c
 25404  019860  0FFD               	addlw	-3
 25405  019862  6ED9               	movwf	fsr2l,c
 25406  019864  50E2               	movf	fsr1h,w,c
 25407  019866  6EDA               	movwf	fsr2h,c
 25408  019868  0EFF               	movlw	255
 25409  01986A  22DA               	addwfc	fsr2h,f,c
 25410  01986C  006F FF78  F0AF    	movff	postinc2,_TMR6_InterruptHandler
 25411  019872  006F FF78  F0B0    	movff	postinc2,_TMR6_InterruptHandler+1
 25412  019878  006F FF74  F0B1    	movff	postdec2,_TMR6_InterruptHandler+2
 25413                           
 25414                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25415  01987E  52E5               	movf	postdec1,f,c
 25416  019880  52E5               	movf	postdec1,f,c
 25417  019882  52E5               	movf	postdec1,f,c
 25418  019884  0012               	return		;funcret
 25419  019886                     __end_of_TMR6_SetInterruptHandler:
 25420                           	opt callstack 0
 25421                           
 25422 ;; *************** function _TMR5_Initialize *****************
 25423 ;; Defined at:
 25424 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 25425 ;; Parameters:    Size  Location     Type
 25426 ;;		None
 25427 ;; Auto vars:     Size  Location     Type
 25428 ;;		None
 25429 ;; Return value:  Size  Location     Type
 25430 ;;                  1  [STACK] void 
 25431 ;; Registers used:
 25432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 25433 ;; Tracked objects:
 25434 ;;		On entry : 0/39
 25435 ;;		On exit  : 0/0
 25436 ;;		Unchanged: 0/0
 25437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25442 ;;Total ram usage:        0 bytes
 25443 ;; Hardware stack levels used:    1
 25444 ;; Hardware stack levels required when called:   16
 25445 ;; This function calls:
 25446 ;;		_TMR5_SetInterruptHandler
 25447 ;; This function is called by:
 25448 ;;		_SYSTEM_Initialize
 25449 ;; This function uses a reentrant model
 25450 ;;
 25451                           
 25452                           	psect	text105
 25453  019222                     __ptext105:
 25454                           	opt callstack 0
 25455  019222                     _TMR5_Initialize:
 25456                           	opt callstack 13
 25457                           
 25458                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 25459                           
 25460                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25461                           ;incstack = 0
 25462  019222  6A9B               	clrf	155,c	;volatile
 25463                           
 25464                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 25465  019224  6A9C               	clrf	156,c	;volatile
 25466                           
 25467                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 25468  019226  0E01               	movlw	1
 25469  019228  6E9D               	movwf	157,c	;volatile
 25470                           
 25471                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 25472  01922A  0E63               	movlw	99
 25473  01922C  6E99               	movwf	153,c	;volatile
 25474                           
 25475                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 25476  01922E  0EC0               	movlw	192
 25477  019230  6E98               	movwf	152,c	;volatile
 25478                           
 25479                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 25480  019232  5098               	movf	152,w,c	;volatile
 25481  019234  006F FE64  F001    	movff	16281,btemp	;volatile
 25482  01923A  6A02               	clrf	(btemp+1)^0,c
 25483  01923C  0060  F004  F002   	movff	btemp,btemp+1
 25484  019242  6A01               	clrf	btemp^0,c
 25485  019244  1001               	iorwf	btemp^0,w,c
 25486  019246  6E2B               	movwf	_timer5ReloadVal^0,c	;volatile
 25487  019248  5002               	movf	(btemp+1)^0,w,c
 25488  01924A  6E2C               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 25489                           
 25490                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 25491  01924C  0139               	movlb	57	; () banked
 25492  01924E  9DA8               	bcf	168,6,b	;volatile
 25493                           
 25494                           ; BSR set to: 57
 25495                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 25496  019250  8D98               	bsf	152,6,b	;volatile
 25497                           
 25498                           ; BSR set to: 57
 25499                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 25500  019252  0E76               	movlw	low _TMR5_DefaultInterruptHandler
 25501  019254  6EE6               	movwf	postinc1,c
 25502  019256  0E99               	movlw	high _TMR5_DefaultInterruptHandler
 25503  019258  6EE6               	movwf	postinc1,c
 25504  01925A  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 25505  01925C  6EE6               	movwf	postinc1,c
 25506  01925E  EC43  F0CC         	call	_TMR5_SetInterruptHandler	;wreg free
 25507                           
 25508                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 25509  019262  0E31               	movlw	49
 25510  019264  6E9A               	movwf	154,c	;volatile
 25511                           
 25512                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25513  019266  0012               	return		;funcret
 25514  019268                     __end_of_TMR5_Initialize:
 25515                           	opt callstack 0
 25516                           
 25517 ;; *************** function _TMR5_SetInterruptHandler *****************
 25518 ;; Defined at:
 25519 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 25520 ;; Parameters:    Size  Location     Type
 25521 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25522 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 25523 ;; Auto vars:     Size  Location     Type
 25524 ;;		None
 25525 ;; Return value:  Size  Location     Type
 25526 ;;                  1  [STACK] void 
 25527 ;; Registers used:
 25528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25529 ;; Tracked objects:
 25530 ;;		On entry : 3F/39
 25531 ;;		On exit  : 0/0
 25532 ;;		Unchanged: 0/0
 25533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25538 ;;Total ram usage:        0 bytes
 25539 ;; Hardware stack levels used:    1
 25540 ;; Hardware stack levels required when called:   15
 25541 ;; This function calls:
 25542 ;;		Nothing
 25543 ;; This function is called by:
 25544 ;;		_TMR5_Initialize
 25545 ;; This function uses a reentrant model
 25546 ;;
 25547                           
 25548                           	psect	text106
 25549  019886                     __ptext106:
 25550                           	opt callstack 0
 25551  019886                     _TMR5_SetInterruptHandler:
 25552                           	opt callstack 13
 25553                           
 25554                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 25555                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25556                           
 25557                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25558                           ;incstack = 0
 25559  019886  50E1               	movf	fsr1l,w,c
 25560  019888  0FFD               	addlw	-3
 25561  01988A  6ED9               	movwf	fsr2l,c
 25562  01988C  50E2               	movf	fsr1h,w,c
 25563  01988E  6EDA               	movwf	fsr2h,c
 25564  019890  0EFF               	movlw	255
 25565  019892  22DA               	addwfc	fsr2h,f,c
 25566  019894  006F FF78  F0AC    	movff	postinc2,_TMR5_InterruptHandler
 25567  01989A  006F FF78  F0AD    	movff	postinc2,_TMR5_InterruptHandler+1
 25568  0198A0  006F FF74  F0AE    	movff	postdec2,_TMR5_InterruptHandler+2
 25569                           
 25570                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25571  0198A6  52E5               	movf	postdec1,f,c
 25572  0198A8  52E5               	movf	postdec1,f,c
 25573  0198AA  52E5               	movf	postdec1,f,c
 25574  0198AC  0012               	return		;funcret
 25575  0198AE                     __end_of_TMR5_SetInterruptHandler:
 25576                           	opt callstack 0
 25577                           
 25578 ;; *************** function _TMR3_Initialize *****************
 25579 ;; Defined at:
 25580 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 25581 ;; Parameters:    Size  Location     Type
 25582 ;;		None
 25583 ;; Auto vars:     Size  Location     Type
 25584 ;;		None
 25585 ;; Return value:  Size  Location     Type
 25586 ;;                  1  [STACK] void 
 25587 ;; Registers used:
 25588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 25589 ;; Tracked objects:
 25590 ;;		On entry : 0/39
 25591 ;;		On exit  : 0/0
 25592 ;;		Unchanged: 0/0
 25593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25598 ;;Total ram usage:        0 bytes
 25599 ;; Hardware stack levels used:    1
 25600 ;; Hardware stack levels required when called:   16
 25601 ;; This function calls:
 25602 ;;		_TMR3_SetInterruptHandler
 25603 ;; This function is called by:
 25604 ;;		_SYSTEM_Initialize
 25605 ;; This function uses a reentrant model
 25606 ;;
 25607                           
 25608                           	psect	text107
 25609  019268                     __ptext107:
 25610                           	opt callstack 0
 25611  019268                     _TMR3_Initialize:
 25612                           	opt callstack 13
 25613                           
 25614                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 25615                           
 25616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25617                           ;incstack = 0
 25618  019268  6AA7               	clrf	167,c	;volatile
 25619                           
 25620                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 25621  01926A  6AA8               	clrf	168,c	;volatile
 25622                           
 25623                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 25624  01926C  0E01               	movlw	1
 25625  01926E  6EA9               	movwf	169,c	;volatile
 25626                           
 25627                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 25628  019270  0E3C               	movlw	60
 25629  019272  6EA5               	movwf	165,c	;volatile
 25630                           
 25631                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 25632  019274  0EB0               	movlw	176
 25633  019276  6EA4               	movwf	164,c	;volatile
 25634                           
 25635                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 25636  019278  50A4               	movf	164,w,c	;volatile
 25637  01927A  006F FE94  F001    	movff	16293,btemp	;volatile
 25638  019280  6A02               	clrf	(btemp+1)^0,c
 25639  019282  0060  F004  F002   	movff	btemp,btemp+1
 25640  019288  6A01               	clrf	btemp^0,c
 25641  01928A  1001               	iorwf	btemp^0,w,c
 25642  01928C  6E27               	movwf	_timer3ReloadVal^0,c	;volatile
 25643  01928E  5002               	movf	(btemp+1)^0,w,c
 25644  019290  6E28               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 25645                           
 25646                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 25647  019292  0139               	movlb	57	; () banked
 25648  019294  9DA6               	bcf	166,6,b	;volatile
 25649                           
 25650                           ; BSR set to: 57
 25651                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 25652  019296  8D96               	bsf	150,6,b	;volatile
 25653                           
 25654                           ; BSR set to: 57
 25655                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 25656  019298  0EC4               	movlw	low _TMR3_DefaultInterruptHandler
 25657  01929A  6EE6               	movwf	postinc1,c
 25658  01929C  0E9D               	movlw	high _TMR3_DefaultInterruptHandler
 25659  01929E  6EE6               	movwf	postinc1,c
 25660  0192A0  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 25661  0192A2  6EE6               	movwf	postinc1,c
 25662  0192A4  EC57  F0CC         	call	_TMR3_SetInterruptHandler	;wreg free
 25663                           
 25664                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 25665  0192A8  0E31               	movlw	49
 25666  0192AA  6EA6               	movwf	166,c	;volatile
 25667                           
 25668                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25669  0192AC  0012               	return		;funcret
 25670  0192AE                     __end_of_TMR3_Initialize:
 25671                           	opt callstack 0
 25672                           
 25673 ;; *************** function _TMR3_SetInterruptHandler *****************
 25674 ;; Defined at:
 25675 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 25676 ;; Parameters:    Size  Location     Type
 25677 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25678 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 25679 ;; Auto vars:     Size  Location     Type
 25680 ;;		None
 25681 ;; Return value:  Size  Location     Type
 25682 ;;                  1  [STACK] void 
 25683 ;; Registers used:
 25684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25685 ;; Tracked objects:
 25686 ;;		On entry : 0/1
 25687 ;;		On exit  : 0/0
 25688 ;;		Unchanged: 0/0
 25689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25694 ;;Total ram usage:        0 bytes
 25695 ;; Hardware stack levels used:    1
 25696 ;; Hardware stack levels required when called:   15
 25697 ;; This function calls:
 25698 ;;		Nothing
 25699 ;; This function is called by:
 25700 ;;		_TMR3_Initialize
 25701 ;;		_init_bsoc
 25702 ;; This function uses a reentrant model
 25703 ;;
 25704                           
 25705                           	psect	text108
 25706  0198AE                     __ptext108:
 25707                           	opt callstack 0
 25708  0198AE                     _TMR3_SetInterruptHandler:
 25709                           	opt callstack 14
 25710                           
 25711                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 25712                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25713                           
 25714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25715                           ;incstack = 0
 25716  0198AE  50E1               	movf	fsr1l,w,c
 25717  0198B0  0FFD               	addlw	-3
 25718  0198B2  6ED9               	movwf	fsr2l,c
 25719  0198B4  50E2               	movf	fsr1h,w,c
 25720  0198B6  6EDA               	movwf	fsr2h,c
 25721  0198B8  0EFF               	movlw	255
 25722  0198BA  22DA               	addwfc	fsr2h,f,c
 25723  0198BC  006F FF78  F0A9    	movff	postinc2,_TMR3_InterruptHandler
 25724  0198C2  006F FF78  F0AA    	movff	postinc2,_TMR3_InterruptHandler+1
 25725  0198C8  006F FF74  F0AB    	movff	postdec2,_TMR3_InterruptHandler+2
 25726                           
 25727                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25728  0198CE  52E5               	movf	postdec1,f,c
 25729  0198D0  52E5               	movf	postdec1,f,c
 25730  0198D2  52E5               	movf	postdec1,f,c
 25731  0198D4  0012               	return		;funcret
 25732  0198D6                     __end_of_TMR3_SetInterruptHandler:
 25733                           	opt callstack 0
 25734                           
 25735 ;; *************** function _TMR2_Initialize *****************
 25736 ;; Defined at:
 25737 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 25738 ;; Parameters:    Size  Location     Type
 25739 ;;		None
 25740 ;; Auto vars:     Size  Location     Type
 25741 ;;		None
 25742 ;; Return value:  Size  Location     Type
 25743 ;;                  1  [STACK] void 
 25744 ;; Registers used:
 25745 ;;		wreg, status,2
 25746 ;; Tracked objects:
 25747 ;;		On entry : 0/3E
 25748 ;;		On exit  : 3F/39
 25749 ;;		Unchanged: 0/0
 25750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25755 ;;Total ram usage:        0 bytes
 25756 ;; Hardware stack levels used:    1
 25757 ;; Hardware stack levels required when called:   15
 25758 ;; This function calls:
 25759 ;;		Nothing
 25760 ;; This function is called by:
 25761 ;;		_SYSTEM_Initialize
 25762 ;; This function uses a reentrant model
 25763 ;;
 25764                           
 25765                           	psect	text109
 25766  019C76                     __ptext109:
 25767                           	opt callstack 0
 25768  019C76                     _TMR2_Initialize:
 25769                           	opt callstack 14
 25770                           
 25771                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 25772                           
 25773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25774                           ;incstack = 0
 25775  019C76  0E01               	movlw	1
 25776  019C78  6EAE               	movwf	174,c	;volatile
 25777                           
 25778                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 25779  019C7A  6AAD               	clrf	173,c	;volatile
 25780                           
 25781                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 25782  019C7C  6AAF               	clrf	175,c	;volatile
 25783                           
 25784                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 25785  019C7E  0E63               	movlw	99
 25786  019C80  6EAB               	movwf	171,c	;volatile
 25787                           
 25788                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 25789  019C82  6AAA               	clrf	170,c	;volatile
 25790                           
 25791                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 25792  019C84  0139               	movlb	57	; () banked
 25793  019C86  95A4               	bcf	164,2,b	;volatile
 25794                           
 25795                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 25796  019C88  0EC0               	movlw	192
 25797  019C8A  6EAC               	movwf	172,c	;volatile
 25798                           
 25799                           ; BSR set to: 57
 25800                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25801  019C8C  0012               	return		;funcret
 25802  019C8E                     __end_of_TMR2_Initialize:
 25803                           	opt callstack 0
 25804                           
 25805 ;; *************** function _SPI1_Initialize *****************
 25806 ;; Defined at:
 25807 ;;		line 64 in file "mcc_generated_files/spi1.c"
 25808 ;; Parameters:    Size  Location     Type
 25809 ;;		None
 25810 ;; Auto vars:     Size  Location     Type
 25811 ;;		None
 25812 ;; Return value:  Size  Location     Type
 25813 ;;                  1  [STACK] void 
 25814 ;; Registers used:
 25815 ;;		wreg, status,2
 25816 ;; Tracked objects:
 25817 ;;		On entry : 3F/39
 25818 ;;		On exit  : 3F/3D
 25819 ;;		Unchanged: 0/0
 25820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25825 ;;Total ram usage:        0 bytes
 25826 ;; Hardware stack levels used:    1
 25827 ;; Hardware stack levels required when called:   15
 25828 ;; This function calls:
 25829 ;;		Nothing
 25830 ;; This function is called by:
 25831 ;;		_SYSTEM_Initialize
 25832 ;; This function uses a reentrant model
 25833 ;;
 25834                           
 25835                           	psect	text110
 25836  019C8E                     __ptext110:
 25837                           	opt callstack 0
 25838  019C8E                     _SPI1_Initialize:
 25839                           	opt callstack 14
 25840                           
 25841                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 25842                           
 25843                           ; BSR set to: 57
 25844                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25845                           ;incstack = 0
 25846  019C8E  0E40               	movlw	64
 25847  019C90  013D               	movlb	61	; () banked
 25848  019C92  6F15               	movwf	21,b	;volatile
 25849                           
 25850                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 25851  019C94  0E03               	movlw	3
 25852  019C96  6F16               	movwf	22,b	;volatile
 25853                           
 25854                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 25855  019C98  0E4F               	movlw	79
 25856  019C9A  6F19               	movwf	25,b	;volatile
 25857                           
 25858                           ; BSR set to: 61
 25859                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 25860  019C9C  6B1C               	clrf	28,b	;volatile
 25861                           
 25862                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 25863  019C9E  0E83               	movlw	131
 25864  019CA0  6F14               	movwf	20,b	;volatile
 25865                           
 25866                           ; BSR set to: 61
 25867                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25868  019CA2  0012               	return		;funcret
 25869  019CA4                     __end_of_SPI1_Initialize:
 25870                           	opt callstack 0
 25871                           
 25872 ;; *************** function _PWM8_Initialize *****************
 25873 ;; Defined at:
 25874 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 25875 ;; Parameters:    Size  Location     Type
 25876 ;;		None
 25877 ;; Auto vars:     Size  Location     Type
 25878 ;;		None
 25879 ;; Return value:  Size  Location     Type
 25880 ;;                  1  [STACK] void 
 25881 ;; Registers used:
 25882 ;;		wreg, status,2
 25883 ;; Tracked objects:
 25884 ;;		On entry : 3F/39
 25885 ;;		On exit  : 3F/3F
 25886 ;;		Unchanged: 0/0
 25887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25892 ;;Total ram usage:        0 bytes
 25893 ;; Hardware stack levels used:    1
 25894 ;; Hardware stack levels required when called:   15
 25895 ;; This function calls:
 25896 ;;		Nothing
 25897 ;; This function is called by:
 25898 ;;		_SYSTEM_Initialize
 25899 ;; This function uses a reentrant model
 25900 ;;
 25901                           
 25902                           	psect	text111
 25903  019CA4                     __ptext111:
 25904                           	opt callstack 0
 25905  019CA4                     _PWM8_Initialize:
 25906                           	opt callstack 14
 25907                           
 25908                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 25909                           
 25910                           ; BSR set to: 61
 25911                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25912                           ;incstack = 0
 25913  019CA4  0E80               	movlw	128
 25914  019CA6  6E62               	movwf	98,c	;volatile
 25915                           
 25916                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 25917  019CA8  6A61               	clrf	97,c	;volatile
 25918                           
 25919                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 25920  019CAA  0E40               	movlw	64
 25921  019CAC  6E60               	movwf	96,c	;volatile
 25922                           
 25923                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 25924  019CAE  013F               	movlb	63	; () banked
 25925  019CB0  515F               	movf	95,w,b	;volatile
 25926  019CB2  0B3F               	andlw	-193
 25927  019CB4  0940               	iorlw	64
 25928  019CB6  6F5F               	movwf	95,b	;volatile
 25929                           
 25930                           ; BSR set to: 63
 25931                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25932  019CB8  0012               	return		;funcret
 25933  019CBA                     __end_of_PWM8_Initialize:
 25934                           	opt callstack 0
 25935                           
 25936 ;; *************** function _PMD_Initialize *****************
 25937 ;; Defined at:
 25938 ;;		line 90 in file "mcc_generated_files/mcc.c"
 25939 ;; Parameters:    Size  Location     Type
 25940 ;;		None
 25941 ;; Auto vars:     Size  Location     Type
 25942 ;;		None
 25943 ;; Return value:  Size  Location     Type
 25944 ;;                  1  [STACK] void 
 25945 ;; Registers used:
 25946 ;;		None
 25947 ;; Tracked objects:
 25948 ;;		On entry : 3F/39
 25949 ;;		On exit  : 3F/39
 25950 ;;		Unchanged: 0/0
 25951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25956 ;;Total ram usage:        0 bytes
 25957 ;; Hardware stack levels used:    1
 25958 ;; Hardware stack levels required when called:   15
 25959 ;; This function calls:
 25960 ;;		Nothing
 25961 ;; This function is called by:
 25962 ;;		_SYSTEM_Initialize
 25963 ;; This function uses a reentrant model
 25964 ;;
 25965                           
 25966                           	psect	text112
 25967  019CD0                     __ptext112:
 25968                           	opt callstack 0
 25969  019CD0                     _PMD_Initialize:
 25970                           	opt callstack 14
 25971                           
 25972                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 25973                           
 25974                           ; BSR set to: 63
 25975                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25976                           ;incstack = 0
 25977  019CD0  0139               	movlb	57	; () banked
 25978  019CD2  6BC0               	clrf	192,b	;volatile
 25979                           
 25980                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 25981  019CD4  6BC1               	clrf	193,b	;volatile
 25982                           
 25983                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 25984  019CD6  6BC2               	clrf	194,b	;volatile
 25985                           
 25986                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 25987  019CD8  6BC3               	clrf	195,b	;volatile
 25988                           
 25989                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 25990  019CDA  6BC4               	clrf	196,b	;volatile
 25991                           
 25992                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 25993  019CDC  6BC5               	clrf	197,b	;volatile
 25994                           
 25995                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 25996  019CDE  6BC6               	clrf	198,b	;volatile
 25997                           
 25998                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 25999  019CE0  6BC7               	clrf	199,b	;volatile
 26000                           
 26001                           ; BSR set to: 57
 26002                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 26003  019CE2  0012               	return		;funcret
 26004  019CE4                     __end_of_PMD_Initialize:
 26005                           	opt callstack 0
 26006                           
 26007 ;; *************** function _PIN_MANAGER_Initialize *****************
 26008 ;; Defined at:
 26009 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 26010 ;; Parameters:    Size  Location     Type
 26011 ;;		None
 26012 ;; Auto vars:     Size  Location     Type
 26013 ;;		None
 26014 ;; Return value:  Size  Location     Type
 26015 ;;                  1  [STACK] void 
 26016 ;; Registers used:
 26017 ;;		wreg, status,2
 26018 ;; Tracked objects:
 26019 ;;		On entry : 3F/39
 26020 ;;		On exit  : 3F/3A
 26021 ;;		Unchanged: 0/0
 26022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26027 ;;Total ram usage:        0 bytes
 26028 ;; Hardware stack levels used:    1
 26029 ;; Hardware stack levels required when called:   15
 26030 ;; This function calls:
 26031 ;;		Nothing
 26032 ;; This function is called by:
 26033 ;;		_SYSTEM_Initialize
 26034 ;; This function uses a reentrant model
 26035 ;;
 26036                           
 26037                           	psect	text113
 26038  01880E                     __ptext113:
 26039                           	opt callstack 0
 26040  01880E                     _PIN_MANAGER_Initialize:
 26041                           	opt callstack 14
 26042                           
 26043                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 26044                           
 26045                           ; BSR set to: 57
 26046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26047                           ;incstack = 0
 26048  01880E  0E07               	movlw	7
 26049  018810  6EBE               	movwf	190,c	;volatile
 26050                           
 26051                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 26052  018812  0E80               	movlw	128
 26053  018814  6EBD               	movwf	189,c	;volatile
 26054                           
 26055                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 26056  018816  6ABA               	clrf	186,c	;volatile
 26057                           
 26058                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 26059  018818  6ABF               	clrf	191,c	;volatile
 26060                           
 26061                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 26062  01881A  6ABB               	clrf	187,c	;volatile
 26063                           
 26064                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 26065  01881C  0E07               	movlw	7
 26066  01881E  6EBC               	movwf	188,c	;volatile
 26067                           
 26068                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 26069  018820  6AC6               	clrf	198,c	;volatile
 26070                           
 26071                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 26072  018822  0E0F               	movlw	15
 26073  018824  6EC7               	movwf	199,c	;volatile
 26074                           
 26075                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 26076  018826  68C2               	setf	194,c	;volatile
 26077                           
 26078                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 26079  018828  0EBF               	movlw	191
 26080  01882A  6EC3               	movwf	195,c	;volatile
 26081                           
 26082                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 26083  01882C  0E90               	movlw	144
 26084  01882E  6EC4               	movwf	196,c	;volatile
 26085                           
 26086                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 26087  018830  0E0C               	movlw	12
 26088  018832  6EC5               	movwf	197,c	;volatile
 26089                           
 26090                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 26091  018834  013A               	movlb	58	; () banked
 26092  018836  6B70               	clrf	112,b	;volatile
 26093                           
 26094                           ; BSR set to: 58
 26095                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 26096  018838  6B60               	clrf	96,b	;volatile
 26097                           
 26098                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 26099  01883A  0E3C               	movlw	60
 26100  01883C  6F50               	movwf	80,b	;volatile
 26101                           
 26102                           ; BSR set to: 58
 26103                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 26104  01883E  6B80               	clrf	128,b	;volatile
 26105                           
 26106                           ; BSR set to: 58
 26107                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 26108  018840  6B90               	clrf	144,b	;volatile
 26109                           
 26110                           ; BSR set to: 58
 26111                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 26112  018842  6940               	setf	64,b	;volatile
 26113                           
 26114                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 26115  018844  0E0C               	movlw	12
 26116  018846  6F71               	movwf	113,b	;volatile
 26117                           
 26118                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 26119  018848  0E0F               	movlw	15
 26120  01884A  6F91               	movwf	145,b	;volatile
 26121                           
 26122                           ; BSR set to: 58
 26123                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 26124  01884C  6B81               	clrf	129,b	;volatile
 26125                           
 26126                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 26127  01884E  0E83               	movlw	131
 26128  018850  6F51               	movwf	81,b	;volatile
 26129                           
 26130                           ; BSR set to: 58
 26131                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 26132  018852  6B41               	clrf	65,b	;volatile
 26133                           
 26134                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 26135  018854  0E97               	movlw	151
 26136  018856  6F61               	movwf	97,b	;volatile
 26137                           
 26138                           ; BSR set to: 58
 26139                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 26140  018858  6B82               	clrf	130,b	;volatile
 26141                           
 26142                           ; BSR set to: 58
 26143                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 26144  01885A  6B92               	clrf	146,b	;volatile
 26145                           
 26146                           ; BSR set to: 58
 26147                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 26148  01885C  6B42               	clrf	66,b	;volatile
 26149                           
 26150                           ; BSR set to: 58
 26151                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 26152  01885E  6B52               	clrf	82,b	;volatile
 26153                           
 26154                           ; BSR set to: 58
 26155                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 26156  018860  6B62               	clrf	98,b	;volatile
 26157                           
 26158                           ; BSR set to: 58
 26159                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 26160  018862  6B72               	clrf	114,b	;volatile
 26161                           
 26162                           ; BSR set to: 58
 26163                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 26164  018864  6943               	setf	67,b	;volatile
 26165                           
 26166                           ; BSR set to: 58
 26167                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 26168  018866  6953               	setf	83,b	;volatile
 26169                           
 26170                           ; BSR set to: 58
 26171                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 26172  018868  6963               	setf	99,b	;volatile
 26173                           
 26174                           ; BSR set to: 58
 26175                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 26176  01886A  6973               	setf	115,b	;volatile
 26177                           
 26178                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 26179  01886C  0E07               	movlw	7
 26180  01886E  6F83               	movwf	131,b	;volatile
 26181                           
 26182                           ; BSR set to: 58
 26183                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 26184  018870  6993               	setf	147,b	;volatile
 26185                           
 26186                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 26187  018872  0E0F               	movlw	15
 26188  018874  6FE8               	movwf	232,b	;volatile
 26189                           
 26190                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 26191  018876  0E13               	movlw	19
 26192  018878  6FDE               	movwf	222,b	;volatile
 26193                           
 26194                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 26195  01887A  0E16               	movlw	22
 26196  01887C  6F0E               	movwf	14,b	;volatile
 26197                           
 26198                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 26199  01887E  0E1E               	movlw	30
 26200  018880  6F13               	movwf	19,b	;volatile
 26201                           
 26202                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 26203  018882  0E08               	movlw	8
 26204  018884  6FC0               	movwf	192,b	;volatile
 26205                           
 26206                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 26207  018886  0E10               	movlw	16
 26208  018888  6F19               	movwf	25,b	;volatile
 26209                           
 26210                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 26211  01888A  0E09               	movlw	9
 26212  01888C  6FC1               	movwf	193,b	;volatile
 26213                           
 26214                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 26215  01888E  0E1F               	movlw	31
 26216  018890  6F15               	movwf	21,b	;volatile
 26217                           
 26218                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 26219  018892  0E13               	movlw	19
 26220  018894  6F16               	movwf	22,b	;volatile
 26221                           
 26222                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 26223  018896  0E17               	movlw	23
 26224  018898  6FE5               	movwf	229,b	;volatile
 26225                           
 26226                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 26227  01889A  0E14               	movlw	20
 26228  01889C  6FDF               	movwf	223,b	;volatile
 26229                           
 26230                           ; BSR set to: 58
 26231                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 26232  01889E  0012               	return		;funcret
 26233  0188A0                     __end_of_PIN_MANAGER_Initialize:
 26234                           	opt callstack 0
 26235                           
 26236 ;; *************** function _OSCILLATOR_Initialize *****************
 26237 ;; Defined at:
 26238 ;;		line 72 in file "mcc_generated_files/mcc.c"
 26239 ;; Parameters:    Size  Location     Type
 26240 ;;		None
 26241 ;; Auto vars:     Size  Location     Type
 26242 ;;		None
 26243 ;; Return value:  Size  Location     Type
 26244 ;;                  1  [STACK] void 
 26245 ;; Registers used:
 26246 ;;		wreg, status,2
 26247 ;; Tracked objects:
 26248 ;;		On entry : 3F/3A
 26249 ;;		On exit  : 3F/39
 26250 ;;		Unchanged: 0/0
 26251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26256 ;;Total ram usage:        0 bytes
 26257 ;; Hardware stack levels used:    1
 26258 ;; Hardware stack levels required when called:   15
 26259 ;; This function calls:
 26260 ;;		Nothing
 26261 ;; This function is called by:
 26262 ;;		_SYSTEM_Initialize
 26263 ;; This function uses a reentrant model
 26264 ;;
 26265                           
 26266                           	psect	text114
 26267  019CBA                     __ptext114:
 26268                           	opt callstack 0
 26269  019CBA                     _OSCILLATOR_Initialize:
 26270                           	opt callstack 14
 26271                           
 26272                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 26273                           
 26274                           ; BSR set to: 58
 26275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26276                           ;incstack = 0
 26277  019CBA  0E20               	movlw	32
 26278  019CBC  0139               	movlb	57	; () banked
 26279  019CBE  6FD9               	movwf	217,b	;volatile
 26280                           
 26281                           ; BSR set to: 57
 26282                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 26283  019CC0  6BDB               	clrf	219,b	;volatile
 26284                           
 26285                           ; BSR set to: 57
 26286                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 26287  019CC2  6BDD               	clrf	221,b	;volatile
 26288                           
 26289                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 26290  019CC4  0E02               	movlw	2
 26291  019CC6  6FDF               	movwf	223,b	;volatile
 26292                           
 26293                           ; BSR set to: 57
 26294                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 26295  019CC8  6BDE               	clrf	222,b	;volatile
 26296  019CCA                     l169:
 26297                           
 26298                           ; BSR set to: 57
 26299                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 26300  019CCA  B1DC               	btfsc	220,0,b	;volatile
 26301  019CCC  0012               	return	
 26302  019CCE  D7FD               	goto	l169
 26303  019CD0                     __end_of_OSCILLATOR_Initialize:
 26304                           	opt callstack 0
 26305                           
 26306 ;; *************** function _INTERRUPT_Initialize *****************
 26307 ;; Defined at:
 26308 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 26309 ;; Parameters:    Size  Location     Type
 26310 ;;		None
 26311 ;; Auto vars:     Size  Location     Type
 26312 ;;  state           1  [STACK] _Bool 
 26313 ;; Return value:  Size  Location     Type
 26314 ;;                  1  [STACK] void 
 26315 ;; Registers used:
 26316 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 26317 ;; Tracked objects:
 26318 ;;		On entry : 0/0
 26319 ;;		On exit  : 3F/39
 26320 ;;		Unchanged: 0/0
 26321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26326 ;;Total ram usage:        0 bytes
 26327 ;; Hardware stack levels used:    1
 26328 ;; Hardware stack levels required when called:   15
 26329 ;; This function calls:
 26330 ;;		Nothing
 26331 ;; This function is called by:
 26332 ;;		_SYSTEM_Initialize
 26333 ;; This function uses a reentrant model
 26334 ;;
 26335                           
 26336                           	psect	text115
 26337  018C7E                     __ptext115:
 26338                           	opt callstack 0
 26339  018C7E                     _INTERRUPT_Initialize:
 26340                           	opt callstack 0
 26341                           
 26342                           ; BSR set to: 57
 26343                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26344  018C7E  52E6               	movf	postinc1,f,c
 26345                           
 26346                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 26347                           
 26348                           ;incstack = 0
 26349  018C80  8AD2               	bsf	210,5,c	;volatile
 26350                           
 26351                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 26352  018C82  AED2               	btfss	16338,7,c	;volatile
 26353  018C84  D003               	goto	u8210
 26354  018C86  6A0C               	clrf	(btemp+11)^0,c
 26355  018C88  2A0C               	incf	(btemp+11)^0,f,c
 26356  018C8A  D001               	goto	u8228
 26357  018C8C                     u8210:
 26358  018C8C  6A0C               	clrf	(btemp+11)^0,c
 26359  018C8E                     u8228:
 26360                           
 26361                           ;stkvar	_state @ sp[(-1)+0]
 26362  018C8E  0EFF               	movlw	-1
 26363  018C90  0060  F033  FFE3   	movff	btemp+11,plusw1
 26364                           
 26365                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 26366  018C96  9ED2               	bcf	16338,7,c	;volatile
 26367                           
 26368                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 26369  018C98  0E55               	movlw	85
 26370  018C9A  6ED4               	movwf	212,c	;volatile
 26371                           
 26372                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 26373  018C9C  0EAA               	movlw	170
 26374  018C9E  6ED4               	movwf	212,c	;volatile
 26375                           
 26376                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 26377  018CA0  90D4               	bcf	212,0,c	;volatile
 26378                           
 26379                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 26380  018CA2  0138               	movlb	56	; () banked
 26381  018CA4  6B9F               	clrf	159,b	;volatile
 26382                           
 26383                           ; BSR set to: 56
 26384                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 26385  018CA6  6B9E               	clrf	158,b	;volatile
 26386                           
 26387                           ; BSR set to: 56
 26388                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 26389  018CA8  0E08               	movlw	8
 26390  018CAA  6F9D               	movwf	157,b	;volatile
 26391                           
 26392                           ; BSR set to: 56
 26393                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 26394  018CAC  0E55               	movlw	85
 26395  018CAE  6ED4               	movwf	212,c	;volatile
 26396                           
 26397                           ; BSR set to: 56
 26398                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 26399  018CB0  0EAA               	movlw	170
 26400  018CB2  6ED4               	movwf	212,c	;volatile
 26401                           
 26402                           ; BSR set to: 56
 26403                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 26404  018CB4  80D4               	bsf	212,0,c	;volatile
 26405                           
 26406                           ; BSR set to: 56
 26407                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 26408                           ;stkvar	_state @ sp[(-1)+0]
 26409  018CB6  0EFF               	movlw	-1
 26410  018CB8  B0E3               	btfsc	plusw1,0,c
 26411  018CBA  D002               	bra	u8235
 26412  018CBC  9ED2               	bcf	16338,7,c	;volatile
 26413  018CBE  D001               	bra	u8236
 26414  018CC0                     u8235:
 26415  018CC0  8ED2               	bsf	16338,7,c	;volatile
 26416  018CC2                     u8236:
 26417                           
 26418                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 26419  018CC2  0139               	movlb	57	; () banked
 26420  018CC4  8782               	bsf	130,3,b	;volatile
 26421                           
 26422                           ; BSR set to: 57
 26423                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 26424  018CC6  8382               	bsf	130,1,b	;volatile
 26425                           
 26426                           ; BSR set to: 57
 26427                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 26428  018CC8  8182               	bsf	130,0,b	;volatile
 26429                           
 26430                           ; BSR set to: 57
 26431                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 26432  018CCA  8582               	bsf	130,2,b	;volatile
 26433                           
 26434                           ; BSR set to: 57
 26435                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 26436  018CCC  8786               	bsf	134,3,b	;volatile
 26437                           
 26438                           ; BSR set to: 57
 26439                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 26440  018CCE  8586               	bsf	134,2,b	;volatile
 26441                           
 26442                           ; BSR set to: 57
 26443                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 26444  018CD0  8783               	bsf	131,3,b	;volatile
 26445                           
 26446                           ; BSR set to: 57
 26447                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 26448  018CD2  8181               	bsf	129,0,b	;volatile
 26449                           
 26450                           ; BSR set to: 57
 26451                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 26452  018CD4  9185               	bcf	133,0,b	;volatile
 26453                           
 26454                           ; BSR set to: 57
 26455                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 26456  018CD6  8189               	bsf	137,0,b	;volatile
 26457                           
 26458                           ; BSR set to: 57
 26459                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 26460  018CD8  9D88               	bcf	136,6,b	;volatile
 26461                           
 26462                           ; BSR set to: 57
 26463                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 26464  018CDA  9D86               	bcf	134,6,b	;volatile
 26465                           
 26466                           ; BSR set to: 57
 26467                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 26468  018CDC  8581               	bsf	129,2,b	;volatile
 26469                           
 26470                           ; BSR set to: 57
 26471                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 26472  018CDE  8781               	bsf	129,3,b	;volatile
 26473                           
 26474                           ; BSR set to: 57
 26475                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 26476  018CE0  52E5               	movf	postdec1,f,c
 26477  018CE2  0012               	return		;funcret
 26478  018CE4                     __end_of_INTERRUPT_Initialize:
 26479                           	opt callstack 0
 26480                           
 26481 ;; *************** function _FVR_Initialize *****************
 26482 ;; Defined at:
 26483 ;;		line 58 in file "mcc_generated_files/fvr.c"
 26484 ;; Parameters:    Size  Location     Type
 26485 ;;		None
 26486 ;; Auto vars:     Size  Location     Type
 26487 ;;		None
 26488 ;; Return value:  Size  Location     Type
 26489 ;;                  1  [STACK] void 
 26490 ;; Registers used:
 26491 ;;		wreg, status,2
 26492 ;; Tracked objects:
 26493 ;;		On entry : 3F/39
 26494 ;;		On exit  : 3F/3E
 26495 ;;		Unchanged: 0/0
 26496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26501 ;;Total ram usage:        0 bytes
 26502 ;; Hardware stack levels used:    1
 26503 ;; Hardware stack levels required when called:   15
 26504 ;; This function calls:
 26505 ;;		Nothing
 26506 ;; This function is called by:
 26507 ;;		_SYSTEM_Initialize
 26508 ;; This function uses a reentrant model
 26509 ;;
 26510                           
 26511                           	psect	text116
 26512  019D9A                     __ptext116:
 26513                           	opt callstack 0
 26514  019D9A                     _FVR_Initialize:
 26515                           	opt callstack 14
 26516                           
 26517                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 26518                           
 26519                           ; BSR set to: 57
 26520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26521                           ;incstack = 0
 26522  019D9A  0EAF               	movlw	175
 26523  019D9C  013E               	movlb	62	; () banked
 26524  019D9E  6FC1               	movwf	193,b	;volatile
 26525                           
 26526                           ; BSR set to: 62
 26527                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 26528  019DA0  0012               	return		;funcret
 26529  019DA2                     __end_of_FVR_Initialize:
 26530                           	opt callstack 0
 26531                           
 26532 ;; *************** function _EXT_INT_Initialize *****************
 26533 ;; Defined at:
 26534 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 26535 ;; Parameters:    Size  Location     Type
 26536 ;;		None
 26537 ;; Auto vars:     Size  Location     Type
 26538 ;;		None
 26539 ;; Return value:  Size  Location     Type
 26540 ;;                  1  [STACK] void 
 26541 ;; Registers used:
 26542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26543 ;; Tracked objects:
 26544 ;;		On entry : 3F/3F
 26545 ;;		On exit  : 3F/39
 26546 ;;		Unchanged: 0/0
 26547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26552 ;;Total ram usage:        0 bytes
 26553 ;; Hardware stack levels used:    1
 26554 ;; Hardware stack levels required when called:   16
 26555 ;; This function calls:
 26556 ;;		_INT0_SetInterruptHandler
 26557 ;;		_INT1_SetInterruptHandler
 26558 ;; This function is called by:
 26559 ;;		_SYSTEM_Initialize
 26560 ;; This function uses a reentrant model
 26561 ;;
 26562                           
 26563                           	psect	text117
 26564  01954A                     __ptext117:
 26565                           	opt callstack 0
 26566  01954A                     _EXT_INT_Initialize:
 26567                           	opt callstack 13
 26568                           
 26569                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 26570                           
 26571                           ; BSR set to: 62
 26572                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26573                           ;incstack = 0
 26574  01954A  0139               	movlb	57	; () banked
 26575  01954C  91A1               	bcf	161,0,b	;volatile
 26576                           
 26577                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 26578  01954E  90D2               	bcf	210,0,c	;volatile
 26579                           
 26580                           ; BSR set to: 57
 26581                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 26582  019550  0EC6               	movlw	low _INT0_DefaultInterruptHandler
 26583  019552  6EE6               	movwf	postinc1,c
 26584  019554  0E9D               	movlw	high _INT0_DefaultInterruptHandler
 26585  019556  6EE6               	movwf	postinc1,c
 26586  019558  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 26587  01955A  6EE6               	movwf	postinc1,c
 26588  01955C  EC7F  F0CC         	call	_INT0_SetInterruptHandler	;wreg free
 26589                           
 26590                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 26591  019560  0139               	movlb	57	; () banked
 26592  019562  8191               	bsf	145,0,b	;volatile
 26593                           
 26594                           ; BSR set to: 57
 26595                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 26596  019564  91A5               	bcf	165,0,b	;volatile
 26597                           
 26598                           ; BSR set to: 57
 26599                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 26600  019566  92D2               	bcf	210,1,c	;volatile
 26601                           
 26602                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 26603  019568  0EC2               	movlw	low _INT1_DefaultInterruptHandler
 26604  01956A  6EE6               	movwf	postinc1,c
 26605  01956C  0E9D               	movlw	high _INT1_DefaultInterruptHandler
 26606  01956E  6EE6               	movwf	postinc1,c
 26607  019570  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 26608  019572  6EE6               	movwf	postinc1,c
 26609  019574  EC6B  F0CC         	call	_INT1_SetInterruptHandler	;wreg free
 26610                           
 26611                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 26612  019578  0139               	movlb	57	; () banked
 26613  01957A  8195               	bsf	149,0,b	;volatile
 26614                           
 26615                           ; BSR set to: 57
 26616                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26617  01957C  0012               	return		;funcret
 26618  01957E                     __end_of_EXT_INT_Initialize:
 26619                           	opt callstack 0
 26620                           
 26621 ;; *************** function _INT1_SetInterruptHandler *****************
 26622 ;; Defined at:
 26623 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 26624 ;; Parameters:    Size  Location     Type
 26625 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26626 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 26627 ;; Auto vars:     Size  Location     Type
 26628 ;;		None
 26629 ;; Return value:  Size  Location     Type
 26630 ;;                  1  [STACK] void 
 26631 ;; Registers used:
 26632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26633 ;; Tracked objects:
 26634 ;;		On entry : 3F/39
 26635 ;;		On exit  : 0/0
 26636 ;;		Unchanged: 0/0
 26637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26642 ;;Total ram usage:        0 bytes
 26643 ;; Hardware stack levels used:    1
 26644 ;; Hardware stack levels required when called:   15
 26645 ;; This function calls:
 26646 ;;		Nothing
 26647 ;; This function is called by:
 26648 ;;		_EXT_INT_Initialize
 26649 ;;		_start_switch_handler
 26650 ;; This function uses a reentrant model
 26651 ;;
 26652                           
 26653                           	psect	text118
 26654  0198D6                     __ptext118:
 26655                           	opt callstack 0
 26656  0198D6                     _INT1_SetInterruptHandler:
 26657                           	opt callstack 14
 26658                           
 26659                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 26660                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26661                           
 26662                           ; BSR set to: 57
 26663                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26664                           ;incstack = 0
 26665  0198D6  50E1               	movf	fsr1l,w,c
 26666  0198D8  0FFD               	addlw	-3
 26667  0198DA  6ED9               	movwf	fsr2l,c
 26668  0198DC  50E2               	movf	fsr1h,w,c
 26669  0198DE  6EDA               	movwf	fsr2h,c
 26670  0198E0  0EFF               	movlw	255
 26671  0198E2  22DA               	addwfc	fsr2h,f,c
 26672  0198E4  006F FF78  F0C1    	movff	postinc2,_INT1_InterruptHandler
 26673  0198EA  006F FF78  F0C2    	movff	postinc2,_INT1_InterruptHandler+1
 26674  0198F0  006F FF74  F0C3    	movff	postdec2,_INT1_InterruptHandler+2
 26675                           
 26676                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 26677  0198F6  52E5               	movf	postdec1,f,c
 26678  0198F8  52E5               	movf	postdec1,f,c
 26679  0198FA  52E5               	movf	postdec1,f,c
 26680  0198FC  0012               	return		;funcret
 26681  0198FE                     __end_of_INT1_SetInterruptHandler:
 26682                           	opt callstack 0
 26683                           
 26684 ;; *************** function _INT0_SetInterruptHandler *****************
 26685 ;; Defined at:
 26686 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 26687 ;; Parameters:    Size  Location     Type
 26688 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26689 ;;		 -> INT0_DefaultInterruptHandler(1), 
 26690 ;; Auto vars:     Size  Location     Type
 26691 ;;		None
 26692 ;; Return value:  Size  Location     Type
 26693 ;;                  1  [STACK] void 
 26694 ;; Registers used:
 26695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26696 ;; Tracked objects:
 26697 ;;		On entry : 3F/39
 26698 ;;		On exit  : 0/0
 26699 ;;		Unchanged: 0/0
 26700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26705 ;;Total ram usage:        0 bytes
 26706 ;; Hardware stack levels used:    1
 26707 ;; Hardware stack levels required when called:   15
 26708 ;; This function calls:
 26709 ;;		Nothing
 26710 ;; This function is called by:
 26711 ;;		_EXT_INT_Initialize
 26712 ;; This function uses a reentrant model
 26713 ;;
 26714                           
 26715                           	psect	text119
 26716  0198FE                     __ptext119:
 26717                           	opt callstack 0
 26718  0198FE                     _INT0_SetInterruptHandler:
 26719                           	opt callstack 13
 26720                           
 26721                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 26722                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26723                           
 26724                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26725                           ;incstack = 0
 26726  0198FE  50E1               	movf	fsr1l,w,c
 26727  019900  0FFD               	addlw	-3
 26728  019902  6ED9               	movwf	fsr2l,c
 26729  019904  50E2               	movf	fsr1h,w,c
 26730  019906  6EDA               	movwf	fsr2h,c
 26731  019908  0EFF               	movlw	255
 26732  01990A  22DA               	addwfc	fsr2h,f,c
 26733  01990C  006F FF78  F0C4    	movff	postinc2,_INT0_InterruptHandler
 26734  019912  006F FF78  F0C5    	movff	postinc2,_INT0_InterruptHandler+1
 26735  019918  006F FF74  F0C6    	movff	postdec2,_INT0_InterruptHandler+2
 26736                           
 26737                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 26738  01991E  52E5               	movf	postdec1,f,c
 26739  019920  52E5               	movf	postdec1,f,c
 26740  019922  52E5               	movf	postdec1,f,c
 26741  019924  0012               	return		;funcret
 26742  019926                     __end_of_INT0_SetInterruptHandler:
 26743                           	opt callstack 0
 26744                           
 26745 ;; *************** function _DMA2_Initialize *****************
 26746 ;; Defined at:
 26747 ;;		line 61 in file "mcc_generated_files/dma2.c"
 26748 ;; Parameters:    Size  Location     Type
 26749 ;;		None
 26750 ;; Auto vars:     Size  Location     Type
 26751 ;;		None
 26752 ;; Return value:  Size  Location     Type
 26753 ;;                  1  [STACK] void 
 26754 ;; Registers used:
 26755 ;;		wreg, status,2
 26756 ;; Tracked objects:
 26757 ;;		On entry : 3F/3D
 26758 ;;		On exit  : 3F/3B
 26759 ;;		Unchanged: 0/0
 26760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26765 ;;Total ram usage:        0 bytes
 26766 ;; Hardware stack levels used:    1
 26767 ;; Hardware stack levels required when called:   15
 26768 ;; This function calls:
 26769 ;;		Nothing
 26770 ;; This function is called by:
 26771 ;;		_SYSTEM_Initialize
 26772 ;; This function uses a reentrant model
 26773 ;;
 26774                           
 26775                           	psect	text120
 26776  018EC4                     __ptext120:
 26777                           	opt callstack 0
 26778  018EC4                     _DMA2_Initialize:
 26779                           	opt callstack 14
 26780                           
 26781                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 26782                           
 26783                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26784                           ;incstack = 0
 26785  018EC4  0E00               	movlw	0
 26786  018EC6  013B               	movlb	59	; () banked
 26787  018EC8  6FD9               	movwf	217,b	;volatile
 26788  018ECA  0E10               	movlw	16
 26789  018ECC  6FDA               	movwf	218,b	;volatile
 26790  018ECE  0E00               	movlw	0
 26791  018ED0  6FDB               	movwf	219,b	;volatile
 26792                           
 26793                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 26794  018ED2  0E3F               	movlw	63
 26795  018ED4  6FD1               	movwf	209,b	;volatile
 26796  018ED6  0EBB               	movlw	187
 26797  018ED8  6FD0               	movwf	208,b	;volatile
 26798                           
 26799                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 26800  018EDA  0E03               	movlw	3
 26801  018EDC  6FDD               	movwf	221,b	;volatile
 26802                           
 26803                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 26804  018EDE  0E00               	movlw	0
 26805  018EE0  6FD8               	movwf	216,b	;volatile
 26806  018EE2  0E01               	movlw	1
 26807  018EE4  6FD7               	movwf	215,b	;volatile
 26808                           
 26809                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 26810  018EE6  0E00               	movlw	0
 26811  018EE8  6FCF               	movwf	207,b	;volatile
 26812  018EEA  0E01               	movlw	1
 26813  018EEC  6FCE               	movwf	206,b	;volatile
 26814                           
 26815                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 26816  018EEE  0E1C               	movlw	28
 26817  018EF0  6FDF               	movwf	223,b	;volatile
 26818                           
 26819                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 26820  018EF2  0E3D               	movlw	61
 26821  018EF4  6FDE               	movwf	222,b	;volatile
 26822                           
 26823                           ; BSR set to: 59
 26824                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 26825  018EF6  0139               	movlb	57	; () banked
 26826  018EF8  97A5               	bcf	165,3,b	;volatile
 26827                           
 26828                           ; BSR set to: 57
 26829                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 26830  018EFA  95A5               	bcf	165,2,b	;volatile
 26831                           
 26832                           ; BSR set to: 57
 26833                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 26834  018EFC  9BA5               	bcf	165,5,b	;volatile
 26835                           
 26836                           ; BSR set to: 57
 26837                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 26838  018EFE  99A5               	bcf	165,4,b	;volatile
 26839                           
 26840                           ; BSR set to: 57
 26841                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 26842  018F00  9795               	bcf	149,3,b	;volatile
 26843                           
 26844                           ; BSR set to: 57
 26845                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 26846  018F02  9595               	bcf	149,2,b	;volatile
 26847                           
 26848                           ; BSR set to: 57
 26849                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 26850  018F04  9B95               	bcf	149,5,b	;volatile
 26851                           
 26852                           ; BSR set to: 57
 26853                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 26854  018F06  9995               	bcf	149,4,b	;volatile
 26855  018F08  9ED2               	bcf	16338,7,c	;# 
 26856  018F0A  0139               	banksel	14831	;# 
 26857  018F0C  0E55               	movlw	85	;# 
 26858  018F0E  6FEF               	movwf	14831,b	;# 
 26859  018F10  0EAA               	movlw	170	;# 
 26860  018F12  6FEF               	movwf	14831,b	;# 
 26861  018F14  81EF               	bsf	14831,0,b	;# 
 26862  018F16  8ED2               	bsf	16338,7,c	;# 
 26863                           
 26864                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 26865  018F18  013B               	movlb	59	; () banked
 26866  018F1A  6BDC               	clrf	220,b	;volatile
 26867                           
 26868                           ; BSR set to: 59
 26869                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26870  018F1C  0012               	return		;funcret
 26871  018F1E                     __end_of_DMA2_Initialize:
 26872                           	opt callstack 0
 26873                           
 26874 ;; *************** function _DMA1_Initialize *****************
 26875 ;; Defined at:
 26876 ;;		line 86 in file "mcc_generated_files/dma1.c"
 26877 ;; Parameters:    Size  Location     Type
 26878 ;;		None
 26879 ;; Auto vars:     Size  Location     Type
 26880 ;;		None
 26881 ;; Return value:  Size  Location     Type
 26882 ;;                  1  [STACK] void 
 26883 ;; Registers used:
 26884 ;;		wreg, status,2
 26885 ;; Tracked objects:
 26886 ;;		On entry : 3F/3B
 26887 ;;		On exit  : 3F/3B
 26888 ;;		Unchanged: 0/0
 26889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26894 ;;Total ram usage:        0 bytes
 26895 ;; Hardware stack levels used:    1
 26896 ;; Hardware stack levels required when called:   15
 26897 ;; This function calls:
 26898 ;;		Nothing
 26899 ;; This function is called by:
 26900 ;;		_SYSTEM_Initialize
 26901 ;; This function uses a reentrant model
 26902 ;;
 26903                           
 26904                           	psect	text121
 26905  018B3E                     __ptext121:
 26906                           	opt callstack 0
 26907  018B3E                     _DMA1_Initialize:
 26908                           	opt callstack 14
 26909                           
 26910                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 26911                           
 26912                           ; BSR set to: 59
 26913                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26914                           ;incstack = 0
 26915  018B3E  0E00               	movlw	0
 26916  018B40  013B               	movlb	59	; () banked
 26917  018B42  6FF9               	movwf	249,b	;volatile
 26918  018B44  0E10               	movlw	16
 26919  018B46  6FFA               	movwf	250,b	;volatile
 26920  018B48  0E00               	movlw	0
 26921  018B4A  6FFB               	movwf	251,b	;volatile
 26922                           
 26923                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 26924  018B4C  0E3D               	movlw	61
 26925  018B4E  6FF1               	movwf	241,b	;volatile
 26926  018B50  0E11               	movlw	17
 26927  018B52  6FF0               	movwf	240,b	;volatile
 26928                           
 26929                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 26930  018B54  0E03               	movlw	3
 26931  018B56  6FFD               	movwf	253,b	;volatile
 26932                           
 26933                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 26934  018B58  0E00               	movlw	0
 26935  018B5A  6FF8               	movwf	248,b	;volatile
 26936  018B5C  0E01               	movlw	1
 26937  018B5E  6FF7               	movwf	247,b	;volatile
 26938                           
 26939                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 26940  018B60  0E00               	movlw	0
 26941  018B62  6FEF               	movwf	239,b	;volatile
 26942  018B64  0E01               	movlw	1
 26943  018B66  6FEE               	movwf	238,b	;volatile
 26944                           
 26945                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 26946  018B68  0E15               	movlw	21
 26947  018B6A  6FFF               	movwf	255,b	;volatile
 26948                           
 26949                           ; BSR set to: 59
 26950                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 26951  018B6C  6BFE               	clrf	254,b	;volatile
 26952                           
 26953                           ; BSR set to: 59
 26954                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 26955  018B6E  0139               	movlb	57	; () banked
 26956  018B70  93A2               	bcf	162,1,b	;volatile
 26957                           
 26958                           ; BSR set to: 57
 26959                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 26960  018B72  91A2               	bcf	162,0,b	;volatile
 26961                           
 26962                           ; BSR set to: 57
 26963                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 26964  018B74  97A2               	bcf	162,3,b	;volatile
 26965                           
 26966                           ; BSR set to: 57
 26967                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 26968  018B76  95A2               	bcf	162,2,b	;volatile
 26969                           
 26970                           ; BSR set to: 57
 26971                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 26972  018B78  8392               	bsf	146,1,b	;volatile
 26973                           
 26974                           ; BSR set to: 57
 26975                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 26976  018B7A  8192               	bsf	146,0,b	;volatile
 26977                           
 26978                           ; BSR set to: 57
 26979                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 26980  018B7C  8792               	bsf	146,3,b	;volatile
 26981                           
 26982                           ; BSR set to: 57
 26983                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 26984  018B7E  8592               	bsf	146,2,b	;volatile
 26985                           
 26986                           ; BSR set to: 57
 26987                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 26988  018B80  6BF1               	clrf	241,b	;volatile
 26989                           
 26990                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 26991  018B82  0E01               	movlw	1
 26992  018B84  6FF2               	movwf	242,b	;volatile
 26993                           
 26994                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 26995  018B86  0E04               	movlw	4
 26996  018B88  6FF3               	movwf	243,b	;volatile
 26997                           
 26998                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 26999  018B8A  0E02               	movlw	2
 27000  018B8C  6FF4               	movwf	244,b	;volatile
 27001                           
 27002                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 27003  018B8E  0E03               	movlw	3
 27004  018B90  6FF7               	movwf	247,b	;volatile
 27005  018B92  9ED2               	bcf	16338,7,c	;# 
 27006  018B94  0139               	banksel	14831	;# 
 27007  018B96  0E55               	movlw	85	;# 
 27008  018B98  6FEF               	movwf	14831,b	;# 
 27009  018B9A  0EAA               	movlw	170	;# 
 27010  018B9C  6FEF               	movwf	14831,b	;# 
 27011  018B9E  81EF               	bsf	14831,0,b	;# 
 27012  018BA0  8ED2               	bsf	16338,7,c	;# 
 27013                           
 27014                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 27015  018BA2  013B               	movlb	59	; () banked
 27016  018BA4  6BFC               	clrf	252,b	;volatile
 27017                           
 27018                           ; BSR set to: 59
 27019                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27020  018BA6  0012               	return		;funcret
 27021  018BA8                     __end_of_DMA1_Initialize:
 27022                           	opt callstack 0
 27023                           
 27024 ;; *************** function _CLKREF_Initialize *****************
 27025 ;; Defined at:
 27026 ;;		line 58 in file "mcc_generated_files/clkref.c"
 27027 ;; Parameters:    Size  Location     Type
 27028 ;;		None
 27029 ;; Auto vars:     Size  Location     Type
 27030 ;;		None
 27031 ;; Return value:  Size  Location     Type
 27032 ;;                  1  [STACK] void 
 27033 ;; Registers used:
 27034 ;;		wreg, status,2
 27035 ;; Tracked objects:
 27036 ;;		On entry : 3F/3B
 27037 ;;		On exit  : 3F/3C
 27038 ;;		Unchanged: 0/0
 27039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27044 ;;Total ram usage:        0 bytes
 27045 ;; Hardware stack levels used:    1
 27046 ;; Hardware stack levels required when called:   15
 27047 ;; This function calls:
 27048 ;;		Nothing
 27049 ;; This function is called by:
 27050 ;;		_SYSTEM_Initialize
 27051 ;; This function uses a reentrant model
 27052 ;;
 27053                           
 27054                           	psect	text122
 27055  019D42                     __ptext122:
 27056                           	opt callstack 0
 27057  019D42                     _CLKREF_Initialize:
 27058                           	opt callstack 14
 27059                           
 27060                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 27061                           
 27062                           ; BSR set to: 59
 27063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27064                           ;incstack = 0
 27065  019D42  013C               	movlb	60	; () banked
 27066  019D44  6BE6               	clrf	230,b	;volatile
 27067                           
 27068                           ; BSR set to: 60
 27069                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 27070  019D46  0E94               	movlw	148
 27071  019D48  6FE5               	movwf	229,b	;volatile
 27072                           
 27073                           ; BSR set to: 60
 27074                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27075  019D4A  0012               	return		;funcret
 27076  019D4C                     __end_of_CLKREF_Initialize:
 27077                           	opt callstack 0
 27078                           
 27079 ;; *************** function _ADCC_Initialize *****************
 27080 ;; Defined at:
 27081 ;;		line 65 in file "mcc_generated_files/adcc.c"
 27082 ;; Parameters:    Size  Location     Type
 27083 ;;		None
 27084 ;; Auto vars:     Size  Location     Type
 27085 ;;		None
 27086 ;; Return value:  Size  Location     Type
 27087 ;;                  1  [STACK] void 
 27088 ;; Registers used:
 27089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 27090 ;; Tracked objects:
 27091 ;;		On entry : 3F/3E
 27092 ;;		On exit  : 0/0
 27093 ;;		Unchanged: 0/0
 27094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27099 ;;Total ram usage:        0 bytes
 27100 ;; Hardware stack levels used:    1
 27101 ;; Hardware stack levels required when called:   16
 27102 ;; This function calls:
 27103 ;;		_ADCC_SetADIInterruptHandler
 27104 ;;		_ADCC_SetADTIInterruptHandler
 27105 ;; This function is called by:
 27106 ;;		_SYSTEM_Initialize
 27107 ;; This function uses a reentrant model
 27108 ;;
 27109                           
 27110                           	psect	text123
 27111  018BA8                     __ptext123:
 27112                           	opt callstack 0
 27113  018BA8                     _ADCC_Initialize:
 27114                           	opt callstack 13
 27115                           
 27116                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 27117                           
 27118                           ; BSR set to: 60
 27119                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27120                           ;incstack = 0
 27121  018BA8  013E               	movlb	62	; () banked
 27122  018BAA  6BDE               	clrf	222,b	;volatile
 27123                           
 27124                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 27125  018BAC  6BDF               	clrf	223,b	;volatile
 27126                           
 27127                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 27128  018BAE  6BE0               	clrf	224,b	;volatile
 27129                           
 27130                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 27131  018BB0  6BE1               	clrf	225,b	;volatile
 27132                           
 27133                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 27134  018BB2  6BE4               	clrf	228,b	;volatile
 27135                           
 27136                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 27137  018BB4  6BE5               	clrf	229,b	;volatile
 27138                           
 27139                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 27140  018BB6  6BEA               	clrf	234,b	;volatile
 27141                           
 27142                           ; BSR set to: 62
 27143                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 27144  018BB8  0E40               	movlw	64
 27145  018BBA  6FEC               	movwf	236,b	;volatile
 27146                           
 27147                           ; BSR set to: 62
 27148                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 27149  018BBC  6BF1               	clrf	241,b	;volatile
 27150                           
 27151                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 27152  018BBE  0E20               	movlw	32
 27153  018BC0  6FF3               	movwf	243,b	;volatile
 27154                           
 27155                           ; BSR set to: 62
 27156                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 27157  018BC2  6BF4               	clrf	244,b	;volatile
 27158                           
 27159                           ; BSR set to: 62
 27160                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 27161  018BC4  6BF5               	clrf	245,b	;volatile
 27162                           
 27163                           ; BSR set to: 62
 27164                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 27165  018BC6  6BF6               	clrf	246,b	;volatile
 27166                           
 27167                           ; BSR set to: 62
 27168                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 27169  018BC8  6BF7               	clrf	247,b	;volatile
 27170                           
 27171                           ; BSR set to: 62
 27172                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 27173  018BCA  6BF9               	clrf	249,b	;volatile
 27174                           
 27175                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 27176  018BCC  0E5B               	movlw	91
 27177  018BCE  6FFA               	movwf	250,b	;volatile
 27178                           
 27179                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 27180  018BD0  0E27               	movlw	39
 27181  018BD2  6FFB               	movwf	251,b	;volatile
 27182                           
 27183                           ; BSR set to: 62
 27184                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 27185  018BD4  6BFC               	clrf	252,b	;volatile
 27186                           
 27187                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 27188  018BD6  0E02               	movlw	2
 27189  018BD8  6FFD               	movwf	253,b	;volatile
 27190                           
 27191                           ; BSR set to: 62
 27192                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 27193  018BDA  6BFE               	clrf	254,b	;volatile
 27194                           
 27195                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 27196  018BDC  0E07               	movlw	7
 27197  018BDE  6FFF               	movwf	255,b	;volatile
 27198                           
 27199                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 27200  018BE0  0E84               	movlw	132
 27201  018BE2  6FF8               	movwf	248,b	;volatile
 27202                           
 27203                           ; BSR set to: 62
 27204                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 27205  018BE4  0139               	movlb	57	; () banked
 27206  018BE6  95A1               	bcf	161,2,b	;volatile
 27207                           
 27208                           ; BSR set to: 57
 27209                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 27210  018BE8  8591               	bsf	145,2,b	;volatile
 27211                           
 27212                           ; BSR set to: 57
 27213                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 27214  018BEA  0EC8               	movlw	low _ADCC_DefaultInterruptHandler
 27215  018BEC  6EE6               	movwf	postinc1,c
 27216  018BEE  0E9D               	movlw	high _ADCC_DefaultInterruptHandler
 27217  018BF0  6EE6               	movwf	postinc1,c
 27218  018BF2  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 27219  018BF4  6EE6               	movwf	postinc1,c
 27220  018BF6  ECA7  F0CC         	call	_ADCC_SetADIInterruptHandler	;wreg free
 27221                           
 27222                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 27223  018BFA  0139               	movlb	57	; () banked
 27224  018BFC  97A1               	bcf	161,3,b	;volatile
 27225                           
 27226                           ; BSR set to: 57
 27227                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 27228  018BFE  8791               	bsf	145,3,b	;volatile
 27229                           
 27230                           ; BSR set to: 57
 27231                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 27232  018C00  0EC8               	movlw	low _ADCC_DefaultInterruptHandler
 27233  018C02  6EE6               	movwf	postinc1,c
 27234  018C04  0E9D               	movlw	high _ADCC_DefaultInterruptHandler
 27235  018C06  6EE6               	movwf	postinc1,c
 27236  018C08  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 27237  018C0A  6EE6               	movwf	postinc1,c
 27238  018C0C  EC93  F0CC         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 27239                           
 27240                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27241  018C10  0012               	return		;funcret
 27242  018C12                     __end_of_ADCC_Initialize:
 27243                           	opt callstack 0
 27244                           
 27245 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 27246 ;; Defined at:
 27247 ;;		line 336 in file "mcc_generated_files/adcc.c"
 27248 ;; Parameters:    Size  Location     Type
 27249 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27250 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 27251 ;; Auto vars:     Size  Location     Type
 27252 ;;		None
 27253 ;; Return value:  Size  Location     Type
 27254 ;;                  1  [STACK] void 
 27255 ;; Registers used:
 27256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27257 ;; Tracked objects:
 27258 ;;		On entry : 0/0
 27259 ;;		On exit  : 0/0
 27260 ;;		Unchanged: 0/0
 27261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27266 ;;Total ram usage:        0 bytes
 27267 ;; Hardware stack levels used:    1
 27268 ;; Hardware stack levels required when called:   15
 27269 ;; This function calls:
 27270 ;;		Nothing
 27271 ;; This function is called by:
 27272 ;;		_ADCC_Initialize
 27273 ;;		_start_adc_scan
 27274 ;; This function uses a reentrant model
 27275 ;;
 27276                           
 27277                           	psect	text124
 27278  019926                     __ptext124:
 27279                           	opt callstack 0
 27280  019926                     _ADCC_SetADTIInterruptHandler:
 27281                           	opt callstack 14
 27282                           
 27283                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 27284                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27285                           
 27286                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27287                           ;incstack = 0
 27288  019926  50E1               	movf	fsr1l,w,c
 27289  019928  0FFD               	addlw	-3
 27290  01992A  6ED9               	movwf	fsr2l,c
 27291  01992C  50E2               	movf	fsr1h,w,c
 27292  01992E  6EDA               	movwf	fsr2h,c
 27293  019930  0EFF               	movlw	255
 27294  019932  22DA               	addwfc	fsr2h,f,c
 27295  019934  006F FF78  F0B2    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 27296  01993A  006F FF78  F0B3    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 27297  019940  006F FF74  F0B4    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 27298                           
 27299                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 27300  019946  52E5               	movf	postdec1,f,c
 27301  019948  52E5               	movf	postdec1,f,c
 27302  01994A  52E5               	movf	postdec1,f,c
 27303  01994C  0012               	return		;funcret
 27304  01994E                     __end_of_ADCC_SetADTIInterruptHandler:
 27305                           	opt callstack 0
 27306                           
 27307 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 27308 ;; Defined at:
 27309 ;;		line 323 in file "mcc_generated_files/adcc.c"
 27310 ;; Parameters:    Size  Location     Type
 27311 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27312 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 27313 ;; Auto vars:     Size  Location     Type
 27314 ;;		None
 27315 ;; Return value:  Size  Location     Type
 27316 ;;                  1  [STACK] void 
 27317 ;; Registers used:
 27318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27319 ;; Tracked objects:
 27320 ;;		On entry : 6/0
 27321 ;;		On exit  : 0/0
 27322 ;;		Unchanged: 0/0
 27323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27328 ;;Total ram usage:        0 bytes
 27329 ;; Hardware stack levels used:    1
 27330 ;; Hardware stack levels required when called:   15
 27331 ;; This function calls:
 27332 ;;		Nothing
 27333 ;; This function is called by:
 27334 ;;		_ADCC_Initialize
 27335 ;;		_start_adc_scan
 27336 ;; This function uses a reentrant model
 27337 ;;
 27338                           
 27339                           	psect	text125
 27340  01994E                     __ptext125:
 27341                           	opt callstack 0
 27342  01994E                     _ADCC_SetADIInterruptHandler:
 27343                           	opt callstack 14
 27344                           
 27345                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 27346                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27347                           
 27348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27349                           ;incstack = 0
 27350  01994E  50E1               	movf	fsr1l,w,c
 27351  019950  0FFD               	addlw	-3
 27352  019952  6ED9               	movwf	fsr2l,c
 27353  019954  50E2               	movf	fsr1h,w,c
 27354  019956  6EDA               	movwf	fsr2h,c
 27355  019958  0EFF               	movlw	255
 27356  01995A  22DA               	addwfc	fsr2h,f,c
 27357  01995C  006F FF78  F0B5    	movff	postinc2,_ADCC_ADI_InterruptHandler
 27358  019962  006F FF78  F0B6    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 27359  019968  006F FF74  F0B7    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 27360                           
 27361                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 27362  01996E  52E5               	movf	postdec1,f,c
 27363  019970  52E5               	movf	postdec1,f,c
 27364  019972  52E5               	movf	postdec1,f,c
 27365  019974  0012               	return		;funcret
 27366  019976                     __end_of_ADCC_SetADIInterruptHandler:
 27367                           	opt callstack 0
 27368                           
 27369 ;; *************** function _INT1_ISR *****************
 27370 ;; Defined at:
 27371 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 27372 ;; Parameters:    Size  Location     Type
 27373 ;;		None
 27374 ;; Auto vars:     Size  Location     Type
 27375 ;;		None
 27376 ;; Return value:  Size  Location     Type
 27377 ;;                  1    wreg      void 
 27378 ;; Registers used:
 27379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 27380 ;; Tracked objects:
 27381 ;;		On entry : 0/0
 27382 ;;		On exit  : 0/0
 27383 ;;		Unchanged: 0/0
 27384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27387 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27388 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27389 ;;Total ram usage:        4 bytes
 27390 ;; Hardware stack levels used:    1
 27391 ;; Hardware stack levels required when called:    5
 27392 ;; This function calls:
 27393 ;;		_INT1_CallBack
 27394 ;; This function is called by:
 27395 ;;		Interrupt level 1
 27396 ;; This function uses a non-reentrant model
 27397 ;;
 27398                           
 27399                           	psect	text126
 27400  019434                     __ptext126:
 27401                           	opt callstack 0
 27402  019434                     _INT1_ISR:
 27403                           	opt callstack 12
 27404                           
 27405                           ;incstack = 0
 27406  019434  006F FF60  F03E    	movff	status,??_INT1_ISR
 27407  01943A  0060  F004  F03F   	movff	btemp,??_INT1_ISR+1
 27408  019440  0060  F02C  F040   	movff	btemp+10,??_INT1_ISR+2
 27409  019446  0060  F030  F041   	movff	btemp+11,??_INT1_ISR+3
 27410  01944C  EE16  F061         	lfsr	1,___intlo_sp
 27411                           
 27412                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 27413  019450  0139               	movlb	57	; () banked
 27414  019452  91A5               	bcf	165,0,b	;volatile
 27415                           
 27416                           ; BSR set to: 57
 27417                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 27418  019454  EC30  F0CD         	call	_INT1_CallBack	;wreg free
 27419  019458  0060  F104  F00C   	movff	??_INT1_ISR+3,btemp+11
 27420  01945E  0060  F100  F00B   	movff	??_INT1_ISR+2,btemp+10
 27421  019464  0060  F0FC  F001   	movff	??_INT1_ISR+1,btemp
 27422  01946A  0060  F0FB  FFD8   	movff	??_INT1_ISR,status
 27423  019470  0011               	retfie		f
 27424  019472                     __end_of_INT1_ISR:
 27425                           	opt callstack 0
 27426                           
 27427 ;; *************** function _INT1_CallBack *****************
 27428 ;; Defined at:
 27429 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 27430 ;; Parameters:    Size  Location     Type
 27431 ;;		None
 27432 ;; Auto vars:     Size  Location     Type
 27433 ;;		None
 27434 ;; Return value:  Size  Location     Type
 27435 ;;                  1  [STACK] void 
 27436 ;; Registers used:
 27437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 27438 ;; Tracked objects:
 27439 ;;		On entry : 3F/39
 27440 ;;		On exit  : 0/0
 27441 ;;		Unchanged: 0/0
 27442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27447 ;;Total ram usage:        0 bytes
 27448 ;; Hardware stack levels used:    1
 27449 ;; Hardware stack levels required when called:    4
 27450 ;; This function calls:
 27451 ;;		Absolute function
 27452 ;;		_INT1_DefaultInterruptHandler
 27453 ;;		_switch_handler
 27454 ;; This function is called by:
 27455 ;;		_INT1_ISR
 27456 ;; This function uses a reentrant model
 27457 ;;
 27458                           
 27459                           	psect	text127
 27460  019A60                     __ptext127:
 27461                           	opt callstack 0
 27462  019A60                     _INT1_CallBack:
 27463                           	opt callstack 12
 27464                           
 27465                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 27466                           
 27467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27468                           ;incstack = 0
 27469  019A60  0100               	movlb	0	; () banked
 27470  019A62  51C1               	movf	_INT1_InterruptHandler& (0+255),w,b
 27471  019A64  11C2               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 27472  019A66  11C3               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 27473  019A68  B4D8               	btfsc	status,2,c
 27474  019A6A  0012               	return	
 27475                           
 27476                           ; BSR set to: 0
 27477                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 27478  019A6C  D801               	call	u875_28
 27479  019A6E  0012               	return	
 27480  019A70                     u875_28:
 27481  019A70  0005               	push	
 27482  019A72  6EFA               	movwf	pclath,c
 27483  019A74  51C1               	movf	_INT1_InterruptHandler& (0+255),w,b
 27484  019A76  6EFD               	movwf	tosl,c
 27485  019A78  51C2               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 27486  019A7A  6EFE               	movwf	tosh,c
 27487  019A7C  51C3               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 27488  019A7E  6EFF               	movwf	tosu,c
 27489  019A80  50FA               	movf	pclath,w,c
 27490  019A82  0012               	return		;indir
 27491  019A84                     __end_of_INT1_CallBack:
 27492                           	opt callstack 0
 27493                           
 27494 ;; *************** function _INT1_DefaultInterruptHandler *****************
 27495 ;; Defined at:
 27496 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 27497 ;; Parameters:    Size  Location     Type
 27498 ;;		None
 27499 ;; Auto vars:     Size  Location     Type
 27500 ;;		None
 27501 ;; Return value:  Size  Location     Type
 27502 ;;                  1  [STACK] void 
 27503 ;; Registers used:
 27504 ;;		None
 27505 ;; Tracked objects:
 27506 ;;		On entry : 3F/0
 27507 ;;		On exit  : 0/0
 27508 ;;		Unchanged: 0/0
 27509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27514 ;;Total ram usage:        0 bytes
 27515 ;; Hardware stack levels used:    1
 27516 ;; Hardware stack levels required when called:    3
 27517 ;; This function calls:
 27518 ;;		Nothing
 27519 ;; This function is called by:
 27520 ;;		_EXT_INT_Initialize
 27521 ;;		_INT1_CallBack
 27522 ;; This function uses a reentrant model
 27523 ;;
 27524                           
 27525                           	psect	text128
 27526  019DC2                     __ptext128:
 27527                           	opt callstack 0
 27528  019DC2                     _INT1_DefaultInterruptHandler:
 27529                           	opt callstack 12
 27530                           
 27531                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27532                           
 27533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27534                           ;incstack = 0
 27535  019DC2  0012               	return		;funcret
 27536  019DC4                     __end_of_INT1_DefaultInterruptHandler:
 27537                           	opt callstack 0
 27538                           
 27539 ;; *************** function _switch_handler *****************
 27540 ;; Defined at:
 27541 ;;		line 58 in file "dio.c"
 27542 ;; Parameters:    Size  Location     Type
 27543 ;;		None
 27544 ;; Auto vars:     Size  Location     Type
 27545 ;;  i               1  [STACK] unsigned char 
 27546 ;;  sw_value        1  [STACK] unsigned char 
 27547 ;; Return value:  Size  Location     Type
 27548 ;;                  1  [STACK] void 
 27549 ;; Registers used:
 27550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 27551 ;; Tracked objects:
 27552 ;;		On entry : 3F/0
 27553 ;;		On exit  : 0/0
 27554 ;;		Unchanged: 0/0
 27555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27560 ;;Total ram usage:        0 bytes
 27561 ;; Hardware stack levels used:    1
 27562 ;; Hardware stack levels required when called:    3
 27563 ;; This function calls:
 27564 ;;		Nothing
 27565 ;; This function is called by:
 27566 ;;		_start_switch_handler
 27567 ;;		_INT1_CallBack
 27568 ;; This function uses a reentrant model
 27569 ;;
 27570                           
 27571                           	psect	text129
 27572  01763E                     __ptext129:
 27573                           	opt callstack 0
 27574  01763E                     _switch_handler:
 27575                           	opt callstack 0
 27576                           
 27577                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27578  01763E  52E6               	movf	postinc1,f,c
 27579  017640  52E6               	movf	postinc1,f,c
 27580                           
 27581                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 27582                           ;stkvar	_i @ sp[(-2)+0]
 27583                           
 27584                           ;incstack = 0
 27585  017642  0EFE               	movlw	-2
 27586  017644  6AE3               	clrf	plusw1,c
 27587  017646  9EBD               	bcf	189,7,c	;volatile
 27588                           
 27589                           ;dio.c: 72:  __nop();
 27590  017648  F000               	nop	
 27591                           
 27592                           ;dio.c: 73:  __nop();
 27593  01764A  F000               	nop	
 27594                           
 27595                           ;dio.c: 74:  __nop();
 27596  01764C  F000               	nop	
 27597  01764E  D019               	goto	l9518
 27598  017650                     l9506:
 27599                           
 27600                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 27601  017650  A6CF               	btfss	207,3,c	;volatile
 27602  017652  D011               	goto	u853_20
 27603  017654  D00D               	goto	u853_21
 27604  017656                     u850_28:
 27605                           
 27606                           ;stkvar	_sw_value @ sp[(-2)+1]
 27607  017656  0EFF               	movlw	-1
 27608  017658  0060  F033  FFE3   	movff	btemp+11,plusw1
 27609                           
 27610                           ;dio.c: 80:    break;
 27611  01765E  D027               	goto	l9520
 27612  017660                     l9508:
 27613                           
 27614                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 27615  017660  A4CF               	btfss	207,2,c	;volatile
 27616  017662  D009               	goto	u853_20
 27617  017664  D005               	goto	u853_21
 27618  017666                     l9510:
 27619                           
 27620                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 27621  017666  A2CF               	btfss	207,1,c	;volatile
 27622  017668  D006               	goto	u853_20
 27623  01766A  D002               	goto	u853_21
 27624  01766C                     l9512:
 27625                           
 27626                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 27627  01766C  A0CF               	btfss	207,0,c	;volatile
 27628  01766E  D003               	goto	u853_20
 27629  017670                     u853_21:
 27630  017670  6A0C               	clrf	(btemp+11)^0,c
 27631  017672  2A0C               	incf	(btemp+11)^0,f,c
 27632  017674  D7F0               	goto	u850_28
 27633  017676                     u853_20:
 27634  017676  6A0C               	clrf	(btemp+11)^0,c
 27635  017678  D7EE               	goto	u850_28
 27636  01767A                     l9514:
 27637                           
 27638                           ;dio.c: 91:    sw_value = 1;
 27639                           ;stkvar	_sw_value @ sp[(-2)+1]
 27640  01767A  0EFF               	movlw	-1
 27641  01767C  6AE3               	clrf	plusw1,c
 27642  01767E  2AE3               	incf	plusw1,f,c
 27643                           
 27644                           ;dio.c: 92:    break;
 27645  017680  D016               	goto	l9520
 27646  017682                     l9518:
 27647                           
 27648                           ;stkvar	_i @ sp[(-2)+0]
 27649  017682  0EFE               	movlw	-2
 27650  017684  50E3               	movf	plusw1,w,c
 27651  017686  6E0B               	movwf	(btemp+10)^0,c
 27652  017688  6A0C               	clrf	(btemp+11)^0,c
 27653                           
 27654                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27655                           ; Switch size 1, requested type "simple"
 27656                           ; Number of cases is 1, Range of values is 0 to 0
 27657                           ; switch strategies available:
 27658                           ; Name         Instructions Cycles
 27659                           ; simple_byte            4     3 (average)
 27660                           ;	Chosen strategy is simple_byte
 27661  01768A  500C               	movf	(btemp+11)^0,w,c
 27662  01768C  0A00               	xorlw	0	; case 0
 27663  01768E  A4D8               	btfss	status,2,c
 27664  017690  D7F4               	goto	l9514
 27665                           
 27666                           ; Switch size 1, requested type "simple"
 27667                           ; Number of cases is 4, Range of values is 0 to 3
 27668                           ; switch strategies available:
 27669                           ; Name         Instructions Cycles
 27670                           ; simple_byte           13     7 (average)
 27671                           ;	Chosen strategy is simple_byte
 27672  017692  500B               	movf	(btemp+10)^0,w,c
 27673  017694  0A00               	xorlw	0	; case 0
 27674  017696  B4D8               	btfsc	status,2,c
 27675  017698  D7E9               	goto	l9512
 27676  01769A  0A01               	xorlw	1	; case 1
 27677  01769C  B4D8               	btfsc	status,2,c
 27678  01769E  D7E3               	goto	l9510
 27679  0176A0  0A03               	xorlw	3	; case 2
 27680  0176A2  B4D8               	btfsc	status,2,c
 27681  0176A4  D7DD               	goto	l9508
 27682  0176A6  0A01               	xorlw	1	; case 3
 27683  0176A8  B4D8               	btfsc	status,2,c
 27684  0176AA  D7D2               	goto	l9506
 27685  0176AC  D7E6               	goto	l9514
 27686  0176AE                     l9520:
 27687                           
 27688                           ;dio.c: 96:   if (sw_value) {
 27689                           ;stkvar	_sw_value @ sp[(-2)+1]
 27690  0176AE  0EFF               	movlw	-1
 27691  0176B0  50E3               	movf	plusw1,w,c
 27692  0176B2  B4D8               	btfsc	status,2,c
 27693  0176B4  D014               	goto	l9526
 27694                           
 27695                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 27696                           ;stkvar	_i @ sp[(-2)+0]
 27697  0176B6  0EFE               	movlw	-2
 27698  0176B8  50E3               	movf	plusw1,w,c
 27699  0176BA  0D05               	mullw	5
 27700  0176BC  50F3               	movf	243,w,c
 27701  0176BE  0F60               	addlw	low _S
 27702  0176C0  6ED9               	movwf	fsr2l,c
 27703  0176C2  6ADA               	clrf	fsr2h,c
 27704  0176C4  04DE               	decf	postinc2,w,c
 27705  0176C6  A4D8               	btfss	status,2,c
 27706  0176C8  D041               	goto	l9534
 27707                           
 27708                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 27709                           ;stkvar	_i @ sp[(-2)+0]
 27710  0176CA  0EFE               	movlw	-2
 27711  0176CC  50E3               	movf	plusw1,w,c
 27712  0176CE  0D05               	mullw	5
 27713  0176D0  50F3               	movf	243,w,c
 27714  0176D2  0F60               	addlw	low _S
 27715  0176D4  6ED9               	movwf	fsr2l,c
 27716  0176D6  6ADA               	clrf	fsr2h,c
 27717  0176D8  0E00               	movlw	0
 27718  0176DA  6EDF               	movwf	indf2,c
 27719  0176DC  D037               	goto	l9534
 27720  0176DE                     l9526:
 27721                           
 27722                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 27723                           ;stkvar	_i @ sp[(-2)+0]
 27724  0176DE  0EFE               	movlw	-2
 27725  0176E0  50E3               	movf	plusw1,w,c
 27726  0176E2  0D05               	mullw	5
 27727  0176E4  50F3               	movf	243,w,c
 27728  0176E6  0F60               	addlw	low _S
 27729  0176E8  6ED9               	movwf	fsr2l,c
 27730  0176EA  6ADA               	clrf	fsr2h,c
 27731  0176EC  50DF               	movf	indf2,w,c
 27732  0176EE  A4D8               	btfss	status,2,c
 27733  0176F0  D02D               	goto	l9534
 27734                           
 27735                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 27736                           ;stkvar	_i @ sp[(-2)+0]
 27737  0176F2  0EFE               	movlw	-2
 27738  0176F4  50E3               	movf	plusw1,w,c
 27739  0176F6  0D05               	mullw	5
 27740  0176F8  50F3               	movf	243,w,c
 27741  0176FA  0F60               	addlw	low _S
 27742  0176FC  6ED9               	movwf	fsr2l,c
 27743  0176FE  6ADA               	clrf	fsr2h,c
 27744  017700  0E01               	movlw	1
 27745  017702  6EDF               	movwf	indf2,c
 27746                           
 27747                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 27748  017704  EE20  F2B8         	lfsr	2,_V+184	;volatile
 27749                           
 27750                           ;stkvar	_i @ sp[(-2)+0]
 27751  017708  0EFE               	movlw	-2
 27752  01770A  50E3               	movf	plusw1,w,c
 27753  01770C  0D05               	mullw	5
 27754  01770E  50F3               	movf	243,w,c
 27755  017710  0F61               	addlw	low (_S+1)
 27756  017712  6EE9               	movwf	fsr0l,c
 27757  017714  6AEA               	clrf	fsr0h,c
 27758  017716  006F FF7B FFEE     	movff	postinc2,postinc0
 27759  01771C  006F FF7B FFEE     	movff	postinc2,postinc0
 27760  017722  006F FF7B FFEE     	movff	postinc2,postinc0
 27761  017728  006F FF7B FFEE     	movff	postinc2,postinc0
 27762                           
 27763                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 27764                           ;stkvar	_i @ sp[(-2)+0]
 27765  01772E  0EFE               	movlw	-2
 27766  017730  006F FF8C  F00C    	movff	plusw1,btemp+11
 27767  017736  0E01               	movlw	1
 27768  017738  6E0B               	movwf	(btemp+10)^0,c
 27769  01773A  2A0C               	incf	(btemp+11)^0,f,c
 27770  01773C  D002               	goto	u857_24
 27771  01773E                     u857_25:
 27772  01773E  90D8               	bcf	status,0,c
 27773  017740  360B               	rlcf	(btemp+10)^0,f,c
 27774  017742                     u857_24:
 27775  017742  2E0C               	decfsz	(btemp+11)^0,f,c
 27776  017744  D7FC               	goto	u857_25
 27777  017746  500B               	movf	(btemp+10)^0,w,c
 27778  017748  0100               	movlb	0	; () banked
 27779  01774A  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 27780  01774C                     l9534:
 27781                           
 27782                           ;dio.c: 107:  } while (++i < 4);
 27783                           ;stkvar	_i @ sp[(-2)+0]
 27784  01774C  0EFE               	movlw	-2
 27785  01774E  2AE3               	incf	plusw1,f,c
 27786  017750  0EFE               	movlw	-2
 27787  017752  006F FF8C  F001    	movff	plusw1,btemp
 27788  017758  0E03               	movlw	3
 27789  01775A  6401               	cpfsgt	btemp^0,c
 27790  01775C  D792               	goto	l9518
 27791                           
 27792                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 27793  01775E  8EBD               	bsf	189,7,c	;volatile
 27794                           
 27795                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 27796  017760  52E5               	movf	postdec1,f,c
 27797  017762  52E5               	movf	postdec1,f,c
 27798  017764  0012               	return		;funcret
 27799  017766                     __end_of_switch_handler:
 27800                           	opt callstack 0
 27801                           
 27802 ;; *************** function _TMR5_ISR *****************
 27803 ;; Defined at:
 27804 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 27805 ;; Parameters:    Size  Location     Type
 27806 ;;		None
 27807 ;; Auto vars:     Size  Location     Type
 27808 ;;		None
 27809 ;; Return value:  Size  Location     Type
 27810 ;;                  1    wreg      void 
 27811 ;; Registers used:
 27812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 27813 ;; Tracked objects:
 27814 ;;		On entry : 0/0
 27815 ;;		On exit  : 0/0
 27816 ;;		Unchanged: 0/0
 27817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27820 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27821 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27822 ;;Total ram usage:        4 bytes
 27823 ;; Hardware stack levels used:    1
 27824 ;; Hardware stack levels required when called:    5
 27825 ;; This function calls:
 27826 ;;		_TMR5_CallBack
 27827 ;;		_TMR5_WriteTimer
 27828 ;; This function is called by:
 27829 ;;		Interrupt level 1
 27830 ;; This function uses a non-reentrant model
 27831 ;;
 27832                           
 27833                           	psect	text130
 27834  018F20                     __ptext130:
 27835                           	opt callstack 0
 27836  018F20                     _TMR5_ISR:
 27837                           	opt callstack 12
 27838                           
 27839                           ;incstack = 0
 27840  018F20  006F FF60  F044    	movff	status,??_TMR5_ISR+2
 27841  018F26  0060  F030  F045   	movff	btemp+11,??_TMR5_ISR+3
 27842  018F2C  EE16  F061         	lfsr	1,___intlo_sp
 27843                           
 27844                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 27845  018F30  0139               	movlb	57	; () banked
 27846  018F32  9DA8               	bcf	168,6,b	;volatile
 27847                           
 27848                           ; BSR set to: 57
 27849                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 27850  018F34  0060  F0AF  FFE6   	movff	_timer5ReloadVal,postinc1
 27851  018F3A  0060  F0B3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 27852  018F40  ECDA  F0C9         	call	_TMR5_WriteTimer	;wreg free
 27853                           
 27854                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 27855  018F44  0102               	movlb	2	; () banked
 27856  018F46  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 27857  018F48  6E42               	movwf	??_TMR5_ISR^0,c
 27858  018F4A  6A43               	clrf	(??_TMR5_ISR+1)^0,c
 27859  018F4C  0E05               	movlw	5
 27860  018F4E  2642               	addwf	??_TMR5_ISR^0,f,c
 27861  018F50  0E00               	movlw	0
 27862  018F52  2243               	addwfc	(??_TMR5_ISR+1)^0,f,c
 27863  018F54  4A29               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 27864  018F56  2A2A               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 27865  018F58  5042               	movf	??_TMR5_ISR^0,w,c
 27866  018F5A  5C29               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 27867  018F5C  5043               	movf	(??_TMR5_ISR+1)^0,w,c
 27868  018F5E  582A               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 27869  018F60  A0D8               	btfss	status,0,c
 27870  018F62  D004               	goto	i1l1017
 27871                           
 27872                           ; BSR set to: 2
 27873                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 27874  018F64  EC42  F0CD         	call	_TMR5_CallBack	;wreg free
 27875                           
 27876                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 27877  018F68  6A29               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 27878  018F6A  6A2A               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 27879  018F6C                     i1l1017:
 27880  018F6C  0060  F114  F00C   	movff	??_TMR5_ISR+3,btemp+11
 27881  018F72  0060  F113  FFD8   	movff	??_TMR5_ISR+2,status
 27882  018F78  0011               	retfie		f
 27883  018F7A                     __end_of_TMR5_ISR:
 27884                           	opt callstack 0
 27885                           
 27886 ;; *************** function _TMR5_WriteTimer *****************
 27887 ;; Defined at:
 27888 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 27889 ;; Parameters:    Size  Location     Type
 27890 ;;  timerVal        2  [STACK] unsigned short 
 27891 ;; Auto vars:     Size  Location     Type
 27892 ;;		None
 27893 ;; Return value:  Size  Location     Type
 27894 ;;                  1  [STACK] void 
 27895 ;; Registers used:
 27896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27897 ;; Tracked objects:
 27898 ;;		On entry : 3F/39
 27899 ;;		On exit  : 0/0
 27900 ;;		Unchanged: 0/0
 27901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27906 ;;Total ram usage:        0 bytes
 27907 ;; Hardware stack levels used:    1
 27908 ;; Hardware stack levels required when called:    3
 27909 ;; This function calls:
 27910 ;;		Nothing
 27911 ;; This function is called by:
 27912 ;;		_TMR5_ISR
 27913 ;; This function uses a reentrant model
 27914 ;;
 27915                           
 27916                           	psect	text131
 27917  0193B4                     __ptext131:
 27918                           	opt callstack 0
 27919  0193B4                     _TMR5_WriteTimer:
 27920                           	opt callstack 13
 27921                           
 27922                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 27923                           
 27924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27925                           ;incstack = 0
 27926  0193B4  A49A               	btfss	154,2,c	;volatile
 27927  0193B6  D00F               	goto	l9700
 27928                           
 27929                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 27930  0193B8  909A               	bcf	154,0,c	;volatile
 27931                           
 27932                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 27933                           ;stkvar	_timerVal @ sp[(0)+-2]
 27934  0193BA  0EFF               	movlw	255
 27935  0193BC  24E1               	addwf	fsr1l,w,c
 27936  0193BE  6ED9               	movwf	fsr2l,c
 27937  0193C0  0EFF               	movlw	255
 27938  0193C2  20E2               	addwfc	fsr1h,w,c
 27939  0193C4  6EDA               	movwf	fsr2h,c
 27940  0193C6  50DF               	movf	indf2,w,c
 27941  0193C8  6E99               	movwf	153,c	;volatile
 27942                           
 27943                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 27944                           ;stkvar	_timerVal @ sp[(0)+-2]
 27945  0193CA  0EFE               	movlw	-2
 27946  0193CC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 27947                           
 27948                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 27949  0193D2  809A               	bsf	154,0,c	;volatile
 27950                           
 27951                           ;mcc_generated_files/tmr5.c: 142:  } else {
 27952  0193D4  D00C               	goto	l1000
 27953  0193D6                     l9700:
 27954                           
 27955                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 27956                           ;stkvar	_timerVal @ sp[(0)+-2]
 27957  0193D6  0EFF               	movlw	255
 27958  0193D8  24E1               	addwf	fsr1l,w,c
 27959  0193DA  6ED9               	movwf	fsr2l,c
 27960  0193DC  0EFF               	movlw	255
 27961  0193DE  20E2               	addwfc	fsr1h,w,c
 27962  0193E0  6EDA               	movwf	fsr2h,c
 27963  0193E2  50DF               	movf	indf2,w,c
 27964  0193E4  6E99               	movwf	153,c	;volatile
 27965                           
 27966                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 27967                           ;stkvar	_timerVal @ sp[(0)+-2]
 27968  0193E6  0EFE               	movlw	-2
 27969  0193E8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 27970  0193EE                     l1000:
 27971                           
 27972                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 27973  0193EE  52E5               	movf	postdec1,f,c
 27974  0193F0  52E5               	movf	postdec1,f,c
 27975  0193F2  0012               	return		;funcret
 27976  0193F4                     __end_of_TMR5_WriteTimer:
 27977                           	opt callstack 0
 27978                           
 27979 ;; *************** function _TMR5_CallBack *****************
 27980 ;; Defined at:
 27981 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 27982 ;; Parameters:    Size  Location     Type
 27983 ;;		None
 27984 ;; Auto vars:     Size  Location     Type
 27985 ;;		None
 27986 ;; Return value:  Size  Location     Type
 27987 ;;                  1  [STACK] void 
 27988 ;; Registers used:
 27989 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 27990 ;; Tracked objects:
 27991 ;;		On entry : 3F/2
 27992 ;;		On exit  : 0/0
 27993 ;;		Unchanged: 0/0
 27994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27999 ;;Total ram usage:        0 bytes
 28000 ;; Hardware stack levels used:    1
 28001 ;; Hardware stack levels required when called:    4
 28002 ;; This function calls:
 28003 ;;		Absolute function
 28004 ;;		_TMR5_DefaultInterruptHandler
 28005 ;; This function is called by:
 28006 ;;		_TMR5_ISR
 28007 ;; This function uses a reentrant model
 28008 ;;
 28009                           
 28010                           	psect	text132
 28011  019A84                     __ptext132:
 28012                           	opt callstack 0
 28013  019A84                     _TMR5_CallBack:
 28014                           	opt callstack 12
 28015                           
 28016                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 28017                           
 28018                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28019                           ;incstack = 0
 28020  019A84  0100               	movlb	0	; () banked
 28021  019A86  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 28022  019A88  11AD               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 28023  019A8A  11AE               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 28024  019A8C  B4D8               	btfsc	status,2,c
 28025  019A8E  0012               	return	
 28026                           
 28027                           ; BSR set to: 0
 28028                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 28029  019A90  D801               	call	u884_28
 28030  019A92  0012               	return	
 28031  019A94                     u884_28:
 28032  019A94  0005               	push	
 28033  019A96  6EFA               	movwf	pclath,c
 28034  019A98  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 28035  019A9A  6EFD               	movwf	tosl,c
 28036  019A9C  51AD               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 28037  019A9E  6EFE               	movwf	tosh,c
 28038  019AA0  51AE               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 28039  019AA2  6EFF               	movwf	tosu,c
 28040  019AA4  50FA               	movf	pclath,w,c
 28041  019AA6  0012               	return		;indir
 28042  019AA8                     __end_of_TMR5_CallBack:
 28043                           	opt callstack 0
 28044                           
 28045 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 28046 ;; Defined at:
 28047 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 28048 ;; Parameters:    Size  Location     Type
 28049 ;;		None
 28050 ;; Auto vars:     Size  Location     Type
 28051 ;;		None
 28052 ;; Return value:  Size  Location     Type
 28053 ;;                  1  [STACK] void 
 28054 ;; Registers used:
 28055 ;;		wreg, status,2, status,0, btemp+11
 28056 ;; Tracked objects:
 28057 ;;		On entry : 3F/0
 28058 ;;		On exit  : 3F/2
 28059 ;;		Unchanged: 0/0
 28060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28065 ;;Total ram usage:        0 bytes
 28066 ;; Hardware stack levels used:    1
 28067 ;; Hardware stack levels required when called:    3
 28068 ;; This function calls:
 28069 ;;		Nothing
 28070 ;; This function is called by:
 28071 ;;		_TMR5_Initialize
 28072 ;;		_TMR5_CallBack
 28073 ;; This function uses a reentrant model
 28074 ;;
 28075                           
 28076                           	psect	text133
 28077  019976                     __ptext133:
 28078                           	opt callstack 0
 28079  019976                     _TMR5_DefaultInterruptHandler:
 28080                           	opt callstack 12
 28081                           
 28082                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 28083                           
 28084                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28085                           ;incstack = 0
 28086  019976  A0BE               	btfss	190,0,c	;volatile
 28087  019978  D002               	goto	u827_20
 28088  01997A  0E01               	movlw	1
 28089  01997C  D001               	goto	u827_26
 28090  01997E                     u827_20:
 28091  01997E  0E00               	movlw	0
 28092  019980                     u827_26:
 28093  019980  0AFF               	xorlw	255
 28094  019982  6E0C               	movwf	(btemp+11)^0,c
 28095  019984  50BE               	movf	190,w,c	;volatile
 28096  019986  180C               	xorwf	(btemp+11)^0,w,c
 28097  019988  0BFE               	andlw	-2
 28098  01998A  180C               	xorwf	(btemp+11)^0,w,c
 28099  01998C  6EBE               	movwf	190,c	;volatile
 28100                           
 28101                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 28102  01998E  0E01               	movlw	1
 28103  019990  0102               	movlb	2	; () banked
 28104  019992  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 28105  019994  0E00               	movlw	0
 28106  019996  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 28107  019998  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 28108  01999A  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 28109                           
 28110                           ; BSR set to: 2
 28111                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28112  01999C  0012               	return		;funcret
 28113  01999E                     __end_of_TMR5_DefaultInterruptHandler:
 28114                           	opt callstack 0
 28115                           
 28116 ;; *************** function _TMR3_ISR *****************
 28117 ;; Defined at:
 28118 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 28119 ;; Parameters:    Size  Location     Type
 28120 ;;		None
 28121 ;; Auto vars:     Size  Location     Type
 28122 ;;		None
 28123 ;; Return value:  Size  Location     Type
 28124 ;;                  1    wreg      void 
 28125 ;; Registers used:
 28126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 28127 ;; Tracked objects:
 28128 ;;		On entry : 0/0
 28129 ;;		On exit  : 3F/0
 28130 ;;		Unchanged: 0/0
 28131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28134 ;;      Temps:          0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28135 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28136 ;;Total ram usage:       25 bytes
 28137 ;; Hardware stack levels used:    1
 28138 ;; Hardware stack levels required when called:   14
 28139 ;; This function calls:
 28140 ;;		_TMR3_CallBack
 28141 ;;		_TMR3_WriteTimer
 28142 ;; This function is called by:
 28143 ;;		Interrupt level 1
 28144 ;; This function uses a non-reentrant model
 28145 ;;
 28146                           
 28147                           	psect	text134
 28148  017260                     __ptext134:
 28149                           	opt callstack 0
 28150  017260                     _TMR3_ISR:
 28151                           	opt callstack 3
 28152                           
 28153                           ; BSR set to: 2
 28154                           ;incstack = 0
 28155  017260  006F FF60  F2BC    	movff	status,??_TMR3_ISR
 28156  017266  006F FFD8  F2BD    	movff	tblptrl,??_TMR3_ISR+1
 28157  01726C  006F FFDC  F2BE    	movff	tblptrh,??_TMR3_ISR+2
 28158  017272  006F FFE0  F2BF    	movff	tblptru,??_TMR3_ISR+3
 28159  017278  006F FFD4  F2C0    	movff	tablat,??_TMR3_ISR+4
 28160  01727E  0060  F004  F2C1   	movff	btemp,??_TMR3_ISR+5
 28161  017284  0060  F008  F2C2   	movff	btemp+1,??_TMR3_ISR+6
 28162  01728A  0060  F00C  F2C3   	movff	btemp+2,??_TMR3_ISR+7
 28163  017290  0060  F010  F2C4   	movff	btemp+3,??_TMR3_ISR+8
 28164  017296  0060  F014  F2C5   	movff	btemp+4,??_TMR3_ISR+9
 28165  01729C  0060  F018  F2C6   	movff	btemp+5,??_TMR3_ISR+10
 28166  0172A2  0060  F01C  F2C7   	movff	btemp+6,??_TMR3_ISR+11
 28167  0172A8  0060  F020  F2C8   	movff	btemp+7,??_TMR3_ISR+12
 28168  0172AE  0060  F024  F2C9   	movff	btemp+8,??_TMR3_ISR+13
 28169  0172B4  0060  F028  F2CA   	movff	btemp+9,??_TMR3_ISR+14
 28170  0172BA  0060  F02C  F2CB   	movff	btemp+10,??_TMR3_ISR+15
 28171  0172C0  0060  F030  F2CC   	movff	btemp+11,??_TMR3_ISR+16
 28172  0172C6  0060  F044  F2CD   	movff	btemp+16,??_TMR3_ISR+17
 28173  0172CC  0060  F048  F2CE   	movff	btemp+17,??_TMR3_ISR+18
 28174  0172D2  0060  F04C  F2CF   	movff	btemp+18,??_TMR3_ISR+19
 28175  0172D8  0060  F050  F2D0   	movff	btemp+19,??_TMR3_ISR+20
 28176  0172DE  0060  F054  F2D1   	movff	btemp+20,??_TMR3_ISR+21
 28177  0172E4  0060  F058  F2D2   	movff	btemp+21,??_TMR3_ISR+22
 28178  0172EA  0060  F05C  F2D3   	movff	btemp+22,??_TMR3_ISR+23
 28179  0172F0  0060  F060  F2D4   	movff	btemp+23,??_TMR3_ISR+24
 28180  0172F6  EE16  F061         	lfsr	1,___intlo_sp
 28181                           
 28182                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 28183  0172FA  0139               	movlb	57	; () banked
 28184  0172FC  9DA6               	bcf	166,6,b	;volatile
 28185                           
 28186                           ; BSR set to: 57
 28187                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 28188  0172FE  0060  F09F  FFE6   	movff	_timer3ReloadVal,postinc1
 28189  017304  0060  F0A3  FFE6   	movff	_timer3ReloadVal+1,postinc1
 28190  01730A  ECFA  F0C9         	call	_TMR3_WriteTimer	;wreg free
 28191                           
 28192                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 28193  01730E  0100               	movlb	0	; () banked
 28194  017310  4BC9               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 28195  017312  2BCA               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 28196  017314  51CA               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 28197  017316  E104               	bnz	i1u1115_20
 28198  017318  0E28               	movlw	40
 28199  01731A  5DC9               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 28200  01731C  A0D8               	btfss	status,0,c
 28201  01731E  D005               	goto	i1l1205
 28202  017320                     i1u1115_20:
 28203                           
 28204                           ; BSR set to: 0
 28205                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 28206  017320  EC54  F0CD         	call	_TMR3_CallBack	;wreg free
 28207                           
 28208                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 28209  017324  0100               	movlb	0	; () banked
 28210  017326  6BC9               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 28211  017328  6BCA               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 28212  01732A                     i1l1205:
 28213                           
 28214                           ; BSR set to: 0
 28215  01732A  0060  FB50  F018   	movff	??_TMR3_ISR+24,btemp+23
 28216  017330  0060  FB4C  F017   	movff	??_TMR3_ISR+23,btemp+22
 28217  017336  0060  FB48  F016   	movff	??_TMR3_ISR+22,btemp+21
 28218  01733C  0060  FB44  F015   	movff	??_TMR3_ISR+21,btemp+20
 28219  017342  0060  FB40  F014   	movff	??_TMR3_ISR+20,btemp+19
 28220  017348  0060  FB3C  F013   	movff	??_TMR3_ISR+19,btemp+18
 28221  01734E  0060  FB38  F012   	movff	??_TMR3_ISR+18,btemp+17
 28222  017354  0060  FB34  F011   	movff	??_TMR3_ISR+17,btemp+16
 28223  01735A  0060  FB30  F00C   	movff	??_TMR3_ISR+16,btemp+11
 28224  017360  0060  FB2C  F00B   	movff	??_TMR3_ISR+15,btemp+10
 28225  017366  0060  FB28  F00A   	movff	??_TMR3_ISR+14,btemp+9
 28226  01736C  0060  FB24  F009   	movff	??_TMR3_ISR+13,btemp+8
 28227  017372  0060  FB20  F008   	movff	??_TMR3_ISR+12,btemp+7
 28228  017378  0060  FB1C  F007   	movff	??_TMR3_ISR+11,btemp+6
 28229  01737E  0060  FB18  F006   	movff	??_TMR3_ISR+10,btemp+5
 28230  017384  0060  FB14  F005   	movff	??_TMR3_ISR+9,btemp+4
 28231  01738A  0060  FB10  F004   	movff	??_TMR3_ISR+8,btemp+3
 28232  017390  0060  FB0C  F003   	movff	??_TMR3_ISR+7,btemp+2
 28233  017396  0060  FB08  F002   	movff	??_TMR3_ISR+6,btemp+1
 28234  01739C  0060  FB04  F001   	movff	??_TMR3_ISR+5,btemp
 28235  0173A2  0060  FB03  FFF5   	movff	??_TMR3_ISR+4,tablat
 28236  0173A8  0060  FAFF  FFF8   	movff	??_TMR3_ISR+3,tblptru
 28237  0173AE  0060  FAFB  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 28238  0173B4  0060  FAF7  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 28239  0173BA  0060  FAF3  FFD8   	movff	??_TMR3_ISR,status
 28240  0173C0  0011               	retfie		f
 28241  0173C2                     __end_of_TMR3_ISR:
 28242                           	opt callstack 0
 28243                           
 28244 ;; *************** function _TMR3_WriteTimer *****************
 28245 ;; Defined at:
 28246 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 28247 ;; Parameters:    Size  Location     Type
 28248 ;;  timerVal        2  [STACK] unsigned short 
 28249 ;; Auto vars:     Size  Location     Type
 28250 ;;		None
 28251 ;; Return value:  Size  Location     Type
 28252 ;;                  1  [STACK] void 
 28253 ;; Registers used:
 28254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 28255 ;; Tracked objects:
 28256 ;;		On entry : 3F/39
 28257 ;;		On exit  : 0/0
 28258 ;;		Unchanged: 0/0
 28259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28264 ;;Total ram usage:        0 bytes
 28265 ;; Hardware stack levels used:    1
 28266 ;; Hardware stack levels required when called:    3
 28267 ;; This function calls:
 28268 ;;		Nothing
 28269 ;; This function is called by:
 28270 ;;		_TMR3_ISR
 28271 ;; This function uses a reentrant model
 28272 ;;
 28273                           
 28274                           	psect	text135
 28275  0193F4                     __ptext135:
 28276                           	opt callstack 0
 28277  0193F4                     _TMR3_WriteTimer:
 28278                           	opt callstack 13
 28279                           
 28280                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 28281                           
 28282                           ; BSR set to: 0
 28283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28284                           ;incstack = 0
 28285  0193F4  A4A6               	btfss	166,2,c	;volatile
 28286  0193F6  D00F               	goto	l9718
 28287                           
 28288                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 28289  0193F8  90A6               	bcf	166,0,c	;volatile
 28290                           
 28291                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 28292                           ;stkvar	_timerVal @ sp[(0)+-2]
 28293  0193FA  0EFF               	movlw	255
 28294  0193FC  24E1               	addwf	fsr1l,w,c
 28295  0193FE  6ED9               	movwf	fsr2l,c
 28296  019400  0EFF               	movlw	255
 28297  019402  20E2               	addwfc	fsr1h,w,c
 28298  019404  6EDA               	movwf	fsr2h,c
 28299  019406  50DF               	movf	indf2,w,c
 28300  019408  6EA5               	movwf	165,c	;volatile
 28301                           
 28302                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 28303                           ;stkvar	_timerVal @ sp[(0)+-2]
 28304  01940A  0EFE               	movlw	-2
 28305  01940C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 28306                           
 28307                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 28308  019412  80A6               	bsf	166,0,c	;volatile
 28309                           
 28310                           ;mcc_generated_files/tmr3.c: 141:     }
 28311  019414  D00C               	goto	l1188
 28312  019416                     l9718:
 28313                           
 28314                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 28315                           ;stkvar	_timerVal @ sp[(0)+-2]
 28316  019416  0EFF               	movlw	255
 28317  019418  24E1               	addwf	fsr1l,w,c
 28318  01941A  6ED9               	movwf	fsr2l,c
 28319  01941C  0EFF               	movlw	255
 28320  01941E  20E2               	addwfc	fsr1h,w,c
 28321  019420  6EDA               	movwf	fsr2h,c
 28322  019422  50DF               	movf	indf2,w,c
 28323  019424  6EA5               	movwf	165,c	;volatile
 28324                           
 28325                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 28326                           ;stkvar	_timerVal @ sp[(0)+-2]
 28327  019426  0EFE               	movlw	-2
 28328  019428  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 28329  01942E                     l1188:
 28330                           
 28331                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 28332  01942E  52E5               	movf	postdec1,f,c
 28333  019430  52E5               	movf	postdec1,f,c
 28334  019432  0012               	return		;funcret
 28335  019434                     __end_of_TMR3_WriteTimer:
 28336                           	opt callstack 0
 28337                           
 28338 ;; *************** function _TMR3_CallBack *****************
 28339 ;; Defined at:
 28340 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 28341 ;; Parameters:    Size  Location     Type
 28342 ;;		None
 28343 ;; Auto vars:     Size  Location     Type
 28344 ;;		None
 28345 ;; Return value:  Size  Location     Type
 28346 ;;                  1  [STACK] void 
 28347 ;; Registers used:
 28348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 28349 ;; Tracked objects:
 28350 ;;		On entry : 3F/0
 28351 ;;		On exit  : 0/0
 28352 ;;		Unchanged: 0/0
 28353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28358 ;;Total ram usage:        0 bytes
 28359 ;; Hardware stack levels used:    1
 28360 ;; Hardware stack levels required when called:   13
 28361 ;; This function calls:
 28362 ;;		Absolute function
 28363 ;;		_TMR3_DefaultInterruptHandler
 28364 ;;		_calc_bsoc
 28365 ;; This function is called by:
 28366 ;;		_TMR3_ISR
 28367 ;; This function uses a reentrant model
 28368 ;;
 28369                           
 28370                           	psect	text136
 28371  019AA8                     __ptext136:
 28372                           	opt callstack 0
 28373  019AA8                     _TMR3_CallBack:
 28374                           	opt callstack 3
 28375                           
 28376                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 28377                           
 28378                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28379                           ;incstack = 0
 28380  019AA8  0100               	movlb	0	; () banked
 28381  019AAA  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 28382  019AAC  11AA               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 28383  019AAE  11AB               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 28384  019AB0  B4D8               	btfsc	status,2,c
 28385  019AB2  0012               	return	
 28386                           
 28387                           ; BSR set to: 0
 28388                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 28389  019AB4  D801               	call	u1090_28
 28390  019AB6  0012               	return	
 28391  019AB8                     u1090_28:
 28392  019AB8  0005               	push	
 28393  019ABA  6EFA               	movwf	pclath,c
 28394  019ABC  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 28395  019ABE  6EFD               	movwf	tosl,c
 28396  019AC0  51AA               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 28397  019AC2  6EFE               	movwf	tosh,c
 28398  019AC4  51AB               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 28399  019AC6  6EFF               	movwf	tosu,c
 28400  019AC8  50FA               	movf	pclath,w,c
 28401  019ACA  0012               	return		;indir
 28402  019ACC                     __end_of_TMR3_CallBack:
 28403                           	opt callstack 0
 28404                           
 28405 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 28406 ;; Defined at:
 28407 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 28408 ;; Parameters:    Size  Location     Type
 28409 ;;		None
 28410 ;; Auto vars:     Size  Location     Type
 28411 ;;		None
 28412 ;; Return value:  Size  Location     Type
 28413 ;;                  1  [STACK] void 
 28414 ;; Registers used:
 28415 ;;		None
 28416 ;; Tracked objects:
 28417 ;;		On entry : 3F/0
 28418 ;;		On exit  : 0/0
 28419 ;;		Unchanged: 0/0
 28420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28425 ;;Total ram usage:        0 bytes
 28426 ;; Hardware stack levels used:    1
 28427 ;; Hardware stack levels required when called:    3
 28428 ;; This function calls:
 28429 ;;		Nothing
 28430 ;; This function is called by:
 28431 ;;		_TMR3_Initialize
 28432 ;;		_TMR3_CallBack
 28433 ;; This function uses a reentrant model
 28434 ;;
 28435                           
 28436                           	psect	text137
 28437  019DC4                     __ptext137:
 28438                           	opt callstack 0
 28439  019DC4                     _TMR3_DefaultInterruptHandler:
 28440                           	opt callstack 12
 28441                           
 28442                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28443                           
 28444                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28445                           ;incstack = 0
 28446  019DC4  0012               	return		;funcret
 28447  019DC6                     __end_of_TMR3_DefaultInterruptHandler:
 28448                           	opt callstack 0
 28449                           
 28450 ;; *************** function _calc_bsoc *****************
 28451 ;; Defined at:
 28452 ;;		line 39 in file "bsoc.c"
 28453 ;; Parameters:    Size  Location     Type
 28454 ;;		None
 28455 ;; Auto vars:     Size  Location     Type
 28456 ;;  log_ptr         2  [STACK] PTR unsigned char 
 28457 ;;		 -> port_data(512), 
 28458 ;;  temp            2  [STACK] unsigned short 
 28459 ;; Return value:  Size  Location     Type
 28460 ;;                  1  [STACK] void 
 28461 ;; Registers used:
 28462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 28463 ;; Tracked objects:
 28464 ;;		On entry : 3F/0
 28465 ;;		On exit  : 3F/1
 28466 ;;		Unchanged: 0/0
 28467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28472 ;;Total ram usage:        0 bytes
 28473 ;; Hardware stack levels used:    1
 28474 ;; Hardware stack levels required when called:   12
 28475 ;; This function calls:
 28476 ;;		_StartTimer
 28477 ;;		_Volts_to_SOC
 28478 ;;		___fladd
 28479 ;;		___fldiv
 28480 ;;		___flge
 28481 ;;		___flmul
 28482 ;;		___flneg
 28483 ;;		___fltol
 28484 ;;		___xxtofl
 28485 ;;		_port_data_dma_ptr
 28486 ;;		_send_port_data_dma
 28487 ;;		_sprintf
 28488 ;;		_strlen
 28489 ;; This function is called by:
 28490 ;;		_init_bsoc
 28491 ;;		_TMR3_CallBack
 28492 ;; This function uses a reentrant model
 28493 ;;
 28494                           
 28495                           	psect	text138
 28496  01361E                     __ptext138:
 28497                           	opt callstack 0
 28498  01361E                     _calc_bsoc:
 28499                           	opt callstack 0
 28500                           
 28501                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28502  01361E  52E6               	movf	postinc1,f,c
 28503  013620  52E6               	movf	postinc1,f,c
 28504  013622  52E6               	movf	postinc1,f,c
 28505  013624  52E6               	movf	postinc1,f,c
 28506                           
 28507                           ;incstack = 0
 28508                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  uint16_t temp;;bsoc.c: 44:  do { LATEbits.
      +                          LATE1 = 1; } while(0);
 28509  013626  82BE               	bsf	190,1,c	;volatile
 28510                           
 28511                           ;bsoc.c: 46:  C.dynamic_ah += (C.c_bat / 3600.0);
 28512  013628  0E00               	movlw	0
 28513  01362A  6EE6               	movwf	postinc1,c
 28514  01362C  0E00               	movlw	0
 28515  01362E  6EE6               	movwf	postinc1,c
 28516  013630  0E61               	movlw	97
 28517  013632  6EE6               	movwf	postinc1,c
 28518  013634  0E45               	movlw	69
 28519  013636  6EE6               	movwf	postinc1,c
 28520  013638  0060  F513  FFE6   	movff	_C+68,postinc1
 28521  01363E  0060  F517  FFE6   	movff	_C+69,postinc1
 28522  013644  0060  F51B  FFE6   	movff	_C+70,postinc1
 28523  01364A  0060  F51F  FFE6   	movff	_C+71,postinc1
 28524  013650  ECB1  F09E         	call	___fldiv	;wreg free
 28525  013654  0060  F007  FFE6   	movff	btemp,postinc1
 28526  01365A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28527  013660  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28528  013666  0060  F013  FFE6   	movff	btemp+3,postinc1
 28529  01366C  0060  F603  FFE6   	movff	_C+128,postinc1
 28530  013672  0060  F607  FFE6   	movff	_C+129,postinc1
 28531  013678  0060  F60B  FFE6   	movff	_C+130,postinc1
 28532  01367E  0060  F60F  FFE6   	movff	_C+131,postinc1
 28533  013684  EC31  F097         	call	___fladd	;wreg free
 28534  013688  0060  F004  F180   	movff	btemp,_C+128	;volatile
 28535  01368E  0060  F008  F181   	movff	btemp+1,_C+129	;volatile
 28536  013694  0060  F00C  F182   	movff	btemp+2,_C+130	;volatile
 28537  01369A  0060  F010  F183   	movff	btemp+3,_C+131	;volatile
 28538                           
 28539                           ;bsoc.c: 47:  if (C.dynamic_ah > (C.bank_ah))
 28540  0136A0  0060  F603  FFE6   	movff	_C+128,postinc1
 28541  0136A6  0060  F607  FFE6   	movff	_C+129,postinc1
 28542  0136AC  0060  F60B  FFE6   	movff	_C+130,postinc1
 28543  0136B2  0060  F60F  FFE6   	movff	_C+131,postinc1
 28544  0136B8  0060  F5F3  FFE6   	movff	_C+124,postinc1
 28545  0136BE  0060  F5F7  FFE6   	movff	_C+125,postinc1
 28546  0136C4  0060  F5FB  FFE6   	movff	_C+126,postinc1
 28547  0136CA  0060  F5FF  FFE6   	movff	_C+127,postinc1
 28548  0136D0  EC7E  F0B8         	call	___flge	;wreg free
 28549  0136D4  B001               	btfsc	btemp& (0+255),0,c
 28550  0136D6  D008               	goto	l11454
 28551                           
 28552                           ;bsoc.c: 48:   C.dynamic_ah = C.bank_ah;
 28553  0136D8  C17C  F180         	movff	_C+124,_C+128	;volatile
 28554  0136DC  C17D  F181         	movff	_C+125,_C+129	;volatile
 28555  0136E0  C17E  F182         	movff	_C+126,_C+130	;volatile
 28556  0136E4  C17F  F183         	movff	_C+127,_C+131	;volatile
 28557  0136E8                     l11454:
 28558                           
 28559                           ;bsoc.c: 49:  if (C.dynamic_ah < 0.1)
 28560  0136E8  0ECD               	movlw	205
 28561  0136EA  6EE6               	movwf	postinc1,c
 28562  0136EC  0ECC               	movlw	204
 28563  0136EE  6EE6               	movwf	postinc1,c
 28564  0136F0  0ECC               	movlw	204
 28565  0136F2  6EE6               	movwf	postinc1,c
 28566  0136F4  0E3D               	movlw	61
 28567  0136F6  6EE6               	movwf	postinc1,c
 28568  0136F8  0060  F603  FFE6   	movff	_C+128,postinc1
 28569  0136FE  0060  F607  FFE6   	movff	_C+129,postinc1
 28570  013704  0060  F60B  FFE6   	movff	_C+130,postinc1
 28571  01370A  0060  F60F  FFE6   	movff	_C+131,postinc1
 28572  013710  EC7E  F0B8         	call	___flge	;wreg free
 28573  013714  B001               	btfsc	btemp& (0+255),0,c
 28574  013716  D009               	goto	l11458
 28575                           
 28576                           ;bsoc.c: 50:   C.dynamic_ah = 0.1;
 28577  013718  0ECD               	movlw	205
 28578  01371A  0101               	movlb	1	; () banked
 28579  01371C  6F80               	movwf	(_C+128)& (0+255),b	;volatile
 28580  01371E  0ECC               	movlw	204
 28581  013720  6F81               	movwf	(_C+129)& (0+255),b	;volatile
 28582  013722  0ECC               	movlw	204
 28583  013724  6F82               	movwf	(_C+130)& (0+255),b	;volatile
 28584  013726  0E3D               	movlw	61
 28585  013728  6F83               	movwf	(_C+131)& (0+255),b	;volatile
 28586  01372A                     l11458:
 28587                           
 28588                           ;bsoc.c: 52:  C.pv_ah += (C.c_pv / 3600.0);
 28589  01372A  0E00               	movlw	0
 28590  01372C  6EE6               	movwf	postinc1,c
 28591  01372E  0E00               	movlw	0
 28592  013730  6EE6               	movwf	postinc1,c
 28593  013732  0E61               	movlw	97
 28594  013734  6EE6               	movwf	postinc1,c
 28595  013736  0E45               	movlw	69
 28596  013738  6EE6               	movwf	postinc1,c
 28597  01373A  0060  F523  FFE6   	movff	_C+72,postinc1
 28598  013740  0060  F527  FFE6   	movff	_C+73,postinc1
 28599  013746  0060  F52B  FFE6   	movff	_C+74,postinc1
 28600  01374C  0060  F52F  FFE6   	movff	_C+75,postinc1
 28601  013752  ECB1  F09E         	call	___fldiv	;wreg free
 28602  013756  0060  F007  FFE6   	movff	btemp,postinc1
 28603  01375C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28604  013762  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28605  013768  0060  F013  FFE6   	movff	btemp+3,postinc1
 28606  01376E  0060  F613  FFE6   	movff	_C+132,postinc1
 28607  013774  0060  F617  FFE6   	movff	_C+133,postinc1
 28608  01377A  0060  F61B  FFE6   	movff	_C+134,postinc1
 28609  013780  0060  F61F  FFE6   	movff	_C+135,postinc1
 28610  013786  EC31  F097         	call	___fladd	;wreg free
 28611  01378A  0060  F004  F184   	movff	btemp,_C+132	;volatile
 28612  013790  0060  F008  F185   	movff	btemp+1,_C+133	;volatile
 28613  013796  0060  F00C  F186   	movff	btemp+2,_C+134	;volatile
 28614  01379C  0060  F010  F187   	movff	btemp+3,_C+135	;volatile
 28615                           
 28616                           ;bsoc.c: 53:  C.pvkw += (C.p_pv / 3600.0);
 28617  0137A2  0E00               	movlw	0
 28618  0137A4  6EE6               	movwf	postinc1,c
 28619  0137A6  0E00               	movlw	0
 28620  0137A8  6EE6               	movwf	postinc1,c
 28621  0137AA  0E61               	movlw	97
 28622  0137AC  6EE6               	movwf	postinc1,c
 28623  0137AE  0E45               	movlw	69
 28624  0137B0  6EE6               	movwf	postinc1,c
 28625  0137B2  0060  F5C3  FFE6   	movff	_C+112,postinc1
 28626  0137B8  0060  F5C7  FFE6   	movff	_C+113,postinc1
 28627  0137BE  0060  F5CB  FFE6   	movff	_C+114,postinc1
 28628  0137C4  0060  F5CF  FFE6   	movff	_C+115,postinc1
 28629  0137CA  ECB1  F09E         	call	___fldiv	;wreg free
 28630  0137CE  0060  F007  FFE6   	movff	btemp,postinc1
 28631  0137D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28632  0137DA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28633  0137E0  0060  F013  FFE6   	movff	btemp+3,postinc1
 28634  0137E6  0060  F653  FFE6   	movff	_C+148,postinc1
 28635  0137EC  0060  F657  FFE6   	movff	_C+149,postinc1
 28636  0137F2  0060  F65B  FFE6   	movff	_C+150,postinc1
 28637  0137F8  0060  F65F  FFE6   	movff	_C+151,postinc1
 28638  0137FE  EC31  F097         	call	___fladd	;wreg free
 28639  013802  0060  F004  F194   	movff	btemp,_C+148	;volatile
 28640  013808  0060  F008  F195   	movff	btemp+1,_C+149	;volatile
 28641  01380E  0060  F00C  F196   	movff	btemp+2,_C+150	;volatile
 28642  013814  0060  F010  F197   	movff	btemp+3,_C+151	;volatile
 28643                           
 28644                           ;bsoc.c: 54:  C.invkw += (C.p_inverter / 3600.0);
 28645  01381A  0E00               	movlw	0
 28646  01381C  6EE6               	movwf	postinc1,c
 28647  01381E  0E00               	movlw	0
 28648  013820  6EE6               	movwf	postinc1,c
 28649  013822  0E61               	movlw	97
 28650  013824  6EE6               	movwf	postinc1,c
 28651  013826  0E45               	movlw	69
 28652  013828  6EE6               	movwf	postinc1,c
 28653  01382A  0060  F5B3  FFE6   	movff	_C+108,postinc1
 28654  013830  0060  F5B7  FFE6   	movff	_C+109,postinc1
 28655  013836  0060  F5BB  FFE6   	movff	_C+110,postinc1
 28656  01383C  0060  F5BF  FFE6   	movff	_C+111,postinc1
 28657  013842  ECB1  F09E         	call	___fldiv	;wreg free
 28658  013846  0060  F007  FFE6   	movff	btemp,postinc1
 28659  01384C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28660  013852  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28661  013858  0060  F013  FFE6   	movff	btemp+3,postinc1
 28662  01385E  0060  F663  FFE6   	movff	_C+152,postinc1
 28663  013864  0060  F667  FFE6   	movff	_C+153,postinc1
 28664  01386A  0060  F66B  FFE6   	movff	_C+154,postinc1
 28665  013870  0060  F66F  FFE6   	movff	_C+155,postinc1
 28666  013876  EC31  F097         	call	___fladd	;wreg free
 28667  01387A  0060  F004  F198   	movff	btemp,_C+152	;volatile
 28668  013880  0060  F008  F199   	movff	btemp+1,_C+153	;volatile
 28669  013886  0060  F00C  F19A   	movff	btemp+2,_C+154	;volatile
 28670  01388C  0060  F010  F19B   	movff	btemp+3,_C+155	;volatile
 28671                           
 28672                           ;bsoc.c: 55:  if (C.p_bat > 0.0)
 28673  013892  0060  F5D3  FFE6   	movff	_C+116,postinc1
 28674  013898  0060  F5D7  FFE6   	movff	_C+117,postinc1
 28675  01389E  0060  F5DB  FFE6   	movff	_C+118,postinc1
 28676  0138A4  0060  F5DF  FFE6   	movff	_C+119,postinc1
 28677  0138AA  0E00               	movlw	0
 28678  0138AC  6EE6               	movwf	postinc1,c
 28679  0138AE  0E00               	movlw	0
 28680  0138B0  6EE6               	movwf	postinc1,c
 28681  0138B2  0E00               	movlw	0
 28682  0138B4  6EE6               	movwf	postinc1,c
 28683  0138B6  0E00               	movlw	0
 28684  0138B8  6EE6               	movwf	postinc1,c
 28685  0138BA  EC7E  F0B8         	call	___flge	;wreg free
 28686  0138BE  B001               	btfsc	btemp& (0+255),0,c
 28687  0138C0  D03C               	goto	l11468
 28688                           
 28689                           ;bsoc.c: 56:   C.bkwi += (C.p_bat / 3600.0);
 28690  0138C2  0E00               	movlw	0
 28691  0138C4  6EE6               	movwf	postinc1,c
 28692  0138C6  0E00               	movlw	0
 28693  0138C8  6EE6               	movwf	postinc1,c
 28694  0138CA  0E61               	movlw	97
 28695  0138CC  6EE6               	movwf	postinc1,c
 28696  0138CE  0E45               	movlw	69
 28697  0138D0  6EE6               	movwf	postinc1,c
 28698  0138D2  0060  F5D3  FFE6   	movff	_C+116,postinc1
 28699  0138D8  0060  F5D7  FFE6   	movff	_C+117,postinc1
 28700  0138DE  0060  F5DB  FFE6   	movff	_C+118,postinc1
 28701  0138E4  0060  F5DF  FFE6   	movff	_C+119,postinc1
 28702  0138EA  ECB1  F09E         	call	___fldiv	;wreg free
 28703  0138EE  0060  F007  FFE6   	movff	btemp,postinc1
 28704  0138F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28705  0138FA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28706  013900  0060  F013  FFE6   	movff	btemp+3,postinc1
 28707  013906  0060  F633  FFE6   	movff	_C+140,postinc1
 28708  01390C  0060  F637  FFE6   	movff	_C+141,postinc1
 28709  013912  0060  F63B  FFE6   	movff	_C+142,postinc1
 28710  013918  0060  F63F  FFE6   	movff	_C+143,postinc1
 28711  01391E  EC31  F097         	call	___fladd	;wreg free
 28712  013922  0060  F004  F18C   	movff	btemp,_C+140	;volatile
 28713  013928  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
 28714  01392E  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
 28715  013934  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
 28716  01393A                     l11468:
 28717                           
 28718                           ;bsoc.c: 57:  if (C.p_bat < 0.0)
 28719  01393A  0101               	movlb	1	; () banked
 28720  01393C  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 28721  01393E  D03C               	goto	l11472
 28722                           
 28723                           ; BSR set to: 1
 28724                           ;bsoc.c: 58:   C.bkwo += (C.p_bat / 3600.0);
 28725  013940  0E00               	movlw	0
 28726  013942  6EE6               	movwf	postinc1,c
 28727  013944  0E00               	movlw	0
 28728  013946  6EE6               	movwf	postinc1,c
 28729  013948  0E61               	movlw	97
 28730  01394A  6EE6               	movwf	postinc1,c
 28731  01394C  0E45               	movlw	69
 28732  01394E  6EE6               	movwf	postinc1,c
 28733  013950  0060  F5D3  FFE6   	movff	_C+116,postinc1
 28734  013956  0060  F5D7  FFE6   	movff	_C+117,postinc1
 28735  01395C  0060  F5DB  FFE6   	movff	_C+118,postinc1
 28736  013962  0060  F5DF  FFE6   	movff	_C+119,postinc1
 28737  013968  ECB1  F09E         	call	___fldiv	;wreg free
 28738  01396C  0060  F007  FFE6   	movff	btemp,postinc1
 28739  013972  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28740  013978  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28741  01397E  0060  F013  FFE6   	movff	btemp+3,postinc1
 28742  013984  0060  F643  FFE6   	movff	_C+144,postinc1
 28743  01398A  0060  F647  FFE6   	movff	_C+145,postinc1
 28744  013990  0060  F64B  FFE6   	movff	_C+146,postinc1
 28745  013996  0060  F64F  FFE6   	movff	_C+147,postinc1
 28746  01399C  EC31  F097         	call	___fladd	;wreg free
 28747  0139A0  0060  F004  F190   	movff	btemp,_C+144	;volatile
 28748  0139A6  0060  F008  F191   	movff	btemp+1,_C+145	;volatile
 28749  0139AC  0060  F00C  F192   	movff	btemp+2,_C+146	;volatile
 28750  0139B2  0060  F010  F193   	movff	btemp+3,_C+147	;volatile
 28751  0139B8                     l11472:
 28752                           
 28753                           ;bsoc.c: 60:  temp = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 28754  0139B8  0E00               	movlw	0
 28755  0139BA  6EE6               	movwf	postinc1,c
 28756  0139BC  0E00               	movlw	0
 28757  0139BE  6EE6               	movwf	postinc1,c
 28758  0139C0  0EC8               	movlw	200
 28759  0139C2  6EE6               	movwf	postinc1,c
 28760  0139C4  0E42               	movlw	66
 28761  0139C6  6EE6               	movwf	postinc1,c
 28762  0139C8  0060  F5F3  FFE6   	movff	_C+124,postinc1
 28763  0139CE  0060  F5F7  FFE6   	movff	_C+125,postinc1
 28764  0139D4  0060  F5FB  FFE6   	movff	_C+126,postinc1
 28765  0139DA  0060  F5FF  FFE6   	movff	_C+127,postinc1
 28766  0139E0  0060  F603  FFE6   	movff	_C+128,postinc1
 28767  0139E6  0060  F607  FFE6   	movff	_C+129,postinc1
 28768  0139EC  0060  F60B  FFE6   	movff	_C+130,postinc1
 28769  0139F2  0060  F60F  FFE6   	movff	_C+131,postinc1
 28770  0139F8  ECB1  F09E         	call	___fldiv	;wreg free
 28771  0139FC  0060  F007  FFE6   	movff	btemp,postinc1
 28772  013A02  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28773  013A08  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28774  013A0E  0060  F013  FFE6   	movff	btemp+3,postinc1
 28775  013A14  EC1C  F093         	call	___flmul	;wreg free
 28776  013A18  0060  F007  FFE6   	movff	btemp,postinc1
 28777  013A1E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28778  013A24  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28779  013A2A  0060  F013  FFE6   	movff	btemp+3,postinc1
 28780  013A30  EC0D  F0B7         	call	___fltol	;wreg free
 28781  013A34  0060  F004  F00B   	movff	btemp,btemp+10
 28782  013A3A  0060  F008  F00C   	movff	btemp+1,btemp+11
 28783  013A40  0E01               	movlw	1
 28784  013A42  260B               	addwf	(btemp+10)^0,f,c
 28785  013A44  0E00               	movlw	0
 28786  013A46  220C               	addwfc	(btemp+11)^0,f,c
 28787                           
 28788                           ;stkvar	_temp @ sp[(-4)+2]
 28789  013A48  0EFE               	movlw	-2
 28790  013A4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28791  013A50  0EFF               	movlw	-1
 28792  013A52  0060  F033  FFE3   	movff	btemp+11,plusw1
 28793                           
 28794                           ;bsoc.c: 61:  C.soc = (Volts_to_SOC((uint32_t) C.v_bat * 1000.0) + temp) / 2;
 28795                           ;stkvar	_temp @ sp[(-4)+2]
 28796  013A58  0E00               	movlw	0
 28797  013A5A  6EE6               	movwf	postinc1,c
 28798  013A5C  0E00               	movlw	0
 28799  013A5E  6EE6               	movwf	postinc1,c
 28800  013A60  0E7A               	movlw	122
 28801  013A62  6EE6               	movwf	postinc1,c
 28802  013A64  0E44               	movlw	68
 28803  013A66  6EE6               	movwf	postinc1,c
 28804  013A68  0060  F553  FFE6   	movff	_C+84,postinc1
 28805  013A6E  0060  F557  FFE6   	movff	_C+85,postinc1
 28806  013A74  0060  F55B  FFE6   	movff	_C+86,postinc1
 28807  013A7A  0060  F55F  FFE6   	movff	_C+87,postinc1
 28808  013A80  EC0D  F0B7         	call	___fltol	;wreg free
 28809  013A84  0060  F007  FFE6   	movff	btemp,postinc1
 28810  013A8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28811  013A90  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28812  013A96  0060  F013  FFE6   	movff	btemp+3,postinc1
 28813  013A9C  0E00               	movlw	0
 28814  013A9E  6EE6               	movwf	postinc1,c
 28815  013AA0  EC7C  F0B2         	call	___xxtofl	;wreg free
 28816  013AA4  0060  F007  FFE6   	movff	btemp,postinc1
 28817  013AAA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28818  013AB0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28819  013AB6  0060  F013  FFE6   	movff	btemp+3,postinc1
 28820  013ABC  EC1C  F093         	call	___flmul	;wreg free
 28821  013AC0  0060  F007  FFE6   	movff	btemp,postinc1
 28822  013AC6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28823  013ACC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28824  013AD2  0060  F013  FFE6   	movff	btemp+3,postinc1
 28825  013AD8  EC0D  F0B7         	call	___fltol	;wreg free
 28826  013ADC  0060  F007  FFE6   	movff	btemp,postinc1
 28827  013AE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28828  013AE8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28829  013AEE  0060  F013  FFE6   	movff	btemp+3,postinc1
 28830  013AF4  EC73  F0C3         	call	_Volts_to_SOC	;wreg free
 28831  013AF8  0EFE               	movlw	-2
 28832  013AFA  50E3               	movf	plusw1,w,c
 28833  013AFC  2601               	addwf	btemp^0,f,c
 28834  013AFE  0EFF               	movlw	-1
 28835  013B00  50E3               	movf	plusw1,w,c
 28836  013B02  2202               	addwfc	(btemp+1)^0,f,c
 28837  013B04  90D8               	bcf	status,0,c
 28838  013B06  3002               	rrcf	(btemp+1)^0,w,c
 28839  013B08  6E0C               	movwf	(btemp+11)^0,c
 28840  013B0A  3001               	rrcf	btemp^0,w,c
 28841  013B0C  6E0B               	movwf	(btemp+10)^0,c
 28842  013B0E  0060  F02C  F19E   	movff	btemp+10,_C+158	;volatile
 28843  013B14  0060  F030  F19F   	movff	btemp+11,_C+159	;volatile
 28844                           
 28845                           ;bsoc.c: 62:  if (C.soc > 100)
 28846  013B1A  0101               	movlb	1	; () banked
 28847  013B1C  519F               	movf	(_C+159)& (0+255),w,b	;volatile
 28848  013B1E  E104               	bnz	u1083_20
 28849  013B20  0E65               	movlw	101
 28850  013B22  5D9E               	subwf	(_C+158)& (0+255),w,b	;volatile
 28851  013B24  A0D8               	btfss	status,0,c
 28852  013B26  D004               	goto	l11480
 28853  013B28                     u1083_20:
 28854                           
 28855                           ; BSR set to: 1
 28856                           ;bsoc.c: 63:   C.soc = 100;
 28857  013B28  0E00               	movlw	0
 28858  013B2A  6F9F               	movwf	(_C+159)& (0+255),b	;volatile
 28859  013B2C  0E64               	movlw	100
 28860  013B2E  6F9E               	movwf	(_C+158)& (0+255),b	;volatile
 28861  013B30                     l11480:
 28862                           
 28863                           ; BSR set to: 1
 28864                           ;bsoc.c: 65:  if (C.c_bat < 0.0) {
 28865  013B30  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 28866  013B32  D043               	goto	l11484
 28867                           
 28868                           ; BSR set to: 1
 28869                           ;bsoc.c: 66:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 28870  013B34  0060  F513  FFE6   	movff	_C+68,postinc1
 28871  013B3A  0060  F517  FFE6   	movff	_C+69,postinc1
 28872  013B40  0060  F51B  FFE6   	movff	_C+70,postinc1
 28873  013B46  0060  F51F  FFE6   	movff	_C+71,postinc1
 28874  013B4C  0060  F603  FFE6   	movff	_C+128,postinc1
 28875  013B52  0060  F607  FFE6   	movff	_C+129,postinc1
 28876  013B58  0060  F60B  FFE6   	movff	_C+130,postinc1
 28877  013B5E  0060  F60F  FFE6   	movff	_C+131,postinc1
 28878  013B64  ECB1  F09E         	call	___fldiv	;wreg free
 28879  013B68  0060  F007  FFE6   	movff	btemp,postinc1
 28880  013B6E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28881  013B74  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28882  013B7A  0060  F013  FFE6   	movff	btemp+3,postinc1
 28883  013B80  EC84  F0C8         	call	___flneg	;wreg free
 28884  013B84  0060  F007  FFE6   	movff	btemp,postinc1
 28885  013B8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28886  013B90  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28887  013B96  0060  F013  FFE6   	movff	btemp+3,postinc1
 28888  013B9C  EC0D  F0B7         	call	___fltol	;wreg free
 28889  013BA0  0060  F004  F00B   	movff	btemp,btemp+10
 28890  013BA6  0060  F008  F00C   	movff	btemp+1,btemp+11
 28891  013BAC  0060  F02C  F19C   	movff	btemp+10,_C+156	;volatile
 28892  013BB2  0060  F030  F19D   	movff	btemp+11,_C+157	;volatile
 28893                           
 28894                           ;bsoc.c: 67:  } else {
 28895  013BB8  D004               	goto	l11486
 28896  013BBA                     l11484:
 28897                           
 28898                           ; BSR set to: 1
 28899                           ;bsoc.c: 68:   C.runtime = 120;
 28900  013BBA  0E00               	movlw	0
 28901  013BBC  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
 28902  013BBE  0E78               	movlw	120
 28903  013BC0  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
 28904  013BC2                     l11486:
 28905                           
 28906                           ;bsoc.c: 70:  if (C.runtime > 120)
 28907  013BC2  0101               	movlb	1	; () banked
 28908  013BC4  519D               	movf	(_C+157)& (0+255),w,b	;volatile
 28909  013BC6  E104               	bnz	u1085_20
 28910  013BC8  0E79               	movlw	121
 28911  013BCA  5D9C               	subwf	(_C+156)& (0+255),w,b	;volatile
 28912  013BCC  A0D8               	btfss	status,0,c
 28913  013BCE  D004               	goto	l11490
 28914  013BD0                     u1085_20:
 28915                           
 28916                           ; BSR set to: 1
 28917                           ;bsoc.c: 71:   C.runtime = 120;
 28918  013BD0  0E00               	movlw	0
 28919  013BD2  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
 28920  013BD4  0E78               	movlw	120
 28921  013BD6  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
 28922  013BD8                     l11490:
 28923                           
 28924                           ; BSR set to: 1
 28925                           ;bsoc.c: 73:  V.lowint_count++;
 28926  013BD8  0E01               	movlw	1
 28927  013BDA  0102               	movlb	2	; () banked
 28928  013BDC  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 28929  013BDE  0E00               	movlw	0
 28930  013BE0  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 28931  013BE2  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 28932  013BE4  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 28933                           
 28934                           ; BSR set to: 2
 28935                           ;bsoc.c: 74:  log_ptr = port_data_dma_ptr();
 28936  013BE6  ECA6  F0CE         	call	_port_data_dma_ptr	;wreg free
 28937                           
 28938                           ;stkvar	_log_ptr @ sp[(-4)+0]
 28939  013BEA  0EFD               	movlw	-3
 28940  013BEC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 28941  013BF2  0EFC               	movlw	-4
 28942  013BF4  0060  F007  FFE3   	movff	btemp,plusw1
 28943                           
 28944                           ;bsoc.c: 75:  sprintf((char*) log_ptr, " %4.3f,%4.3f,%4.3f,%4.3f,%4.3f,%4.3f,%4.3f,%4.3f
      +                          ,%4.3f,%4.3f,%4.3d,%4.3d\r\n",
 28945  013BFA  0060  F673  FFE6   	movff	_C+156,postinc1
 28946  013C00  0060  F677  FFE6   	movff	_C+157,postinc1
 28947  013C06  0060  F67B  FFE6   	movff	_C+158,postinc1
 28948  013C0C  0060  F67F  FFE6   	movff	_C+159,postinc1
 28949  013C12  0060  F613  FFE6   	movff	_C+132,postinc1
 28950  013C18  0060  F617  FFE6   	movff	_C+133,postinc1
 28951  013C1E  0060  F61B  FFE6   	movff	_C+134,postinc1
 28952  013C24  0060  F61F  FFE6   	movff	_C+135,postinc1
 28953  013C2A  0060  F603  FFE6   	movff	_C+128,postinc1
 28954  013C30  0060  F607  FFE6   	movff	_C+129,postinc1
 28955  013C36  0060  F60B  FFE6   	movff	_C+130,postinc1
 28956  013C3C  0060  F60F  FFE6   	movff	_C+131,postinc1
 28957  013C42  0060  F5B3  FFE6   	movff	_C+108,postinc1
 28958  013C48  0060  F5B7  FFE6   	movff	_C+109,postinc1
 28959  013C4E  0060  F5BB  FFE6   	movff	_C+110,postinc1
 28960  013C54  0060  F5BF  FFE6   	movff	_C+111,postinc1
 28961  013C5A  0060  F5A3  FFE6   	movff	_C+104,postinc1
 28962  013C60  0060  F5A7  FFE6   	movff	_C+105,postinc1
 28963  013C66  0060  F5AB  FFE6   	movff	_C+106,postinc1
 28964  013C6C  0060  F5AF  FFE6   	movff	_C+107,postinc1
 28965  013C72  0060  F5C3  FFE6   	movff	_C+112,postinc1
 28966  013C78  0060  F5C7  FFE6   	movff	_C+113,postinc1
 28967  013C7E  0060  F5CB  FFE6   	movff	_C+114,postinc1
 28968  013C84  0060  F5CF  FFE6   	movff	_C+115,postinc1
 28969  013C8A  0060  F5D3  FFE6   	movff	_C+116,postinc1
 28970  013C90  0060  F5D7  FFE6   	movff	_C+117,postinc1
 28971  013C96  0060  F5DB  FFE6   	movff	_C+118,postinc1
 28972  013C9C  0060  F5DF  FFE6   	movff	_C+119,postinc1
 28973  013CA2  0060  F593  FFE6   	movff	_C+100,postinc1
 28974  013CA8  0060  F597  FFE6   	movff	_C+101,postinc1
 28975  013CAE  0060  F59B  FFE6   	movff	_C+102,postinc1
 28976  013CB4  0060  F59F  FFE6   	movff	_C+103,postinc1
 28977  013CBA  0060  F533  FFE6   	movff	_C+76,postinc1
 28978  013CC0  0060  F537  FFE6   	movff	_C+77,postinc1
 28979  013CC6  0060  F53B  FFE6   	movff	_C+78,postinc1
 28980  013CCC  0060  F53F  FFE6   	movff	_C+79,postinc1
 28981  013CD2  0060  F543  FFE6   	movff	_C+80,postinc1
 28982  013CD8  0060  F547  FFE6   	movff	_C+81,postinc1
 28983  013CDE  0060  F54B  FFE6   	movff	_C+82,postinc1
 28984  013CE4  0060  F54F  FFE6   	movff	_C+83,postinc1
 28985  013CEA  0060  F553  FFE6   	movff	_C+84,postinc1
 28986  013CF0  0060  F557  FFE6   	movff	_C+85,postinc1
 28987  013CF6  0060  F55B  FFE6   	movff	_C+86,postinc1
 28988  013CFC  0060  F55F  FFE6   	movff	_C+87,postinc1
 28989  013D02  0EF5               	movlw	low STR_46
 28990  013D04  6EE6               	movwf	postinc1,c
 28991  013D06  0EFD               	movlw	high STR_46
 28992  013D08  6EE6               	movwf	postinc1,c
 28993                           
 28994                           ;stkvar	_log_ptr @ sp[(-50)+0]
 28995  013D0A  0ECE               	movlw	-50
 28996  013D0C  006F FF8F FFE6     	movff	plusw1,postinc1
 28997  013D12  006F FF8F FFE6     	movff	plusw1,postinc1
 28998  013D18  0E30               	movlw	48
 28999  013D1A  6EE6               	movwf	postinc1,c
 29000  013D1C  EC6A  F0BE         	call	_sprintf	;wreg free
 29001                           
 29002                           ; BSR set to: 0
 29003                           ;bsoc.c: 79:  StartTimer(TMR_DISPLAY, 125);
 29004  013D20  0E7D               	movlw	125
 29005  013D22  6EE6               	movwf	postinc1,c
 29006  013D24  0E00               	movlw	0
 29007  013D26  6EE6               	movwf	postinc1,c
 29008  013D28  0E0A               	movlw	10
 29009  013D2A  6EE6               	movwf	postinc1,c
 29010  013D2C  EC9A  F0C9         	call	_StartTimer	;wreg free
 29011                           
 29012                           ;bsoc.c: 80:  send_port_data_dma(strlen((char*) log_ptr));
 29013                           ;stkvar	_log_ptr @ sp[(-4)+0]
 29014  013D30  0EFC               	movlw	-4
 29015  013D32  006F FF8F FFE6     	movff	plusw1,postinc1
 29016  013D38  006F FF8F FFE6     	movff	plusw1,postinc1
 29017  013D3E  ECD6  F0C2         	call	_strlen	;wreg free
 29018  013D42  0060  F007  FFE6   	movff	btemp,postinc1
 29019  013D48  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29020  013D4E  EC0F  F0C8         	call	_send_port_data_dma	;wreg free
 29021                           
 29022                           ; BSR set to: 59
 29023                           ;bsoc.c: 81:  C.update = 0;
 29024  013D52  0101               	movlb	1	; () banked
 29025  013D54  6BA0               	clrf	(_C+160)& (0+255),b	;volatile
 29026                           
 29027                           ; BSR set to: 1
 29028  013D56  92BE               	bcf	190,1,c	;volatile
 29029                           
 29030                           ; BSR set to: 1
 29031                           ; _calc_bsoc: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 29032  013D58  52E5               	movf	postdec1,f,c
 29033  013D5A  52E5               	movf	postdec1,f,c
 29034  013D5C  52E5               	movf	postdec1,f,c
 29035  013D5E  52E5               	movf	postdec1,f,c
 29036  013D60  0012               	return		;funcret
 29037  013D62                     __end_of_calc_bsoc:
 29038                           	opt callstack 0
 29039                           
 29040 ;; *************** function _send_port_data_dma *****************
 29041 ;; Defined at:
 29042 ;;		line 258 in file "eadog.c"
 29043 ;; Parameters:    Size  Location     Type
 29044 ;;  dsize           2  [STACK] unsigned short 
 29045 ;; Auto vars:     Size  Location     Type
 29046 ;;		None
 29047 ;; Return value:  Size  Location     Type
 29048 ;;                  1  [STACK] void 
 29049 ;; Registers used:
 29050 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 29051 ;; Tracked objects:
 29052 ;;		On entry : 0/0
 29053 ;;		On exit  : 3F/3B
 29054 ;;		Unchanged: 0/0
 29055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29060 ;;Total ram usage:        0 bytes
 29061 ;; Hardware stack levels used:    1
 29062 ;; Hardware stack levels required when called:    3
 29063 ;; This function calls:
 29064 ;;		Nothing
 29065 ;; This function is called by:
 29066 ;;		_calc_bsoc
 29067 ;; This function uses a reentrant model
 29068 ;;
 29069                           
 29070                           	psect	text139
 29071  01901E                     __ptext139:
 29072                           	opt callstack 0
 29073  01901E                     _send_port_data_dma:
 29074                           	opt callstack 11
 29075                           
 29076                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 29077                           ;stkvar	_dsize @ sp[(0)+-2]
 29078                           
 29079                           ; BSR set to: 1
 29080                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29081                           ;incstack = 0
 29082  01901E  0EFE               	movlw	-2
 29083  019020  04E3               	decf	plusw1,w,c
 29084  019022  0EFF               	movlw	-1
 29085  019024  006F FF8C  F001    	movff	plusw1,btemp
 29086  01902A  0E02               	movlw	2
 29087  01902C  5A01               	subwfb	btemp^0,f,c
 29088  01902E  A0D8               	btfss	status,0,c
 29089  019030  D00C               	goto	l8828
 29090                           
 29091                           ;eadog.c: 261:   dsize = 512;
 29092  019032  0E00               	movlw	0
 29093  019034  6E0B               	movwf	(btemp+10)^0,c
 29094  019036  0E02               	movlw	2
 29095  019038  6E0C               	movwf	(btemp+11)^0,c
 29096                           
 29097                           ;stkvar	_dsize @ sp[(0)+-2]
 29098  01903A  0EFE               	movlw	-2
 29099  01903C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29100  019042  0EFF               	movlw	-1
 29101  019044  0060  F033  FFE3   	movff	btemp+11,plusw1
 29102  01904A                     l8828:
 29103                           
 29104                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 29105  01904A  013B               	movlb	59	; () banked
 29106  01904C  9FDC               	bcf	220,7,b	;volatile
 29107                           
 29108                           ; BSR set to: 59
 29109                           ;eadog.c: 264:  DMA2SSZ = dsize;
 29110                           ;stkvar	_dsize @ sp[(0)+-2]
 29111  01904E  0EFE               	movlw	-2
 29112  019050  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 29113  019056  0EFF               	movlw	-1
 29114  019058  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 29115                           
 29116                           ; BSR set to: 59
 29117                           ;eadog.c: 265:  DMA2DSZ = 1;
 29118  01905E  0E00               	movlw	0
 29119  019060  6FCF               	movwf	207,b	;volatile
 29120  019062  0E01               	movlw	1
 29121  019064  6FCE               	movwf	206,b	;volatile
 29122                           
 29123                           ; BSR set to: 59
 29124                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 29125  019066  8FDC               	bsf	220,7,b	;volatile
 29126                           
 29127                           ; BSR set to: 59
 29128                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 29129  019068  8DDC               	bsf	220,6,b	;volatile
 29130                           
 29131                           ; BSR set to: 59
 29132                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 29133  01906A  52E5               	movf	postdec1,f,c
 29134  01906C  52E5               	movf	postdec1,f,c
 29135  01906E  0012               	return		;funcret
 29136  019070                     __end_of_send_port_data_dma:
 29137                           	opt callstack 0
 29138                           
 29139 ;; *************** function _port_data_dma_ptr *****************
 29140 ;; Defined at:
 29141 ;;		line 273 in file "eadog.c"
 29142 ;; Parameters:    Size  Location     Type
 29143 ;;		None
 29144 ;; Auto vars:     Size  Location     Type
 29145 ;;		None
 29146 ;; Return value:  Size  Location     Type
 29147 ;;                  2  [STACK] PTR unsigned char 
 29148 ;; Registers used:
 29149 ;;		wreg, status,2, status,0, btemp, btemp+1
 29150 ;; Tracked objects:
 29151 ;;		On entry : 3F/2
 29152 ;;		On exit  : 0/0
 29153 ;;		Unchanged: 0/0
 29154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29159 ;;Total ram usage:        0 bytes
 29160 ;; Hardware stack levels used:    1
 29161 ;; Hardware stack levels required when called:    3
 29162 ;; This function calls:
 29163 ;;		Nothing
 29164 ;; This function is called by:
 29165 ;;		_calc_bsoc
 29166 ;; This function uses a reentrant model
 29167 ;;
 29168                           
 29169                           	psect	text140
 29170  019D4C                     __ptext140:
 29171                           	opt callstack 0
 29172  019D4C                     _port_data_dma_ptr:
 29173                           	opt callstack 11
 29174                           
 29175                           ;eadog.c: 275:  return port_data;
 29176                           
 29177                           ; BSR set to: 59
 29178                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29179                           ;incstack = 0
 29180  019D4C  0EFF               	movlw	low _port_data
 29181  019D4E  6E01               	movwf	btemp^0,c
 29182  019D50  0E05               	movlw	high _port_data
 29183  019D52  6E02               	movwf	(btemp+1)^0,c
 29184                           
 29185                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29186  019D54  0012               	return		;funcret
 29187  019D56                     __end_of_port_data_dma_ptr:
 29188                           	opt callstack 0
 29189                           
 29190 ;; *************** function _INT0_ISR *****************
 29191 ;; Defined at:
 29192 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 29193 ;; Parameters:    Size  Location     Type
 29194 ;;		None
 29195 ;; Auto vars:     Size  Location     Type
 29196 ;;		None
 29197 ;; Return value:  Size  Location     Type
 29198 ;;                  1    wreg      void 
 29199 ;; Registers used:
 29200 ;;		wreg, status,2, status,0, pclath, tosl
 29201 ;; Tracked objects:
 29202 ;;		On entry : 0/0
 29203 ;;		On exit  : 0/0
 29204 ;;		Unchanged: 0/0
 29205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29210 ;;Total ram usage:        0 bytes
 29211 ;; Hardware stack levels used:    1
 29212 ;; Hardware stack levels required when called:    2
 29213 ;; This function calls:
 29214 ;;		_INT0_CallBack
 29215 ;; This function is called by:
 29216 ;;		Interrupt level 2
 29217 ;; This function uses a non-reentrant model
 29218 ;;
 29219                           
 29220                           	psect	text141
 29221  019D24                     __ptext141:
 29222                           	opt callstack 0
 29223  019D24                     _INT0_ISR:
 29224                           	opt callstack 3
 29225                           
 29226                           ;incstack = 0
 29227  019D24  EE14  F0C2         	lfsr	1,___inthi_sp
 29228                           
 29229                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 29230  019D28  0139               	movlb	57	; () banked
 29231  019D2A  91A1               	bcf	161,0,b	;volatile
 29232                           
 29233                           ; BSR set to: 57
 29234                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 29235  019D2C  EC66  F0CD         	call	_INT0_CallBack	;wreg free
 29236  019D30  0011               	retfie		f
 29237  019D32                     __end_of_INT0_ISR:
 29238                           	opt callstack 0
 29239                           
 29240 ;; *************** function _INT0_CallBack *****************
 29241 ;; Defined at:
 29242 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 29243 ;; Parameters:    Size  Location     Type
 29244 ;;		None
 29245 ;; Auto vars:     Size  Location     Type
 29246 ;;		None
 29247 ;; Return value:  Size  Location     Type
 29248 ;;                  1  [STACK] void 
 29249 ;; Registers used:
 29250 ;;		wreg, status,2, status,0, pclath, tosl
 29251 ;; Tracked objects:
 29252 ;;		On entry : 3F/39
 29253 ;;		On exit  : 0/0
 29254 ;;		Unchanged: 0/0
 29255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29260 ;;Total ram usage:        0 bytes
 29261 ;; Hardware stack levels used:    1
 29262 ;; Hardware stack levels required when called:    1
 29263 ;; This function calls:
 29264 ;;		Absolute function
 29265 ;;		_INT0_DefaultInterruptHandler
 29266 ;; This function is called by:
 29267 ;;		_INT0_ISR
 29268 ;; This function uses a reentrant model
 29269 ;;
 29270                           
 29271                           	psect	text142
 29272  019ACC                     __ptext142:
 29273                           	opt callstack 0
 29274  019ACC                     _INT0_CallBack:
 29275                           	opt callstack 3
 29276                           
 29277                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 29278                           
 29279                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29280                           ;incstack = 0
 29281  019ACC  0100               	movlb	0	; () banked
 29282  019ACE  51C4               	movf	_INT0_InterruptHandler& (0+255),w,b
 29283  019AD0  11C5               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 29284  019AD2  11C6               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 29285  019AD4  B4D8               	btfsc	status,2,c
 29286  019AD6  0012               	return	
 29287                           
 29288                           ; BSR set to: 0
 29289                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 29290  019AD8  D801               	call	u873_48
 29291  019ADA  0012               	return	
 29292  019ADC                     u873_48:
 29293  019ADC  0005               	push	
 29294  019ADE  6EFA               	movwf	pclath,c
 29295  019AE0  51C4               	movf	_INT0_InterruptHandler& (0+255),w,b
 29296  019AE2  6EFD               	movwf	tosl,c
 29297  019AE4  51C5               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 29298  019AE6  6EFE               	movwf	tosh,c
 29299  019AE8  51C6               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 29300  019AEA  6EFF               	movwf	tosu,c
 29301  019AEC  50FA               	movf	pclath,w,c
 29302  019AEE  0012               	return		;indir
 29303  019AF0                     __end_of_INT0_CallBack:
 29304                           	opt callstack 0
 29305                           
 29306 ;; *************** function _INT0_DefaultInterruptHandler *****************
 29307 ;; Defined at:
 29308 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 29309 ;; Parameters:    Size  Location     Type
 29310 ;;		None
 29311 ;; Auto vars:     Size  Location     Type
 29312 ;;		None
 29313 ;; Return value:  Size  Location     Type
 29314 ;;                  1  [STACK] void 
 29315 ;; Registers used:
 29316 ;;		None
 29317 ;; Tracked objects:
 29318 ;;		On entry : 3F/0
 29319 ;;		On exit  : 0/0
 29320 ;;		Unchanged: 0/0
 29321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29326 ;;Total ram usage:        0 bytes
 29327 ;; Hardware stack levels used:    1
 29328 ;; This function calls:
 29329 ;;		Nothing
 29330 ;; This function is called by:
 29331 ;;		_EXT_INT_Initialize
 29332 ;;		_INT0_CallBack
 29333 ;; This function uses a reentrant model
 29334 ;;
 29335                           
 29336                           	psect	text143
 29337  019DC6                     __ptext143:
 29338                           	opt callstack 0
 29339  019DC6                     _INT0_DefaultInterruptHandler:
 29340                           	opt callstack 3
 29341                           
 29342                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29343                           
 29344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29345                           ;incstack = 0
 29346  019DC6  0012               	return		;funcret
 29347  019DC8                     __end_of_INT0_DefaultInterruptHandler:
 29348                           	opt callstack 0
 29349                           
 29350 ;; *************** function _Default_ISR *****************
 29351 ;; Defined at:
 29352 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 29353 ;; Parameters:    Size  Location     Type
 29354 ;;		None
 29355 ;; Auto vars:     Size  Location     Type
 29356 ;;		None
 29357 ;; Return value:  Size  Location     Type
 29358 ;;                  1    wreg      void 
 29359 ;; Registers used:
 29360 ;;		None
 29361 ;; Tracked objects:
 29362 ;;		On entry : 0/0
 29363 ;;		On exit  : 0/0
 29364 ;;		Unchanged: 0/0
 29365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29370 ;;Total ram usage:        0 bytes
 29371 ;; Hardware stack levels used:    1
 29372 ;; This function calls:
 29373 ;;		Nothing
 29374 ;; This function is called by:
 29375 ;;		Interrupt level 2
 29376 ;; This function uses a non-reentrant model
 29377 ;;
 29378                           
 29379                           	psect	text144
 29380  019DBC                     __ptext144:
 29381                           	opt callstack 0
 29382  019DBC                     _Default_ISR:
 29383                           	opt callstack 5
 29384                           
 29385                           ;incstack = 0
 29386  019DBC  EE14  F0C2         	lfsr	1,___inthi_sp
 29387  019DC0  0011               	retfie		f
 29388  019DC2                     __end_of_Default_ISR:
 29389                           	opt callstack 0
 29390                           
 29391 ;; *************** function _ADCC_ISR *****************
 29392 ;; Defined at:
 29393 ;;		line 314 in file "mcc_generated_files/adcc.c"
 29394 ;; Parameters:    Size  Location     Type
 29395 ;;		None
 29396 ;; Auto vars:     Size  Location     Type
 29397 ;;		None
 29398 ;; Return value:  Size  Location     Type
 29399 ;;                  1    wreg      void 
 29400 ;; Registers used:
 29401 ;;		wreg, status,2, status,0, pclath, tosl
 29402 ;; Tracked objects:
 29403 ;;		On entry : 0/0
 29404 ;;		On exit  : 0/0
 29405 ;;		Unchanged: 0/0
 29406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29411 ;;Total ram usage:        0 bytes
 29412 ;; Hardware stack levels used:    1
 29413 ;; Hardware stack levels required when called:    1
 29414 ;; This function calls:
 29415 ;;		Absolute function
 29416 ;;		_ADCC_DefaultInterruptHandler
 29417 ;;		_adc_int_handler
 29418 ;; This function is called by:
 29419 ;;		Interrupt level 2
 29420 ;; This function uses a non-reentrant model
 29421 ;;
 29422                           
 29423                           	psect	text145
 29424  01969C                     __ptext145:
 29425                           	opt callstack 0
 29426  01969C                     _ADCC_ISR:
 29427                           	opt callstack 4
 29428                           
 29429                           ;incstack = 0
 29430  01969C  EE14  F0C2         	lfsr	1,___inthi_sp
 29431                           
 29432                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 29433  0196A0  0139               	movlb	57	; () banked
 29434  0196A2  95A1               	bcf	161,2,b	;volatile
 29435                           
 29436                           ; BSR set to: 57
 29437                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 29438  0196A4  0100               	movlb	0	; () banked
 29439  0196A6  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 29440  0196A8  11B6               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 29441  0196AA  11B7               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 29442  0196AC  B4D8               	btfsc	status,2,c
 29443  0196AE  0011               	retfie		f
 29444                           
 29445                           ; BSR set to: 0
 29446                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 29447  0196B0  D801               	call	i2u909_48
 29448  0196B2  0011               	retfie		f
 29449  0196B4                     i2u909_48:
 29450  0196B4  0005               	push	
 29451  0196B6  6EFA               	movwf	pclath,c
 29452  0196B8  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 29453  0196BA  6EFD               	movwf	tosl,c
 29454  0196BC  51B6               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 29455  0196BE  6EFE               	movwf	tosh,c
 29456  0196C0  51B7               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 29457  0196C2  6EFF               	movwf	tosu,c
 29458  0196C4  50FA               	movf	pclath,w,c
 29459  0196C6  0012               	return		;indir
 29460  0196C8                     __end_of_ADCC_ISR:
 29461                           	opt callstack 0
 29462                           
 29463 ;; *************** function _adc_int_t_handler *****************
 29464 ;; Defined at:
 29465 ;;		line 128 in file "daq.c"
 29466 ;; Parameters:    Size  Location     Type
 29467 ;;		None
 29468 ;; Auto vars:     Size  Location     Type
 29469 ;;		None
 29470 ;; Return value:  Size  Location     Type
 29471 ;;                  1  [STACK] void 
 29472 ;; Registers used:
 29473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 29474 ;; Tracked objects:
 29475 ;;		On entry : 3F/0
 29476 ;;		On exit  : 1/0
 29477 ;;		Unchanged: 0/0
 29478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29483 ;;Total ram usage:        0 bytes
 29484 ;; Hardware stack levels used:    1
 29485 ;; Hardware stack levels required when called:    1
 29486 ;; This function calls:
 29487 ;;		_ADCC_DischargeSampleCapacitor
 29488 ;;		_ADCC_StartConversion
 29489 ;; This function is called by:
 29490 ;;		_start_adc_scan
 29491 ;;		_ADCC_ThresholdISR
 29492 ;; This function uses a reentrant model
 29493 ;;
 29494                           
 29495                           	psect	text146
 29496  018AC0                     __ptext146:
 29497                           	opt callstack 0
 29498  018AC0                     _adc_int_t_handler:
 29499                           	opt callstack 3
 29500                           
 29501                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 29502                           
 29503                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29504                           ;incstack = 0
 29505  018AC0  013E               	movlb	62	; () banked
 29506  018AC2  51E6               	movf	230,w,b	;volatile
 29507  018AC4  006F FB9C  F001    	movff	16103,btemp	;volatile
 29508  018ACA  6A02               	clrf	(btemp+1)^0,c
 29509  018ACC  0060  F004  F002   	movff	btemp,btemp+1
 29510  018AD2  6A01               	clrf	btemp^0,c
 29511  018AD4  2601               	addwf	btemp^0,f,c
 29512  018AD6  0E00               	movlw	0
 29513  018AD8  2202               	addwfc	(btemp+1)^0,f,c
 29514  018ADA  0100               	movlb	0	; () banked
 29515  018ADC  51EF               	movf	(_R+36)& (0+255),w,b	;volatile
 29516  018ADE  0D02               	mullw	2
 29517  018AE0  50F3               	movf	243,w,c
 29518  018AE2  0FCB               	addlw	low _R
 29519  018AE4  6ED9               	movwf	fsr2l,c
 29520  018AE6  6ADA               	clrf	fsr2h,c
 29521  018AE8  0060  F007  FFDE   	movff	btemp,postinc2
 29522  018AEE  0060  F00B  FFDD   	movff	btemp+1,postdec2
 29523  018AF4                     l9968:
 29524                           
 29525                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 29526  018AF4  0100               	movlb	0	; () banked
 29527  018AF6  2BEF               	incf	(_R+36)& (0+255),f,b	;volatile
 29528  018AF8  0E0D               	movlw	13
 29529  018AFA  65EF               	cpfsgt	(_R+36)& (0+255),b	;volatile
 29530  018AFC  D003               	goto	l9974
 29531                           
 29532                           ; BSR set to: 0
 29533                           ;daq.c: 136:    R.done = 1;
 29534  018AFE  0E01               	movlw	1
 29535  018B00  6FF2               	movwf	(_R+39)& (0+255),b	;volatile
 29536  018B02  0012               	return	
 29537  018B04                     l9974:
 29538                           
 29539                           ; BSR set to: 0
 29540                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 29541  018B04  0060  F3BC  F00C   	movff	_R+36,btemp+11	;volatile
 29542  018B0A  EE20  F0F0         	lfsr	2,_R+37	;volatile
 29543  018B0E  006F FF78  F009    	movff	postinc2,btemp+8
 29544  018B14  006F FF74  F00A    	movff	postdec2,btemp+9
 29545  018B1A  2A0C               	incf	(btemp+11)^0,f,c
 29546  018B1C  D003               	goto	u906_44
 29547  018B1E                     u906_45:
 29548  018B1E  90D8               	bcf	status,0,c
 29549  018B20  320A               	rrcf	(btemp+9)^0,f,c
 29550  018B22  3209               	rrcf	(btemp+8)^0,f,c
 29551  018B24                     u906_44:
 29552  018B24  2E0C               	decfsz	(btemp+11)^0,f,c
 29553  018B26  D7FB               	goto	u906_45
 29554  018B28  A009               	btfss	(btemp+8)^0,0,c
 29555  018B2A  D7E4               	goto	l9968
 29556                           
 29557                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 29558  018B2C  ECBD  F0CE         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 29559                           
 29560                           ; BSR set to: 62
 29561                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 29562  018B30  0100               	movlb	0	; () banked
 29563  018B32  51EF               	movf	(_R+36)& (0+255),w,b	;volatile
 29564  018B34  0B0F               	andlw	15
 29565  018B36  6EE6               	movwf	postinc1,c
 29566  018B38  EC72  F0CE         	call	_ADCC_StartConversion	;wreg free
 29567                           
 29568                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29569  018B3C  0012               	return		;funcret
 29570  018B3E                     __end_of_adc_int_t_handler:
 29571                           	opt callstack 0
 29572                           
 29573 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 29574 ;; Defined at:
 29575 ;;		line 339 in file "mcc_generated_files/adcc.c"
 29576 ;; Parameters:    Size  Location     Type
 29577 ;;		None
 29578 ;; Auto vars:     Size  Location     Type
 29579 ;;		None
 29580 ;; Return value:  Size  Location     Type
 29581 ;;                  1  [STACK] void 
 29582 ;; Registers used:
 29583 ;;		None
 29584 ;; Tracked objects:
 29585 ;;		On entry : 3F/0
 29586 ;;		On exit  : 0/0
 29587 ;;		Unchanged: 0/0
 29588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29593 ;;Total ram usage:        0 bytes
 29594 ;; Hardware stack levels used:    1
 29595 ;; This function calls:
 29596 ;;		Nothing
 29597 ;; This function is called by:
 29598 ;;		_ADCC_Initialize
 29599 ;;		_ADCC_ISR
 29600 ;;		_ADCC_ThresholdISR
 29601 ;; This function uses a reentrant model
 29602 ;;
 29603                           
 29604                           	psect	text147
 29605  019DC8                     __ptext147:
 29606                           	opt callstack 0
 29607  019DC8                     _ADCC_DefaultInterruptHandler:
 29608                           	opt callstack 4
 29609                           
 29610                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29611                           
 29612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29613                           ;incstack = 0
 29614  019DC8  0012               	return		;funcret
 29615  019DCA                     __end_of_ADCC_DefaultInterruptHandler:
 29616                           	opt callstack 0
 29617                           
 29618 ;; *************** function _adc_int_handler *****************
 29619 ;; Defined at:
 29620 ;;		line 118 in file "daq.c"
 29621 ;; Parameters:    Size  Location     Type
 29622 ;;		None
 29623 ;; Auto vars:     Size  Location     Type
 29624 ;;		None
 29625 ;; Return value:  Size  Location     Type
 29626 ;;                  1  [STACK] void 
 29627 ;; Registers used:
 29628 ;;		None
 29629 ;; Tracked objects:
 29630 ;;		On entry : 3F/0
 29631 ;;		On exit  : 0/0
 29632 ;;		Unchanged: 0/0
 29633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29638 ;;Total ram usage:        0 bytes
 29639 ;; Hardware stack levels used:    1
 29640 ;; This function calls:
 29641 ;;		Nothing
 29642 ;; This function is called by:
 29643 ;;		_start_adc_scan
 29644 ;;		_ADCC_ISR
 29645 ;; This function uses a reentrant model
 29646 ;;
 29647                           
 29648                           	psect	text148
 29649  019DCA                     __ptext148:
 29650                           	opt callstack 0
 29651  019DCA                     _adc_int_handler:
 29652                           	opt callstack 4
 29653                           
 29654                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29655                           
 29656                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29657                           ;incstack = 0
 29658  019DCA  0012               	return		;funcret
 29659  019DCC                     __end_of_adc_int_handler:
 29660                           	opt callstack 0
 29661                           
 29662 ;; *************** function _ADCC_ThresholdISR *****************
 29663 ;; Defined at:
 29664 ;;		line 327 in file "mcc_generated_files/adcc.c"
 29665 ;; Parameters:    Size  Location     Type
 29666 ;;		None
 29667 ;; Auto vars:     Size  Location     Type
 29668 ;;		None
 29669 ;; Return value:  Size  Location     Type
 29670 ;;                  1    wreg      void 
 29671 ;; Registers used:
 29672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 29673 ;; Tracked objects:
 29674 ;;		On entry : 0/0
 29675 ;;		On exit  : 0/0
 29676 ;;		Unchanged: 0/0
 29677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29680 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29681 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29682 ;;Total ram usage:        5 bytes
 29683 ;; Hardware stack levels used:    1
 29684 ;; Hardware stack levels required when called:    2
 29685 ;; This function calls:
 29686 ;;		Absolute function
 29687 ;;		_ADCC_DefaultInterruptHandler
 29688 ;;		_adc_int_t_handler
 29689 ;; This function is called by:
 29690 ;;		Interrupt level 2
 29691 ;; This function uses a non-reentrant model
 29692 ;;
 29693                           
 29694                           	psect	text149
 29695  018C14                     __ptext149:
 29696                           	opt callstack 0
 29697  018C14                     _ADCC_ThresholdISR:
 29698                           	opt callstack 3
 29699                           
 29700                           ;incstack = 0
 29701  018C14  0060  F004  F038   	movff	btemp,??_ADCC_ThresholdISR
 29702  018C1A  0060  F008  F039   	movff	btemp+1,??_ADCC_ThresholdISR+1
 29703  018C20  0060  F024  F03A   	movff	btemp+8,??_ADCC_ThresholdISR+2
 29704  018C26  0060  F028  F03B   	movff	btemp+9,??_ADCC_ThresholdISR+3
 29705  018C2C  0060  F030  F03C   	movff	btemp+11,??_ADCC_ThresholdISR+4
 29706  018C32  EE14  F0C2         	lfsr	1,___inthi_sp
 29707                           
 29708                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 29709  018C36  0139               	movlb	57	; () banked
 29710  018C38  97A1               	bcf	161,3,b	;volatile
 29711                           
 29712                           ; BSR set to: 57
 29713                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 29714  018C3A  0100               	movlb	0	; () banked
 29715  018C3C  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 29716  018C3E  11B3               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 29717  018C40  11B4               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 29718  018C42  B4D8               	btfsc	status,2,c
 29719  018C44  D00C               	goto	i2u911_49
 29720                           
 29721                           ; BSR set to: 0
 29722                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 29723  018C46  D801               	call	i2u911_48
 29724  018C48  D00A               	goto	i2u911_49
 29725  018C4A                     i2u911_48:
 29726  018C4A  0005               	push	
 29727  018C4C  6EFA               	movwf	pclath,c
 29728  018C4E  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 29729  018C50  6EFD               	movwf	tosl,c
 29730  018C52  51B3               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 29731  018C54  6EFE               	movwf	tosh,c
 29732  018C56  51B4               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 29733  018C58  6EFF               	movwf	tosu,c
 29734  018C5A  50FA               	movf	pclath,w,c
 29735  018C5C  0012               	return		;indir
 29736  018C5E                     i2u911_49:
 29737  018C5E  0060  F0F0  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 29738  018C64  0060  F0EC  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 29739  018C6A  0060  F0E8  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 29740  018C70  0060  F0E4  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 29741  018C76  0060  F0E0  F001   	movff	??_ADCC_ThresholdISR,btemp
 29742  018C7C  0011               	retfie		f
 29743  018C7E                     __end_of_ADCC_ThresholdISR:
 29744                           	opt callstack 0
 29745                           
 29746 ;; *************** function _UART1_rx_vect_isr *****************
 29747 ;; Defined at:
 29748 ;;		line 181 in file "mcc_generated_files/uart1.c"
 29749 ;; Parameters:    Size  Location     Type
 29750 ;;		None
 29751 ;; Auto vars:     Size  Location     Type
 29752 ;;		None
 29753 ;; Return value:  Size  Location     Type
 29754 ;;                  1    wreg      void 
 29755 ;; Registers used:
 29756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 29757 ;; Tracked objects:
 29758 ;;		On entry : 0/0
 29759 ;;		On exit  : 0/0
 29760 ;;		Unchanged: 0/0
 29761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29766 ;;Total ram usage:        0 bytes
 29767 ;; Hardware stack levels used:    1
 29768 ;; Hardware stack levels required when called:    1
 29769 ;; This function calls:
 29770 ;;		Absolute function
 29771 ;;		_UART1_Receive_ISR
 29772 ;; This function is called by:
 29773 ;;		Interrupt level 2
 29774 ;; This function uses a non-reentrant model
 29775 ;;
 29776                           
 29777                           	psect	text150
 29778  0199A0                     __ptext150:
 29779                           	opt callstack 0
 29780  0199A0                     _UART1_rx_vect_isr:
 29781                           	opt callstack 4
 29782                           
 29783                           ;incstack = 0
 29784  0199A0  EE14  F0C2         	lfsr	1,___inthi_sp
 29785                           
 29786                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 29787  0199A4  0100               	movlb	0	; () banked
 29788  0199A6  51B8               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 29789  0199A8  11B9               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 29790  0199AA  11BA               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 29791  0199AC  B4D8               	btfsc	status,2,c
 29792  0199AE  0011               	retfie		f
 29793                           
 29794                           ; BSR set to: 0
 29795                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 29796  0199B0  D801               	call	i2u1100_48
 29797  0199B2  0011               	retfie		f
 29798  0199B4                     i2u1100_48:
 29799  0199B4  0005               	push	
 29800  0199B6  6EFA               	movwf	pclath,c
 29801  0199B8  51B8               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 29802  0199BA  6EFD               	movwf	tosl,c
 29803  0199BC  51B9               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 29804  0199BE  6EFE               	movwf	tosh,c
 29805  0199C0  51BA               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 29806  0199C2  6EFF               	movwf	tosu,c
 29807  0199C4  50FA               	movf	pclath,w,c
 29808  0199C6  0012               	return		;indir
 29809  0199C8                     __end_of_UART1_rx_vect_isr:
 29810                           	opt callstack 0
 29811                           
 29812 ;; *************** function _UART1_Receive_ISR *****************
 29813 ;; Defined at:
 29814 ;;		line 192 in file "mcc_generated_files/uart1.c"
 29815 ;; Parameters:    Size  Location     Type
 29816 ;;		None
 29817 ;; Auto vars:     Size  Location     Type
 29818 ;;		None
 29819 ;; Return value:  Size  Location     Type
 29820 ;;                  1  [STACK] void 
 29821 ;; Registers used:
 29822 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29823 ;; Tracked objects:
 29824 ;;		On entry : 3F/0
 29825 ;;		On exit  : 0/0
 29826 ;;		Unchanged: 0/0
 29827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29832 ;;Total ram usage:        0 bytes
 29833 ;; Hardware stack levels used:    1
 29834 ;; This function calls:
 29835 ;;		Nothing
 29836 ;; This function is called by:
 29837 ;;		_UART1_Initialize
 29838 ;;		_UART1_rx_vect_isr
 29839 ;; This function uses a reentrant model
 29840 ;;
 29841                           
 29842                           	psect	text151
 29843  019B56                     __ptext151:
 29844                           	opt callstack 0
 29845  019B56                     _UART1_Receive_ISR:
 29846                           	opt callstack 4
 29847                           
 29848                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 29849                           
 29850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29851                           ;incstack = 0
 29852  019B56  0EF2               	movlw	low _uart1RxBuffer
 29853  019B58  2437               	addwf	_uart1RxHead^0,w,c	;volatile
 29854  019B5A  6ED9               	movwf	fsr2l,c
 29855  019B5C  6ADA               	clrf	fsr2h,c
 29856  019B5E  0E01               	movlw	high _uart1RxBuffer
 29857  019B60  22DA               	addwfc	fsr2h,f,c
 29858  019B62  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 29859  019B68  2A37               	incf	_uart1RxHead^0,f,c	;volatile
 29860                           
 29861                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 29862  019B6A  0E07               	movlw	7
 29863  019B6C  6437               	cpfsgt	_uart1RxHead^0,c
 29864  019B6E  D001               	goto	l11548
 29865                           
 29866                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 29867  019B70  6A37               	clrf	_uart1RxHead^0,c	;volatile
 29868  019B72                     l11548:
 29869                           
 29870                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 29871  019B72  2A35               	incf	_uart1RxCount^0,f,c	;volatile
 29872                           
 29873                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29874  019B74  0012               	return		;funcret
 29875  019B76                     __end_of_UART1_Receive_ISR:
 29876                           	opt callstack 0
 29877                           
 29878 ;; *************** function _UART2_tx_vect_isr *****************
 29879 ;; Defined at:
 29880 ;;		line 195 in file "mcc_generated_files/uart2.c"
 29881 ;; Parameters:    Size  Location     Type
 29882 ;;		None
 29883 ;; Auto vars:     Size  Location     Type
 29884 ;;		None
 29885 ;; Return value:  Size  Location     Type
 29886 ;;                  1    wreg      void 
 29887 ;; Registers used:
 29888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 29889 ;; Tracked objects:
 29890 ;;		On entry : 0/0
 29891 ;;		On exit  : 0/0
 29892 ;;		Unchanged: 0/0
 29893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29898 ;;Total ram usage:        0 bytes
 29899 ;; Hardware stack levels used:    1
 29900 ;; Hardware stack levels required when called:    1
 29901 ;; This function calls:
 29902 ;;		Absolute function
 29903 ;;		_UART2_Transmit_ISR
 29904 ;; This function is called by:
 29905 ;;		Interrupt level 2
 29906 ;; This function uses a non-reentrant model
 29907 ;;
 29908                           
 29909                           	psect	text152
 29910  0199C8                     __ptext152:
 29911                           	opt callstack 0
 29912  0199C8                     _UART2_tx_vect_isr:
 29913                           	opt callstack 4
 29914                           
 29915                           ;incstack = 0
 29916  0199C8  EE14  F0C2         	lfsr	1,___inthi_sp
 29917                           
 29918                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 29919  0199CC  0100               	movlb	0	; () banked
 29920  0199CE  51BB               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 29921  0199D0  11BC               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 29922  0199D2  11BD               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 29923  0199D4  B4D8               	btfsc	status,2,c
 29924  0199D6  0011               	retfie		f
 29925                           
 29926                           ; BSR set to: 0
 29927                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 29928  0199D8  D801               	call	i2u1102_48
 29929  0199DA  0011               	retfie		f
 29930  0199DC                     i2u1102_48:
 29931  0199DC  0005               	push	
 29932  0199DE  6EFA               	movwf	pclath,c
 29933  0199E0  51BB               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 29934  0199E2  6EFD               	movwf	tosl,c
 29935  0199E4  51BC               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 29936  0199E6  6EFE               	movwf	tosh,c
 29937  0199E8  51BD               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 29938  0199EA  6EFF               	movwf	tosu,c
 29939  0199EC  50FA               	movf	pclath,w,c
 29940  0199EE  0012               	return		;indir
 29941  0199F0                     __end_of_UART2_tx_vect_isr:
 29942                           	opt callstack 0
 29943                           
 29944 ;; *************** function _UART2_Transmit_ISR *****************
 29945 ;; Defined at:
 29946 ;;		line 213 in file "mcc_generated_files/uart2.c"
 29947 ;; Parameters:    Size  Location     Type
 29948 ;;		None
 29949 ;; Auto vars:     Size  Location     Type
 29950 ;;		None
 29951 ;; Return value:  Size  Location     Type
 29952 ;;                  1  [STACK] void 
 29953 ;; Registers used:
 29954 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29955 ;; Tracked objects:
 29956 ;;		On entry : 3F/0
 29957 ;;		On exit  : 3B/39
 29958 ;;		Unchanged: 0/0
 29959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29964 ;;Total ram usage:        0 bytes
 29965 ;; Hardware stack levels used:    1
 29966 ;; This function calls:
 29967 ;;		Nothing
 29968 ;; This function is called by:
 29969 ;;		_UART2_Initialize
 29970 ;;		_UART2_tx_vect_isr
 29971 ;; This function uses a reentrant model
 29972 ;;
 29973                           
 29974                           	psect	text153
 29975  0196C8                     __ptext153:
 29976                           	opt callstack 0
 29977  0196C8                     _UART2_Transmit_ISR:
 29978                           	opt callstack 4
 29979                           
 29980                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 29981                           
 29982                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29983                           ;incstack = 0
 29984  0196C8  0E40               	movlw	64
 29985  0196CA  6032               	cpfslt	_uart2TxBufferRemaining^0,c
 29986  0196CC  D010               	goto	l673
 29987                           
 29988                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 29989  0196CE  0E54               	movlw	low _uart2TxBuffer
 29990  0196D0  2433               	addwf	_uart2TxTail^0,w,c	;volatile
 29991  0196D2  6ED9               	movwf	fsr2l,c
 29992  0196D4  6ADA               	clrf	fsr2h,c
 29993  0196D6  0E03               	movlw	high _uart2TxBuffer
 29994  0196D8  22DA               	addwfc	fsr2h,f,c
 29995  0196DA  50DF               	movf	indf2,w,c
 29996  0196DC  013D               	movlb	61	; () banked
 29997  0196DE  6FD2               	movwf	210,b	;volatile
 29998                           
 29999                           ; BSR set to: 61
 30000  0196E0  2A33               	incf	_uart2TxTail^0,f,c	;volatile
 30001                           
 30002                           ; BSR set to: 61
 30003                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 30004  0196E2  0E3F               	movlw	63
 30005  0196E4  6433               	cpfsgt	_uart2TxTail^0,c
 30006  0196E6  D001               	goto	l11560
 30007                           
 30008                           ; BSR set to: 61
 30009                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 30010  0196E8  6A33               	clrf	_uart2TxTail^0,c	;volatile
 30011  0196EA                     l11560:
 30012                           
 30013                           ; BSR set to: 61
 30014                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 30015  0196EA  2A32               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 30016                           
 30017                           ;mcc_generated_files/uart2.c: 224:     }
 30018  0196EC  0012               	return	
 30019  0196EE                     l673:
 30020                           
 30021                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 30022  0196EE  0139               	movlb	57	; () banked
 30023  0196F0  9796               	bcf	150,3,b	;volatile
 30024                           
 30025                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30026  0196F2  0012               	return		;funcret
 30027  0196F4                     __end_of_UART2_Transmit_ISR:
 30028                           	opt callstack 0
 30029                           
 30030 ;; *************** function _UART2_rx_vect_isr *****************
 30031 ;; Defined at:
 30032 ;;		line 203 in file "mcc_generated_files/uart2.c"
 30033 ;; Parameters:    Size  Location     Type
 30034 ;;		None
 30035 ;; Auto vars:     Size  Location     Type
 30036 ;;		None
 30037 ;; Return value:  Size  Location     Type
 30038 ;;                  1    wreg      void 
 30039 ;; Registers used:
 30040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 30041 ;; Tracked objects:
 30042 ;;		On entry : 0/0
 30043 ;;		On exit  : 0/0
 30044 ;;		Unchanged: 0/0
 30045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30050 ;;Total ram usage:        0 bytes
 30051 ;; Hardware stack levels used:    1
 30052 ;; Hardware stack levels required when called:    1
 30053 ;; This function calls:
 30054 ;;		Absolute function
 30055 ;;		_UART2_Receive_ISR
 30056 ;; This function is called by:
 30057 ;;		Interrupt level 2
 30058 ;; This function uses a non-reentrant model
 30059 ;;
 30060                           
 30061                           	psect	text154
 30062  0199F0                     __ptext154:
 30063                           	opt callstack 0
 30064  0199F0                     _UART2_rx_vect_isr:
 30065                           	opt callstack 4
 30066                           
 30067                           ;incstack = 0
 30068  0199F0  EE14  F0C2         	lfsr	1,___inthi_sp
 30069                           
 30070                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 30071  0199F4  0100               	movlb	0	; () banked
 30072  0199F6  51BE               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 30073  0199F8  11BF               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 30074  0199FA  11C0               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 30075  0199FC  B4D8               	btfsc	status,2,c
 30076  0199FE  0011               	retfie		f
 30077                           
 30078                           ; BSR set to: 0
 30079                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 30080  019A00  D801               	call	i2u917_48
 30081  019A02  0011               	retfie		f
 30082  019A04                     i2u917_48:
 30083  019A04  0005               	push	
 30084  019A06  6EFA               	movwf	pclath,c
 30085  019A08  51BE               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 30086  019A0A  6EFD               	movwf	tosl,c
 30087  019A0C  51BF               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 30088  019A0E  6EFE               	movwf	tosh,c
 30089  019A10  51C0               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 30090  019A12  6EFF               	movwf	tosu,c
 30091  019A14  50FA               	movf	pclath,w,c
 30092  019A16  0012               	return		;indir
 30093  019A18                     __end_of_UART2_rx_vect_isr:
 30094                           	opt callstack 0
 30095                           
 30096 ;; *************** function _UART2_Receive_ISR *****************
 30097 ;; Defined at:
 30098 ;;		line 233 in file "mcc_generated_files/uart2.c"
 30099 ;; Parameters:    Size  Location     Type
 30100 ;;		None
 30101 ;; Auto vars:     Size  Location     Type
 30102 ;;		None
 30103 ;; Return value:  Size  Location     Type
 30104 ;;                  1  [STACK] void 
 30105 ;; Registers used:
 30106 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30107 ;; Tracked objects:
 30108 ;;		On entry : 3F/0
 30109 ;;		On exit  : 0/0
 30110 ;;		Unchanged: 0/0
 30111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30116 ;;Total ram usage:        0 bytes
 30117 ;; Hardware stack levels used:    1
 30118 ;; This function calls:
 30119 ;;		Nothing
 30120 ;; This function is called by:
 30121 ;;		_UART2_Initialize
 30122 ;;		_UART2_rx_vect_isr
 30123 ;; This function uses a reentrant model
 30124 ;;
 30125                           
 30126                           	psect	text155
 30127  019BEE                     __ptext155:
 30128                           	opt callstack 0
 30129  019BEE                     _UART2_Receive_ISR:
 30130                           	opt callstack 4
 30131                           
 30132                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 30133                           
 30134                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30135                           ;incstack = 0
 30136  019BEE  0E00               	movlw	low _uart2RxBuffer
 30137  019BF0  2431               	addwf	_uart2RxHead^0,w,c	;volatile
 30138  019BF2  6ED9               	movwf	fsr2l,c
 30139  019BF4  6ADA               	clrf	fsr2h,c
 30140  019BF6  0E05               	movlw	high _uart2RxBuffer
 30141  019BF8  22DA               	addwfc	fsr2h,f,c
 30142  019BFA  006F F743 FFDF     	movff	15824,indf2	;volatile
 30143  019C00  2A31               	incf	_uart2RxHead^0,f,c	;volatile
 30144                           
 30145                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 30146  019C02  2831               	incf	_uart2RxHead^0,w,c
 30147  019C04  B4D8               	btfsc	status,2,c
 30148                           
 30149                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 30150  019C06  6A31               	clrf	_uart2RxHead^0,c	;volatile
 30151                           
 30152                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 30153  019C08  2A2F               	incf	_uart2RxCount^0,f,c	;volatile
 30154                           
 30155                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30156  019C0A  0012               	return		;funcret
 30157  019C0C                     __end_of_UART2_Receive_ISR:
 30158                           	opt callstack 0
 30159                           
 30160 ;; *************** function _TMR6_ISR *****************
 30161 ;; Defined at:
 30162 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 30163 ;; Parameters:    Size  Location     Type
 30164 ;;		None
 30165 ;; Auto vars:     Size  Location     Type
 30166 ;;		None
 30167 ;; Return value:  Size  Location     Type
 30168 ;;                  1    wreg      void 
 30169 ;; Registers used:
 30170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 30171 ;; Tracked objects:
 30172 ;;		On entry : 0/0
 30173 ;;		On exit  : 0/0
 30174 ;;		Unchanged: 0/0
 30175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30179 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30180 ;;Total ram usage:        1 bytes
 30181 ;; Hardware stack levels used:    1
 30182 ;; Hardware stack levels required when called:    2
 30183 ;; This function calls:
 30184 ;;		_TMR6_CallBack
 30185 ;; This function is called by:
 30186 ;;		Interrupt level 2
 30187 ;; This function uses a non-reentrant model
 30188 ;;
 30189                           
 30190                           	psect	text156
 30191  019C44                     __ptext156:
 30192                           	opt callstack 0
 30193  019C44                     _TMR6_ISR:
 30194                           	opt callstack 3
 30195                           
 30196                           ;incstack = 0
 30197  019C44  0060  F004  F03D   	movff	btemp,??_TMR6_ISR
 30198  019C4A  EE14  F0C2         	lfsr	1,___inthi_sp
 30199                           
 30200                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 30201  019C4E  0139               	movlb	57	; () banked
 30202  019C50  91A9               	bcf	169,0,b	;volatile
 30203                           
 30204                           ; BSR set to: 57
 30205                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 30206  019C52  EC78  F0CD         	call	_TMR6_CallBack	;wreg free
 30207  019C56  0060  F0F4  F001   	movff	??_TMR6_ISR,btemp
 30208  019C5C  0011               	retfie		f
 30209  019C5E                     __end_of_TMR6_ISR:
 30210                           	opt callstack 0
 30211                           
 30212 ;; *************** function _TMR6_CallBack *****************
 30213 ;; Defined at:
 30214 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 30215 ;; Parameters:    Size  Location     Type
 30216 ;;		None
 30217 ;; Auto vars:     Size  Location     Type
 30218 ;;		None
 30219 ;; Return value:  Size  Location     Type
 30220 ;;                  1  [STACK] void 
 30221 ;; Registers used:
 30222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 30223 ;; Tracked objects:
 30224 ;;		On entry : 3F/39
 30225 ;;		On exit  : 0/0
 30226 ;;		Unchanged: 0/0
 30227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30232 ;;Total ram usage:        0 bytes
 30233 ;; Hardware stack levels used:    1
 30234 ;; Hardware stack levels required when called:    1
 30235 ;; This function calls:
 30236 ;;		Absolute function
 30237 ;;		_TMR6_DefaultInterruptHandler
 30238 ;; This function is called by:
 30239 ;;		_TMR6_ISR
 30240 ;; This function uses a reentrant model
 30241 ;;
 30242                           
 30243                           	psect	text157
 30244  019AF0                     __ptext157:
 30245                           	opt callstack 0
 30246  019AF0                     _TMR6_CallBack:
 30247                           	opt callstack 3
 30248                           
 30249                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 30250                           
 30251                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30252                           ;incstack = 0
 30253  019AF0  0100               	movlb	0	; () banked
 30254  019AF2  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 30255  019AF4  11B0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 30256  019AF6  11B1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 30257  019AF8  B4D8               	btfsc	status,2,c
 30258  019AFA  0012               	return	
 30259                           
 30260                           ; BSR set to: 0
 30261                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 30262  019AFC  D801               	call	u881_48
 30263  019AFE  0012               	return	
 30264  019B00                     u881_48:
 30265  019B00  0005               	push	
 30266  019B02  6EFA               	movwf	pclath,c
 30267  019B04  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 30268  019B06  6EFD               	movwf	tosl,c
 30269  019B08  51B0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 30270  019B0A  6EFE               	movwf	tosh,c
 30271  019B0C  51B1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 30272  019B0E  6EFF               	movwf	tosu,c
 30273  019B10  50FA               	movf	pclath,w,c
 30274  019B12  0012               	return		;indir
 30275  019B14                     __end_of_TMR6_CallBack:
 30276                           	opt callstack 0
 30277                           
 30278 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 30279 ;; Defined at:
 30280 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 30281 ;; Parameters:    Size  Location     Type
 30282 ;;		None
 30283 ;; Auto vars:     Size  Location     Type
 30284 ;;  i               1  [STACK] unsigned char 
 30285 ;; Return value:  Size  Location     Type
 30286 ;;                  1  [STACK] void 
 30287 ;; Registers used:
 30288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 30289 ;; Tracked objects:
 30290 ;;		On entry : 3F/0
 30291 ;;		On exit  : 0/0
 30292 ;;		Unchanged: 0/0
 30293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30298 ;;Total ram usage:        0 bytes
 30299 ;; Hardware stack levels used:    1
 30300 ;; This function calls:
 30301 ;;		Nothing
 30302 ;; This function is called by:
 30303 ;;		_TMR6_Initialize
 30304 ;;		_TMR6_CallBack
 30305 ;; This function uses a reentrant model
 30306 ;;
 30307                           
 30308                           	psect	text158
 30309  019070                     __ptext158:
 30310                           	opt callstack 0
 30311  019070                     _TMR6_DefaultInterruptHandler:
 30312                           	opt callstack 0
 30313                           
 30314                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30315  019070  52E6               	movf	postinc1,f,c
 30316                           
 30317                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 30318                           ;stkvar	_i @ sp[(-1)+0]
 30319                           
 30320                           ;incstack = 0
 30321  019072  0EFF               	movlw	-1
 30322  019074  6AE3               	clrf	plusw1,c
 30323  019076                     l9288:
 30324                           
 30325                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 30326                           ;stkvar	_i @ sp[(-1)+0]
 30327  019076  0EFF               	movlw	-1
 30328  019078  50E3               	movf	plusw1,w,c
 30329  01907A  0D02               	mullw	2
 30330  01907C  0EDA               	movlw	low _tickCount
 30331  01907E  24F3               	addwf	243,w,c
 30332  019080  6ED9               	movwf	fsr2l,c
 30333  019082  0E01               	movlw	high _tickCount
 30334  019084  20F4               	addwfc	prodh,w,c
 30335  019086  6EDA               	movwf	fsr2h,c
 30336  019088  50DE               	movf	postinc2,w,c
 30337  01908A  10DE               	iorwf	postinc2,w,c
 30338  01908C  B4D8               	btfsc	status,2,c
 30339  01908E  D00C               	goto	l9292
 30340                           
 30341                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 30342                           ;stkvar	_i @ sp[(-1)+0]
 30343  019090  0EFF               	movlw	-1
 30344  019092  50E3               	movf	plusw1,w,c
 30345  019094  0D02               	mullw	2
 30346  019096  0EDA               	movlw	low _tickCount
 30347  019098  24F3               	addwf	243,w,c
 30348  01909A  6ED9               	movwf	fsr2l,c
 30349  01909C  0E01               	movlw	high _tickCount
 30350  01909E  20F4               	addwfc	prodh,w,c
 30351  0190A0  6EDA               	movwf	fsr2h,c
 30352  0190A2  06DE               	decf	postinc2,f,c
 30353  0190A4  0E00               	movlw	0
 30354  0190A6  5ADD               	subwfb	postdec2,f,c
 30355  0190A8                     l9292:
 30356                           
 30357                           ;mcc_generated_files/tmr6.c: 207:  }
 30358                           ;stkvar	_i @ sp[(-1)+0]
 30359  0190A8  0EFF               	movlw	-1
 30360  0190AA  2AE3               	incf	plusw1,f,c
 30361                           
 30362                           ;stkvar	_i @ sp[(-1)+0]
 30363  0190AC  0EFF               	movlw	-1
 30364  0190AE  006F FF8C  F001    	movff	plusw1,btemp
 30365  0190B4  0E0B               	movlw	11
 30366  0190B6  6401               	cpfsgt	btemp^0,c
 30367  0190B8  D7DE               	goto	l9288
 30368                           
 30369                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 30370  0190BA  52E5               	movf	postdec1,f,c
 30371  0190BC  0012               	return		;funcret
 30372  0190BE                     __end_of_TMR6_DefaultInterruptHandler:
 30373                           	opt callstack 0
 30374                           
 30375 ;; *************** function _DMA1_DMASCNT_ISR *****************
 30376 ;; Defined at:
 30377 ;;		line 126 in file "mcc_generated_files/dma1.c"
 30378 ;; Parameters:    Size  Location     Type
 30379 ;;		None
 30380 ;; Auto vars:     Size  Location     Type
 30381 ;;		None
 30382 ;; Return value:  Size  Location     Type
 30383 ;;                  1    wreg      void 
 30384 ;; Registers used:
 30385 ;;		None
 30386 ;; Tracked objects:
 30387 ;;		On entry : 0/0
 30388 ;;		On exit  : 3F/0
 30389 ;;		Unchanged: 0/0
 30390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30395 ;;Total ram usage:        0 bytes
 30396 ;; Hardware stack levels used:    1
 30397 ;; This function calls:
 30398 ;;		Nothing
 30399 ;; This function is called by:
 30400 ;;		Interrupt level 2
 30401 ;; This function uses a non-reentrant model
 30402 ;;
 30403                           
 30404                           	psect	text159
 30405  019D34                     __ptext159:
 30406                           	opt callstack 0
 30407  019D34                     _DMA1_DMASCNT_ISR:
 30408                           	opt callstack 5
 30409                           
 30410                           ;incstack = 0
 30411  019D34  EE14  F0C2         	lfsr	1,___inthi_sp
 30412                           
 30413                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 30414  019D38  0139               	movlb	57	; () banked
 30415  019D3A  91A2               	bcf	162,0,b	;volatile
 30416                           
 30417                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 30418  019D3C  0100               	movlb	0	; () banked
 30419  019D3E  9789               	bcf	_spi_link& (0+255),3,b	;volatile
 30420                           
 30421                           ; BSR set to: 0
 30422  019D40  0011               	retfie		f
 30423  019D42                     __end_of_DMA1_DMASCNT_ISR:
 30424                           	opt callstack 0
 30425                           
 30426 ;; *************** function _DMA1_DMADCNT_ISR *****************
 30427 ;; Defined at:
 30428 ;;		line 134 in file "mcc_generated_files/dma1.c"
 30429 ;; Parameters:    Size  Location     Type
 30430 ;;		None
 30431 ;; Auto vars:     Size  Location     Type
 30432 ;;		None
 30433 ;; Return value:  Size  Location     Type
 30434 ;;                  1    wreg      void 
 30435 ;; Registers used:
 30436 ;;		None
 30437 ;; Tracked objects:
 30438 ;;		On entry : 0/0
 30439 ;;		On exit  : 3F/39
 30440 ;;		Unchanged: 0/0
 30441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30446 ;;Total ram usage:        0 bytes
 30447 ;; Hardware stack levels used:    1
 30448 ;; This function calls:
 30449 ;;		Nothing
 30450 ;; This function is called by:
 30451 ;;		Interrupt level 2
 30452 ;; This function uses a non-reentrant model
 30453 ;;
 30454                           
 30455                           	psect	text160
 30456  019D58                     __ptext160:
 30457                           	opt callstack 0
 30458  019D58                     _DMA1_DMADCNT_ISR:
 30459                           	opt callstack 5
 30460                           
 30461                           ; BSR set to: 0
 30462                           ;incstack = 0
 30463  019D58  EE14  F0C2         	lfsr	1,___inthi_sp
 30464                           
 30465                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 30466  019D5C  0139               	movlb	57	; () banked
 30467  019D5E  93A2               	bcf	162,1,b	;volatile
 30468                           
 30469                           ; BSR set to: 57
 30470  019D60  0011               	retfie		f
 30471  019D62                     __end_of_DMA1_DMADCNT_ISR:
 30472                           	opt callstack 0
 30473                           
 30474 ;; *************** function _DMA1_DMAA_ISR *****************
 30475 ;; Defined at:
 30476 ;;		line 144 in file "mcc_generated_files/dma1.c"
 30477 ;; Parameters:    Size  Location     Type
 30478 ;;		None
 30479 ;; Auto vars:     Size  Location     Type
 30480 ;;		None
 30481 ;; Return value:  Size  Location     Type
 30482 ;;                  1    wreg      void 
 30483 ;; Registers used:
 30484 ;;		None
 30485 ;; Tracked objects:
 30486 ;;		On entry : 0/0
 30487 ;;		On exit  : 3F/39
 30488 ;;		Unchanged: 0/0
 30489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30494 ;;Total ram usage:        0 bytes
 30495 ;; Hardware stack levels used:    1
 30496 ;; This function calls:
 30497 ;;		Nothing
 30498 ;; This function is called by:
 30499 ;;		Interrupt level 2
 30500 ;; This function uses a non-reentrant model
 30501 ;;
 30502                           
 30503                           	psect	text161
 30504  019D64                     __ptext161:
 30505                           	opt callstack 0
 30506  019D64                     _DMA1_DMAA_ISR:
 30507                           	opt callstack 5
 30508                           
 30509                           ; BSR set to: 57
 30510                           ;incstack = 0
 30511  019D64  EE14  F0C2         	lfsr	1,___inthi_sp
 30512                           
 30513                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 30514  019D68  0139               	movlb	57	; () banked
 30515  019D6A  97A2               	bcf	162,3,b	;volatile
 30516                           
 30517                           ; BSR set to: 57
 30518  019D6C  0011               	retfie		f
 30519  019D6E                     __end_of_DMA1_DMAA_ISR:
 30520                           	opt callstack 0
 30521                           
 30522 ;; *************** function _DMA1_DMAOR_ISR *****************
 30523 ;; Defined at:
 30524 ;;		line 155 in file "mcc_generated_files/dma1.c"
 30525 ;; Parameters:    Size  Location     Type
 30526 ;;		None
 30527 ;; Auto vars:     Size  Location     Type
 30528 ;;		None
 30529 ;; Return value:  Size  Location     Type
 30530 ;;                  1    wreg      void 
 30531 ;; Registers used:
 30532 ;;		None
 30533 ;; Tracked objects:
 30534 ;;		On entry : 0/0
 30535 ;;		On exit  : 3F/39
 30536 ;;		Unchanged: 0/0
 30537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30542 ;;Total ram usage:        0 bytes
 30543 ;; Hardware stack levels used:    1
 30544 ;; This function calls:
 30545 ;;		Nothing
 30546 ;; This function is called by:
 30547 ;;		Interrupt level 2
 30548 ;; This function uses a non-reentrant model
 30549 ;;
 30550                           
 30551                           	psect	text162
 30552  019D70                     __ptext162:
 30553                           	opt callstack 0
 30554  019D70                     _DMA1_DMAOR_ISR:
 30555                           	opt callstack 5
 30556                           
 30557                           ; BSR set to: 57
 30558                           ;incstack = 0
 30559  019D70  EE14  F0C2         	lfsr	1,___inthi_sp
 30560                           
 30561                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 30562  019D74  0139               	movlb	57	; () banked
 30563  019D76  95A2               	bcf	162,2,b	;volatile
 30564                           
 30565                           ; BSR set to: 57
 30566  019D78  0011               	retfie		f
 30567  019D7A                     __end_of_DMA1_DMAOR_ISR:
 30568                           	opt callstack 0
 30569                           
 30570                           ;
 30571                           ; Interrupt Vector Table @ 0x8
 30572                           ;
 30573                           
 30574                           	psect	ivt0x8
 30575  000008                     __pivt0x8:
 30576                           	opt callstack 0
 30577  000008                     ivt0x8_base:
 30578                           	opt callstack 0
 30579                           
 30580                           ; Vector 0 : SWINT
 30581  000008  676F               	dw	_Default_ISR shr (0+2)
 30582                           
 30583                           ; Vector 1 : HLVD
 30584  00000A  676F               	dw	_Default_ISR shr (0+2)
 30585                           
 30586                           ; Vector 2 : OSF
 30587  00000C  676F               	dw	_Default_ISR shr (0+2)
 30588                           
 30589                           ; Vector 3 : CSW
 30590  00000E  676F               	dw	_Default_ISR shr (0+2)
 30591                           
 30592                           ; Vector 4 : NVM
 30593  000010  676F               	dw	_Default_ISR shr (0+2)
 30594                           
 30595                           ; Vector 5 : SCAN
 30596  000012  676F               	dw	_Default_ISR shr (0+2)
 30597                           
 30598                           ; Vector 6 : CRC
 30599  000014  676F               	dw	_Default_ISR shr (0+2)
 30600                           
 30601                           ; Vector 7 : IOC
 30602  000016  676F               	dw	_Default_ISR shr (0+2)
 30603                           
 30604                           ; Vector 8 : INT0
 30605  000018  6749               	dw	_INT0_ISR shr (0+2)
 30606                           
 30607                           ; Vector 9 : ZCD
 30608  00001A  676F               	dw	_Default_ISR shr (0+2)
 30609                           
 30610                           ; Vector 10 : AD
 30611  00001C  65A7               	dw	_ADCC_ISR shr (0+2)
 30612                           
 30613                           ; Vector 11 : ADT
 30614  00001E  6305               	dw	_ADCC_ThresholdISR shr (0+2)
 30615                           
 30616                           ; Vector 12 : CMP1
 30617  000020  676F               	dw	_Default_ISR shr (0+2)
 30618                           
 30619                           ; Vector 13 : SMT1
 30620  000022  676F               	dw	_Default_ISR shr (0+2)
 30621                           
 30622                           ; Vector 14 : SMT1PRA
 30623  000024  676F               	dw	_Default_ISR shr (0+2)
 30624                           
 30625                           ; Vector 15 : SMT1PRW
 30626  000026  676F               	dw	_Default_ISR shr (0+2)
 30627                           
 30628                           ; Vector 16 : DMA1SCNT
 30629  000028  674D               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 30630                           
 30631                           ; Vector 17 : DMA1DCNT
 30632  00002A  6756               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 30633                           
 30634                           ; Vector 18 : DMA1OR
 30635  00002C  675C               	dw	_DMA1_DMAOR_ISR shr (0+2)
 30636                           
 30637                           ; Vector 19 : DMA1A
 30638  00002E  6759               	dw	_DMA1_DMAA_ISR shr (0+2)
 30639                           
 30640                           ; Vector 20 : SPI1RX
 30641  000030  676F               	dw	_Default_ISR shr (0+2)
 30642                           
 30643                           ; Vector 21 : SPI1TX
 30644  000032  676F               	dw	_Default_ISR shr (0+2)
 30645                           
 30646                           ; Vector 22 : SPI1
 30647  000034  676F               	dw	_Default_ISR shr (0+2)
 30648                           
 30649                           ; Vector 23 : I2C1RX
 30650  000036  676F               	dw	_Default_ISR shr (0+2)
 30651                           
 30652                           ; Vector 24 : I2C1TX
 30653  000038  676F               	dw	_Default_ISR shr (0+2)
 30654                           
 30655                           ; Vector 25 : I2C1
 30656  00003A  676F               	dw	_Default_ISR shr (0+2)
 30657                           
 30658                           ; Vector 26 : I2C1E
 30659  00003C  676F               	dw	_Default_ISR shr (0+2)
 30660                           
 30661                           ; Vector 27 : U1RX
 30662  00003E  6668               	dw	_UART1_rx_vect_isr shr (0+2)
 30663                           
 30664                           ; Vector 28 : U1TX
 30665  000040  676F               	dw	_Default_ISR shr (0+2)
 30666                           
 30667                           ; Vector 29 : U1E
 30668  000042  676F               	dw	_Default_ISR shr (0+2)
 30669                           
 30670                           ; Vector 30 : U1
 30671  000044  676F               	dw	_Default_ISR shr (0+2)
 30672                           
 30673                           ; Vector 31 : TMR0
 30674  000046  676F               	dw	_Default_ISR shr (0+2)
 30675                           
 30676                           ; Vector 32 : TMR1
 30677  000048  676F               	dw	_Default_ISR shr (0+2)
 30678                           
 30679                           ; Vector 33 : TMR1G
 30680  00004A  676F               	dw	_Default_ISR shr (0+2)
 30681                           
 30682                           ; Vector 34 : TMR2
 30683  00004C  676F               	dw	_Default_ISR shr (0+2)
 30684                           
 30685                           ; Vector 35 : CCP1
 30686  00004E  676F               	dw	_Default_ISR shr (0+2)
 30687                           
 30688                           ; Vector 36 : Undefined
 30689  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 30690                           
 30691                           ; Vector 37 : NCO1
 30692  000052  676F               	dw	_Default_ISR shr (0+2)
 30693                           
 30694                           ; Vector 38 : CWG1
 30695  000054  676F               	dw	_Default_ISR shr (0+2)
 30696                           
 30697                           ; Vector 39 : CLC1
 30698  000056  676F               	dw	_Default_ISR shr (0+2)
 30699                           
 30700                           ; Vector 40 : INT1
 30701  000058  650D               	dw	_INT1_ISR shr (0+2)
 30702                           
 30703                           ; Vector 41 : CMP2
 30704  00005A  676F               	dw	_Default_ISR shr (0+2)
 30705                           
 30706                           ; Vector 42 : DMA2SCNT
 30707  00005C  676F               	dw	_Default_ISR shr (0+2)
 30708                           
 30709                           ; Vector 43 : DMA2DCNT
 30710  00005E  676F               	dw	_Default_ISR shr (0+2)
 30711                           
 30712                           ; Vector 44 : DMA2OR
 30713  000060  676F               	dw	_Default_ISR shr (0+2)
 30714                           
 30715                           ; Vector 45 : DMA2A
 30716  000062  676F               	dw	_Default_ISR shr (0+2)
 30717                           
 30718                           ; Vector 46 : I2C2RX
 30719  000064  676F               	dw	_Default_ISR shr (0+2)
 30720                           
 30721                           ; Vector 47 : I2C2TX
 30722  000066  676F               	dw	_Default_ISR shr (0+2)
 30723                           
 30724                           ; Vector 48 : I2C2
 30725  000068  676F               	dw	_Default_ISR shr (0+2)
 30726                           
 30727                           ; Vector 49 : I2C2E
 30728  00006A  676F               	dw	_Default_ISR shr (0+2)
 30729                           
 30730                           ; Vector 50 : U2RX
 30731  00006C  667C               	dw	_UART2_rx_vect_isr shr (0+2)
 30732                           
 30733                           ; Vector 51 : U2TX
 30734  00006E  6672               	dw	_UART2_tx_vect_isr shr (0+2)
 30735                           
 30736                           ; Vector 52 : U2E
 30737  000070  676F               	dw	_Default_ISR shr (0+2)
 30738                           
 30739                           ; Vector 53 : U2
 30740  000072  676F               	dw	_Default_ISR shr (0+2)
 30741                           
 30742                           ; Vector 54 : TMR3
 30743  000074  5C98               	dw	_TMR3_ISR shr (0+2)
 30744                           
 30745                           ; Vector 55 : TMR3G
 30746  000076  676F               	dw	_Default_ISR shr (0+2)
 30747                           
 30748                           ; Vector 56 : TMR4
 30749  000078  676F               	dw	_Default_ISR shr (0+2)
 30750                           
 30751                           ; Vector 57 : CCP2
 30752  00007A  676F               	dw	_Default_ISR shr (0+2)
 30753                           
 30754                           ; Vector 58 : Undefined
 30755  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 30756                           
 30757                           ; Vector 59 : CWG2
 30758  00007E  676F               	dw	_Default_ISR shr (0+2)
 30759                           
 30760                           ; Vector 60 : CLC2
 30761  000080  676F               	dw	_Default_ISR shr (0+2)
 30762                           
 30763                           ; Vector 61 : INT2
 30764  000082  676F               	dw	_Default_ISR shr (0+2)
 30765                           
 30766                           ; Vector 62 : Undefined
 30767  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 30768                           
 30769                           ; Vector 63 : Undefined
 30770  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 30771                           
 30772                           ; Vector 64 : Undefined
 30773  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 30774                           
 30775                           ; Vector 65 : Undefined
 30776  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 30777                           
 30778                           ; Vector 66 : Undefined
 30779  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 30780                           
 30781                           ; Vector 67 : Undefined
 30782  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 30783                           
 30784                           ; Vector 68 : Undefined
 30785  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 30786                           
 30787                           ; Vector 69 : Undefined
 30788  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 30789                           
 30790                           ; Vector 70 : TMR5
 30791  000094  63C8               	dw	_TMR5_ISR shr (0+2)
 30792                           
 30793                           ; Vector 71 : TMR5G
 30794  000096  676F               	dw	_Default_ISR shr (0+2)
 30795                           
 30796                           ; Vector 72 : TMR6
 30797  000098  6711               	dw	_TMR6_ISR shr (0+2)
 30798                           
 30799                           ; Vector 73 : CCP3
 30800  00009A  676F               	dw	_Default_ISR shr (0+2)
 30801                           
 30802                           ; Vector 74 : CWG3
 30803  00009C  676F               	dw	_Default_ISR shr (0+2)
 30804                           
 30805                           ; Vector 75 : CLC3
 30806  00009E  676F               	dw	_Default_ISR shr (0+2)
 30807                           
 30808                           ; Vector 76 : Undefined
 30809  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 30810                           
 30811                           ; Vector 77 : Undefined
 30812  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 30813                           
 30814                           ; Vector 78 : Undefined
 30815  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 30816                           
 30817                           ; Vector 79 : Undefined
 30818  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 30819                           
 30820                           ; Vector 80 : CCP4
 30821  0000A8  676F               	dw	_Default_ISR shr (0+2)
 30822                           
 30823                           ; Vector 81 : CLC4
 30824  0000AA  676F               	dw	_Default_ISR shr (0+2)
 30825  0000AC                     ivt0x8_undefint:
 30826                           	opt callstack 0
 30827  0000AC  00FF               	reset	
 30828                           
 30829                           	psect	text163
 30830  000000                     __ptext163:
 30831                           	opt callstack 0
 30832                           
 30833                           	psect	rparam
 30834  0000                     
 30835                           	psect	temp
 30836  000001                     btemp:
 30837                           	opt callstack 0
 30838  000001                     	ds	32
 30839  0000                     wtemp0	set	btemp
 30840  0000                     wtemp1	set	btemp+2
 30841  0000                     wtemp2	set	btemp+4
 30842  0000                     wtemp3	set	btemp+6
 30843  0000                     wtemp4	set	btemp+8
 30844  0000                     wtemp5	set	btemp+10
 30845  0000                     wtemp8	set	btemp+1
 30846  0000                     ttemp0	set	btemp
 30847  0000                     ttemp1	set	btemp+3
 30848  0000                     ttemp2	set	btemp+6
 30849  0000                     ttemp3	set	btemp+9
 30850  0000                     ttemp5	set	btemp+1
 30851  0000                     ttemp6	set	btemp+4
 30852  0000                     ttemp7	set	btemp+8
 30853  0000                     ltemp0	set	btemp
 30854  0000                     ltemp1	set	btemp+4
 30855  0000                     ltemp2	set	btemp+8
 30856  0000                     lltemp0	set	btemp
 30857  0000                     lltemp1	set	btemp+8
 30858  0000                     lltemp2	set	btemp+16
 30859  0000                     lltemp3	set	btemp+24
 30860                           tosu	equ	0x3FFF
 30861                           tosh	equ	0x3FFE
 30862                           tosl	equ	0x3FFD
 30863                           stkptr	equ	0x3FFC
 30864                           pclatu	equ	0x3FFB
 30865                           pclath	equ	0x3FFA
 30866                           pcl	equ	0x3FF9
 30867                           tblptru	equ	0x3FF8
 30868                           tblptrh	equ	0x3FF7
 30869                           tblptrl	equ	0x3FF6
 30870                           tablat	equ	0x3FF5
 30871                           prodh	equ	0x3FF4
 30872                           prodl	equ	0x3FF3
 30873                           indf0	equ	0x3FEF
 30874                           postinc0	equ	0x3FEE
 30875                           postdec0	equ	0x3FED
 30876                           preinc0	equ	0x3FEC
 30877                           plusw0	equ	0x3FEB
 30878                           fsr0h	equ	0x3FEA
 30879                           fsr0l	equ	0x3FE9
 30880                           wreg	equ	0x3FE8
 30881                           indf1	equ	0x3FE7
 30882                           postinc1	equ	0x3FE6
 30883                           postdec1	equ	0x3FE5
 30884                           preinc1	equ	0x3FE4
 30885                           plusw1	equ	0x3FE3
 30886                           fsr1h	equ	0x3FE2
 30887                           fsr1l	equ	0x3FE1
 30888                           bsr	equ	0x3FE0
 30889                           indf2	equ	0x3FDF
 30890                           postinc2	equ	0x3FDE
 30891                           postdec2	equ	0x3FDD
 30892                           preinc2	equ	0x3FDC
 30893                           plusw2	equ	0x3FDB
 30894                           fsr2h	equ	0x3FDA
 30895                           fsr2l	equ	0x3FD9
 30896                           status	equ	0x3FD8


Data Sizes:
    Strings     521
    Constant    372
    Data        965
    BSS         1077
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      37
    BANK0           160      0     154
    BANK1           256      0     250
    BANK2           256     25     221
    BANK3           256      0     228
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_60(CODE[1]), STR_45(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_57(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_57(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_7(CODE[6]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_7(CODE[6]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_52(CODE[4]), STR_51(CODE[4]), STR_48(CODE[4]), STR_47(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_52(CODE[4]), STR_51(CODE[4]), STR_48(CODE[4]), STR_47(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_46(CODE[75]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), 
		 -> STR_20(CODE[19]), STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), 
		 -> STR_12(CODE[19]), STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5754_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_46(CODE[75]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_46(CODE[75]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 75
		 -> STR_46(CODE[75]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_28(CODE[9]), 
		 -> STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4381tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_28(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1994spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1994spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  317816
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1358
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      31
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (17) _Volts_to_SOC                                        4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27994
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  167020
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83257
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            58    10     48   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56422
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56140
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27963
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      62
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      62
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   32597
                                              0 BANK2     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   32507
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           4     4      0   32507
                         _StartTimer
                       _Volts_to_SOC
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            58    10     48   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (17) _Volts_to_SOC                                        4     0      4      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       _Volts_to_SOC
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       ___xxtofl
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     322      69        9.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     19      DD       9       86.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      25       1       58.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4FF      58        0.0%
DATA                 0      0     821       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec  9 01:52:25 2019

                     _SPI1_Exchange8bit 9B76                __end_of_set_display_info 9BEE  
                                     _C 0100                                       _D 07FF  
                                     _H 00F3                                       _P 00A5  
                                     _R 00CB                                       _S 0060  
                                     _T FD51                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 98AE            __end_of_start_switch_handler 9B56  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FDE1                  __end_of_FVR_Initialize 9DA2  
                           __CFG_LVP$ON 000000                                     l169 9CCA  
                                   l807 9B84                                     l673 96EE  
                                   _GIE 01FE97                                     _abs 9150  
                                   _pad 79A2                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 9C76                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 9ACC                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 0096                           _INT1_CallBack 9A60  
                          __CFG_ZCD$OFF 000000                                    l1000 93EE  
                                  l2001 79FE                                    l2021 4866  
                                  l2101 0B1A                                    l2210 1D78  
                                  l1316 1FA8                                    l1308 1DE0  
                                  l1333 25FC                                    l1414 8E74  
                                  l1326 2046                                    l1318 1FAE  
                                  l2160 4C4C                                    l1328 210C  
                                  l2057 123A                                    l1329 221A  
                                  l3019 7880                                    l2139 59DE  
                       _timer3ReloadVal 0027                                    l1188 942E  
                                  l3301 8AB6                                    l2086 066A  
                                  l1632 948E                                    l2505 7254  
                                  l1641 6398                                    l1554 84FE  
                                  l3314 8A32                                    l1642 64F4  
                                  l2532 6F82                                    l1573 94C2  
                                  l1558 8806                                    l1649 7BC2  
                                  l1737 4782                                    l1780 6C7A  
                                  l2494 8232                                    l3286 6ABA  
                  _ADCC_StartConversion 9CE4                                    l1689 9BEA  
                                  l2817 42D2                                    l1857 892C  
                                  l2498 7180                                    l1866 7EDC  
                                  l7100 34D8                                    l2772 3614  
                                  l2924 9190                                    l2916 6E10  
                                  l2853 2E58                                    l7030 3220  
                                  l2784 34A4                                    l7104 34E4  
                                  l7032 3232                                    l7040 326C  
                                  l7016 318E                                    l7200 6DAE  
                                  l7130 3570                                    l7114 350C  
                                  l7026 3200                                    l7210 6E08  
                                  l2955 609C                                    l7140 359C  
                                  l7060 331A                                    l7036 323C  
                                  l7300 5C14                                    l7204 6DB2  
                                  l2893 66F2                                    l7118 3512  
                                  l7152 35F4                                    l7144 35B4  
                                  l7080 342E                                    l7064 3324  
                                  l7312 5CAE                                    l7400 3E96  
                                  l7146 35C4                                    l7090 3488  
                                  l7082 3454                                    l7058 3308  
                                  l7306 5C68                                    l7410 3EEC  
                                  l7242 50E0                                    l7068 3356  
                                  l7324 5D80                                    l7500 4212  
                                  l7412 3F1C                                    l7228 8AA6  
                                  l7406 3ED6                                    l7262 5296  
                                  l7360 6238                                    l7352 618C  
                                  l7344 6104                                    l7520 42B6  
                                  l7512 427E                                    l7432 3FAE  
                                  l7424 3F94                                    l7256 51FE  
                                  l7098 34C6                                    l7186 9180  
                                  l7506 424E                                    l7450 4074  
                                  l7442 403E                                    l7418 3F5A  
                                  l7266 5304                                    l7258 524E  
                                  l7452 4086                                    l7460 40DE  
                                  l7380 3DB8                                    l7284 8A22  
                                  l7630 2C68                                    l7542 26CE  
                                  l7710 741C                                    l7518 42A6  
                                  l7390 3E0E                                    l7624 2C4C  
                                  l7560 279C                                    l7544 26D4  
                                  l7536 268E                                    l8440 5E4C  
                                  l7704 73FC                                    l7472 4128  
                                  l7392 3E3E                                    l7800 71CE  
                                  l7634 2C8E                                    l7562 27A2  
                                  l7554 275C                                    l7546 2704  
                                  l8450 5EE2                                    l8442 5E6E  
                                  l7490 419E                                    l7466 410C  
                                  l7458 40DA                                    l7386 3DF8  
                                  l7644 2CD8                                    l7572 27F4  
                                  l7564 27D2                                    l8460 5F4A  
                                  l6916 85D2                                    l7732 74F6  
                                  l7724 74C2                                    l7476 414E  
                                  l7812 7252                                    l7804 721C  
                                  l7820 9126                                    l9510 7666  
                                  l7662 2D98                                    l6950 2EF8  
                                  l8462 5F88                                    l6918 85F4  
                                  l7486 4198                                    l7830 6E6C  
                                  l9512 766C                                    l9520 76AE  
                                  l7648 2CDE                                    l6944 2EB8  
                                  l9352 6B28                                    l9344 6AFC  
                                  l8456 5F0E                                    l7752 78D4  
                                  l7744 78AA                                    l9432 430E  
                                  l9514 767A                                    l9506 7650  
                                  l7658 2D52                                    l6962 2F76  
                                  l6954 2F0E                                    l8466 5FF0  
                                  l8458 5F26                                    l7770 7988  
                                  l7762 7954                                    l9442 442C  
                                  l9426 42DE                                    l9292 90A8  
                                  l9700 93D6                                    l9508 7660  
                                  l7676 2E06                                    l7668 2DC2  
                                  l6980 302E                                    l6956 2F3E  
                                  l9356 6B40                                    l8476 608C  
                                  l7748 78BC                                    l8492 6984  
                                  l8820 97A8                                    l9534 774C  
                                  l9526 76DE                                    l9518 7682  
                                  l7678 2E20                                    l6974 2FE8  
                                  l9390 94A4                                    l7782 81FC  
                                  l7854 6F1A                                    l7846 6EEE  
                                  l8494 69F0                                    l9454 4538  
                                  l9446 4506                                    l9288 9076  
                                  l6968 2FA8                                    l7856 6F30  
                                  l7848 6F0A                                    l9472 4750  
                                  l9480 4762                                    l6986 3050  
                                  l6978 2FFE                                    l7874 900E  
                                  l7698 73E6                                    l7786 8230  
                                  l7778 81BA                                    l7794 713E  
                                  l8906 6670                                    l9466 46B4  
                                  l9458 45D4                                    l9546 88E6  
                                  l8828 904A                                    l8916 66D2  
                                  l8860 875E                                    l8852 86EE  
                                  l9718 9416                                    l8696 97DE  
                                  l9840 82FE                                    l8864 8762  
                                  l8856 86F6                                    l8882 65AE  
                                  l8874 6542                                    l8788 94CC  
                                  l8884 65BC                                    l9844 833C  
                                  l9862 58E8                                    l8894 661E  
                                  l8886 65D2                                    STR_1 FF5F  
                                  l8896 663C                                    l8888 65F0  
                                  l9880 7E46                                    STR_2 FFB1  
                                  STR_3 FFDF                                    l9962 93AC  
                                  l8898 6652                                    l9890 7EB6  
                                  STR_4 FF4E                                    STR_5 FF70  
                                  l9868 7DEA                                    STR_6 FFB1  
                                  STR_7 FFDF                                    l9974 8B04  
                                  STR_8 FF3D                                    STR_9 FF92  
                                  l9968 8AF4                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    u5010 3476  
                                  _T2PR 003FAB                                    u5110 3560  
                                  u5050 34EA                                    u5115 3550  
                                  u5140 3580                                    u5300 6E00  
                                  u5070 3504                                    u5310 6E02  
                                  u6200 2D66                                    u5240 9164  
                                  u6105 2A3E                                    u6210 2DAC  
                                  u5250 6D32                                    _T6PR 003F93  
                                  u6115 2C06                                    u5420 51A4  
                                  u5340 8A64                                    u5180 95D2  
                                  u5500 89E2                                    _PMD0 0039C0  
                                  u5405 50FE                                    _PMD1 0039C1  
                                  u6150 2CD0                                    u4710 8622  
                                  u5406 5104                                    u5350 8A66  
                                  u5190 95D4                                    _PMD2 0039C2  
                                  u5255 6D28                                    u5407 5112  
                                  _PMD3 0039C3                                    u6080 27E2  
                                  u5520 9632                                    u5600 5CDA  
                                  u5440 527C                                    _PMD4 0039C4  
                                  u5425 519A                                    _PMD5 0039C5  
                                  u5530 9634                                    u6330 7900  
                                  u5370 5078                                    _PMD6 0039C6  
                                  _PMD7 0039C7                                    u4900 3264  
                                  u5620 5DB8                                    u5700 6186  
                                  u6260 7448                                    u5380 50C4  
                                  u4740 9602                                    u4717 8614  
                                  u5445 5272                                    u6190 2D2C  
                                  u4910 3284                                    u5550 5C0E  
                                  u5710 61B8                                    u6350 7974  
                                  u4750 9604                                    u5470 92E6  
                                  u6095 2976                                    u5295 6DE2  
                                  u5375 506E                                    u5640 5E0A  
                                  u6280 74E2                                    u5480 92E8  
                                  u4905 3254                                    u8210 8C8C  
                                  u4850 31B4                                    u5570 5C64  
                                  u5730 6270                                    u6450 9122  
                                  u6530 6F38                                    u5490 89E0  
                                  u6195 2D1C                                    u4860 31D4  
                                  u6460 6E4C                                    u4861 31CE  
                                  u5581 5C6E                                    u8310 6ADA  
                                  u5590 5CA8                                    u5750 62C2  
                                  u5670 60FE                                    u6390 822C  
                                  u6550 6F62                                    u6470 6E60  
                                  u8055 9322                                    u6560 8FEA  
                                  u6480 6E9A                                    u6465 6E42  
                                  u4970 334C                                    u6570 900A  
                                  u5690 6154                                    u5930 4190  
                                  u8170 6666                                    u8235 8CC0  
                                  u8236 8CC2                                    u8228 8C8E  
                                  u6485 6E90                                    u4878 31D6  
                                  u7630 5EDE                                    u8414 434A  
                                  u4975 333C                                    u8415 4344  
                                  u8600 88D2                                    u7650 6036  
                                  u9330 778A                                    u5970 41EC  
                                  u5890 4106                                    u9410 8166  
                                  u7730 6A7C                                    u8434 4520  
                                  u8435 451A                                    u7660 6038  
                                  u5980 4226                                    u9350 7806  
                                  u9510 47B8                                    u5990 4262  
                                  u8454 45EE                                    u8374 42F8  
                                  u8630 8918                                    u5975 41DC  
                                  u8455 45E8                                    u8375 42F2  
                                  u9520 47BA                                    u8480 4618  
                                  u9601 4B14                                    u9417 8158  
                                  u8490 9B20                                    u9610 4B2A  
                                  u8474 4610                                    u8394 4328  
                                  u8618 88D4                                    u9611 4B28  
                                  u8475 460A                                    u8395 4322  
                                  u9620 4B3E                                    u9540 482A  
                                  u9630 4B42                                    u8496 9B22  
                                  u9560 483C                                    u9720 0194  
                                  u9480 5610                                    u8648 891A  
                                  u9650 4B58                                    u9810 050E  
                                  u9730 0196                                    _PLLR 01CEE0  
                                  u9580 488C                                    u9590 4AE4  
                                  u9910 0648                                    u9840 0562  
                                  u9760 02A6                                    u9770 02A8  
                                  u9690 00DA                                    u9870 05C6  
                                  u9980 0A18                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 96C8  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0394  
                                  _cp_h FDF1                                    _cp_l FDED  
                                  _atoi 5E32                                    _ctoa 8930  
                                  _main 1D82                                    _dtoa 4788  
                                  _nanf 8D48                                    _seed 02D5  
                                  _prec 0023                                    _nout 00C7  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 58F4  
                                  btemp 0001                                    _xtoa 4C08  
                __end_of_check_adc_scan 9D9A                           ___fpclassifyf 6C84  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 002B  
             __end_of_SPI1_Exchange8bit 9B94               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize 9268                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 99A0                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0038                        __end_of_INT0_ISR 9D32  
                      __end_of_INT1_ISR 9472          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 8506           __end_of_OSCILLATOR_Initialize 9CD0  
                                 l11000 4CB2                                   l11110 14E2  
                                 l11024 4E08                                   l11008 4D12  
                                 l11032 4E8E                                   l11112 14F8  
                                 l11212 1D00                                   l11108 14A8  
                                 l11206 1CA6                                   l11150 1830  
                                 l11222 1D24                                   l11048 4F78  
                                 l11216 1D04                                   l11128 165C  
                                 l11162 191C                                   l11138 16F2  
                                 l11090 1376                                   l10522 5484  
                                 l11402 7ADA                                   l10460 865E  
                                 l10620 4BBE                                   l10516 53C6  
                                 l10470 79CE                                   l10550 897A  
                                 l10702 0406                                   l11182 1A7C  
                                 l11158 18E8                                   l11086 1326  
                                 l11262 855E                                   l10448 7796  
                                 l10464 869C                                   l10480 7A44  
                                 l10616 4B82                                   l10800 0B12  
                                 l10720 0554                                   l10704 0470  
                                 l11192 1B2A                                   l11088 1360  
                                 l10536 559C                                   l10528 54EE  
                                 l10474 79F6                                   l10490 80EC  
                                 l10802 0B34                                   l10634 00AC  
                                 l10484 7A8E                                   l10476 7A08  
                                 l10548 894E                                   l10900 10E2  
                                 l10740 05F6                                   l10732 0594  
                                 l10724 057C                                   l10708 04D2  
                                 l11276 83DC                                   l11454 36E8  
                                 l10582 48A0                                   l10574 4856  
                                 l10742 0602                                   l10726 058E  
                                 l10646 00F0                                   l10654 0146  
                                 l11278 841E                                   l11560 96EA  
                                 l11480 3B30                                   l11472 39B8  
                                 l10816 0C32                                   l10664 01EA  
                                 l10672 0258                                   l11800 2014  
                                 l11490 3BD8                                   l11458 372A  
                                 l10586 48BE                                   l10762 06F0  
                                 l10682 02FC                                   l10690 032A  
                                 l10666 0216                                   l11730 1DCA  
                                 l11548 9B72                                   l11484 3BBA  
                                 l11468 393A                                   l10596 4AD0  
                                 l10916 119A                                   l10828 0CBA  
                                 l10836 0D24                                   l10844 0D90  
                                 l10852 0EA2                                   l10668 022C  
                                 l11820 22F8                                   PRLOCK 0039EF  
                                 l11486 3BC2                                   l10758 06B8  
                                 l11734 1DE8                                   l10880 0FF0  
                                 l10864 0F3A                                   l10792 0A48  
                                 l10768 077A                                   l10960 5A80  
                                 l10952 5A14                                   l10936 5960  
                                 l11672 6490                                   l11824 235A  
                                 l11808 2038                                   l11736 1DFA  
                                 l11728 1DC2                                   l10890 1092  
                                 l10778 0926                                   l10698 0396  
                                 l10970 5B36                                   l11658 6368  
                                 l11834 24D6                                   l11842 2520  
                                 l10956 5A50                                   l11860 258E  
                                 l11852 2564                                   l11836 2500  
                                 l10878 0FD6                                   l10974 5B72  
                                 l10966 5B0A                                   l11870 25D2  
                                 l11880 2626                                   l10994 4C76  
                                 l11866 25AC                                   l11858 2576  
                                 l11786 1FB2                                   l10988 4C3C  
                                 l11788 1FE0                         __end_of___aodiv 5E32  
                          _Volts_to_SOC 86E6                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 361E  
                                 _ADCLK 003EFF                         __end_of___aomod 62E6  
                                 _ADPCH 003EF1                         __end_of___fldiv 42DC  
                                 _ADREF 003EFD                         __end_of___awdiv 7510  
                       __end_of___flneg 9150                                   STR_11 FF81  
                                 STR_12 FEB8                                   STR_20 FEA5  
                                 STR_21 FF92                                   STR_13 FEDE  
                                 STR_30 FE7F                                   STR_22 FF92  
                                 STR_14 FECB                                   STR_23 FF81  
                                 STR_31 FFCC                                   STR_15 FF2A  
                                 STR_32 FFCC                                   STR_24 FFFB  
                                 STR_16 FF04                                   STR_25 FFF8  
                                 STR_33 FFA2                                   STR_17 FF17  
                         __CFG_WDTE$OFF 000000                                   STR_34 FFA2  
                                 STR_18 FEF1                                   STR_35 FFA2  
                                 STR_51 FFE9                                   STR_27 FFC0  
                                 STR_19 FE58                                   STR_52 FFF1  
                                 STR_28 FFD6                                   STR_36 FE40  
                       __end_of___awmod 79A2                                   STR_45 FE3F  
                                 STR_29 FE7F                                   STR_38 FE92  
                                 STR_46 FDF5                                   STR_55 FFF5  
                                 STR_47 FFE5                                   STR_39 FE6C  
                                 STR_48 FFED                                   _ADRPT 003EEC  
                                 STR_57 FFF5                         __end_of___flmul 2E62  
                       __end_of___flsub 91DC                         __end_of___fltol 6F8C  
                                 u10140 10B8                                   u10300 4C22  
                                 u10160 116E                                   u10080 0EE4  
                                 u10240 5A76                                   u10400 4E8A  
                                 u10170 1170                                   u10250 5ABC  
                                 u10410 4EAA                                   u10330 4D0A  
                                 u10340 4D5E                                   u10421 4EDA  
                                 u10405 4E6C                                   u10430 4EF0  
                                 u10350 4D60                                   u10431 4EEE  
                                 u10280 5B98                                   u10440 4F04  
                                 u10520 13BE                                   u10257 5AAE  
                                 u10450 4F08                                   u10370 4DBE  
                                 u10530 13C0                                   u10380 4DC0  
                                 u10540 13E6                                   u10720 1B7E  
                                 u10640 1746                                   u10570 1540  
                                 _U1P1H 003DED                                   u10580 1542  
                                 u10740 853E                                   _U1P2H 003DEF  
                                 u10670 19D6                                   u10590 1568  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u10680 19D8  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 _U1P3L 003DF0                                   _U2P1L 003DD4  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u10970 64E0                                   _U2P3L 003DD8  
                                 u10980 64E2                                   _T5CLK 003F9D  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00B2  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 003D  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR 9DBC                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 73C2  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 8F7A                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 9C5E                            _DMA1CON1bits 003BFD  
                                 _flags 0025                __size_of_calc_model_data 02DA  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
                                 _fputc 7766              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha 92F2                                   _fputs 864E  
                       __end_of_isdigit 963E                         __end_of_ivln2_h FDED  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand 9516  
                                 _width 0021                                   _putch 9C28  
                       __end_of_islower 95DE                         __end_of_isspace 901E  
              _INT1_SetInterruptHandler 98D6                         __end_of_isupper 960E  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler 985E             _UART1_SetRxInterruptHandler 9836  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf 7DDE  
                       __end_of_tolower 8AC0                         __end_of_strncmp 6AC4  
                       __end_of_toupper 8A3C               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 99C8                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 9222                   __end_of_ringBufS_init 9796  
                       __initialization 7BC6                       _UART2_rx_vect_isr 99F0  
                          __end_of_cp_h FDF5                            __end_of_cp_l FDF1  
                          __end_of_atoi 60A6                            __end_of_ctoa 89B8  
                          __end_of_main 2638                            __end_of_dtoa 4C08  
                          __end_of_nanf 8DAA                            __end_of_stoa 5BB2  
                          __end_of_xtoa 4FC2                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0038                 __end_of_TMR2_Initialize 9C8E  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button 93B4  
              _TMR5_SetInterruptHandler 9886                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A9  
                     _port_data_dma_ptr 9D4C                     ??_UART2_rx_vect_isr 003D  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 96F4  
                       _PWM8_Initialize 9CA4                        _UART1_Initialize 91DC  
                     _UART2_tx_vect_isr 99C8                      _UART2_Transmit_ISR 96C8  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 8CE4  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 92F2  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0038                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1017 8F6C                                  _RB6PPS 003A0E  
                                i1l1205 732A                    _start_switch_handler 9B36  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize 92AE                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright 9D14  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u906_44 8B24                                  u827_20 997E  
                                u850_28 7656                                  u906_45 8B1E  
                                u827_26 9980                                  u853_20 7676  
                                u853_21 7670                                  u857_24 7742  
                                u857_25 773E                                  u881_48 9B00  
                                u873_48 9ADC                                  u875_28 9A70  
                  __size_of_hid_display 0102                                  u884_28 9A94  
                      __end_of___xxtofl 66FC   __end_of_ADCC_DischargeSampleCapacitor 9D82  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor 9D7A  
              __end_of_send_lcd_cmd_dma 8FCC                         _TMR3_WriteTimer 93F4  
                   ??_UART2_tx_vect_isr 003D               __end_of_UART2_rx_vect_isr 9A18  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 9D42  
                      _UART2_Initialize 8E0C                                  _WaitMs 94AA  
                       _conv_raw_result 42DC                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 70FC  
                                ___fleq 8178                       _ADCC_ThresholdISR 8C14  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 877C  
                                _efgtoa 0000                                  _floorf 4FC2  
                    ?_ADCC_ThresholdISR 0038                                  _memset 532E  
                  __size_of_help_button 0038                                  clear_0 7C5A  
                                clear_1 7C6E                                  clear_2 7C80  
                                clear_3 7C8C                                  clear_4 7C98  
                                clear_5 7CA4                                  clear_6 7CB0  
                                clear_7 7CBC               __end_of_port_data_dma_ptr 9D56  
                                _printf 8DAA                      _eaDogM_WriteString 8506  
                                _strcpy 80A4                               ?_ADCC_ISR 0038  
                                _strlen 85AC                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 05FF                         _ADCC_Initialize 8BA8  
                        _PMD_Initialize 9CD0               __end_of_UART2_tx_vect_isr 99F0  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0038                  __end_of_start_adc_scan 8D48  
                          __mediumconst FC80                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 8EC4                        __end_of_vfprintf 845C  
                            _StartTimer 9334           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize 9268                       _SYSTEM_Initialize 90BE  
                            __accesstop 0060                 __end_of__initialization 7CCE  
                             ?_INT0_ISR 0038                               ?_INT1_ISR 0038  
                  __end_of_display_help 9D92                    __end_of_display_info 9D8A  
             __end_of_CLKREF_Initialize 9D4C                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer 93B4  
                 _set_temp_display_help 9CF6                        _clear_hid_pflags 9A3C  
                 __end_of_TMR3_CallBack 9ACC               __end_of_ADCC_ThresholdISR 8C7E  
                    __size_of_calc_bsoc 0744                  __end_of_ringBufS_flush 880E  
                        __pcstackCOMRAM 0038                              ___inthi_sp 10C2  
                            ___intlo_sp 1861                            __pidataBANK0 963E  
                          __pidataBANK1 7FCA                            __pidataBANK2 823C  
           __size_of_send_port_data_dma 0052                               ?_TMR3_ISR 0038  
                             ?_TMR5_ISR 0038                               ?_TMR6_ISR 0038  
                        ivt0x8_undefint 00AC                           __end_of_fputc 788A  
                         __end_of_fputs 86E6                           __end_of_srand 954A  
                 __end_of_TMR5_CallBack 9AA8                           __end_of_putch 9C42  
               __end_of_PWM8_Initialize 9CBA                 __end_of_TMR6_Initialize 971E  
                     _adc_int_t_handler 8AC0                  __end_of_PMD_Initialize 9CE4  
                            __end_of_bp FDE9                              ??_ADCC_ISR 0038  
                 __end_of_TMR6_CallBack 9B14             __size_of_EXT_INT_Initialize 0034  
                         _DMA1_DMAA_ISR 9D64                   TMR3_ISR@CountCallBack 00C9  
                        _clear_adc_scan 9DA2                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 00BE  
             __end_of_SYSTEM_Initialize 9108                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer 9434  
                            __pbssBANK0 0060                              __pbssBANK1 01DA  
                            __pbssBANK2 02D5                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            _check_help 62E6                 __end_of_conv_raw_result 4788  
                 _INT0_InterruptHandler 00C4                              ??_INT0_ISR 0038  
                            ??_INT1_ISR 003E                       __end_of_TimerDone 97E6  
                      _DMA1_DMADCNT_ISR 9D58                      __size_of_init_bsoc 0170  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                           _init_port_dma 957E  
                 __end_of_wait_lcd_done 9C28        __end_of_TMR3_SetInterruptHandler 98D6  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 9886  
                            ??_TMR3_ISR 02BC                 __end_of_ADCC_Initialize 8C12  
                            ??_TMR5_ISR 0042               __end_of_adc_int_t_handler 8B3E  
                            ??_TMR6_ISR 003D                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler 994E  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler 9926  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 9B56  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 9DA8                          ?_DMA1_DMAA_ISR 0038  
                      _DMA1_DMASCNT_ISR 9D34                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 u1083_20 3B28  
                               u1090_28 9AB8                                 _U1ERRIR 003DF9  
                               u1085_20 3BD0                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0038              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0B3E  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 3D62                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch 9796                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 93F4                 __size_of_switch_handler 0128  
                    __size_of_stop_bsoc 0006       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim 9C5E                                 __Lparam 0000  
              __end_of_UART1_Initialize 9222                       __end_of_hid_input 8930  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 5BB2  
                               ___fladd 2E62                                 ___aomod 60A6  
                               ___fldiv 3D62                                 ___awdiv 73C2  
                               ___flneg 9108                                 ___awmod 788A  
                               ___flmul 2638                                 ___flsub 9196  
                               ___fltol 6E1A               __end_of_UART1_Receive_ISR 9B76  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 7FCA                                 __pcinit 7BC6  
              __end_of_mode_lamp_bright 9D22                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand 9D06  
                               __ramtop 2000                                 __ptext0 1D82  
                               __ptext1 9A18                                 __ptext2 9B36  
                               __ptext3 8CE4                                 __ptext4 9CE4  
                               __ptext5 9D7A                                 __ptext6 9516  
                               __ptext7 957E                                 __ptext8 7EE0  
                               __ptext9 971E                       _UART2_Receive_ISR 9BEE  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize 9CBA                            __size_of_abs 0046  
                          __size_of_pad 0114                                 us565999 5E1C  
                     __end_of_init_bsoc 70FC                                 _isalpha 92AE  
                               _isdigit 960E                                 us576999 62D4  
                               _ivln2_h FDE9                                 us950999 47A2  
                             _T3CONbits 003FA6                                 _mode_sw 002E  
                     __end_of_lp_filter 6C84                                 _islower 95AE  
                               _isspace 8FCC                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 8E6A  
                               _isupper 95DE              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 7CD4                                 _tolower 8A3C  
                 __size_of_display_help 0008                                 _utctime 009D  
                 __size_of_display_info 0008                                 _strncmp 68FC  
                               _toupper 89B8                    end_of_initialization 7CCE  
             __size_of_convert_adc_data 00B8                      _check_enter_button 9374  
                             i1u1115_20 7320     __end_of_UART2_SetRxInterruptHandler 9836  
           _UART2_SetRxInterruptHandler 980E                               i2u1100_48 99B4  
                             i2u1102_48 99DC                       __end_of_set_vterm 9BD0  
                     __end_of_vfpfcnvrt 1D82                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd 9DB4               __end_of_UART2_Receive_ISR 9C0C  
                        wdtdelay@dcount 00A1                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 003E                   _INT1_InterruptHandler 00C1  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc 9DBA  
              _TMR3_SetInterruptHandler 98AE                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler 985E                            _display_help 9D8A  
                 _TMR5_InterruptHandler 00AC                            _display_info 9D82  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags 9A60  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler 9976  
           _ADCC_SetADIInterruptHandler 994E                              _update_lcd 7AB6  
                       _calc_model_data 561A                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc 9A18  
                       _DMA1_Initialize 8B3E                              _start_bsoc 9B14  
                       _SPI1_Initialize 9C8E                   __end_of_get_vterm_ptr 969C  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs 94E0            __end_of_INTERRUPT_Initialize 8CE4  
                            _vterm_dump 7510                          __end_of___flge 725E  
                        __end_of___fleq 823C    __end_of_INT0_DefaultInterruptHandler 9DC8  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 9DC6  
            __size_of_UART1_Receive_ISR 0020                         _DMA2_Initialize 8EC4  
                         __pidataBIGRAM 66FC                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 005A  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 532E             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 0095                          __end_of_memset 561A  
                        __end_of_printf 8E0C                __end_of_DMA1_DMADCNT_ISR 9D62  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack 9AF0  
                        __end_of_strcpy 8178                          __end_of_strlen 864E  
                   start_initialization 7BC6    __end_of_TMR5_DefaultInterruptHandler 999E  
 __size_of_TMR5_DefaultInterruptHandler 0028            _TMR5_DefaultInterruptHandler 9976  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs 9196  
                 __end_of_INT1_CallBack 9A84               __size_of_set_display_info 001E  
                           __end_of_pad 7AB6                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd 976E                          _switch_handler 763E  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01F2                   __end_of___fpclassifyf 6E1A  
                         _uart2RxBuffer 0500                __end_of_DMA1_DMASCNT_ISR 9D42  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR 9D70  
                   __end_of_hid_display 7EE0              __end_of_send_port_data_dma 9070  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 97BE  
                         _ringBufS_init 976E                             __pdataBANK0 00CB  
                           __pdataBANK1 0100                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 0028  
            __end_of_EXT_INT_Initialize 957E                 __end_of_calc_model_data 58F4  
                   __end_of_help_button 94AA         __end_of_eaDogM_WriteStringAtPos 9516  
                   __end_of_BVSOC_TABLE FD51                             __pbssBIGRAM 07FF  
               __end_of_DMA1_Initialize 8BA8                             __pbssCOMRAM 0021  
      __end_of_INT0_SetInterruptHandler 9926                           __pcstackBANK2 02BC  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 7766                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 9CA4                _UART1_RxInterruptHandler 00B8  
              _UART2_TxInterruptHandler 00BB                               __end_of_T FDE1  
                      _convert_adc_data 82F8                               _calc_bsoc 361E  
             __size_of_ringBufS_put_dma 00AA                            _init_display 7EE0  
                __end_of_DMA1_DMAOR_ISR 9D7A                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00AF                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize 8F1E                  _PIN_MANAGER_Initialize 880E  
              __size_of_TMR3_Initialize 0046                    __end_of_wait_lcd_set 9DAE  
                         __pmediumconst FC80                               __ptext100 980E  
                             __ptext101 91DC                               __ptext110 9C8E  
                             __ptext102 9836                               __ptext111 9CA4  
                             __ptext103 96F4                               __ptext120 8EC4  
                             __ptext112 9CD0                               __ptext104 985E  
                             __ptext121 8B3E                               __ptext113 880E  
                             __ptext105 9222                               __ptext130 8F20  
                             __ptext122 9D42                               __ptext114 9CBA  
                             __ptext106 9886                               __ptext131 93B4  
                             __ptext123 8BA8                               __ptext115 8C7E  
                             __ptext107 9268                               __ptext140 9D4C  
                             __ptext132 9A84                               __ptext124 9926  
                             __ptext116 9D9A                               __ptext108 98AE  
                             __ptext141 9D24                               __ptext133 9976  
                             __ptext125 994E                               __ptext117 954A  
                             __ptext109 9C76                               __ptext150 99A0  
                             __ptext142 9ACC                               __ptext134 7260  
                             __ptext126 9434                               __ptext118 98D6  
                             __ptext151 9B56                               __ptext143 9DC6  
                             __ptext135 93F4                               __ptext127 9A60  
                             __ptext119 98FE                               __ptext160 9D58  
                             __ptext152 99C8                               __ptext144 9DBC  
                             __ptext136 9AA8                               __ptext128 9DC2  
                             __ptext161 9D64                               __ptext153 96C8  
                             __ptext145 969C                               __ptext137 9DC4  
                             __ptext129 763E                               __ptext162 9D70  
                             __ptext154 99F0                               __ptext146 8AC0  
                             __ptext138 361E                               __ptext163 0000  
                             __ptext155 9BEE                               __ptext147 9DC8  
                             __ptext139 901E                               __ptext156 9C44  
                             __ptext148 9DCA                               __ptext157 9AF0  
                             __ptext149 8C14                               __ptext158 9070  
                             __ptext159 9D34                               _hid_input 88A0  
                    __end_of_StartTimer 9374                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00AC                                _ADCC_ISR 969C  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                             _init_bsoc 6F8C                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 6AC4  
                           _hid_display 7DDE                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 8C7E  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0038                                _INT0_ISR 9D24  
                              _INT1_ISR 9434                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 01DA                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0443  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack 9AA8                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              i2u911_48 8C4A                                i2u911_49 8C5E  
                              _PIR9bits 0039A9                                i2u917_48 9A04  
                              i2u909_48 96B4                __size_of_TMR5_Initialize 0046  
                             _set_vterm 9BB2                     __size_of_update_lcd 0110  
                           _help_button 9472                                _TMR3_ISR 7260  
                           _BVSOC_TABLE FC81                                _TMR5_ISR 8F20  
                              _TMR6_ISR 9C44                               _port_data 05FF  
                   __size_of_static_soc 0024                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack 9A84                              _ADCON0bits 003EF8  
                    __end_of_check_help 64F8                               _start_lcd 9DAE  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack 9AF0                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc 9DB4  
                      _set_display_info 9BD0                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 7BDA                               copy_data1 7C00  
                             copy_data2 7C22                               copy_data3 7C44  
              _INT0_SetInterruptHandler 98FE                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler 980E             _UART2_SetTxInterruptHandler 97E6  
                          _uart1RxCount 0035                            _uart2RxCount 002F  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done 9C0C                            _send_lcd_cmd 9746  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler 9DCA  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                      __end_of_get_switch 97BE  
                 __end_of_DMA1_DMAA_ISR 9D6E                      ___fpclassifyf@F463 0099  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 64F8                       ?_DMA1_DMADCNT_ISR 0038  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 9D14                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 003E                                __ptext10 9746  
                              __ptext11 9B76                                __ptext20 42DC  
                              __ptext12 976E                                __ptext21 8D48  
                              __ptext13 6F8C                                __ptext30 94AA  
                              __ptext22 9B94                                __ptext14 86E6  
                              __ptext31 7AB6                                __ptext23 64F8  
                              __ptext15 7DDE                                __ptext40 532E  
                              __ptext32 94E0                                __ptext24 9A3C  
                              __ptext16 88A0                                __ptext41 8DAA  
                              __ptext33 8F7A                                __ptext25 9DA2  
                              __ptext17 9796                                __ptext50 0000  
                              __ptext42 83B0                                __ptext34 9C0C  
                              __ptext26 62E6                                __ptext18 9D06  
                              __ptext51 8A3C                                __ptext43 1244  
                              __ptext35 8E6A                                __ptext27 7510  
                              __ptext19 82F8                                __ptext60 3D62  
                              __ptext52 95DE                                __ptext44 4C08  
                              __ptext36 8506                                __ptext28 7CD4  
                              __ptext61 788A                                __ptext53 80A4  
                              __ptext45 89B8                                __ptext37 9DA8  
                              __ptext29 966E                                __ptext70 864E  
                              __ptext62 73C2                                __ptext54 4FC2  
                              __ptext46 95AE                                __ptext38 9DAE  
                              __ptext71 7766                                __ptext63 4788  
                              __ptext55 6C84                                __ptext47 92AE  
                              __ptext39 877C                                __ptext80 9C5E  
                              __ptext72 9C28                                __ptext64 9150  
                              __ptext56 6E1A                                __ptext48 68FC  
                              __ptext81 9D14                                __ptext73 845C  
                              __ptext65 60A6                                __ptext57 9108  
                              __ptext49 58F4                                __ptext90 561A  
                              __ptext82 92F2                                __ptext74 5E32  
                              __ptext66 5BB2                                __ptext58 70FC  
                              __ptext91 9DB4                                __ptext83 9472  
                              __ptext75 8FCC                                __ptext67 8930  
                              __ptext59 8178                                __ptext92 9B14  
                              __ptext84 97BE                                __ptext76 960E  
                              __ptext68 79A2                                __ptext93 6AC4  
                              __ptext85 9334                                __ptext77 9BB2  
                              __ptext69 85AC                                __ptext94 9196  
                              __ptext86 9D82                                __ptext78 9CF6  
                              __ptext95 2E62                                __ptext87 9D8A  
                              __ptext79 9BD0                                __ptext96 2638  
                              __ptext88 9374                                __ptext97 90BE  
                              __ptext89 9D92                                __ptext98 8E0C  
                              __ptext99 97E6                        __size_of_isupper 0030  
                              us1032999 4C88                                us1019999 5906  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 845C                    __end_of_Volts_to_SOC 877C  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 08B6                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0038  
                 __end_of_init_port_dma 95AE                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00B5  
                             stoa@F1166 01D3                      ??_DMA1_DMASCNT_ISR 003E  
          __end_of_ADCC_StartConversion 9CF6                                _spi_link 0089  
                              _wdtdelay 8E6A              __end_of_UART2_Transmit_ISR 96F4  
                              _vfprintf 83B0                __end_of_convert_adc_data 83B0  
            __end_of_PWM8_LoadDutyValue 9334    __end_of_TMR3_DefaultInterruptHandler 9DC6  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler 9DC4  
  __end_of_INT1_DefaultInterruptHandler 9DC4   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler 9DC2                      _send_port_data_dma 901E  
                         ??_Default_ISR 0038                             _uart1RxHead 0037  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0031  
                           _uart1RxTail 0036                          _get_raw_result 9B94  
                           _uart2TxHead 0034                             _uart2RxTail 0030  
                           _uart2TxTail 0033                            _wait_lcd_set 9DA8  
                      Volts_to_SOC@slot 002D                      _EXT_INT_Initialize 954A  
  __end_of_TMR6_DefaultInterruptHandler 90BE   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler 9070    __end_of_ADCC_DefaultInterruptHandler 9DCA  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 9DC8  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 971E          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 9D06                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 85AC                   __end_of_mode_lamp_dim 9C76  
               __end_of_adc_int_handler 9DCC                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd 7BC6  
                _uart2TxBufferRemaining 0032                      __end_of_static_soc 9A3C  
                    __end_of_start_bsoc 9B36                          _FVR_Initialize 9D9A  
                __end_of_get_raw_result 9BB2                        _send_lcd_cmd_dma 8F7A  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0029  
      __end_of_INT1_SetInterruptHandler 98FE               __size_of_UART1_Initialize 0046  
                      ??_DMA1_DMAOR_ISR 003E               __end_of_send_lcd_cmd_long 9746  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR 9DC2  
        __end_of_PIN_MANAGER_Initialize 88A0               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 763E                 _eaDogM_WriteStringAtPos 94E0  
                         _get_vterm_ptr 966E                          _check_adc_scan 9D92  
             __size_of_UART2_Initialize 005E  
